# libguestfs
# Copyright (C) 2009 Red Hat Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

include $(top_srcdir)/subdir-rules.mk

ACLOCAL_AMFLAGS = -I m4

SUBDIRS = gnulib/lib hivex src daemon appliance fish po examples images \
	gnulib/tests capitests regressions test-tool

# NB: Must build inspector directory after perl and before ocaml.
# We could relax this if we combined the inspector_generator with
# the ordinary generator, but that brings other problems.
if HAVE_PERL
SUBDIRS += perl
endif

if HAVE_INSPECTOR
SUBDIRS += inspector
endif
if HAVE_TOOLS
SUBDIRS += tools
endif

if HAVE_FUSE
SUBDIRS += fuse
endif

if HAVE_OCAML
SUBDIRS += ocaml ocaml/examples
endif
if HAVE_PYTHON
SUBDIRS += python
endif
if HAVE_RUBY
SUBDIRS += ruby
endif
if HAVE_JAVA
SUBDIRS += java
endif
if HAVE_HASKELL
SUBDIRS += haskell
endif

generator_built = \
	guestfs-actions.pod \
	guestfs-availability.pod \
	guestfs-structs.pod \
	guestfish-actions.pod

EXTRA_DIST = \
	$(generator_built) \
	guestfs.pod \
	guestfish.pod \
	html/pod.css \
	HACKING TODO \
	libguestfs.pc libguestfs.pc.in \
	recipes/LICENSE \
	recipes/README \
	recipes/*.html \
	recipes/*.sh \
	recipes/*.example \
	html/recipes.css \
	make-recipes.sh \
	contrib/README \
	bindtests \
	libguestfs.3

# Manual pages.
# guestfs-actions.pod, guestfs-availability.pod and guestfs-structs
# are autogenerated.  There is no include mechanism for POD, so we
# have to do it by hand.

man_MANS = guestfs.3 libguestfs.3 guestfish.1

guestfs.3: guestfs.pod \
		guestfs-actions.pod \
		guestfs-availability.pod \
		guestfs-structs.pod
	sed \
	  -e '/@ACTIONS@/rguestfs-actions.pod' \
	  -e 's/@ACTIONS@//' \
	  -e '/@AVAILABILITY@/rguestfs-availability.pod' \
	  -e 's/@AVAILABILITY@//' \
	  -e '/@STRUCTS@/rguestfs-structs.pod' \
	  -e 's/@STRUCTS@//' \
	  < $< | \
	$(POD2MAN) \
	  --section 3 \
	  -c "Virtualization Support" \
	  --name "guestfs" \
	  --release "$(PACKAGE_NAME)-$(PACKAGE_VERSION)" \
	  > $@

guestfish.1: guestfish.pod guestfish-actions.pod
	sed \
	  -e '/@ACTIONS@/rguestfish-actions.pod' -e 's/@ACTIONS@//' \
	  < $< | \
	$(POD2MAN) \
	  --section 1 \
	  -c "Virtualization Support" \
	  --name "guestfish" \
	  --release "$(PACKAGE_NAME)-$(PACKAGE_VERSION)" \
	  > $@

noinst_DATA = html/guestfs.3.html html/guestfish.1.html

html/guestfs.3.html: guestfs.pod \
		guestfs-actions.pod \
		guestfs-availability.pod \
		guestfs-structs.pod
	mkdir -p html
	sed \
	  -e '/@ACTIONS@/rguestfs-actions.pod' \
	  -e 's/@ACTIONS@//' \
	  -e '/@AVAILABILITY@/rguestfs-availability.pod' \
	  -e 's/@AVAILABILITY@//' \
	  -e '/@STRUCTS@/rguestfs-structs.pod' \
	  -e 's/@STRUCTS@//' \
	  < $< | \
	pod2html \
	  --css 'pod.css' \
	  --title "libguestfs API documentation" \
	  --htmldir html \
	  --outfile $@

html/guestfish.1.html: guestfish.pod guestfish-actions.pod
	mkdir -p html
	sed \
	  -e '/@ACTIONS@/rguestfish-actions.pod' -e 's/@ACTIONS@//' \
	  < $< | \
	pod2html \
	  --css 'pod.css' \
	  --title "guestfish, libguestfs filesystem interactive shell" \
	  --htmldir html \
	  --outfile $@

# Recipes web page.
html/recipes.html: $(wildcard recipes/*.sh) $(wildcard recipes/*.html) $(wildcard recipes/*.example) Makefile make-recipes.sh
	mkdir -p html
	rm -f $@ $@-t
	sh make-recipes.sh recipes/*.sh > $@-t
	mv $@-t $@

HTMLFILES = \
	html/guestfs.3.html \
	html/guestfish.1.html \
	html/guestmount.1.html \
	html/hivex.3.html \
	html/hivexget.1.html \
	html/hivexml.1.html \
	html/virt-cat.1.html \
	html/virt-df.1.html \
	html/virt-edit.1.html \
	html/virt-inspector.1.html \
	html/virt-list-filesystems.1.html \
	html/virt-ls.1.html \
	html/virt-rescue.1.html \
	html/virt-tar.1.html \
	html/virt-win-reg.1.html \
	html/recipes.html \
	html/pod.css html/recipes.css

TEXTFILES = README TODO HACKING

WEBSITEDIR = $(HOME)/d/redhat/websites/libguestfs

website: $(HTMLFILES) $(TEXTFILES)
	cp $(HTMLFILES) $(WEBSITEDIR)
	for f in $(TEXTFILES); do cp $$f $(WEBSITEDIR)/$$f.txt; done
	cd $(WEBSITEDIR) && \
	date=`date +%F`; \
	sed -e "s/SUBST_VERSION/$(VERSION)/" \
	    -e "s/SUBST_DATE/$$date/" \
	< index.html.in > index.html

# Generate the ChangeLog automatically from the gitlog.

dist-hook:
	$(top_srcdir)/build-aux/gitlog-to-changelog > ChangeLog
	cp ChangeLog $(distdir)/ChangeLog

# Update the list of translatable files in po/POTFILES.in.
all-local:
	cd $(srcdir); \
	find $(DIST_SUBDIRS) \
	    -name '*.c' -o -name '*.pl' -o -name '*.pm' -o \
	    -name 'virt-cat' -o \
	    -name 'virt-df' -o \
	    -name 'virt-edit' -o \
	    -name 'virt-inspector' -o \
	    -name 'virt-list-filesystems' -o \
	    -name 'virt-ls' -o \
	    -name 'virt-rescue' -o \
	    -name 'virt-tar' -o \
	    -name 'virt-win-reg' | \
	grep -v '^perl/blib/' | \
	grep -v '^capitests/' | \
	grep -v '^daemon/lib/' | \
	grep -v '^daemon/tests/' | \
	grep -v '^examples/' | \
	grep -v '^gnulib/' | \
	grep -v '^perl/examples/' | \
	grep -v '/guestfs_protocol.c' | \
	grep -v '/rc_protocol.c' | \
	grep -v 'appliance/debian/root' | \
	LC_ALL=C sort | \
	sed 's,^\./,,' > po/POTFILES.in

# Pkgconfig.

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libguestfs.pc

# Make clean.

CLEANFILES = $(fs_DATA) \
	emptydisk \
	pod2htm?.tmp \
	html/*.html \
	guestfs.3 guestfish.1

clean-local:
	rm -rf initramfs
