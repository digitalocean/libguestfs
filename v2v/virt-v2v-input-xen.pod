=head1 NAME

virt-v2v-input-xen - Using virt-v2v to convert guests from Xen

=head1 SYNOPSIS

 export LIBGUESTFS_BACKEND=direct
 virt-v2v -ic 'xen+ssh://root@xen.example.com' GUEST_NAME [-o* options]

=head1 DESCRIPTION

This page documents how to use L<virt-v2v(1)> to convert guests from
RHEL 5 Xen, or SLES and OpenSUSE Xen hosts.

=head1 INPUT FROM XEN

=head2 Set up ssh-agent access to Xen host

Currently you must enable passwordless SSH access to the remote Xen host
from the virt-v2v conversion server.

You must also use ssh-agent, and add your ssh public key to
F</root/.ssh/authorized_keys> (on the Xen host).

After doing this, you should check that passwordless access works
from the virt-v2v server to the Xen host.  For example:

 $ ssh root@xen.example.com
 [ logs straight into the shell, no password is requested ]

Note that password-interactive and Kerberos access are B<not>
supported.  You B<have> to set up ssh access using ssh-agent and
authorized_keys.

With some modern ssh implementations, legacy crypto policies required
to interoperate with RHEL 5 sshd are disabled.  To enable them you may
need to run this command on the conversion server (ie. ssh client),
but read L<update-crypto-policies(8)> first:

 # update-crypto-policies LEGACY

=head2 Test libvirt connection to remote Xen host

Use the L<virsh(1)> command to list the guests on the remote Xen host:

 $ virsh -c xen+ssh://root@xen.example.com list --all
  Id    Name                           State
 ----------------------------------------------------
  0     Domain-0                       running
  -     rhel49-x86_64-pv               shut off

You should also try dumping the metadata from any guest on your
server, like this:

 $ virsh -c xen+ssh://root@xen.example.com dumpxml rhel49-x86_64-pv
 <domain type='xen'>
   <name>rhel49-x86_64-pv</name>
   [...]
 </domain>

B<If the above commands do not work, then virt-v2v is not going to
work either>.  Fix your libvirt configuration or the remote server
before continuing.

B<If the guest disks are located on a host block device>, then the
conversion will fail.  See L</Xen or ssh conversions from block devices>
below for a workaround.

=head2 Importing a guest

To import a particular guest from a Xen server, do:

 $ LIBGUESTFS_BACKEND=direct \
       virt-v2v -ic 'xen+ssh://root@xen.example.com' \
           rhel49-x86_64-pv \
           -o local -os /var/tmp

where C<rhel49-x86_64-pv> is the name of the guest (which must be shut
down).

In this case the output flags are set to write the converted guest to
a temporary directory as this is just an example, but you can also
write to libvirt or any other supported target.

Setting the L<backend|guestfs(3)/BACKEND> to C<direct> is a temporary
workaround until
L<libvirt bug 1140166|https://bugzilla.redhat.com/1140166> is fixed.

=head2 Xen or ssh conversions from block devices

Currently virt-v2v cannot directly access a Xen guest (or any guest
located remotely over ssh) if that guestâ€™s disks are located on host
block devices.

To tell if a Xen guest uses host block devices, look at the guest XML.
You will see:

  <disk type='block' device='disk'>
    ...
    <source dev='/dev/VG/guest'/>

where C<type='block'>, C<source dev=> and C</dev/...> are all
indications that the disk is located on a host block device.

This happens because the qemu ssh block driver that we use to access
remote disks uses the ssh sftp protocol, and this protocol cannot
correctly detect the size of host block devices.

The workaround is to copy the guest over to the conversion server,
using the separate L<virt-v2v-copy-to-local(1)> tool, followed by
running virt-v2v.  You will need sufficient space on the conversion
server to store a full copy of the guest.

 virt-v2v-copy-to-local -ic xen+ssh://root@xen.example.com guest
 virt-v2v -i libvirtxml guest.xml -o local -os /var/tmp
 rm guest.xml guest-disk*

=head1 SEE ALSO

L<virt-v2v(1)>.

=head1 AUTHOR

Richard W.M. Jones

=head1 COPYRIGHT

Copyright (C) 2009-2019 Red Hat Inc.
