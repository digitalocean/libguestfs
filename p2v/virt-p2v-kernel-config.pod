=item B<p2v.remote.server=SERVER>

=item B<p2v.server=SERVER>


The name or IP address of the conversion server.

This is always required if you are using the kernel configuration
method.  If virt-p2v does not find this on the kernel command line
then it switches to the GUI (interactive) configuration method.

=item B<p2v.remote.port=PORT>

=item B<p2v.port=PORT>


The SSH port number on the conversion server (default: C<22>).

=item B<p2v.auth.username=USERNAME>

=item B<p2v.username=USERNAME>


The SSH username that we log in as on the conversion server
(default: C<root>).

=item B<p2v.auth.password=PASSWORD>

=item B<p2v.password=PASSWORD>


The SSH password that we use to log in to the conversion server.

The default is to try with no password.  If this fails then virt-p2v
will ask the user to type the password (probably several times during
conversion).

This setting is ignored if C<p2v.auth.identity.url> is present.

=item B<p2v.auth.identity.url=URL>

=item B<p2v.identity=URL>


Provide a URL pointing to an SSH identity (private key) file.  The URL
is interpreted by L<curl(1)> so any URL that curl supports can be used
here, including C<https://> and C<file://>.  For more information on
using SSH identities, see L</SSH IDENTITIES> below.

If C<p2v.auth.identity.url> is present, it overrides C<p2v.auth.password>.
There is no fallback.

=item B<p2v.auth.sudo>

=item B<p2v.sudo>


Use C<p2v.sudo> to tell virt-p2v to use L<sudo(8)> to gain root
privileges on the conversion server after logging in as a non-root
user (default: do not use sudo).

=item B<p2v.guestname=GUESTNAME>

=item B<p2v.name=GUESTNAME>


The name of the guest that is created.  The default is to try to
derive a name from the physical machineâ€™s hostname (if possible) else
use a randomly generated name.

=item B<p2v.vcpus=N>


The number of virtual CPUs to give to the guest.  The default is to
use the same as the number of physical CPUs.

=item B<p2v.memory=n(M|G)>


The size of the guest memory.  You must specify the unit such as
megabytes or gigabytes by using for example C<p2v.memory=1024M> or
C<p2v.memory=1G>.

The default is to use the same amount of RAM as on the physical
machine.

=item B<p2v.cpu.vendor=VENDOR>


The vCPU vendor, eg. "Intel" or "AMD".  The default is to use
the same CPU vendor as the physical machine.

=item B<p2v.cpu.model=MODEL>


The vCPU model, eg. "IvyBridge".  The default is to use the same
CPU model as the physical machine.

=item B<p2v.cpu.sockets=N>


Number of vCPU sockets to use.  The default is to use the same as the
physical machine.

=item B<p2v.cpu.cores=N>


Number of vCPU cores to use.  The default is to use the same as the
physical machine.

=item B<p2v.cpu.threads=N>


Number of vCPU hyperthreads to use.  The default is to use the same
as the physical machine.

=item B<p2v.cpu.acpi>


Whether to enable ACPI in the remote virtual machine.  The default is
to use the same as the physical machine.

=item B<p2v.cpu.apic>


Whether to enable APIC in the remote virtual machine.  The default is
to use the same as the physical machine.

=item B<p2v.cpu.pae>


Whether to enable PAE in the remote virtual machine.  The default is
to use the same as the physical machine.

=item B<p2v.rtc.basis=(unknown|utc|localtime)>


Set the basis of the Real Time Clock in the virtual machine.  The
default is to try to detect this setting from the physical machine.

=item B<p2v.rtc.offset=[+|-]HOURS>


The offset of the Real Time Clock from UTC.  The default is to try
to detect this setting from the physical machine.

=item B<p2v.disks=sda,sdb,...>


A list of physical hard disks to convert, for example:

 p2v.disks=sda,sdc

The default is to convert all local hard disks that are found.

=item B<p2v.removable=sra,srb,...>


A list of removable media to convert.  The default is to create
virtual removable devices for every physical removable device found.
Note that the content of removable media is never copied over.

=item B<p2v.interfaces=em1,...>


A list of network interfaces to convert.  The default is to create
virtual network interfaces for every physical network interface found.

=item B<p2v.network_map=interface:target,...>

=item B<p2v.network=interface:target,...>


Controls how network interfaces are connected to virtual networks on
the target hypervisor.  The default is to connect all network
interfaces to the target C<default> network.

You give a comma-separated list of C<interface:target> pairs, plus
optionally a default target.  For example:

 p2v.network=em1:ovirtmgmt

maps interface C<em1> to target network C<ovirtmgmt>.

 p2v.network=em1:ovirtmgmt,em2:management,other

maps interface C<em1> to C<ovirtmgmt>, and C<em2> to C<management>,
and any other interface that is found to C<other>.

=item B<p2v.output.type=(libvirt|local|...)>

=item B<p2v.o=(libvirt|local|...)>


Set the output mode.  This is the same as the virt-v2v I<-o> option.
See L<virt-v2v(1)/OPTIONS>.

If not specified, the default is C<local>, and the converted guest is
written to F</var/tmp>.

=item B<p2v.output.allocation=(none|sparse|preallocated)>

=item B<p2v.oa=(none|sparse|preallocated)>


Set the output allocation mode.  This is the same as the virt-v2v
I<-oa> option.  See L<virt-v2v(1)/OPTIONS>.

=item B<p2v.output.connection=URI>

=item B<p2v.oc=URI>


Set the output connection libvirt URI.  This is the same as the
virt-v2v I<-oc> option.  See L<virt-v2v(1)/OPTIONS> and
L<http://libvirt.org/uri.html>

=item B<p2v.output.format=(raw|qcow2|...)>

=item B<p2v.of=(raw|qcow2|...)>


Set the output format.  This is the same as the virt-v2v I<-of>
option.  See L<virt-v2v(1)/OPTIONS>.

=item B<p2v.output.storage=STORAGE>

=item B<p2v.os=STORAGE>


Set the output storage.  This is the same as the virt-v2v I<-os>
option.  See L<virt-v2v(1)/OPTIONS>.

If not specified, the default is F</var/tmp> (on the conversion server).

