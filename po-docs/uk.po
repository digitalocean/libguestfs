# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Red Hat Inc.
# This file is distributed under the same license as the libguestfs package.
#
# Translators:
# Yuri Chornoivan <yurchor@ukr.net>, 2011-2014
# Yuri Chornoivan <yurchor@ukr.net>, 2013
msgid ""
msgstr ""
"Project-Id-Version: libguestfs\n"
"Report-Msgid-Bugs-To: libguestfs@redhat.com\n"
"POT-Creation-Date: 2014-10-18 09:25+0200\n"
"PO-Revision-Date: 2014-10-18 08:01+0000\n"
"Last-Translator: rjones <rjones@redhat.com>\n"
"Language-Team: Ukrainian (http://www.transifex.com/projects/p/libguestfs/"
"language/uk/)\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#. type: =head1
#: ../align/virt-alignment-scan.pod:1
#: ../appliance/libguestfs-make-fixed-appliance.pod:1
#: ../builder/virt-builder.pod:8 ../builder/virt-index-validate.pod:1
#: ../cat/virt-cat.pod:1 ../cat/virt-filesystems.pod:1 ../cat/virt-log.pod:1
#: ../cat/virt-ls.pod:1 ../customize/virt-customize.pod:1
#: ../daemon/guestfsd.pod:1 ../df/virt-df.pod:1 ../diff/virt-diff.pod:1
#: ../edit/virt-edit.pod:1 ../erlang/examples/guestfs-erlang.pod:1
#: ../examples/guestfs-examples.pod:1 ../examples/guestfs-faq.pod:1
#: ../examples/guestfs-performance.pod:1 ../examples/guestfs-recipes.pod:8
#: ../examples/guestfs-testing.pod:1 ../fish/guestfish.pod:1
#: ../fish/libguestfs-tools.conf.pod:1 ../fish/virt-copy-in.pod:1
#: ../fish/virt-copy-out.pod:1 ../fish/virt-tar-in.pod:1
#: ../fish/virt-tar-out.pod:1 ../format/virt-format.pod:1
#: ../fuse/guestmount.pod:1 ../fuse/guestunmount.pod:1
#: ../golang/examples/guestfs-golang.pod:1 ../guestfs-release-notes.pod:1
#: ../inspector/virt-inspector.pod:1 ../java/examples/guestfs-java.pod:1
#: ../lua/examples/guestfs-lua.pod:1 ../make-fs/virt-make-fs.pod:1
#: ../ocaml/examples/guestfs-ocaml.pod:1 ../p2v/virt-p2v-make-disk.pod:1
#: ../p2v/virt-p2v-make-kickstart.pod:1 ../p2v/virt-p2v.pod:1
#: ../perl/examples/guestfs-perl.pod:1 ../python/examples/guestfs-python.pod:1
#: ../rescue/virt-rescue.pod:1 ../resize/virt-resize.pod:1
#: ../ruby/examples/guestfs-ruby.pod:1 ../sparsify/virt-sparsify.pod:1
#: ../src/guestfs.pod:1 ../sysprep/virt-sysprep.pod:1
#: ../test-tool/libguestfs-test-tool.pod:1 ../tools/virt-list-filesystems:27
#: ../tools/virt-list-partitions:27 ../tools/virt-tar:28
#: ../tools/virt-win-reg:32 ../v2v/virt-v2v.pod:1
msgid "NAME"
msgstr "НАЗВА"

#. type: textblock
#: ../align/virt-alignment-scan.pod:3
msgid "virt-alignment-scan - Check alignment of virtual machine partitions"
msgstr ""
"virt-alignment-scan — перевірити вирівнювання розділів віртуальної машини"

#. type: =head1
#: ../align/virt-alignment-scan.pod:5
#: ../appliance/libguestfs-make-fixed-appliance.pod:5
#: ../builder/virt-builder.pod:12 ../builder/virt-index-validate.pod:5
#: ../cat/virt-cat.pod:5 ../cat/virt-filesystems.pod:5 ../cat/virt-log.pod:5
#: ../cat/virt-ls.pod:5 ../customize/virt-customize.pod:5
#: ../daemon/guestfsd.pod:5 ../df/virt-df.pod:5 ../diff/virt-diff.pod:5
#: ../edit/virt-edit.pod:5 ../erlang/examples/guestfs-erlang.pod:5
#: ../examples/guestfs-examples.pod:5 ../fish/guestfish.pod:5
#: ../fish/libguestfs-tools.conf.pod:5 ../fish/virt-copy-in.pod:5
#: ../fish/virt-copy-out.pod:5 ../fish/virt-tar-in.pod:5
#: ../fish/virt-tar-out.pod:5 ../format/virt-format.pod:5
#: ../fuse/guestmount.pod:5 ../fuse/guestunmount.pod:5
#: ../golang/examples/guestfs-golang.pod:5 ../inspector/virt-inspector.pod:5
#: ../java/examples/guestfs-java.pod:5 ../lua/examples/guestfs-lua.pod:5
#: ../make-fs/virt-make-fs.pod:5 ../ocaml/examples/guestfs-ocaml.pod:5
#: ../p2v/virt-p2v-make-disk.pod:5 ../p2v/virt-p2v-make-kickstart.pod:5
#: ../p2v/virt-p2v.pod:5 ../perl/examples/guestfs-perl.pod:5
#: ../python/examples/guestfs-python.pod:5 ../rescue/virt-rescue.pod:5
#: ../resize/virt-resize.pod:5 ../ruby/examples/guestfs-ruby.pod:5
#: ../sparsify/virt-sparsify.pod:5 ../src/guestfs.pod:5
#: ../sysprep/virt-sysprep.pod:5 ../test-tool/libguestfs-test-tool.pod:5
#: ../tools/virt-list-filesystems:31 ../tools/virt-list-partitions:31
#: ../tools/virt-tar:32 ../tools/virt-win-reg:36 ../v2v/virt-v2v.pod:5
msgid "SYNOPSIS"
msgstr "КОРОТКИЙ ОПИС"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:7
#, no-wrap
msgid ""
" virt-alignment-scan [--options] -d domname\n"
"\n"
msgstr ""
" virt-alignment-scan [--параметри] -d назва_домену\n"
"\n"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:9
#, no-wrap
msgid ""
" virt-alignment-scan [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""
" virt-alignment-scan [--параметри] -a диск.img [-a диск.img ...]\n"
"\n"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:11
#, no-wrap
msgid ""
" virt-alignment-scan [--options]\n"
"\n"
msgstr ""
" virt-alignment-scan [--параметри]\n"
"\n"

#. type: =head1
#: ../align/virt-alignment-scan.pod:13
#: ../appliance/libguestfs-make-fixed-appliance.pod:11
#: ../builder/virt-builder.pod:32 ../builder/virt-index-validate.pod:9
#: ../cat/virt-cat.pod:17 ../cat/virt-filesystems.pod:11
#: ../cat/virt-log.pod:11 ../cat/virt-ls.pod:17
#: ../customize/virt-customize.pod:13 ../daemon/guestfsd.pod:9
#: ../df/virt-df.pod:23 ../diff/virt-diff.pod:11 ../edit/virt-edit.pod:25
#: ../erlang/examples/guestfs-erlang.pod:14
#: ../examples/guestfs-examples.pod:17 ../examples/guestfs-performance.pod:5
#: ../examples/guestfs-recipes.pod:12 ../examples/guestfs-testing.pod:5
#: ../fish/guestfish.pod:28 ../fish/libguestfs-tools.conf.pod:15
#: ../fish/virt-copy-in.pod:17 ../fish/virt-copy-out.pod:11
#: ../fish/virt-tar-in.pod:19 ../fish/virt-tar-out.pod:13
#: ../format/virt-format.pod:9 ../fuse/guestmount.pod:18
#: ../fuse/guestunmount.pod:11 ../golang/examples/guestfs-golang.pod:24
#: ../inspector/virt-inspector.pod:17 ../java/examples/guestfs-java.pod:19
#: ../lua/examples/guestfs-lua.pod:14 ../make-fs/virt-make-fs.pod:13
#: ../ocaml/examples/guestfs-ocaml.pod:23 ../p2v/virt-p2v-make-disk.pod:9
#: ../p2v/virt-p2v-make-kickstart.pod:9 ../p2v/virt-p2v.pod:11
#: ../perl/examples/guestfs-perl.pod:17
#: ../python/examples/guestfs-python.pod:12 ../rescue/virt-rescue.pod:29
#: ../resize/virt-resize.pod:11 ../ruby/examples/guestfs-ruby.pod:13
#: ../sparsify/virt-sparsify.pod:11 ../src/guestfs.pod:22
#: ../sysprep/virt-sysprep.pod:11 ../test-tool/libguestfs-test-tool.pod:9
#: ../tools/virt-list-filesystems:42 ../tools/virt-list-partitions:42
#: ../tools/virt-tar:74 ../tools/virt-win-reg:60 ../v2v/virt-v2v.pod:18
msgid "DESCRIPTION"
msgstr "ОПИС"

#. type: textblock
#: ../align/virt-alignment-scan.pod:15
msgid ""
"When older operating systems install themselves, the partitioning tools "
"place partitions at a sector misaligned with the underlying storage "
"(commonly the first partition starts on sector C<63>).  Misaligned "
"partitions can result in an operating system issuing more I/O than should be "
"necessary."
msgstr ""
"Під час встановлення застарілих операційних систем засоби розподілу диска "
"можуть розташувати розділ на секторі з помилковим вирівнюванням відносно "
"системи зберігання даних (типово, перший розділ починається з сектора "
"C<63>). Розділи з помилковим вирівнюванням можуть призвести до неоптимальної "
"кількості запитів щодо виведення та введення даних від операційної системи."

#. type: textblock
#: ../align/virt-alignment-scan.pod:21
msgid ""
"The virt-alignment-scan tool checks the alignment of partitions in virtual "
"machines and disk images and warns you if there are alignment problems."
msgstr ""
"Програма virt-alignment-scan виконує перевірку вирівнювання розділів у "
"віртуальних машинах та образів дисків і повідомляє вам, якщо буде виявлено "
"помилки вирівнювання."

#. type: textblock
#: ../align/virt-alignment-scan.pod:25
msgid ""
"Currently there is no virt tool for fixing alignment problems.  You can only "
"reinstall the guest operating system.  The following NetApp document "
"summarises the problem and possible solutions: L<http://media.netapp.com/"
"documents/tr-3747.pdf>"
msgstr ""
"У поточній версії не передбачено програми для виправлення помилок, "
"пов’язаних з вирівнюванням. Ви можете лише перевстановити гостьову "
"операційну систему. У цьому документі можна знайти короткі описи помилок та "
"можливі шляхи усування цих помилок: L<http://media.netapp.com/documents/"
"tr-3747.pdf>"

#. type: =head1
#: ../align/virt-alignment-scan.pod:30
msgid "OUTPUT"
msgstr "ВИВЕДЕННЯ"

#. type: textblock
#: ../align/virt-alignment-scan.pod:32
msgid "To run this tool on a disk image directly, use the I<-a> option:"
msgstr ""
"Щоб запустити цю програму безпосередньо для образу диска, скористайтеся "
"параметром I<-a>:"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:34
#, no-wrap
msgid ""
" $ virt-alignment-scan -a winxp.img\n"
" /dev/sda1        32256          512    bad (alignment < 4K)\n"
"\n"
msgstr ""
" $ virt-alignment-scan -a winxp.img\n"
" /dev/sda1        32256          512    bad (alignment < 4K)\n"
"\n"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:37
#, no-wrap
msgid ""
" $ virt-alignment-scan -a fedora16.img\n"
" /dev/sda1      1048576         1024K   ok\n"
" /dev/sda2      2097152         2048K   ok\n"
" /dev/sda3    526385152         2048K   ok\n"
"\n"
msgstr ""
" $ virt-alignment-scan -a fedora16.img\n"
" /dev/sda1      1048576         1024K   ok\n"
" /dev/sda2      2097152         2048K   ok\n"
" /dev/sda3    526385152         2048K   ok\n"
"\n"

#. type: textblock
#: ../align/virt-alignment-scan.pod:42
msgid ""
"To run the tool on a guest known to libvirt, use the I<-d> option and "
"possibly the I<-c> option:"
msgstr ""
"Щоб запустити програму на гостьовій системі, відомій libvirt, скористайтеся "
"параметром I<-d> і, можливо, параметром I<-c>:"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:45
#, no-wrap
msgid ""
" # virt-alignment-scan -d RHEL5\n"
" /dev/sda1        32256          512    bad (alignment < 4K)\n"
" /dev/sda2    106928640          512    bad (alignment < 4K)\n"
"\n"
msgstr ""
" # virt-alignment-scan -d RHEL5\n"
" /dev/sda1        32256          512    bad (alignment < 4K)\n"
" /dev/sda2    106928640          512    bad (alignment < 4K)\n"
"\n"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:49
#, no-wrap
msgid ""
" $ virt-alignment-scan -c qemu:///system -d Win7TwoDisks\n"
" /dev/sda1      1048576         1024K   ok\n"
" /dev/sda2    105906176         1024K   ok\n"
" /dev/sdb1        65536           64K   ok\n"
"\n"
msgstr ""
" $ virt-alignment-scan -c qemu:///system -d Win7TwoDisks\n"
" /dev/sda1      1048576         1024K   ok\n"
" /dev/sda2    105906176         1024K   ok\n"
" /dev/sdb1        65536           64K   ok\n"
"\n"

#. type: textblock
#: ../align/virt-alignment-scan.pod:54
msgid ""
"Run virt-alignment-scan without any I<-a> or I<-d> options to scan all "
"libvirt domains."
msgstr ""
"Щоб виконати сканування всіх доменів libvirt, віддайте команду virt-"
"alignment-scan без параметрів I<-a> та I<-d>."

#. type: verbatim
#: ../align/virt-alignment-scan.pod:57
#, no-wrap
msgid ""
" # virt-alignment-scan\n"
" F16x64:/dev/sda1      1048576         1024K   ok\n"
" F16x64:/dev/sda2      2097152         2048K   ok\n"
" F16x64:/dev/sda3    526385152         2048K   ok\n"
"\n"
msgstr ""
" # virt-alignment-scan\n"
" F16x64:/dev/sda1      1048576         1024K   ok\n"
" F16x64:/dev/sda2      2097152         2048K   ok\n"
" F16x64:/dev/sda3    526385152         2048K   ok\n"
"\n"

#. type: textblock
#: ../align/virt-alignment-scan.pod:62
msgid ""
"The output consists of 4 or more whitespace-separated columns.  Only the "
"first 4 columns are significant if you want to parse this from a program.  "
"The columns are:"
msgstr ""
"Дані буде виведено у форматі 4 або більшої кількості стовпчиків, "
"відокремлених пробілами. Якщо ви маєте намір обробляти ці дані якоюсь "
"програмою, до уваги слід брати лише перші 4 стовпчики. Ось ці стовпчики:"

#. type: =item
#: ../align/virt-alignment-scan.pod:68
msgid "col 1"
msgstr "стовпчик 1"

#. type: textblock
#: ../align/virt-alignment-scan.pod:70
msgid ""
"The device and partition name (eg. C</dev/sda1> meaning the first partition "
"on the first block device)."
msgstr ""
"Назва пристрою і розділу (наприклад, C</dev/sda1> означає перший розділ на "
"першому блоковому пристрої)."

#. type: textblock
#: ../align/virt-alignment-scan.pod:73
msgid ""
"When listing all libvirt domains (no I<-a> or I<-d> option given) this "
"column is prefixed by the libvirt name or UUID (if I<--uuid> is given).  eg: "
"C<WinXP:/dev/sda1>"
msgstr ""
"У пунктах списків всіх доменів libvirt (без вказаного параметра I<-a> або I<-"
"d>) записи у цьому стовпчику матимуть префікс назви libvirt або UUID (якщо "
"вказано I<--uuid>). Приклад: C<WinXP:/dev/sda1>"

#. type: =item
#: ../align/virt-alignment-scan.pod:77
msgid "col 2"
msgstr "стовпчик 2"

#. type: textblock
#: ../align/virt-alignment-scan.pod:79
msgid "the start of the partition in bytes"
msgstr "позиція початку розділу у байтах"

#. type: =item
#: ../align/virt-alignment-scan.pod:81
msgid "col 3"
msgstr "стовпчик 3"

#. type: textblock
#: ../align/virt-alignment-scan.pod:83
msgid "the alignment in bytes or Kbytes (eg. C<512> or C<4K>)"
msgstr "вирівнювання у байтах або кілобайтах (наприклад C<512> або C<4K>)"

#. type: =item
#: ../align/virt-alignment-scan.pod:85
msgid "col 4"
msgstr "стовпчик 4"

#. type: textblock
#: ../align/virt-alignment-scan.pod:87
msgid ""
"C<ok> if the alignment is best for performance, or C<bad> if the alignment "
"can cause performance problems"
msgstr ""
"C<ok>, якщо вирівнювання є оптимальним з огляду на швидкодію, або C<bad>, "
"якщо вирівнювання може призвести до проблем зі швидкодією"

#. type: =item
#: ../align/virt-alignment-scan.pod:90
msgid "cols 5+"
msgstr "стовпчик 5 і далі"

#. type: textblock
#: ../align/virt-alignment-scan.pod:92
msgid "optional free-text explanation."
msgstr "додаткові пояснення у довільному форматі."

#. type: textblock
#: ../align/virt-alignment-scan.pod:96
msgid ""
"The exit code from the program changes depending on whether poorly aligned "
"partitions were found.  See L</EXIT STATUS> below."
msgstr ""
"Код виходу програми залежить від того, чи буде знайдено розділи з помилковим "
"вирівнюванням.  Див. розділ L</СТАН ВИХОДУ> нижче."

#. type: textblock
#: ../align/virt-alignment-scan.pod:99
msgid "If you just want the exit code with no output, use the I<-q> option."
msgstr ""
"Якщо вам потрібен лише код виходу без виведення даних, скористайтеся "
"параметром I<-q>."

#. type: =head1
#: ../align/virt-alignment-scan.pod:101
#: ../appliance/libguestfs-make-fixed-appliance.pod:97
#: ../builder/virt-builder.pod:174 ../builder/virt-index-validate.pod:19
#: ../cat/virt-cat.pod:51 ../cat/virt-filesystems.pod:89
#: ../cat/virt-log.pod:34 ../cat/virt-ls.pod:249
#: ../customize/virt-customize.pod:27 ../daemon/guestfsd.pod:43
#: ../df/virt-df.pod:71 ../diff/virt-diff.pod:35 ../edit/virt-edit.pod:60
#: ../fish/guestfish.pod:152 ../fish/virt-copy-in.pod:43
#: ../fish/virt-copy-out.pod:32 ../fish/virt-tar-in.pod:40
#: ../fish/virt-tar-out.pod:34 ../format/virt-format.pod:57
#: ../fuse/guestmount.pod:159 ../fuse/guestunmount.pod:70
#: ../inspector/virt-inspector.pod:52 ../make-fs/virt-make-fs.pod:117
#: ../p2v/virt-p2v-make-disk.pod:49 ../p2v/virt-p2v-make-kickstart.pod:133
#: ../p2v/virt-p2v.pod:430 ../rescue/virt-rescue.pod:113
#: ../resize/virt-resize.pod:266 ../sparsify/virt-sparsify.pod:114
#: ../sysprep/virt-sysprep.pod:38 ../test-tool/libguestfs-test-tool.pod:34
#: ../tools/virt-list-filesystems:52 ../tools/virt-list-partitions:53
#: ../tools/virt-tar:100 ../tools/virt-win-reg:93 ../v2v/virt-v2v.pod:147
msgid "OPTIONS"
msgstr "ПАРАМЕТРИ"

#. type: =item
#: ../align/virt-alignment-scan.pod:105
#: ../appliance/libguestfs-make-fixed-appliance.pod:101
#: ../builder/virt-builder.pod:178 ../builder/virt-index-validate.pod:62
#: ../cat/virt-cat.pod:55 ../cat/virt-filesystems.pod:93
#: ../cat/virt-log.pod:38 ../cat/virt-ls.pod:253
#: ../customize/virt-customize.pod:31 ../daemon/guestfsd.pod:49
#: ../df/virt-df.pod:75 ../diff/virt-diff.pod:39 ../edit/virt-edit.pod:64
#: ../fish/guestfish.pod:156 ../format/virt-format.pod:61
#: ../fuse/guestmount.pod:240 ../fuse/guestunmount.pod:79
#: ../inspector/virt-inspector.pod:56 ../make-fs/virt-make-fs.pod:121
#: ../p2v/virt-p2v-make-disk.pod:53 ../p2v/virt-p2v-make-kickstart.pod:137
#: ../p2v/virt-p2v.pod:434 ../rescue/virt-rescue.pod:117
#: ../resize/virt-resize.pod:270 ../sparsify/virt-sparsify.pod:118
#: ../sysprep/virt-sysprep.pod:42 ../test-tool/libguestfs-test-tool.pod:38
#: ../tools/virt-list-filesystems:60 ../tools/virt-list-partitions:61
#: ../tools/virt-tar:108 ../tools/virt-win-reg:101 ../v2v/virt-v2v.pod:151
msgid "B<--help>"
msgstr "B<--help>"

#. type: textblock
#: ../align/virt-alignment-scan.pod:107 ../cat/virt-cat.pod:57
#: ../cat/virt-filesystems.pod:95 ../cat/virt-log.pod:40
#: ../cat/virt-ls.pod:255 ../customize/virt-customize.pod:33
#: ../daemon/guestfsd.pod:51 ../df/virt-df.pod:77 ../diff/virt-diff.pod:41
#: ../edit/virt-edit.pod:66 ../format/virt-format.pod:63
#: ../inspector/virt-inspector.pod:58 ../make-fs/virt-make-fs.pod:123
#: ../rescue/virt-rescue.pod:119 ../sysprep/virt-sysprep.pod:44
#: ../tools/virt-list-filesystems:62 ../tools/virt-list-partitions:63
#: ../tools/virt-tar:110 ../tools/virt-win-reg:103
msgid "Display brief help."
msgstr "Показати коротку довідку."

#. type: =item
#: ../align/virt-alignment-scan.pod:109 ../cat/virt-cat.pod:59
#: ../cat/virt-filesystems.pod:97 ../cat/virt-log.pod:42
#: ../cat/virt-ls.pod:257 ../customize/virt-customize.pod:35
#: ../df/virt-df.pod:79 ../diff/virt-diff.pod:43 ../edit/virt-edit.pod:68
#: ../format/virt-format.pod:65 ../inspector/virt-inspector.pod:60
#: ../rescue/virt-rescue.pod:121 ../sysprep/virt-sysprep.pod:46
msgid "B<-a> file"
msgstr "B<-a> файл"

#. type: =item
#: ../align/virt-alignment-scan.pod:111 ../cat/virt-cat.pod:61
#: ../cat/virt-filesystems.pod:99 ../cat/virt-log.pod:44
#: ../cat/virt-ls.pod:259 ../customize/virt-customize.pod:37
#: ../df/virt-df.pod:81 ../diff/virt-diff.pod:45 ../edit/virt-edit.pod:70
#: ../format/virt-format.pod:67 ../inspector/virt-inspector.pod:62
#: ../rescue/virt-rescue.pod:123 ../sysprep/virt-sysprep.pod:48
msgid "B<--add> file"
msgstr "B<--add> файл"

#. type: textblock
#: ../align/virt-alignment-scan.pod:113 ../customize/virt-customize.pod:39
#: ../sysprep/virt-sysprep.pod:50
msgid "Add I<file> which should be a disk image from a virtual machine."
msgstr "Додати I<файл>, який має бути образом диска з віртуальної машини."

#. type: textblock
#: ../align/virt-alignment-scan.pod:115 ../cat/virt-cat.pod:67
#: ../cat/virt-filesystems.pod:105 ../cat/virt-log.pod:50
#: ../cat/virt-ls.pod:265 ../df/virt-df.pod:87 ../diff/virt-diff.pod:51
#: ../edit/virt-edit.pod:76 ../fish/guestfish.pod:178
#: ../format/virt-format.pod:71 ../fuse/guestmount.pod:169
#: ../inspector/virt-inspector.pod:68 ../rescue/virt-rescue.pod:129
msgid ""
"The format of the disk image is auto-detected.  To override this and force a "
"particular format use the I<--format=..> option."
msgstr ""
"Формат образу диска визначається автоматично. Щоб перевизначити його і "
"примусово використати певний формат, скористайтеся параметром I<--format=..>."

#. type: =item
#: ../align/virt-alignment-scan.pod:118 ../cat/virt-cat.pod:70
#: ../cat/virt-filesystems.pod:108 ../cat/virt-log.pod:53
#: ../cat/virt-ls.pod:268 ../df/virt-df.pod:90 ../edit/virt-edit.pod:79
#: ../fish/guestfish.pod:185 ../format/virt-format.pod:76
#: ../fuse/guestmount.pod:172 ../rescue/virt-rescue.pod:132
msgid "B<-a URI>"
msgstr "B<-a адреса>"

#. type: =item
#: ../align/virt-alignment-scan.pod:120 ../cat/virt-cat.pod:72
#: ../cat/virt-filesystems.pod:110 ../cat/virt-log.pod:55
#: ../cat/virt-ls.pod:270 ../df/virt-df.pod:92 ../edit/virt-edit.pod:81
#: ../fish/guestfish.pod:187 ../format/virt-format.pod:78
#: ../fuse/guestmount.pod:174 ../rescue/virt-rescue.pod:134
msgid "B<--add URI>"
msgstr "B<--add адреса>"

#. type: textblock
#: ../align/virt-alignment-scan.pod:122 ../cat/virt-cat.pod:74
#: ../cat/virt-filesystems.pod:112 ../cat/virt-log.pod:57
#: ../cat/virt-ls.pod:272 ../df/virt-df.pod:94 ../diff/virt-diff.pod:58
#: ../edit/virt-edit.pod:83 ../format/virt-format.pod:80
#: ../fuse/guestmount.pod:176 ../rescue/virt-rescue.pod:136
msgid "Add a remote disk.  See L<guestfish(1)/ADDING REMOTE STORAGE>."
msgstr ""
"Додати віддалений диск. Див. L<guestfish(1)/ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА>."

#. type: =item
#: ../align/virt-alignment-scan.pod:124 ../cat/virt-cat.pod:76
#: ../cat/virt-filesystems.pod:129 ../cat/virt-log.pod:59
#: ../cat/virt-ls.pod:285 ../customize/virt-customize.pod:72
#: ../df/virt-df.pod:96 ../diff/virt-diff.pod:87 ../rescue/virt-rescue.pod:142
#: ../sysprep/virt-sysprep.pod:62
msgid "B<-c> URI"
msgstr "B<-c> адреса"

#. type: =item
#: ../align/virt-alignment-scan.pod:126 ../cat/virt-cat.pod:78
#: ../cat/virt-filesystems.pod:131 ../cat/virt-log.pod:61
#: ../cat/virt-ls.pod:287 ../customize/virt-customize.pod:74
#: ../df/virt-df.pod:98 ../diff/virt-diff.pod:89 ../rescue/virt-rescue.pod:144
#: ../sysprep/virt-sysprep.pod:64
msgid "B<--connect> URI"
msgstr "B<--connect> адреса"

#. type: textblock
#: ../align/virt-alignment-scan.pod:128 ../cat/virt-cat.pod:80
#: ../cat/virt-filesystems.pod:133 ../cat/virt-log.pod:63
#: ../cat/virt-ls.pod:289 ../customize/virt-customize.pod:76
#: ../df/virt-df.pod:100 ../diff/virt-diff.pod:91 ../edit/virt-edit.pod:103
#: ../inspector/virt-inspector.pod:75 ../rescue/virt-rescue.pod:146
#: ../sysprep/virt-sysprep.pod:66 ../tools/virt-list-filesystems:80
#: ../tools/virt-list-partitions:81 ../tools/virt-tar:128
#: ../tools/virt-win-reg:129
msgid ""
"If using libvirt, connect to the given I<URI>.  If omitted, then we connect "
"to the default libvirt hypervisor."
msgstr ""
"Якщо використовується libvirt, встановити з’єднання з вказаним I<URI>. Якщо "
"пропущено, з’єднання буде встановлено з типовим гіпервізором libvirt."

#. type: textblock
#: ../align/virt-alignment-scan.pod:131 ../cat/virt-cat.pod:83
#: ../cat/virt-filesystems.pod:136 ../cat/virt-log.pod:66
#: ../cat/virt-ls.pod:292 ../customize/virt-customize.pod:79
#: ../df/virt-df.pod:103 ../diff/virt-diff.pod:94
#: ../rescue/virt-rescue.pod:149 ../sysprep/virt-sysprep.pod:69
msgid ""
"If you specify guest block devices directly (I<-a>), then libvirt is not "
"used at all."
msgstr ""
"Якщо вказати блокові пристрої гостьових систем безпосередньо (I<-a>), "
"libvirt не буде використовуватися взагалі."

#. type: =item
#: ../align/virt-alignment-scan.pod:134 ../cat/virt-cat.pod:86
#: ../cat/virt-filesystems.pod:145 ../cat/virt-log.pod:69
#: ../cat/virt-ls.pod:301 ../customize/virt-customize.pod:82
#: ../df/virt-df.pod:112 ../diff/virt-diff.pod:115 ../edit/virt-edit.pod:109
#: ../inspector/virt-inspector.pod:82 ../rescue/virt-rescue.pod:152
#: ../sysprep/virt-sysprep.pod:72
msgid "B<-d> guest"
msgstr "B<-d> гість"

#. type: =item
#: ../align/virt-alignment-scan.pod:136 ../cat/virt-cat.pod:88
#: ../cat/virt-filesystems.pod:147 ../cat/virt-log.pod:71
#: ../cat/virt-ls.pod:303 ../customize/virt-customize.pod:84
#: ../df/virt-df.pod:114 ../diff/virt-diff.pod:117 ../edit/virt-edit.pod:111
#: ../inspector/virt-inspector.pod:84 ../rescue/virt-rescue.pod:154
#: ../sysprep/virt-sysprep.pod:74
msgid "B<--domain> guest"
msgstr "B<--domain> гість"

#. type: textblock
#: ../align/virt-alignment-scan.pod:138 ../cat/virt-cat.pod:90
#: ../cat/virt-filesystems.pod:149 ../cat/virt-log.pod:73
#: ../cat/virt-ls.pod:305 ../customize/virt-customize.pod:86
#: ../df/virt-df.pod:116 ../edit/virt-edit.pod:113
#: ../inspector/virt-inspector.pod:86 ../rescue/virt-rescue.pod:156
#: ../sysprep/virt-sysprep.pod:76
msgid ""
"Add all the disks from the named libvirt guest.  Domain UUIDs can be used "
"instead of names."
msgstr ""
"Додати всі диски з вказаної гостьової системи libvirt. UUID доменів можна "
"використовувати замість назв."

#. type: =item
#: ../align/virt-alignment-scan.pod:141 ../cat/virt-cat.pod:100
#: ../cat/virt-filesystems.pod:174 ../cat/virt-log.pod:83
#: ../cat/virt-ls.pod:322 ../df/virt-df.pod:119 ../diff/virt-diff.pod:138
#: ../edit/virt-edit.pod:138 ../fish/guestfish.pod:234
#: ../format/virt-format.pod:91 ../fuse/guestmount.pod:222
#: ../inspector/virt-inspector.pod:96 ../rescue/virt-rescue.pod:159
msgid "B<--format=raw|qcow2|..>"
msgstr "B<--format=raw|qcow2|..>"

#. type: =item
#: ../align/virt-alignment-scan.pod:143 ../cat/virt-cat.pod:102
#: ../cat/virt-filesystems.pod:176 ../cat/virt-log.pod:85
#: ../cat/virt-ls.pod:324 ../df/virt-df.pod:121 ../diff/virt-diff.pod:140
#: ../edit/virt-edit.pod:140 ../fish/guestfish.pod:236
#: ../format/virt-format.pod:93 ../fuse/guestmount.pod:224
#: ../inspector/virt-inspector.pod:98 ../rescue/virt-rescue.pod:161
msgid "B<--format>"
msgstr "B<--format>"

#. type: textblock
#: ../align/virt-alignment-scan.pod:145 ../cat/virt-cat.pod:104
#: ../cat/virt-filesystems.pod:178 ../cat/virt-log.pod:87
#: ../cat/virt-ls.pod:326 ../df/virt-df.pod:123 ../edit/virt-edit.pod:142
#: ../fish/guestfish.pod:238 ../format/virt-format.pod:95
#: ../fuse/guestmount.pod:226 ../rescue/virt-rescue.pod:163
msgid ""
"The default for the I<-a> option is to auto-detect the format of the disk "
"image.  Using this forces the disk format for I<-a> options which follow on "
"the command line.  Using I<--format> with no argument switches back to auto-"
"detection for subsequent I<-a> options."
msgstr ""
"Типовим значенням для параметра I<-a> є автоматичне визначення формату "
"образу диска. Використання цього параметра примусово визначає значення "
"параметрів I<-a> формату диска у наступному рядку команди. Використання "
"параметра I<--format> без аргументу перемикає програму у режим автоматичного "
"визначення у наступних параметрах I<-a>."

#. type: textblock
#: ../align/virt-alignment-scan.pod:150 ../builder/virt-builder.pod:150
#: ../cat/virt-cat.pod:109 ../cat/virt-filesystems.pod:183
#: ../cat/virt-log.pod:92 ../cat/virt-ls.pod:331
#: ../customize/virt-customize.pod:105 ../df/virt-df.pod:128
#: ../diff/virt-diff.pod:148 ../edit/virt-edit.pod:147
#: ../examples/guestfs-recipes.pod:448 ../fish/guestfish.pod:243
#: ../fish/guestfish.pod:701 ../format/virt-format.pod:100
#: ../inspector/virt-inspector.pod:348 ../rescue/virt-rescue.pod:168
#: ../src/guestfs.pod:4236 ../sysprep/virt-sysprep.pod:158
#: ../sysprep/virt-sysprep.pod:204
msgid "For example:"
msgstr "Приклад:"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:152
#, no-wrap
msgid ""
" virt-alignment-scan --format=raw -a disk.img\n"
"\n"
msgstr ""
" virt-alignment-scan --format=raw -a disk.img\n"
"\n"

#. type: textblock
#: ../align/virt-alignment-scan.pod:154 ../cat/virt-cat.pod:113
#: ../cat/virt-filesystems.pod:187 ../cat/virt-log.pod:96
#: ../cat/virt-ls.pod:335 ../customize/virt-customize.pod:109
#: ../df/virt-df.pod:132 ../diff/virt-diff.pod:152 ../edit/virt-edit.pod:151
#: ../fish/guestfish.pod:247 ../format/virt-format.pod:104
#: ../rescue/virt-rescue.pod:172 ../sysprep/virt-sysprep.pod:162
msgid "forces raw format (no auto-detection) for C<disk.img>."
msgstr ""
"примусове встановлення формату без обробки (без автоматичного визначення) "
"для C<disk.img>."

#. type: verbatim
#: ../align/virt-alignment-scan.pod:156
#, no-wrap
msgid ""
" virt-alignment-scan --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""
" virt-cat --format=raw -a disk.img --format -a another.img file\n"
"\n"

#. type: textblock
#: ../align/virt-alignment-scan.pod:158 ../cat/virt-cat.pod:117
#: ../cat/virt-filesystems.pod:191 ../cat/virt-log.pod:100
#: ../cat/virt-ls.pod:339 ../customize/virt-customize.pod:113
#: ../df/virt-df.pod:136 ../diff/virt-diff.pod:156 ../edit/virt-edit.pod:155
#: ../fish/guestfish.pod:251 ../format/virt-format.pod:108
#: ../rescue/virt-rescue.pod:176 ../sysprep/virt-sysprep.pod:166
msgid ""
"forces raw format (no auto-detection) for C<disk.img> and reverts to auto-"
"detection for C<another.img>."
msgstr ""
"примусове встановлення формату без обробки (без автоматичного визначення) "
"для C<disk.img> і повернення до автоматичного визначення для C<another.img>."

#. type: textblock
#: ../align/virt-alignment-scan.pod:161 ../cat/virt-cat.pod:120
#: ../cat/virt-filesystems.pod:194 ../cat/virt-log.pod:103
#: ../cat/virt-ls.pod:342 ../customize/virt-customize.pod:116
#: ../df/virt-df.pod:139 ../diff/virt-diff.pod:159 ../edit/virt-edit.pod:158
#: ../format/virt-format.pod:111 ../rescue/virt-rescue.pod:179
#: ../sysprep/virt-sysprep.pod:169
msgid ""
"If you have untrusted raw-format guest disk images, you should use this "
"option to specify the disk format.  This avoids a possible security problem "
"with malicious guests (CVE-2010-3851)."
msgstr ""
"Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому "
"форматі, вам слід скористатися цим параметром для визначення формату диска. "
"Таким чином можна уникнути можливих проблем з захистом для сформованих "
"зловмисниками гостьових систем (CVE-2010-3851)."

#. type: =item
#: ../align/virt-alignment-scan.pod:165 ../df/virt-df.pod:162
msgid "B<-P> nr_threads"
msgstr "B<-P> кількість_потоків"

#. type: textblock
#: ../align/virt-alignment-scan.pod:167
msgid ""
"Since libguestfs 1.22, virt-alignment-scan is multithreaded and examines "
"guests in parallel.  By default the number of threads to use is chosen based "
"on the amount of free memory available at the time that virt-alignment-scan "
"is started.  You can force virt-alignment-scan to use at most C<nr_threads> "
"by using the I<-P> option."
msgstr ""
"З версії libguestfs 1.22 у virt-alignment-scan передбачено обробку у "
"декілька потоків і паралельне вивчення гостьових систем. Типово кількість "
"потоків виконання, що використовуються, вибирається на основі доступного "
"обсягу вільної пам’яті на час запуску virt-alignment-scan. Ви можете "
"примусово наказати virt-alignment-scan використовувати не більше за "
"C<кількість_потоків> за допомогою параметра I<-P>."

#. type: textblock
#: ../align/virt-alignment-scan.pod:174 ../df/virt-df.pod:170
msgid ""
"Note that I<-P 0> means to autodetect, and I<-P 1> means to use a single "
"thread."
msgstr ""
"Зауважте, що I<-P 0> означає автоматичне визначення, а I<-P 1> означає "
"використання одного потоку виконання."

#. type: =item
#: ../align/virt-alignment-scan.pod:177 ../customize/virt-customize.pod:178
#: ../fuse/guestunmount.pod:83 ../resize/virt-resize.pod:511
#: ../sparsify/virt-sparsify.pod:243 ../sysprep/virt-sysprep.pod:214
#: ../v2v/virt-v2v.pod:437
msgid "B<-q>"
msgstr "B<-q>"

#. type: =item
#: ../align/virt-alignment-scan.pod:179 ../builder/virt-builder.pod:452
#: ../customize/virt-customize.pod:180 ../fuse/guestunmount.pod:85
#: ../resize/virt-resize.pod:513 ../sparsify/virt-sparsify.pod:245
#: ../sysprep/virt-sysprep.pod:216 ../v2v/virt-v2v.pod:439
msgid "B<--quiet>"
msgstr "B<--quiet>"

#. type: textblock
#: ../align/virt-alignment-scan.pod:181
msgid ""
"Don't produce any output.  Just set the exit code (see L</EXIT STATUS> "
"below)."
msgstr ""
"Не виводити ніяких даних. Просто встановити значення коду виходу (див. L</"
"СТАН ВИХОДУ> нижче)."

#. type: =item
#: ../align/virt-alignment-scan.pod:184 ../cat/virt-filesystems.pod:259
#: ../df/virt-df.pod:173
msgid "B<--uuid>"
msgstr "B<--uuid>"

#. type: textblock
#: ../align/virt-alignment-scan.pod:186 ../df/virt-df.pod:175
msgid ""
"Print UUIDs instead of names.  This is useful for following a guest even "
"when the guest is migrated or renamed, or when two guests happen to have the "
"same name."
msgstr ""
"Виводити UUID замість назв. Корисно для слідкування за гостьовою системою, "
"навіть після перенесення або перейменування, або якщо дві гостьові системи "
"мають однакові назви."

#. type: textblock
#: ../align/virt-alignment-scan.pod:190
msgid ""
"This option only applies when listing all libvirt domains (when no I<-a> or "
"I<-d> options are specified)."
msgstr ""
"Цей параметр застосовується лише для побудови списку всіх доменів libvirt "
"(якщо не вказано параметрів I<-a> і I<-d>)."

#. type: =item
#: ../align/virt-alignment-scan.pod:193 ../builder/virt-builder.pod:488
#: ../cat/virt-cat.pod:165 ../cat/virt-filesystems.pod:265
#: ../cat/virt-log.pod:112 ../cat/virt-ls.pod:455
#: ../customize/virt-customize.pod:190 ../daemon/guestfsd.pod:60
#: ../df/virt-df.pod:183 ../diff/virt-diff.pod:197 ../edit/virt-edit.pod:203
#: ../fish/guestfish.pod:419 ../format/virt-format.pod:153
#: ../fuse/guestmount.pod:359 ../inspector/virt-inspector.pod:116
#: ../make-fs/virt-make-fs.pod:197 ../p2v/virt-p2v.pod:443
#: ../rescue/virt-rescue.pod:238 ../resize/virt-resize.pod:581
#: ../sparsify/virt-sparsify.pod:292 ../sysprep/virt-sysprep.pod:222
#: ../v2v/virt-v2v.pod:520
msgid "B<-v>"
msgstr "B<-v>"

#. type: =item
#: ../align/virt-alignment-scan.pod:195 ../builder/virt-builder.pod:490
#: ../cat/virt-cat.pod:167 ../cat/virt-filesystems.pod:267
#: ../cat/virt-log.pod:114 ../cat/virt-ls.pod:457
#: ../customize/virt-customize.pod:192 ../daemon/guestfsd.pod:62
#: ../df/virt-df.pod:185 ../diff/virt-diff.pod:199 ../edit/virt-edit.pod:205
#: ../fish/guestfish.pod:421 ../format/virt-format.pod:155
#: ../fuse/guestmount.pod:361 ../inspector/virt-inspector.pod:118
#: ../make-fs/virt-make-fs.pod:199 ../p2v/virt-p2v.pod:445
#: ../rescue/virt-rescue.pod:240 ../resize/virt-resize.pod:583
#: ../sparsify/virt-sparsify.pod:294 ../sysprep/virt-sysprep.pod:224
#: ../v2v/virt-v2v.pod:522
msgid "B<--verbose>"
msgstr "B<--verbose>"

#. type: textblock
#: ../align/virt-alignment-scan.pod:197 ../cat/virt-cat.pod:169
#: ../cat/virt-filesystems.pod:269 ../cat/virt-log.pod:116
#: ../cat/virt-ls.pod:459 ../customize/virt-customize.pod:194
#: ../daemon/guestfsd.pod:64 ../df/virt-df.pod:187 ../diff/virt-diff.pod:201
#: ../edit/virt-edit.pod:207 ../format/virt-format.pod:157
#: ../inspector/virt-inspector.pod:120 ../rescue/virt-rescue.pod:242
#: ../sparsify/virt-sparsify.pod:296 ../sysprep/virt-sysprep.pod:226
#: ../v2v/virt-v2v.pod:524
msgid "Enable verbose messages for debugging."
msgstr "Увімкнути докладний показ повідомлень з метою діагностики."

#. type: =item
#: ../align/virt-alignment-scan.pod:199
#: ../appliance/libguestfs-make-fixed-appliance.pod:105
#: ../builder/virt-builder.pod:497 ../builder/virt-index-validate.pod:66
#: ../cat/virt-cat.pod:171 ../cat/virt-filesystems.pod:271
#: ../cat/virt-log.pod:118 ../cat/virt-ls.pod:461
#: ../customize/virt-customize.pod:196 ../df/virt-df.pod:189
#: ../diff/virt-diff.pod:203 ../edit/virt-edit.pod:209
#: ../fish/guestfish.pod:426 ../format/virt-format.pod:159
#: ../fuse/guestmount.pod:365 ../fuse/guestunmount.pod:105
#: ../inspector/virt-inspector.pod:122 ../make-fs/virt-make-fs.pod:203
#: ../p2v/virt-p2v-make-disk.pod:64 ../p2v/virt-p2v-make-kickstart.pod:152
#: ../p2v/virt-p2v.pod:449 ../rescue/virt-rescue.pod:244
#: ../resize/virt-resize.pod:587 ../sparsify/virt-sparsify.pod:298
#: ../sysprep/virt-sysprep.pod:228 ../test-tool/libguestfs-test-tool.pod:59
#: ../v2v/virt-v2v.pod:526
msgid "B<-V>"
msgstr "B<-V>"

#. type: =item
#: ../align/virt-alignment-scan.pod:201
#: ../appliance/libguestfs-make-fixed-appliance.pod:107
#: ../builder/virt-builder.pod:499 ../builder/virt-index-validate.pod:68
#: ../cat/virt-cat.pod:173 ../cat/virt-filesystems.pod:273
#: ../cat/virt-log.pod:120 ../cat/virt-ls.pod:463
#: ../customize/virt-customize.pod:198 ../df/virt-df.pod:191
#: ../diff/virt-diff.pod:205 ../edit/virt-edit.pod:211
#: ../fish/guestfish.pod:428 ../format/virt-format.pod:161
#: ../fuse/guestmount.pod:367 ../fuse/guestunmount.pod:107
#: ../inspector/virt-inspector.pod:124 ../make-fs/virt-make-fs.pod:205
#: ../p2v/virt-p2v-make-disk.pod:66 ../p2v/virt-p2v-make-kickstart.pod:154
#: ../p2v/virt-p2v.pod:451 ../rescue/virt-rescue.pod:246
#: ../resize/virt-resize.pod:589 ../sparsify/virt-sparsify.pod:300
#: ../sysprep/virt-sysprep.pod:230 ../test-tool/libguestfs-test-tool.pod:61
#: ../tools/virt-list-filesystems:68 ../tools/virt-list-partitions:69
#: ../tools/virt-tar:116 ../tools/virt-win-reg:109 ../v2v/virt-v2v.pod:528
msgid "B<--version>"
msgstr "B<--version>"

#. type: textblock
#: ../align/virt-alignment-scan.pod:203 ../builder/virt-builder.pod:501
#: ../builder/virt-index-validate.pod:70 ../cat/virt-cat.pod:175
#: ../cat/virt-filesystems.pod:275 ../cat/virt-log.pod:122
#: ../cat/virt-ls.pod:465 ../customize/virt-customize.pod:200
#: ../df/virt-df.pod:193 ../diff/virt-diff.pod:207 ../edit/virt-edit.pod:213
#: ../format/virt-format.pod:163 ../inspector/virt-inspector.pod:126
#: ../make-fs/virt-make-fs.pod:207 ../p2v/virt-p2v-make-disk.pod:68
#: ../p2v/virt-p2v-make-kickstart.pod:156 ../p2v/virt-p2v.pod:453
#: ../rescue/virt-rescue.pod:248 ../resize/virt-resize.pod:591
#: ../sparsify/virt-sparsify.pod:302 ../sysprep/virt-sysprep.pod:232
#: ../tools/virt-list-filesystems:70 ../tools/virt-list-partitions:71
#: ../tools/virt-tar:118 ../tools/virt-win-reg:111 ../v2v/virt-v2v.pod:530
msgid "Display version number and exit."
msgstr "Показати дані щодо версії і завершити роботу."

#. type: =item
#: ../align/virt-alignment-scan.pod:205 ../builder/virt-builder.pod:503
#: ../cat/virt-cat.pod:177 ../cat/virt-filesystems.pod:285
#: ../cat/virt-log.pod:124 ../cat/virt-ls.pod:467
#: ../customize/virt-customize.pod:202 ../df/virt-df.pod:195
#: ../diff/virt-diff.pod:209 ../edit/virt-edit.pod:215
#: ../fish/guestfish.pod:441 ../format/virt-format.pod:175
#: ../fuse/guestmount.pod:380 ../inspector/virt-inspector.pod:128
#: ../make-fs/virt-make-fs.pod:209 ../rescue/virt-rescue.pod:259
#: ../resize/virt-resize.pod:593 ../sparsify/virt-sparsify.pod:304
#: ../sysprep/virt-sysprep.pod:234 ../tools/virt-tar:155
#: ../v2v/virt-v2v.pod:541
msgid "B<-x>"
msgstr "B<-x>"

#. type: textblock
#: ../align/virt-alignment-scan.pod:207 ../builder/virt-builder.pod:505
#: ../cat/virt-cat.pod:179 ../cat/virt-filesystems.pod:287
#: ../cat/virt-log.pod:126 ../cat/virt-ls.pod:469
#: ../customize/virt-customize.pod:204 ../df/virt-df.pod:197
#: ../diff/virt-diff.pod:211 ../edit/virt-edit.pod:217
#: ../format/virt-format.pod:177 ../inspector/virt-inspector.pod:130
#: ../rescue/virt-rescue.pod:261 ../resize/virt-resize.pod:595
#: ../sparsify/virt-sparsify.pod:306 ../sysprep/virt-sysprep.pod:236
#: ../v2v/virt-v2v.pod:543
msgid "Enable tracing of libguestfs API calls."
msgstr "Увімкнути трасування викликів програмного інтерфейсу libguestfs."

#. type: =head1
#: ../align/virt-alignment-scan.pod:211
msgid "RECOMMENDED ALIGNMENT"
msgstr "РЕКОМЕНДОВАНЕ ВИРІВНЮВАННЯ"

#. type: textblock
#: ../align/virt-alignment-scan.pod:213
msgid ""
"Operating systems older than Windows 2008 and Linux before ca.2010 place the "
"first sector of the first partition at sector 63, with a 512 byte sector "
"size.  This happens because of a historical accident.  Drives have to report "
"a cylinder / head / sector (CHS) geometry to the BIOS.  The geometry is "
"completely meaningless on modern drives, but it happens that the geometry "
"reported always has 63 sectors per track.  The operating system therefore "
"places the first partition at the start of the second \"track\", at sector "
"63."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:222
msgid ""
"When the guest OS is virtualized, the host operating system and hypervisor "
"may prefer accesses aligned to one of:"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:227
msgid "* 512 bytes"
msgstr "* 512 байти"

#. type: textblock
#: ../align/virt-alignment-scan.pod:229
msgid ""
"if the host OS uses local storage directly on hard drive partitions, and the "
"hard drive has 512 byte physical sectors."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:232
msgid "* 4 Kbytes"
msgstr "* 4 кілобайтів"

#. type: textblock
#: ../align/virt-alignment-scan.pod:234
msgid ""
"for local storage on new hard drives with 4Kbyte physical sectors; for file-"
"backed storage on filesystems with 4Kbyte block size; or for some types of "
"network-attached storage."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:238
msgid "* 64 Kbytes"
msgstr "* 64 кілобайтів"

#. type: textblock
#: ../align/virt-alignment-scan.pod:240
msgid ""
"for high-end network-attached storage.  This is the optimal block size for "
"some NetApp hardware."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:243
msgid "* 1 Mbyte"
msgstr "* 1 мегабайт"

#. type: textblock
#: ../align/virt-alignment-scan.pod:245
msgid "see L</1 MB PARTITION ALIGNMENT> below."
msgstr "див. L</ВИРІВНЮВАННЯ РОЗДІЛІВ НА ПОЗНАЧКИ 1 МБ> нижче."

#. type: textblock
#: ../align/virt-alignment-scan.pod:249
msgid ""
"Partitions which are not aligned correctly to the underlying storage cause "
"extra I/O.  For example:"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:252
#, no-wrap
msgid ""
"                       sect#63\n"
"                       ┌──────────────────────────┬ ─ ─ ─ ─\n"
"                       │         guest            │\n"
"                       │    filesystem block      │\n"
"  ─ ┬──────────────────┴──────┬───────────────────┴─────┬ ─ ─\n"
"    │  host block             │  host block             │\n"
"    │                         │                         │\n"
"  ─ ┴─────────────────────────┴─────────────────────────┴ ─ ─\n"
"\n"
msgstr ""
"                       розділ#63\n"
"                       ┌──────────────────────────┬ ─ ─ ─ ─\n"
"                       │         блок             │\n"
"                       │гостьової файлової системи│\n"
"  ─ ┬──────────────────┴──────┬───────────────────┴─────┬ ─ ─\n"
"    │  блок основної системи  │  блок основної системи  │\n"
"    │                         │                         │\n"
"  ─ ┴─────────────────────────┴─────────────────────────┴ ─ ─\n"
"\n"

#. type: textblock
#: ../align/virt-alignment-scan.pod:261
msgid ""
"In this example, each time a 4K guest block is read, two blocks on the host "
"must be accessed (so twice as much I/O is done).  When a 4K guest block is "
"written, two host blocks must first be read, the old and new data combined, "
"and the two blocks written back (4x I/O)."
msgstr ""

#. type: =head2
#: ../align/virt-alignment-scan.pod:266
msgid "LINUX HOST BLOCK AND I/O SIZE"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:268
msgid ""
"New versions of the Linux kernel expose the physical and logical block size, "
"and minimum and recommended I/O size."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:271
msgid "For a typical consumer hard drive with 512 byte sectors:"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:273
#, no-wrap
msgid ""
" $ cat /sys/block/sda/queue/hw_sector_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/physical_block_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/logical_block_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/minimum_io_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/optimal_io_size\n"
" 0\n"
"\n"
msgstr ""
" $ cat /sys/block/sda/queue/hw_sector_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/physical_block_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/logical_block_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/minimum_io_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/optimal_io_size\n"
" 0\n"
"\n"

#. type: textblock
#: ../align/virt-alignment-scan.pod:284
msgid "For a new consumer hard drive with 4Kbyte sectors:"
msgstr "Для нових звичайних жорстких дисків з секторами у 4 кБ:"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:286
#, no-wrap
msgid ""
" $ cat /sys/block/sda/queue/hw_sector_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/physical_block_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/logical_block_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/minimum_io_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/optimal_io_size\n"
" 0\n"
"\n"
msgstr ""
" $ cat /sys/block/sda/queue/hw_sector_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/physical_block_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/logical_block_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/minimum_io_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/optimal_io_size\n"
" 0\n"
"\n"

#. type: textblock
#: ../align/virt-alignment-scan.pod:297
msgid "For a NetApp LUN:"
msgstr "Для NetApp LUN:"

#. type: verbatim
#: ../align/virt-alignment-scan.pod:299
#, no-wrap
msgid ""
" $ cat /sys/block/sdc/queue/logical_block_size\n"
" 512\n"
" $ cat /sys/block/sdc/queue/physical_block_size\n"
" 512\n"
" $ cat /sys/block/sdc/queue/minimum_io_size\n"
" 4096\n"
" $ cat /sys/block/sdc/queue/optimal_io_size\n"
" 65536\n"
"\n"
msgstr ""
" $ cat /sys/block/sdc/queue/logical_block_size\n"
" 512\n"
" $ cat /sys/block/sdc/queue/physical_block_size\n"
" 512\n"
" $ cat /sys/block/sdc/queue/minimum_io_size\n"
" 4096\n"
" $ cat /sys/block/sdc/queue/optimal_io_size\n"
" 65536\n"
"\n"

#. type: textblock
#: ../align/virt-alignment-scan.pod:308
msgid ""
"The NetApp allows 512 byte accesses (but they will be very inefficient), "
"prefers a minimum 4K I/O size, but the optimal I/O size is 64K."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:312
msgid ""
"For detailed information about what these numbers mean, see L<http://docs."
"redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/"
"Storage_Administration_Guide/newstorage-iolimits.html>"
msgstr ""
"Щоб дізнатися більше про призначення цих чисел, ознайомтеся зі сторінкою "
"L<http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/"
"Storage_Administration_Guide/newstorage-iolimits.html>"

#. type: textblock
#: ../align/virt-alignment-scan.pod:315
msgid ""
"[Thanks to Matt Booth for providing 4K drive data.  Thanks to Mike Snitzer "
"for providing NetApp data and additional information.]"
msgstr ""

#. type: =head2
#: ../align/virt-alignment-scan.pod:318
msgid "1 MB PARTITION ALIGNMENT"
msgstr "ВИРІВНЮВАННЯ РОЗДІЛІВ НА ПОЗНАЧКИ 1 МБ"

#. type: textblock
#: ../align/virt-alignment-scan.pod:320
msgid ""
"Microsoft picked 1 MB as the default alignment for all partitions starting "
"with Windows 2008 Server, and Linux has followed this."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:323
msgid ""
"Assuming 512 byte sectors in the guest, you will now see the first partition "
"starting at sector 2048, and subsequent partitions (if any)  will start at a "
"multiple of 2048 sectors."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:327
msgid ""
"1 MB alignment is compatible with all current alignment requirements (4K, "
"64K) and provides room for future growth in physical block sizes."
msgstr ""

#. type: =head2
#: ../align/virt-alignment-scan.pod:330
msgid "SETTING ALIGNMENT"
msgstr "ВСТАНОВЛЕННЯ ВИРІВНЮВАННЯ"

#. type: textblock
#: ../align/virt-alignment-scan.pod:332
msgid ""
"L<virt-resize(1)> can change the alignment of the partitions of some "
"guests.  Currently it can fully align all the partitions of all Windows "
"guests, and it will fix the bootloader where necessary.  For Linux guests, "
"it can align the second and subsequent partitions, so the majority of OS "
"accesses except at boot will be aligned."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:338
msgid ""
"Another way to correct partition alignment problems is to reinstall your "
"guest operating systems.  If you install operating systems from templates, "
"ensure these have correct partition alignment too."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:342
msgid ""
"For older versions of Windows, the following NetApp document contains useful "
"information: L<http://media.netapp.com/documents/tr-3747.pdf>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:345
msgid ""
"For Red Hat Enterprise Linux E<le> 5, use a Kickstart script that contains "
"an explicit C<%pre> section that creates aligned partitions using "
"L<parted(8)>.  Do not use the Kickstart C<part> command.  The NetApp "
"document above contains an example."
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:350
#: ../appliance/libguestfs-make-fixed-appliance.pod:154
#: ../builder/virt-builder.pod:1683 ../builder/virt-index-validate.pod:74
#: ../cat/virt-cat.pod:268 ../cat/virt-filesystems.pod:381
#: ../cat/virt-log.pod:130 ../cat/virt-ls.pod:513
#: ../customize/virt-customize.pod:212 ../daemon/guestfsd.pod:71
#: ../df/virt-df.pod:251 ../diff/virt-diff.pod:243 ../edit/virt-edit.pod:384
#: ../fish/guestfish.pod:1380 ../format/virt-format.pod:181
#: ../fuse/guestmount.pod:410 ../fuse/guestunmount.pod:124
#: ../inspector/virt-inspector.pod:487 ../resize/virt-resize.pod:750
#: ../sparsify/virt-sparsify.pod:428 ../sysprep/virt-sysprep.pod:517
#: ../test-tool/libguestfs-test-tool.pod:170
msgid "EXIT STATUS"
msgstr "СТАН ВИХОДУ"

#. type: textblock
#: ../align/virt-alignment-scan.pod:352
msgid "This program returns:"
msgstr "Ця програма повертає:"

#. type: =item
#: ../align/virt-alignment-scan.pod:356 ../align/virt-alignment-scan.pod:362
#: ../align/virt-alignment-scan.pod:368 ../align/virt-alignment-scan.pod:375
#: ../appliance/libguestfs-make-fixed-appliance.pod:22
#: ../appliance/libguestfs-make-fixed-appliance.pod:28
#: ../appliance/libguestfs-make-fixed-appliance.pod:34
#: ../appliance/libguestfs-make-fixed-appliance.pod:52
#: ../appliance/libguestfs-make-fixed-appliance.pod:73
#: ../builder/virt-builder.pod:781 ../builder/virt-builder.pod:788
#: ../builder/virt-builder.pod:792 ../builder/virt-builder.pod:796
#: ../builder/virt-builder.pod:801 ../builder/virt-builder.pod:805
#: ../builder/virt-builder.pod:809 ../builder/virt-builder.pod:814
#: ../builder/virt-builder.pod:987 ../builder/virt-builder.pod:992
#: ../builder/virt-builder.pod:1540 ../builder/virt-builder.pod:1544
#: ../builder/virt-builder.pod:1548 ../builder/virt-index-validate.pod:32
#: ../builder/virt-index-validate.pod:37 ../builder/virt-index-validate.pod:51
#: ../builder/virt-index-validate.pod:56 ../cat/virt-cat.pod:214
#: ../cat/virt-cat.pod:219 ../cat/virt-cat.pod:224 ../cat/virt-cat.pod:235
#: ../cat/virt-cat.pod:239 ../customize/customize-options.pod:204
#: ../customize/customize-options.pod:208 ../edit/virt-edit.pod:308
#: ../edit/virt-edit.pod:313 ../edit/virt-edit.pod:318
#: ../edit/virt-edit.pod:329 ../edit/virt-edit.pod:333
#: ../examples/guestfs-faq.pod:188 ../examples/guestfs-faq.pod:194
#: ../examples/guestfs-faq.pod:198 ../examples/guestfs-faq.pod:203
#: ../examples/guestfs-faq.pod:763 ../examples/guestfs-faq.pod:769
#: ../examples/guestfs-faq.pod:808 ../examples/guestfs-faq.pod:814
#: ../examples/guestfs-faq.pod:879 ../examples/guestfs-faq.pod:883
#: ../examples/guestfs-faq.pod:887 ../examples/guestfs-faq.pod:891
#: ../examples/guestfs-faq.pod:899 ../examples/guestfs-faq.pod:904
#: ../examples/guestfs-performance.pod:105
#: ../examples/guestfs-performance.pod:111
#: ../examples/guestfs-performance.pod:116
#: ../examples/guestfs-performance.pod:243
#: ../examples/guestfs-performance.pod:248
#: ../examples/guestfs-performance.pod:253
#: ../examples/guestfs-performance.pod:372
#: ../examples/guestfs-performance.pod:376
#: ../examples/guestfs-performance.pod:382
#: ../examples/guestfs-performance.pod:388 ../examples/guestfs-recipes.pod:229
#: ../examples/guestfs-recipes.pod:233 ../examples/guestfs-recipes.pod:237
#: ../examples/guestfs-recipes.pod:263 ../examples/guestfs-recipes.pod:268
#: ../examples/guestfs-recipes.pod:375 ../examples/guestfs-recipes.pod:379
#: ../examples/guestfs-recipes.pod:383 ../examples/guestfs-recipes.pod:387
#: ../examples/guestfs-recipes.pod:391 ../examples/guestfs-testing.pod:67
#: ../examples/guestfs-testing.pod:74 ../examples/guestfs-testing.pod:85
#: ../examples/guestfs-testing.pod:94 ../examples/guestfs-testing.pod:203
#: ../examples/guestfs-testing.pod:207 ../examples/guestfs-testing.pod:211
#: ../fish/guestfish-actions.pod:748 ../fish/guestfish-actions.pod:754
#: ../fish/guestfish-actions.pod:762 ../fish/guestfish-actions.pod:769
#: ../fish/guestfish-actions.pod:776 ../fish/guestfish-actions.pod:2079
#: ../fish/guestfish-actions.pod:2083 ../fish/guestfish-actions.pod:2087
#: ../fish/guestfish-actions.pod:2091 ../fish/guestfish-actions.pod:2099
#: ../fish/guestfish-actions.pod:2103 ../fish/guestfish-actions.pod:2107
#: ../fish/guestfish-actions.pod:2117 ../fish/guestfish-actions.pod:2121
#: ../fish/guestfish-actions.pod:2125 ../fish/guestfish-actions.pod:2239
#: ../fish/guestfish-actions.pod:2243 ../fish/guestfish-actions.pod:2248
#: ../fish/guestfish-actions.pod:2290 ../fish/guestfish-actions.pod:2294
#: ../fish/guestfish-actions.pod:2299 ../fish/guestfish-actions.pod:2858
#: ../fish/guestfish-actions.pod:2865 ../fish/guestfish-actions.pod:2872
#: ../fish/guestfish-actions.pod:3458 ../fish/guestfish-actions.pod:3464
#: ../fish/guestfish-actions.pod:3472 ../fish/guestfish-actions.pod:3479
#: ../fish/guestfish-actions.pod:3486 ../fish/guestfish.pod:474
#: ../fish/guestfish.pod:478 ../fish/guestfish.pod:482
#: ../fish/guestfish.pod:486 ../fish/guestfish.pod:1330
#: ../fish/guestfish.pod:1336 ../fish/libguestfs-tools.conf.pod:22
#: ../fish/libguestfs-tools.conf.pod:26 ../fish/libguestfs-tools.conf.pod:30
#: ../fish/libguestfs-tools.conf.pod:60 ../fish/libguestfs-tools.conf.pod:65
#: ../fish/libguestfs-tools.conf.pod:69 ../fish/libguestfs-tools.conf.pod:75
#: ../golang/examples/guestfs-golang.pod:58
#: ../golang/examples/guestfs-golang.pod:62 ../guestfs-release-notes.pod:737
#: ../guestfs-release-notes.pod:742 ../guestfs-release-notes.pod:1213
#: ../guestfs-release-notes.pod:1217 ../guestfs-release-notes.pod:1221
#: ../guestfs-release-notes.pod:1225 ../guestfs-release-notes.pod:1229
#: ../guestfs-release-notes.pod:1233 ../guestfs-release-notes.pod:1237
#: ../guestfs-release-notes.pod:1242 ../guestfs-release-notes.pod:1246
#: ../guestfs-release-notes.pod:1571 ../guestfs-release-notes.pod:1575
#: ../guestfs-release-notes.pod:1579 ../guestfs-release-notes.pod:1641
#: ../guestfs-release-notes.pod:1645 ../guestfs-release-notes.pod:1649
#: ../guestfs-release-notes.pod:1653 ../guestfs-release-notes.pod:1657
#: ../guestfs-release-notes.pod:1661 ../guestfs-release-notes.pod:1666
#: ../guestfs-release-notes.pod:1670 ../guestfs-release-notes.pod:1674
#: ../guestfs-release-notes.pod:1678 ../guestfs-release-notes.pod:1874
#: ../guestfs-release-notes.pod:1879 ../guestfs-release-notes.pod:1884
#: ../inspector/virt-inspector.pod:505 ../inspector/virt-inspector.pod:509
#: ../p2v/virt-p2v-make-kickstart.pod:55 ../p2v/virt-p2v-make-kickstart.pod:59
#: ../p2v/virt-p2v-make-kickstart.pod:63 ../p2v/virt-p2v-make-kickstart.pod:81
#: ../p2v/virt-p2v-make-kickstart.pod:86 ../p2v/virt-p2v-make-kickstart.pod:90
#: ../resize/virt-resize.pod:371 ../resize/virt-resize.pod:375
#: ../resize/virt-resize.pod:384 ../resize/virt-resize.pod:390
#: ../resize/virt-resize.pod:394 ../sparsify/virt-sparsify.pod:46
#: ../sparsify/virt-sparsify.pod:50 ../sparsify/virt-sparsify.pod:59
#: ../sparsify/virt-sparsify.pod:64 ../sparsify/virt-sparsify.pod:69
#: ../sparsify/virt-sparsify.pod:75 ../sparsify/virt-sparsify.pod:137
#: ../sparsify/virt-sparsify.pod:141 ../sparsify/virt-sparsify.pod:145
#: ../sparsify/virt-sparsify.pod:150 ../sparsify/virt-sparsify.pod:273
#: ../sparsify/virt-sparsify.pod:278 ../sparsify/virt-sparsify.pod:283
#: ../src/guestfs-actions.pod:1034 ../src/guestfs-actions.pod:1040
#: ../src/guestfs-actions.pod:1048 ../src/guestfs-actions.pod:1055
#: ../src/guestfs-actions.pod:1062 ../src/guestfs-actions.pod:3335
#: ../src/guestfs-actions.pod:3339 ../src/guestfs-actions.pod:3343
#: ../src/guestfs-actions.pod:3347 ../src/guestfs-actions.pod:3355
#: ../src/guestfs-actions.pod:3359 ../src/guestfs-actions.pod:3363
#: ../src/guestfs-actions.pod:3373 ../src/guestfs-actions.pod:3377
#: ../src/guestfs-actions.pod:3381 ../src/guestfs-actions.pod:3556
#: ../src/guestfs-actions.pod:3560 ../src/guestfs-actions.pod:3565
#: ../src/guestfs-actions.pod:3626 ../src/guestfs-actions.pod:3630
#: ../src/guestfs-actions.pod:3635 ../src/guestfs-actions.pod:4528
#: ../src/guestfs-actions.pod:4535 ../src/guestfs-actions.pod:4542
#: ../src/guestfs-actions.pod:5417 ../src/guestfs-actions.pod:5423
#: ../src/guestfs-actions.pod:5431 ../src/guestfs-actions.pod:5438
#: ../src/guestfs-actions.pod:5445 ../src/guestfs.pod:396
#: ../src/guestfs.pod:401 ../src/guestfs.pod:406 ../src/guestfs.pod:410
#: ../src/guestfs.pod:415 ../src/guestfs.pod:419 ../src/guestfs.pod:424
#: ../src/guestfs.pod:429 ../src/guestfs.pod:780 ../src/guestfs.pod:787
#: ../src/guestfs.pod:793 ../src/guestfs.pod:799 ../src/guestfs.pod:805
#: ../src/guestfs.pod:810 ../src/guestfs.pod:816 ../src/guestfs.pod:1044
#: ../src/guestfs.pod:1048 ../src/guestfs.pod:1054 ../src/guestfs.pod:1137
#: ../src/guestfs.pod:1142 ../src/guestfs.pod:1146 ../src/guestfs.pod:1152
#: ../src/guestfs.pod:1156 ../src/guestfs.pod:1160 ../src/guestfs.pod:1165
#: ../src/guestfs.pod:1744 ../src/guestfs.pod:1748 ../src/guestfs.pod:1752
#: ../src/guestfs.pod:1757 ../src/guestfs.pod:1765 ../src/guestfs.pod:1784
#: ../src/guestfs.pod:1792 ../src/guestfs.pod:1809 ../src/guestfs.pod:1814
#: ../src/guestfs.pod:1818 ../src/guestfs.pod:2007 ../src/guestfs.pod:2011
#: ../src/guestfs.pod:2015 ../src/guestfs.pod:2019 ../src/guestfs.pod:2023
#: ../src/guestfs.pod:2027 ../src/guestfs.pod:2683 ../src/guestfs.pod:2688
#: ../src/guestfs.pod:2692 ../src/guestfs.pod:2796 ../src/guestfs.pod:2801
#: ../src/guestfs.pod:2805 ../src/guestfs.pod:2815 ../src/guestfs.pod:3246
#: ../src/guestfs.pod:3251 ../src/guestfs.pod:3257 ../src/guestfs.pod:3265
#: ../src/guestfs.pod:3781 ../src/guestfs.pod:3787 ../src/guestfs.pod:3792
#: ../src/guestfs.pod:3798 ../src/guestfs.pod:4193 ../src/guestfs.pod:4197
#: ../src/guestfs.pod:4201 ../src/guestfs.pod:4205 ../src/guestfs.pod:4209
#: ../src/guestfs.pod:4469 ../src/guestfs.pod:4474 ../src/guestfs.pod:4478
#: ../src/guestfs.pod:4482 ../src/guestfs.pod:4496 ../src/guestfs.pod:4500
#: ../src/guestfs.pod:4505 ../src/guestfs.pod:4509
#: ../sysprep/sysprep-extra-options.pod:244
#: ../sysprep/sysprep-extra-options.pod:248 ../sysprep/virt-sysprep.pod:288
#: ../sysprep/virt-sysprep.pod:292 ../sysprep/virt-sysprep.pod:296
#: ../sysprep/virt-sysprep.pod:300 ../sysprep/virt-sysprep.pod:315
#: ../sysprep/virt-sysprep.pod:319 ../sysprep/virt-sysprep.pod:323
#: ../sysprep/virt-sysprep.pod:327 ../sysprep/virt-sysprep.pod:331
#: ../sysprep/virt-sysprep.pod:384 ../sysprep/virt-sysprep.pod:396
#: ../sysprep/virt-sysprep.pod:400 ../sysprep/virt-sysprep.pod:408
#: ../sysprep/virt-sysprep.pod:414 ../tools/virt-win-reg:194
#: ../tools/virt-win-reg:199 ../tools/virt-win-reg:205
#: ../tools/virt-win-reg:754 ../tools/virt-win-reg:760
#: ../tools/virt-win-reg:766 ../v2v/virt-v2v.pod:499 ../v2v/virt-v2v.pod:504
#: ../v2v/virt-v2v.pod:509 ../v2v/virt-v2v.pod:724 ../v2v/virt-v2v.pod:728
#: ../v2v/virt-v2v.pod:732 ../v2v/virt-v2v.pod:736 ../v2v/virt-v2v.pod:740
#: ../v2v/virt-v2v.pod:869 ../v2v/virt-v2v.pod:874 ../v2v/virt-v2v.pod:879
msgid "*"
msgstr "*"

#. type: textblock
#: ../align/virt-alignment-scan.pod:358
msgid "0"
msgstr "0"

#. type: textblock
#: ../align/virt-alignment-scan.pod:360
msgid ""
"successful exit, all partitions are aligned E<ge> 64K for best performance"
msgstr ""
"успішне завершення, всі розділи вирівняно на E<ge> 64 кБ для отримання "
"найкращої швидкодії"

#. type: =item
#: ../align/virt-alignment-scan.pod:364 ../src/guestfs.pod:2286
#: ../v2v/virt-v2v.pod:1047
msgid "1"
msgstr "1"

#. type: textblock
#: ../align/virt-alignment-scan.pod:366
msgid "an error scanning the disk image or guest"
msgstr "під час сканування образу диска або гостьової системи сталася помилка"

#. type: =item
#: ../align/virt-alignment-scan.pod:370 ../src/guestfs.pod:2290
#: ../v2v/virt-v2v.pod:1051
msgid "2"
msgstr "2"

#. type: textblock
#: ../align/virt-alignment-scan.pod:372
msgid ""
"successful exit, some partitions have alignment E<lt> 64K which can result "
"in poor performance on high end network storage"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:377 ../src/guestfs.pod:2294
msgid "3"
msgstr "3"

#. type: textblock
#: ../align/virt-alignment-scan.pod:379
msgid ""
"successful exit, some partitions have alignment E<lt> 4K which can result in "
"poor performance on most hypervisors"
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:384
#: ../appliance/libguestfs-make-fixed-appliance.pod:164
#: ../builder/virt-builder.pod:1688 ../builder/virt-index-validate.pod:79
#: ../cat/virt-cat.pod:273 ../cat/virt-filesystems.pod:386
#: ../cat/virt-log.pod:135 ../cat/virt-ls.pod:518
#: ../customize/virt-customize.pod:246 ../daemon/guestfsd.pod:115
#: ../df/virt-df.pod:256 ../diff/virt-diff.pod:248 ../edit/virt-edit.pod:389
#: ../erlang/examples/guestfs-erlang.pod:95
#: ../examples/guestfs-examples.pod:55 ../examples/guestfs-faq.pod:1266
#: ../examples/guestfs-performance.pod:557 ../examples/guestfs-recipes.pod:659
#: ../examples/guestfs-testing.pod:384 ../fish/guestfish.pod:1601
#: ../fish/libguestfs-tools.conf.pod:88 ../fish/virt-copy-in.pod:48
#: ../fish/virt-copy-out.pod:37 ../fish/virt-tar-in.pod:45
#: ../fish/virt-tar-out.pod:39 ../format/virt-format.pod:185
#: ../fuse/guestmount.pod:415 ../fuse/guestunmount.pod:147
#: ../golang/examples/guestfs-golang.pod:76 ../guestfs-release-notes.pod:3505
#: ../inspector/virt-inspector.pod:492 ../java/examples/guestfs-java.pod:156
#: ../lua/examples/guestfs-lua.pod:136 ../make-fs/virt-make-fs.pod:215
#: ../ocaml/examples/guestfs-ocaml.pod:76 ../p2v/virt-p2v-make-disk.pod:103
#: ../p2v/virt-p2v-make-kickstart.pod:187 ../p2v/virt-p2v.pod:579
#: ../perl/examples/guestfs-perl.pod:38
#: ../python/examples/guestfs-python.pod:51 ../rescue/virt-rescue.pod:412
#: ../resize/virt-resize.pod:755 ../ruby/examples/guestfs-ruby.pod:34
#: ../sparsify/virt-sparsify.pod:439 ../src/guestfs.pod:4750
#: ../sysprep/virt-sysprep.pod:551 ../test-tool/libguestfs-test-tool.pod:180
#: ../tools/virt-list-filesystems:181 ../tools/virt-list-partitions:263
#: ../tools/virt-tar:292 ../tools/virt-win-reg:785 ../v2v/virt-v2v.pod:1310
msgid "SEE ALSO"
msgstr "ТАКОЖ ПЕРЕГЛЯНЬТЕ"

#. type: textblock
#: ../align/virt-alignment-scan.pod:386
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-rescue(1)>, "
"L<virt-resize(1)>, L<http://libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-rescue(1)>, "
"L<virt-resize(1)>, L<http://libguestfs.org/>."

#. type: =head1
#: ../align/virt-alignment-scan.pod:393 ../builder/virt-builder.pod:1707
#: ../builder/virt-index-validate.pod:84 ../cat/virt-cat.pod:283
#: ../cat/virt-filesystems.pod:397 ../cat/virt-log.pod:145
#: ../cat/virt-ls.pod:528 ../daemon/guestfsd.pod:120 ../df/virt-df.pod:264
#: ../diff/virt-diff.pod:258 ../edit/virt-edit.pod:400
#: ../format/virt-format.pod:195 ../guestfs-release-notes.pod:3516
#: ../make-fs/virt-make-fs.pod:229 ../rescue/virt-rescue.pod:422
#: ../resize/virt-resize.pod:779 ../sparsify/virt-sparsify.pod:452
#: ../tools/virt-list-filesystems:193 ../tools/virt-list-partitions:274
#: ../tools/virt-tar:306 ../tools/virt-win-reg:799
msgid "AUTHOR"
msgstr "АВТОР"

#. type: textblock
#: ../align/virt-alignment-scan.pod:395 ../builder/virt-builder.pod:1709
#: ../builder/virt-index-validate.pod:86 ../cat/virt-cat.pod:285
#: ../cat/virt-filesystems.pod:399 ../cat/virt-log.pod:147
#: ../cat/virt-ls.pod:530 ../customize/virt-customize.pod:265
#: ../daemon/guestfsd.pod:122 ../df/virt-df.pod:266 ../diff/virt-diff.pod:260
#: ../edit/virt-edit.pod:402 ../format/virt-format.pod:197
#: ../inspector/virt-inspector.pod:507 ../make-fs/virt-make-fs.pod:231
#: ../p2v/virt-p2v-make-disk.pod:112 ../p2v/virt-p2v-make-kickstart.pod:198
#: ../p2v/virt-p2v.pod:590 ../rescue/virt-rescue.pod:424
#: ../resize/virt-resize.pod:781 ../sparsify/virt-sparsify.pod:454
#: ../sysprep/virt-sysprep.pod:570 ../tools/virt-list-filesystems:195
#: ../tools/virt-list-partitions:276 ../tools/virt-tar:308
#: ../tools/virt-win-reg:801 ../v2v/virt-v2v.pod:1326
msgid "Richard W.M. Jones L<http://people.redhat.com/~rjones/>"
msgstr "Richard W.M. Jones L<http://people.redhat.com/~rjones/>"

#. type: =head1
#: ../align/virt-alignment-scan.pod:397
#: ../appliance/libguestfs-make-fixed-appliance.pod:176
#: ../builder/virt-builder.pod:1711 ../builder/virt-index-validate.pod:88
#: ../cat/virt-cat.pod:287 ../cat/virt-filesystems.pod:401
#: ../cat/virt-log.pod:149 ../cat/virt-ls.pod:532
#: ../customize/virt-customize.pod:267 ../daemon/guestfsd.pod:124
#: ../df/virt-df.pod:268 ../diff/virt-diff.pod:262 ../edit/virt-edit.pod:404
#: ../erlang/examples/guestfs-erlang.pod:114
#: ../examples/guestfs-examples.pod:73 ../examples/guestfs-faq.pod:1276
#: ../examples/guestfs-performance.pod:573 ../examples/guestfs-recipes.pod:678
#: ../examples/guestfs-testing.pod:395 ../fish/guestfish.pod:1640
#: ../fish/libguestfs-tools.conf.pod:100 ../fish/virt-copy-in.pod:62
#: ../fish/virt-copy-out.pod:51 ../fish/virt-tar-in.pod:60
#: ../fish/virt-tar-out.pod:53 ../format/virt-format.pod:199
#: ../fuse/guestmount.pod:433 ../fuse/guestunmount.pod:160
#: ../golang/examples/guestfs-golang.pod:95 ../guestfs-release-notes.pod:3520
#: ../inspector/virt-inspector.pod:515 ../java/examples/guestfs-java.pod:175
#: ../lua/examples/guestfs-lua.pod:155 ../make-fs/virt-make-fs.pod:233
#: ../ocaml/examples/guestfs-ocaml.pod:95 ../p2v/virt-p2v-make-disk.pod:114
#: ../p2v/virt-p2v-make-kickstart.pod:200 ../p2v/virt-p2v.pod:594
#: ../perl/examples/guestfs-perl.pod:57
#: ../python/examples/guestfs-python.pod:69 ../rescue/virt-rescue.pod:426
#: ../resize/virt-resize.pod:783 ../ruby/examples/guestfs-ruby.pod:52
#: ../sparsify/virt-sparsify.pod:456 ../src/guestfs.pod:4814
#: ../sysprep/virt-sysprep.pod:574 ../test-tool/libguestfs-test-tool.pod:190
#: ../tools/virt-list-filesystems:197 ../tools/virt-list-partitions:278
#: ../tools/virt-tar:310 ../tools/virt-win-reg:803 ../v2v/virt-v2v.pod:1336
msgid "COPYRIGHT"
msgstr "АВТОРСЬКІ ПРАВА"

#. type: textblock
#: ../align/virt-alignment-scan.pod:399
msgid "Copyright (C) 2011 Red Hat Inc."
msgstr "© Red Hat Inc., 2011"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:3
msgid ""
"libguestfs-make-fixed-appliance - Make a \"fixed appliance\" for libguestfs"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:7
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance [--options] OUTPUTDIR\n"
"\n"
msgstr ""
" libguestfs-make-fixed-appliance [--параметри] КАТАЛОГ_ВИВЕДЕННЯ\n"
"\n"

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:9
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance [--options] --xz\n"
"\n"
msgstr ""
" libguestfs-make-fixed-appliance [--параметри] --xz\n"
"\n"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:13
msgid ""
"libguestfs-make-fixed-appliance lets you make a pre-built binary appliance "
"for libguestfs."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:16
msgid "B<Note that ordinary users should not need to run this tool>."
msgstr ""
"B<Зауважте, що у звичайних користувачів не повинно виникнути потреби у "
"запуску цієї програми>."

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:18
msgid "Some reasons why you I<might> want to use this include:"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:24
msgid ""
"You want to make a self-contained libguestfs appliance that can be copied to "
"another machine or platform that doesn't support L<supermin(1)>."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:30
msgid ""
"You have multiple users on the same machine and want to avoid the storage "
"duplication and start-up overhead of having multiple cached copies of the "
"appliance."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:36
msgid ""
"You want to have very predictable performance from libguestfs (see L<guestfs-"
"performance(1)>)."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:41
msgid ""
"For deeper understanding of why you might need this tool, read the section "
"L</FIXED APPLIANCE> below."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:44
msgid ""
"Instead of running this tool, you can download fixed appliances from "
"L<http://libguestfs.org/download/binaries/appliance/>.  These appliances "
"were made using this tool."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:48
msgid "There are two ways to use this tool."
msgstr "Передбачено два способи використання цього інструмента."

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:54
msgid "Specify an output directory, for example:"
msgstr "Вказати каталог виведення даних, приклад:"

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:56
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
"\n"
msgstr ""
" libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
"\n"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:58
msgid ""
"The output directory is created if it does not exist.  Four files are "
"created in this directory:"
msgstr ""
"Якщо каталогу виведення даних ще не існує, його буде створено. У цьому "
"каталозі буде створено чотири файли:"

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:61
#, no-wrap
msgid ""
" <OUTPUTDIR>/kernel\n"
" <OUTPUTDIR>/initrd\n"
" <OUTPUTDIR>/root\n"
" <OUTPUTDIR>/README.fixed\n"
"\n"
msgstr ""
" <OUTPUTDIR>/kernel\n"
" <OUTPUTDIR>/initrd\n"
" <OUTPUTDIR>/root\n"
" <OUTPUTDIR>/README.fixed\n"
"\n"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:66
msgid ""
"Note that C<I<OUTPUTDIR>/root> is a sparse file, so take care when copying "
"it."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:69
msgid ""
"You can then run libguestfs (possibly after copying this directory to "
"another machine) by setting the environment variable LIBGUESTFS_PATH to "
"C<OUTPUTDIR>."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:75
msgid ""
"The alternative method is to use the I<--xz> option to create a compressed "
"tarball:"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:78
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance --xz\n"
"\n"
msgstr ""
" libguestfs-make-fixed-appliance --xz\n"
"\n"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:80
msgid "This creates a tarball in the I<current> directory called:"
msgstr "Буде створено архів у I<поточному> каталозі з назвою:"

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:82
#, no-wrap
msgid ""
" appliance-<VERSION>.tar.xz\n"
"\n"
msgstr ""
" appliance-<ВЕРСІЯ>.tar.xz\n"
"\n"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:84
msgid ""
"(where C<VERSION> is the version of libguestfs).  The tarball contains the "
"four files:"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:87
#, no-wrap
msgid ""
" appliance/kernel\n"
" appliance/initrd\n"
" appliance/root\n"
" appliance/README.fixed\n"
"\n"
msgstr ""
" appliance/kernel\n"
" appliance/initrd\n"
" appliance/root\n"
" appliance/README.fixed\n"
"\n"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:92
msgid ""
"Note that C<appliance/root> is a sparse file, so take care when copying it."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:103
#: ../test-tool/libguestfs-test-tool.pod:40
msgid "Display short usage information and exit."
msgstr "Показати коротку довідку з користування і завершити роботу."

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:109
msgid "Display the version number and exit."
msgstr "Показати дані щодо версії і завершити роботу."

#. type: =item
#: ../appliance/libguestfs-make-fixed-appliance.pod:111
msgid "B<--xz>"
msgstr "B<--xz>"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:113
msgid ""
"Instead of creating the appliance in an output directory, create a "
"compressed tarball of the appliance in the current directory called "
"C<appliance-I<VERSION>.tar.xz> where C<VERSION> is the version of libguestfs."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:118
msgid ""
"Using I<--xz> can take some time.  If working normally, the tool is "
"completely silent when it is running."
msgstr ""

#. type: =head1
#: ../appliance/libguestfs-make-fixed-appliance.pod:123
msgid "FIXED APPLIANCE"
msgstr "ФІКСОВАНА ОСНОВНА СИСТЕМА"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:125
msgid ""
"When libguestfs (or libguestfs tools) are run, they search a path looking "
"for an appliance.  The path is built into libguestfs, or can be set using "
"the C<LIBGUESTFS_PATH> environment variable."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:129
msgid ""
"Normally a supermin appliance is located on this path (see L<supermin(1)/"
"SUPERMIN APPLIANCE>).  libguestfs reconstructs this into a full appliance by "
"running C<supermin --build>."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:133
msgid ""
"However, a simpler \"fixed appliance\" can also be used.  libguestfs detects "
"this by looking for a directory on the path containing four files called "
"C<kernel>, C<initrd>, C<root> and C<README.fixed> (note the C<README.fixed> "
"file must be present as well)."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:138
msgid ""
"If the fixed appliance is found, libguestfs skips supermin entirely and just "
"runs qemu with the kernel, initrd and root disk from the fixed appliance."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:142
msgid ""
"Thus the fixed appliance can be used when a platform or Linux distro does "
"not support supermin.  You build the fixed appliance on a platform that does "
"support supermin, and copy it over, and use that to run libguestfs."
msgstr ""

#. type: =head1
#: ../appliance/libguestfs-make-fixed-appliance.pod:147
msgid "LICENSING"
msgstr "УМОВИ ЛІЦЕНЗУВАННЯ"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:149
msgid ""
"The fixed appliance is a complete Linux binary distro.  If you distribute "
"it, you may need to distribute corresponding source files to remain in legal "
"compliance with the licenses of the software in the appliance (such as the "
"GNU General Public License)."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:156
msgid ""
"libguestfs-make-fixed-appliance returns I<0> if the appliance was built "
"without errors."
msgstr ""

#. type: =head1
#: ../appliance/libguestfs-make-fixed-appliance.pod:159
#: ../builder/virt-builder.pod:1624 ../customize/virt-customize.pod:216
#: ../edit/virt-edit.pod:371 ../fish/guestfish.pod:1385
#: ../fuse/guestunmount.pod:113 ../p2v/virt-p2v-make-disk.pod:92
#: ../p2v/virt-p2v-make-kickstart.pod:176 ../rescue/virt-rescue.pod:388
#: ../sparsify/virt-sparsify.pod:395 ../src/guestfs.pod:4642
#: ../sysprep/virt-sysprep.pod:521 ../test-tool/libguestfs-test-tool.pod:175
#: ../v2v/virt-v2v.pod:1259
msgid "ENVIRONMENT VARIABLES"
msgstr "ЗМІННІ СЕРЕДОВИЩА"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:161
#: ../test-tool/libguestfs-test-tool.pod:177
msgid ""
"For the full list of environment variables which may affect libguestfs, "
"please see the L<guestfs(3)> manual page."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:166
msgid ""
"L<guestfs(3)>, L<supermin(1)>, L<xz(1)>, L<http://libguestfs.org/>, L<http://"
"qemu.org/>."
msgstr ""
"L<guestfs(3)>, L<supermin(1)>, L<xz(1)>, L<http://libguestfs.org/>, L<http://"
"qemu.org/>."

#. type: =head1
#: ../appliance/libguestfs-make-fixed-appliance.pod:172
#: ../customize/virt-customize.pod:263
#: ../erlang/examples/guestfs-erlang.pod:110
#: ../examples/guestfs-examples.pod:69 ../examples/guestfs-faq.pod:1272
#: ../examples/guestfs-performance.pod:569 ../examples/guestfs-recipes.pod:674
#: ../examples/guestfs-testing.pod:391 ../fish/guestfish.pod:1636
#: ../fish/libguestfs-tools.conf.pod:96 ../fish/virt-copy-in.pod:58
#: ../fish/virt-copy-out.pod:47 ../fish/virt-tar-in.pod:56
#: ../fish/virt-tar-out.pod:49 ../fuse/guestmount.pod:429
#: ../fuse/guestunmount.pod:156 ../golang/examples/guestfs-golang.pod:91
#: ../inspector/virt-inspector.pod:501 ../java/examples/guestfs-java.pod:171
#: ../lua/examples/guestfs-lua.pod:151 ../ocaml/examples/guestfs-ocaml.pod:91
#: ../p2v/virt-p2v-make-disk.pod:110 ../p2v/virt-p2v-make-kickstart.pod:196
#: ../p2v/virt-p2v.pod:588 ../perl/examples/guestfs-perl.pod:53
#: ../python/examples/guestfs-python.pod:65
#: ../ruby/examples/guestfs-ruby.pod:48 ../src/guestfs.pod:4810
#: ../sysprep/virt-sysprep.pod:568 ../test-tool/libguestfs-test-tool.pod:186
#: ../v2v/virt-v2v.pod:1324
msgid "AUTHORS"
msgstr "АВТОРИ"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:174
#: ../erlang/examples/guestfs-erlang.pod:112
#: ../examples/guestfs-examples.pod:71 ../examples/guestfs-faq.pod:1274
#: ../examples/guestfs-performance.pod:571 ../examples/guestfs-recipes.pod:676
#: ../examples/guestfs-testing.pod:393 ../fish/guestfish.pod:1638
#: ../fish/libguestfs-tools.conf.pod:98 ../fish/virt-copy-in.pod:60
#: ../fish/virt-copy-out.pod:49 ../fish/virt-tar-in.pod:58
#: ../fish/virt-tar-out.pod:51 ../fuse/guestmount.pod:431
#: ../fuse/guestunmount.pod:158 ../golang/examples/guestfs-golang.pod:93
#: ../java/examples/guestfs-java.pod:173 ../lua/examples/guestfs-lua.pod:153
#: ../ocaml/examples/guestfs-ocaml.pod:93 ../perl/examples/guestfs-perl.pod:55
#: ../python/examples/guestfs-python.pod:67
#: ../ruby/examples/guestfs-ruby.pod:50 ../src/guestfs.pod:4812
#: ../test-tool/libguestfs-test-tool.pod:188
msgid "Richard W.M. Jones (C<rjones at redhat dot com>)"
msgstr "Richard W.M. Jones (C<rjones at redhat dot com>)"

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:178 ../cat/virt-ls.pod:534
#: ../daemon/guestfsd.pod:126 ../df/virt-df.pod:270 ../diff/virt-diff.pod:264
#: ../edit/virt-edit.pod:406 ../examples/guestfs-recipes.pod:680
#: ../fish/guestfish.pod:1642 ../fuse/guestmount.pod:435
#: ../guestfs-release-notes.pod:3522 ../p2v/virt-p2v-make-disk.pod:116
#: ../p2v/virt-p2v-make-kickstart.pod:202 ../p2v/virt-p2v.pod:596
#: ../rescue/virt-rescue.pod:428 ../src/guestfs.pod:4816
#: ../test-tool/libguestfs-test-tool.pod:192 ../tools/virt-list-partitions:280
#: ../v2v/virt-v2v.pod:1338
msgid "Copyright (C) 2009-2014 Red Hat Inc."
msgstr "© Red Hat Inc., 2009–2014"

#. type: =end
#: ../builder/virt-builder.pod:1 ../builder/virt-builder.pod:6
#: ../examples/guestfs-faq.pod:248 ../examples/guestfs-faq.pod:253
#: ../examples/guestfs-faq.pod:863 ../examples/guestfs-faq.pod:868
#: ../examples/guestfs-faq.pod:1035 ../examples/guestfs-faq.pod:1040
#: ../src/guestfs.pod:1396 ../src/guestfs.pod:1401 ../src/guestfs.pod:3392
#: ../src/guestfs.pod:3397
msgid "html"
msgstr "html"

#. type: verbatim
#: ../builder/virt-builder.pod:3
#, no-wrap
msgid ""
"<img src=\"virt-builder.svg\" width=\"250\"\n"
"  style=\"float: right; clear: right;\" />\n"
"\n"
msgstr ""
"<img src=\"virt-builder.svg\" width=\"250\"\n"
"  style=\"float: right; clear: right;\" />\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:10
msgid "virt-builder - Build virtual machine images quickly"
msgstr "virt-builder — засіб швидкої побудови образів для віртуальної машини"

#. type: verbatim
#: ../builder/virt-builder.pod:14
#, no-wrap
msgid ""
" virt-builder os-version\n"
"    [-o|--output DISKIMAGE] [--size SIZE] [--format raw|qcow2]\n"
"    [--arch ARCHITECTURE] [--attach ISOFILE]\n"
"__CUSTOMIZE_SYNOPSIS__\n"
"\n"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:19
#, no-wrap
msgid ""
" virt-builder -l|--list [--long] [--list-format short|long|json]\n"
"\n"
msgstr ""
" virt-builder -l|--list [--long] [--list-format short|long|json]\n"
"\n"

#. type: verbatim
#: ../builder/virt-builder.pod:21
#, no-wrap
msgid ""
" virt-builder --notes os-version\n"
"\n"
msgstr ""
" virt-builder --notes версія-ОС\n"
"\n"

#. type: verbatim
#: ../builder/virt-builder.pod:23 ../builder/virt-builder.pod:1366
#, no-wrap
msgid ""
" virt-builder --print-cache\n"
"\n"
msgstr ""
" virt-builder --print-cache\n"
"\n"

#. type: verbatim
#: ../builder/virt-builder.pod:25 ../builder/virt-builder.pod:1374
#, no-wrap
msgid ""
" virt-builder --cache-all-templates\n"
"\n"
msgstr ""
" virt-builder --cache-all-templates\n"
"\n"

#. type: verbatim
#: ../builder/virt-builder.pod:27 ../builder/virt-builder.pod:1370
#, no-wrap
msgid ""
" virt-builder --delete-cache\n"
"\n"
msgstr ""
" virt-builder --delete-cache\n"
"\n"

#. type: verbatim
#: ../builder/virt-builder.pod:29
#, no-wrap
msgid ""
" virt-builder --get-kernel DISKIMAGE\n"
"    [--format raw|qcow2] [--output OUTPUTDIR]\n"
"\n"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:34
msgid ""
"Virt-builder is a tool for quickly building new virtual machines.  You can "
"build a variety of VMs for local or cloud use, usually within a few minutes "
"or less.  Virt-builder also has many ways to customize these VMs.  "
"Everything is run from the command line and nothing requires root "
"privileges, so automation and scripting is simple."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:40
msgid ""
"Note that virt-builder does not install guests from scratch.  It takes "
"cleanly prepared, digitally signed OS templates and customizes them.  This "
"approach is used because it is much faster, but if you need to do fresh "
"installs you may want to look at L<virt-install(1)> and L<oz-install(1)>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:46
msgid ""
"The easiest way to get started is by looking at the examples in the next "
"section."
msgstr ""

#. type: =head1
#: ../builder/virt-builder.pod:49 ../cat/virt-cat.pod:30
#: ../cat/virt-log.pod:24 ../cat/virt-ls.pod:33 ../df/virt-df.pod:45
#: ../edit/virt-edit.pod:42 ../fish/guestfish.pod:39
#: ../fish/guestfish.pod:1097 ../fish/virt-copy-in.pod:27
#: ../fish/virt-copy-out.pod:19 ../fish/virt-tar-in.pod:28
#: ../fish/virt-tar-out.pod:22 ../fuse/guestmount.pod:37
#: ../p2v/virt-p2v-make-disk.pod:32 ../resize/virt-resize.pod:25
#: ../sparsify/virt-sparsify.pod:85 ../tools/virt-tar:47
#: ../v2v/virt-v2v.pod:77
msgid "EXAMPLES"
msgstr "ПРИКЛАДИ"

#. type: =head2
#: ../builder/virt-builder.pod:51
msgid "List the virtual machines available"
msgstr "Показ списку доступних віртуальних машин"

#. type: verbatim
#: ../builder/virt-builder.pod:53
#, no-wrap
msgid ""
" virt-builder --list\n"
"\n"
msgstr ""
" virt-builder --list\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:55
msgid ""
"will list out the operating systems available to install.  A selection of "
"freely redistributable OSes is available as standard.  You can add your own "
"too (see below)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:59
msgid ""
"After choosing a guest from the list, you may want to see if there are any "
"installation notes:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:62
#, no-wrap
msgid ""
" virt-builder --notes fedora-20\n"
"\n"
msgstr ""
" virt-builder --notes fedora-20\n"
"\n"

#. type: =head2
#: ../builder/virt-builder.pod:64
msgid "Build a virtual machine"
msgstr "Побудова віртуальної машини"

#. type: verbatim
#: ../builder/virt-builder.pod:66
#, no-wrap
msgid ""
" virt-builder fedora-20\n"
"\n"
msgstr ""
" virt-builder fedora-20\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:68
msgid ""
"will build a Fedora 20 image for the same architecture as virt-builder (so "
"running it from an i386 installation will try to build an i386 image, if "
"available).  This will have all default configuration (minimal size, no user "
"accounts, random root password, only the bare minimum installed software, "
"etc.)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:74
msgid "You I<do not> need to run this command as root."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:76
msgid ""
"The first time this runs it has to download the template over the network, "
"but this gets cached (see L</CACHING>)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:79
msgid ""
"The name of the output file is derived from the template name, so above it "
"will be C<fedora-20.img>.  You can change the output filename using the I<-"
"o> option:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:83
#, no-wrap
msgid ""
" virt-builder fedora-20 -o mydisk.img\n"
"\n"
msgstr ""
" virt-builder fedora-20 -o mydisk.img\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:85
msgid ""
"You can also use the I<-o> option to write to existing devices or logical "
"volumes."
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:88
#, no-wrap
msgid ""
" virt-builder fedora-20 --format qcow2\n"
"\n"
msgstr ""
" virt-builder fedora-20 --format qcow2\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:90
msgid "As above, but write the output in qcow2 format to C<fedora-20.qcow2>."
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:92
#, no-wrap
msgid ""
" virt-builder fedora-20 --size 20G\n"
"\n"
msgstr ""
" virt-builder fedora-20 --size 20G\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:94
msgid ""
"As above, but the output size will be 20 GB.  The guest OS is resized as it "
"is copied to the output (automatically, using L<virt-resize(1)>)."
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:98
#, no-wrap
msgid ""
" virt-builder fedora-20 --arch i386\n"
"\n"
msgstr ""
" virt-builder fedora-20 --arch i386\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:100
msgid "As above, but using an i386 template, if available."
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:102
msgid "Setting the root password"
msgstr "Встановлення пароля root"

#. type: verbatim
#: ../builder/virt-builder.pod:104
#, no-wrap
msgid ""
" virt-builder fedora-20 --root-password file:/tmp/rootpw\n"
"\n"
msgstr ""
" virt-builder fedora-20 --root-password file:/tmp/rootpw\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:106
msgid ""
"Create a Fedora 20 image.  The root password is taken from the file C</tmp/"
"rootpw>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:109
msgid ""
"Note if you I<don't> set I<--root-password> then the guest is given a "
"I<random> root password."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:112
msgid "You can also create user accounts.  See L</USERS AND PASSWORDS> below."
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:114
msgid "Set the hostname"
msgstr "Встановити назву вузла"

#. type: verbatim
#: ../builder/virt-builder.pod:116
#, no-wrap
msgid ""
" virt-builder fedora-20 --hostname virt.example.com\n"
"\n"
msgstr ""
" virt-builder fedora-20 --hostname virt.example.com\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:118
msgid "Set the hostname to C<virt.example.com>."
msgstr "Встановити назву вузла C<virt.example.com>."

#. type: =head2
#: ../builder/virt-builder.pod:120
msgid "Installing software"
msgstr "Встановлення програмного забезпечення"

#. type: textblock
#: ../builder/virt-builder.pod:122
msgid ""
"To install packages from the ordinary (guest) software repository (eg. yum "
"or apt):"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:125
#, no-wrap
msgid ""
" virt-builder fedora-20 --install \"inkscape,@Xfce Desktop\"\n"
"\n"
msgstr ""
" virt-builder fedora-20 --install \"inkscape,@Xfce Desktop\"\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:127
msgid ""
"(In Fedora, C<@> is used to install groups of packages.  On Debian you would "
"install a meta-package instead.)"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:130
msgid "To update the core packages to the latest version:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:132
#, no-wrap
msgid ""
" virt-builder debian-7 --update\n"
"\n"
msgstr ""
" virt-builder debian-7 --update\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:134
msgid ""
"For guests which use SELinux, like Fedora and Red Hat Enterprise Linux, you "
"may need to do SELinux relabelling after installing or updating packages "
"(see L</SELINUX> below):"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:138
#, no-wrap
msgid ""
" virt-builder fedora-20 --update --selinux-relabel\n"
"\n"
msgstr ""
" virt-builder fedora-20 --update --selinux-relabel\n"
"\n"

#. type: =head2
#: ../builder/virt-builder.pod:140
msgid "Customizing the installation"
msgstr "Налаштовування встановленої системи"

#. type: textblock
#: ../builder/virt-builder.pod:142
msgid ""
"There are many options that let you customize the installation.  These "
"include: I<--run>/I<--run-command>, which run a shell script or command "
"while the disk image is being generated and lets you add or edit files that "
"go into the disk image.  I<--firstboot>/I<--firstboot-command>, which let "
"you add scripts/commands that are run the first time the guest boots.  I<--"
"edit> to edit files.  I<--upload> to upload files."
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:152
#, no-wrap
msgid ""
" cat <<'EOF' > /tmp/yum-update.sh\n"
" yum -y update\n"
" EOF\n"
" \n"
msgstr ""
" cat <<'EOF' > /tmp/yum-update.sh\n"
" yum -y update\n"
" EOF\n"
" \n"

#. type: verbatim
#: ../builder/virt-builder.pod:156
#, no-wrap
msgid ""
" virt-builder fedora-20 --firstboot /tmp/yum-update.sh\n"
"\n"
msgstr ""
" virt-builder fedora-20 --firstboot /tmp/yum-update.sh\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:158
msgid "or simply:"
msgstr "або просто:"

#. type: verbatim
#: ../builder/virt-builder.pod:160
#, no-wrap
msgid ""
" virt-builder fedora-20 --firstboot-command 'yum -y update'\n"
"\n"
msgstr ""
" virt-builder fedora-20 --firstboot-command 'yum -y update'\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:162
msgid ""
"which makes the L<yum(8)> C<update> command run once the first time the "
"guest boots."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:165
msgid "Or:"
msgstr "або"

#. type: verbatim
#: ../builder/virt-builder.pod:167
#, no-wrap
msgid ""
" virt-builder fedora-20 --edit '/etc/yum.conf: s/gpgcheck=1/gpgcheck=0/'\n"
"\n"
msgstr ""
" virt-builder fedora-20 --edit '/etc/yum.conf: s/gpgcheck=1/gpgcheck=0/'\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:169
msgid ""
"which edits C</etc/yum.conf> inside the disk image (during disk image "
"creation, long before boot)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:172
msgid "You can combine these options, and have multiple options of all types."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:180 ../builder/virt-index-validate.pod:64
#: ../p2v/virt-p2v-make-disk.pod:55 ../p2v/virt-p2v-make-kickstart.pod:139
#: ../p2v/virt-p2v.pod:436 ../resize/virt-resize.pod:272
#: ../sparsify/virt-sparsify.pod:120 ../v2v/virt-v2v.pod:153
msgid "Display help."
msgstr "Показати довідкове повідомлення."

#. type: =item
#: ../builder/virt-builder.pod:182
msgid "B<--arch> ARCHITECTURE"
msgstr "B<--arch> АРХІТЕКТУРА"

#. type: textblock
#: ../builder/virt-builder.pod:184
msgid ""
"Use the specified architecture for the output image.  This means there must "
"be sources providing the requested template for the requested architecture."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:188
msgid "See also L</ARCHITECTURE>."
msgstr "Див. також L</АРХІТЕКТУРА>."

#. type: =item
#: ../builder/virt-builder.pod:190 ../customize/virt-customize.pod:51
msgid "B<--attach> ISOFILE"
msgstr "B<--attach> ФАЙЛ_ISO"

#. type: textblock
#: ../builder/virt-builder.pod:192
msgid ""
"During the customization phase, the given disk is attached to the libguestfs "
"appliance.  This is used to provide extra software repositories or other "
"data for customization."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:196 ../customize/virt-customize.pod:57
msgid ""
"You probably want to ensure the volume(s) or filesystems in the attached "
"disks are labelled (or use an ISO volume name) so that you can mount them by "
"label in your run-scripts:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:200 ../customize/virt-customize.pod:61
#, no-wrap
msgid ""
" mkdir /tmp/mount\n"
" mount LABEL=EXTRA /tmp/mount\n"
"\n"
msgstr ""
" mkdir /tmp/mount\n"
" mount LABEL=EXTRA /tmp/mount\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:203 ../customize/virt-customize.pod:64
msgid ""
"You can have multiple I<--attach> options, and the format can be any disk "
"format (not just an ISO)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:206
msgid ""
"See also: I<--run>, L</Installing packages at build time from a side "
"repository>, L<genisoimage(1)>, L<virt-make-fs(1)>."
msgstr ""
"Див. також I<--run>, L</Встановлення пакунків зі стороннього сховища під час "
"збирання>, L<genisoimage(1)>, L<virt-make-fs(1)>."

#. type: =item
#: ../builder/virt-builder.pod:210 ../customize/virt-customize.pod:67
msgid "B<--attach-format> FORMAT"
msgstr "B<--attach-format> ФОРМАТ"

#. type: textblock
#: ../builder/virt-builder.pod:212 ../customize/virt-customize.pod:69
msgid ""
"Specify the disk format for the next I<--attach> option.  The C<FORMAT> is "
"usually C<raw> or C<qcow2>.  Use C<raw> for ISOs."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:215
msgid "B<--cache> DIR"
msgstr "B<--cache> КАТАЛОГ"

#. type: =item
#: ../builder/virt-builder.pod:217
msgid "B<--no-cache>"
msgstr "B<--no-cache>"

#. type: textblock
#: ../builder/virt-builder.pod:219
msgid ""
"I<--cache> DIR sets the directory to use/check for cached template files.  "
"If not set, defaults to either C<$XDG_CACHE_HOME/virt-builder/> or C<$HOME/."
"cache/virt-builder/>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:223
msgid "I<--no-cache> disables template caching."
msgstr "I<--no-cache> вимикає кешування шаблонів."

#. type: =item
#: ../builder/virt-builder.pod:225
msgid "B<--cache-all-templates>"
msgstr "B<--cache-all-templates>"

#. type: textblock
#: ../builder/virt-builder.pod:227
msgid "Download all templates to the cache and then exit.  See L</CACHING>."
msgstr "Отримати усі шаблони до кешу і завершити роботу. Див. L</КЕШУВАННЯ>."

#. type: textblock
#: ../builder/virt-builder.pod:229
msgid ""
"Note this doesn't cache everything.  More templates might be uploaded.  Also "
"this doesn't cache packages (the I<--install>, I<--update> options)."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:232
msgid "B<--check-signature>"
msgstr "B<--check-signature>"

#. type: =item
#: ../builder/virt-builder.pod:234
msgid "B<--no-check-signature>"
msgstr "B<--no-check-signature>"

#. type: textblock
#: ../builder/virt-builder.pod:236
msgid ""
"Check/don't check the digital signature of the OS template.  The default is "
"to check the signature and exit if it is not correct.  Using I<--no-check-"
"signature> bypasses this check."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:240
msgid "See also I<--fingerprint>."
msgstr "Див. також I<--fingerprint>."

#. type: =item
#: ../builder/virt-builder.pod:242
msgid "B<--curl> CURL"
msgstr "B<--curl> CURL"

#. type: textblock
#: ../builder/virt-builder.pod:244
msgid ""
"Specify an alternate L<curl(1)> binary.  You can also use this to add curl "
"parameters, for example to disable https certificate checks:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:247
#, no-wrap
msgid ""
" virt-builder --curl \"curl --insecure\" [...]\n"
"\n"
msgstr ""
" virt-builder --curl \"curl --insecure\" [...]\n"
"\n"

#. type: =item
#: ../builder/virt-builder.pod:249
msgid "B<--delete-cache>"
msgstr "B<--delete-cache>"

#. type: textblock
#: ../builder/virt-builder.pod:251
msgid "Delete the template cache.  See L</CACHING>."
msgstr "Вилучити кеш шаблонів. Див. L</КЕШУВАННЯ>."

#. type: =item
#: ../builder/virt-builder.pod:253
msgid "B<--no-delete-on-failure>"
msgstr "B<--no-delete-on-failure>"

#. type: textblock
#: ../builder/virt-builder.pod:255
msgid ""
"Don't delete the output file on failure to build.  You can use this to debug "
"failures to run scripts.  See L</DEBUGGING BUILDS> for ways to debug images."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:259
msgid ""
"The default is to delete the output file if virt-builder fails (or, for "
"example, some script that it runs fails)."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:262
msgid "B<--fingerprint> 'AAAA BBBB ...'"
msgstr "B<--fingerprint> 'AAAA BBBB ...'"

#. type: textblock
#: ../builder/virt-builder.pod:264
msgid ""
"Check that the index and templates are signed by the key with the given "
"fingerprint.  (The fingerprint is a long string, usually written as 10 "
"groups of 4 hexadecimal digits)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:268
msgid ""
"You can give this option multiple times.  If you have multiple source URLs, "
"then you can have either no fingerprint, one fingerprint or multiple "
"fingerprints.  If you have multiple, then each must correspond 1-1 with a "
"source URL."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:273 ../sparsify/virt-sparsify.pod:194
msgid "B<--format> qcow2"
msgstr "B<--format> qcow2"

#. type: =item
#: ../builder/virt-builder.pod:275 ../resize/virt-resize.pod:402
#: ../sparsify/virt-sparsify.pod:192 ../tools/virt-list-filesystems:90
#: ../tools/virt-list-partitions:91 ../tools/virt-tar:138
#: ../tools/virt-win-reg:139
msgid "B<--format> raw"
msgstr "B<--format> raw"

#. type: textblock
#: ../builder/virt-builder.pod:277
msgid ""
"For ordinary builds, this selects the output format.  The default is I<raw>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:279
msgid "With I<--get-kernel> this specifies the input format."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:281
msgid "B<--get-kernel> IMAGE"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:283
msgid ""
"This option extracts the kernel and initramfs from a previously built disk "
"image called C<IMAGE> (in fact it works for any VM disk image, not just ones "
"built using virt-builder)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:287
msgid ""
"The kernel and initramfs are written to the current directory, unless you "
"also specify the I<--output> C<outputdir> B<directory> name."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:290
msgid ""
"The format of the disk image is automatically detected unless you specify it "
"by using the I<--format> option."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:293
msgid ""
"In the case where the guest contains multiple kernels, the one with the "
"highest version number is chosen.  To extract arbitrary kernels from the "
"disk image, see L<guestfish(1)>.  To extract the entire C</boot> directory "
"of a guest, see L<virt-copy-out(1)>."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:298
msgid "B<--gpg> GPG"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:300
msgid ""
"Specify an alternate L<gpg(1)> (GNU Privacy Guard) binary.  You can also use "
"this to add gpg parameters, for example to specify an alternate home "
"directory:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:304
#, no-wrap
msgid ""
" virt-builder --gpg \"gpg --homedir /tmp\" [...]\n"
"\n"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:306 ../cat/virt-filesystems.pod:209
#: ../cat/virt-ls.pod:396 ../tools/virt-list-filesystems:107
#: ../tools/virt-list-partitions:118
msgid "B<-l>"
msgstr "B<-l>"

#. type: =item
#: ../builder/virt-builder.pod:308
msgid "B<--list>"
msgstr "B<--list>"

#. type: =item
#: ../builder/virt-builder.pod:310
msgid "B<--list --list-format> format"
msgstr "B<--list --list-format> формат"

#. type: =item
#: ../builder/virt-builder.pod:312
msgid "B<--list --long>"
msgstr "B<--list --long>"

#. type: textblock
#: ../builder/virt-builder.pod:314
msgid "List available templates."
msgstr "Показати список доступних шаблонів."

#. type: textblock
#: ../builder/virt-builder.pod:316
msgid ""
"It is possible to choose with I<--list-format> the output format for the "
"list templates:"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:321
msgid "B<short>"
msgstr "B<short>"

#. type: textblock
#: ../builder/virt-builder.pod:323
msgid ""
"The default format, prints only the template identifier and, next to it, its "
"short description."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:326
msgid "B<long>"
msgstr "B<long>"

#. type: textblock
#: ../builder/virt-builder.pod:328
msgid ""
"Prints a textual list with the details of the available sources, followed by "
"the details of the available templates."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:331
msgid "B<json>"
msgstr "B<json>"

#. type: textblock
#: ../builder/virt-builder.pod:333
msgid ""
"Prints a JSON object with the details of the available sources and the "
"details of the available templates."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:336
msgid ""
"The C<version> key in the main object represents the \"compatibility version"
"\", and it is bumped every time the resulting JSON output is incompatible "
"with the previous versions (for example the structure has changed, or non-"
"optional keys are no more present)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:343
msgid "I<--long> is a shorthand for the C<long> format."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:345
msgid "See also: I<--source>, I<--notes>, L</SOURCES OF TEMPLATES>."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:347 ../resize/virt-resize.pod:445
#: ../sparsify/virt-sparsify.pod:223 ../v2v/virt-v2v.pod:230
msgid "B<--machine-readable>"
msgstr "B<--machine-readable>"

#. type: textblock
#: ../builder/virt-builder.pod:349 ../resize/virt-resize.pod:447
#: ../sparsify/virt-sparsify.pod:225 ../v2v/virt-v2v.pod:232
msgid ""
"This option is used to make the output more machine friendly when being "
"parsed by other programs.  See L</MACHINE READABLE OUTPUT> below."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:353 ../customize/virt-customize.pod:120
msgid "B<-m> MB"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:355 ../customize/virt-customize.pod:122
msgid "B<--memsize> MB"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:357 ../customize/virt-customize.pod:124
msgid ""
"Change the amount of memory allocated to I<--run> scripts.  Increase this if "
"you find that I<--run> scripts or the I<--install> option are running out of "
"memory."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:361 ../customize/virt-customize.pod:128
msgid "The default can be found with this command:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:363 ../customize/virt-customize.pod:130
#, no-wrap
msgid ""
" guestfish get-memsize\n"
"\n"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:365 ../customize/virt-customize.pod:132
#: ../fish/guestfish.pod:341 ../rescue/virt-rescue.pod:192
msgid "B<--network>"
msgstr "B<--network>"

#. type: =item
#: ../builder/virt-builder.pod:367 ../customize/virt-customize.pod:134
msgid "B<--no-network>"
msgstr "B<--no-network>"

#. type: textblock
#: ../builder/virt-builder.pod:369 ../customize/virt-customize.pod:136
msgid ""
"Enable or disable network access from the guest during the installation."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:371 ../customize/virt-customize.pod:138
msgid "Enabled is the default.  Use I<--no-network> to disable access."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:373 ../customize/virt-customize.pod:140
msgid ""
"The network only allows outgoing connections and has other minor "
"limitations.  See L<virt-rescue(1)/NETWORK>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:376 ../customize/virt-customize.pod:143
msgid ""
"If you use I<--no-network> then certain other options such as I<--install> "
"will not work."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:379
msgid ""
"This does not affect whether the guest can access the network once it has "
"been booted, because that is controlled by your hypervisor or cloud "
"environment and has nothing to do with virt-builder."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:383 ../customize/virt-customize.pod:150
msgid ""
"Generally speaking you should I<not> use I<--no-network>.  But here are some "
"reasons why you might want to:"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:388 ../builder/virt-builder.pod:835
#: ../customize/virt-customize.pod:155 ../examples/guestfs-faq.pod:489
#: ../examples/guestfs-faq.pod:716 ../examples/guestfs-performance.pod:159
#: ../examples/guestfs-performance.pod:201 ../examples/guestfs-recipes.pod:406
#: ../rescue/virt-rescue.pod:326 ../resize/virt-resize.pod:29
#: ../resize/virt-resize.pod:627 ../sparsify/virt-sparsify.pod:366
#: ../src/guestfs.pod:485 ../src/guestfs.pod:1829 ../src/guestfs.pod:2101
#: ../src/guestfs.pod:2399 ../src/guestfs.pod:3892 ../v2v/virt-v2v.pod:890
#: ../v2v/virt-v2v.pod:1221
msgid "1."
msgstr "1."

#. type: textblock
#: ../builder/virt-builder.pod:390 ../customize/virt-customize.pod:157
msgid ""
"Because the libguestfs backend that you are using doesn't support the "
"network.  (See: L<guestfs(3)/BACKEND>)."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:393 ../builder/virt-builder.pod:840
#: ../customize/virt-customize.pod:160 ../examples/guestfs-faq.pod:494
#: ../examples/guestfs-faq.pod:726 ../examples/guestfs-performance.pod:165
#: ../examples/guestfs-performance.pod:208 ../examples/guestfs-recipes.pod:412
#: ../rescue/virt-rescue.pod:334 ../resize/virt-resize.pod:42
#: ../resize/virt-resize.pod:634 ../sparsify/virt-sparsify.pod:373
#: ../src/guestfs.pod:491 ../src/guestfs.pod:1833 ../src/guestfs.pod:2105
#: ../src/guestfs.pod:2403 ../src/guestfs.pod:3917 ../v2v/virt-v2v.pod:904
#: ../v2v/virt-v2v.pod:1228
msgid "2."
msgstr "2."

#. type: textblock
#: ../builder/virt-builder.pod:395 ../customize/virt-customize.pod:162
msgid ""
"Any software you need to install comes from an attached ISO, so you don't "
"need the network."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:398 ../builder/virt-builder.pod:848
#: ../customize/virt-customize.pod:165 ../examples/guestfs-faq.pod:500
#: ../examples/guestfs-faq.pod:731 ../examples/guestfs-performance.pod:214
#: ../examples/guestfs-recipes.pod:418 ../rescue/virt-rescue.pod:343
#: ../resize/virt-resize.pod:50 ../resize/virt-resize.pod:640
#: ../sparsify/virt-sparsify.pod:379 ../src/guestfs.pod:502
#: ../src/guestfs.pod:1837 ../src/guestfs.pod:2409 ../v2v/virt-v2v.pod:912
#: ../v2v/virt-v2v.pod:1234
msgid "3."
msgstr "3."

#. type: textblock
#: ../builder/virt-builder.pod:400
msgid ""
"You don't want untrusted guest code trying to access your host network when "
"running virt-builder.  This is particularly an issue when you don't trust "
"the source of the operating system templates.  (See L</SECURITY> below)."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:405 ../customize/virt-customize.pod:172
#: ../rescue/virt-rescue.pod:352 ../resize/virt-resize.pod:59
#: ../v2v/virt-v2v.pod:933
msgid "4."
msgstr "4."

#. type: textblock
#: ../builder/virt-builder.pod:407 ../customize/virt-customize.pod:174
msgid "You don't have a host network (eg. in secure/restricted environments)."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:411 ../fish/guestfish.pod:358
#: ../fuse/guestmount.pod:293
msgid "B<--no-sync>"
msgstr "B<--no-sync>"

#. type: textblock
#: ../builder/virt-builder.pod:413
msgid "Do not sync the output file on exit."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:415
msgid "Virt-builder fsync's the output file or disk image when it exits."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:417
msgid ""
"The reason is that qemu/KVM's default caching mode is C<none> or "
"C<directsync>, both of which bypass the host page cache.  Therefore these "
"would not work correctly if you immediately started the guest after running "
"virt-builder - they would not see the complete output file.  (Note that you "
"should not use these caching modes - they are fundamentally broken for this "
"and other reasons.)"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:424
msgid ""
"If you are not using these broken caching modes, you can use I<--no-sync> to "
"avoid this unnecessary sync and gain considerable extra performance."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:428
msgid "B<--notes> os-version"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:430
msgid ""
"List any notes associated with this guest, then exit (this does not do the "
"install)."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:433
msgid "B<-o> filename"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:435
msgid "B<--output> filename"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:437
msgid ""
"Write the output to C<filename>.  If you don't specify this option, then the "
"output filename is generated by taking the C<os-version> string and adding "
"C<.img> (for raw format) or C<.qcow2> (for qcow2 format)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:442
msgid ""
"Note that the output filename could be a device, partition or logical volume."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:445
msgid ""
"When used with I<--get-kernel>, this option specifies the output directory."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:448
msgid "B<--print-cache>"
msgstr "B<--print-cache>"

#. type: textblock
#: ../builder/virt-builder.pod:450
msgid "Print information about the template cache.  See L</CACHING>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:454
msgid "Don't print ordinary progress messages."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:456
msgid "B<--size> SIZE"
msgstr "B<--size> РОЗМІР"

#. type: textblock
#: ../builder/virt-builder.pod:458
msgid ""
"Select the size of the output disk, where the size can be specified using "
"common names such as C<32G> (32 gigabytes) etc."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:461
msgid ""
"Virt-builder will resize filesystems inside the disk image automatically."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:464
msgid ""
"If the size is not specified, then one of two things happens.  If the output "
"is a file, then the size is the same as the template.  If the output is a "
"device, partition, etc then the size of that device is used."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:469
msgid ""
"To specify size in bytes, the number must be followed by the lowercase "
"letter I<b>, eg: S<C<--size 10737418240b>>."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:472 ../customize/virt-customize.pod:186
#: ../rescue/virt-rescue.pod:225
msgid "B<--smp> N"
msgstr "B<--smp> N"

#. type: textblock
#: ../builder/virt-builder.pod:474 ../customize/virt-customize.pod:188
msgid "Enable N E<ge> 2 virtual CPUs for I<--run> scripts to use."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:476
msgid "B<--source> URL"
msgstr "B<--source> АДРЕСА"

#. type: textblock
#: ../builder/virt-builder.pod:478
msgid "Set the source URL to look for indexes."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:480
msgid "You can give this option multiple times to specify multiple sources."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:482
msgid "See also L</SOURCES OF TEMPLATES> below."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:484
msgid ""
"Note that you should not point I<--source> to sources that you don't trust "
"(unless the source is signed by someone you do trust).  See also the I<--no-"
"network> option."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:492
msgid "Enable debug messages and/or produce verbose output."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:494
msgid ""
"When reporting bugs, use this option and attach the complete output to your "
"bug report."
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:509 ../customize/virt-customize.pod:208
msgid "Customization options"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:511 ../customize/virt-customize.pod:210
msgid "__CUSTOMIZE_OPTIONS__"
msgstr ""

#. type: =head1
#: ../builder/virt-builder.pod:513
msgid "REFERENCE"
msgstr "ДОВІДНИК"

#. type: =head2
#: ../builder/virt-builder.pod:515
msgid "INSTALLING PACKAGES"
msgstr "ВСТАНОВЛЕННЯ ПАКУНКІВ"

#. type: textblock
#: ../builder/virt-builder.pod:517
msgid ""
"There are several approaches to installing packages or applications in the "
"guest which have different trade-offs."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:520
msgid "Installing packages at build time"
msgstr "Встановлення пакунків під час збирання"

#. type: textblock
#: ../builder/virt-builder.pod:522
msgid ""
"If the guest OS you are installing is similar to the host OS (eg.  both are "
"Linux), and if libguestfs supports network connections, then you can use I<--"
"install> to install packages like this:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:526
#, no-wrap
msgid ""
" virt-builder fedora-20 --install inkscape\n"
"\n"
msgstr ""
" virt-builder fedora-20 --install inkscape\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:528
msgid ""
"This uses the guest's package manager and the host's network connection."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:531
msgid "Updating packages at build time"
msgstr "Оновлення пакунків під час збирання"

#. type: textblock
#: ../builder/virt-builder.pod:533
msgid "To update the core set of packages in the template at build time:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:535
#, no-wrap
msgid ""
" virt-builder fedora-20 --update\n"
"\n"
msgstr ""
" virt-builder fedora-20 --update\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:537
msgid ""
"Most of the templates that ship with virt-builder come with a very minimal "
"selection of packages (known as a \"JEOS\" or \"Just Enough Operating System"
"\"), which are up to date at the time the template is created, but could be "
"out of date by the time you come to install an OS from the template.  This "
"option updates those template packages."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:543
msgid "Installing packages at first boot"
msgstr "Встановлення пакунків під час першого завантаження"

#. type: textblock
#: ../builder/virt-builder.pod:545
msgid "Another option is to install the packages when the guest first boots:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:547
#, no-wrap
msgid ""
" virt-builder fedora-20 --firstboot-install inkscape\n"
"\n"
msgstr ""
" virt-builder fedora-20 --firstboot-install inkscape\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:549
msgid ""
"This uses the guest's package manager and the guest's network connection."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:552
msgid ""
"The downsides are that it will take the guest a lot longer to boot first "
"time, and there's nothing much you can do if package installation fails (eg. "
"if a network problem means the guest can't reach the package repositories)."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:557
msgid "Installing packages at build time from a side repository"
msgstr "Встановлення пакунків зі стороннього сховища під час збирання"

#. type: textblock
#: ../builder/virt-builder.pod:559
msgid ""
"If the software you want to install is not available in the main package "
"repository of the guest, then you can add a side repository.  Usually this "
"is presented as an ISO (CD disk image) file containing extra packages."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:564
msgid ""
"You can create the disk image using either L<genisoimage(1)> or L<virt-make-"
"fs(1)>.  For genisoimage, use a command like this:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:567
#, no-wrap
msgid ""
" genisoimage -o extra-packages.iso -R -J -V EXTRA cdcontents/\n"
"\n"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:569
msgid ""
"Create a script that mounts the ISO and sets up the repository.  For yum, "
"create /tmp/install.sh containing:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:572 ../builder/virt-builder.pod:586
#, no-wrap
msgid ""
" mkdir /tmp/mount\n"
" mount LABEL=EXTRA /tmp/mount\n"
" \n"
msgstr ""
" mkdir /tmp/mount\n"
" mount LABEL=EXTRA /tmp/mount\n"
" \n"

#. type: verbatim
#: ../builder/virt-builder.pod:575
#, no-wrap
msgid ""
" cat <<'EOF' > /etc/yum.repos.d/extra.repo\n"
" [extra]\n"
" name=extra\n"
" baseurl=file:///tmp/mount\n"
" enabled=1\n"
" EOF\n"
" \n"
msgstr ""
" cat <<'EOF' > /etc/yum.repos.d/extra.repo\n"
" [extra]\n"
" name=extra\n"
" baseurl=file:///tmp/mount\n"
" enabled=1\n"
" EOF\n"
" \n"

#. type: verbatim
#: ../builder/virt-builder.pod:582
#, no-wrap
msgid ""
" yum -y install famousdatabase\n"
"\n"
msgstr ""
" yum -y install famousdatabase\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:584
msgid "For apt, create /tmp/install.sh containing:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:589
#, no-wrap
msgid ""
" apt-cdrom -d=/tmp/mount add\n"
" apt-get -y install famousdatabase\n"
"\n"
msgstr ""
" apt-cdrom -d=/tmp/mount add\n"
" apt-get -y install famousdatabase\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:592
msgid ""
"Use the I<--attach> option to attach the CD / disk image and the I<--run> "
"option to run the script:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:595
#, no-wrap
msgid ""
" virt-builder fedora-20 \\\n"
"   --attach extra-packages.iso \\\n"
"   --run /tmp/install.sh\n"
"\n"
msgstr ""
" virt-builder fedora-20 \\\n"
"   --attach extra-packages.iso \\\n"
"   --run /tmp/install.sh\n"
"\n"

#. type: =head2
#: ../builder/virt-builder.pod:599
msgid "USERS AND PASSWORDS"
msgstr "КОРИСТУВАЧІ І ПАРОЛІ"

#. type: textblock
#: ../builder/virt-builder.pod:601
msgid ""
"The I<--root-password> option is used to change the root password (otherwise "
"a random password is used).  This option takes a password C<SELECTOR> in one "
"of the following formats:"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:607
msgid "B<--root-password> file:FILENAME"
msgstr "B<--root-password> file:НАЗВА_ФАЙЛА"

#. type: textblock
#: ../builder/virt-builder.pod:609
msgid ""
"Read the root password from C<FILENAME>.  The whole first line of this file "
"is the replacement password.  Any other lines are ignored.  You should "
"create the file with mode 0600 to ensure no one else can read it."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:614
msgid "B<--root-password> password:PASSWORD"
msgstr "B<--root-password> password:ПАРОЛЬ"

#. type: textblock
#: ../builder/virt-builder.pod:616
msgid "Set the root password to the literal string C<PASSWORD>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:618
msgid ""
"B<Note: this is not secure> since any user on the same machine can see the "
"cleartext password using L<ps(1)>."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:621
msgid "B<--root-password> random"
msgstr "B<--root-password> random"

#. type: textblock
#: ../builder/virt-builder.pod:623
msgid ""
"Choose a random password, which is printed on stdout.  The password has "
"approximately 120 bits of randomness."
msgstr ""
"Вибрати випадковий пароль, який буде виведено до stdout. Випадковість пароля "
"наближено відповідатиме 120-бітовій."

#. type: textblock
#: ../builder/virt-builder.pod:626 ../fish/guestfish-actions.pod:405
#: ../format/virt-format.pod:138 ../src/guestfs-actions.pod:503
msgid "This is the default."
msgstr "Типове значення."

#. type: =item
#: ../builder/virt-builder.pod:628
msgid "B<--root-password> disabled"
msgstr "B<--root-password> disabled"

#. type: textblock
#: ../builder/virt-builder.pod:630
msgid ""
"The root account password is disabled.  This is like putting C<*> in the "
"password field."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:633
msgid "B<--root-password> locked:file:FILENAME"
msgstr "B<--root-password> locked:file:НАЗВА_ФАЙЛА"

#. type: =item
#: ../builder/virt-builder.pod:635
msgid "B<--root-password> locked:password:PASSWORD"
msgstr "B<--root-password> locked:password:ПАРОЛЬ"

#. type: =item
#: ../builder/virt-builder.pod:637
msgid "B<--root-password> locked:random"
msgstr "B<--root-password> locked:random"

#. type: textblock
#: ../builder/virt-builder.pod:639
msgid ""
"The root account is locked, but a password is placed on the account.  If "
"first unlocked (using C<passwd -u>) then logins will use the given password."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:643
msgid "B<--root-password> locked"
msgstr "B<--root-password> locked"

#. type: =item
#: ../builder/virt-builder.pod:645
msgid "B<--root-password> locked:disabled"
msgstr "B<--root-password> locked:disabled"

#. type: textblock
#: ../builder/virt-builder.pod:647
msgid "The root account is locked I<and> password is disabled."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:651
msgid "Creating user accounts"
msgstr "Створення облікових записів користувачів"

#. type: textblock
#: ../builder/virt-builder.pod:653
msgid ""
"To create user accounts, use the L<useradd(8)> command with L<--firstboot-"
"command> like this:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:656
#, no-wrap
msgid ""
" virt-builder --firstboot-command \\\n"
"    'useradd -m -p \"\" rjones ; chage -d 0 rjones'\n"
"\n"
msgstr ""
" virt-builder --firstboot-command \\\n"
"    'useradd -m -p \"\" rjones ; chage -d 0 rjones'\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:659
msgid ""
"The above command will create an C<rjones> account with no password, and "
"force the user to set a password when they first log in.  There are other "
"ways to manage passwords, see L<useradd(8)> for details."
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:663
msgid "KEYBOARD LAYOUT"
msgstr "РОЗКЛАДКА КЛАВІАТУРИ"

#. type: textblock
#: ../builder/virt-builder.pod:665
msgid ""
"Because there are so many different ways to set the keyboard layout in Linux "
"distributions, virt-builder does not yet attempt to have a simple command "
"line option.  This section describes how to set the keyboard for some common "
"Linux distributions."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:670
msgid "Keyboard layout with systemd"
msgstr "Визначення розкладки клавіатури за допомогою systemd"

#. type: textblock
#: ../builder/virt-builder.pod:672
msgid "For distros that use systemd C<localectl>, use a command like this:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:674
#, no-wrap
msgid ""
" virt-builder fedora-20 \\\n"
"   --firstboot-command 'localectl set-keymap uk'\n"
"\n"
msgstr ""
" virt-builder fedora-20 \\\n"
"   --firstboot-command 'localectl set-keymap uk'\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:677
msgid ""
"See L<localectl(1)> and L<https://www.happyassassin.net/2013/11/23/keyboard-"
"layouts-in-fedora-20-and-previously/> for more details."
msgstr ""
"Докладніший опис можна знайти за посиланнями L<localectl(1)> та L<https://"
"www.happyassassin.net/2013/11/23/keyboard-layouts-in-fedora-20-and-"
"previously/>."

#. type: =head3
#: ../builder/virt-builder.pod:681
msgid "Keyboard layout using C</etc/sysconfig/keyboard>"
msgstr ""
"Визначення розкладки клавіатури за допомогою C</etc/sysconfig/keyboard>"

#. type: textblock
#: ../builder/virt-builder.pod:683
msgid ""
"For RHEL E<le> 6, Fedora E<le> 18 and similar, upload or modify the keyboard "
"configuration file using the I<--upload>, I<--write> or I<--edit> options.  "
"For example:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:687
#, no-wrap
msgid ""
" virt-builder centos-6 \\\n"
"   --edit '/etc/sysconfig/keyboard: s/^KEYTABLE=.*/KEYTABLE=\"uk\"/'\n"
"\n"
msgstr ""
" virt-builder centos-6 \\\n"
"   --edit '/etc/sysconfig/keyboard: s/^KEYTABLE=.*/KEYTABLE=\"uk\"/'\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:690
msgid "The format of this file can be found documented in many places online."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:692
msgid "Keyboard layout with Debian-derived distros"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:694
msgid ""
"For Debian-derived distros using C</etc/default/keyboard>, upload or modify "
"the keyboard file using the I<--upload>, I<--write> or I<--edit> options.  "
"For example:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:698
#, no-wrap
msgid ""
" virt-builder debian-7 \\\n"
"   --edit '/etc/default/keyboard: s/^XKBLAYOUT=.*/XKBLAYOUT=\"gb\"/'\n"
"\n"
msgstr ""
" virt-builder debian-7 \\\n"
"   --edit '/etc/default/keyboard: s/^XKBLAYOUT=.*/XKBLAYOUT=\"gb\"/'\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:701
msgid "See L<https://wiki.debian.org/Keyboard>."
msgstr "Див. L<https://wiki.debian.org/Keyboard>."

#. type: =head2
#: ../builder/virt-builder.pod:703
msgid "LANGUAGE"
msgstr "МОВА"

#. type: textblock
#: ../builder/virt-builder.pod:705
msgid ""
"Most Linux distributions support multiple locale settings so that you can "
"have guest messages printed in another language such as Russian."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:708
msgid ""
"However there is no single setting which controls this, since extra packages "
"may need to be installed to support console and X fonts, and keyboard input "
"methods.  The packages required, and their configuration is highly distro-"
"specific, and it is outside the scope of virt-builder to do this."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:714
msgid "This section contains examples for some common Linux distributions."
msgstr "У цьому розділі наведено приклади для типових дистрибутивів Linux."

#. type: =head3
#: ../builder/virt-builder.pod:716
msgid "Setting Japanese in Fedora 20"
msgstr "Встановлення японської мови для Fedora 20"

#. type: verbatim
#: ../builder/virt-builder.pod:718
#, no-wrap
msgid ""
" virt-builder fedora-20 \\\n"
"   --size 20G \\\n"
"   --update \\\n"
"   --install @japanese-support \\\n"
"   --install @xfce \\\n"
"   --install xorg-x11-server-Xorg,xorg-x11-drivers,rsyslog \\\n"
"   --link /usr/lib/systemd/system/graphical.target:/etc/systemd/system/default.target \\\n"
"   --firstboot-command 'localectl set-locale LANG=ja_JP.utf8' \\\n"
"   --firstboot-command 'localectl set-keymap jp' \\\n"
"   --firstboot-command 'systemctl isolate graphical.target'\n"
"\n"
msgstr ""
" virt-builder fedora-20 \\\n"
"   --size 20G \\\n"
"   --update \\\n"
"   --install @japanese-support \\\n"
"   --install @xfce \\\n"
"   --install xorg-x11-server-Xorg,xorg-x11-drivers,rsyslog \\\n"
"   --link /usr/lib/systemd/system/graphical.target:/etc/systemd/system/default.target \\\n"
"   --firstboot-command 'localectl set-locale LANG=ja_JP.utf8' \\\n"
"   --firstboot-command 'localectl set-keymap jp' \\\n"
"   --firstboot-command 'systemctl isolate graphical.target'\n"
"\n"

#. type: =head3
#: ../builder/virt-builder.pod:729
msgid "Setting Japanese in Debian 7 (Wheezy)"
msgstr "Встановлення японської мови для Debian 7 (Wheezy)"

#. type: textblock
#: ../builder/virt-builder.pod:731
msgid ""
"Note that although this enables Japanese in the text console too, it is "
"unlikely that you will see properly rendered Japanese there.  However "
"Japanese is properly rendered in X applications and terminals."
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:735
#, no-wrap
msgid ""
" pkgs=locales,xfce4,\\\n"
" ibus,ibus-anthy,\\\n"
" ttf-sazanami-gothic,ttf-sazanami-mincho,\\\n"
" fonts-takao-mincho,\\\n"
" xfonts-intl-japanese,xfonts-intl-japanese-big,\\\n"
" iceweasel-l10n-ja,manpages-ja\n"
" \n"
msgstr ""
" pkgs=locales,xfce4,\\\n"
" ibus,ibus-anthy,\\\n"
" ttf-sazanami-gothic,ttf-sazanami-mincho,\\\n"
" fonts-takao-mincho,\\\n"
" xfonts-intl-japanese,xfonts-intl-japanese-big,\\\n"
" iceweasel-l10n-ja,manpages-ja\n"
" \n"

#. type: verbatim
#: ../builder/virt-builder.pod:742
#, no-wrap
msgid ""
" virt-builder debian-7 \\\n"
"   --size 20G \\\n"
"   --install $pkgs \\\n"
"   --edit '/etc/inittab: s,^#([1-9].*respawn.*/sbin/getty.*),$1,' \\\n"
"   --edit '/etc/locale.gen: s,^#\\s*ja,ja,' \\\n"
"   --write '/etc/default/locale:LANG=\"ja_JP.UTF-8\"' \\\n"
"   --run-command \"locale-gen\"\n"
"\n"
msgstr ""
" virt-builder debian-7 \\\n"
"   --size 20G \\\n"
"   --install $pkgs \\\n"
"   --edit '/etc/inittab: s,^#([1-9].*respawn.*/sbin/getty.*),$1,' \\\n"
"   --edit '/etc/locale.gen: s,^#\\s*ja,ja,' \\\n"
"   --write '/etc/default/locale:LANG=\"ja_JP.UTF-8\"' \\\n"
"   --run-command \"locale-gen\"\n"
"\n"

#. type: =head2
#: ../builder/virt-builder.pod:750
msgid "LOG FILE"
msgstr "ФАЙЛ ЖУРНАЛУ"

#. type: textblock
#: ../builder/virt-builder.pod:752
msgid ""
"Scripts and package installation that runs at build time (I<--run>, I<--run-"
"command>, I<--install>, I<--update>, but I<not> firstboot) is logged in one "
"of the following locations:"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:758
msgid "C</tmp/builder.log>"
msgstr "C</tmp/builder.log>"

#. type: textblock
#: ../builder/virt-builder.pod:760
msgid "On Linux, BSD and other guests."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:762
msgid "C<C:\\Temp\\builder.log>"
msgstr "C<C:\\Temp\\builder.log>"

#. type: textblock
#: ../builder/virt-builder.pod:764
msgid "On Windows, DOS guests."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:766
msgid "C</builder.log>"
msgstr "C</builder.log>"

#. type: textblock
#: ../builder/virt-builder.pod:768
msgid "If C</tmp> or C<C:\\Temp> is missing."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:772
msgid ""
"If you don't want the log file to appear in the final image, then use the "
"I<--no-logfile> command line option."
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:775
msgid "INSTALLATION PROCESS"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:777
msgid "When you invoke virt-builder, installation proceeds as follows:"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:783
msgid "The template image is downloaded."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:785
msgid ""
"If the template image is present in the cache, the cached version is used "
"instead.  (See L</CACHING>)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:790
msgid "The template signature is checked."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:794
msgid "The template is uncompressed to a tmp file."
msgstr "Шаблон розпаковано до файла tmp."

#. type: textblock
#: ../builder/virt-builder.pod:798
msgid ""
"The template image is resized into the destination, using L<virt-resize(1)>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:803
msgid "Extra disks are attached (I<--attach>)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:807
msgid "A new random seed is generated for the guest."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:811
msgid ""
"Guest customization is performed, in the order specified on the command line."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:816
msgid "SELinux relabelling is done (I<--selinux-relabel>)."
msgstr "Зміну міток SELinux виконано (I<--selinux-relabel>)."

#. type: =head2
#: ../builder/virt-builder.pod:820
msgid "IMPORTING THE DISK IMAGE"
msgstr "ІМПОРТУВАННЯ ОБРАЗУ ДИСКА"

#. type: =head3
#: ../builder/virt-builder.pod:822
msgid "Importing into libvirt"
msgstr "Імпортування до libvirt"

#. type: textblock
#: ../builder/virt-builder.pod:824
msgid ""
"Import the disk image into libvirt using L<virt-install(1)> I<--import> "
"option."
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:827
#, no-wrap
msgid ""
" virt-install --import \\\n"
"   --name guest --ram 2048 \\\n"
"   --disk path=disk.img,format=raw --os-variant fedora20\n"
"\n"
msgstr ""
" virt-install --import \\\n"
"   --name guest --ram 2048 \\\n"
"   --disk path=disk.img,format=raw --os-variant fedora20\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:831 ../examples/guestfs-recipes.pod:259
#: ../fish/guestfish-actions.pod:2286 ../fish/guestfish-actions.pod:2854
#: ../fish/guestfish-actions.pod:3454 ../src/guestfs-actions.pod:3622
#: ../src/guestfs-actions.pod:4524 ../src/guestfs-actions.pod:5413
#: ../src/guestfs.pod:776 ../src/guestfs.pod:2679 ../tools/virt-win-reg:750
msgid "Notes:"
msgstr "Нотатки:"

#. type: textblock
#: ../builder/virt-builder.pod:837
msgid ""
"You I<must> specify the correct format.  The format is C<raw> unless you "
"used virt-builder's I<--format> option."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:842
msgid ""
"I<--os-variant> is highly recommended, because it will present optimum "
"devices to enable the guest to run most efficiently.  To get a list of all "
"variants, do:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:846
#, no-wrap
msgid ""
" virt-install --os-variant list\n"
"\n"
msgstr ""
" virt-install --os-variant list\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:850
msgid ""
"You can run virt-install as root or non-root.  Each works slightly "
"differently because libvirt manages a different set of virtual machines for "
"each user.  In particular virt-manager normally shows the root-owned VMs, "
"whereas Boxes shows the user-owned VMs, and other tools probably work "
"differently as well."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:858
msgid "Importing into OpenStack"
msgstr "Імпортування до OpenStack"

#. type: textblock
#: ../builder/virt-builder.pod:860
msgid "Import the image into Glance (the OpenStack image store) by doing:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:862
#, no-wrap
msgid ""
" glance image-create --name fedora-20-image --file fedora-20.img \\\n"
"   --disk-format raw --container-format bare \\\n"
"   --is-public True\n"
"\n"
msgstr ""
" glance image-create --name fedora-20-image --file fedora-20.img \\\n"
"   --disk-format raw --container-format bare \\\n"
"   --is-public True\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:866
msgid ""
"The I<--file> parameter is the virt-builder-generated disk image.  It should "
"match virt-builder's I<--output> option.  The I<--disk-format> parameter "
"should match virt-builder's I<--format> option (or C<raw> if you didn't use "
"that option).  The I<--container-format> should always be C<bare> since virt-"
"builder doesn't put images into containers."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:872
msgid ""
"You can use the S<C<glance image-show I<fedora-20-image>>> command to "
"display the properties of the image."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:875
msgid "To boot up an instance of your image on a Nova compute node, do:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:877
#, no-wrap
msgid ""
" nova boot fedora-20-server --image fedora-20-image \\\n"
"   --flavor m1.medium\n"
"\n"
msgstr ""
" nova boot fedora-20-server --image fedora-20-image \\\n"
"   --flavor m1.medium\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:880
msgid ""
"Use S<C<nova flavor-list>> to list possible machine flavors.  Use S<C<nova "
"list>> to list running instances."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:883
msgid "Booting directly using qemu or KVM"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:885
msgid ""
"The qemu command line is not very stable or easy to use, hence libvirt "
"should be used if possible.  However a command line similar to the following "
"could be used to boot the virtual machine:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:889
#, no-wrap
msgid ""
" qemu-system-x86_64 \\\n"
"   -machine accel=kvm:tcg \\\n"
"   -cpu host \\\n"
"   -m 2048 \\\n"
"   -drive file=disk.img,format=raw,if=virtio\n"
"\n"
msgstr ""
" qemu-system-x86_64 \\\n"
"   -machine accel=kvm:tcg \\\n"
"   -cpu host \\\n"
"   -m 2048 \\\n"
"   -drive file=disk.img,format=raw,if=virtio\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:895
msgid ""
"As with libvirt, it is very important that the correct format is chosen.  It "
"will be C<raw> unless the I<--format> option was used."
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:898
msgid "CONFIGURATION MANAGEMENT"
msgstr "КЕРУВАННЯ НАЛАШТУВАННЯМИ"

#. type: =head3
#: ../builder/virt-builder.pod:900
msgid "Puppet"
msgstr "Puppet"

#. type: textblock
#: ../builder/virt-builder.pod:902
msgid ""
"To enable the Puppet agent in a guest, install the package, point the "
"configuration at your Puppetmaster, and ensure the agent runs at boot."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:906
msgid "A typical virt-builder command would be:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:908
#, no-wrap
msgid ""
" virt-builder fedora-20 \\\n"
"   --hostname client.example.com \\\n"
"   --update \\\n"
"   --install puppet \\\n"
"   --edit '/etc/puppet/puppet.conf:\n"
"       s/^\\[agent\\]/[agent]\\n  server = puppetmaster.example.com/' \\\n"
"   --run-command 'systemctl enable puppet' \\\n"
"   --selinux-relabel\n"
"\n"
msgstr ""
" virt-builder fedora-20 \\\n"
"   --hostname client.example.com \\\n"
"   --update \\\n"
"   --install puppet \\\n"
"   --edit '/etc/puppet/puppet.conf:\n"
"       s/^\\[agent\\]/[agent]\\n  server = puppetmaster.example.com/' \\\n"
"   --run-command 'systemctl enable puppet' \\\n"
"   --selinux-relabel\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:917
msgid ""
"The precise instructions vary according to the Linux distro.  For further "
"information see: L<http://docs.puppetlabs.com/guides/installation.htm>"
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:921
msgid "DEBUGGING BUILDS"
msgstr "ДІАГНОСТИКА ЗБИРАННЯ"

#. type: textblock
#: ../builder/virt-builder.pod:923
msgid ""
"If virt-builder itself fails, then enable debugging (I<-v>) and report a bug "
"(see L</BUGS> below)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:926
msgid ""
"If virt-builder fails because some script or package it is installing fails, "
"try using I<--no-delete-on-failure> to preserve the output file, and "
"continue reading this section."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:930
msgid ""
"If virt-builder is successful but the image doesn't work, here are some "
"things to try:"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:935
msgid "Use virt-rescue"
msgstr "Використання virt-rescue"

#. type: textblock
#: ../builder/virt-builder.pod:937
msgid "Run L<virt-rescue(1)> on the disk image:"
msgstr "Запустити L<virt-rescue(1)> над образом диска:"

#. type: verbatim
#: ../builder/virt-builder.pod:939
#, no-wrap
msgid ""
" virt-rescue -a disk.img\n"
"\n"
msgstr ""
" virt-rescue -a disk.img\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:941
msgid ""
"This gives you a rescue shell.  You can mount the filesystems from the disk "
"image on C</sysroot> and examine them using ordinary Linux commands.  You "
"can also chroot into the guest to reinstall the bootloader.  The virt-rescue "
"man page has a lot more information and examples."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:947
msgid "Use guestfish"
msgstr "Використання guestfish"

#. type: textblock
#: ../builder/virt-builder.pod:949
msgid "Run L<guestfish(1)> on the disk image:"
msgstr "Запустити L<guestfish(1)> над образом диска:"

#. type: verbatim
#: ../builder/virt-builder.pod:951
#, no-wrap
msgid ""
" guestfish -a disk.img -i\n"
"\n"
msgstr ""
" guestfish -a disk.img -i\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:953
msgid ""
"Use guestfish commands like C<ll /directory> and C<cat /file> to examine "
"directories and files."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:956
msgid "Use guestmount"
msgstr "Використання guestmount"

#. type: textblock
#: ../builder/virt-builder.pod:958
msgid ""
"Mount the disk image safely on the host using FUSE and L<guestmount(1)>:"
msgstr ""
"Безпечно змонтувати образ диска у основній системі за допомогою FUSE і "
"L<guestmount(1)>:"

#. type: verbatim
#: ../builder/virt-builder.pod:960
#, no-wrap
msgid ""
" mkdir /tmp/mp\n"
" guestmount -a disk.img -i /tmp/mp\n"
" cd /tmp/mp\n"
"\n"
msgstr ""
" mkdir /tmp/mp\n"
" guestmount -a disk.img -i /tmp/mp\n"
" cd /tmp/mp\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:964
msgid "To unmount the disk image do:"
msgstr "Щоб демонтувати образ диска, виконайте такі дії:"

#. type: verbatim
#: ../builder/virt-builder.pod:966
#, no-wrap
msgid ""
" fusermount -u /tmp/mp\n"
"\n"
msgstr ""
" fusermount -u /tmp/mp\n"
"\n"

#. type: =item
#: ../builder/virt-builder.pod:968
msgid "Add a serial console"
msgstr "Додати послідовну консоль"

#. type: textblock
#: ../builder/virt-builder.pod:970
msgid ""
"If the guest hangs during boot, it can be helpful to add a serial console to "
"the guest, and direct kernel messages to the serial console.  Adding the "
"serial console will involve looking at the documentation for your "
"hypervisor.  To direct kernel messages to the serial console, add the "
"following on the kernel command line:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:976
#, no-wrap
msgid ""
" console=tty0 console=ttyS0,115200\n"
"\n"
msgstr ""
" console=tty0 console=ttyS0,115200\n"
"\n"

#. type: =head2
#: ../builder/virt-builder.pod:980
msgid "SOURCES OF TEMPLATES"
msgstr "ДЖЕРЕЛА ШАБЛОНІВ"

#. type: textblock
#: ../builder/virt-builder.pod:982
msgid ""
"virt-builder reads the available sources from configuration files, with the "
"I<.conf> extension and located in the following paths:"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:989
msgid ""
"$XDG_CONFIG_HOME/virt-builder/repos.d/ (C<$XDG_CONFIG_HOME> is C<$HOME/."
"config> if not set)."
msgstr ""
"$XDG_CONFIG_HOME/virt-builder/repos.d/ (C<$XDG_CONFIG_HOME> дорівнює C<"
"$HOME/.config>, якщо не встановлено)."

#. type: textblock
#: ../builder/virt-builder.pod:994
msgid ""
"$XDG_CONFIG_DIRS/virt-builder/repos.d/ (where C<$XDG_CONFIG_DIRS> means any "
"of the directories in that environment variable, or just C</etc/xdg> if not "
"set)"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1000
msgid ""
"Each I<.conf> file in those paths has a simple text format like the "
"following:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1003
#, no-wrap
msgid ""
" [libguestfs.org]\n"
" uri=http://libguestfs.org/download/builder/index.asc\n"
" gpgkey=file:///etc/xdg/virt-builder/repos.d/libguestfs.gpg\n"
"\n"
msgstr ""
" [libguestfs.org]\n"
" uri=http://libguestfs.org/download/builder/index.asc\n"
" gpgkey=file:///etc/xdg/virt-builder/repos.d/libguestfs.gpg\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:1007
msgid ""
"The part in square brackets is the repository identifier, which is used as "
"unique identifier."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1010 ../builder/virt-builder.pod:1151
msgid "The following fields can appear:"
msgstr "Можуть з’явитися такі поля:"

#. type: =item
#: ../builder/virt-builder.pod:1014
msgid "C<uri=URI>"
msgstr "C<uri=АДРЕСА>"

#. type: textblock
#: ../builder/virt-builder.pod:1016
msgid "The URI of the index file which this repository refers to."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1018 ../builder/virt-builder.pod:1239
msgid "This field is required."
msgstr "Це поле слід заповнити."

#. type: =item
#: ../builder/virt-builder.pod:1020
msgid "C<gpgkey=URI>"
msgstr "C<gpgkey=АДРЕСА>"

#. type: textblock
#: ../builder/virt-builder.pod:1022
msgid ""
"This optional field represents the URI (although only I<file://> URIs are "
"accepted) of the key used to sign the index file.  If not present, the index "
"file referred by I<uri=..> is not signed."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1026
msgid "C<proxy=MODE>"
msgstr "C<proxy=РЕЖИМ>"

#. type: textblock
#: ../builder/virt-builder.pod:1028
msgid ""
"This optional field specifies the proxy mode, to be used when downloading "
"the index file of this repository.  The possible values are:"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1033
msgid "B<no>, B<off>"
msgstr "B<no>, B<off>"

#. type: textblock
#: ../builder/virt-builder.pod:1035
msgid ""
"No proxy is being used at all, even overriding the system configuration."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1037
msgid "B<system>"
msgstr "B<system>"

#. type: textblock
#: ../builder/virt-builder.pod:1039
msgid "The proxy used is the system one."
msgstr "Використаний проксі-сервер є системним."

#. type: =item
#: ../builder/virt-builder.pod:1041
msgid "I<anything else>"
msgstr "I<усе інше>"

#. type: textblock
#: ../builder/virt-builder.pod:1043
msgid ""
"Specifies the actual proxy configuration to be used, overriding the system "
"configuration."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1048
msgid ""
"If not present, the assumed value is to respect the proxy settings of the "
"system (i.e. as if B<system> would be specified)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1053
msgid ""
"For serious virt-builder use, you may want to create your own repository of "
"templates."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1056
msgid "Libguestfs.org repository"
msgstr "Сховище libguestfs.org"

#. type: textblock
#: ../builder/virt-builder.pod:1058
msgid ""
"Out of the box, virt-builder downloads the file L<http://libguestfs.org/"
"download/builder/index.asc> which is an index of available templates plus "
"some information about each one, wrapped up in a digital signature.  The "
"command C<virt-builder --list> lists out the information in this index file."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1064
msgid ""
"The templates hosted on libguestfs.org were created using shell scripts, "
"kickstart files and preseed files which can be found in the libguestfs "
"source tree, in C<builder/website>."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1068
msgid "Setting up the repository"
msgstr "Налаштовування доступу до сховища"

#. type: textblock
#: ../builder/virt-builder.pod:1070
msgid ""
"You can set up your own site containing an index file and some templates, "
"and then point virt-builder at the site by creating a I<.conf> file pointing "
"to it."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1074
msgid ""
"Note that if your index is signed, you will need to properly fill I<gpgkey=.."
"> in your I<.conf> file, making sure to deploy also the GPG key file."
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1078
#, no-wrap
msgid ""
" virt-builder --source https://example.com/builder/index.asc \\\n"
"    --fingerprint 'AAAA BBBB ...' \\\n"
"    --list\n"
"\n"
msgstr ""
" virt-builder --source https://example.com/builder/index.asc \\\n"
"    --fingerprint 'AAAA BBBB ...' \\\n"
"    --list\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:1082
msgid ""
"You can host this on any web or FTP server, or a local or network filesystem."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1085
msgid "Setting up a GPG key"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1087
msgid ""
"If you don't have a GnuPG key, you will need to set one up.  (Strictly "
"speaking this is optional, but if your index and template files are not "
"signed then virt-builder users will have to use the I<--no-check-signature> "
"flag every time they use virt-builder.)"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1092
msgid ""
"To create a key, see the GPG manual L<http://www.gnupg.org/gph/en/manual."
"html>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1095
msgid "Export your GPG public key:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1097
#, no-wrap
msgid ""
" gpg --export -a \"you@example.com\" > pubkey\n"
" \n"
msgstr ""
" gpg --export -a \"you@example.com\" > pubkey\n"
" \n"

#. type: =head3
#: ../builder/virt-builder.pod:1099
msgid "Create the templates"
msgstr "Створення шаблонів"

#. type: textblock
#: ../builder/virt-builder.pod:1101
msgid ""
"There are many ways to create the templates.  For example you could clone "
"existing guests (see L<virt-sysprep(1)>), or you could install a guest by "
"hand (L<virt-install(1)>).  To see how the templates were created for virt-"
"builder, look at the scripts in C<builder/website>"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1106
msgid ""
"For best results when compressing the templates, use the following xz "
"options (see L<nbdkit-xz-plugin(1)> for further explanation):"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1109
#, no-wrap
msgid ""
" xz --best --block-size=16777216 disk\n"
"\n"
msgstr ""
" xz --best --block-size=16777216 disk\n"
"\n"

#. type: =head3
#: ../builder/virt-builder.pod:1111
msgid "Creating and signing the index file"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1113
msgid ""
"The index file has a simple text format (shown here without the digital "
"signature):"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1116
#, no-wrap
msgid ""
" [fedora-18]\n"
" name=Fedora® 18\n"
" osinfo=fedora18\n"
" arch=x86_64\n"
" file=fedora-18.xz\n"
" checksum[sha512]=...\n"
" format=raw\n"
" size=6442450944\n"
" compressed_size=148947524\n"
" expand=/dev/sda3\n"
" \n"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1127
#, no-wrap
msgid ""
" [fedora-19]\n"
" name=Fedora® 19\n"
" osinfo=fedora19\n"
" arch=x86_64\n"
" file=fedora-19.xz\n"
" checksum[sha512]=...\n"
" revision=3\n"
" format=raw\n"
" size=4294967296\n"
" compressed_size=172190964\n"
" expand=/dev/sda3\n"
"\n"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1139
msgid ""
"The part in square brackets is the C<os-version>, which is the same string "
"that is used on the virt-builder command line to build that OS."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1142
msgid ""
"After preparing the C<index> file in the correct format, clearsign it using "
"the following command:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1145
#, no-wrap
msgid ""
" gpg --clearsign --armor index\n"
"\n"
msgstr ""
" gpg --clearsign --armor index\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:1147
msgid ""
"This will create the final file called C<index.asc> which can be uploaded to "
"the server (and is the I<uri=..> URL).  As noted above, signing the index "
"file is optional, but recommended."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1155
msgid "C<name=NAME>"
msgstr "C<name=НАЗВА>"

#. type: textblock
#: ../builder/virt-builder.pod:1157
msgid ""
"The user-friendly name of this template.  This is displayed in the I<--list> "
"output but is otherwise not significant."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1160
msgid "C<osinfo=ID>"
msgstr "C<osinfo=ІДЕНТИФІКАТОР>"

#. type: textblock
#: ../builder/virt-builder.pod:1162
msgid ""
"This optional field maps the operating system to the associated libosinfo "
"ID.  Virt-builder does not use it (yet)."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1165
msgid "C<arch=ARCH>"
msgstr "C<arch=АРХІТЕКТУРА>"

#. type: textblock
#: ../builder/virt-builder.pod:1167
msgid ""
"The architecture of the operating system installed within the template. This "
"field is required."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1170
msgid "C<file=PATH>"
msgstr "C<file=ШЛЯХ>"

#. type: textblock
#: ../builder/virt-builder.pod:1172
msgid "The path (relative to the index) of the xz-compressed template."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1174 ../builder/virt-builder.pod:1185
msgid ""
"Note that absolute paths or URIs are B<not> permitted here.  This is because "
"virt-builder has a \"same origin\" policy for templates so they cannot come "
"from other servers."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1178
msgid "C<sig=PATH>"
msgstr "C<sig=ШЛЯХ>"

#. type: textblock
#: ../builder/virt-builder.pod:1180
msgid "B<This option is deprecated>.  Use the checksum field instead."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1182
msgid ""
"The path (relative to the index) of the GPG detached signature of the xz "
"file."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1189
msgid "The file can be created as follows:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1191
#, no-wrap
msgid ""
" gpg --detach-sign --armor -o disk.xz.sig disk.xz\n"
"\n"
msgstr ""
" gpg --detach-sign --armor -o disk.xz.sig disk.xz\n"
"\n"

#. type: =item
#: ../builder/virt-builder.pod:1193
msgid "C<checksum[sha512]=7b882fe9b82eb0fef...>"
msgstr "C<checksum[sha512]=7b882fe9b82eb0fef...>"

#. type: textblock
#: ../builder/virt-builder.pod:1195
msgid ""
"The SHA-512 checksum of the B<compressed> file is checked after it is "
"downloaded.  To work out the signature, do:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1198
#, no-wrap
msgid ""
" sha512sum disk.xz\n"
"\n"
msgstr ""
" sha512sum disk.xz\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:1200
msgid ""
"Note if you use this, you don't need to sign the file, ie. don't use "
"C<sig>.  This option overrides C<sig>."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1203
msgid "C<checksum=7b882fe9b82eb0fef...>"
msgstr "C<checksum=7b882fe9b82eb0fef...>"

#. type: textblock
#: ../builder/virt-builder.pod:1205
msgid "C<checksum> is an alias for C<checksum[sha512]>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1207
msgid ""
"If you need to interoperate with virt-builder = 1.24.0 then you have to use "
"C<checksum> because that version would give a parse error with square "
"brackets and numbers in the key of a field.  This is fixed in virt-builder "
"E<ge> 1.24.1."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1212
msgid "C<revision=N>"
msgstr "C<revision=N>"

#. type: textblock
#: ../builder/virt-builder.pod:1214
msgid ""
"The revision is an integer which is used to control the template cache.  "
"Increasing the revision number causes clients to download the template again "
"even if they have a copy in the cache."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1218
msgid "The revision number is optional.  If omitted it defaults to C<1>."
msgstr ""
"Номер модифікації є необов’язковим. Якщо його не вказано, типовим значенням "
"вважається C<1>."

#. type: =item
#: ../builder/virt-builder.pod:1220
msgid "C<format=raw>"
msgstr "C<format=raw>"

#. type: =item
#: ../builder/virt-builder.pod:1222
msgid "C<format=qcow2>"
msgstr "C<format=qcow2>"

#. type: textblock
#: ../builder/virt-builder.pod:1224
msgid ""
"Specify the format of the disk image (before it was compressed).  If not "
"given, the format is autodetected, but generally it is better to be explicit "
"about the intended format."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1228
msgid ""
"Note this is the source format, which is different from the I<--format> "
"option (requested output format).  Virt-builder does on-the-fly conversion "
"from the source format to the requested output format."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1233
msgid "C<size=NNN>"
msgstr "C<size=NNN>"

#. type: textblock
#: ../builder/virt-builder.pod:1235
msgid ""
"The virtual size of the image in bytes.  This is the size of the image when "
"uncompressed.  If using a non-raw format such as qcow2 then it means the "
"virtual disk size, not the size of the qcow2 file."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1241
msgid ""
"Virt-builder also uses this as the minimum size that users can request via "
"the I<--size> option, or as the default size if there is no I<--size> option."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1245
msgid "C<compressed_size=NNN>"
msgstr "C<compressed_size=NNN>"

#. type: textblock
#: ../builder/virt-builder.pod:1247
msgid ""
"The compressed size of the disk image in bytes.  This is just used for "
"information (when using I<--list --long>)."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1250
msgid "C<expand=/dev/sdaX>"
msgstr "C<expand=/dev/sdaX>"

#. type: textblock
#: ../builder/virt-builder.pod:1252
msgid ""
"When expanding the image to its final size, instruct L<virt-resize(1)> to "
"expand the named partition in the guest image to fill up all available "
"space.  This works like the virt-resize I<--expand> option."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1256
msgid ""
"You should usually put the device name of the guest's root filesystem here."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1258
msgid ""
"It's a good idea to use this, but not required.  If the field is omitted "
"then virt-resize will create an extra partition at the end of the disk to "
"cover the free space, which is much less user-friendly."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1262
msgid "C<lvexpand=/dev/VolGroup/LogVol>"
msgstr "C<lvexpand=/пристрій/група_томів/логічний_том>"

#. type: textblock
#: ../builder/virt-builder.pod:1264
msgid ""
"When expanding the image to its final size, instruct L<virt-resize(1)> to "
"expand the named logical volume in the guest image to fill up all available "
"space.  This works like the virt-resize I<--lv-expand> option."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1268
msgid ""
"If the guest uses LVM2 you should usually put the LV of the guest's root "
"filesystem here.  If the guest does not use LVM2 or its root filesystem is "
"not on an LV, don't use this option."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1272
msgid "C<notes=NOTES>"
msgstr "C<notes=НОТАТКИ>"

#. type: textblock
#: ../builder/virt-builder.pod:1274
msgid ""
"Any notes that go with this image, especially notes describing what packages "
"are in the image, how the image was prepared, and licensing information."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1278
msgid ""
"This information is shown in the I<--notes> and I<--list> I<--long> modes."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1280
msgid ""
"You can use multi-line notes here by indenting each new line with at least "
"one character of whitespace (even on blank lines):"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1283
#, no-wrap
msgid ""
" notes=This image was prepared using\n"
"  the following kickstart script:\n"
"                                <-- one space at beginning of line\n"
"  part /boot --fstype ext3\n"
"  ...\n"
"\n"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1289
msgid "C<hidden=true>"
msgstr "C<hidden=true>"

#. type: textblock
#: ../builder/virt-builder.pod:1291
msgid ""
"Using the hidden flag prevents the template from being listed by the I<--"
"list> option (but it is still installable).  This is used for test images."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1295
msgid "C<aliases=ALIAS1 ALIAS2 ...>"
msgstr "C<aliases=ПСЕВДОНІМ1 ПСЕВДОНІМ2 ...>"

#. type: textblock
#: ../builder/virt-builder.pod:1297
msgid ""
"This optional field specifies a list of aliases, separated by spaces, for "
"the image.  For example, an alias could be used to always point to the "
"latest version of a certain image, leaving the old versions available in the "
"index instead of updating the same image (see the C<revision> field)."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1305
msgid "Running virt-builder against multiple sources"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1307
msgid ""
"It is possible to use multiple sources with virt-builder.  The recommended "
"way is to deploy I<.conf> files pointing to the index files. Another way is "
"to specify the sources using multiple I<--source> and/or I<--fingerprint> "
"options:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1312
#, no-wrap
msgid ""
" virt-builder \\\n"
"   --source http://example.com/s1/index.asc \\\n"
"   --source http://example.com/s2/index.asc\n"
"\n"
msgstr ""
" virt-builder \\\n"
"   --source http://example.com/s1/index.asc \\\n"
"   --source http://example.com/s2/index.asc\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:1316
msgid ""
"You can provide N or 1 fingerprints.  In the case where you provide N "
"fingerprints, N = number of sources and there is a 1-1 correspondence "
"between each source and each fingerprint:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1320
#, no-wrap
msgid ""
" virt-builder \\\n"
"   --source http://example.com/s1/index.asc --fingerprint '0123 ...' \\\n"
"   --source http://example.com/s2/index.asc --fingerprint '9876 ...'\n"
"\n"
msgstr ""
" virt-builder \\\n"
"   --source http://example.com/s1/index.asc --fingerprint '0123 ...' \\\n"
"   --source http://example.com/s2/index.asc --fingerprint '9876 ...'\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:1324
msgid ""
"In the case where you provide 1 fingerprint, the same fingerprint is used "
"for all sources."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1327
msgid "You C<must> provide at least 1 fingerprint."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1329
msgid "Licensing of templates"
msgstr "Ліцензування шаблонів"

#. type: textblock
#: ../builder/virt-builder.pod:1331
msgid ""
"You should be aware of the licensing of images that you distribute.  For "
"open source guests, provide a link to the source code in the C<notes> field "
"and comply with other requirements (eg. around trademarks)."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1336
msgid "Formal specification of the index file"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1338
msgid ""
"The index file format has a formal specification defined by the flex scanner "
"and bison parser used to parse the file.  This can be found in the following "
"files in the libguestfs source tree:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1342
#, no-wrap
msgid ""
" builder/index-scan.l\n"
" builder/index-parse.y\n"
"\n"
msgstr ""
" builder/index-scan.l\n"
" builder/index-parse.y\n"
"\n"

#. type: textblock
#: ../builder/virt-builder.pod:1345
msgid ""
"A tool called L<virt-index-validate(1)> is available to validate the index "
"file to ensure it is correct."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1348
msgid ""
"Note that the parser and tool can work on either the signed or unsigned "
"index file (ie. C<index> or C<index.asc>)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1351
msgid "The index is always encoded in UTF-8."
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:1353
msgid "CACHING"
msgstr "КЕШУВАННЯ"

#. type: =head3
#: ../builder/virt-builder.pod:1355
msgid "Caching templates"
msgstr "Кешування шаблонів"

#. type: textblock
#: ../builder/virt-builder.pod:1357
msgid ""
"Since the templates are usually very large, downloaded templates are cached "
"in the user's home directory."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1360
msgid ""
"The location of the cache is C<$XDG_CACHE_HOME/virt-builder/> or C<$HOME/."
"cache/virt-builder>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1363
msgid ""
"You can print out information about the cache directory, including which "
"guests are currently cached, by doing:"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1368
msgid "The cache can be deleted if you want to save space by doing:"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1372
msgid "You can download all (current) templates to the local cache by doing:"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1376
msgid "To disable the template cache, use I<--no-cache>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1378
msgid ""
"Only templates are cached.  The index and detached digital signatures are "
"not cached."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1381
msgid "Caching packages"
msgstr "Кешування пакунків"

#. type: textblock
#: ../builder/virt-builder.pod:1383
msgid ""
"Virt-builder uses L<curl(1)> to download files and it also uses the current "
"C<http_proxy> (etc) settings when installing packages (I<--install>, I<--"
"update>)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1387
msgid ""
"You may therefore want to set those environment variables in order to "
"maximize the amount of local caching that happens.  See L</ENVIRONMENT "
"VARIABLES> and L<curl(1)>."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1391
msgid "Local mirrors"
msgstr "Локальні дзеркала"

#. type: textblock
#: ../builder/virt-builder.pod:1393
msgid ""
"To increase both speed and reliability of installing packages, you can set "
"up a local mirror of the target distribution, and point the guest package "
"manager at that."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1397
msgid ""
"Because of the order in which each phase of installation happens, you cannot "
"use I<--write> (to point the package manager at a repo)  followed by I<--"
"install> (to install from that repo).  The I<--write> and I<--install> steps "
"run in the opposite order, regardless of their order on the command line.  "
"You have to do this using I<--run-command> instead of I<--install>."
msgstr ""

#. type: =head4
#: ../builder/virt-builder.pod:1404
msgid "Using a local mirror with Fedora"
msgstr "Використання локального дзеркала з Fedora"

#. type: textblock
#: ../builder/virt-builder.pod:1406
msgid "To install a Fedora guest using a local mirror:"
msgstr ""
"Для встановлення гостьової системи Fedora за допомогою локального дзеркала:"

#. type: verbatim
#: ../builder/virt-builder.pod:1408
#, no-wrap
msgid ""
" virt-builder fedora 20 \\\n"
"   --edit '/etc/yum.repos.d/fedora.repo:\n"
"       s{.*baseurl=.*}{baseurl=http://example.com/mirror/};\n"
"       s{.*metalink=.*}{};\n"
"   ' \\\n"
"   --edit '/etc/yum.repos.d/fedora-updates.repo:\n"
"       s{.*baseurl=.*}{baseurl=http://example.com/mirror-updates/};\n"
"       s{.*metalink=.*}{};\n"
"   ' \\\n"
"   --run-command 'yum -y update' \\\n"
"   --run-command 'yum -y install pkg1 pkg2 ...'\n"
"\n"
msgstr ""
" virt-builder fedora 20 \\\n"
"   --edit '/etc/yum.repos.d/fedora.repo:\n"
"       s{.*baseurl=.*}{baseurl=http://example.com/mirror/};\n"
"       s{.*metalink=.*}{};\n"
"   ' \\\n"
"   --edit '/etc/yum.repos.d/fedora-updates.repo:\n"
"       s{.*baseurl=.*}{baseurl=http://example.com/mirror-updates/};\n"
"       s{.*metalink=.*}{};\n"
"   ' \\\n"
"   --run-command 'yum -y update' \\\n"
"   --run-command 'yum -y install pkg1 pkg2 ...'\n"
"\n"

#. type: =head4
#: ../builder/virt-builder.pod:1420
msgid "Using a local mirror with Debian"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1422
msgid ""
"Assuming that you are using C<apt-proxy> to mirror the repository, you "
"should create a new C<sources.list> file to point to your proxy (see "
"L<https://help.ubuntu.com/community/AptProxy>) and then do:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1426
#, no-wrap
msgid ""
" virt-builder fedora 20 \\\n"
"   --upload sources.list:/etc/apt/sources.list \\\n"
"   --run-command 'apt-get -y update' \\\n"
"   --run-command 'apt-get -y install pkg1 pkg2 ...'\n"
"\n"
msgstr ""
" virt-builder fedora 20 \\\n"
"   --upload sources.list:/etc/apt/sources.list \\\n"
"   --run-command 'apt-get -y update' \\\n"
"   --run-command 'apt-get -y install pkg1 pkg2 ...'\n"
"\n"

#. type: =head2
#: ../builder/virt-builder.pod:1431
msgid "DIGITAL SIGNATURES"
msgstr "ЦИФРОВІ ПІДПИСИ"

#. type: textblock
#: ../builder/virt-builder.pod:1433
msgid ""
"Virt-builder uses GNU Privacy Guard (GnuPG or gpg) to verify that the index "
"and templates have not been tampered with."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1436
msgid "The source points to an index file, which is optionally signed."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1438
msgid ""
"Virt-builder downloads the index and checks that the signature is valid and "
"the signer's fingerprint matches the specified fingerprint (ie. the one "
"specified in I<gpgkey=..> in the I<.conf>, or with I<--fingerprint>, in that "
"order)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1443
msgid ""
"For checking against the built-in public key/fingerprint, this requires "
"importing the public key into the user's local gpg keyring (that's just the "
"way that gpg works)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1447
msgid ""
"When a template is downloaded, its signature is checked in the same way."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1450
msgid ""
"Although the signatures are optional, if you don't have them then virt-"
"builder users will have to use I<--no-check-signature> on the command line.  "
"This prevents an attacker from replacing the signed index file with an "
"unsigned index file and having virt-builder silently work without checking "
"the signature.  In any case it is highly recommended that you always create "
"signed index and templates."
msgstr ""

#. type: =head1
#: ../builder/virt-builder.pod:1457 ../src/guestfs.pod:3399
msgid "ARCHITECTURE"
msgstr "АРХІТЕКТУРА"

#. type: textblock
#: ../builder/virt-builder.pod:1459
msgid ""
"Virt-builder can build a guest for any architecture no matter what the host "
"architecture is.  For example an x86-64 guest on an ARM host."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1462
msgid ""
"However certain options may not work, specifically options that require "
"running commands in the guest during the build process: I<--install>, I<--"
"update>, I<--run>, I<--run-command>.  You may need to replace these with "
"their firstboot-equivalents."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1467
msgid ""
"An x86-64 host building 32 bit i686 guests should work without any special "
"steps."
msgstr ""

#. type: =head1
#: ../builder/virt-builder.pod:1470 ../src/guestfs.pod:1945
#: ../sysprep/virt-sysprep.pod:481
msgid "SECURITY"
msgstr "БЕЗПЕКА"

#. type: textblock
#: ../builder/virt-builder.pod:1472
msgid ""
"Virt-builder does not need to run as root (in fact, should not be run as "
"root), and doesn't use setuid, C<sudo> or any similar mechanism."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1475
msgid ""
"I<--install>, I<--update>, I<--run> and I<--run-command> are implemented "
"using an appliance (a small virtual machine) so these commands do not run on "
"the host.  If you are using the libguestfs libvirt backend and have SELinux "
"enabled then the virtual machine is additionally encapsulated in an SELinux "
"container (sVirt)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1481
msgid ""
"However these options will have access to the host's network and since the "
"template may contain untrusted code, the code might try to access host "
"network resources which it should not.  You can use I<--no-network> to "
"prevent this."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1486
msgid ""
"Firstboot commands run in the context of the guest when it is booted, and so "
"the security of your hypervisor / cloud should be considered."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1489
msgid ""
"Virt-builder injects a random seed into every guest which it builds.  This "
"helps to ensure that TCP sequence numbers, UUIDs, ssh host keys etc are "
"truly random when the guest boots."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1493
msgid "You should check digital signatures and not ignore any signing errors."
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:1495
msgid "CLONES"
msgstr "КЛОНИ"

#. type: textblock
#: ../builder/virt-builder.pod:1497
msgid ""
"If you wish to create many new guests of the same type, it is tempting to "
"run virt-builder once and then copy the output file.  You should B<not> do "
"this.  You should run virt-builder once for each new guest you need."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1502
msgid ""
"The reason is that each clone needs to have (at least) a separate random "
"seed, and possibly other unique features (such as filesystem UUIDs) in "
"future versions of virt-builder."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1506
msgid ""
"Another thing you should I<not> do is to boot the guest, then clone the "
"booted disk image.  The reason is that some guests create unique machine "
"IDs, SSH host keys and so on at first boot, and you would not want clones to "
"have duplicate identities."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1511
msgid "See also: L<virt-sysprep(1)>."
msgstr "Див. також L<virt-sysprep(1)>."

#. type: =head2
#: ../builder/virt-builder.pod:1513
msgid "PERFORMANCE"
msgstr "ШВИДКОДІЯ"

#. type: textblock
#: ../builder/virt-builder.pod:1515
msgid ""
"The most important aspect of getting good performance is caching.  Templates "
"gets downloaded into the cache the first time they are used, or if you use "
"the I<--cache-all-templates> option.  See L</CACHING> above for further "
"information."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1520
msgid ""
"Packages required for the I<--install> and I<--update> options are "
"downloaded using the host network connection.  Setting the C<http_proxy>, "
"C<https_proxy> and C<ftp_proxy> environment variables to point to a local "
"web cache may ensure they only need to be downloaded once.  You can also try "
"using a local package repository, although this can be complex to set up and "
"varies according to which Linux distro you are trying to install."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1528
msgid "Using I<--no-sync>"
msgstr "Користування I<--no-sync>"

#. type: textblock
#: ../builder/virt-builder.pod:1530
msgid ""
"Use I<--no-sync>.  However read the caveats in the L</OPTIONS> section "
"above, since this can cause disk corruption if not used correctly."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1533
msgid "Skipping virt-resize"
msgstr "Пропускання virt-resize"

#. type: textblock
#: ../builder/virt-builder.pod:1535
msgid ""
"Virt-builder can skip the virt-resize step under certain conditions.  This "
"makes virt-builder much faster.  The conditions are:"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1542
msgid "the output must be a regular file (not a block device), B<and>"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1546
msgid "the user did B<not> use the I<--size> option, B<and>"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1550
msgid "the output format is the same as the template format (usually raw)."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1554
msgid "pxzcat"
msgstr "pxzcat"

#. type: textblock
#: ../builder/virt-builder.pod:1556
msgid ""
"Virt-builder uses an internal implementation of pxzcat (parallel xzcat) if "
"liblzma was found at build time.  If liblzma was not found at build time, "
"regular C<xzcat> is used which is single-threaded."
msgstr ""

#. type: =head3
#: ../builder/virt-builder.pod:1560
msgid "User-Mode Linux"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1562
msgid ""
"You can use virt-builder with the User-Mode Linux (UML) backend.  This may "
"be faster when running virt-builder inside a virtual machine (eg. in the "
"cloud)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1566
msgid ""
"To enable the UML backend, read the instructions in L<guestfs(3)/USER-MODE "
"LINUX BACKEND>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1569
msgid ""
"Currently you have to use the I<--no-network> option.  This should be fixed "
"in a future version."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1572
msgid ""
"The qcow2 output format is not supported by UML.  You can only create raw-"
"format guests."
msgstr ""

#. type: =head2
#: ../builder/virt-builder.pod:1575 ../src/guestfs.pod:477
msgid "SELINUX"
msgstr "SELINUX"

#. type: textblock
#: ../builder/virt-builder.pod:1577
msgid ""
"Guests which use SELinux (such as Fedora and Red Hat Enterprise Linux)  "
"require that each file has a correct SELinux label."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1580
msgid ""
"Virt-builder does not know how to give new files a label, so there are two "
"possible strategies it can use to ensure correct labelling:"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1585
msgid "Using I<--selinux-relabel>"
msgstr "Користування I<--selinux-relabel>"

#. type: textblock
#: ../builder/virt-builder.pod:1587
msgid ""
"This runs L<fixfiles(8)> just before finalizing the guest, which sets "
"SELinux labels correctly in the disk image."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1590
msgid ""
"Sometimes fixfiles is not possible during installation, in which case this "
"option falls back on:"
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1593
msgid "Touching C</.autorelabel>"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1595
msgid ""
"Guest templates may already contain a file called C</.autorelabel>, or it is "
"touched if I<--selinux-relabel> cannot run fixfiles."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1598
msgid ""
"For guests that use SELinux, this causes fixfiles to run at first boot.  "
"Guests will reboot themselves once the first time you use them, which is "
"normal and harmless."
msgstr ""

#. type: =head1
#: ../builder/virt-builder.pod:1604 ../resize/virt-resize.pod:599
#: ../sparsify/virt-sparsify.pod:340 ../v2v/virt-v2v.pod:1186
msgid "MACHINE READABLE OUTPUT"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1606
msgid ""
"The I<--machine-readable> option can be used to make the output more machine "
"friendly, which is useful when calling virt-builder from other programs, "
"GUIs etc."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1610
msgid ""
"Use the option on its own to query the capabilities of the virt-builder "
"binary.  Typical output looks like this:"
msgstr ""

#. type: verbatim
#: ../builder/virt-builder.pod:1613
#, no-wrap
msgid ""
" $ virt-builder --machine-readable\n"
" virt-builder\n"
" arch\n"
" config-file\n"
" customize\n"
" json-list\n"
" pxzcat\n"
"\n"
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1621 ../resize/virt-resize.pod:617
#: ../sparsify/virt-sparsify.pod:356 ../v2v/virt-v2v.pod:1207
msgid ""
"A list of features is printed, one per line, and the program exits with "
"status 0."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1626
msgid ""
"For other environment variables which affect all libguestfs programs, see "
"L<guestfs(3)/ENVIRONMENT VARIABLES>."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1631
msgid "C<http_proxy>"
msgstr "C<http_proxy>"

#. type: =item
#: ../builder/virt-builder.pod:1633
msgid "C<https_proxy>"
msgstr "C<https_proxy>"

#. type: =item
#: ../builder/virt-builder.pod:1635
msgid "C<no_proxy>"
msgstr "C<no_proxy>"

#. type: textblock
#: ../builder/virt-builder.pod:1637
msgid ""
"Set the proxy for downloads.  These environment variables (and more)  are "
"actually interpreted by L<curl(1)>, not virt-builder."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1640
msgid "C<HOME>"
msgstr "C<HOME>"

#. type: textblock
#: ../builder/virt-builder.pod:1642
msgid ""
"Used to determine the location of the template cache, and the location of "
"the user' sources.  See L</CACHING> and L</SOURCES OF TEMPLATES>."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1645 ../customize/virt-customize.pod:220
#: ../sysprep/virt-sysprep.pod:525 ../v2v/virt-v2v.pod:1270
msgid "C<VIRT_TOOLS_DATA_DIR>"
msgstr "C<VIRT_TOOLS_DATA_DIR>"

#. type: textblock
#: ../builder/virt-builder.pod:1647 ../customize/virt-customize.pod:222
#: ../sysprep/virt-sysprep.pod:527
msgid ""
"This can point to the directory containing data files used for Windows "
"firstboot installation."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1650 ../customize/virt-customize.pod:225
#: ../sysprep/virt-sysprep.pod:530 ../v2v/virt-v2v.pod:1275
msgid ""
"Normally you do not need to set this.  If not set, a compiled-in default "
"will be used (something like C</usr/share/virt-tools>)."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1653 ../customize/virt-customize.pod:228
#: ../sysprep/virt-sysprep.pod:533 ../v2v/virt-v2v.pod:1278
msgid "This directory may contain the following files:"
msgstr "Цей каталог може містити такі файли:"

#. type: =item
#: ../builder/virt-builder.pod:1657 ../customize/virt-customize.pod:232
#: ../sysprep/virt-sysprep.pod:537 ../v2v/virt-v2v.pod:1282
msgid "C<rhsrvany.exe>"
msgstr "C<rhsrvany.exe>"

#. type: textblock
#: ../builder/virt-builder.pod:1659 ../customize/virt-customize.pod:234
#: ../sysprep/virt-sysprep.pod:539
msgid ""
"This is the RHSrvAny Windows binary, used to install a \"firstboot\" script "
"in Windows guests.  It is required if you intend to use the I<--firstboot> "
"or I<--firstboot-command> options with Windows guests."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1663 ../customize/virt-customize.pod:238
#: ../sysprep/virt-sysprep.pod:543 ../v2v/virt-v2v.pod:1289
msgid "See also: C<https://github.com/rwmjones/rhsrvany>"
msgstr "Див. також C<https://github.com/rwmjones/rhsrvany>"

#. type: =item
#: ../builder/virt-builder.pod:1667
msgid "C<XDG_CACHE_HOME>"
msgstr "C<XDG_CACHE_HOME>"

#. type: textblock
#: ../builder/virt-builder.pod:1669
msgid "Used to determine the location of the template cache.  See L</CACHING>."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1671
msgid "C<XDG_CONFIG_HOME>"
msgstr "C<XDG_CONFIG_HOME>"

#. type: textblock
#: ../builder/virt-builder.pod:1673
msgid ""
"Used to determine the location of the user' sources.  See L</SOURCES OF "
"TEMPLATES>."
msgstr ""

#. type: =item
#: ../builder/virt-builder.pod:1676
msgid "C<XDG_CONFIG_DIRS>"
msgstr "C<XDG_CONFIG_DIRS>"

#. type: textblock
#: ../builder/virt-builder.pod:1678
msgid ""
"Used to determine the location of the system sources.  See L</SOURCES OF "
"TEMPLATES>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1685 ../cat/virt-cat.pod:270
#: ../cat/virt-filesystems.pod:383 ../cat/virt-log.pod:132
#: ../cat/virt-ls.pod:515 ../daemon/guestfsd.pod:73 ../df/virt-df.pod:253
#: ../diff/virt-diff.pod:245 ../edit/virt-edit.pod:386
#: ../fuse/guestmount.pod:412 ../inspector/virt-inspector.pod:489
#: ../resize/virt-resize.pod:752
msgid ""
"This program returns 0 if successful, or non-zero if there was an error."
msgstr ""
"Ця програма повертає значення 0 у разі успішного завершення і ненульове "
"значення, якщо сталася помилка."

#. type: textblock
#: ../builder/virt-builder.pod:1690
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<guestmount(1)>, L<virt-copy-out(1)>, "
"L<virt-customize(1)>, L<virt-install(1)>, L<virt-rescue(1)>, L<virt-"
"resize(1)>, L<virt-sysprep(1)>, L<oz-install(1)>, L<gpg(1)>, L<curl(1)>, "
"L<virt-make-fs(1)>, L<genisoimage(1)>, L<fixfiles(8)>, L<http://libguestfs."
"org/>."
msgstr ""

#. type: textblock
#: ../builder/virt-builder.pod:1713 ../builder/virt-index-validate.pod:90
#: ../fuse/guestunmount.pod:162 ../golang/examples/guestfs-golang.pod:97
msgid "Copyright (C) 2013 Red Hat Inc."
msgstr "© Red Hat Inc., 2013"

#. type: textblock
#: ../builder/virt-index-validate.pod:3
msgid "virt-index-validate - Validate virt-builder index file"
msgstr ""

#. type: verbatim
#: ../builder/virt-index-validate.pod:7
#, no-wrap
msgid ""
" virt-index-validate index\n"
"\n"
msgstr ""
" virt-index-validate index\n"
"\n"

#. type: textblock
#: ../builder/virt-index-validate.pod:11
msgid ""
"L<virt-builder(1)> uses an index file to store metadata about templates that "
"it knows how to use.  This index file has a specific format which virt-index-"
"validate knows how to validate."
msgstr ""

#. type: textblock
#: ../builder/virt-index-validate.pod:15
msgid ""
"Note that virt-index-validate can validate either the signed or unsigned "
"index file (ie. either C<index> or C<index.asc>).  It can only validate a "
"local file, not a URL."
msgstr ""

#. type: =item
#: ../builder/virt-index-validate.pod:23
msgid "B<--compat-1.24.0>"
msgstr "B<--compat-1.24.0>"

#. type: textblock
#: ../builder/virt-index-validate.pod:25
msgid ""
"Check for compatibility with virt-builder 1.24.0.  (Using this option "
"implies I<--compat-1.24.1>, so you don't need to use both.)"
msgstr ""

#. type: textblock
#: ../builder/virt-index-validate.pod:28 ../builder/virt-index-validate.pod:47
msgid "In particular:"
msgstr ""

#. type: textblock
#: ../builder/virt-index-validate.pod:34
msgid ""
"This version of virt-builder could not handle C<[...]> (square brackets) in "
"field names (eg. C<checksum[sha512]=...>)."
msgstr ""

#. type: textblock
#: ../builder/virt-index-validate.pod:39
msgid "It required detached signatures (C<sig=...>)."
msgstr ""

#. type: =item
#: ../builder/virt-index-validate.pod:43
msgid "B<--compat-1.24.1>"
msgstr "B<--compat-1.24.1>"

#. type: textblock
#: ../builder/virt-index-validate.pod:45
msgid "Check for compatibility with virt-builder E<ge> 1.24.1."
msgstr ""

#. type: textblock
#: ../builder/virt-index-validate.pod:53
msgid ""
"This version of virt-builder could not handle C<.> (period) in field names "
"or C<,> (comma) in subfield names."
msgstr ""

#. type: textblock
#: ../builder/virt-index-validate.pod:58
msgid "It could not handle comments appearing in the file."
msgstr ""

#. type: textblock
#: ../builder/virt-index-validate.pod:76
msgid ""
"This program returns 0 if the index file validates, or non-zero if there was "
"an error."
msgstr ""

#. type: textblock
#: ../builder/virt-index-validate.pod:81
msgid "L<virt-builder(1)>, L<http://libguestfs.org/>."
msgstr "L<virt-builder(1)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../cat/virt-cat.pod:3
msgid "virt-cat - Display files in a virtual machine"
msgstr "virt-cat — показ файлів у віртуальній машині"

#. type: verbatim
#: ../cat/virt-cat.pod:7
#, no-wrap
msgid ""
" virt-cat [--options] -d domname file [file ...]\n"
"\n"
msgstr ""
" virt-cat [--параметри] -d назва_домену файл [файл...]\n"
"\n"

#. type: verbatim
#: ../cat/virt-cat.pod:9
#, no-wrap
msgid ""
" virt-cat [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
"\n"
msgstr ""
" virt-cat [--параметри] -a диск.img [-a диск.img ...] файл [файл...]\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:11 ../edit/virt-edit.pod:13
#: ../inspector/virt-inspector.pod:11
msgid "Old-style:"
msgstr "Застарілий стиль:"

#. type: verbatim
#: ../cat/virt-cat.pod:13
#, no-wrap
msgid ""
" virt-cat domname file\n"
"\n"
msgstr ""
" virt-cat назва_домену файл\n"
"\n"

#. type: verbatim
#: ../cat/virt-cat.pod:15
#, no-wrap
msgid ""
" virt-cat disk.img file\n"
"\n"
msgstr ""
" virt-cat диск.img файл\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:19
msgid ""
"C<virt-cat> is a command line tool to display the contents of C<file> where "
"C<file> exists in the named virtual machine (or disk image)."
msgstr ""
"C<virt-cat> — інструмент командного рядка для показу вмісту C<файла>, який "
"зберігається у вказаній віртуальній машині (або образі диска)."

#. type: textblock
#: ../cat/virt-cat.pod:22
msgid ""
"Multiple filenames can be given, in which case they are concatenated "
"together.  Each filename must be a full path, starting at the root directory "
"(starting with '/')."
msgstr ""
"Ви можете вказати декілька назв файлів. Вміст таких файлів буде об’єднано. "
"Назви файлів слід вказувати повністю (разом зі шляхом), починаючи з "
"кореневого каталогу (тобто назва має починатися з «/»)."

#. type: textblock
#: ../cat/virt-cat.pod:26
msgid ""
"C<virt-cat> can be used to quickly view a file.  To edit a file, use C<virt-"
"edit>.  For more complex cases you should look at the L<guestfish(1)> tool "
"(see L</USING GUESTFISH> below)."
msgstr ""
"C<virt-cat> можна скористатися для пришвидшення перегляду файла. Для "
"редагування даних слід користуватися C<virt-edit>. Для виконання складніших "
"дій можна скористатися програмою L<guestfish(1)> (див. L</USING GUESTFISH> "
"нижче)."

#. type: textblock
#: ../cat/virt-cat.pod:32
msgid ""
"Display C</etc/fstab> file from inside the libvirt VM called C<mydomain>:"
msgstr ""
"Показ файла C</etc/fstab> з віртуальної машини libvirt з назвою C<mydomain>:"

#. type: verbatim
#: ../cat/virt-cat.pod:35
#, no-wrap
msgid ""
" virt-cat -d mydomain /etc/fstab\n"
"\n"
msgstr ""
" virt-cat -d mydomain /etc/fstab\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:37
msgid "Find out what packages were recently installed:"
msgstr "Пошук нещодавно встановлених пакунків:"

#. type: verbatim
#: ../cat/virt-cat.pod:39
#, no-wrap
msgid ""
" virt-cat -d mydomain /var/log/yum.log | tail\n"
"\n"
msgstr ""
" virt-cat -d mydomain /var/log/yum.log | tail\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:41
msgid "Find out who is logged on inside a virtual machine:"
msgstr "Визначення користувачів, які працюють у віртуальній машині:"

#. type: verbatim
#: ../cat/virt-cat.pod:43
#, no-wrap
msgid ""
" virt-cat -d mydomain /var/run/utmp > /tmp/utmp\n"
" who /tmp/utmp\n"
"\n"
msgstr ""
" virt-cat -d mydomain /var/run/utmp > /tmp/utmp\n"
" who /tmp/utmp\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:46
msgid "or who was logged on:"
msgstr "або тих, які у ній працювали:"

#. type: verbatim
#: ../cat/virt-cat.pod:48
#, no-wrap
msgid ""
" virt-cat -d mydomain /var/log/wtmp > /tmp/wtmp\n"
" last -f /tmp/wtmp\n"
"\n"
msgstr ""
" virt-cat -d mydomain /var/log/wtmp > /tmp/wtmp\n"
" last -f /tmp/wtmp\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:63 ../cat/virt-filesystems.pod:101
#: ../cat/virt-log.pod:46 ../cat/virt-ls.pod:261 ../df/virt-df.pod:83
#: ../edit/virt-edit.pod:72 ../inspector/virt-inspector.pod:64
#: ../rescue/virt-rescue.pod:125
msgid ""
"Add I<file> which should be a disk image from a virtual machine.  If the "
"virtual machine has multiple block devices, you must supply all of them with "
"separate I<-a> options."
msgstr ""

#. type: =item
#: ../cat/virt-cat.pod:93 ../cat/virt-filesystems.pod:152
#: ../cat/virt-log.pod:76 ../cat/virt-ls.pod:308 ../diff/virt-diff.pod:127
#: ../edit/virt-edit.pod:116 ../fish/guestfish.pod:218
#: ../fuse/guestmount.pod:208 ../inspector/virt-inspector.pod:89
msgid "B<--echo-keys>"
msgstr "B<--echo-keys>"

#. type: textblock
#: ../cat/virt-cat.pod:95
msgid ""
"When prompting for keys and passphrases, virt-cat normally turns echoing off "
"so you cannot see what you are typing.  If you are not worried about Tempest "
"attacks and there is no one else in the room you can specify this flag to "
"see what you are typing."
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:111
#, no-wrap
msgid ""
" virt-cat --format=raw -a disk.img file\n"
"\n"
msgstr ""
" virt-cat --format=raw -a disk.img file\n"
"\n"

#. type: verbatim
#: ../cat/virt-cat.pod:115
#, no-wrap
msgid ""
" virt-cat --format=raw -a disk.img --format -a another.img file\n"
"\n"
msgstr ""
" virt-cat --format=raw -a disk.img --format -a another.img file\n"
"\n"

#. type: =item
#: ../cat/virt-cat.pod:124 ../cat/virt-filesystems.pod:204
#: ../cat/virt-log.pod:107 ../cat/virt-ls.pod:355 ../diff/virt-diff.pod:169
#: ../edit/virt-edit.pod:162 ../fish/guestfish.pod:290
#: ../fuse/guestmount.pod:252 ../inspector/virt-inspector.pod:111
msgid "B<--keys-from-stdin>"
msgstr "B<--keys-from-stdin>"

#. type: textblock
#: ../cat/virt-cat.pod:126 ../cat/virt-filesystems.pod:206
#: ../cat/virt-log.pod:109 ../cat/virt-ls.pod:357 ../diff/virt-diff.pod:171
#: ../edit/virt-edit.pod:164 ../fish/guestfish.pod:292
#: ../fuse/guestmount.pod:254 ../inspector/virt-inspector.pod:113
msgid ""
"Read key or passphrase parameters from stdin.  The default is to try to read "
"passphrases from the user by opening C</dev/tty>."
msgstr ""

#. type: =item
#: ../cat/virt-cat.pod:129 ../cat/virt-ls.pod:360 ../edit/virt-edit.pod:167
#: ../fish/guestfish.pod:305
msgid "B<-m dev[:mountpoint[:options[:fstype]]]>"
msgstr "B<-m пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]>"

#. type: =item
#: ../cat/virt-cat.pod:131 ../cat/virt-ls.pod:362 ../edit/virt-edit.pod:169
#: ../fish/guestfish.pod:307 ../fuse/guestmount.pod:264
msgid "B<--mount dev[:mountpoint[:options[:fstype]]]>"
msgstr ""
"B<--mount пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]>"

#. type: textblock
#: ../cat/virt-cat.pod:133 ../cat/virt-ls.pod:364 ../edit/virt-edit.pod:171
#: ../fish/guestfish.pod:309
msgid "Mount the named partition or logical volume on the given mountpoint."
msgstr ""
"Змонтувати названий розділ або логічний том до вказаної точки монтування."

#. type: textblock
#: ../cat/virt-cat.pod:135 ../cat/virt-ls.pod:366 ../edit/virt-edit.pod:173
#: ../fish/guestfish.pod:311
msgid "If the mountpoint is omitted, it defaults to C</>."
msgstr ""
"Якщо точку монтування пропущено, використовуватиметься типове значення C</>."

#. type: textblock
#: ../cat/virt-cat.pod:137 ../cat/virt-ls.pod:368 ../edit/virt-edit.pod:175
msgid ""
"Specifying any mountpoint disables the inspection of the guest and the mount "
"of its root and all of its mountpoints, so make sure to mount all the "
"mountpoints needed to work with the filenames given as arguments."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:142 ../cat/virt-ls.pod:373 ../edit/virt-edit.pod:180
#: ../fish/guestfish.pod:318
msgid ""
"If you don't know what filesystems a disk image contains, you can either run "
"guestfish without this option, then list the partitions, filesystems and LVs "
"available (see L</list-partitions>, L</list-filesystems> and L</lvs> "
"commands), or you can use the L<virt-filesystems(1)> program."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:148 ../cat/virt-ls.pod:379 ../edit/virt-edit.pod:186
#: ../fish/guestfish.pod:324 ../fuse/guestmount.pod:272
msgid ""
"The third (and rarely used) part of the mount parameter is the list of mount "
"options used to mount the underlying filesystem.  If this is not given, then "
"the mount options are either the empty string or C<ro> (the latter if the "
"I<--ro> flag is used).  By specifying the mount options, you override this "
"default choice.  Probably the only time you would use this is to enable ACLs "
"and/or extended attributes if the filesystem can support them:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:156 ../cat/virt-ls.pod:387 ../edit/virt-edit.pod:194
#: ../fish/guestfish.pod:332 ../fuse/guestmount.pod:280
#, no-wrap
msgid ""
" -m /dev/sda1:/:acl,user_xattr\n"
"\n"
msgstr ""
" -m /dev/sda1:/:acl,user_xattr\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:158 ../cat/virt-ls.pod:389 ../edit/virt-edit.pod:196
#: ../fish/guestfish.pod:334
msgid "Using this flag is equivalent to using the C<mount-options> command."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:160 ../cat/virt-ls.pod:391 ../edit/virt-edit.pod:198
#: ../fish/guestfish.pod:336 ../fuse/guestmount.pod:282
msgid ""
"The fourth part of the parameter is the filesystem driver to use, such as "
"C<ext3> or C<ntfs>. This is rarely needed, but can be useful if multiple "
"drivers are valid for a filesystem (eg: C<ext2> and C<ext3>), or if "
"libguestfs misidentifies a filesystem."
msgstr ""

#. type: =head1
#: ../cat/virt-cat.pod:183 ../cat/virt-ls.pod:473 ../edit/virt-edit.pod:221
#: ../inspector/virt-inspector.pod:141 ../rescue/virt-rescue.pod:265
msgid "OLD-STYLE COMMAND LINE ARGUMENTS"
msgstr "ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ"

#. type: textblock
#: ../cat/virt-cat.pod:185
msgid "Previous versions of virt-cat allowed you to write either:"
msgstr "У попередніх версіях virt-cat можна було використовувати або"

#. type: verbatim
#: ../cat/virt-cat.pod:187
#, no-wrap
msgid ""
" virt-cat disk.img [disk.img ...] file\n"
"\n"
msgstr ""
" virt-cat диск.img [диск.img ...] файл\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:189 ../cat/virt-ls.pod:479 ../edit/virt-edit.pod:227
#: ../inspector/virt-inspector.pod:147 ../rescue/virt-rescue.pod:271
msgid "or"
msgstr "або"

#. type: verbatim
#: ../cat/virt-cat.pod:191
#, no-wrap
msgid ""
" virt-cat guestname file\n"
"\n"
msgstr ""
" virt-cat назва_гостьової_системи файл\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:193 ../cat/virt-ls.pod:483 ../edit/virt-edit.pod:231
#: ../inspector/virt-inspector.pod:151 ../rescue/virt-rescue.pod:275
msgid ""
"whereas in this version you should use I<-a> or I<-d> respectively to avoid "
"the confusing case where a disk image might have the same name as a guest."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:197 ../cat/virt-ls.pod:487 ../edit/virt-edit.pod:235
#: ../inspector/virt-inspector.pod:155 ../rescue/virt-rescue.pod:279
msgid "For compatibility the old style is still supported."
msgstr ""
"З міркувань зворотної сумісності передбачено підтримку запису параметрів у "
"застарілому форматі."

#. type: =head1
#: ../cat/virt-cat.pod:199
msgid "LOG FILES"
msgstr "ФАЙЛИ ЖУРНАЛІВ"

#. type: textblock
#: ../cat/virt-cat.pod:201
msgid ""
"To list out the log files from guests, see the related tool L<virt-log(1)>.  "
"It understands binary log formats such as the systemd journal."
msgstr ""

#. type: =head1
#: ../cat/virt-cat.pod:205 ../edit/virt-edit.pod:299 ../fish/guestfish.pod:886
msgid "WINDOWS PATHS"
msgstr "ШЛЯХИ У WINDOWS"

#. type: textblock
#: ../cat/virt-cat.pod:207
msgid ""
"C<virt-cat> has a limited ability to understand Windows drive letters and "
"paths (eg. C<E:\\foo\\bar.txt>)."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:210 ../edit/virt-edit.pod:304
msgid "If and only if the guest is running Windows then:"
msgstr "Тоді і лише тоді, коли у гостьовій системі працює Windows:"

#. type: textblock
#: ../cat/virt-cat.pod:216 ../edit/virt-edit.pod:310
msgid ""
"Drive letter prefixes like C<C:> are resolved against the Windows Registry "
"to the correct filesystem."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:221 ../edit/virt-edit.pod:315
msgid ""
"Any backslash (C<\\>) characters in the path are replaced with forward "
"slashes so that libguestfs can process it."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:226
msgid ""
"The path is resolved case insensitively to locate the file that should be "
"displayed."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:231 ../edit/virt-edit.pod:325
msgid "There are some known shortcomings:"
msgstr "Відомі певні недоліки програми:"

#. type: textblock
#: ../cat/virt-cat.pod:237 ../edit/virt-edit.pod:331
msgid "Some NTFS symbolic links may not be followed correctly."
msgstr ""
"Перехід за деякими символічними посиланнями NTFS може здійснюватися з "
"помилками."

#. type: textblock
#: ../cat/virt-cat.pod:241 ../edit/virt-edit.pod:335
msgid "NTFS junction points that cross filesystems are not followed."
msgstr ""

#. type: =head1
#: ../cat/virt-cat.pod:245 ../edit/virt-edit.pod:339
msgid "USING GUESTFISH"
msgstr "ВИКОРИСТАННЯ GUESTFISH"

#. type: textblock
#: ../cat/virt-cat.pod:247
msgid ""
"L<guestfish(1)> is a more powerful, lower level tool which you can use when "
"C<virt-cat> doesn't work."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:250
msgid "Using C<virt-cat> is approximately equivalent to doing:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:252
#, no-wrap
msgid ""
" guestfish --ro -i -d domname download file -\n"
"\n"
msgstr ""
" guestfish --ro -i -d назва_домену download файл -\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:254
msgid ""
"where C<domname> is the name of the libvirt guest, and C<file> is the full "
"path to the file.  Note the final C<-> (meaning \"output to stdout\")."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:258
msgid ""
"The command above uses libguestfs's guest inspection feature and so does not "
"work on guests that libguestfs cannot inspect, or on things like arbitrary "
"disk images that don't contain guests.  To display a file from a disk image "
"directly, use:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:263
#, no-wrap
msgid ""
" guestfish --ro -a disk.img -m /dev/sda1 download file -\n"
"\n"
msgstr ""
" guestfish --ro -a диск.img -m /dev/sda1 download файл -\n"
"\n"

#. type: textblock
#: ../cat/virt-cat.pod:265
msgid ""
"where C<disk.img> is the disk image, C</dev/sda1> is the filesystem within "
"the disk image, and C<file> is the full path to the file."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:275
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-copy-out(1)>, L<virt-edit(1)>, L<virt-"
"log(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:289 ../cat/virt-filesystems.pod:403
#: ../inspector/virt-inspector.pod:517 ../ocaml/examples/guestfs-ocaml.pod:97
#: ../python/examples/guestfs-python.pod:71 ../resize/virt-resize.pod:785
#: ../ruby/examples/guestfs-ruby.pod:54
msgid "Copyright (C) 2010-2012 Red Hat Inc."
msgstr "© Red Hat Inc., 2010–2012"

#. type: textblock
#: ../cat/virt-filesystems.pod:3
msgid ""
"virt-filesystems - List filesystems, partitions, block devices, LVM in a "
"virtual machine or disk image"
msgstr ""
"virt-filesystems — програма для показу списку файлових систем, розділів, "
"блокових пристроїв, LVM у віртуальних машинах або образах дисків"

#. type: verbatim
#: ../cat/virt-filesystems.pod:7
#, no-wrap
msgid ""
" virt-filesystems [--options] -d domname\n"
"\n"
msgstr ""
" virt-filesystems [--параметри] -d назва_домену\n"
"\n"

#. type: verbatim
#: ../cat/virt-filesystems.pod:9
#, no-wrap
msgid ""
" virt-filesystems [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""
" virt-filesystems [--параметри] -a диск.img [-a диск.img ...]\n"
"\n"

#. type: textblock
#: ../cat/virt-filesystems.pod:13
msgid ""
"This tool allows you to discover filesystems, partitions, logical volumes, "
"and their sizes in a disk image or virtual machine.  It is a replacement for "
"L<virt-list-filesystems(1)> and L<virt-list-partitions(1)>."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:18
msgid ""
"One use for this tool is from shell scripts to iterate over all filesystems "
"from a disk image:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:21
#, no-wrap
msgid ""
" for fs in $(virt-filesystems -a disk.img); do\n"
"   # ...\n"
" done\n"
"\n"
msgstr ""
" for fs in $(virt-filesystems -a disk.img); do\n"
"   # ...\n"
" done\n"
"\n"

#. type: textblock
#: ../cat/virt-filesystems.pod:25
msgid ""
"Another use is to list partitions before using another tool to modify those "
"partitions (such as L<virt-resize(1)>).  If you are curious about what an "
"unknown disk image contains, use this tool along with L<virt-inspector(1)>."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:30
msgid ""
"Various command line options control what this program displays.  You need "
"to give either I<-a> or I<-d> options to specify the disk image or libvirt "
"guest respectively.  If you just specify that then the program shows "
"filesystems found, one per line, like this:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:35
#, no-wrap
msgid ""
" $ virt-filesystems -a disk.img\n"
" /dev/sda1\n"
" /dev/vg_guest/lv_root\n"
"\n"
msgstr ""
" $ virt-filesystems -a disk.img\n"
" /dev/sda1\n"
" /dev/vg_guest/lv_root\n"
"\n"

#. type: textblock
#: ../cat/virt-filesystems.pod:39
msgid ""
"If you add I<-l> or I<--long> then the output includes extra information:"
msgstr ""
"Якщо ви додасте I<-l> або I<--long>, у виведених даних буде показано "
"додаткову інформацію:"

#. type: verbatim
#: ../cat/virt-filesystems.pod:42
#, no-wrap
msgid ""
" $ virt-filesystems -a disk.img -l\n"
" Name                   Type         VFS   Label  Size\n"
" /dev/sda1              filesystem   ext4  boot   524288000\n"
" /dev/vg_guest/lv_root  filesystem   ext4  root   10212081664\n"
"\n"
msgstr ""
" $ virt-filesystems -a disk.img -l\n"
" Назва                  Тип          ВФС   Мітка  Розмір\n"
" /dev/sda1              filesystem   ext4  boot   524288000\n"
" /dev/vg_guest/lv_root  filesystem   ext4  root   10212081664\n"
"\n"

#. type: textblock
#: ../cat/virt-filesystems.pod:47
msgid ""
"If you add I<--extra> then non-mountable (swap, unknown) filesystems are "
"shown as well:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:50
#, no-wrap
msgid ""
" $ virt-filesystems -a disk.img --extra\n"
" /dev/sda1\n"
" /dev/vg_guest/lv_root\n"
" /dev/vg_guest/lv_swap\n"
" /dev/vg_guest/lv_data\n"
"\n"
msgstr ""
" $ virt-filesystems -a disk.img --extra\n"
" /dev/sda1\n"
" /dev/vg_guest/lv_root\n"
" /dev/vg_guest/lv_swap\n"
" /dev/vg_guest/lv_data\n"
"\n"

#. type: textblock
#: ../cat/virt-filesystems.pod:56
msgid ""
"If you add I<--partitions> then partitions are shown instead of filesystems:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:58
#, no-wrap
msgid ""
" $ virt-filesystems -a disk.img --partitions\n"
" /dev/sda1\n"
" /dev/sda2\n"
"\n"
msgstr ""
" $ virt-filesystems -a disk.img --partitions\n"
" /dev/sda1\n"
" /dev/sda2\n"
"\n"

#. type: textblock
#: ../cat/virt-filesystems.pod:62
msgid ""
"Similarly you can use I<--logical-volumes>, I<--volume-groups>, I<--physical-"
"volumes>, I<--block-devices> to list those items."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:65
msgid ""
"You can use these options in combination as well (if you want a combination "
"including filesystems, you have to add I<--filesystems>).  Notice that some "
"items fall into several categories (eg. C</dev/sda1> might be both a "
"partition and a filesystem).  These items are listed several times.  To get "
"a list which includes absolutely everything that virt-filesystems knows "
"about, use the I<--all> option."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:72
msgid ""
"UUIDs (because they are quite long) are not shown by default.  Add the I<--"
"uuid> option to display device and filesystem UUIDs in the long output."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:76
msgid ""
"I<--all --long --uuid> is a useful combination to display all possible "
"information about everything."
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:79
#, no-wrap
msgid ""
" $ virt-filesystems -a win.img --all --long --uuid -h\n"
" Name      Type       VFS  Label           Size Parent   UUID\n"
" /dev/sda1 filesystem ntfs System Reserved 100M -        F81C92571C92112C\n"
" /dev/sda2 filesystem ntfs -               20G  -        F2E8996AE8992E3B\n"
" /dev/sda1 partition  -    -               100M /dev/sda -\n"
" /dev/sda2 partition  -    -               20G  /dev/sda -\n"
" /dev/sda  device     -    -               20G  -        -\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:87
msgid ""
"For machine-readable output, use I<--csv> to get Comma-Separated Values."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:114 ../diff/virt-diff.pod:60
#: ../tools/virt-list-filesystems:120
msgid "B<--all>"
msgstr "B<--all>"

#. type: textblock
#: ../cat/virt-filesystems.pod:116
msgid ""
"Display everything.  This is currently the same as specifying these options: "
"I<--filesystems>, I<--extra>, I<--partitions>, I<--block-devices>, I<--"
"logical-volumes>, I<--volume-groups>, I<--physical-volumes>.  (More may be "
"added to this list in future)."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:121
msgid "See also I<--long>."
msgstr "Див. також I<--long>."

#. type: =item
#: ../cat/virt-filesystems.pod:123
msgid "B<--blkdevs>"
msgstr "B<--blkdevs>"

#. type: =item
#: ../cat/virt-filesystems.pod:125
msgid "B<--block-devices>"
msgstr "B<--block-devices>"

#. type: textblock
#: ../cat/virt-filesystems.pod:127
msgid "Display block devices."
msgstr "Показати список блокових пристроїв."

#. type: =item
#: ../cat/virt-filesystems.pod:139 ../cat/virt-ls.pod:295
#: ../df/virt-df.pod:106 ../diff/virt-diff.pod:97
msgid "B<--csv>"
msgstr "B<--csv>"

#. type: textblock
#: ../cat/virt-filesystems.pod:141 ../cat/virt-ls.pod:297
#: ../df/virt-df.pod:108 ../diff/virt-diff.pod:99
msgid ""
"Write out the results in CSV format (comma-separated values).  This format "
"can be imported easily into databases and spreadsheets, but read L</NOTE "
"ABOUT CSV FORMAT> below."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:154
msgid ""
"When prompting for keys and passphrases, virt-filesystems normally turns "
"echoing off so you cannot see what you are typing.  If you are not worried "
"about Tempest attacks and there is no one else in the room you can specify "
"this flag to see what you are typing."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:159
msgid "B<--extra>"
msgstr "B<--extra>"

#. type: textblock
#: ../cat/virt-filesystems.pod:161
msgid ""
"This causes filesystems that are not ordinary, mountable filesystems to be "
"displayed.  This category includes swapspace, and filesystems that are empty "
"or contain unknown data."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:165
msgid "This option implies I<--filesystems>."
msgstr "Цей параметр автоматично встановлює параметр I<--filesystems>."

#. type: =item
#: ../cat/virt-filesystems.pod:167
msgid "B<--filesystems>"
msgstr "B<--filesystems>"

#. type: textblock
#: ../cat/virt-filesystems.pod:169
msgid ""
"Display mountable filesystems.  If no display option was selected then this "
"option is implied."
msgstr ""
"Показати список придатних до монтування систем. Якщо параметр показу не було "
"визначено, цей параметр буде додано до команди."

#. type: textblock
#: ../cat/virt-filesystems.pod:172
msgid "With I<--extra>, non-mountable filesystems are shown too."
msgstr ""
"Якщо було використано параметр I<--extra>, буде показано і непридатні до "
"монтування файлові системи."

#. type: verbatim
#: ../cat/virt-filesystems.pod:185
#, no-wrap
msgid ""
" virt-filesystems --format=raw -a disk.img\n"
"\n"
msgstr ""
" virt-filesystems --format=raw -a диск.img\n"
"\n"

#. type: verbatim
#: ../cat/virt-filesystems.pod:189
#, no-wrap
msgid ""
" virt-filesystems --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""
" virt-filesystems --format=raw -a диск.img --format -a інший_диск.img\n"
"\n"

#. type: =item
#: ../cat/virt-filesystems.pod:198 ../cat/virt-ls.pod:346
#: ../df/virt-df.pod:143 ../diff/virt-diff.pod:163 ../fish/guestfish.pod:160
#: ../tools/virt-list-partitions:108
msgid "B<-h>"
msgstr "B<-h>"

#. type: =item
#: ../cat/virt-filesystems.pod:200 ../cat/virt-ls.pod:348
#: ../df/virt-df.pod:145 ../diff/virt-diff.pod:165
#: ../tools/virt-list-partitions:110
msgid "B<--human-readable>"
msgstr "B<--human-readable>"

#. type: textblock
#: ../cat/virt-filesystems.pod:202
msgid "In I<--long> mode, display sizes in human-readable format."
msgstr "У режимі I<--long> показувати розміри у зручному для читання форматі."

#. type: =item
#: ../cat/virt-filesystems.pod:211 ../cat/virt-ls.pod:398
#: ../tools/virt-list-filesystems:109 ../tools/virt-list-partitions:120
msgid "B<--long>"
msgstr "B<--long>"

#. type: textblock
#: ../cat/virt-filesystems.pod:213
msgid "Display extra columns of data (\"long format\")."
msgstr "Показувати додаткові стовпчики даних («довгий формат»)."

#. type: textblock
#: ../cat/virt-filesystems.pod:215
msgid "A title row is added unless you also specify I<--no-title>."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:217
msgid ""
"The extra columns displayed depend on what output you select, and the "
"ordering of columns may change in future versions.  Use the title row, I<--"
"csv> output and/or L<csvtool(1)> to match columns to data in external "
"programs."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:222
msgid ""
"Use I<-h> if you want sizes to be displayed in human-readable format.  The "
"default is to show raw numbers of I<bytes>."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:225
msgid "Use I<--uuid> to display UUIDs too."
msgstr "Скористайтеся параметром I<--uuid>, щоб було показано також UUID."

#. type: =item
#: ../cat/virt-filesystems.pod:227
msgid "B<--lvs>"
msgstr "B<--lvs>"

#. type: =item
#: ../cat/virt-filesystems.pod:229
msgid "B<--logvols>"
msgstr "B<--logvols>"

#. type: =item
#: ../cat/virt-filesystems.pod:231
msgid "B<--logical-volumes>"
msgstr "B<--logical-volumes>"

#. type: textblock
#: ../cat/virt-filesystems.pod:233
msgid ""
"Display LVM logical volumes.  In this mode, these are displayed irrespective "
"of whether the LVs contain filesystems."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:236
msgid "B<--no-title>"
msgstr "B<--no-title>"

#. type: textblock
#: ../cat/virt-filesystems.pod:238
msgid "In I<--long> mode, don't add a title row."
msgstr "У режимі I<--long> не додавати рядок заголовків."

#. type: textblock
#: ../cat/virt-filesystems.pod:240
msgid ""
"Note that the order of the columns is not fixed, and may change in future "
"versions of virt-filesystems, so using this option may give you unexpected "
"surprises."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:244
msgid "B<--parts>"
msgstr "B<--parts>"

#. type: =item
#: ../cat/virt-filesystems.pod:246
msgid "B<--partitions>"
msgstr "B<--partitions>"

#. type: textblock
#: ../cat/virt-filesystems.pod:248
msgid ""
"Display partitions.  In this mode, these are displayed irrespective of "
"whether the partitions contain filesystems."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:251
msgid "B<--pvs>"
msgstr "B<--pvs>"

#. type: =item
#: ../cat/virt-filesystems.pod:253
msgid "B<--physvols>"
msgstr "B<--physvols>"

#. type: =item
#: ../cat/virt-filesystems.pod:255
msgid "B<--physical-volumes>"
msgstr "B<--physical-volumes>"

#. type: textblock
#: ../cat/virt-filesystems.pod:257
msgid "Display LVM physical volumes."
msgstr "Показати фізичні томи LVM."

#. type: =item
#: ../cat/virt-filesystems.pod:261
msgid "B<--uuids>"
msgstr "B<--uuids>"

#. type: textblock
#: ../cat/virt-filesystems.pod:263
msgid "In I<--long> mode, display UUIDs as well."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:277
msgid "B<--vgs>"
msgstr "B<--vgs>"

#. type: =item
#: ../cat/virt-filesystems.pod:279
msgid "B<--volgroups>"
msgstr "B<--volgroups>"

#. type: =item
#: ../cat/virt-filesystems.pod:281
msgid "B<--volume-groups>"
msgstr "B<--volume-groups>"

#. type: textblock
#: ../cat/virt-filesystems.pod:283
msgid "Display LVM volume groups."
msgstr "Показати групи томів LVM."

#. type: =head1
#: ../cat/virt-filesystems.pod:291
msgid "COLUMNS"
msgstr "СТОВПЧИКИ"

#. type: textblock
#: ../cat/virt-filesystems.pod:293
msgid ""
"Note that columns in the output are subject to reordering and change in "
"future versions of this tool."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:298
msgid "B<Name>"
msgstr "B<Назва>"

#. type: textblock
#: ../cat/virt-filesystems.pod:300
msgid "The filesystem, partition, block device or LVM name."
msgstr "Назва файлової системи, розділу, блокового пристрою або LVM."

#. type: textblock
#: ../cat/virt-filesystems.pod:302
msgid ""
"For device and partition names these are displayed as canonical libguestfs "
"names, so that for example C</dev/sda2> is the second partition on the first "
"device."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:306
msgid ""
"If the I<--long> option is B<not> specified, then only the name column is "
"shown in the output."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:309
msgid "B<Type>"
msgstr "B<Тип>"

#. type: textblock
#: ../cat/virt-filesystems.pod:311
msgid "The object type, for example C<filesystem>, C<lv>, C<device> etc."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:313
msgid "B<VFS>"
msgstr "B<VFS>"

#. type: textblock
#: ../cat/virt-filesystems.pod:315
msgid ""
"If there is a filesystem, then this column displays the filesystem type if "
"one could be detected, eg. C<ext4>."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:318
msgid "B<Label>"
msgstr "B<Мітка>"

#. type: textblock
#: ../cat/virt-filesystems.pod:320
msgid ""
"If the object has a label (used for identifying and mounting filesystems) "
"then this column contains the label."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:323
msgid "B<MBR>"
msgstr "B<MBR>"

#. type: textblock
#: ../cat/virt-filesystems.pod:325
msgid ""
"The partition type byte, displayed as a two digit hexadecimal number.  A "
"comprehensive list of partition types can be found here: L<http://www.win."
"tue.nl/~aeb/partitions/partition_types-1.html>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:329
msgid "This is only applicable for DOS (MBR) partitions."
msgstr "Це стосується лише розділів DOS (MBR)."

#. type: =item
#: ../cat/virt-filesystems.pod:331
msgid "B<Size>"
msgstr "B<Розмір>"

#. type: textblock
#: ../cat/virt-filesystems.pod:333
msgid ""
"The size of the object in bytes.  If the I<--human> option is used then the "
"size is displayed in a human-readable form."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:336
msgid "B<Parent>"
msgstr "B<Основа>"

#. type: textblock
#: ../cat/virt-filesystems.pod:338
msgid "The parent column records the parent relationship between objects."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:340
msgid ""
"For example, if the object is a partition, then this column contains the "
"name of the containing device.  If the object is a logical volume, then this "
"column is the name of the volume group."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:344
msgid ""
"If there is more than one parent, then this column is (internal to the "
"column) a comma-separated list, eg. C</dev/sda,/dev/sdb>."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:347
msgid "B<UUID>"
msgstr "B<UUID>"

#. type: textblock
#: ../cat/virt-filesystems.pod:349
msgid ""
"If the object has a UUID (used for identifying and mounting filesystems and "
"block devices) then this column contains the UUID as a string."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:353
msgid "The UUID is only displayed if the I<--uuid> option is given."
msgstr "UUID буде показано, лише якщо вказано параметр I<--uuid>."

#. type: =head1
#: ../cat/virt-filesystems.pod:357 ../cat/virt-ls.pod:489
#: ../df/virt-df.pod:227 ../diff/virt-diff.pod:219
msgid "NOTE ABOUT CSV FORMAT"
msgstr "ЗАУВАЖЕННЯ ЩОДО ФОРМАТУ CSV"

#. type: textblock
#: ../cat/virt-filesystems.pod:359 ../cat/virt-ls.pod:491
#: ../df/virt-df.pod:229 ../diff/virt-diff.pod:221
msgid ""
"Comma-separated values (CSV) is a deceptive format.  It I<seems> like it "
"should be easy to parse, but it is definitely not easy to parse."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:362 ../cat/virt-ls.pod:494
#: ../df/virt-df.pod:232 ../diff/virt-diff.pod:224
msgid ""
"Myth: Just split fields at commas.  Reality: This does I<not> work "
"reliably.  This example has two columns:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:365 ../cat/virt-ls.pod:497
#: ../df/virt-df.pod:235 ../diff/virt-diff.pod:227
#, no-wrap
msgid ""
" \"foo,bar\",baz\n"
"\n"
msgstr ""
" \"foo,bar\",baz\n"
"\n"

#. type: textblock
#: ../cat/virt-filesystems.pod:367 ../cat/virt-ls.pod:499
#: ../df/virt-df.pod:237 ../diff/virt-diff.pod:229
msgid ""
"Myth: Read the file one line at a time.  Reality: This does I<not> work "
"reliably.  This example has one row:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:370 ../cat/virt-ls.pod:502
#: ../df/virt-df.pod:240 ../diff/virt-diff.pod:232
#, no-wrap
msgid ""
" \"foo\n"
" bar\",baz\n"
"\n"
msgstr ""
" \"foo\n"
" bar\",baz\n"
"\n"

#. type: textblock
#: ../cat/virt-filesystems.pod:373 ../cat/virt-ls.pod:505
#: ../df/virt-df.pod:243 ../diff/virt-diff.pod:235
msgid ""
"For shell scripts, use C<csvtool> (L<http://merjis.com/developers/csv> also "
"packaged in major Linux distributions)."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:376 ../cat/virt-ls.pod:508
#: ../df/virt-df.pod:246 ../diff/virt-diff.pod:238
msgid ""
"For other languages, use a CSV processing library (eg. C<Text::CSV> for Perl "
"or Python's built-in csv library)."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:379 ../cat/virt-ls.pod:511
#: ../df/virt-df.pod:249 ../diff/virt-diff.pod:241
msgid "Most spreadsheets and databases can import CSV directly."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:388
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-df(1)>, L<virt-list-"
"filesystems(1)>, L<virt-list-partitions(1)>, L<csvtool(1)>, L<http://"
"libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-df(1)>, L<virt-list-"
"filesystems(1)>, L<virt-list-partitions(1)>, L<csvtool(1)>, L<http://"
"libguestfs.org/>."

#. type: textblock
#: ../cat/virt-log.pod:3
msgid "virt-log - Display log files from a virtual machine"
msgstr ""

#. type: verbatim
#: ../cat/virt-log.pod:7
#, no-wrap
msgid ""
" virt-log [--options] -d domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-log.pod:9
#, no-wrap
msgid ""
" virt-log [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-log.pod:13
msgid ""
"C<virt-log> is a command line tool to display the log files from the named "
"virtual machine (or disk image)."
msgstr ""

#. type: textblock
#: ../cat/virt-log.pod:16
msgid ""
"This tool understands and displays both plain text log files (eg. C</var/log/"
"messages>) and binary formats such as the systemd journal."
msgstr ""

#. type: textblock
#: ../cat/virt-log.pod:20
msgid ""
"To display other types of files, use L<virt-cat(1)>.  To copy files out of a "
"virtual machine, use L<virt-copy-out(1)>.  To display the contents of the "
"Windows Registry, use L<virt-win-reg(1)>."
msgstr ""

#. type: textblock
#: ../cat/virt-log.pod:26
msgid "Display the complete logs from a guest:"
msgstr ""

#. type: verbatim
#: ../cat/virt-log.pod:28
#, no-wrap
msgid ""
" virt-log -d mydomain | less\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-log.pod:30
msgid "Find out what DHCP IP address a VM acquired:"
msgstr "Визначення IP-адреси DHCP, використаної віртуальною машиною:"

#. type: verbatim
#: ../cat/virt-log.pod:32
#, no-wrap
msgid ""
" virt-log -d mydomain | grep 'dhclient.*bound to'\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-log.pod:78
msgid ""
"When prompting for keys and passphrases, virt-log normally turns echoing off "
"so you cannot see what you are typing.  If you are not worried about Tempest "
"attacks and there is no one else in the room you can specify this flag to "
"see what you are typing."
msgstr ""

#. type: verbatim
#: ../cat/virt-log.pod:94
#, no-wrap
msgid ""
" virt-log --format=raw -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-log.pod:98
#, no-wrap
msgid ""
" virt-log --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-log.pod:137
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>, L<virt-"
"tar-out(1)>, L<virt-win-reg(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../cat/virt-log.pod:151 ../examples/guestfs-examples.pod:75
#: ../make-fs/virt-make-fs.pod:235
msgid "Copyright (C) 2010-2014 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:3
msgid "virt-ls - List files in a virtual machine"
msgstr "virt-ls — програма для показу списку файлів у віртуальній машині"

#. type: verbatim
#: ../cat/virt-ls.pod:7
#, no-wrap
msgid ""
" virt-ls [--options] -d domname directory [directory ...]\n"
"\n"
msgstr ""
" virt-ls [--параметри] -d назва_домену каталог [каталог ...]\n"
"\n"

#. type: verbatim
#: ../cat/virt-ls.pod:9
#, no-wrap
msgid ""
" virt-ls [--options] -a disk.img [-a disk.img ...] directory [directory ...]\n"
"\n"
msgstr ""
" virt-ls [--параметри] -a диск.img [-a диск.img ...] каталог [каталог ...]\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:11 ../df/virt-df.pod:17 ../rescue/virt-rescue.pod:13
msgid "Old style:"
msgstr "Старий стиль:"

#. type: verbatim
#: ../cat/virt-ls.pod:13
#, no-wrap
msgid ""
" virt-ls [--options] domname directory\n"
"\n"
msgstr ""
" virt-ls [--параметри] назва_домену каталог\n"
"\n"

#. type: verbatim
#: ../cat/virt-ls.pod:15
#, no-wrap
msgid ""
" virt-ls [--options] disk.img [disk.img ...] directory\n"
"\n"
msgstr ""
" virt-ls [--параметри] диск.img [диск.img ...] каталог\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:19
msgid ""
"C<virt-ls> lists filenames, file sizes, checksums, extended attributes and "
"more from a virtual machine or disk image."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:22
msgid ""
"Multiple directory names can be given, in which case the output from each is "
"concatenated."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:25
msgid ""
"To list directories from a libvirt guest use the I<-d> option to specify the "
"name of the guest.  For a disk image, use the I<-a> option."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:29
msgid ""
"C<virt-ls> can do many simple file listings.  For more complicated cases you "
"may need to use L<guestfish(1)>, or write a program directly to the "
"L<guestfs(3)> API."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:35
msgid "Get a list of all files and directories in a virtual machine:"
msgstr "Отримати список всіх файлів і каталогів у віртуальній машині:"

#. type: verbatim
#: ../cat/virt-ls.pod:37
#, no-wrap
msgid ""
" virt-ls -R -d guest /\n"
"\n"
msgstr ""
" virt-ls -R -d guest /\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:39 ../examples/guestfs-testing.pod:275
msgid "List all setuid or setgid programs in a Linux virtual machine:"
msgstr ""
"Показати список всіх програм з setuid або setgid у віртуальній машині Linux:"

#. type: verbatim
#: ../cat/virt-ls.pod:41
#, no-wrap
msgid ""
" virt-ls -lR -d guest / | grep '^- [42]'\n"
"\n"
msgstr ""
" virt-ls -lR -d guest / | grep '^- [42]'\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:43 ../examples/guestfs-testing.pod:279
msgid "List all public-writable directories in a Linux virtual machine:"
msgstr ""
"Показати список всіх каталогів з відкритим для всіх доступом на запис у "
"віртуальній машині Linux:"

#. type: verbatim
#: ../cat/virt-ls.pod:45
#, no-wrap
msgid ""
" virt-ls -lR -d guest / | grep '^d ...7'\n"
"\n"
msgstr ""
" virt-ls -lR -d guest / | grep '^d ...7'\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:47 ../examples/guestfs-testing.pod:283
msgid "List all Unix domain sockets in a Linux virtual machine:"
msgstr "Показати список всіх сокетів доменів Unix у віртуальній машині Linux:"

#. type: verbatim
#: ../cat/virt-ls.pod:49
#, no-wrap
msgid ""
" virt-ls -lR -d guest / | grep '^s'\n"
"\n"
msgstr ""
" virt-ls -lR -d guest / | grep '^s'\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:51 ../examples/guestfs-testing.pod:287
msgid "List all regular files with filenames ending in '.png':"
msgstr ""
"Показати список всіх звичайних файлів, назви яких завершуються на «.png»:"

#. type: verbatim
#: ../cat/virt-ls.pod:53
#, no-wrap
msgid ""
" virt-ls -lR -d guest / | grep -i '^-.*\\.png$'\n"
"\n"
msgstr ""
" virt-ls -lR -d guest / | grep -i '^-.*\\.png$'\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:55
msgid "To display files larger than 10MB in home directories:"
msgstr ""
"Щоб переглянути список файлів у домашніх каталогах, розмір яких перевищує 10 "
"МБ:"

#. type: verbatim
#: ../cat/virt-ls.pod:57
#, no-wrap
msgid ""
" virt-ls -lR -d guest /home | awk '$3 > 10*1024*1024'\n"
"\n"
msgstr ""
" virt-ls -lR -d guest /home | awk '$3 > 10*1024*1024'\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:59 ../examples/guestfs-testing.pod:295
msgid "Find everything modified in the last 7 days:"
msgstr "Знайти всі об’єкти, які було змінено протягом попередніх 7 днів:"

#. type: verbatim
#: ../cat/virt-ls.pod:61
#, no-wrap
msgid ""
" virt-ls -lR -d guest --time-days / | awk '$6 <= 7'\n"
"\n"
msgstr ""
" virt-ls -lR -d guest --time-days / | awk '$6 <= 7'\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:63 ../examples/guestfs-testing.pod:299
msgid "Find regular files modified in the last 24 hours:"
msgstr ""
"Знайти звичайні файли, зміни до яких було внесено протягом попередніх 24 "
"годин:"

#. type: verbatim
#: ../cat/virt-ls.pod:65
#, no-wrap
msgid ""
" virt-ls -lR -d guest --time-days / | grep '^-' | awk '$6 < 1'\n"
"\n"
msgstr ""
" virt-ls -lR -d guest --time-days / | grep '^-' | awk '$6 < 1'\n"
"\n"

#. type: =head2
#: ../cat/virt-ls.pod:67
msgid "DIFFERENCES IN SNAPSHOTS AND BACKING FILES"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:69
msgid ""
"Although it is possible to use virt-ls to look for differences, since "
"libguestfs E<ge> 1.26 a new tool is available called L<virt-diff(1)>."
msgstr ""

#. type: =head1
#: ../cat/virt-ls.pod:72
msgid "OUTPUT MODES"
msgstr "РЕЖИМИ ВИВЕДЕННЯ ДАНИХ"

#. type: textblock
#: ../cat/virt-ls.pod:74
msgid ""
"C<virt-ls> has four output modes, controlled by different combinations of "
"the I<-l> and I<-R> options."
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:77
msgid "SIMPLE LISTING"
msgstr "ПРОСТИЙ СПИСОК"

#. type: textblock
#: ../cat/virt-ls.pod:79
msgid "A simple listing is like the ordinary L<ls(1)> command:"
msgstr "Простий список, подібний до списку звичайної команди L<ls(1)>:"

#. type: verbatim
#: ../cat/virt-ls.pod:81
#, no-wrap
msgid ""
" $ virt-ls -d guest /\n"
" bin\n"
" boot\n"
" [etc.]\n"
"\n"
msgstr ""
" $ virt-ls -d guest /\n"
" bin\n"
" boot\n"
" [тощо]\n"
"\n"

#. type: =head2
#: ../cat/virt-ls.pod:86
msgid "LONG LISTING"
msgstr "ДОВГИЙ СПИСОК"

#. type: textblock
#: ../cat/virt-ls.pod:88
msgid ""
"With the I<-l> (I<--long>) option, the output is like the C<ls -l> command "
"(more specifically, like the C<guestfs_ll> function)."
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:91
#, no-wrap
msgid ""
" $ virt-ls -l -d guest /\n"
" total 204\n"
" dr-xr-xr-x.   2 root root   4096 2009-08-25 19:06 bin\n"
" dr-xr-xr-x.   5 root root   3072 2009-08-25 19:06 boot\n"
" [etc.]\n"
"\n"
msgstr ""
" $ virt-ls -l -d guest /\n"
" total 204\n"
" dr-xr-xr-x.   2 root root   4096 2009-08-25 19:06 bin\n"
" dr-xr-xr-x.   5 root root   3072 2009-08-25 19:06 boot\n"
" [тощо]\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:97
msgid ""
"Note that while this is useful for displaying a directory, do not try "
"parsing this output in another program.  Use L</RECURSIVE LONG LISTING> "
"instead."
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:101
msgid "RECURSIVE LISTING"
msgstr "РЕКУРСИВНИЙ СПИСОК"

#. type: textblock
#: ../cat/virt-ls.pod:103
msgid ""
"With the I<-R> (I<--recursive>) option, C<virt-ls> lists the names of files "
"and directories recursively:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:106
#, no-wrap
msgid ""
" $ virt-ls -R -d guest /tmp\n"
" foo\n"
" foo/bar\n"
" [etc.]\n"
"\n"
msgstr ""
" $ virt-ls -R -d guest /tmp\n"
" foo\n"
" foo/bar\n"
" [тощо]\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:111
msgid ""
"To generate this output, C<virt-ls> runs the C<guestfs_find0> function and "
"converts C<\\0> characters to C<\\n>."
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:114
msgid "RECURSIVE LONG LISTING"
msgstr "РЕКУРСИВНИЙ ДОВГИЙ СПИСОК"

#. type: textblock
#: ../cat/virt-ls.pod:116
msgid ""
"Using I<-lR> options together changes the output to display directories "
"recursively, with file stats, and optionally other features such as "
"checksums and extended attributes."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:120
msgid ""
"Most of the interesting features of C<virt-ls> are only available when using "
"I<-lR> mode."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:123
msgid ""
"The fields are normally space-separated.  Filenames are B<not> quoted, so "
"you cannot use the output in another program (because filenames can contain "
"spaces and other unsafe characters).  If the guest was untrusted and someone "
"knew you were using C<virt-ls> to analyze the guest, they could play tricks "
"on you by creating filenames with embedded newline characters.  To B<safely> "
"parse the output in another program, use the I<--csv> (Comma-Separated "
"Values) option."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:131
msgid ""
"Note that this output format is completely unrelated to the C<ls -lR> "
"command."
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:134
#, no-wrap
msgid ""
" $ virt-ls -lR -d guest /bin\n"
" d 0555       4096 /bin\n"
" - 0755        123 /bin/alsaunmute\n"
" - 0755      28328 /bin/arch\n"
" l 0777          4 /bin/awk -> gawk\n"
" - 0755      27216 /bin/basename\n"
" - 0755     943360 /bin/bash\n"
" [etc.]\n"
"\n"
msgstr ""
" $ virt-ls -lR -d guest /bin\n"
" d 0555       4096 /bin\n"
" - 0755        123 /bin/alsaunmute\n"
" - 0755      28328 /bin/arch\n"
" l 0777          4 /bin/awk -> gawk\n"
" - 0755      27216 /bin/basename\n"
" - 0755     943360 /bin/bash\n"
" [тощо]\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:143
msgid "These basic fields are always shown:"
msgstr "Ці основні поля буде показано завжди:"

#. type: =item
#: ../cat/virt-ls.pod:147
msgid "type"
msgstr "тип"

#. type: textblock
#: ../cat/virt-ls.pod:149
msgid ""
"The file type, one of: C<-> (regular file), C<d> (directory), C<c> "
"(character device), C<b> (block device), C<p> (named pipe), C<l> (symbolic "
"link), C<s> (socket) or C<u> (unknown)."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:159
msgid "permissions"
msgstr "права доступу"

#. type: textblock
#: ../cat/virt-ls.pod:161
msgid "The Unix permissions, displayed as a 4 digit octal number."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:163
msgid "size"
msgstr "розмір"

#. type: textblock
#: ../cat/virt-ls.pod:165
msgid ""
"The size of the file.  This is shown in bytes unless I<-h> or I<--human-"
"readable> option is given, in which case this is shown as a human-readable "
"number."
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:169 ../fish/guestfish-actions.pod:6965
msgid "path"
msgstr "шлях"

#. type: textblock
#: ../cat/virt-ls.pod:171
msgid "The full path of the file or directory."
msgstr "Шлях до файла або каталогу повністю."

#. type: =item
#: ../cat/virt-ls.pod:173
msgid "link"
msgstr "посилання"

#. type: textblock
#: ../cat/virt-ls.pod:175
msgid "For symbolic links only, the link target."
msgstr "Лише для символічних посилань, призначення посилання."

#. type: textblock
#: ../cat/virt-ls.pod:179
msgid ""
"In I<-lR> mode, additional command line options enable the display of more "
"fields."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:182
msgid ""
"With the I<--uids> flag, these additional fields are displayed before the "
"path:"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:187
msgid "uid"
msgstr "uid"

#. type: =item
#: ../cat/virt-ls.pod:189
msgid "gid"
msgstr "gid"

#. type: textblock
#: ../cat/virt-ls.pod:191
msgid ""
"The UID and GID of the owner of the file (displayed numerically).  Note "
"these only make sense in the context of a Unix-like guest."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:196
msgid "With the I<--times> flag, these additional fields are displayed:"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:200
msgid "atime"
msgstr "atime"

#. type: textblock
#: ../cat/virt-ls.pod:202
msgid "The time of last access."
msgstr "Час останнього доступу."

#. type: =item
#: ../cat/virt-ls.pod:204
msgid "mtime"
msgstr "mtime"

#. type: textblock
#: ../cat/virt-ls.pod:206
msgid "The time of last modification."
msgstr "Час останнього внесення змін."

#. type: =item
#: ../cat/virt-ls.pod:208
msgid "ctime"
msgstr "ctime"

#. type: textblock
#: ../cat/virt-ls.pod:210
msgid "The time of last status change."
msgstr "Час останньої зміни стану."

#. type: textblock
#: ../cat/virt-ls.pod:214
msgid ""
"The time fields are displayed as string dates and times, unless one of the "
"I<--time-t>, I<--time-relative> or I<--time-days> flags is given."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:217
msgid "With the I<--extra-stats> flag, these additional fields are displayed:"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:221
msgid "device"
msgstr "пристрій"

#. type: textblock
#: ../cat/virt-ls.pod:223
msgid ""
"The device containing the file (displayed as major:minor).  This may not "
"match devices as known to the guest."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:226
msgid "inode"
msgstr "inode"

#. type: textblock
#: ../cat/virt-ls.pod:228
msgid "The inode number."
msgstr "Номер inode."

#. type: =item
#: ../cat/virt-ls.pod:230
msgid "nlink"
msgstr "nlink"

#. type: textblock
#: ../cat/virt-ls.pod:232
msgid "The number of hard links."
msgstr "Кількість жорстких посилань."

#. type: =item
#: ../cat/virt-ls.pod:234
msgid "rdev"
msgstr "rdev"

#. type: textblock
#: ../cat/virt-ls.pod:236
msgid ""
"For block and char special files, the device (displayed as major:minor)."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:239
msgid "blocks"
msgstr "блоки"

#. type: textblock
#: ../cat/virt-ls.pod:241
msgid "The number of 512 byte blocks allocated to the file."
msgstr "Кількість 512-байтових блоків, виділених під файл."

#. type: textblock
#: ../cat/virt-ls.pod:245
msgid ""
"With the I<--checksum> flag, the checksum of the file contents is shown "
"(only for regular files).  Computing file checksums can take a considerable "
"amount of time."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:274 ../diff/virt-diff.pod:76
msgid "B<--checksum>"
msgstr "B<--checksum>"

#. type: =item
#: ../cat/virt-ls.pod:276 ../diff/virt-diff.pod:78
msgid "B<--checksum=crc|md5|sha1|sha224|sha256|sha384|sha512>"
msgstr "B<--checksum=crc|md5|sha1|sha224|sha256|sha384|sha512>"

#. type: textblock
#: ../cat/virt-ls.pod:278
msgid ""
"Display checksum over file contents for regular files.  With no argument, "
"this defaults to using I<md5>.  Using an argument, you can select the "
"checksum type to use."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:282 ../cat/virt-ls.pod:319 ../cat/virt-ls.pod:352
#: ../cat/virt-ls.pod:421 ../cat/virt-ls.pod:431 ../cat/virt-ls.pod:438
#: ../cat/virt-ls.pod:445 ../cat/virt-ls.pod:452
msgid ""
"This option only has effect in I<-lR> output mode.  See L</RECURSIVE LONG "
"LISTING> above."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:310
msgid ""
"When prompting for keys and passphrases, virt-ls normally turns echoing off "
"so you cannot see what you are typing.  If you are not worried about Tempest "
"attacks and there is no one else in the room you can specify this flag to "
"see what you are typing."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:315 ../diff/virt-diff.pod:134
msgid "B<--extra-stats>"
msgstr "B<--extra-stats>"

#. type: textblock
#: ../cat/virt-ls.pod:317 ../diff/virt-diff.pod:136
msgid "Display extra stats."
msgstr "Показати додаткові дані."

#. type: verbatim
#: ../cat/virt-ls.pod:333
#, no-wrap
msgid ""
" virt-ls --format=raw -a disk.img /dir\n"
"\n"
msgstr ""
" virt-ls --format=raw -a диск.img /каталог\n"
"\n"

#. type: verbatim
#: ../cat/virt-ls.pod:337
#, no-wrap
msgid ""
" virt-ls --format=raw -a disk.img --format -a another.img /dir\n"
"\n"
msgstr ""
" virt-ls --format=raw -a диск.img --format -a інший_диск.img /каталог\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:350 ../diff/virt-diff.pod:167
msgid "Display file sizes in human-readable format."
msgstr "Показати розміри файлів у зручному для читання форматі."

#. type: =item
#: ../cat/virt-ls.pod:400
msgid "B<-R>"
msgstr "B<-R>"

#. type: =item
#: ../cat/virt-ls.pod:402
msgid "B<--recursive>"
msgstr "B<--recursive>"

#. type: textblock
#: ../cat/virt-ls.pod:404
msgid ""
"Select the mode.  With neither of these options, C<virt-ls> produces a "
"simple, flat list of the files in the named directory.  See L</SIMPLE "
"LISTING>."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:408
msgid ""
"C<virt-ls -l> produces a \"long listing\", which shows more detail.  See L</"
"LONG LISTING>."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:411
msgid ""
"C<virt-ls -R> produces a recursive list of files starting at the named "
"directory.  See L</RECURSIVE LISTING>."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:414
msgid ""
"C<virt-ls -lR> produces a recursive long listing which can be more easily "
"parsed.  See L</RECURSIVE LONG LISTING>."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:417 ../diff/virt-diff.pod:174
msgid "B<--times>"
msgstr "B<--times>"

#. type: textblock
#: ../cat/virt-ls.pod:419 ../diff/virt-diff.pod:176
msgid "Display time fields."
msgstr "Показати поля часу."

#. type: =item
#: ../cat/virt-ls.pod:424 ../diff/virt-diff.pod:178
msgid "B<--time-days>"
msgstr "B<--time-days>"

#. type: textblock
#: ../cat/virt-ls.pod:426 ../diff/virt-diff.pod:180
msgid "Display time fields as days before now (negative if in the future)."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:428 ../diff/virt-diff.pod:182
msgid ""
"Note that C<0> in output means \"up to 1 day before now\", or that the age "
"of the file is between 0 and 86399 seconds."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:434 ../diff/virt-diff.pod:185
msgid "B<--time-relative>"
msgstr "B<--time-relative>"

#. type: textblock
#: ../cat/virt-ls.pod:436 ../diff/virt-diff.pod:187
msgid "Display time fields as seconds before now (negative if in the future)."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:441 ../diff/virt-diff.pod:189
msgid "B<--time-t>"
msgstr "B<--time-t>"

#. type: textblock
#: ../cat/virt-ls.pod:443 ../diff/virt-diff.pod:191
msgid "Display time fields as seconds since the Unix epoch."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:448 ../diff/virt-diff.pod:193
msgid "B<--uids>"
msgstr "B<--uids>"

#. type: textblock
#: ../cat/virt-ls.pod:450 ../diff/virt-diff.pod:195
msgid "Display UID and GID fields."
msgstr "Показати поля UID і GID."

#. type: textblock
#: ../cat/virt-ls.pod:475
msgid "Previous versions of virt-ls allowed you to write either:"
msgstr "У попередніх версіях virt-ls можна було використовувати або"

#. type: verbatim
#: ../cat/virt-ls.pod:477
#, no-wrap
msgid ""
" virt-ls disk.img [disk.img ...] /dir\n"
"\n"
msgstr ""
" virt-ls диск.img [диск.img ...] /каталог\n"
"\n"

#. type: verbatim
#: ../cat/virt-ls.pod:481
#, no-wrap
msgid ""
" virt-ls guestname /dir\n"
"\n"
msgstr ""
" virt-ls назва_гостьової_системи /каталог\n"
"\n"

#. type: textblock
#: ../cat/virt-ls.pod:520
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>, L<virt-"
"diff(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>, L<virt-"
"diff(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."

#. type: =end
#: ../customize/customize-options.pod:1 ../customize/customize-options.pod:24
#: ../examples/guestfs-recipes.pod:1 ../examples/guestfs-recipes.pod:6
#: ../fish/guestfish-actions.pod:1 ../fish/guestfish-actions.pod:24
#: ../fish/guestfish-commands.pod:1 ../fish/guestfish-commands.pod:24
#: ../fish/guestfish-prepopts.pod:1 ../fish/guestfish-prepopts.pod:24
#: ../guestfs-release-notes.pod:5 ../guestfs-release-notes.pod:9
#: ../guestfs-release-notes.pod:11 ../guestfs-release-notes.pod:18
#: ../guestfs-release-notes.pod:223 ../guestfs-release-notes.pod:227
#: ../guestfs-release-notes.pod:767 ../guestfs-release-notes.pod:771
#: ../guestfs-release-notes.pod:1071 ../guestfs-release-notes.pod:1075
#: ../guestfs-release-notes.pod:1420 ../guestfs-release-notes.pod:1424
#: ../guestfs-release-notes.pod:1976 ../guestfs-release-notes.pod:1980
#: ../p2v/virt-p2v.pod:420 ../p2v/virt-p2v.pod:426
#: ../src/guestfs-actions.pod:1 ../src/guestfs-actions.pod:24
#: ../src/guestfs-availability.pod:1 ../src/guestfs-availability.pod:24
#: ../src/guestfs-structs.pod:1 ../src/guestfs-structs.pod:24
msgid "comment"
msgstr "коментар"

#. type: verbatim
#: ../customize/customize-options.pod:3 ../fish/guestfish-actions.pod:3
#: ../fish/guestfish-commands.pod:3 ../fish/guestfish-prepopts.pod:3
#: ../src/guestfs-actions.pod:3 ../src/guestfs-availability.pod:3
#: ../src/guestfs-structs.pod:3
#, no-wrap
msgid ""
"libguestfs generated file\n"
" WARNING: THIS FILE IS GENERATED FROM:\n"
"   generator/ *.ml\n"
" ANY CHANGES YOU MAKE TO THIS FILE WILL BE LOST.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../customize/customize-options.pod:8 ../fish/guestfish-actions.pod:8
#: ../fish/guestfish-commands.pod:8 ../fish/guestfish-prepopts.pod:8
#: ../src/guestfs-actions.pod:8 ../src/guestfs-availability.pod:8
#: ../src/guestfs-structs.pod:8
#, no-wrap
msgid ""
" Copyright (C) 2009-2014 Red Hat Inc.\n"
"\n"
msgstr ""
"© Red Hat Inc., 2009–2014\n"
"\n"

#. type: verbatim
#: ../customize/customize-options.pod:10 ../fish/guestfish-actions.pod:10
#: ../fish/guestfish-commands.pod:10 ../fish/guestfish-prepopts.pod:10
#: ../src/guestfs-actions.pod:10 ../src/guestfs-availability.pod:10
#: ../src/guestfs-structs.pod:10
#, no-wrap
msgid ""
" This program is free software; you can redistribute it and/or modify\n"
" it under the terms of the GNU General Public License as published by\n"
" the Free Software Foundation; either version 2 of the License, or\n"
" (at your option) any later version.\n"
"\n"
msgstr ""
" Ця програма є вільним програмним забезпеченням; ви можете поширювати та/або\n"
" змінювати її за умов дотримання GNU General Public License  утому вигляді, що\n"
" оприлюднений Free Software Foundation; версії 2 цієї Ліцензії, або (якщо\n"
" забажаєте) будь-якої випущеної пізніше.\n"
"\n"

#. type: verbatim
#: ../customize/customize-options.pod:15 ../fish/guestfish-actions.pod:15
#: ../fish/guestfish-commands.pod:15 ../fish/guestfish-prepopts.pod:15
#: ../src/guestfs-actions.pod:15 ../src/guestfs-availability.pod:15
#: ../src/guestfs-structs.pod:15
#, no-wrap
msgid ""
" This program is distributed in the hope that it will be useful,\n"
" but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"
" GNU General Public License for more details.\n"
"\n"
msgstr ""
" Ця програма поширюється у сподіванні, що вона буде корисною, але БЕЗ\n"
" БУДЬ-ЯКИХ ГАРАНТІЙНИХ ЗОБОВ’ЯЗАНЬ; навіть без очевидної гарантії\n"
" ПРАЦЕЗДАТНОСТІ або ПРИДАТНОСТІ ДЛЯ ВИКОРИСТАННЯ З ПЕВНОЮ МЕТОЮ. Докладніше\n"
" про це можна дізнатися з GNU General Public License.\n"
"\n"

#. type: verbatim
#: ../customize/customize-options.pod:20 ../fish/guestfish-actions.pod:20
#: ../fish/guestfish-commands.pod:20 ../fish/guestfish-prepopts.pod:20
#: ../src/guestfs-actions.pod:20 ../src/guestfs-availability.pod:20
#: ../src/guestfs-structs.pod:20
#, no-wrap
msgid ""
" You should have received a copy of the GNU General Public License along\n"
" with this program; if not, write to the Free Software Foundation, Inc.,\n"
" 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n"
"\n"
msgstr ""
" Ви маєте отримати копію GNU General Public License разом з цією програмою;\n"
" якщо це не так, повідомте про факт за адресою Free Software Foundation, Inc.,\n"
" Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n"
"\n"

#. type: =item
#: ../customize/customize-options.pod:28
msgid "B<--chmod> PERMISSIONS:FILE"
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:30
#: ../sysprep/sysprep-extra-options.pod:4
msgid "Change the permissions of C<FILE> to C<PERMISSIONS>."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:32
#: ../sysprep/sysprep-extra-options.pod:6
msgid ""
"I<Note>: C<PERMISSIONS> by default would be decimal, unless you prefix it "
"with C<0> to get octal, ie. use C<0700> not C<700>."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:35
msgid "B<--delete> PATH"
msgstr "B<--delete> ШЛЯХ"

#. type: textblock
#: ../customize/customize-options.pod:37
#: ../sysprep/sysprep-extra-options.pod:12
msgid ""
"Delete a file from the guest.  Or delete a directory (and all its contents, "
"recursively)."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:40
#: ../sysprep/sysprep-extra-options.pod:15
msgid "See also: I<--upload>, I<--scrub>."
msgstr "Див. також I<--upload>, I<--scrub>."

#. type: =item
#: ../customize/customize-options.pod:42
msgid "B<--edit> FILE:EXPR"
msgstr "B<--edit> ФАЙЛ:ВИРАЗ"

#. type: textblock
#: ../customize/customize-options.pod:44
#: ../sysprep/sysprep-extra-options.pod:20
msgid "Edit C<FILE> using the Perl expression C<EXPR>."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:46 ../edit/virt-edit.pod:133
#: ../sysprep/sysprep-extra-options.pod:22
msgid ""
"Be careful to properly quote the expression to prevent it from being altered "
"by the shell."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:49 ../edit/virt-edit.pod:136
#: ../sysprep/sysprep-extra-options.pod:25
msgid "Note that this option is only available when Perl 5 is installed."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:51
#: ../sysprep/sysprep-extra-options.pod:27
msgid "See L<virt-edit(1)/NON-INTERACTIVE EDITING>."
msgstr "Див. L<virt-edit(1)/NON-INTERACTIVE EDITING>."

#. type: =item
#: ../customize/customize-options.pod:53
msgid "B<--firstboot> SCRIPT"
msgstr "B<--firstboot> СКРИПТ"

#. type: textblock
#: ../customize/customize-options.pod:55
#: ../sysprep/sysprep-extra-options.pod:32
msgid ""
"Install C<SCRIPT> inside the guest, so that when the guest first boots up, "
"the script runs (as root, late in the boot process)."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:58
#: ../sysprep/sysprep-extra-options.pod:35
msgid "The script is automatically chmod +x after installation in the guest."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:60
#: ../sysprep/sysprep-extra-options.pod:37
msgid ""
"The alternative version I<--firstboot-command> is the same, but it "
"conveniently wraps the command up in a single line script for you."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:63 ../customize/customize-options.pod:73
#: ../sysprep/sysprep-extra-options.pod:40
#: ../sysprep/sysprep-extra-options.pod:51
msgid ""
"You can have multiple I<--firstboot> options.  They run in the same order "
"that they appear on the command line."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:66 ../customize/customize-options.pod:76
#: ../sysprep/sysprep-extra-options.pod:43
#: ../sysprep/sysprep-extra-options.pod:54
msgid "See also I<--run>."
msgstr "Див. також I<--run>."

#. type: =item
#: ../customize/customize-options.pod:68
msgid "B<--firstboot-command> 'CMD+ARGS'"
msgstr "B<--firstboot-command> 'КОМАНДА+ПАРАМЕТРИ'"

#. type: textblock
#: ../customize/customize-options.pod:70
#: ../sysprep/sysprep-extra-options.pod:48
msgid ""
"Run command (and arguments) inside the guest when the guest first boots up "
"(as root, late in the boot process)."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:78
msgid "B<--firstboot-install> PKG,PKG.."
msgstr "B<--firstboot-install> ПАКУНОК,ПАКУНОК.."

#. type: textblock
#: ../customize/customize-options.pod:80
#: ../sysprep/sysprep-extra-options.pod:59
msgid ""
"Install the named packages (a comma-separated list).  These are installed "
"when the guest first boots using the guest's package manager (eg. apt, yum, "
"etc.) and the guest's network connection."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:84 ../customize/customize-options.pod:98
#: ../sysprep/sysprep-extra-options.pod:63
#: ../sysprep/sysprep-extra-options.pod:79
msgid ""
"For an overview on the different ways to install packages, see L<virt-"
"builder(1)/INSTALLING PACKAGES>."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:87
msgid "B<--hostname> HOSTNAME"
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:89
#: ../sysprep/sysprep-extra-options.pod:69
msgid ""
"Set the hostname of the guest to C<HOSTNAME>.  You can use a dotted hostname."
"domainname (FQDN) if you want."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:92
msgid "B<--install> PKG,PKG.."
msgstr "B<--install> ПАКУНОК,ПАКУНОК.."

#. type: textblock
#: ../customize/customize-options.pod:94
#: ../sysprep/sysprep-extra-options.pod:75
msgid ""
"Install the named packages (a comma-separated list).  These are installed "
"during the image build using the guest's package manager (eg. apt, yum, "
"etc.) and the host's network connection."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:101
#: ../sysprep/sysprep-extra-options.pod:82
msgid "See also I<--update>."
msgstr "Див. також I<--update>."

#. type: =item
#: ../customize/customize-options.pod:103
msgid "B<--link> TARGET:LINK[:LINK..]"
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:105
#: ../sysprep/sysprep-extra-options.pod:101
msgid ""
"Create symbolic link(s) in the guest, starting at C<LINK> and pointing at "
"C<TARGET>."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:108
msgid "B<--mkdir> DIR"
msgstr "B<--mkdir> КАТАЛОГ"

#. type: textblock
#: ../customize/customize-options.pod:110
#: ../sysprep/sysprep-extra-options.pod:107
msgid "Create a directory in the guest."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:112
#: ../sysprep/sysprep-extra-options.pod:109
msgid ""
"This uses S<C<mkdir -p>> so any intermediate directories are created, and it "
"also works if the directory already exists."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:115
msgid "B<--no-logfile>"
msgstr "B<--no-logfile>"

#. type: textblock
#: ../customize/customize-options.pod:117
#: ../sysprep/sysprep-extra-options.pod:115
msgid ""
"Scrub C<builder.log> (log file from build commands) from the image after "
"building is complete.  If you don't want to reveal precisely how the image "
"was built, use this option."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:121
#: ../sysprep/sysprep-extra-options.pod:119
msgid "See also: L</LOG FILE>."
msgstr "Див. також L</LOG FILE>."

#. type: =item
#: ../customize/customize-options.pod:123
msgid "B<--password> USER:SELECTOR"
msgstr "B<--password> КОРИСТУВАЧ:ВАРІАНТ"

#. type: textblock
#: ../customize/customize-options.pod:125
#: ../sysprep/sysprep-extra-options.pod:124
msgid ""
"Set the password for C<USER>.  (Note this option does I<not> create the user "
"account)."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:128
#: ../customize/customize-options.pod:157
#: ../sysprep/sysprep-extra-options.pod:127
#: ../sysprep/sysprep-extra-options.pod:172
msgid ""
"See L<virt-builder(1)/USERS AND PASSWORDS> for the format of the C<SELECTOR> "
"field, and also how to set up user accounts."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:131
msgid "B<--password-crypto> md5|sha256|sha512"
msgstr "B<--password-crypto> md5|sha256|sha512"

#. type: textblock
#: ../customize/customize-options.pod:133
#: ../sysprep/sysprep-extra-options.pod:133
msgid ""
"When the virt tools change or set a password in the guest, this option sets "
"the password encryption of that password to C<md5>, C<sha256> or C<sha512>."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:137
#: ../sysprep/sysprep-extra-options.pod:137
msgid ""
"C<sha256> and C<sha512> require glibc E<ge> 2.7 (check crypt(3) inside the "
"guest)."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:140
#: ../sysprep/sysprep-extra-options.pod:140
msgid ""
"C<md5> will work with relatively old Linux guests (eg. RHEL 3), but is not "
"secure against modern attacks."
msgstr ""
"C<md5> працюватиме з відносно давніми гостьовими системами Linux "
"(наприкладRHEL 3), але є незахищеним щодо новітніх способів атак."

#. type: textblock
#: ../customize/customize-options.pod:143
#: ../sysprep/sysprep-extra-options.pod:143
msgid ""
"The default is C<sha512> unless libguestfs detects an old guest that didn't "
"have support for SHA-512, in which case it will use C<md5>.  You can "
"override libguestfs by specifying this option."
msgstr ""
"Типовим способом шифрування є C<sha512>. Він використовується, якщо "
"libguestfs вдасться виявити у гостьовій системі підтримку SHA-512. Якщо "
"такої підтримки не буде виявлено, використовуватиметься C<md5>. За допомогою "
"цього параметра ви можете перевизначити автоматично визначений libguestfs "
"спосіб шифрування."

#. type: textblock
#: ../customize/customize-options.pod:147
#: ../sysprep/sysprep-extra-options.pod:147
msgid ""
"Note this does not change the default password encryption used by the guest "
"when you create new user accounts inside the guest.  If you want to do that, "
"then you should use the I<--edit> option to modify C</etc/sysconfig/"
"authconfig> (Fedora, RHEL) or C</etc/pam.d/common-password> (Debian, Ubuntu)."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:153
msgid "B<--root-password> SELECTOR"
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:155
#: ../sysprep/sysprep-extra-options.pod:170
msgid "Set the root password."
msgstr "Встановити пароль користувача root."

#. type: textblock
#: ../customize/customize-options.pod:160
#: ../sysprep/sysprep-extra-options.pod:175
msgid ""
"Note: In virt-builder, if you I<don't> set I<--root-password> then the guest "
"is given a I<random> root password."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:163
msgid "B<--run> SCRIPT"
msgstr "B<--run> СКРИПТ"

#. type: textblock
#: ../customize/customize-options.pod:165
#: ../sysprep/sysprep-extra-options.pod:181
msgid ""
"Run the shell script (or any program) called C<SCRIPT> on the disk image.  "
"The script runs virtualized inside a small appliance, chrooted into the "
"guest filesystem."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:169
#: ../sysprep/sysprep-extra-options.pod:185
msgid "The script is automatically chmod +x."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:171
#: ../customize/customize-options.pod:187
#: ../sysprep/sysprep-extra-options.pod:187
#: ../sysprep/sysprep-extra-options.pod:204
msgid ""
"If libguestfs supports it then a limited network connection is available but "
"it only allows outgoing network connections.  You can also attach data disks "
"(eg. ISO files) as another way to provide data (eg. software packages) to "
"the script without needing a network connection (I<--attach>).  You can also "
"upload data files (I<--upload>)."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:177
#: ../sysprep/sysprep-extra-options.pod:193
msgid ""
"You can have multiple I<--run> options.  They run in the same order that "
"they appear on the command line."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:180
#: ../customize/customize-options.pod:196
#: ../sysprep/sysprep-extra-options.pod:196
#: ../sysprep/sysprep-extra-options.pod:213
msgid "See also: I<--firstboot>, I<--attach>, I<--upload>."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:182
msgid "B<--run-command> 'CMD+ARGS'"
msgstr "B<--run-command> 'КОМАНДА+ПАРАМЕТРИ'"

#. type: textblock
#: ../customize/customize-options.pod:184
#: ../sysprep/sysprep-extra-options.pod:201
msgid ""
"Run the command and arguments on the disk image.  The command runs "
"virtualized inside a small appliance, chrooted into the guest filesystem."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:193
#: ../sysprep/sysprep-extra-options.pod:210
msgid ""
"You can have multiple I<--run-command> options.  They run in the same order "
"that they appear on the command line."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:198
msgid "B<--scrub> FILE"
msgstr "B<--scrub> ФАЙЛ"

#. type: textblock
#: ../customize/customize-options.pod:200
#: ../sysprep/sysprep-extra-options.pod:240
msgid "Scrub a file from the guest.  This is like I<--delete> except that:"
msgstr ""
"Витерти файл з гостьової системи. Подібне до I<--delete>, окрім того, що:"

#. type: textblock
#: ../customize/customize-options.pod:206
#: ../sysprep/sysprep-extra-options.pod:246
msgid "It scrubs the data so a guest could not recover it."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:210
#: ../sysprep/sysprep-extra-options.pod:250
msgid "It cannot delete directories, only regular files."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:214
msgid "B<--selinux-relabel>"
msgstr "B<--selinux-relabel>"

#. type: textblock
#: ../customize/customize-options.pod:216
#: ../sysprep/sysprep-extra-options.pod:257
msgid "Relabel files in the guest so that they have the correct SELinux label."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:218
#: ../sysprep/sysprep-extra-options.pod:259
msgid "You should only use this option for guests which support SELinux."
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:220
msgid "B<--timezone> TIMEZONE"
msgstr "B<--timezone> ЧАСОВИЙ_ПОЯС"

#. type: textblock
#: ../customize/customize-options.pod:222
#: ../sysprep/sysprep-extra-options.pod:264
msgid ""
"Set the default timezone of the guest to C<TIMEZONE>.  Use a location string "
"like C<Europe/London>"
msgstr ""

#. type: =item
#: ../customize/customize-options.pod:225
msgid "B<--update>"
msgstr "B<--update>"

#. type: textblock
#: ../customize/customize-options.pod:227
#: ../sysprep/sysprep-extra-options.pod:270
msgid ""
"Do the equivalent of C<yum update>, C<apt-get upgrade>, or whatever command "
"is required to update the packages already installed in the template to "
"their latest versions."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:231
#: ../sysprep/sysprep-extra-options.pod:274
msgid "See also I<--install>."
msgstr "Див. також I<--install>."

#. type: =item
#: ../customize/customize-options.pod:233
msgid "B<--upload> FILE:DEST"
msgstr "B<--upload> ФАЙЛ:ПРИЗНАЧЕННЯ"

#. type: textblock
#: ../customize/customize-options.pod:235
#: ../sysprep/sysprep-extra-options.pod:279
msgid ""
"Upload local file C<FILE> to destination C<DEST> in the disk image.  File "
"owner and permissions from the original are preserved, so you should set "
"them to what you want them to be in the disk image."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:239
#: ../sysprep/sysprep-extra-options.pod:283
msgid ""
"C<DEST> could be the final filename.  This can be used to rename the file on "
"upload."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:242
#: ../sysprep/sysprep-extra-options.pod:286
msgid ""
"If C<DEST> is a directory name (which must already exist in the guest)  then "
"the file is uploaded into that directory, and it keeps the same name as on "
"the local filesystem."
msgstr ""

#. type: textblock
#: ../customize/customize-options.pod:246
#: ../sysprep/sysprep-extra-options.pod:290
msgid "See also: I<--mkdir>, I<--delete>, I<--scrub>."
msgstr "Див. також I<--mkdir>, I<--delete>, I<--scrub>."

#. type: =item
#: ../customize/customize-options.pod:248
msgid "B<--write> FILE:CONTENT"
msgstr "B<--write> ФАЙЛ:ДАНІ"

#. type: textblock
#: ../customize/customize-options.pod:250
#: ../sysprep/sysprep-extra-options.pod:295
msgid "Write C<CONTENT> to C<FILE>."
msgstr "Записати C<ДАНІ> до файла C<ФАЙЛ>."

#. type: textblock
#: ../customize/virt-customize.pod:3
msgid "virt-customize - Customize a virtual machine"
msgstr ""

#. type: verbatim
#: ../customize/virt-customize.pod:7
#, no-wrap
msgid ""
" virt-customize [--options] -d domname\n"
"__CUSTOMIZE_SYNOPSIS__\n"
"\n"
msgstr ""

#. type: verbatim
#: ../customize/virt-customize.pod:10
#, no-wrap
msgid ""
" virt-customize [--options] -a disk.img [-a disk.img ...]\n"
"__CUSTOMIZE_SYNOPSIS__\n"
"\n"
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:15
msgid ""
"Virt-customize can customize a virtual machine (disk image) by installing "
"packages, editing configuration files, and so on."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:18
msgid ""
"Virt-customize modifies the guest or disk image I<in place>.  The guest must "
"be shut down.  If you want to preserve the existing contents of the guest, "
"I<you must snapshot, copy or clone the disk first>."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:22
msgid ""
"You do I<not> need to run virt-customize as root.  In fact we'd generally "
"recommend that you don't."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:25
msgid "Related tools include: L<virt-sysprep(1)> and L<virt-builder(1)>."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:41 ../sysprep/virt-sysprep.pod:52
msgid ""
"The format of the disk image is auto-detected.  To override this and force a "
"particular format use the I<--format> option."
msgstr ""
"Формат образу диска визначається автоматично. Щоб перевизначити його і "
"примусово використати певний формат, скористайтеся параметром I<--format>."

#. type: =item
#: ../customize/virt-customize.pod:44 ../diff/virt-diff.pod:54
#: ../sysprep/virt-sysprep.pod:55
msgid "B<-a> URI"
msgstr "B<-a> адреса"

#. type: =item
#: ../customize/virt-customize.pod:46 ../diff/virt-diff.pod:56
#: ../sysprep/virt-sysprep.pod:57
msgid "B<--add> URI"
msgstr "B<--add> адреса"

#. type: textblock
#: ../customize/virt-customize.pod:48 ../sysprep/virt-sysprep.pod:59
msgid ""
"Add a remote disk.  The URI format is compatible with guestfish.  See "
"L<guestfish(1)/ADDING REMOTE STORAGE>."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:53
msgid ""
"The given disk is attached to the libguestfs appliance.  This is used to "
"provide extra software repositories or other data for customization."
msgstr ""

#. type: =item
#: ../customize/virt-customize.pod:89 ../fish/guestfish.pod:356
#: ../fuse/guestmount.pod:291 ../resize/virt-resize.pod:451
#: ../sysprep/virt-sysprep.pod:79
msgid "B<-n>"
msgstr "B<-n>"

#. type: =item
#: ../customize/virt-customize.pod:91 ../sysprep/virt-sysprep.pod:81
msgid "B<--dry-run>"
msgstr "B<--dry-run>"

#. type: textblock
#: ../customize/virt-customize.pod:93 ../sysprep/virt-sysprep.pod:83
msgid ""
"Perform a read-only \"dry run\" on the guest.  This runs the sysprep "
"operation, but throws away any changes to the disk at the end."
msgstr ""

#. type: =item
#: ../customize/virt-customize.pod:96 ../sysprep/virt-sysprep.pod:149
msgid "B<--format> raw|qcow2|.."
msgstr "B<--format> raw|qcow2|.."

#. type: =item
#: ../customize/virt-customize.pod:98 ../sysprep/virt-sysprep.pod:151
msgid "B<--format> auto"
msgstr "B<--format> auto"

#. type: textblock
#: ../customize/virt-customize.pod:100 ../sysprep/virt-sysprep.pod:153
msgid ""
"The default for the I<-a> option is to auto-detect the format of the disk "
"image.  Using this forces the disk format for I<-a> options which follow on "
"the command line.  Using I<--format auto> switches back to auto-detection "
"for subsequent I<-a> options."
msgstr ""
"Типовим значенням для параметра I<-a> є автоматичне визначення формату "
"образу диска. Використання цього параметра примусово визначає значення "
"параметрів I<-a> формату диска у наступному рядку команди. Використання "
"параметра I<--format auto> перемикає програму у режим автоматичного "
"визначення у наступних параметрах I<-a>."

#. type: verbatim
#: ../customize/virt-customize.pod:107
#, no-wrap
msgid ""
" virt-customize --format raw -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../customize/virt-customize.pod:111
#, no-wrap
msgid ""
" virt-customize --format raw -a disk.img --format auto -a another.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:146
msgid ""
"This does not affect whether the guest can access the network once it has "
"been booted, because that is controlled by your hypervisor or cloud "
"environment and has nothing to do with virt-customize."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:167
msgid ""
"You don't want untrusted guest code trying to access your host network when "
"running virt-customize.  This is particularly an issue when you don't trust "
"the source of the operating system templates.  (See L</SECURITY> below)."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:182 ../sysprep/virt-sysprep.pod:218
msgid "Don't print log messages."
msgstr "Не виводити повідомлень до журналу."

#. type: textblock
#: ../customize/virt-customize.pod:184 ../sysprep/virt-sysprep.pod:220
msgid "To enable detailed logging of individual file operations, use I<-x>."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:214 ../sysprep/virt-sysprep.pod:519
msgid "This program returns 0 on success, or 1 if there was an error."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:244 ../sparsify/virt-sparsify.pod:426
#: ../sysprep/virt-sysprep.pod:549 ../v2v/virt-v2v.pod:1308
msgid ""
"For other environment variables, see L<guestfs(3)/ENVIRONMENT VARIABLES>."
msgstr ""
"Опис інших змінних середовища наведено у розділі L<guestfs(3)/ENVIRONMENT "
"VARIABLES>."

#. type: textblock
#: ../customize/virt-customize.pod:248
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-builder(1)>, L<virt-clone(1)>, L<virt-"
"rescue(1)>, L<virt-resize(1)>, L<virt-sparsify(1)>, L<virt-sysprep(1)>, "
"L<virsh(1)>, L<lvcreate(8)>, L<qemu-img(1)>, L<scrub(1)>, L<http://"
"libguestfs.org/>, L<http://libvirt.org/>."
msgstr ""

#. type: textblock
#: ../customize/virt-customize.pod:269 ../fish/libguestfs-tools.conf.pod:102
#: ../sparsify/virt-sparsify.pod:458 ../sysprep/virt-sysprep.pod:576
msgid "Copyright (C) 2011-2014 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../daemon/guestfsd.pod:3
msgid "guestfsd - guestfs daemon"
msgstr "guestfsd — фонова служба guestfs"

#. type: verbatim
#: ../daemon/guestfsd.pod:7
#, no-wrap
msgid ""
" guestfsd [-r] [-v|--verbose]\n"
"\n"
msgstr ""
" guestfsd [-r] [-v|--verbose]\n"
"\n"

#. type: textblock
#: ../daemon/guestfsd.pod:11
msgid ""
"C<guestfsd> is the libguestfs daemon.  Normal users never need to run this "
"program explicitly.  This man page discusses what C<guestfsd> does in both "
"the libguestfs appliance and when using libguestfs live."
msgstr ""

#. type: =head2
#: ../daemon/guestfsd.pod:15
msgid "LIBGUESTFS APPLIANCE"
msgstr ""

#. type: textblock
#: ../daemon/guestfsd.pod:17
msgid ""
"For the architecture of the libguestfs appliance, see L<guestfs(3)/"
"ARCHITECTURE>."
msgstr ""

#. type: textblock
#: ../daemon/guestfsd.pod:20
msgid ""
"After the appliance boots, the C</init> script in the appliance starts "
"C<guestfsd> with no arguments.  C<guestfsd> opens the virtio-serial port on "
"a known path (see L</FILES>).  It initiates the protocol (see L<guestfs(3)/"
"COMMUNICATION PROTOCOL>) and processes requests one at a time from the "
"library until the appliance is destroyed."
msgstr ""

#. type: textblock
#: ../daemon/guestfsd.pod:26
msgid ""
"Filesystems are mounted under C</sysroot> and all filesystem operations "
"happen relative to this directory."
msgstr ""

#. type: =head2
#: ../daemon/guestfsd.pod:29
msgid "LIBGUESTFS LIVE"
msgstr "LIBGUESTFS LIVE"

#. type: textblock
#: ../daemon/guestfsd.pod:31
msgid ""
"In the libguestfs live case, C<guestfsd -r> is started from the rc-scripts, "
"systemd, etc."
msgstr ""

#. type: textblock
#: ../daemon/guestfsd.pod:34
msgid ""
"The C<-r> option causes the daemon to operate on the root filesystem instead "
"of C</sysroot>."
msgstr ""

#. type: textblock
#: ../daemon/guestfsd.pod:37
msgid ""
"Currently (because of limitations in virtio-serial) only one client can "
"connect at a time, and C<guestfsd> must be restarted after each client "
"disconnects.  If libguestfs live were changed to use a different transport "
"such as TCP/IP then this limitation could be removed."
msgstr ""

#. type: =item
#: ../daemon/guestfsd.pod:47
msgid "B<-?>"
msgstr "B<-?>"

#. type: =item
#: ../daemon/guestfsd.pod:53 ../fish/guestfish.pod:398
#: ../fuse/guestmount.pod:341 ../rescue/virt-rescue.pod:196
msgid "B<-r>"
msgstr "B<-r>"

#. type: textblock
#: ../daemon/guestfsd.pod:55
msgid ""
"Set the root filesystem to be C</> (instead of the default which is C</"
"sysroot>).  Also do not unmount filesystems when the daemon exits."
msgstr ""

#. type: textblock
#: ../daemon/guestfsd.pod:58
msgid "This option is used to enable libguestfs live."
msgstr ""

#. type: textblock
#: ../daemon/guestfsd.pod:66
msgid ""
"The verbose flag is also set if the Linux command line contains the "
"substring C<guestfs_verbose=1>."
msgstr ""

#. type: =head1
#: ../daemon/guestfsd.pod:76 ../fish/guestfish.pod:1537
#: ../fuse/guestmount.pod:391 ../p2v/virt-p2v-make-disk.pod:72
#: ../p2v/virt-p2v-make-kickstart.pod:160 ../rescue/virt-rescue.pod:393
#: ../v2v/virt-v2v.pod:1245
msgid "FILES"
msgstr "ФАЙЛИ"

#. type: =item
#: ../daemon/guestfsd.pod:80
msgid "C</dev/virtio-ports/org.libguestfs.channel.0>"
msgstr "C</dev/virtio-ports/org.libguestfs.channel.0>"

#. type: textblock
#: ../daemon/guestfsd.pod:82
msgid "The virtio serial port which C<guestfsd> connects to."
msgstr "Послідовний порт virtio, з яким встановлює з’єднання C<guestfsd>."

#. type: =item
#: ../daemon/guestfsd.pod:84
msgid "C</proc/cmdline>"
msgstr "C</proc/cmdline>"

#. type: textblock
#: ../daemon/guestfsd.pod:86
msgid ""
"The Linux command line is parsed to discover C<guestfs_*> flags.  The "
"following flags are understood:"
msgstr ""

#. type: =item
#: ../daemon/guestfsd.pod:91
msgid "B<guestfs_verbose=1>"
msgstr "B<guestfs_verbose=1>"

#. type: textblock
#: ../daemon/guestfsd.pod:93
msgid ""
"Enable verbose messages.  This flag is passed by the libguestfs library to "
"the appliance to make the daemon more verbose (it acts like the I<-v> flag "
"on the command line).  Unrelated to the daemon, it also causes the appliance "
"init script to print out a lot more debugging information."
msgstr ""

#. type: =item
#: ../daemon/guestfsd.pod:99
msgid "B<guestfs_channel=PATH>"
msgstr "B<guestfs_channel=ШЛЯХ>"

#. type: textblock
#: ../daemon/guestfsd.pod:101
msgid ""
"Set the path to the virtio-serial channel to something other than the "
"default (which is C</dev/virtio-ports/org.libguestfs.channel.0>).  This is "
"used by the User-Mode Linux backend to use a regular emulated serial port "
"instead of virtio-serial."
msgstr ""

#. type: =item
#: ../daemon/guestfsd.pod:106
msgid "B<guestfs_network=1>"
msgstr "B<guestfs_network=1>"

#. type: textblock
#: ../daemon/guestfsd.pod:108
msgid ""
"This is set if the appliance network is enabled (see C<guestfs_set_network>)."
msgstr ""

#. type: textblock
#: ../daemon/guestfsd.pod:117
msgid "L<guestfs(3)>, L<http://libguestfs.org/>."
msgstr "L<guestfs(3)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../df/virt-df.pod:3
msgid "virt-df - Display free space on virtual filesystems"
msgstr ""
"virt-df — програма для показу даних щодо вільного місця на віртуальних "
"файлових системах"

#. type: textblock
#: ../df/virt-df.pod:7
msgid "All guests:"
msgstr "Всі гостьові системи:"

#. type: verbatim
#: ../df/virt-df.pod:9
#, no-wrap
msgid ""
" virt-df [--options]\n"
"\n"
msgstr ""
" virt-df [--параметри]\n"
"\n"

#. type: textblock
#: ../df/virt-df.pod:11
msgid "Single guest:"
msgstr "Окрема гостьова система:"

#. type: verbatim
#: ../df/virt-df.pod:13
#, no-wrap
msgid ""
" virt-df [--options] -d domname\n"
"\n"
msgstr ""
" virt-df [--параметри] -d назва_домену\n"
"\n"

#. type: verbatim
#: ../df/virt-df.pod:15
#, no-wrap
msgid ""
" virt-df [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""
" virt-df [--параметри] -a диск.img [-a диск.img ...]\n"
"\n"

#. type: verbatim
#: ../df/virt-df.pod:19
#, no-wrap
msgid ""
" virt-df [--options] domname\n"
"\n"
msgstr ""
" virt-df [--параметри] назва_домену\n"
"\n"

#. type: verbatim
#: ../df/virt-df.pod:21
#, no-wrap
msgid ""
" virt-df [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""
" virt-df [--параметри] диск.img [диск.img ...]\n"
"\n"

#. type: textblock
#: ../df/virt-df.pod:25
msgid ""
"C<virt-df> is a command line tool to display free space on virtual machine "
"filesystems.  Unlike other tools, it doesn't just display the size of disk "
"allocated to a virtual machine, but can look inside disk images to see how "
"much space is really being used."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:30
msgid ""
"If used without any I<-a> or I<-d> arguments, C<virt-df> checks with libvirt "
"to get a list of all active and inactive guests, and performs a C<df>-type "
"operation on each one in turn, printing out the results."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:34
msgid ""
"If any I<-a> or I<-d> arguments are specified, C<virt-df> performs a C<df>-"
"type operation on either the single named libvirt domain, or on the disk "
"image(s) listed on the command line (which must all belong to a single VM).  "
"B<In this mode (with arguments), C<virt-df> will only work for a single "
"guest>.  If you want to run on multiple guests, then you have to invoke "
"C<virt-df> multiple times."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:41
msgid ""
"Use the I<--csv> option to get a format which can be easily parsed by other "
"programs.  Other options are similar to the standard L<df(1)> command."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:47
msgid ""
"Show disk usage for a single libvirt guest called C<F14x64>.  Make the "
"output human-readable:"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:50
#, no-wrap
msgid ""
" # virt-df -d F14x64 -h\n"
" Filesystem                       Size     Used  Available  Use%\n"
" F14x64:/dev/sda1                 484M      66M       393M   14%\n"
" F14x64:/dev/vg_f13x64/lv_root    7.4G     3.4G       4.0G   46%\n"
"\n"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:55
msgid "Show disk usage for a disk image file called C<test.img>:"
msgstr ""
"Показати дані щодо використання диска у файлі образу диска з назвою C<test."
"img>:"

#. type: verbatim
#: ../df/virt-df.pod:57
#, no-wrap
msgid ""
" $ virt-df -a test1.img\n"
" Filesystem                  1K-blocks     Used  Available  Use%\n"
" test1.img:/dev/sda1             99099     1551      92432    2%\n"
"\n"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:61
msgid ""
"If a single guest has multiple disks, use the I<-a> option repeatedly.  A "
"plus sign (C<+>) is displayed for each additional disk.  B<Note: Do not do "
"this with unrelated guest disks.>"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:65
#, no-wrap
msgid ""
" $ virt-df -a Win7x32TwoDisks-a -a Win7x32TwoDisks-b \n"
" Filesystem                   1K-blocks    Used  Available  Use%\n"
" Win7x32TwoDisks-a+:/dev/sda1    102396   24712      77684   25%\n"
" Win7x32TwoDisks-a+:/dev/sda2  12478460 7403416    5075044   60%\n"
" Win7x32TwoDisks-a+:/dev/sdb1    521212   55728     465484   11%\n"
"\n"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:130
#, no-wrap
msgid ""
" virt-df --format=raw -a disk.img\n"
"\n"
msgstr ""
" virt-df --format=raw -a disk.img\n"
"\n"

#. type: verbatim
#: ../df/virt-df.pod:134
#, no-wrap
msgid ""
" virt-df --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""
" virt-df --format=raw -a disk.img --format -a another.img\n"
"\n"

#. type: textblock
#: ../df/virt-df.pod:147
msgid "Print sizes in human-readable format."
msgstr "Вивести дані щодо розмірів у зручному для читання форматі."

#. type: textblock
#: ../df/virt-df.pod:149
msgid "You are not allowed to use I<-h> and I<--csv> at the same time."
msgstr "Параметри I<-h> і I<--csv> не можна використовувати одночасно."

#. type: =item
#: ../df/virt-df.pod:151 ../fish/guestfish.pod:259 ../fuse/guestmount.pod:244
msgid "B<-i>"
msgstr "B<-i>"

#. type: =item
#: ../df/virt-df.pod:153
msgid "B<--inodes>"
msgstr "B<--inodes>"

#. type: textblock
#: ../df/virt-df.pod:155
msgid "Print inodes instead of blocks."
msgstr "Вивести дані щодо inode замість даних щодо блоків."

#. type: =item
#: ../df/virt-df.pod:157
msgid "B<--one-per-guest>"
msgstr "B<--one-per-guest>"

#. type: textblock
#: ../df/virt-df.pod:159
msgid ""
"Since libguestfs 1.22, this is the default.  This option does nothing and is "
"left here for backwards compatibility with older scripts."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:164
msgid ""
"Since libguestfs 1.22, virt-df is multithreaded and examines guests in "
"parallel.  By default the number of threads to use is chosen based on the "
"amount of free memory available at the time that virt-df is started.  You "
"can force virt-df to use at most C<nr_threads> by using the I<-P> option."
msgstr ""
"З версії libguestfs 1.22 у virt-df передбачено обробку у декілька потоків і "
"паралельне вивчення гостьових систем. Типово кількість потоків виконання, що "
"використовуються, вибирається на основі доступного обсягу вільної пам’яті на "
"час запуску virt-df. Ви можете примусово наказати virt-df використовувати не "
"більше за C<кількість_потоків> за допомогою параметра I<-P>."

#. type: textblock
#: ../df/virt-df.pod:179
msgid ""
"Note that only domains that we fetch from libvirt come with UUIDs.  For disk "
"images, we still print the disk image name even when this option is "
"specified."
msgstr ""

#. type: =head1
#: ../df/virt-df.pod:201
msgid "STATVFS NUMBERS"
msgstr "ЧИСЛОВІ ДАНІ ЩОДО STATVFS"

#. type: textblock
#: ../df/virt-df.pod:203
msgid ""
"C<virt-df> (and L<df(1)>) get information by issuing a L<statvfs(3)> system "
"call.  You can get the same information directly, either from the host "
"(using libguestfs) or inside the guest:"
msgstr ""

#. type: =item
#: ../df/virt-df.pod:209
msgid "From the host"
msgstr "З основної системи"

#. type: textblock
#: ../df/virt-df.pod:211 ../df/virt-df.pod:219
msgid "Run this command:"
msgstr "Віддайте таку команду:"

#. type: verbatim
#: ../df/virt-df.pod:213
#, no-wrap
msgid ""
" guestfish --ro -d GuestName -i statvfs /\n"
"\n"
msgstr ""
" guestfish --ro -d НАЗВА_ГОСТЬОВОЇ_СИСТЕМИ -i statvfs /\n"
"\n"

#. type: textblock
#: ../df/virt-df.pod:215 ../df/virt-df.pod:223
msgid "(change C</> to see stats for other filesystems)."
msgstr ""

#. type: =item
#: ../df/virt-df.pod:217
msgid "From inside the guest"
msgstr "З гостьової системи"

#. type: verbatim
#: ../df/virt-df.pod:221
#, no-wrap
msgid ""
" python -c 'import os; s = os.statvfs (\"/\"); print s'\n"
"\n"
msgstr ""
" python -c 'import os; s = os.statvfs (\"/\"); print s'\n"
"\n"

#. type: textblock
#: ../df/virt-df.pod:258
msgid ""
"L<df(1)>, L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<http://"
"libguestfs.org/>."
msgstr ""
"L<df(1)>, L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<http://"
"libguestfs.org/>."

#. type: textblock
#: ../diff/virt-diff.pod:3
msgid "virt-diff - Differences between files in two virtual machines"
msgstr ""

#. type: verbatim
#: ../diff/virt-diff.pod:7
#, no-wrap
msgid ""
" virt-diff [--options] -d domain1 -D domain2\n"
"\n"
msgstr ""

#. type: verbatim
#: ../diff/virt-diff.pod:9
#, no-wrap
msgid ""
" virt-diff [--options] -a disk1.img [-a ...] -A disk2.img [-A ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:13
msgid ""
"C<virt-diff> lists the differences between files in two virtual machines or "
"disk images.  The usual use case is to show the changes in a VM after it has "
"been running for a while, by taking a snapshot, running the VM, and then "
"using this tool to show what changed between the new VM state and the old "
"snapshot."
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:19
msgid ""
"This tool will find differences in filenames, file sizes, checksums, "
"extended attributes, file content and more from a virtual machine or disk "
"image.  However it B<does not> look at the boot loader, unused space between "
"partitions or within filesystems, \"hidden\" sectors and so on.  In other "
"words, it is not a security or forensics tool."
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:25
msgid ""
"To specify two guests, you have to use the I<-a> or I<-d> option(s)  for the "
"first guest, and the I<-A> or I<-D> option(s) for the second guest.  The "
"common case is:"
msgstr ""

#. type: verbatim
#: ../diff/virt-diff.pod:29
#, no-wrap
msgid ""
" virt-diff -a old.img -A new.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:31
msgid "or using names known to libvirt:"
msgstr ""

#. type: verbatim
#: ../diff/virt-diff.pod:33
#, no-wrap
msgid ""
" virt-diff -d oldguest -D newguest\n"
"\n"
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:47
msgid ""
"Add I<file> which should be a disk image from the first virtual machine.  If "
"the virtual machine has multiple block devices, you must supply all of them "
"with separate I<-a> options."
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:62
msgid "Same as I<--extra-stats> I<--times> I<--uids> I<--xattrs>."
msgstr ""

#. type: =item
#: ../diff/virt-diff.pod:64
msgid "B<--atime>"
msgstr "B<--atime>"

#. type: textblock
#: ../diff/virt-diff.pod:66
msgid ""
"The default is to ignore changes in file access times, since those are "
"unlikely to be interesting.  Using this flag shows atime differences as well."
msgstr ""

#. type: =item
#: ../diff/virt-diff.pod:70
msgid "B<-A> file"
msgstr "B<-A> файл"

#. type: =item
#: ../diff/virt-diff.pod:72
msgid "B<-A> URI"
msgstr "B<-A> адреса"

#. type: textblock
#: ../diff/virt-diff.pod:74
msgid "Add a disk image from the second virtual machine."
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:80
msgid ""
"Use a checksum over file contents to detect when regular files have changed "
"content."
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:83
msgid ""
"With no argument, this defaults to using I<md5>.  Using an argument, you can "
"select the checksum type to use.  If the flag is omitted then file times and "
"size are used to determine if a file has changed."
msgstr ""

#. type: =item
#: ../diff/virt-diff.pod:103
msgid "B<--dir-links>"
msgstr "B<--dir-links>"

#. type: textblock
#: ../diff/virt-diff.pod:105
msgid ""
"The default is to ignore changed in the number of links in directory "
"entries, since those are unlikely to be interesting.  Using this flag shows "
"changes to the nlink field of directories."
msgstr ""

#. type: =item
#: ../diff/virt-diff.pod:109
msgid "B<--dir-times>"
msgstr "B<--dir-times>"

#. type: textblock
#: ../diff/virt-diff.pod:111
msgid ""
"The default is to ignore changed times on directory entries, since those are "
"unlikely to be interesting.  Using this flag shows changes to the time "
"fields of directories."
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:119
msgid ""
"Add all the disks from the named libvirt guest, as the first guest.  Domain "
"UUIDs can be used instead of names."
msgstr ""

#. type: =item
#: ../diff/virt-diff.pod:122
msgid "B<-D> guest"
msgstr "B<-D> гість"

#. type: textblock
#: ../diff/virt-diff.pod:124
msgid ""
"Add all the disks from the named libvirt guest, as the second guest.  Domain "
"UUIDs can be used instead of names."
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:129
msgid ""
"When prompting for keys and passphrases, virt-diff normally turns echoing "
"off so you cannot see what you are typing.  If you are not worried about "
"Tempest attacks and there is no one else in the room you can specify this "
"flag to see what you are typing."
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:142
msgid ""
"The default for the I<-a>/I<-A> option is to auto-detect the format of the "
"disk image.  Using this forces the disk format for I<-a>/I<-A> options which "
"follow on the command line.  Using I<--format> with no argument switches "
"back to auto-detection for subsequent I<-a>/I<-A> options."
msgstr ""

#. type: verbatim
#: ../diff/virt-diff.pod:150
#, no-wrap
msgid ""
" virt-diff --format=raw -a disk.img [...]\n"
"\n"
msgstr ""
" virt-diff --format=raw -a disk.img [...]\n"
"\n"

#. type: verbatim
#: ../diff/virt-diff.pod:154
#, no-wrap
msgid ""
" virt-diff --format=raw -a disk.img --format -a another.img [...]\n"
"\n"
msgstr ""
" virt-diff --format=raw -a disk.img --format -a another.img [...]\n"
"\n"

#. type: =item
#: ../diff/virt-diff.pod:213
msgid "B<--xattrs>"
msgstr "B<--xattrs>"

#. type: textblock
#: ../diff/virt-diff.pod:215
msgid "Display extended attributes."
msgstr ""

#. type: textblock
#: ../diff/virt-diff.pod:250
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>, L<virt-"
"ls(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:3
msgid "virt-edit - Edit a file in a virtual machine"
msgstr "virt-edit — програма для редагування файлів у віртуальній машині"

#. type: verbatim
#: ../edit/virt-edit.pod:7
#, no-wrap
msgid ""
" virt-edit [--options] -d domname file [file ...]\n"
"\n"
msgstr ""
" virt-edit [--параметри] -d назва_домену файл [файл ...]\n"
"\n"

#. type: verbatim
#: ../edit/virt-edit.pod:9
#, no-wrap
msgid ""
" virt-edit [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
"\n"
msgstr ""
" virt-edit [--options] -a диск.img [-a диск.img ...] файл [файл ...]\n"
"\n"

#. type: verbatim
#: ../edit/virt-edit.pod:11
#, no-wrap
msgid ""
" virt-edit [-d domname|-a disk.img] file -e 'expr'\n"
"\n"
msgstr ""
" virt-edit [-d назва_домену|-a диск.img] файл -e 'вираз'\n"
"\n"

#. type: verbatim
#: ../edit/virt-edit.pod:15
#, no-wrap
msgid ""
" virt-edit domname file\n"
"\n"
msgstr ""
" virt-edit назва_домену файл\n"
"\n"

#. type: verbatim
#: ../edit/virt-edit.pod:17 ../edit/virt-edit.pod:225
#, no-wrap
msgid ""
" virt-edit disk.img [disk.img ...] file\n"
"\n"
msgstr ""
" virt-edit диск.img [диск.img ...] файл\n"
"\n"

#. type: =head1
#: ../edit/virt-edit.pod:19 ../fish/guestfish.pod:21
#: ../fish/virt-copy-in.pod:11 ../fish/virt-tar-in.pod:13
#: ../fuse/guestmount.pod:13 ../rescue/virt-rescue.pod:19 ../tools/virt-tar:61
#: ../tools/virt-win-reg:48
msgid "WARNING"
msgstr "ПОПЕРЕДЖЕННЯ"

#. type: textblock
#: ../edit/virt-edit.pod:21
msgid ""
"You must I<not> use C<virt-edit> on live virtual machines.  If you do this, "
"you risk disk corruption in the VM.  C<virt-edit> tries to stop you from "
"doing this, but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:27
msgid ""
"C<virt-edit> is a command line tool to edit C<file> where each C<file> "
"exists in the named virtual machine (or disk image)."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:30
msgid ""
"Multiple filenames can be given, in which case they are each edited in "
"turn.  Each filename must be a full path, starting at the root directory "
"(starting with '/')."
msgstr ""
"Ви можете вказати декілька назв файлів. Вміст таких файлів буде редаговано "
"послідовно. Назви файлів слід вказувати повністю (разом зі шляхом), "
"починаючи з кореневого каталогу (тобто назва має починатися з «/»)."

#. type: textblock
#: ../edit/virt-edit.pod:34
msgid "If you want to just view a file, use L<virt-cat(1)>."
msgstr "Якщо ви просто хочете переглянути файл, скористайтеся L<virt-cat(1)>."

#. type: textblock
#: ../edit/virt-edit.pod:36
msgid ""
"For more complex cases you should look at the L<guestfish(1)> tool (see L</"
"USING GUESTFISH> below)."
msgstr ""
"Для виконання складніших дій можна скористатися програмою L<guestfish(1)> "
"(див. L</USING GUESTFISH> нижче)."

#. type: textblock
#: ../edit/virt-edit.pod:39
msgid ""
"C<virt-edit> cannot be used to create a new file.  L<guestfish(1)> can do "
"that and much more."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:44
msgid "Edit the named files interactively:"
msgstr "Інтерактивне редагування іменованих файлів:"

#. type: verbatim
#: ../edit/virt-edit.pod:46
#, no-wrap
msgid ""
" virt-edit -d mydomain /boot/grub/grub.conf\n"
"\n"
msgstr ""
" virt-edit -d mydomain /boot/grub/grub.conf\n"
"\n"

#. type: verbatim
#: ../edit/virt-edit.pod:48
#, no-wrap
msgid ""
" virt-edit -d mydomain /etc/passwd\n"
"\n"
msgstr ""
" virt-edit -d mydomain /etc/passwd\n"
"\n"

#. type: textblock
#: ../edit/virt-edit.pod:50
msgid "For Windows guests, some Windows paths are understood:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:52
#, no-wrap
msgid ""
" virt-edit -d mywindomain 'c:\\autoexec.bat'\n"
"\n"
msgstr ""
" virt-edit -d mywindomain 'c:\\autoexec.bat'\n"
"\n"

#. type: textblock
#: ../edit/virt-edit.pod:54
msgid ""
"If Perl is installed, you can also edit files non-interactively (see L</NON-"
"INTERACTIVE EDITING> below).  To change the init default level to 5:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:58
#, no-wrap
msgid ""
" virt-edit -d mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'\n"
"\n"
msgstr ""
" virt-edit -d mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'\n"
"\n"

#. type: =item
#: ../edit/virt-edit.pod:85
msgid "B<-b> extension"
msgstr "B<-b> суфікс"

#. type: =item
#: ../edit/virt-edit.pod:87
msgid "B<--backup> extension"
msgstr "B<--backup> суфікс"

#. type: textblock
#: ../edit/virt-edit.pod:89
msgid ""
"Create a backup of the original file I<in the guest disk image>.  The backup "
"has the original filename with C<extension> added."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:92
msgid ""
"Usually the first character of C<extension> would be a dot C<.> so you would "
"write:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:95
#, no-wrap
msgid ""
" virt-edit -b .orig [etc]\n"
"\n"
msgstr ""
" virt-edit -b .orig [тощо]\n"
"\n"

#. type: textblock
#: ../edit/virt-edit.pod:97
msgid "By default, no backup file is made."
msgstr "Типово створюється файл резервної копії."

#. type: =item
#: ../edit/virt-edit.pod:99 ../fish/guestfish.pod:191
#: ../fuse/guestmount.pod:178 ../inspector/virt-inspector.pod:71
#: ../tools/virt-list-filesystems:76 ../tools/virt-list-partitions:77
#: ../tools/virt-tar:124 ../tools/virt-win-reg:125
msgid "B<-c URI>"
msgstr "B<-c адреса>"

#. type: =item
#: ../edit/virt-edit.pod:101 ../fish/guestfish.pod:193
#: ../fuse/guestmount.pod:180 ../inspector/virt-inspector.pod:73
#: ../tools/virt-list-filesystems:78 ../tools/virt-list-partitions:79
#: ../tools/virt-tar:126 ../tools/virt-win-reg:127
msgid "B<--connect URI>"
msgstr "B<--connect адреса>"

#. type: textblock
#: ../edit/virt-edit.pod:106 ../tools/virt-list-filesystems:83
#: ../tools/virt-list-partitions:84 ../tools/virt-tar:131
#: ../tools/virt-win-reg:132
msgid ""
"If you specify guest block devices directly, then libvirt is not used at all."
msgstr ""
"Якщо вказати блокові пристрої гостьових систем безпосередньо, libvirt не "
"буде використовуватися взагалі."

#. type: textblock
#: ../edit/virt-edit.pod:118
msgid ""
"When prompting for keys and passphrases, virt-edit normally turns echoing "
"off so you cannot see what you are typing.  If you are not worried about "
"Tempest attacks and there is no one else in the room you can specify this "
"flag to see what you are typing."
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:123
msgid "B<-e> EXPR"
msgstr "B<-e> вираз"

#. type: =item
#: ../edit/virt-edit.pod:125
msgid "B<--edit> EXPR"
msgstr "B<--edit> ВИРАЗ"

#. type: =item
#: ../edit/virt-edit.pod:127
msgid "B<--expr> EXPR"
msgstr "B<--expr> вираз"

#. type: textblock
#: ../edit/virt-edit.pod:129
msgid ""
"Instead of launching the external editor, non-interactively apply the Perl "
"expression C<EXPR> to each line in the file.  See L</NON-INTERACTIVE "
"EDITING> below."
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:149
#, no-wrap
msgid ""
" virt-edit --format=raw -a disk.img file\n"
"\n"
msgstr ""
" virt-edit --format=raw -a диск.img файл\n"
"\n"

#. type: verbatim
#: ../edit/virt-edit.pod:153
#, no-wrap
msgid ""
" virt-edit --format=raw -a disk.img --format -a another.img file\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:223
msgid "Previous versions of virt-edit allowed you to write either:"
msgstr "У попередніх версіях virt-edit можна було використовувати або"

#. type: verbatim
#: ../edit/virt-edit.pod:229
#, no-wrap
msgid ""
" virt-edit guestname file\n"
"\n"
msgstr ""
" virt-edit назва_гостьової_системи файл\n"
"\n"

#. type: =head1
#: ../edit/virt-edit.pod:237
msgid "NON-INTERACTIVE EDITING"
msgstr "НЕІНТЕРАКТИВНЕ РЕДАГУВАННЯ"

#. type: textblock
#: ../edit/virt-edit.pod:239
msgid ""
"C<virt-edit> normally calls out to C<$EDITOR> (or vi) so the system "
"administrator can interactively edit the file."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:242
msgid ""
"There are two ways also to use C<virt-edit> from scripts in order to make "
"automated edits to files.  (Note that although you I<can> use C<virt-edit> "
"like this, it's less error-prone to write scripts directly using the "
"libguestfs API and Augeas for configuration file editing.)"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:248
msgid ""
"The first method is to temporarily set C<$EDITOR> to any script or program "
"you want to run.  The script is invoked as C<$EDITOR tmpfile> and it should "
"update C<tmpfile> in place however it likes."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:252
msgid ""
"The second method is to use the I<-e> parameter of C<virt-edit> to run a "
"short Perl snippet in the style of L<sed(1)>.  For example to replace all "
"instances of C<foo> with C<bar> in a file:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:256
#, no-wrap
msgid ""
" virt-edit -d domname filename -e 's/foo/bar/'\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:258
msgid ""
"The full power of Perl regular expressions can be used (see L<perlre(1)>).  "
"For example to delete root's password you could do:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:261 ../examples/guestfs-recipes.pod:591
#, no-wrap
msgid ""
" virt-edit -d domname /etc/passwd -e 's/^root:.*?:/root::/'\n"
"\n"
msgstr ""
" virt-edit -d назва_домену /etc/passwd -e 's/^root:.*?:/root::/'\n"
"\n"

#. type: textblock
#: ../edit/virt-edit.pod:263
msgid ""
"What really happens is that the snippet is evaluated as a Perl expression "
"for each line of the file.  The line, including the final C<\\n>, is passed "
"in C<$_> and the expression should update C<$_> or leave it unchanged."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:268
msgid ""
"To delete a line, set C<$_> to the empty string.  For example, to delete the "
"C<apache> user account from the password file you can do:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:271
#, no-wrap
msgid ""
" virt-edit -d mydomain /etc/passwd -e '$_ = \"\" if /^apache:/'\n"
"\n"
msgstr ""
" virt-edit -d mydomain /etc/passwd -e '$_ = \"\" if /^apache:/'\n"
"\n"

#. type: textblock
#: ../edit/virt-edit.pod:273
msgid ""
"To insert a line, prepend or append it to C<$_>.  However appending lines to "
"the end of the file is rather difficult this way since there is no concept "
"of \"last line of the file\" - your expression just doesn't get called "
"again.  You might want to use the first method (setting C<$EDITOR>) if you "
"want to do this."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:279
msgid ""
"The variable C<$lineno> contains the current line number.  As is "
"traditional, the first line in the file is number C<1>."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:282
msgid ""
"The return value from the expression is ignored, but the expression may call "
"C<die> in order to abort the whole program, leaving the original file "
"untouched."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:286
msgid ""
"Remember when matching the end of a line that C<$_> may contain the final C<"
"\\n>, or (for DOS files) C<\\r\\n>, or if the file does not end with a "
"newline then neither of these.  Thus to match or substitute some text at the "
"end of a line, use this regular expression:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:291
#, no-wrap
msgid ""
" /some text(\\r?\\n)?$/\n"
"\n"
msgstr ""
" /якийсь текст(\\r?\\n)?$/\n"
"\n"

#. type: textblock
#: ../edit/virt-edit.pod:293
msgid ""
"Alternately, use the perl C<chomp> function, being careful not to chomp C<"
"$_> itself (since that would remove all newlines from the file):"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:297
#, no-wrap
msgid ""
" my $m = $_; chomp $m; $m =~ /some text$/\n"
"\n"
msgstr ""
" my $m = $_; chomp $m; $m =~ /якийсь текст$/\n"
"\n"

#. type: textblock
#: ../edit/virt-edit.pod:301
msgid ""
"C<virt-edit> has a limited ability to understand Windows drive letters and "
"paths (eg. C<E:\\foo\\bar.txt>)."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:320
msgid ""
"The path is resolved case insensitively to locate the file that should be "
"edited."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:341
msgid ""
"L<guestfish(1)> is a more powerful, lower level tool which you can use when "
"C<virt-edit> doesn't work."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:344
msgid "Using C<virt-edit> is approximately equivalent to doing:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:346
#, no-wrap
msgid ""
" guestfish --rw -i -d domname edit /file\n"
"\n"
msgstr ""
" guestfish --rw -i -d назва_домену edit /файл\n"
"\n"

#. type: textblock
#: ../edit/virt-edit.pod:348
msgid ""
"where C<domname> is the name of the libvirt guest, and C</file> is the full "
"path to the file."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:351
msgid ""
"The command above uses libguestfs's guest inspection feature and so does not "
"work on guests that libguestfs cannot inspect, or on things like arbitrary "
"disk images that don't contain guests.  To edit a file on a disk image "
"directly, use:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:356
#, no-wrap
msgid ""
" guestfish --rw -a disk.img -m /dev/sda1 edit /file\n"
"\n"
msgstr ""
" guestfish --rw -a диск.img -m /dev/sda1 edit /файл\n"
"\n"

#. type: textblock
#: ../edit/virt-edit.pod:358
msgid ""
"where C<disk.img> is the disk image, C</dev/sda1> is the filesystem within "
"the disk image to edit, and C</file> is the full path to the file."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:362
msgid ""
"C<virt-edit> cannot create new files.  Use the guestfish commands C<touch>, "
"C<write> or C<upload> instead:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:365
#, no-wrap
msgid ""
" guestfish --rw -i -d domname touch /newfile\n"
"\n"
msgstr ""
" guestfish --rw -i -d назва_домену touch /новий_файл\n"
"\n"

#. type: verbatim
#: ../edit/virt-edit.pod:367
#, no-wrap
msgid ""
" guestfish --rw -i -d domname write /newfile \"new content\"\n"
"\n"
msgstr ""
" guestfish --rw -i -d назва_домену write /новий_файл \"новий вміст\"\n"
"\n"

#. type: verbatim
#: ../edit/virt-edit.pod:369
#, no-wrap
msgid ""
" guestfish --rw -i -d domname upload localfile /newfile\n"
"\n"
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:375
msgid "C<EDITOR>"
msgstr "C<EDITOR>"

#. type: textblock
#: ../edit/virt-edit.pod:377
msgid ""
"If set, this string is used as the editor.  It may contain arguments, eg. C<"
"\"emacs -nw\">"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:380
msgid "If not set, C<vi> is used."
msgstr "Якщо не встановлено, використовуватиметься C<vi>."

#. type: textblock
#: ../edit/virt-edit.pod:391
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-"
"tar-in(1)>, L<http://libguestfs.org/>, L<perl(1)>, L<perlre(1)>."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:3
msgid "guestfs-erlang - How to use libguestfs from Erlang"
msgstr "guestfs-erlang — як користуватися libguestfs з програми мовою Erlang"

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:7
#, no-wrap
msgid ""
" {ok, G} = guestfs:create(),\n"
" ok = guestfs:add_drive_opts(G, Disk,\n"
"                             [{format, \"raw\"}, {readonly, true}]),\n"
" ok = guestfs:launch(G),\n"
" [Device] = guestfs:list_devices(G),\n"
" ok = guestfs:close(G).\n"
"\n"
msgstr ""
" {ok, G} = guestfs:create(),\n"
" ok = guestfs:add_drive_opts(G, Disk,\n"
"                             [{format, \"raw\"}, {readonly, true}]),\n"
" ok = guestfs:launch(G),\n"
" [Device] = guestfs:list_devices(G),\n"
" ok = guestfs:close(G).\n"
"\n"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:16
msgid ""
"This manual page documents how to call libguestfs from the Erlang "
"programming language.  This page just documents the differences from the C "
"API and gives some examples.  If you are not familiar with using libguestfs, "
"you also need to read L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../erlang/examples/guestfs-erlang.pod:21 ../lua/examples/guestfs-lua.pod:31
msgid "OPENING AND CLOSING THE HANDLE"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:23
msgid ""
"The Erlang bindings are implemented using an external program called C<erl-"
"guestfs>.  This program must be on the current PATH, or else you should "
"specify the full path to the program:"
msgstr ""

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:27
#, no-wrap
msgid ""
" {ok, G} = guestfs:create().\n"
"\n"
msgstr ""
" {ok, G} = guestfs:create().\n"
"\n"

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:29
#, no-wrap
msgid ""
" {ok, G} = guestfs:create(\"/path/to/erl-guestfs\").\n"
"\n"
msgstr ""
" {ok, G} = guestfs:create(\"/шлях/до/erl-guestfs\").\n"
"\n"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:31
msgid "C<G> is the libguestfs handle which you should pass to other functions."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:34
msgid "To close the handle:"
msgstr "Закриття обробника:"

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:36
#, no-wrap
msgid ""
" ok = guestfs:close(G).\n"
"\n"
msgstr ""
" ok = guestfs:close(G).\n"
"\n"

#. type: =head2
#: ../erlang/examples/guestfs-erlang.pod:38 ../lua/examples/guestfs-lua.pod:56
msgid "FUNCTIONS WITH OPTIONAL ARGUMENTS"
msgstr "ФУНКЦІЇ І ДОДАТКОВІ ПАРАМЕТРИ"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:40
msgid ""
"For functions that take optional arguments, the first arguments are the non-"
"optional ones.  The last argument is a list of tuples supplying the "
"remaining optional arguments."
msgstr ""

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:44
#, no-wrap
msgid ""
" ok = guestfs:add_drive_opts(G, Disk,\n"
"                             [{format, \"raw\"}, {readonly, true}]).\n"
"\n"
msgstr ""
" ok = guestfs:add_drive_opts(G, Disk,\n"
"                             [{format, \"raw\"}, {readonly, true}]).\n"
"\n"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:47
msgid "If the last argument would be an empty list, you can also omit it:"
msgstr ""

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:49
#, no-wrap
msgid ""
" ok = guestfs:add_drive_opts(G, Disk).\n"
"\n"
msgstr ""
" ok = guestfs:add_drive_opts(G, Disk).\n"
"\n"

#. type: =head2
#: ../erlang/examples/guestfs-erlang.pod:51
msgid "RETURN VALUES AND ERRORS"
msgstr "ЗНАЧЕННЯ, ЩО ПОВЕРТАЮТЬСЯ, І ПОМИЛКИ"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:53
msgid ""
"On success, most functions return a C<Result> term (which could be a list, "
"string, tuple etc.).  If there is nothing for the function to return, then "
"the atom C<ok> is returned."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:57
msgid "On error, you would see one of the following tuples:"
msgstr ""

#. type: =item
#: ../erlang/examples/guestfs-erlang.pod:61
msgid "C<{error, Msg, Errno}>"
msgstr "C<{помилка, повідомлення, номер_помилки}>"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:63
msgid "This indicates an ordinary error from the function."
msgstr "Позначає звичайну помилку у функції."

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:65
msgid ""
"C<Msg> is the error message (string) and C<Errno> is the Unix error "
"(integer)."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:68
msgid "C<Errno> can be zero.  See L<guestfs(3)/guestfs_last_errno>."
msgstr "C<Errno> може бути нульовим. Див. L<guestfs(3)/guestfs_last_errno>."

#. type: =item
#: ../erlang/examples/guestfs-erlang.pod:70
msgid "C<{unknown, Function}>"
msgstr "C<{unknown, Функція}>"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:72
msgid ""
"This indicates that the function you called is not known.  Generally this "
"means you are mixing C<erl-guestfs> from another version of libguestfs, "
"which you should not do."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:76
msgid "C<Function> is the name of the unknown function."
msgstr "C<Функція> — назва невідомої функції."

#. type: =item
#: ../erlang/examples/guestfs-erlang.pod:78
msgid "C<{unknownarg, Arg}>"
msgstr "C<{unknownarg, Аргумент}>"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:80
msgid ""
"This indicates that you called a function with optional arguments, with an "
"unknown argument name."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:83
msgid "C<Arg> is the name of the unknown argument."
msgstr "C<Аргумент> — назва невідомого аргументу."

#. type: =head1
#: ../erlang/examples/guestfs-erlang.pod:87
#: ../golang/examples/guestfs-golang.pod:68
#: ../java/examples/guestfs-java.pod:148 ../lua/examples/guestfs-lua.pod:128
#: ../ocaml/examples/guestfs-ocaml.pod:68 ../perl/examples/guestfs-perl.pod:30
#: ../python/examples/guestfs-python.pod:43
#: ../ruby/examples/guestfs-ruby.pod:26
msgid "EXAMPLE 1: CREATE A DISK IMAGE"
msgstr "ПРИКЛАД 1. СТВОРЕННЯ ОБРАЗУ ДИСКА"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:89
#: ../golang/examples/guestfs-golang.pod:70
#: ../java/examples/guestfs-java.pod:150 ../lua/examples/guestfs-lua.pod:130
#: ../ocaml/examples/guestfs-ocaml.pod:70 ../perl/examples/guestfs-perl.pod:32
#: ../python/examples/guestfs-python.pod:45
#: ../ruby/examples/guestfs-ruby.pod:28
msgid "@EXAMPLE1@"
msgstr "@EXAMPLE1@"

#. type: =head1
#: ../erlang/examples/guestfs-erlang.pod:91
#: ../golang/examples/guestfs-golang.pod:72
#: ../java/examples/guestfs-java.pod:152 ../lua/examples/guestfs-lua.pod:132
#: ../ocaml/examples/guestfs-ocaml.pod:72 ../perl/examples/guestfs-perl.pod:34
#: ../python/examples/guestfs-python.pod:47
#: ../ruby/examples/guestfs-ruby.pod:30
msgid "EXAMPLE 2: INSPECT A VIRTUAL MACHINE DISK IMAGE"
msgstr "ПРИКЛАД 2. ПЕРЕВІРКА ОБРАЗУ ДИСКА ВІРТУАЛЬНОЇ МАШИНИ"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:93
#: ../golang/examples/guestfs-golang.pod:74
#: ../java/examples/guestfs-java.pod:154 ../lua/examples/guestfs-lua.pod:134
#: ../ocaml/examples/guestfs-ocaml.pod:74 ../perl/examples/guestfs-perl.pod:36
#: ../python/examples/guestfs-python.pod:49
#: ../ruby/examples/guestfs-ruby.pod:32
msgid "@EXAMPLE2@"
msgstr "@EXAMPLE2@"

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:97
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-golang(3)>, L<guestfs-"
"java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"www.erlang.org/>.  L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:116
#: ../examples/guestfs-testing.pod:397 ../fish/virt-copy-in.pod:64
#: ../fish/virt-copy-out.pod:53 ../fish/virt-tar-in.pod:62
#: ../fish/virt-tar-out.pod:55 ../java/examples/guestfs-java.pod:177
#: ../perl/examples/guestfs-perl.pod:59
msgid "Copyright (C) 2011-2012 Red Hat Inc."
msgstr "© Red Hat Inc., 2011–2012"

#. type: textblock
#: ../examples/guestfs-examples.pod:3
msgid "guestfs-examples - Examples of using libguestfs from C"
msgstr "guestfs-examples — приклади використання libguestfs з коду мовою C"

#. type: verbatim
#: ../examples/guestfs-examples.pod:7 ../src/guestfs.pod:7
#, no-wrap
msgid ""
" #include <guestfs.h>\n"
" \n"
msgstr ""
" #include <guestfs.h>\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-examples.pod:9
#, no-wrap
msgid ""
" guestfs_h *g = guestfs_create ();\n"
" guestfs_add_drive_ro (g, \"disk.img\");\n"
" guestfs_launch (g);\n"
"\n"
msgstr ""
" guestfs_h *g = guestfs_create ();\n"
" guestfs_add_drive_ro (g, \"disk.img\");\n"
" guestfs_launch (g);\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-examples.pod:13 ../src/guestfs.pod:18
#, no-wrap
msgid ""
" cc prog.c -o prog -lguestfs\n"
"or:\n"
" cc prog.c -o prog `pkg-config libguestfs --cflags --libs`\n"
"\n"
msgstr ""
" cc prog.c -o prog -lguestfs\n"
"або:\n"
" cc prog.c -o prog `pkg-config libguestfs --cflags --libs`\n"
"\n"

#. type: textblock
#: ../examples/guestfs-examples.pod:19
msgid ""
"This manual page contains examples of calling libguestfs from the C "
"programming language.  If you are not familiar with using libguestfs, you "
"also need to read L<guestfs(3)>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-examples.pod:23
msgid "EXAMPLE: CREATE A DISK IMAGE"
msgstr "ПРИКЛАД. СТВОРЕННЯ ОБРАЗУ ДИСКА"

#. type: textblock
#: ../examples/guestfs-examples.pod:25
msgid "@CREATE_DISK@"
msgstr "@CREATE_DISK@"

#. type: =head1
#: ../examples/guestfs-examples.pod:27
msgid "EXAMPLE: INSPECT A VIRTUAL MACHINE DISK IMAGE"
msgstr "ПРИКЛАД. ПЕРЕВІРКА ОБРАЗУ ДИСКА ВІРТУАЛЬНОЇ МАШИНИ"

#. type: textblock
#: ../examples/guestfs-examples.pod:29
msgid "@INSPECT_VM@"
msgstr ""

#. type: =head1
#: ../examples/guestfs-examples.pod:31
msgid "EXAMPLE: ENABLE DEBUGGING AND LOGGING"
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:33
msgid "@DEBUG_LOGGING@"
msgstr ""

#. type: =head1
#: ../examples/guestfs-examples.pod:35
msgid "EXAMPLE: DISPLAY THE OPERATING SYSTEM ICON OF A GUEST"
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:37
msgid "@DISPLAY_ICON@"
msgstr ""

#. type: =head1
#: ../examples/guestfs-examples.pod:39
msgid "EXAMPLE: THE LIBVIRT AUTHENTICATION API"
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:41
msgid "@LIBVIRT_AUTH@"
msgstr ""

#. type: =head1
#: ../examples/guestfs-examples.pod:43
msgid "EXAMPLE: THE MOUNT LOCAL API"
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:45
msgid "@MOUNT_LOCAL@"
msgstr ""

#. type: =head1
#: ../examples/guestfs-examples.pod:47
msgid "EXAMPLE: MULTIPLE HANDLES AND THREADS"
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:49
msgid "@COPY_OVER@"
msgstr ""

#. type: =head1
#: ../examples/guestfs-examples.pod:51
msgid "EXAMPLE: FETCH DHCP ADDRESS FROM A GUEST"
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:53
msgid "@VIRT_DHCP_ADDRESS@"
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:57
msgid ""
"L<guestfs(3)>, L<guestfs-erlang(3)>, L<guestfs-golang(3)>, L<guestfs-"
"java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:3
msgid "guestfs-faq - libguestfs Frequently Asked Questions (FAQ)"
msgstr ""
"guestfs-faq — поширені питання щодо libguestfs на відповіді на них (FAQ)"

#. type: =head1
#: ../examples/guestfs-faq.pod:5
msgid "ABOUT LIBGUESTFS"
msgstr "ПРО LIBGUESTFS"

#. type: =head2
#: ../examples/guestfs-faq.pod:7
msgid "What is libguestfs?"
msgstr "Для чого призначено libguestfs?"

#. type: textblock
#: ../examples/guestfs-faq.pod:9
msgid ""
"libguestfs is a way to create, access and modify disk images.  You can look "
"inside disk images, modify the files they contain, create them from scratch, "
"resize them, and much more.  It's especially useful from scripts and "
"programs and from the command line."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:14
msgid ""
"libguestfs is a C library (hence \"lib-\"), and a set of tools built on this "
"library, and bindings for many common programming languages."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:17
msgid ""
"For more information about what libguestfs can do read the introduction on "
"the home page (L<http://libguestfs.org>)."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:20
msgid "What are the virt tools?"
msgstr "Для чого призначено virt tools?"

#. type: textblock
#: ../examples/guestfs-faq.pod:22
msgid ""
"Virt tools (website: L<http://virt-tools.org>) are a whole set of "
"virtualization management tools aimed at system administrators.  Some of "
"them come from libguestfs, some from libvirt and many others from other open "
"source projects.  So virt tools is a superset of libguestfs.  However "
"libguestfs comes with many important tools.  See L<http://libguestfs.org> "
"for a full list."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:29
msgid "Does libguestfs need { libvirt / KVM / Red Hat / Fedora }?"
msgstr ""
"Чи потрібно встановлювати пакунки { libvirt / KVM / Red Hat / Fedora } для "
"роботи з libguestfs?"

#. type: textblock
#: ../examples/guestfs-faq.pod:31
msgid "No!"
msgstr "Ні!"

#. type: textblock
#: ../examples/guestfs-faq.pod:33
msgid "libvirt is not a requirement for libguestfs."
msgstr "libvirt не є обов’язковою частиною libguestfs."

#. type: textblock
#: ../examples/guestfs-faq.pod:35
msgid ""
"libguestfs works with any disk image, including ones created in VMware, KVM, "
"qemu, VirtualBox, Xen, and many other hypervisors, and ones which you have "
"created from scratch."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:39
msgid ""
"S<Red Hat> sponsors (ie. pays for) development of libguestfs and a huge "
"number of other open source projects.  But you can run libguestfs and the "
"virt tools on many different Linux distros and Mac OS X.  We try our best to "
"support all Linux distros as first-class citizens.  Some virt tools have "
"been ported to Windows."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:45
msgid "How does libguestfs compare to other tools?"
msgstr "Що дає використання libguestfs порівняно з іншими інструментами?"

#. type: =item
#: ../examples/guestfs-faq.pod:49
msgid "I<vs. kpartx>"
msgstr "I<порівняно з kpartx>"

#. type: textblock
#: ../examples/guestfs-faq.pod:51
msgid ""
"Libguestfs takes a different approach from kpartx.  kpartx needs root, and "
"mounts filesystems on the host kernel (which can be insecure - see "
"L<guestfs(3)/SECURITY>).  Libguestfs isolates your host kernel from guests, "
"is more flexible, scriptable, supports LVM, doesn't require root, is "
"isolated from other processes, and cleans up after itself.  Libguestfs is "
"more than just file access because you can use it to create images from "
"scratch."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:59
msgid "I<vs. vdfuse>"
msgstr "I<порівняно з vdfuse>"

#. type: textblock
#: ../examples/guestfs-faq.pod:61
msgid ""
"vdfuse is like kpartx but for VirtualBox images.  See the kpartx comparison "
"above.  You can use libguestfs on the partition files exposed by vdfuse, "
"although it's not necessary since libguestfs can access VirtualBox images "
"directly."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:66
msgid "I<vs. qemu-nbd>"
msgstr "I<порівняно з qemu-nbd>"

#. type: textblock
#: ../examples/guestfs-faq.pod:68
msgid ""
"NBD (Network Block Device) is a protocol for exporting block devices over "
"the network.  qemu-nbd is an NBD server which can handle any disk format "
"supported by qemu (eg. raw, qcow2).  You can use libguestfs and qemu-nbd or "
"nbdkit together to access block devices over the network, for example: "
"C<guestfish -a nbd://remote>"
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:74
msgid "I<vs. mounting filesystems in the host>"
msgstr "I<порівняно з монтуванням файлових систем у основній системі>"

#. type: textblock
#: ../examples/guestfs-faq.pod:76
msgid ""
"Mounting guest filesystems in the host is insecure and should be avoided "
"completely for untrusted guests.  Use libguestfs to provide a layer of "
"protection against filesystem exploits.  See also L<guestmount(1)>."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:81
msgid "I<vs. parted>"
msgstr "I<порівняно з parted>"

#. type: textblock
#: ../examples/guestfs-faq.pod:83
msgid ""
"Libguestfs supports LVM.  Libguestfs uses parted and provides most parted "
"features through the libguestfs API."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:88
msgid "GETTING HELP AND REPORTING BUGS"
msgstr "ОТРИМАННЯ ДОВІДКОВОЇ ІНФОРМАЦІЇ ТА ЗВІТУВАННЯ ПРО ВАДИ"

#. type: =head2
#: ../examples/guestfs-faq.pod:90
msgid "How do I know what version I'm using?"
msgstr "Як визначити версію програми, якою я користуюся?"

#. type: textblock
#: ../examples/guestfs-faq.pod:92
msgid "The simplest method is:"
msgstr "Найпростіший спосіб:"

#. type: verbatim
#: ../examples/guestfs-faq.pod:94
#, no-wrap
msgid ""
" guestfish --version\n"
"\n"
msgstr ""
" guestfish --version\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:96
msgid ""
"Libguestfs development happens along an unstable branch and we periodically "
"create a stable branch which we backport stable patches to.  To find out "
"more, read L<guestfs(3)/LIBGUESTFS VERSION NUMBERS>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:100
msgid "How can I get help?"
msgstr "Як допомогти проектові?"

#. type: =head2
#: ../examples/guestfs-faq.pod:102
msgid "What mailing lists or chat rooms are available?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:104
msgid ""
"If you are a S<Red Hat> customer using Red Hat Enterprise Linux, please "
"contact S<Red Hat Support>: L<http://redhat.com/support>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:107
msgid ""
"There is a mailing list, mainly for development, but users are also welcome "
"to ask questions about libguestfs and the virt tools: L<https://www.redhat."
"com/mailman/listinfo/libguestfs>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:111
msgid ""
"You can also talk to us on IRC channel C<#libguestfs> on FreeNode.  We're "
"not always around, so please stay in the channel after asking your question "
"and someone will get back to you."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:115
msgid ""
"For other virt tools (not ones supplied with libguestfs) there is a general "
"virt tools mailing list: L<https://www.redhat.com/mailman/listinfo/virt-"
"tools-list>"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:119
msgid "How do I report bugs?"
msgstr "Як повідомити про вади?"

#. type: textblock
#: ../examples/guestfs-faq.pod:121
msgid "Please use the following link to enter a bug in Bugzilla:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:123 ../examples/guestfs-testing.pod:19
msgid ""
"L<https://bugzilla.redhat.com/enter_bug.cgi?"
"component=libguestfs&product=Virtualization+Tools>"
msgstr ""
"L<https://bugzilla.redhat.com/enter_bug.cgi?"
"component=libguestfs&product=Virtualization+Tools>"

#. type: textblock
#: ../examples/guestfs-faq.pod:125
msgid "Include as much detail as you can and a way to reproduce the problem."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:127
msgid "Include the full output of L<libguestfs-test-tool(1)>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:129
msgid "COMMON PROBLEMS"
msgstr "ТИПОВІ ПРОБЛЕМИ"

#. type: textblock
#: ../examples/guestfs-faq.pod:131
msgid ""
"See also L<guestfs(3)/LIBGUESTFS GOTCHAS> for some \"gotchas\" with using "
"the libguestfs API."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:134
msgid "\"Could not allocate dynamic translator buffer\""
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:136
msgid ""
"This obscure error is in fact an SELinux failure.  You have to enable the "
"following SELinux boolean:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:139
#, no-wrap
msgid ""
" setsebool -P virt_use_execmem=on\n"
"\n"
msgstr ""
" setsebool -P virt_use_execmem=on\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:141
msgid ""
"For more information see L<https://bugzilla.redhat.com/show_bug.cgi?"
"id=806106>."
msgstr ""
"Докладніші відомості можна знайти за адресою L<https://bugzilla.redhat.com/"
"show_bug.cgi?id=806106>."

#. type: =head2
#: ../examples/guestfs-faq.pod:144
msgid "\"child process died unexpectedly\""
msgstr "\"child process died unexpectedly\""

#. type: textblock
#: ../examples/guestfs-faq.pod:146
msgid ""
"[This error message was changed in libguestfs 1.21.18 to something more "
"explanatory.]"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:149
msgid ""
"This error indicates that qemu failed or the host kernel could not boot.  To "
"get further information about the failure, you have to run:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:152 ../examples/guestfs-faq.pod:909
#: ../examples/guestfs-testing.pod:33 ../test-tool/libguestfs-test-tool.pod:19
#, no-wrap
msgid ""
" libguestfs-test-tool\n"
"\n"
msgstr ""
" libguestfs-test-tool\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:154
msgid ""
"If, after using this, you still don't understand the failure, contact us "
"(see previous section)."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:157
msgid ""
"libguestfs: error: cannot find any suitable libguestfs supermin, fixed or "
"old-style appliance on LIBGUESTFS_PATH"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:159
msgid "febootstrap-supermin-helper: ext2: parent directory not found"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:161
msgid "supermin-helper: ext2: parent directory not found"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:163
msgid "[This issue is fixed permanently in libguestfs E<ge> 1.26.]"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:165
msgid ""
"If you see any of these errors on Debian/Ubuntu, you need to run the "
"following command:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:168 ../examples/guestfs-faq.pod:296
#: ../examples/guestfs-faq.pod:347
#, no-wrap
msgid ""
" sudo update-guestfs-appliance\n"
"\n"
msgstr ""
" sudo update-guestfs-appliance\n"
"\n"

#. type: =head2
#: ../examples/guestfs-faq.pod:170
msgid "\"Permission denied\" when running libguestfs as root"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:172
msgid ""
"You get a permission denied error when opening a disk image, even though you "
"are running libguestfs as root."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:175
msgid ""
"This is caused by libvirt, and so only happens when using the libvirt "
"backend.  When run as root, libvirt decides to run the qemu appliance as "
"user C<qemu.qemu>.  Unfortunately this usually means that qemu cannot open "
"disk images, especially if those disk images are owned by root, or are "
"present in directories which require root access."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:181
msgid ""
"There is a bug open against libvirt to fix this: L<https://bugzilla.redhat."
"com/show_bug.cgi?id=1045069>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:184
msgid "You can work around this by one of the following methods:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:190
msgid "Switch to the direct backend:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:192 ../examples/guestfs-faq.pod:543
#: ../examples/guestfs-testing.pod:125
#: ../test-tool/libguestfs-test-tool.pod:122
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND=direct\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:196
msgid "Don't run libguestfs as root."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:200
msgid ""
"Chmod the disk image and any parent directories so that the qemu user can "
"access them."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:205
msgid "(Nasty) Edit C</etc/libvirt/qemu.conf> and change the C<user> setting."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:209
msgid "execl: /init: Permission denied"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:211
msgid ""
"B<Note:> If this error happens when you are using a distro package of "
"libguestfs (eg. from Fedora, Debian, etc) then file a bug against the "
"distro.  This is not an error which normal users should ever see if the "
"distro package has been prepared correctly."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:216
msgid ""
"This error happens during the supermin boot phase of starting the appliance:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:219
#, no-wrap
msgid ""
" supermin: mounting new root on /root\n"
" supermin: chroot\n"
" execl: /init: Permission denied\n"
" supermin: debug: listing directory /\n"
" [...followed by a lot of debug output...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:225
msgid ""
"This is a complicated bug related to L<supermin(1)> appliances.  The "
"appliance is constructed by copying files like C</bin/bash> and many "
"libraries from the host.  The file C<hostfiles> lists the files that should "
"be copied from the host into the appliance.  If some files don't exist on "
"the host then they are missed out, but if these files are needed in order to "
"(eg) run C</bin/bash> then you'll see the above error."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:233
msgid ""
"Diagnosing the problem involves studying the libraries needed by C</bin/"
"bash>, ie:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:236
#, no-wrap
msgid ""
" ldd /bin/bash\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:238
msgid ""
"comparing that with C<hostfiles>, with the files actually available in the "
"host filesystem, and with the debug output printed in the error message.  "
"Once you've worked out which file is missing, install that file using your "
"package manager and try again."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:243
msgid ""
"You should also check that files like C</init> and C</bin/bash> (in the "
"appliance) are executable.  The debug output shows file modes."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:246
msgid "DOWNLOADING, INSTALLING, COMPILING LIBGUESTFS"
msgstr "ОТРИМАННЯ, ВСТАНОВЛЕННЯ, ЗБИРАННЯ LIBGUESTFS"

#. type: textblock
#: ../examples/guestfs-faq.pod:250
msgid "<!-- old anchor for the next section --> <a name=\"binaries\"/>"
msgstr "<!-- old anchor for the next section --> <a name=\"binaries\"/>"

#. type: =head2
#: ../examples/guestfs-faq.pod:255
msgid "Where can I get the latest binaries for ...?"
msgstr "Де взяти найсвіжіші збірки для... ?"

#. type: =item
#: ../examples/guestfs-faq.pod:259
msgid "Fedora E<ge> 11"
msgstr "Fedora E<ge> 11"

#. type: textblock
#: ../examples/guestfs-faq.pod:261
msgid "Use:"
msgstr "Скористайтеся командою:"

#. type: verbatim
#: ../examples/guestfs-faq.pod:263
#, no-wrap
msgid ""
" yum install '*guestf*'\n"
"\n"
msgstr ""
" yum install '*guestf*'\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:265
msgid ""
"For the latest builds, see: L<http://koji.fedoraproject.org/koji/packageinfo?"
"packageID=8391>"
msgstr ""
"Найсвіжіші збірки можна знайти тут: L<http://koji.fedoraproject.org/koji/"
"packageinfo?packageID=8391>"

#. type: =item
#: ../examples/guestfs-faq.pod:268
msgid "Red Hat Enterprise Linux"
msgstr "Red Hat Enterprise Linux"

#. type: =item
#: ../examples/guestfs-faq.pod:272
msgid "RHEL 5"
msgstr "RHEL 5"

#. type: textblock
#: ../examples/guestfs-faq.pod:274
msgid ""
"The version shipped in official RHEL 5 is very old and should not be used "
"except in conjunction with virt-v2v.  Use the up-to-date libguestfs 1.20 "
"package in EPEL 5: L<https://fedoraproject.org/wiki/EPEL>"
msgstr ""
"Версія, що постачається разом з офіційним RHEL 5 є дуже застарілою. Нею не "
"варто користуватися без сполучення з virt-v2v. Скористайтеся пакунками "
"libguestfs 1.20 з EPEL 5: L<https://fedoraproject.org/wiki/EPEL>"

#. type: =item
#: ../examples/guestfs-faq.pod:279
msgid "RHEL 6"
msgstr "RHEL 6"

#. type: textblock
#: ../examples/guestfs-faq.pod:281
msgid ""
"It is part of the default install.  On RHEL 6 and 7 (only) you have to "
"install C<libguestfs-winsupport> to get Windows guest support."
msgstr ""
"Є частиною типового набору для встановлення. У RHEL 6 і 7 (і лише тут) вам "
"слід встановити C<libguestfs-winsupport>, щоб мати змогу працювати з "
"гостьовими системами Windows."

#. type: =item
#: ../examples/guestfs-faq.pod:284
msgid "RHEL 7"
msgstr "RHEL 7"

#. type: textblock
#: ../examples/guestfs-faq.pod:286
msgid ""
"It will be part of the default install, and based on S<libguestfs 1.22>.  "
"You will need to install C<libguestfs-winsupport> separately to get Windows "
"guest support."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:292
msgid "Debian and Ubuntu"
msgstr "Debian і Ubuntu"

#. type: textblock
#: ../examples/guestfs-faq.pod:294
msgid "For libguestfs E<lt> 1.26, after installing libguestfs you need to do:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:298
msgid ""
"(This script has been removed on Debian/Ubuntu with libguestfs E<ge> 1.26 "
"and instead the appliance is built on demand.)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:301
msgid "On Ubuntu only:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:303 ../examples/guestfs-faq.pod:333
#: ../examples/guestfs-faq.pod:356
#, no-wrap
msgid ""
" sudo chmod 0644 /boot/vmlinuz*\n"
"\n"
msgstr ""
" sudo chmod 0644 /boot/vmlinuz*\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:305
msgid "You may need to add yourself to the C<kvm> group:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:307
#, no-wrap
msgid ""
" sudo usermod -a -G kvm yourlogin\n"
"\n"
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:311
msgid "Debian Squeeze (6)"
msgstr "Debian Squeeze (6)"

#. type: textblock
#: ../examples/guestfs-faq.pod:313
msgid ""
"Hilko Bengen has built libguestfs in squeeze backports: L<http://packages."
"debian.org/search?keywords=guestfs&searchon=names&section=all&suite=squeeze-"
"backports>"
msgstr ""
"Hilko Bengen зібрано libguestfs для сховища пакунків зворотного портування "
"squeeze: L<http://packages.debian.org/search?"
"keywords=guestfs&searchon=names&section=all&suite=squeeze-backports>"

#. type: =item
#: ../examples/guestfs-faq.pod:316
msgid "Debian Wheezy and later (7+)"
msgstr "Debian Wheezy та пізніші версії (7+)"

#. type: textblock
#: ../examples/guestfs-faq.pod:318
msgid ""
"Hilko Bengen supports libguestfs on Debian.  Official Debian packages are "
"available: L<http://packages.debian.org/search?keywords=libguestfs>"
msgstr ""
"Супровід libguestfs у Debian здійснює Hilko Bengen. Ви можете скористатися "
"офіційними пакунками Debian: L<http://packages.debian.org/search?"
"keywords=libguestfs>"

#. type: =item
#: ../examples/guestfs-faq.pod:322
msgid "Ubuntu"
msgstr "Ubuntu"

#. type: textblock
#: ../examples/guestfs-faq.pod:324
msgid ""
"We don't have a full time Ubuntu maintainer, and the packages supplied by "
"Canonical (which are outside our control) are sometimes broken."
msgstr ""
"У нас немає повноцінного супровідника пакунків Ubuntu. Пакунки, що надаються "
"Canonical (і не контролюються нами) іноді виявляються непрацездатними."

#. type: textblock
#: ../examples/guestfs-faq.pod:327
msgid ""
"Canonical decided to change the permissions on the kernel so that it's not "
"readable except by root.  This is completely stupid, but they won't change "
"it (L<https://bugs.launchpad.net/ubuntu/+source/linux/+bug/759725>).  So "
"every user should do this:"
msgstr ""
"Компанією Canonical прийнято рішення щодо зміни прав доступу до ядра таким "
"чином, що його читання не може виконувати жоден з користувачів, окрім root. "
"Ми вважаємо таке рішення повністю невиправданим, але компанія відмовляється "
"його змінювати (L<https://bugs.launchpad.net/ubuntu/+source/linux/"
"+bug/759725>). Тому користувачам слід віддати таку команду:"

#. type: =item
#: ../examples/guestfs-faq.pod:337
msgid "Ubuntu 12.04"
msgstr "Ubuntu 12.04"

#. type: textblock
#: ../examples/guestfs-faq.pod:339
msgid ""
"libguestfs in this version of Ubuntu works, but you need to update "
"febootstrap and seabios to the latest versions."
msgstr ""
"libguestfs у цій версії Ubuntu має працювати, але вам слід оновити пакунки "
"febootstrap та seabios до найсвіжіших версій."

#. type: textblock
#: ../examples/guestfs-faq.pod:342
msgid ""
"You need febootstrap E<ge> 3.14-2 from: L<http://packages.ubuntu.com/precise/"
"febootstrap>"
msgstr ""
"Вам знадобиться пакунок febootstrap E<ge> 3.14-2 з L<http://packages.ubuntu."
"com/precise/febootstrap>"

#. type: textblock
#: ../examples/guestfs-faq.pod:345
msgid "After installing or updating febootstrap, rebuild the appliance:"
msgstr ""
"Після встановлення або оновлення febootstrap виконайте повторне збирання "
"базової системи:"

#. type: textblock
#: ../examples/guestfs-faq.pod:349
msgid ""
"You need seabios E<ge> 0.6.2-0ubuntu2.1 or E<ge> 0.6.2-0ubuntu3 from: "
"L<http://packages.ubuntu.com/precise-updates/seabios> or L<http://packages."
"ubuntu.com/quantal/seabios>"
msgstr ""
"Вам знадобиться пакунок seabios E<ge> 0.6.2-0ubuntu2.1 або E<ge> "
"0.6.2-0ubuntu3 з L<http://packages.ubuntu.com/precise-updates/seabios> або "
"L<http://packages.ubuntu.com/quantal/seabios>"

#. type: textblock
#: ../examples/guestfs-faq.pod:354
msgid "Also you need to do (see above):"
msgstr "Крім того, вам слід виконати такі дії (див. вище):"

#. type: =item
#: ../examples/guestfs-faq.pod:362
msgid "Gentoo"
msgstr "Gentoo"

#. type: textblock
#: ../examples/guestfs-faq.pod:364
msgid ""
"Libguestfs was added to Gentoo in 2012-07 by Andreis Vinogradovs "
"(libguestfs) and Maxim Koltsov (mainly hivex).  Do:"
msgstr ""
"Libguestfs було додано до Gentoo 2012-07, автори —  Andreis Vinogradovs "
"(libguestfs) та Maxim Koltsov (в основному hivex). Віддайте команду:"

#. type: verbatim
#: ../examples/guestfs-faq.pod:367
#, no-wrap
msgid ""
" emerge libguestfs\n"
"\n"
msgstr ""
" emerge libguestfs\n"
"\n"

#. type: =item
#: ../examples/guestfs-faq.pod:369
msgid "SuSE"
msgstr "SuSE"

#. type: textblock
#: ../examples/guestfs-faq.pod:371
msgid "Libguestfs was added to SuSE in 2012 by Olaf Hering."
msgstr ""
"Libguestfs було додано до сховищ пакунків SuSE у 2012 році, супровідник — "
"Olaf Hering."

#. type: =item
#: ../examples/guestfs-faq.pod:373
msgid "ArchLinux"
msgstr "ArchLinux"

#. type: textblock
#: ../examples/guestfs-faq.pod:375
msgid "Libguestfs was added to the AUR in 2010."
msgstr "Libguestfs було додано до AUR у 2010 році."

#. type: =item
#: ../examples/guestfs-faq.pod:377
msgid "Other Linux distro"
msgstr "Інші дистрибутиви Linux"

#. type: textblock
#: ../examples/guestfs-faq.pod:379
msgid "Compile from source (next section)."
msgstr "Можна зібрати з початкових кодів (наступний розділ)."

#. type: =item
#: ../examples/guestfs-faq.pod:381
msgid "Other non-Linux distro"
msgstr "Інші дистрибутиви не-Linux"

#. type: textblock
#: ../examples/guestfs-faq.pod:383
msgid "You'll have to compile from source, and port it."
msgstr "Вам слід зібрати бібліотеку з початкових кодів і портувати її."

#. type: =head2
#: ../examples/guestfs-faq.pod:387
msgid "How can I compile and install libguestfs from source?"
msgstr "Як зібрати і встановити libguestfs з початкових кодів?"

#. type: textblock
#: ../examples/guestfs-faq.pod:389
msgid ""
"You can compile libguestfs from git or a source tarball.  Read the README "
"file before starting."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:392
msgid ""
"Git: L<https://github.com/libguestfs/libguestfs> Source tarballs: L<http://"
"libguestfs.org/download>"
msgstr ""
"Git: L<https://github.com/libguestfs/libguestfs> Архіви з кодом: L<http://"
"libguestfs.org/download>"

#. type: textblock
#: ../examples/guestfs-faq.pod:395 ../examples/guestfs-faq.pod:429
msgid ""
"Don't run C<make install>! Use the C<./run> script instead (see README)."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:397
msgid ""
"How can I compile and install libguestfs if my distro doesn't have new "
"enough qemu/supermin/kernel?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:400
msgid ""
"Libguestfs needs supermin 5.  If supermin 5 hasn't been ported to your "
"distro, then see the question below."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:403
msgid ""
"First compile qemu, supermin and/or the kernel from source.  You do I<not> "
"need to C<make install> them."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:406
msgid ""
"In the libguestfs source directory, create two files.  C<localconfigure> "
"should contain:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:409
#, no-wrap
msgid ""
" source localenv\n"
" #export PATH=/tmp/qemu/x86_64-softmmu:$PATH\n"
" ./autogen.sh --prefix /usr \"$@\"\n"
"\n"
msgstr ""
" source localenv\n"
" #export PATH=/tmp/qemu/x86_64-softmmu:$PATH\n"
" ./autogen.sh --prefix /usr \"$@\"\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:413
msgid "Make C<localconfigure> executable."
msgstr "Зробіть C<localconfigure> виконуваним."

#. type: textblock
#: ../examples/guestfs-faq.pod:415
msgid "C<localenv> should contain:"
msgstr "C<localenv> має містити таке:"

#. type: verbatim
#: ../examples/guestfs-faq.pod:417
#, no-wrap
msgid ""
" #export SUPERMIN=/tmp/supermin/src/supermin\n"
" #export LIBGUESTFS_HV=/tmp/qemu/x86_64-softmmu/qemu-system-x86_64\n"
" #export SUPERMIN_KERNEL=/tmp/linux/arch/x86/boot/bzImage\n"
" #export SUPERMIN_KERNEL_VERSION=3.XX.0\n"
" #export SUPERMIN_MODULES=/tmp/lib/modules/3.XX.0\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:423
msgid ""
"Uncomment and adjust these lines as required to use the alternate programs "
"you have compiled."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:426
msgid ""
"Use C<./localconfigure> instead of C<./configure>, but otherwise you compile "
"libguestfs as usual."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:431
msgid "How can I compile and install libguestfs without supermin?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:433
msgid ""
"If supermin 5 supports your distro, but you don't happen to have a new "
"enough supermin installed, then see the previous question."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:436
msgid ""
"If supermin 5 doesn't support your distro at all, you will need to use the "
"\"fixed appliance method\" where you use a pre-compiled binary appliance.  "
"See: L<http://libguestfs.org/download/binaries/appliance/>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:440
msgid "Patches to port supermin to more Linux distros are welcome."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:442
msgid "How can I add support for sVirt?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:444
msgid ""
"B<Note for Fedora/RHEL users:> This configuration is the default starting "
"with S<Fedora 18> and S<RHEL 7>.  If you find any problems, please let us "
"know or file a bug."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:448
msgid ""
"L<SVirt|http://selinuxproject.org/page/SVirt> provides a hardened appliance "
"using SELinux, making it very hard for a rogue disk image to \"escape\" from "
"the confinement of libguestfs and damage the host (it's fair to say that "
"even in standard libguestfs this would be hard, but sVirt provides an extra "
"layer of protection for the host and more importantly protects virtual "
"machines on the same host from each other)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:456
msgid ""
"Currently to enable sVirt you will need libvirt E<ge> 0.10.2 (1.0 or later "
"preferred), libguestfs E<ge> 1.20, and the SELinux policies from recent "
"Fedora.  If you are not running S<Fedora 18+>, you will need to make changes "
"to your SELinux policy - contact us on the mailing list."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:461
msgid "Once you have the requirements, do:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:463
#, no-wrap
msgid ""
" ./configure --with-default-backend=libvirt       # libguestfs >= 1.22\n"
" ./configure --with-default-attach-method=libvirt # libguestfs <= 1.20\n"
" make\n"
"\n"
msgstr ""
" ./configure --with-default-backend=libvirt       # libguestfs >= 1.22\n"
" ./configure --with-default-attach-method=libvirt # libguestfs <= 1.20\n"
" make\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:467
msgid "Set SELinux to Enforcing mode, and sVirt should be used automatically."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:469
msgid ""
"All, or almost all, features of libguestfs should work under sVirt.  There "
"is one known shortcoming: L<virt-rescue(1)> will not use libvirt (hence "
"sVirt), but falls back to direct launch of qemu.  So you won't currently get "
"the benefit of sVirt protection when using virt-rescue."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:474
msgid ""
"You can check if sVirt is being used by enabling libvirtd logging (see C</"
"etc/libvirt/libvirtd.log>), killing and restarting libvirtd, and checking "
"the log files for S<\"Setting SELinux context on ...\"> messages."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:478
msgid ""
"In theory sVirt should support AppArmor, but we have not tried it.  It will "
"almost certainly require patching libvirt and writing an AppArmor policy."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:482
msgid "Libguestfs has a really long list of dependencies!"
msgstr "Чому у Libguestfs такий великий список залежностей?"

#. type: textblock
#: ../examples/guestfs-faq.pod:484
msgid ""
"The base library doesn't depend on very much, but there are three causes of "
"the long list of other dependencies:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:491
msgid ""
"Libguestfs has to be able to read and edit many different disk formats.  For "
"example, XFS support requires XFS tools."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:496
msgid ""
"There are language bindings for many different languages, all requiring "
"their own development tools.  All language bindings (except C) are optional."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:502
msgid "There are some optional library features which can be disabled."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:506
msgid ""
"Since libguestfs E<ge> 1.26 it is possible to split up the appliance "
"dependencies (item 1 in the list above) and thus have (eg)  C<libguestfs-"
"xfs> as a separate subpackage for processing XFS disk images.  We encourage "
"downstream packagers to start splitting the base libguestfs package into "
"smaller subpackages."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:512
msgid "Errors during launch on Fedora E<ge> 18, RHEL E<ge> 7"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:514
msgid ""
"In Fedora E<ge> 18 and RHEL E<ge> 7, libguestfs uses libvirt to manage the "
"appliance.  Previously (and upstream) libguestfs runs qemu directly:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:518
#, no-wrap
msgid ""
" ┌──────────────────────────────────┐\n"
" │ libguestfs                       │\n"
" ├────────────────┬─────────────────┤\n"
" │ direct backend │ libvirt backend │\n"
" └────────────────┴─────────────────┘\n"
"        ↓                  ↓\n"
"    ┌───────┐         ┌──────────┐\n"
"    │ qemu  │         │ libvirtd │\n"
"    └───────┘         └──────────┘\n"
"                           ↓\n"
"                       ┌───────┐\n"
"                       │ qemu  │\n"
"                       └───────┘\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:532
#, no-wrap
msgid ""
"    upstream          Fedora 18+\n"
"    non-Fedora         RHEL 7+\n"
"    non-RHEL\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:536
msgid ""
"The libvirt backend is more sophisticated, supporting SELinux/sVirt (see "
"above), hotplugging and more.  It is, however, more complex and so less "
"robust."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:540
msgid ""
"If you have permissions problems using the libvirt backend, you can switch "
"to the direct backend by setting this environment variable:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:545
msgid "before running any libguestfs program or virt tool."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:547
msgid "How can I switch to a fixed / prebuilt appliance?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:549
msgid ""
"This may improve the stability and performance of libguestfs on Fedora and "
"RHEL."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:552
msgid ""
"Any time after installing libguestfs, run the following commands as root:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:555
#, no-wrap
msgid ""
" mkdir -p /usr/local/lib/guestfs/appliance\n"
" libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
" ls -l /usr/local/lib/guestfs/appliance\n"
"\n"
msgstr ""
" mkdir -p /usr/local/lib/guestfs/appliance\n"
" libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
" ls -l /usr/local/lib/guestfs/appliance\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:559
msgid ""
"Now set the following environment variable before using libguestfs or any "
"virt tool:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:562 ../examples/guestfs-performance.pod:141
#, no-wrap
msgid ""
" export LIBGUESTFS_PATH=/usr/local/lib/guestfs/appliance\n"
"\n"
msgstr ""
" export LIBGUESTFS_PATH=/usr/local/lib/guestfs/appliance\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:564
msgid ""
"Of course you can change the path to any directory you want.  You can share "
"the appliance across machines that have the same architecture (eg. all "
"x86-64), but note that libvirt will prevent you from sharing the appliance "
"across NFS because of permissions problems (so either switch to the direct "
"backend or don't use NFS)."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:570
msgid "How can I speed up libguestfs builds?"
msgstr "Як пришвидшити збирання libguestfs?"

#. type: textblock
#: ../examples/guestfs-faq.pod:572
msgid ""
"By far the most important thing you can do is to install and properly "
"configure Squid.  Note that the default configuration that ships with Squid "
"is rubbish, so configuring it is not optional."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:576
msgid ""
"A very good place to start with Squid configuration is here: L<https://"
"fedoraproject.org/wiki/Extras/"
"MockTricks#Using_Squid_to_Speed_Up_Mock_package_downloads>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:579
msgid ""
"Make sure Squid is running, and that the environment variables C<"
"$http_proxy> and C<$ftp_proxy> are pointing to it."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:582
msgid ""
"With Squid running and correctly configured, appliance builds should be "
"reduced to a few minutes."
msgstr ""

#. type: =head3
#: ../examples/guestfs-faq.pod:585
msgid "How can I speed up libguestfs builds (Debian)?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:587
msgid ""
"Hilko Bengen suggests using \"approx\" which is a Debian archive proxy "
"(L<http://packages.debian.org/approx>).  This tool is documented on Debian "
"in the approx(8) manual page."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:591
msgid "SPEED, DISK SPACE USED BY LIBGUESTFS"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:593
msgid ""
"B<Note:> Most of the information in this section has moved: L<guestfs-"
"performance(1)>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:596
msgid "Upload or write seem very slow."
msgstr "Вивантаження або запис дуже повільні."

#. type: textblock
#: ../examples/guestfs-faq.pod:598
msgid ""
"If the underlying disk is not fully allocated (eg. sparse raw or qcow2) then "
"writes can be slow because the host operating system has to do costly disk "
"allocations while you are writing. The solution is to use a fully allocated "
"format instead, ie. non-sparse raw, or qcow2 with the "
"C<preallocation=metadata> option."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:604
msgid "Libguestfs uses too much disk space!"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:606
msgid "libguestfs caches a large-ish appliance in:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:608
#, no-wrap
msgid ""
" /var/tmp/.guestfs-<UID>\n"
"\n"
msgstr ""
" /var/tmp/.guestfs-<UID>\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:610
msgid ""
"If the environment variable C<TMPDIR> is defined, then C<$TMPDIR/.guestfs-"
"E<lt>UIDE<gt>> is used instead."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:613
msgid "It is safe to delete this directory when you are not using libguestfs."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:615
msgid ""
"virt-sparsify seems to make the image grow to the full size of the virtual "
"disk"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:618
msgid ""
"If the input to L<virt-sparsify(1)> is raw, then the output will be raw "
"sparse.  Make sure you are measuring the output with a tool which "
"understands sparseness such as C<du -sh>.  It can make a huge difference:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:622 ../sparsify/virt-sparsify.pod:35
#, no-wrap
msgid ""
" $ ls -lh test1.img\n"
" -rw-rw-r--. 1 rjones rjones 100M Aug  8 08:08 test1.img\n"
" $ du -sh test1.img\n"
" 3.6M\ttest1.img\n"
"\n"
msgstr ""
" $ ls -lh test1.img\n"
" -rw-rw-r--. 1 rjones rjones 100M Aug  8 08:08 test1.img\n"
" $ du -sh test1.img\n"
" 3.6M\ttest1.img\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:627 ../sparsify/virt-sparsify.pod:40
msgid "(Compare the apparent size B<100M> vs the actual size B<3.6M>)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:629
msgid ""
"If all this confuses you, use a non-sparse output format by specifying the "
"I<--convert> option, eg:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:632
#, no-wrap
msgid ""
" virt-sparsify --convert qcow2 disk.raw disk.qcow2\n"
"\n"
msgstr ""
" virt-sparsify --convert qcow2 диск.raw диск.qcow2\n"
"\n"

#. type: =head2
#: ../examples/guestfs-faq.pod:634
msgid "Why doesn't virt-resize work on the disk image in-place?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:636
msgid ""
"Resizing a disk image is very tricky -- especially making sure that you "
"don't lose data or break the bootloader.  The current method effectively "
"creates a new disk image and copies the data plus bootloader from the old "
"one.  If something goes wrong, you can always go back to the original."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:642
msgid ""
"If we were to make virt-resize work in-place then there would have to be "
"limitations: for example, you wouldn't be allowed to move existing "
"partitions (because moving data across the same disk is most likely to "
"corrupt data in the event of a power failure or crash), and LVM would be "
"very difficult to support (because of the almost arbitrary mapping between "
"LV content and underlying disk blocks)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:649
msgid ""
"Another method we have considered is to place a snapshot over the original "
"disk image, so that the original data is untouched and only differences are "
"recorded in the snapshot.  You can do this today using C<qemu-img create> + "
"C<virt-resize>, but qemu currently isn't smart enough to recognize when the "
"same block is written back to the snapshot as already exists in the backing "
"disk, so you will find that this doesn't save you any space or time."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:657
msgid ""
"In summary, this is a hard problem, and what we have now mostly works so we "
"are reluctant to change it."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:660
msgid "Why doesn't virt-sparsify work on the disk image in-place?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:662
msgid ""
"In libguestfs E<ge> 1.26, virt-sparsify can now work on disk images in "
"place.  Use:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:665 ../sparsify/virt-sparsify.pod:112
#: ../sparsify/virt-sparsify.pod:330
#, no-wrap
msgid ""
" virt-sparsify --in-place disk.img\n"
"\n"
msgstr ""
" virt-sparsify --in-place disk.img\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:667
msgid "But first you should read L<virt-sparsify(1)/IN-PLACE SPARSIFICATION>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:669
msgid "PROBLEMS OPENING DISK IMAGES"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:671
msgid "Remote libvirt guests cannot be opened."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:673
msgid ""
"Opening remote libvirt guests is not supported at this time.  For example "
"this won't work:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:676
#, no-wrap
msgid ""
" guestfish -c qemu://remote/system -d Guest\n"
"\n"
msgstr ""
" guestfish -c qemu://remote/system -d Guest\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:678
msgid ""
"To open remote disks you have to export them somehow, then connect to the "
"export.  For example if you decided to use NBD:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:681
#, no-wrap
msgid ""
" remote$ qemu-nbd -t -p 10809 guest.img\n"
"  local$ guestfish -a nbd://remote:10809 -i\n"
"\n"
msgstr ""
" remote$ qemu-nbd -t -p 10809 guest.img\n"
"  local$ guestfish -a nbd://remote:10809 -i\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:684
msgid ""
"Other possibilities include ssh (if qemu is recent enough), NFS or iSCSI.  "
"See L<guestfs(3)/REMOTE STORAGE>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:687
msgid "How can I open this strange disk source?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:689
msgid ""
"You have a disk image located inside another system that requires access via "
"a library / HTTP / REST / proprietary API, or is compressed or archived in "
"some way.  (One example would be remote access to OpenStack glance images "
"without actually downloading them.)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:694
msgid ""
"We have a sister project called nbdkit (L<https://github.com/libguestfs/"
"nbdkit>).  This project lets you turn any disk source into an NBD server.  "
"Libguestfs can access NBD servers directly, eg:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:699
#, no-wrap
msgid ""
" guestfish -a nbd://remote\n"
"\n"
msgstr ""
" guestfish -a nbd://remote\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:701
msgid ""
"nbdkit is liberally licensed, so you can link it to or include it in "
"proprietary libraries and code.  It also has a simple, stable plugin API so "
"you can easily write plugins against the API which will continue to work in "
"future."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:706
msgid ""
"Error opening VMDK disks: \"uses a vmdk feature which is not supported by "
"this qemu version: VMDK version 3\""
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:708
msgid ""
"Qemu (and hence libguestfs) only supports certain VMDK disk images.  Others "
"won't work, giving this or similar errors."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:711
msgid ""
"Ideally someone would fix qemu to support the latest VMDK features, but in "
"the meantime you have three options:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:718
msgid ""
"If the guest is hosted on a live, reachable ESX server, then locate and "
"download the disk image called I<somename>C<-flat.vmdk>.  Despite the name, "
"this is a raw disk image, and can be opened by anything."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:722
msgid ""
"If you have a recent enough version of qemu and libguestfs, then you may be "
"able to access this disk image remotely using either HTTPS or ssh.  See "
"L<guestfs(3)/REMOTE STORAGE>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:728
msgid ""
"Use VMware's proprietary vdiskmanager tool to convert the image to raw "
"format."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:733
msgid ""
"Use nbdkit with the proprietary VDDK plugin to live export the disk image as "
"an NBD source.  This should allow you to read and write the VMDK file."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:739
msgid "UFS disks (as used by BSD) cannot be opened."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:741
msgid ""
"The UFS filesystem format has many variants, and these are not self-"
"identifying.  The Linux kernel has to be told which variant of UFS it has to "
"use, which libguestfs cannot know."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:745
msgid ""
"You have to pass the right C<ufstype> mount option when mounting these "
"filesystems."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:748
msgid "See L<https://www.kernel.org/doc/Documentation/filesystems/ufs.txt>"
msgstr "Див. L<https://www.kernel.org/doc/Documentation/filesystems/ufs.txt>"

#. type: =head2
#: ../examples/guestfs-faq.pod:750
msgid "Windows ReFS"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:752
msgid ""
"Windows ReFS is Microsoft's ZFS/Btrfs copy.  This filesystem has not yet "
"been reverse engineered and implemented in the Linux kernel, and therefore "
"libguestfs doesn't support it.  At the moment it seems to be very rare \"in "
"the wild\"."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:757
msgid "Non-ASCII characters don't appear on VFAT filesystems."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:759
msgid "Typical symptoms of this problem:"
msgstr "Типові симптоми проблеми:"

#. type: textblock
#: ../examples/guestfs-faq.pod:765
msgid ""
"You get an error when you create a file where the filename contains non-"
"ASCII characters, particularly non 8-bit characters from Asian languages "
"(Chinese, Japanese, etc).  The filesystem is VFAT."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:771
msgid ""
"When you list a directory from a VFAT filesystem, filenames appear as "
"question marks."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:776
msgid "This is a design flaw of the GNU/Linux system."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:778
msgid ""
"VFAT stores long filenames as UTF-16 characters.  When opening or returning "
"filenames, the Linux kernel has to translate these to some form of 8 bit "
"string.  UTF-8 would be the obvious choice, except for Linux users who "
"persist in using non-UTF-8 locales (the user's locale is not known to the "
"kernel because it's a function of libc)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:784
msgid ""
"Therefore you have to tell the kernel what translation you want done when "
"you mount the filesystem.  The two methods are the C<iocharset> parameter "
"(which is not relevant to libguestfs) and the C<utf8> flag."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:788
msgid ""
"So to use a VFAT filesystem you must add the C<utf8> flag when mounting.  "
"From guestfish, use:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:791
#, no-wrap
msgid ""
" ><fs> mount-options utf8 /dev/sda1 /\n"
"\n"
msgstr ""
" ><fs> параметри_монтування utf8 /dev/sda1 /\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:793
msgid "or on the guestfish command line:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:795
#, no-wrap
msgid ""
" guestfish [...] -m /dev/sda1:/:utf8\n"
"\n"
msgstr ""
" guestfish [...] -m /dev/sda1:/:utf8\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:797
msgid "or from the API:"
msgstr "або з програмного інтерфейсу:"

#. type: verbatim
#: ../examples/guestfs-faq.pod:799
#, no-wrap
msgid ""
" guestfs_mount_options (g, \"utf8\", \"/dev/sda1\", \"/\");\n"
"\n"
msgstr ""
" guestfs_mount_options (g, \"utf8\", \"/dev/sda1\", \"/\");\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:801
msgid "The kernel will then translate filenames to and from UTF-8 strings."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:803
msgid ""
"We considered adding this mount option transparently, but unfortunately "
"there are several problems with doing that:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:810
msgid ""
"On some Linux systems, the C<utf8> mount option doesn't work.  We don't "
"precisely understand what systems or why, but this was reliably reported by "
"one user."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:816
msgid ""
"It would prevent you from using the C<iocharset> parameter because it is "
"incompatible with C<utf8>.  It is probably not a good idea to use this "
"parameter, but we don't want to prevent it."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:822
msgid "Non-ASCII characters appear as underscore (_) on ISO9660 filesystems."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:824
msgid ""
"The filesystem was not prepared correctly with mkisofs or genisoimage.  Make "
"sure the filesystem was created using Joliet and/or Rock Ridge extensions.  "
"libguestfs does not require any special mount options to handle the "
"filesystem."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:829
msgid "USING LIBGUESTFS IN YOUR OWN PROGRAMS"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:831
msgid "The API has hundreds of methods, where do I start?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:833
msgid ""
"We recommend you start by reading the API overview: L<guestfs(3)/API "
"OVERVIEW>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:836
msgid ""
"Although the API overview covers the C API, it is still worth reading even "
"if you are going to use another programming language, because the API is the "
"same, just with simple logical changes to the names of the calls:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:841
#, no-wrap
msgid ""
"                  C  guestfs_ln_sf (g, target, linkname);\n"
"             Python  g.ln_sf (target, linkname);\n"
"              OCaml  g#ln_sf target linkname;\n"
"               Perl  $g->ln_sf (target, linkname);\n"
"  Shell (guestfish)  ln-sf target linkname\n"
"                PHP  guestfs_ln_sf ($g, $target, $linkname);\n"
"\n"
msgstr ""
"                  C  guestfs_ln_sf (g, target, linkname);\n"
"             Python  g.ln_sf (target, linkname);\n"
"              OCaml  g#ln_sf target linkname;\n"
"               Perl  $g->ln_sf (target, linkname);\n"
"  Shell (guestfish)  ln-sf target linkname\n"
"                PHP  guestfs_ln_sf ($g, $target, $linkname);\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:848
msgid ""
"Once you're familiar with the API overview, you should look at this list of "
"starting points for other language bindings: L<guestfs(3)/USING LIBGUESTFS "
"WITH OTHER PROGRAMMING LANGUAGES>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:852
msgid ""
"Can I use libguestfs in my proprietary / closed source / commercial program?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:855
msgid ""
"In general, yes.  However this is not legal advice - read the license that "
"comes with libguestfs, and if you have specific questions contact a lawyer."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:859
msgid ""
"In the source tree the license is in the file C<COPYING.LIB> (LGPLv2+ for "
"the library and bindings) and C<COPYING> (GPLv2+ for the standalone "
"programs)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:865
msgid "<!-- old anchor for the next section --> <a name=\"debug\"/>"
msgstr "<!-- old anchor for the next section --> <a name=\"debug\"/>"

#. type: =head1
#: ../examples/guestfs-faq.pod:870
msgid "DEBUGGING LIBGUESTFS"
msgstr "ДІАГНОСТИКА LIBGUESTFS"

#. type: =head2
#: ../examples/guestfs-faq.pod:872
msgid "Help, it's not working!"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:874
msgid ""
"Please supply all the information in this checklist, in an email sent to "
"C<libguestfs> @ C<redhat.com>:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:881
msgid "What are you trying to achieve?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:885
msgid "What exact commands did you run?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:889
msgid "What was the precise error / output of these commands?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:893
msgid ""
"Enable debugging, run the commands again, and capture the B<complete> "
"output.  B<Do not edit the output.>"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:896
#, no-wrap
msgid ""
" export LIBGUESTFS_DEBUG=1\n"
" export LIBGUESTFS_TRACE=1\n"
"\n"
msgstr ""
" export LIBGUESTFS_DEBUG=1\n"
" export LIBGUESTFS_TRACE=1\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:901
msgid ""
"Include the version of libguestfs, the operating system version, and how you "
"installed libguestfs (eg. from source, C<yum install>, etc.)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:906
msgid ""
"If no libguestfs program seems to work at all, run the program below and "
"paste the B<complete, unedited> output into the email:"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:913
msgid ""
"How do I debug when using any libguestfs program or tool (eg. virt-v2v or "
"virt-df)?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:916
msgid ""
"There are two C<LIBGUESTFS_*> environment variables you can set in order to "
"get more information from libguestfs."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:921
msgid "C<LIBGUESTFS_TRACE>"
msgstr "C<LIBGUESTFS_TRACE>"

#. type: textblock
#: ../examples/guestfs-faq.pod:923
msgid ""
"Set this to 1 and libguestfs will print out each command / API call in a "
"format which is similar to guestfish commands."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:926
msgid "C<LIBGUESTFS_DEBUG>"
msgstr "C<LIBGUESTFS_DEBUG>"

#. type: textblock
#: ../examples/guestfs-faq.pod:928
msgid ""
"Set this to 1 in order to enable massive amounts of debug messages.  If you "
"think there is some problem inside the libguestfs appliance, then you should "
"use this option."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:934
msgid "To set these from the shell, do this before running the program:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:936
#, no-wrap
msgid ""
" export LIBGUESTFS_TRACE=1\n"
" export LIBGUESTFS_DEBUG=1\n"
"\n"
msgstr ""
" export LIBGUESTFS_TRACE=1\n"
" export LIBGUESTFS_DEBUG=1\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:939
msgid "For csh/tcsh the equivalent commands would be:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:941
#, no-wrap
msgid ""
" setenv LIBGUESTFS_TRACE 1\n"
" setenv LIBGUESTFS_DEBUG 1\n"
"\n"
msgstr ""
" setenv LIBGUESTFS_TRACE 1\n"
" setenv LIBGUESTFS_DEBUG 1\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:944
msgid "For further information, see: L<guestfs(3)/ENVIRONMENT VARIABLES>."
msgstr ""
"Докладніші дані можна знайти на сторінці L<guestfs(3)/ЗМІННІ СЕРЕДОВИЩА>"

#. type: =head2
#: ../examples/guestfs-faq.pod:946
msgid "How do I debug when using guestfish?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:948
msgid ""
"You can use the same environment variables above.  Alternatively use the "
"guestfish options -x (to trace commands) or -v (to get the full debug "
"output), or both."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:952
msgid "For further information, see: L<guestfish(1)>."
msgstr "Докладніші дані можна знайти на сторінці L<guestfish(1)>."

#. type: =head2
#: ../examples/guestfs-faq.pod:954
msgid "How do I debug when using the API?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:956
msgid ""
"Call L<guestfs(3)/guestfs_set_trace> to enable command traces, and/or "
"L<guestfs(3)/guestfs_set_verbose> to enable debug messages."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:959
msgid ""
"For best results, call these functions as early as possible, just after "
"creating the guestfs handle if you can, and definitely before calling launch."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:963
msgid "How do I capture debug output and put it into my logging system?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:965
msgid ""
"Use the event API.  For examples, see: L<guestfs(3)/SETTING CALLBACKS TO "
"HANDLE EVENTS> and the C<examples/debug-logging.c> program in the libguestfs "
"sources."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:969
msgid "Digging deeper into the appliance boot process."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:971
msgid ""
"Enable debugging and then read this documentation on the appliance boot "
"process: L<guestfs(3)/INTERNALS>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:974
msgid "libguestfs hangs or fails during run/launch."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:976
msgid ""
"Enable debugging and look at the full output.  If you cannot work out what "
"is going on, file a bug report, including the I<complete> output of "
"L<libguestfs-test-tool(1)>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:980
msgid "Debugging libvirt"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:982
msgid ""
"If you are using the libvirt backend, and libvirt is failing, then you can "
"enable debugging by editing C</etc/libvirt/libvirtd.conf>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:985
msgid ""
"If you are running as non-root, then you have to edit a different file.  "
"Create C<~/.config/libvirt/libvirtd.conf> containing:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:988
#, no-wrap
msgid ""
" log_level=1\n"
" log_outputs=\"1:file:/tmp/libvirtd.log\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:991
msgid ""
"Kill any session (non-root) libvirtd that is running, and next time you run "
"the libguestfs command, you should see a large amount of useful debugging "
"information from libvirtd in C</tmp/libvirtd.log>"
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:995
msgid "DESIGN/INTERNALS OF LIBGUESTFS"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:997
msgid "Why don't you do everything through the FUSE / filesystem interface?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1000
msgid ""
"We offer a command called L<guestmount(1)> which lets you mount guest "
"filesystems on the host.  This is implemented as a FUSE module.  Why don't "
"we just implement the whole of libguestfs using this mechanism, instead of "
"having the large and rather complicated API?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1005
msgid ""
"The reasons are twofold.  Firstly, libguestfs offers API calls for doing "
"things like creating and deleting partitions and logical volumes, which "
"don't fit into a filesystem model very easily.  Or rather, you could fit "
"them in: for example, creating a partition could be mapped to C<mkdir /fs/"
"hda1> but then you'd have to specify some method to choose the size of the "
"partition (maybe C<echo 100M E<gt> /fs/hda1/.size>), and the partition type, "
"start and end sectors etc., but once you've done that the filesystem-based "
"API starts to look more complicated than the call-based API we currently "
"have."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1015
msgid ""
"The second reason is for efficiency.  FUSE itself is reasonably efficient, "
"but it does make lots of small, independent calls into the FUSE module.  In "
"guestmount these have to be translated into messages to the libguestfs "
"appliance which has a big overhead (in time and round trips).  For example, "
"reading a file in 64 KB chunks is inefficient because each chunk would turn "
"into a single round trip.  In the libguestfs API it is much more efficient "
"to download an entire file or directory through one of the streaming calls "
"like C<guestfs_download> or C<guestfs_tar_out>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1025
msgid "Why don't you do everything through GVFS?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1027
msgid "The problems are similar to the problems with FUSE."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1029
msgid ""
"GVFS is a better abstraction than POSIX/FUSE.  There is an FTP backend for "
"GVFS, which is encouraging because FTP is conceptually similar to the "
"libguestfs API.  However the GVFS FTP backend makes multiple simultaneous "
"connections in order to keep interactivity, which we can't easily do with "
"libguestfs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1037
msgid "<!-- old anchor for the next section --> <a name=\"backup\"/>"
msgstr "<!-- old anchor for the next section --> <a name=\"backup\"/>"

#. type: =head2
#: ../examples/guestfs-faq.pod:1042
msgid "Why can I write to the disk, even though I added it read-only?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1044
msgid "Why does C<--ro> appear to have no effect?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1046
msgid ""
"When you add a disk read-only, libguestfs places a writable overlay on top "
"of the underlying disk.  Writes go into this overlay, and are discarded when "
"the handle is closed (or C<guestfish> etc. exits)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1050
msgid ""
"There are two reasons for doing it this way: Firstly read-only disks aren't "
"possible in many cases (eg. IDE simply doesn't support them, so you couldn't "
"have an IDE-emulated read-only disk, although this is not common in real "
"libguestfs installations)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1055
msgid ""
"Secondly and more importantly, even if read-only disks were possible, you "
"wouldn't want them.  Mounting any filesystem that has a journal, even "
"C<mount -o ro>, causes writes to the filesystem because the journal has to "
"be replayed and metadata updated.  If the disk was truly read-only, you "
"wouldn't be able to mount a dirty filesystem."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1061
msgid ""
"To make it usable, we create the overlay as a place to temporarily store "
"these writes, and then we discard it afterwards.  This ensures that the "
"underlying disk is always untouched."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1065
msgid ""
"Note also that there is a regression test for this when building libguestfs "
"(in C<tests/qemu>).  This is one reason why it's important for packagers to "
"run the test suite."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1069
msgid "Does C<--ro> make all disks read-only?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1071
msgid ""
"I<No!> The C<--ro> option only affects disks added on the command line, ie. "
"using C<-a> and C<-d> options."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1074
msgid ""
"In guestfish, if you use the C<add> command, then disk is added read-write "
"(unless you specify the C<readonly:true> flag explicitly with the command)."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1078
msgid "Can I use C<guestfish --ro> as a way to backup my virtual machines?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1080
msgid ""
"Usually this is I<not> a good idea.  The question is answered in more detail "
"in this mailing list posting: L<https://www.redhat.com/archives/"
"libguestfs/2010-August/msg00024.html>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1084
msgid "See also the next question."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1086
msgid "Why can't I run fsck on a live filesystem using C<guestfish --ro>?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1088
msgid "This command will usually I<not> work:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:1090
#, no-wrap
msgid ""
" guestfish --ro -a /dev/vg/my_root_fs run : fsck /dev/sda\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1092
msgid ""
"The reason for this is that qemu creates a snapshot over the original "
"filesystem, but it doesn't create a strict point-in-time snapshot.  Blocks "
"of data on the underlying filesystem are read by qemu at different times as "
"the fsck operation progresses, with host writes in between.  The result is "
"that fsck sees massive corruption (imaginary, not real!) and fails."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1099
msgid ""
"What you have to do is to create a point-in-time snapshot.  If it's a "
"logical volume, use an LVM2 snapshot.  If the filesystem is located inside "
"something like a btrfs/ZFS file, use a btrfs/ZFS snapshot, and then run the "
"fsck on the snapshot.  In practice you don't need to use libguestfs for this "
"-- just run C</sbin/fsck> directly."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1105
msgid ""
"Creating point-in-time snapshots of host devices and files is outside the "
"scope of libguestfs, although libguestfs can operate on them once they are "
"created."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1109
msgid "What's the difference between guestfish and virt-rescue?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1111
msgid ""
"A lot of people are confused by the two superficially similar tools we "
"provide:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:1114
#, no-wrap
msgid ""
" $ guestfish --ro -a guest.img\n"
" ><fs> run\n"
" ><fs> fsck /dev/sda1\n"
"\n"
msgstr ""
" $ guestfish --ro -a guest.img\n"
" ><fs> run\n"
" ><fs> fsck /dev/sda1\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-faq.pod:1118
#, no-wrap
msgid ""
" $ virt-rescue --ro guest.img\n"
" ><rescue> /sbin/fsck /dev/sda1\n"
"\n"
msgstr ""
" $ virt-rescue --ro guest.img\n"
" ><rescue> /sbin/fsck /dev/sda1\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:1121
msgid ""
"And the related question which then arises is why you can't type in full "
"shell commands with all the --options in guestfish (but you can in L<virt-"
"rescue(1)>)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1125
msgid ""
"L<guestfish(1)> is a program providing structured access to the "
"L<guestfs(3)> API.  It happens to be a nice interactive shell too, but its "
"primary purpose is structured access from shell scripts.  Think of it more "
"like a language binding, like Python and other bindings, but for shell.  The "
"key differentiating factor of guestfish (and the libguestfs API in general) "
"is the ability to automate changes."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1132
msgid ""
"L<virt-rescue(1)> is a free-for-all freeform way to boot the libguestfs "
"appliance and make arbitrary changes to your VM. It's not structured, you "
"can't automate it, but for making quick ad-hoc fixes to your guests, it can "
"be quite useful."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1137
msgid ""
"But, libguestfs also has a \"backdoor\" into the appliance allowing you to "
"send arbitrary shell commands.  It's not as flexible as virt-rescue, because "
"you can't interact with the shell commands, but here it is anyway:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:1142
#, no-wrap
msgid ""
" ><fs> debug sh \"cmd arg1 arg2 ...\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1144
msgid ""
"Note that you should B<not> rely on this.  It could be removed or changed in "
"future. If your program needs some operation, please add it to the "
"libguestfs API instead."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1148
msgid "What's the deal with C<guestfish -i>?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1150
msgid ""
"Why does virt-cat only work on a real VM image, but virt-df works on any "
"disk image?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1153
msgid "What does \"no root device found in this operating system image\" mean?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1156
msgid ""
"These questions are all related at a fundamental level which may not be "
"immediately obvious."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1159
msgid ""
"At the L<guestfs(3)> API level, a \"disk image\" is just a pile of "
"partitions and filesystems."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1162
msgid ""
"In contrast, when the virtual machine boots, it mounts those filesystems "
"into a consistent hierarchy such as:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:1165
#, no-wrap
msgid ""
" /          (/dev/sda2)\n"
" │\n"
" ├── /boot  (/dev/sda1)\n"
" │\n"
" ├── /home  (/dev/vg_external/Homes)\n"
" │\n"
" ├── /usr   (/dev/vg_os/lv_usr)\n"
" │\n"
" └── /var   (/dev/vg_os/lv_var)\n"
"\n"
msgstr ""
" /          (/dev/sda2)\n"
" │\n"
" ├── /boot  (/dev/sda1)\n"
" │\n"
" ├── /home  (/dev/vg_external/Homes)\n"
" │\n"
" ├── /usr   (/dev/vg_os/lv_usr)\n"
" │\n"
" └── /var   (/dev/vg_os/lv_var)\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:1175
msgid "(or drive letters on Windows)."
msgstr "(або літери дисків у Windows)."

#. type: textblock
#: ../examples/guestfs-faq.pod:1177
msgid ""
"The API first of all sees the disk image at the \"pile of filesystems\" "
"level.  But it also has a way to inspect the disk image to see if it "
"contains an operating system, and how the disks are mounted when the "
"operating system boots: L<guestfs(3)/INSPECTION>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1182
msgid "Users expect some tools (like L<virt-cat(1)>) to work with VM paths:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:1184
#, no-wrap
msgid ""
" virt-cat fedora.img /var/log/messages\n"
"\n"
msgstr ""
" virt-cat fedora.img /var/log/messages\n"
"\n"

#. type: textblock
#: ../examples/guestfs-faq.pod:1186
msgid ""
"How does virt-cat know that C</var> is a separate partition? The trick is "
"that virt-cat performs inspection on the disk image, and uses that to "
"translate the path correctly."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1190
msgid ""
"Some tools (including L<virt-cat(1)>, L<virt-edit(1)>, L<virt-ls(1)>)  use "
"inspection to map VM paths.  Other tools, such as L<virt-df(1)> and L<virt-"
"filesystems(1)> operate entirely at the raw \"big pile of filesystems\" "
"level of the libguestfs API, and don't use inspection."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1195
msgid ""
"L<guestfish(1)> is in an interesting middle ground.  If you use the I<-a> "
"and I<-m> command line options, then you have to tell guestfish exactly how "
"to add disk images and where to mount partitions. This is the raw API level."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1200
msgid ""
"If you use the I<-i> option, libguestfs performs inspection and mounts the "
"filesystems for you."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1203
msgid ""
"The error C<no root device found in this operating system image> is related "
"to this.  It means inspection was unable to locate an operating system "
"within the disk image you gave it.  You might see this from programs like "
"virt-cat if you try to run them on something which is just a disk image, not "
"a virtual machine disk image."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1209
msgid "What do these C<debug*> and C<internal-*> functions do?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1211
msgid ""
"There are some functions which are used for debugging and internal purposes "
"which are I<not> part of the stable API."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1214
msgid ""
"The C<debug*> (or C<guestfs_debug*>) functions, primarily L<guestfs(3)/"
"guestfs_debug> and a handful of others, are used for debugging libguestfs.  "
"Although they are not part of the stable API and thus may change or be "
"removed at any time, some programs may want to call these while waiting for "
"features to be added to libguestfs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1220
msgid ""
"The C<internal-*> (or C<guestfs_internal_*>) functions are purely to be used "
"by libguestfs itself.  There is no reason for programs to call them, and "
"programs should not try to use them.  Using them will often cause bad things "
"to happen, as well as not being part of the documented stable API."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:1226
msgid "DEVELOPERS"
msgstr "РОЗРОБНИКАМ"

#. type: =head2
#: ../examples/guestfs-faq.pod:1228
msgid "Where do I send patches?"
msgstr "Куди слід надсилати латки?"

#. type: textblock
#: ../examples/guestfs-faq.pod:1230
msgid ""
"Please send patches to the libguestfs mailing list L<https://www.redhat.com/"
"mailman/listinfo/libguestfs>.  You don't have to be subscribed, but there "
"will be a delay until your posting is manually approved."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1235
msgid ""
"B<Please don't use github pull requests - they will be ignored>.  The "
"reasons are (a) we want to discuss and dissect patches on the mailing list, "
"and (b) github pull requests turn into merge commits but we prefer to have a "
"linear history."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1240
msgid "How do I propose a feature?"
msgstr "Як запропонувати нову можливість?"

#. type: textblock
#: ../examples/guestfs-faq.pod:1242
msgid ""
"Large new features that you intend to contribute should be discussed on the "
"mailing list first (L<https://www.redhat.com/mailman/listinfo/libguestfs>).  "
"This avoids disappointment and wasted work if we don't think the feature "
"would fit into the libguestfs project."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1248
msgid ""
"If you want to suggest a useful feature but don't want to write the code, "
"you can file a bug (see L</GETTING HELP AND REPORTING BUGS>)  with C<\"RFE: "
"\"> at the beginning of the Summary line."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:1252
msgid "Who can commit to libguestfs git?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1254
msgid ""
"About 5 people have commit access to github.  Patches should be posted on "
"the list first and ACKed.  The policy for ACKing and pushing patches is "
"outlined here:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1258
msgid ""
"L<https://www.redhat.com/archives/libguestfs/2012-January/msg00023.html>"
msgstr ""
"L<https://www.redhat.com/archives/libguestfs/2012-January/msg00023.html>"

#. type: =head2
#: ../examples/guestfs-faq.pod:1260
msgid "Can I fork libguestfs?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1262
msgid ""
"Of course you can.  Git makes it easy to fork libguestfs.  Github makes it "
"even easier.  It's nice if you tell us on the mailing list about forks and "
"the reasons for them."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:1268
msgid "L<guestfish(1)>, L<guestfs(3)>, L<http://libguestfs.org/>."
msgstr "L<guestfish(1)>, L<guestfs(3)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../examples/guestfs-faq.pod:1278
msgid "Copyright (C) 2012-2014 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:3
msgid "guestfs-performance - engineering libguestfs for greatest performance"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:7
msgid ""
"This page documents how to get the greatest performance out of libguestfs, "
"especially when you expect to use libguestfs to manipulate thousands of "
"virtual machines or disk images."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:11
msgid ""
"Three main areas are covered. Libguestfs runs an appliance (a small Linux "
"distribution) inside qemu/KVM.  The first two areas are: minimizing the time "
"taken to start this appliance, and the number of times the appliance has to "
"be started.  The third area is shortening the time taken for inspection of "
"VMs."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:17
msgid "BASELINE MEASUREMENTS"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:19
msgid ""
"Before making changes to how you use libguestfs, take baseline measurements."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:22
msgid "BASELINE: STARTING THE APPLIANCE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:24
msgid ""
"On an unloaded machine, time how long it takes to start up the appliance:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:27
#: ../examples/guestfs-performance.pod:169 ../examples/guestfs-testing.pod:49
#, no-wrap
msgid ""
" time guestfish -a /dev/null run\n"
"\n"
msgstr ""
" time guestfish -a /dev/null run\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:29
msgid ""
"Run this command several times in a row and discard the first few runs, so "
"that you are measuring a typical \"hot cache\" case."
msgstr ""

#. type: =head3
#: ../examples/guestfs-performance.pod:32
#: ../examples/guestfs-performance.pod:65
msgid "Explanation"
msgstr "Пояснення"

#. type: textblock
#: ../examples/guestfs-performance.pod:34
msgid ""
"This command starts up the libguestfs appliance on a null disk, and then "
"immediately shuts it down.  The first time you run the command, it will "
"create an appliance and cache it (usually under C</var/tmp/.guestfs-*>).  "
"Subsequent runs should reuse the cached appliance."
msgstr ""

#. type: =head3
#: ../examples/guestfs-performance.pod:40
#: ../examples/guestfs-performance.pod:76
msgid "Expected results"
msgstr "Очікувані результати"

#. type: textblock
#: ../examples/guestfs-performance.pod:42
msgid ""
"You should expect to be getting times under 6 seconds.  If the times you see "
"on an unloaded machine are above this, then see the section L</"
"TROUBLESHOOTING POOR PERFORMANCE> below."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:46
msgid "BASELINE: PERFORMING INSPECTION OF A GUEST"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:48
msgid ""
"For this test you will need an unloaded machine and at least one real guest "
"or disk image.  If you are planning to use libguestfs against only X guests "
"(eg. X = Windows), then using an X guest here would be most appropriate.  If "
"you are planning to run libguestfs against a mix of guests, then use a mix "
"of guests for testing here."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:54
msgid ""
"Time how long it takes to perform inspection and mount the disks of the "
"guest.  Use the first command if you will be using disk images, and the "
"second command if you will be using libvirt."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:58
#, no-wrap
msgid ""
" time guestfish --ro -a disk.img -i exit\n"
"\n"
msgstr ""
" time guestfish --ro -a диск.img -i exit\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:60
#, no-wrap
msgid ""
" time guestfish --ro -d GuestName -i exit\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:62
msgid ""
"Run the command several times in a row and discard the first few runs, so "
"that you are measuring a typical \"hot cache\" case."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:67
msgid ""
"This command starts up the libguestfs appliance on the named disk image or "
"libvirt guest, performs libguestfs inspection on it (see L<guestfs(3)/"
"INSPECTION>), mounts the guest's disks, then discards all these results and "
"shuts down."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:72
msgid ""
"The first time you run the command, it will create an appliance and cache it "
"(usually under C</var/tmp/.guestfs-*>).  Subsequent runs should reuse the "
"cached appliance."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:78
msgid ""
"You should expect times which are E<le> 5 seconds greater than measured in "
"the first baseline test above.  (For example, if the first baseline test ran "
"in 5 seconds, then this test should run in E<le> 10 seconds)."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:83
msgid "UNDERSTANDING THE APPLIANCE AND WHEN IT IS BUILT/CACHED"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:85
msgid ""
"The first time you use libguestfs, it will build and cache an appliance.  "
"This is usually in C</var/tmp/.guestfs-*>, unless you have set C<$TMPDIR> or "
"C<$LIBGUESTFS_CACHEDIR> in which case it will be under that temporary "
"directory."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:90
msgid ""
"For more information about how the appliance is constructed, see "
"L<supermin(1)/SUPERMIN APPLIANCES>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:93
msgid ""
"Every time libguestfs runs it will check that no host files used by the "
"appliance have changed.  If any have, then the appliance is rebuilt.  This "
"usually happens when a package is installed or updated on the host (eg. "
"using programs like C<yum> or C<apt-get>).  The reason for reconstructing "
"the appliance is security: the new program that has been installed might "
"contain a security fix, and so we want to include the fixed program in the "
"appliance automatically."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:101
msgid "These are the performance implications:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:107
msgid ""
"The process of building (or rebuilding) the cached appliance is slow, and "
"you can avoid this happening by using a fixed appliance (see below)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:113
msgid ""
"If not using a fixed appliance, be aware that updating software on the host "
"will cause a one time rebuild of the appliance."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:118
msgid ""
"C</var/tmp> (or C<$TMPDIR>, C<$LIBGUESTFS_CACHEDIR>) should be on a fast "
"disk, and have plenty of space for the appliance."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:123
msgid "USING A FIXED APPLIANCE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:125
msgid ""
"To fully control when the appliance is built, you can build a fixed "
"appliance.  This appliance should be stored on a fast local disk."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:128
msgid "To build the appliance, run the command:"
msgstr "Щоб зібрати образ системи для розгортання, віддайте таку команду:"

#. type: verbatim
#: ../examples/guestfs-performance.pod:130
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance <directory>\n"
"\n"
msgstr ""
" libguestfs-make-fixed-appliance <каталог>\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:132
msgid ""
"replacing C<E<lt>directoryE<gt>> with the name of a directory where the "
"appliance will be stored (normally you would name a subdirectory, for "
"example: C</usr/local/lib/guestfs/appliance> or C</dev/shm/appliance>)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:137
msgid ""
"Then set C<$LIBGUESTFS_PATH> (and ensure this environment variable is set in "
"your libguestfs program), or modify your program so it calls "
"C<guestfs_set_path>.  For example:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:143
msgid ""
"Now you can run libguestfs programs, virt tools, guestfish etc. as normal.  "
"The programs will use your fixed appliance, and will not ever build, "
"rebuild, or cache their own appliance."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:147
msgid ""
"(For detailed information on this subject, see: L<libguestfs-make-fixed-"
"appliance(1)>)."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:150
msgid "PERFORMANCE OF THE FIXED APPLIANCE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:152
msgid ""
"In our testing we did not find that using a fixed appliance gave any "
"measurable performance benefit, even when the appliance was located in "
"memory (ie. on C</dev/shm>).  However there are two points to consider:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:161
msgid ""
"Using a fixed appliance stops libguestfs from ever rebuilding the appliance, "
"meaning that libguestfs will have more predictable start-up times."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:167
msgid "The appliance is loaded on demand.  A simple test such as:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:171
msgid ""
"does not load very much of the appliance.  A real libguestfs program using "
"complicated API calls would demand-load a lot more of the appliance.  Being "
"able to store the appliance in a specified location makes the performance "
"more predictable."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:178
msgid "REDUCING THE NUMBER OF TIMES THE APPLIANCE IS LAUNCHED"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:180
msgid ""
"By far the most effective, though not always the simplest way to get good "
"performance is to ensure that the appliance is launched the minimum number "
"of times.  This will probably involve changing your libguestfs application."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:185
msgid ""
"Try to call C<guestfs_launch> at most once per target virtual machine or "
"disk image."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:188
msgid ""
"Instead of using a separate instance of L<guestfish(1)> to make a series of "
"changes to the same guest, use a single instance of guestfish and/or use the "
"guestfish I<--listen> option."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:192
msgid ""
"Consider writing your program as a daemon which holds a guest open while "
"making a series of changes.  Or marshal all the operations you want to "
"perform before opening the guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:196
msgid ""
"You can also try adding disks from multiple guests to a single appliance.  "
"Before trying this, note the following points:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:203
msgid ""
"Adding multiple guests to one appliance is a security problem because it may "
"allow one guest to interfere with the disks of another guest.  Only do it if "
"you trust all the guests, or if you can group guests by trust."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:210
msgid ""
"There is a hard limit to the number of disks you can add to a single "
"appliance.  Call L<guestfs(3)/guestfs_max_disks> to get this limit.  For "
"further information see L<guestfs(3)/LIMITS>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:216
msgid ""
"Using libguestfs this way is complicated.  Disks can have unexpected "
"interactions: for example, if two guests use the same UUID for a filesystem "
"(because they were cloned), or have volume groups with the same name (but "
"see C<guestfs_lvm_set_filter>)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:223
msgid ""
"L<virt-df(1)> adds multiple disks by default, so the source code for this "
"program would be a good place to start."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:226
msgid "SHORTENING THE TIME TAKEN FOR INSPECTION OF VMs"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:228
msgid ""
"The main advice is obvious: Do not perform inspection (which is expensive) "
"unless you need the results."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:231
msgid ""
"If you previously performed inspection on the guest, then it may be safe to "
"cache and reuse the results from last time."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:234
msgid ""
"Some disks don't need to be inspected at all: for example, if you are "
"creating a disk image, or if the disk image is not a VM, or if the disk "
"image has a known layout."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:238
msgid ""
"Even when basic inspection (C<guestfs_inspect_os>) is required, auxiliary "
"inspection operations may be avoided:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:245
msgid "Mounting disks is only necessary to get further filesystem information."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:250
msgid ""
"Listing applications (C<guestfs_inspect_list_applications>) is an expensive "
"operation on Linux, but almost free on Windows."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:255
msgid ""
"Generating a guest icon (C<guestfs_inspect_get_icon>) is cheap on Linux but "
"expensive on Windows."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:260
msgid "PARALLEL APPLIANCES"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:262
msgid ""
"Libguestfs appliances are mostly I/O bound and you can launch multiple "
"appliances in parallel.  Provided there is enough free memory, there should "
"be little difference in launching 1 appliance vs N appliances in parallel."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:267
msgid ""
"On a 2-core (4-thread) laptop with 16 GB of RAM, using the (not especially "
"realistic) test Perl script below, the following plot shows excellent "
"scalability when running between 1 and 20 appliances in parallel:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:272
#, no-wrap
msgid ""
"  12 ++---+----+----+----+-----+----+----+----+----+---++\n"
"     +    +    +    +    +     +    +    +    +    +    *\n"
"     |                                                  |\n"
"     |                                               *  |\n"
"  11 ++                                                ++\n"
"     |                                                  |\n"
"     |                                                  |\n"
"     |                                          *  *    |\n"
"  10 ++                                                ++\n"
"     |                                        *         |\n"
"     |                                                  |\n"
" s   |                                                  |\n"
"   9 ++                                                ++\n"
" e   |                                                  |\n"
"     |                                     *            |\n"
" c   |                                                  |\n"
"   8 ++                                  *             ++\n"
" o   |                                *                 |\n"
"     |                                                  |\n"
" n 7 ++                                                ++\n"
"     |                              *                   |\n"
" d   |                           *                      |\n"
"     |                                                  |\n"
" s 6 ++                                                ++\n"
"     |                      *  *                        |\n"
"     |                   *                              |\n"
"     |                                                  |\n"
"   5 ++                                                ++\n"
"     |                                                  |\n"
"     |                 *                                |\n"
"     |            * *                                   |\n"
"   4 ++                                                ++\n"
"     |                                                  |\n"
"     |                                                  |\n"
"     +    *  * *    +    +     +    +    +    +    +    +\n"
"   3 ++-*-+----+----+----+-----+----+----+----+----+---++\n"
"     0    2    4    6    8     10   12   14   16   18   20\n"
"               number of parallel appliances\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:311
msgid ""
"It is possible to run many more than 20 appliances in parallel, but if you "
"are using the libvirt backend then you should be aware that out of the box "
"libvirt limits the number of client connections to 20."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:315
msgid ""
"The simple Perl script below was used to collect the data for the plot "
"above, but there is much more information on this subject, including more "
"advanced test scripts and graphs, available in the following blog postings:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:320
msgid ""
"L<http://rwmj.wordpress.com/2013/02/25/multiple-libguestfs-appliances-in-"
"parallel-part-1/> L<http://rwmj.wordpress.com/2013/02/25/multiple-libguestfs-"
"appliances-in-parallel-part-2/> L<http://rwmj.wordpress.com/2013/02/25/"
"multiple-libguestfs-appliances-in-parallel-part-3/> L<http://rwmj.wordpress."
"com/2013/02/25/multiple-libguestfs-appliances-in-parallel-part-4/>"
msgstr ""
"L<http://rwmj.wordpress.com/2013/02/25/multiple-libguestfs-appliances-in-"
"parallel-part-1/> L<http://rwmj.wordpress.com/2013/02/25/multiple-libguestfs-"
"appliances-in-parallel-part-2/> L<http://rwmj.wordpress.com/2013/02/25/"
"multiple-libguestfs-appliances-in-parallel-part-3/> L<http://rwmj.wordpress."
"com/2013/02/25/multiple-libguestfs-appliances-in-parallel-part-4/>"

#. type: verbatim
#: ../examples/guestfs-performance.pod:325
#, no-wrap
msgid ""
" #!/usr/bin/perl -w\n"
" \n"
msgstr ""
" #!/usr/bin/perl -w\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:327
#, no-wrap
msgid ""
" use strict;\n"
" use threads;\n"
" use Sys::Guestfs;\n"
" use Time::HiRes qw(time);\n"
" \n"
msgstr ""
" use strict;\n"
" use threads;\n"
" use Sys::Guestfs;\n"
" use Time::HiRes qw(time);\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:332
#, no-wrap
msgid ""
" sub test {\n"
"     my $g = Sys::Guestfs->new;\n"
"     $g->add_drive_ro (\"/dev/null\");\n"
"     $g->launch ();\n"
"     \n"
msgstr ""
" sub test {\n"
"     my $g = Sys::Guestfs->new;\n"
"     $g->add_drive_ro (\"/dev/null\");\n"
"     $g->launch ();\n"
"     \n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:337
#, no-wrap
msgid ""
"     # You could add some work for libguestfs to do here.\n"
"     \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:339
#, no-wrap
msgid ""
"     $g->close ();\n"
" }\n"
" \n"
msgstr ""
"     $g->close ();\n"
" }\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:342
#, no-wrap
msgid ""
" # Get everything into cache.\n"
" test (); test (); test ();\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:345
#, no-wrap
msgid ""
" for my $nr_threads (1..20) {\n"
"     my $start_t = time ();\n"
"     my @threads;\n"
"     foreach (1..$nr_threads) {\n"
"         push @threads, threads->create (\\&test)\n"
"     }\n"
"     foreach (@threads) {\n"
"         $_->join ();\n"
"         if (my $err = $_->error ()) {\n"
"             die \"launch failed with $nr_threads threads: $err\"\n"
"         }\n"
"     }\n"
"     my $end_t = time ();\n"
"     printf (\"%d %.2f\\n\", $nr_threads, $end_t - $start_t);\n"
" }\n"
"\n"
msgstr ""
" for my $nr_threads (1..20) {\n"
"     my $start_t = time ();\n"
"     my @threads;\n"
"     foreach (1..$nr_threads) {\n"
"         push @threads, threads->create (\\&test)\n"
"     }\n"
"     foreach (@threads) {\n"
"         $_->join ();\n"
"         if (my $err = $_->error ()) {\n"
"             die \"launch failed with $nr_threads threads: $err\"\n"
"         }\n"
"     }\n"
"     my $end_t = time ();\n"
"     printf (\"%d %.2f\\n\", $nr_threads, $end_t - $start_t);\n"
" }\n"
"\n"

#. type: =head1
#: ../examples/guestfs-performance.pod:361
msgid "USING USER-MODE LINUX"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:363
msgid ""
"Since libguestfs 1.24, it has been possible to use the User-Mode Linux (uml) "
"backend instead of KVM (see L<guestfs(3)/USER-MODE LINUX BACKEND>).  This "
"section makes some general remarks about this backend, but it is B<highly "
"advisable> to measure your own workload under UML rather than trusting "
"comments or intuition."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:374
msgid ""
"UML usually performs the same or slightly slower than KVM, on baremetal."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:378
msgid ""
"However UML often performs the same under virtualization as it does on "
"baremetal, whereas KVM can run much slower under virtualization (since "
"hardware virt acceleration is not available)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:384
msgid ""
"Upload and download is as much as 10 times slower on UML than KVM.  "
"Libguestfs sends this data over the UML emulated serial port, which is far "
"less efficient than KVM's virtio-serial."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:390
msgid ""
"UML lacks some features (eg. qcow2 support), so it may not be applicable at "
"all."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:395
msgid ""
"For some actual figures, see: L<http://rwmj.wordpress.com/2013/08/14/"
"performance-of-user-mode-linux-as-a-libguestfs-backend/#content>"
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:398
msgid "TROUBLESHOOTING POOR PERFORMANCE"
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:400
msgid "ENSURE HARDWARE VIRTUALIZATION IS AVAILABLE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:402
msgid "Use C</proc/cpuinfo> and this page:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:404
msgid "http://virt-tools.org/learning/check-hardware-virt/"
msgstr "http://virt-tools.org/learning/check-hardware-virt/"

#. type: textblock
#: ../examples/guestfs-performance.pod:406
msgid ""
"to ensure that hardware virtualization is available.  Note that you may need "
"to enable it in your BIOS."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:409
msgid ""
"Hardware virt is not usually available inside VMs, and libguestfs will run "
"slowly inside another virtual machine whatever you do.  Nested "
"virtualization does not work well in our experience, and is certainly no "
"substitute for running libguestfs on baremetal."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:414
msgid "ENSURE KVM IS AVAILABLE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:416
msgid ""
"Ensure that KVM is enabled and available to the user that will run "
"libguestfs.  It should be safe to set 0666 permissions on C</dev/kvm> and "
"most distributions now do this."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:420
msgid "PROCESSORS TO AVOID"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:422
msgid ""
"Avoid processors that don't have hardware virtualization, and some "
"processors which are simply very slow (AMD Geode being a great example)."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:426
msgid "DETAILED TIMINGS USING ANNOTATE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:428
msgid ""
"Use the L<annotate(1)>/L<annotate-output(1)> command to show detailed "
"timings:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:431
#, no-wrap
msgid ""
" $ annotate-output +'%T.%N' guestfish -a /dev/null run -v\n"
" 22:17:53.215784625 I: Started guestfish -a /dev/null run -v\n"
" 22:17:53.240335409 E: libguestfs: [00000ms] supermin-helper --verbose -f checksum '/usr/lib64/guestfs/supermin.d' x86_64\n"
" 22:17:53.266857866 E: supermin helper [00000ms] whitelist = (not specified), host_cpu = x86_64, kernel = (null), initrd = (null), appliance = (null)\n"
" 22:17:53.272704072 E: supermin helper [00000ms] inputs[0] = /usr/lib64/guestfs/supermin.d\n"
" 22:17:53.276528651 E: checking modpath /lib/modules/3.4.0-1.fc17.x86_64.debug is a directory\n"
" [etc]\n"
"\n"
msgstr ""
" $ annotate-output +'%T.%N' guestfish -a /dev/null run -v\n"
" 22:17:53.215784625 I: Started guestfish -a /dev/null run -v\n"
" 22:17:53.240335409 E: libguestfs: [00000ms] supermin-helper --verbose -f checksum '/usr/lib64/guestfs/supermin.d' x86_64\n"
" 22:17:53.266857866 E: supermin helper [00000ms] whitelist = (not specified), host_cpu = x86_64, kernel = (null), initrd = (null), appliance = (null)\n"
" 22:17:53.272704072 E: supermin helper [00000ms] inputs[0] = /usr/lib64/guestfs/supermin.d\n"
" 22:17:53.276528651 E: checking modpath /lib/modules/3.4.0-1.fc17.x86_64.debug is a directory\n"
" [etc]\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:439
msgid ""
"The timestamps are C<hours:minutes:seconds.nanoseconds>.  By comparing the "
"timestamps you can see exactly how long each operation in the boot sequence "
"takes."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:443
msgid "DETAILED TIMINGS USING SYSTEMTAP"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:445
msgid ""
"You can use SystemTap (L<stap(1)>) to get detailed timings from libguestfs "
"programs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:448
msgid "Save the following script as C<time.stap>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:450 ../src/guestfs.pod:3340
#, no-wrap
msgid ""
" global last;\n"
" \n"
msgstr ""
" global last;\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:452 ../src/guestfs.pod:3342
#, no-wrap
msgid ""
" function display_time () {\n"
"       now = gettimeofday_us ();\n"
"       delta = 0;\n"
"       if (last > 0)\n"
"             delta = now - last;\n"
"       last = now;\n"
" \n"
msgstr ""
" function display_time () {\n"
"       now = gettimeofday_us ();\n"
"       delta = 0;\n"
"       if (last > 0)\n"
"             delta = now - last;\n"
"       last = now;\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:459 ../src/guestfs.pod:3349
#, no-wrap
msgid ""
"       printf (\"%d (+%d):\", now, delta);\n"
" }\n"
" \n"
msgstr ""
"       printf (\"%d (+%d):\", now, delta);\n"
" }\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:462 ../src/guestfs.pod:3352
#, no-wrap
msgid ""
" probe begin {\n"
"       last = 0;\n"
"       printf (\"ready\\n\");\n"
" }\n"
" \n"
msgstr ""
" probe begin {\n"
"       last = 0;\n"
"       printf (\"ready\\n\");\n"
" }\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:467 ../src/guestfs.pod:3357
#, no-wrap
msgid ""
" /* Display all calls to static markers. */\n"
" probe process(\"/usr/lib*/libguestfs.so.0\")\n"
"           .provider(\"guestfs\").mark(\"*\") ? {\n"
"       display_time();\n"
"       printf (\"\\t%s %s\\n\", $$name, $$parms);\n"
" }\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:474
#, no-wrap
msgid ""
" /* Display all calls to guestfs_* functions. */\n"
" probe process(\"/usr/lib*/libguestfs.so.0\")\n"
"           .function(\"guestfs_[a-z]*\") ? {\n"
"       display_time();\n"
"       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
" }\n"
"\n"
msgstr ""
" /* Показати усі виклики функцій guestfs_*. */\n"
" probe process(\"/usr/lib*/libguestfs.so.0\")\n"
"           .function(\"guestfs_[a-z]*\") ? {\n"
"       display_time();\n"
"       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
" }\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:481
msgid "Run it as root in one window:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:483
#, no-wrap
msgid ""
" # stap time.stap\n"
" ready\n"
"\n"
msgstr ""
" # stap time.stap\n"
" ready\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:486
msgid ""
"It prints \"ready\" when SystemTap has loaded the program.  Run your "
"libguestfs program, guestfish or a virt tool in another window.  For example:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:490
#, no-wrap
msgid ""
" $ guestfish -a /dev/null run\n"
"\n"
msgstr ""
" $ guestfish -a /dev/null run\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:492
msgid ""
"In the stap window you will see a large amount of output, with the time "
"taken for each step shown (microseconds in parenthesis).  For example:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:496
#, no-wrap
msgid ""
" xxxx (+0):\tguestfs_create \n"
" xxxx (+29):\tguestfs_set_pgroup g=0x17a9de0 pgroup=0x1\n"
" xxxx (+9):\tguestfs_add_drive_opts_argv g=0x17a9de0 [...]\n"
" xxxx (+8):\tguestfs___safe_strdup g=0x17a9de0 str=0x7f8a153bed5d\n"
" xxxx (+19):\tguestfs___safe_malloc g=0x17a9de0 nbytes=0x38\n"
" xxxx (+5):\tguestfs___safe_strdup g=0x17a9de0 str=0x17a9f60\n"
" xxxx (+10):\tguestfs_launch g=0x17a9de0\n"
" xxxx (+4):\tlaunch_start \n"
" [etc]\n"
"\n"
msgstr ""
" xxxx (+0):\tguestfs_create \n"
" xxxx (+29):\tguestfs_set_pgroup g=0x17a9de0 pgroup=0x1\n"
" xxxx (+9):\tguestfs_add_drive_opts_argv g=0x17a9de0 [...]\n"
" xxxx (+8):\tguestfs___safe_strdup g=0x17a9de0 str=0x7f8a153bed5d\n"
" xxxx (+19):\tguestfs___safe_malloc g=0x17a9de0 nbytes=0x38\n"
" xxxx (+5):\tguestfs___safe_strdup g=0x17a9de0 str=0x17a9f60\n"
" xxxx (+10):\tguestfs_launch g=0x17a9de0\n"
" xxxx (+4):\tlaunch_start \n"
" [etc]\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:506
msgid ""
"You will need to consult, and even modify, the source to libguestfs to fully "
"understand the output."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:509
msgid "DETAILED DEBUGGING USING GDB"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:511
msgid ""
"You can attach to the appliance BIOS/kernel using gdb.  If you know what "
"you're doing, this can be a useful way to diagnose boot regressions."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:515
msgid ""
"Firstly, you have to change qemu so it runs with the C<-S> and C<-s> "
"options.  These options cause qemu to pause at boot and allow you to attach "
"a debugger.  Read L<qemu(1)> for further information.  Libguestfs invokes "
"qemu several times (to scan the help output and so on) and you only want the "
"final invocation of qemu to use these options, so use a qemu wrapper script "
"like this:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:522 ../fish/guestfish.pod:1013
#: ../src/guestfs.pod:1380
#, no-wrap
msgid ""
" #!/bin/bash -\n"
" \n"
msgstr ""
" #!/bin/bash -\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-performance.pod:524
#, no-wrap
msgid ""
" # Set this to point to the real qemu binary.\n"
" qemu=/usr/bin/qemu-kvm\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:527
#, no-wrap
msgid ""
" if [ \"$1\" != \"-global\" ]; then\n"
"     # Scanning help output etc.\n"
"     exec $qemu \"$@\"\n"
" else \n"
"     # Really running qemu.\n"
"     exec $qemu -S -s \"$@\"\n"
" fi\n"
"\n"
msgstr ""
" if [ \"$1\" != \"-global\" ]; then\n"
"     # Scanning help output etc.\n"
"     exec $qemu \"$@\"\n"
" else \n"
"     # Really running qemu.\n"
"     exec $qemu -S -s \"$@\"\n"
" fi\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:535
msgid ""
"Now run guestfish or another libguestfs tool with the qemu wrapper (see "
"L<guestfs(3)/QEMU WRAPPERS> to understand what this is doing):"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:538
#, no-wrap
msgid ""
" LIBGUESTFS_HV=/path/to/qemu-wrapper guestfish -a /dev/null -v run\n"
"\n"
msgstr ""
" LIBGUESTFS_HV=/path/to/qemu-wrapper guestfish -a /dev/null -v run\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:540
msgid ""
"This should pause just after qemu launches.  In another window, attach to "
"qemu using gdb:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:543
#, no-wrap
msgid ""
" $ gdb\n"
" (gdb) set architecture i8086\n"
" The target architecture is assumed to be i8086\n"
" (gdb) target remote :1234\n"
" Remote debugging using :1234\n"
" 0x0000fff0 in ?? ()\n"
" (gdb) cont\n"
"\n"
msgstr ""
" $ gdb\n"
" (gdb) set architecture i8086\n"
" The target architecture is assumed to be i8086\n"
" (gdb) target remote :1234\n"
" Remote debugging using :1234\n"
" 0x0000fff0 in ?? ()\n"
" (gdb) cont\n"
"\n"

#. type: textblock
#: ../examples/guestfs-performance.pod:551
msgid ""
"At this point you can use standard gdb techniques, eg. hitting C<^C> to "
"interrupt the boot and C<bt> get a stack trace, setting breakpoints, etc.  "
"Note that when you are past the BIOS and into the Linux kernel, you'll want "
"to change the architecture back to 32 or 64 bit."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:559
msgid ""
"L<supermin(1)>, L<guestfish(1)>, L<guestfs(3)>, L<guestfs-examples(3)>, "
"L<libguestfs-make-fixed-appliance(1)>, L<stap(1)>, L<qemu(1)>, L<gdb(1)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:575 ../format/virt-format.pod:201
#: ../lua/examples/guestfs-lua.pod:157
msgid "Copyright (C) 2012 Red Hat Inc."
msgstr "© Red Hat Inc., 2012"

#. type: textblock
#: ../examples/guestfs-recipes.pod:3
msgid ""
"We break with tradition here and don't use ALL CAPS for the section "
"headings, as this makes them much easier to read."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:10
msgid "guestfs-recipes - libguestfs, guestfish and virt tools recipes"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:14
msgid ""
"This page contains recipes for and links to things you can do using "
"libguestfs, L<guestfish(1)> and the virt tools."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:17
msgid "Access a remote disk image using guestfish"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:19
msgid ""
"If the disk image is on a remote server which is accessible using SSH, HTTP, "
"FTP, NBD, iSCSI, or similar, then you can open it directly.  See "
"L<guestfish(1)/ADDING REMOTE STORAGE> for several examples.  This requires "
"libguestfs E<ge> 1.22 and qemu E<ge> 1.5."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:24
msgid "Audit a virtual machine for setuid files"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:26
msgid "See: L<virt-ls(1)/EXAMPLES>."
msgstr "See: L<virt-ls(1)/EXAMPLES>."

#. type: =head1
#: ../examples/guestfs-recipes.pod:28
msgid "Audit a virtual machine for vulnerabilities and security problems"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:30
msgid ""
"See: L<https://rwmj.wordpress.com/2013/05/16/scanning-offline-guests-using-"
"openscap-and-guestmount/#content>"
msgstr ""
"Див. L<https://rwmj.wordpress.com/2013/05/16/scanning-offline-guests-using-"
"openscap-and-guestmount/#content>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:33
msgid "Change the background image in a Windows XP VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:35
msgid ""
"The links below explain how to use L<guestfish(1)> to change the background "
"image for a user of a Windows XP VM.  Unfortunately the technique appears to "
"be substantially different for each version of Windows."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:40
msgid ""
"L<https://lists.fedoraproject.org/pipermail/virt/2011-May/002655.html> "
"L<https://lists.fedoraproject.org/pipermail/virt/2011-May/002658.html>"
msgstr ""
"L<https://lists.fedoraproject.org/pipermail/virt/2011-May/002655.html> "
"L<https://lists.fedoraproject.org/pipermail/virt/2011-May/002658.html>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:43
msgid "Checksum a file or device within a disk image"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:45
msgid "To checksum a whole device, or a partition, LV etc within a disk image:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:47
#, no-wrap
msgid ""
" guestfish --ro -a disk.img run : checksum-device md5 /dev/sda1\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:49
msgid ""
"Replace C<md5> with the type of checksum you want.  See L<guestfs(3)/"
"guestfs_checksum_device> for a list of supported types."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:52
msgid ""
"C</dev/sda1> means \"the first partition\".  You could use C</dev/sda> to "
"checksum the whole disk image, or the name of a logical volume or RAID "
"device."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:56
msgid "To checksum a single file:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:58
#, no-wrap
msgid ""
" guestfish --ro -a disk.img -i checksum sha256 /etc/passwd\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:60
msgid "or for a Windows guest:"
msgstr "або для гостьової системи Windows:"

#. type: verbatim
#: ../examples/guestfs-recipes.pod:62
#, no-wrap
msgid ""
" guestfish --ro -a disk.img -i \\\n"
"   checksum sha256 'win:\\windows\\system32\\config\\SOFTWARE'\n"
"\n"
msgstr ""
" guestfish --ro -a диск.img -i \\\n"
"   checksum sha256 'win:\\windows\\system32\\config\\SOFTWARE'\n"
"\n"

#. type: =head1
#: ../examples/guestfs-recipes.pod:65
msgid "Cloning a virtual machine"
msgstr "Клонування віртуальної машини"

#. type: textblock
#: ../examples/guestfs-recipes.pod:67
msgid ""
"Use a combination of tools like L<cp(1)>, L<dd(1)>, and virt tools like "
"L<virt-sysprep(1)>, L<virt-sparsify(1)> and L<virt-resize(1)>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:71
msgid "For more details, see: L<virt-sysprep(1)/COPYING AND CLONING>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:73
msgid "Convert a CD-ROM / DVD / ISO to a tarball"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:75
msgid "This converts input C<cd.iso> to output C<cd.tar.gz>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:77
#, no-wrap
msgid ""
" guestfish --ro -a cd.iso -m /dev/sda tgz-out / cd.tar.gz\n"
"\n"
msgstr ""
" guestfish --ro -a cd.iso -m /dev/sda tgz-out / cd.tar.gz\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:79
msgid "To export just a subdirectory, eg. C</files>, do:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:81
#, no-wrap
msgid ""
" guestfish --ro -a cd.iso -m /dev/sda tgz-out /files cd.tar.gz\n"
"\n"
msgstr ""
" guestfish --ro -a cd.iso -m /dev/sda tgz-out /files cd.tar.gz\n"
"\n"

#. type: =head1
#: ../examples/guestfs-recipes.pod:83
msgid "Convert from one format/filesystem to another"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:85
msgid ""
"If you have a data disk in one format / filesystem / partition / volume "
"manager, you can convert it another using this technique."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:88
msgid ""
"In this example, we start with a data disk that has a single partition "
"containing a filesystem, and we want to create another disk that contains "
"the same files but on an ext3 filesystem embedded in a logical volume on a "
"sparse raw-format disk."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:93
msgid "First create the formatted-but-empty target disk:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:95
#, no-wrap
msgid ""
" truncate -s 10G target.img\n"
" virt-format -a target.img --partition=mbr --lvm --filesystem=ext3\n"
"\n"
msgstr ""
" truncate -s 10G target.img\n"
" virt-format -a target.img --partition=mbr --lvm --filesystem=ext3\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:98
msgid ""
"Now, pipe two guestfish instances together to transfer the old data to the "
"new disk:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:101
#, no-wrap
msgid ""
" guestfish --ro -a source.img -m /dev/sda1  -- tar-out / - | \\\n"
" guestfish --rw -a target.img -m /dev/VG/LV -- tar-in - /\n"
"\n"
msgstr ""
" guestfish --ro -a source.img -m /dev/sda1  -- tar-out / - | \\\n"
" guestfish --rw -a target.img -m /dev/VG/LV -- tar-in - /\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:104
msgid "To browse the final disk image, do:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:106
#, no-wrap
msgid ""
" guestfish --ro -a target.img -m /dev/VG/LV\n"
" ><fs> ll /\n"
"\n"
msgstr ""
" guestfish --ro -a target.img -m /dev/VG/LV\n"
" ><fs> ll /\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:109
msgid ""
"This technique is quite powerful, allowing you for example to split up "
"source directories over the target filesystems."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:112
msgid ""
"Note this won't work (at least, not directly) for bootable virtual machine "
"disks because it doesn't copy over the boot loader."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:115
msgid "Convert Windows DVD to bootable USB key"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:117
msgid ""
"L<http://rwmj.wordpress.com/2013/05/09/tip-convert-a-windows-dvd-iso-to-a-"
"bootable-usb-key-using-guestfish/#content>"
msgstr ""
"L<http://rwmj.wordpress.com/2013/05/09/tip-convert-a-windows-dvd-iso-to-a-"
"bootable-usb-key-using-guestfish/#content>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:119
msgid "Convert Xen-style partitionless image to partitioned disk image"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:121
msgid ""
"Xen disk images are often partitionless, meaning that the filesystem starts "
"directly at the beginning of the disk with no partition table.  You can in "
"fact use these directly in KVM (provided the guest isn't Windows), but some "
"people like to convert them to regular partitioned disk images, and this is "
"required for Windows guests.  Here is how to use guestfish to do this:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:128
#, no-wrap
msgid ""
" guestfish\n"
" ><fs> add-ro input.img\n"
" ><fs> sparse output.img 10G     # adjust the output size\n"
" ><fs> run\n"
" # Create a partition table on the output disk:\n"
" ><fs> part-init /dev/sdb mbr\n"
" ><fs> part-add /dev/sdb p 2048 -2048\n"
" # Copy the data to the target partition:\n"
" ><fs> copy-device-to-device /dev/sda /dev/sdb1 sparse:true\n"
" # Optionally resize the target filesystem.  Use ntfsresize\n"
" # for Windows guests:\n"
" ><fs> resize2fs /dev/sdb1\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:141
msgid ""
"Such a disk image won't be directly bootable.  You may need to boot it with "
"an external kernel and initramfs (see below).  Or you can use the guestfish "
"commands C<syslinux> or C<extlinux> to install a SYSLINUX bootloader."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:146
msgid "Create empty disk images"
msgstr "Створення порожніх образів дисків"

#. type: textblock
#: ../examples/guestfs-recipes.pod:148
msgid "The L<virt-format(1)> tool can do this directly."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:150
msgid ""
"Use L<virt-make-fs(1)> to create a disk image with content.  This can also "
"create some standard disk images such as virtual floppy devices (VFDs)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:154
msgid ""
"You can also use the L<guestfish(1)> I<-N> option to create empty disk "
"images.  The useful guide below explains the options available."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:157
msgid ""
"L<https://rwmj.wordpress.com/2010/09/08/new-guestfish-n-options-in-1-5-9/"
"#content>"
msgstr ""
"L<https://rwmj.wordpress.com/2010/09/08/new-guestfish-n-options-in-1-5-9/"
"#content>"

#. type: textblock
#: ../examples/guestfs-recipes.pod:159
msgid "L<virt-builder(1)> can create minimal guests."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:161
msgid "Delete a file (or other simple file operations)"
msgstr "Вилучення файлів (або інші прості дії з файлами)"

#. type: textblock
#: ../examples/guestfs-recipes.pod:163
msgid "Use guestfish.  To delete a file:"
msgstr "Скористайтеся guestfish. Вилучення файла:"

#. type: verbatim
#: ../examples/guestfs-recipes.pod:165
#, no-wrap
msgid ""
" guestfish -a disk.img -i rm /file/to/delete\n"
"\n"
msgstr ""
" guestfish -a диск.img -i rm /файл/який/слід/вилучити\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:167
msgid "To touch a file (bring it up to date or create it):"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:169
#, no-wrap
msgid ""
" guestfish -a disk.img -i touch /file/to/touch\n"
"\n"
msgstr ""
" guestfish -a диск.img -i touch /файл/позначку/якого/слід/оновити\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:171
msgid ""
"To stat a file.  Since this is a read-only operation, we can make it safer "
"by adding the I<--ro> flag."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:174
#, no-wrap
msgid ""
" guestfish --ro -a disk.img -i stat /file/to/stat\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:176
msgid ""
"There are dozens of these commands.  See L<guestfish(1)> or the output of "
"C<guestfish -h>"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:179
msgid "Diff two guests; compare a snapshot to the current version"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:181
msgid ""
"Since libguestfs E<ge> 1.26, use L<virt-diff(1)> to look for differences "
"between two guests (for example if they were originally cloned from the same "
"source), or between two snapshots from the same guest.  In earlier versions "
"of libguestfs, use L<virt-ls(1)>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:186
msgid "Disable a systemd service"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:188
msgid ""
"The following is the equivalent of C<systemctl mask ...>. To disable the "
"C<cloud-init> service so it doesn't start at next boot:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:191
#, no-wrap
msgid ""
" guestfish -a disk.img -i \\\n"
"     ln-sf /dev/null /etc/systemd/system/cloud-init.service\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:194
msgid "To disable tmp-on-tmpfs:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:196
#, no-wrap
msgid ""
" guestfish -a disk.img -i \\\n"
"     ln-sf /dev/null /etc/systemd/system/tmp.mount\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:199
msgid ""
"One problem with the commands above is there is no feedback if you get the "
"name of the service you are trying to mask wrong.  But you can use L<virt-"
"ls(1)> to list the available systemd services like this:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:203
#, no-wrap
msgid ""
" virt-ls -a /tmp/fedora-19.img -R /lib/systemd/system\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:205
msgid "Dump raw filesystem content from inside a disk image or VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:207
msgid ""
"You can use the L<guestfish(1)> C<download> command to extract the raw "
"filesystem content from any filesystem in a disk image or a VM (even one "
"which is encrypted or buried inside an LV or RAID device):"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:211
#, no-wrap
msgid ""
" guestfish --ro -a disk.img run : download /dev/sda1 sda1.img\n"
"\n"
msgstr ""
" guestfish --ro -a disk.img run : download /dev/sda1 sda1.img\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-recipes.pod:213
#, no-wrap
msgid ""
" guestfish --ro -d Guest run : download /dev/vg_guest/lv_root lv.img\n"
"\n"
msgstr ""
" guestfish --ro -d Guest run : download /dev/vg_guest/lv_root lv.img\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:215
msgid "To download to stdout, replace the filename with a C<-> character:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:217
#, no-wrap
msgid ""
" guestfish --ro -a disk.img run : download /dev/sda1 - | gzip > sda1.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:219
msgid "To list the filesystems in a disk image, use L<virt-filesystems(1)>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:221
msgid "See also L</Uploading raw filesystem content>."
msgstr "Див. також L</Вивантаження даних на файлові системи без обробки>."

#. type: =head1
#: ../examples/guestfs-recipes.pod:223
msgid "Edit grub configuration in a VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:225
msgid "You can use this to:"
msgstr "Ви можете скористатися цим для того, щоб виконати такі завдання:"

#. type: textblock
#: ../examples/guestfs-recipes.pod:231
msgid "Fix a virtual machine that does not boot."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:235
msgid "Change which kernel is used to boot the VM."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:239
msgid "Change kernel command line options."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:243
msgid "Use L<virt-edit(1)> to edit the grub configuration:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:245
#, no-wrap
msgid ""
" virt-edit -d BrokenGuest /boot/grub2/grub.cfg\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:247
msgid ""
"or for general tinkering inside an unbootable VM use L<virt-rescue(1)> like "
"this:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:250
#, no-wrap
msgid ""
" virt-rescue -d BrokenGuest\n"
"\n"
msgstr ""
" virt-rescue -d BrokenGuest\n"
"\n"

#. type: =head1
#: ../examples/guestfs-recipes.pod:252
msgid "Export any directory from a VM"
msgstr "Експортувати будь-який каталог з віртуальної машини"

#. type: textblock
#: ../examples/guestfs-recipes.pod:254
msgid ""
"To export C</home> from a VM into a local directory use L<virt-copy-out(1)>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:257 ../examples/guestfs-testing.pod:186
#, no-wrap
msgid ""
" virt-copy-out -d Guest /home .\n"
"\n"
msgstr ""
" virt-copy-out -d Guest /home .\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:265
msgid ""
"The final dot of the command is not a printing error.  It means we want to "
"copy out to the current directory."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:270
msgid "This creates a directory called C<home> under the current directory."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:274
msgid ""
"If the guest is a Windows guest then you can use drive letters and "
"backslashes, but you must prefix the path with C<win:> and quote it to "
"protect it from the shell, like this:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:278
#, no-wrap
msgid ""
" virt-copy-out -d WinGuest 'win:c:\\windows\\system32\\config' .\n"
"\n"
msgstr ""
" virt-copy-out -d WinGuest 'win:c:\\windows\\system32\\config' .\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:280
msgid "To get the output as a compressed tarball, do:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:282
#, no-wrap
msgid ""
" virt-tar-out -d Guest /home - | gzip --best > home.tar.gz\n"
"\n"
msgstr ""
" virt-tar-out -d Guest /home - | gzip --best > home.tar.gz\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:284
msgid ""
"Although it sounds tempting, this is usually not a reliable way to get a "
"backup from a running guest.  See the entry in the FAQ: L<http://libguestfs."
"org/FAQ.html#backup>"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:288
msgid "Find out which user is using the most space"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:290
msgid ""
"This simple script examines a Linux guest to find out which user is using "
"the most space in their home directory:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:293
#, no-wrap
msgid ""
" #!/bin/sh -\n"
" \n"
msgstr ""
" #!/bin/sh -\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-recipes.pod:295 ../fish/guestfish.pod:1015
#, no-wrap
msgid ""
" set -e\n"
" \n"
msgstr ""
" set -e\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-recipes.pod:297
#, no-wrap
msgid ""
" vm=\"$1\"\n"
" dir=/home\n"
" \n"
msgstr ""
" vm=\"$1\"\n"
" dir=/home\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-recipes.pod:300
#, no-wrap
msgid ""
" eval $(guestfish --ro -d \"$vm\" -i --listen)\n"
" \n"
msgstr ""
" eval $(guestfish --ro -d \"$vm\" -i --listen)\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-recipes.pod:302
#, no-wrap
msgid ""
" for d in $(guestfish --remote ls \"$dir\"); do\n"
"     echo -n \"$dir/$d\"\n"
"     echo -ne '\\t'\n"
"     guestfish --remote du \"$dir/$d\";\n"
" done | sort -nr -k 2\n"
" \n"
msgstr ""
" for d in $(guestfish --remote ls \"$dir\"); do\n"
"     echo -n \"$dir/$d\"\n"
"     echo -ne '\\t'\n"
"     guestfish --remote du \"$dir/$d\";\n"
" done | sort -nr -k 2\n"
" \n"

#. type: verbatim
#: ../examples/guestfs-recipes.pod:308 ../fish/guestfish.pod:969
#, no-wrap
msgid ""
" guestfish --remote exit\n"
"\n"
msgstr ""
" guestfish --remote exit\n"
"\n"

#. type: =head1
#: ../examples/guestfs-recipes.pod:310
msgid "Export external kernel and initramfs (initrd)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:312
msgid ""
"If a Linux guest doesn't have a boot loader or it is broken, then you can "
"usually boot it using an external kernel and initramfs.  In this "
"configuration, the hypervisor acts like a bootloader, loading the kernel "
"from the host disk into guest memory and jumping straight into the kernel."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:318
msgid ""
"However you may wonder how to get the right kernel corresponding to the disk "
"image you have.  Since libguestfs E<ge> 1.24 L<virt-builder(1)> can get the "
"latest kernel and corresponding initramfs for you:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:323
#, no-wrap
msgid ""
" mkdir outputdir\n"
" virt-builder --get-kernel disk.img -o outputdir\n"
" ls -lh outputdir\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:327
msgid "Get DHCP address from a VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:329
msgid ""
"The link below explains the many different possible techniques for getting "
"the last assigned DHCP address of a virtual machine."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:332
msgid ""
"L<https://rwmj.wordpress.com/2011/03/31/tip-code-for-getting-dhcp-address-"
"from-a-virtual-machine-disk-image/#content>"
msgstr ""
"L<https://rwmj.wordpress.com/2011/03/31/tip-code-for-getting-dhcp-address-"
"from-a-virtual-machine-disk-image/#content>"

#. type: textblock
#: ../examples/guestfs-recipes.pod:334
msgid ""
"In the libguestfs source examples directory you will find the latest version "
"of the C<virt-dhcp-address.c> program."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:337
msgid "Get the operating system product name string"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:339
msgid "Save the following script into a file called C<product-name.sh>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:341
#, no-wrap
msgid ""
" #!/bin/sh -\n"
" set -e\n"
" eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
" root=\"$(guestfish --remote inspect-get-roots)\"\n"
" guestfish --remote inspect-get-product-name \"$root\"\n"
" guestfish --remote exit\n"
"\n"
msgstr ""
" #!/bin/sh -\n"
" set -e\n"
" eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
" root=\"$(guestfish --remote inspect-get-roots)\"\n"
" guestfish --remote inspect-get-product-name \"$root\"\n"
" guestfish --remote exit\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:348
msgid "Make the script executable and run it on a named guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:350
#, no-wrap
msgid ""
" # product-name.sh RHEL60x64\n"
" Red Hat Enterprise Linux Server release 6.0 (Santiago)\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:353
msgid ""
"You can also use an XPath query on the L<virt-inspector(1)> XML using the "
"C<xpath> command line tool or from your favourite programming language:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:357
#, no-wrap
msgid ""
" # virt-inspector RHEL60x64 > xml\n"
" # xpath '//product_name' < xml\n"
" Found 1 nodes:\n"
" -- NODE --\n"
" <product_name>Red Hat Enterprise Linux Server release 6.0 (Santiago)</product_name>\n"
"\n"
msgstr ""
" # virt-inspector RHEL60x64 > xml\n"
" # xpath '//product_name' < xml\n"
" Found 1 nodes:\n"
" -- NODE --\n"
" <product_name>Red Hat Enterprise Linux Server release 6.0 (Santiago)</product_name>\n"
"\n"

#. type: =head1
#: ../examples/guestfs-recipes.pod:363
msgid "Get the default boot kernel for a Linux VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:365
msgid ""
"The link below contains a program to print the default boot kernel for a "
"Linux VM."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:368
msgid ""
"L<https://rwmj.wordpress.com/2010/10/30/tip-use-augeas-to-get-the-default-"
"boot-kernel-for-a-vm/#content>"
msgstr ""
"L<https://rwmj.wordpress.com/2010/10/30/tip-use-augeas-to-get-the-default-"
"boot-kernel-for-a-vm/#content>"

#. type: textblock
#: ../examples/guestfs-recipes.pod:370
msgid ""
"It uses Augeas, and the technique is generally applicable for many different "
"tasks, such as:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:377
msgid "listing the user accounts in the guest"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:381
msgid "what repositories is it configured to use"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:385
msgid "what NTP servers does it connect to"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:389
msgid "what were the boot messages last time it booted"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:393
msgid "listing who was logged in recently"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:397
msgid "L<http://augeas.net/>"
msgstr "L<http://augeas.net/>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:399
msgid "Hanging guests"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:401
msgid ""
"There are various ways to use libguestfs to find out why a guest is hanging "
"or unresponsive:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:408
msgid "Read the log files using virt-cat:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:410
#, no-wrap
msgid ""
" virt-cat Guest /var/log/messages | less\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:414
msgid "Read the Windows Event Log (Windows Vista or later only):"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:416 ../examples/guestfs-recipes.pod:584
msgid ""
"L<https://rwmj.wordpress.com/2011/04/17/decoding-the-windows-event-log-using-"
"guestfish/#content>"
msgstr ""
"L<https://rwmj.wordpress.com/2011/04/17/decoding-the-windows-event-log-using-"
"guestfish/#content>"

#. type: textblock
#: ../examples/guestfs-recipes.pod:420
msgid "Find out which files were last updated in a guest:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:422
msgid ""
"L<https://rwmj.wordpress.com/2012/02/27/using-libguestfs-to-find-out-why-a-"
"windows-guest-was-hanging/#content>"
msgstr ""
"L<https://rwmj.wordpress.com/2012/02/27/using-libguestfs-to-find-out-why-a-"
"windows-guest-was-hanging/#content>"

#. type: textblock
#: ../examples/guestfs-recipes.pod:424
msgid "This might give you a clue as to what program is running."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:428
msgid "Hex-dumping sectors from the guest"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:430
msgid "Hex-dump the boot partition:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:432
#, no-wrap
msgid ""
" guestfish --ro -a disk.img run : pread-device /dev/sda 0x200 0 |\n"
"   hexdump -C\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:435
msgid "Hex-editing sectors in the guest"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:437
msgid "Hex-edit the first sector (boot partition):"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:439
#, no-wrap
msgid ""
" guestfish --rw -a disk.img run : hexedit /dev/sda 0x200\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:441
msgid "Install packages (RPMs, Debian packages) in a guest"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:443
msgid ""
"Since libguestfs 1.26, L<virt-builder(1)>, L<virt-customize(1)> and L<virt-"
"sysprep(1)> have an I<--install> option for installing packages in Linux "
"guests.  (Use virt-customize if you have an existing guest, or virt-builder "
"if you want to create a guest from scratch)."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:450
#, no-wrap
msgid ""
" virt-builder fedora-20 --install emacs\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:452
msgid "Install packages from an alternate repository"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:454
msgid ""
"Since libguestfs 1.26, you can use L<virt-builder(1)>, L<virt-customize(1)> "
"or L<virt-sysprep(1)> I<--edit> option to edit repository metadata before "
"installing packages"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:458
msgid ""
"For example this would install packages from the updates-testing repository "
"in Fedora:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:461
#, no-wrap
msgid ""
" virt-builder fedora-20 \\\n"
"   --edit '/etc/yum.repos.d/fedora-updates-testing.repo:\n"
"             s/enabled=0/enabled=1/' \\\n"
"   --install emacs\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:466
msgid "Install SYSLINUX bootloader in a guest"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:468
msgid ""
"SYSLINUX is a small, easy to configure bootloader for Linux and Windows "
"guests.  If your guest is not bootable, you can install the SYSLINUX "
"bootloader using either the guestfish commands C<syslinux> (for FAT-based "
"guests) or C<extlinux> (for ext2/3/4 and btrfs-based guests)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:474
msgid ""
"This guide assumes a Linux guest where C</dev/sda1> is C</boot>, C</boot/"
"vmlinuz> is the guest kernel, and C</dev/sda3> is the root partition.  For a "
"Windows guest you would need a FAT-formatted boot partition and you would "
"need to use the C<syslinux> command instead."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:479
msgid ""
"Create a C<syslinux.cfg> configuration file.  You should check the SYSLINUX "
"documentation at L<http://www.syslinux.org> but it may look something like "
"this:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:483
#, no-wrap
msgid ""
" DEFAULT linux\n"
" LABEL linux\n"
"   SAY Booting the kernel\n"
"   KERNEL vmlinuz\n"
"   INITRD initrd\n"
"   APPEND ro root=/dev/sda3\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:490
msgid ""
"Locate the syslinux master boot record (a file called something like C</usr/"
"share/syslinux/mbr.bin>)."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:493
#, no-wrap
msgid ""
" guestfish -a disk.img -i\n"
" # Upload the master boot record and configuration file:\n"
" ><fs> upload ..../mbr.bin /boot/mbr.bin\n"
" ><fs> upload ..../syslinux.cfg /boot/syslinux.cfg\n"
" # Put the MBR into the boot sector:\n"
" ><fs> copy-file-to-device /boot/mbr.bin /dev/sda size:440\n"
" # Install syslinux on the first partition:\n"
" ><fs> extlinux /boot\n"
" # Set the first partition as bootable:\n"
" ><fs> part-set-bootable /dev/sda 1 true\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:504
msgid ""
"See also: L<http://rwmj.wordpress.com/2013/04/04/new-in-libguestfs-use-"
"syslinux-or-extlinux-to-make-bootable-guests/#content>"
msgstr ""
"Див. також L<http://rwmj.wordpress.com/2013/04/04/new-in-libguestfs-use-"
"syslinux-or-extlinux-to-make-bootable-guests/#content>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:507
msgid "List applications installed in a VM"
msgstr "Показати список програм, встановлених у віртуальній машині"

#. type: textblock
#: ../examples/guestfs-recipes.pod:509
msgid "Save the following to a file C<list-apps.sh>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:511
#, no-wrap
msgid ""
" #!/bin/sh -\n"
" set -e\n"
" eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
" root=\"$(guestfish --remote inspect-get-roots)\"\n"
" guestfish --remote inspect-list-applications \"$root\"\n"
" guestfish --remote exit\n"
"\n"
msgstr ""
" #!/bin/sh -\n"
" set -e\n"
" eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
" root=\"$(guestfish --remote inspect-get-roots)\"\n"
" guestfish --remote inspect-list-applications \"$root\"\n"
" guestfish --remote exit\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:518
msgid ""
"Make the file executable and then you can run it on any named virtual "
"machine:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:521
#, no-wrap
msgid ""
" # list-apps.sh WinGuest\n"
" [0] = {\n"
"   app_name: Mozilla Firefox (3.6.12)\n"
"   app_display_name: Mozilla Firefox (3.6.12)\n"
"   app_epoch: 0\n"
"   app_version: 3.6.12 (en-GB)\n"
"   app_release:\n"
"   app_install_path: C:\\Program Files\\Mozilla Firefox\n"
"   app_trans_path:\n"
"   app_publisher: Mozilla\n"
"   app_url: http://www.mozilla.com/en-GB/\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description: Mozilla Firefox\n"
" }\n"
" [1] = {\n"
"   app_name: VLC media player\n"
"   app_display_name: VLC media player 1.1.5\n"
"   app_epoch: 0\n"
"   app_version: 1.1.5\n"
"   app_release:\n"
"   app_install_path: C:\\Program Files\\VideoLAN\\VLC\n"
"   app_trans_path:\n"
"   app_publisher: VideoLAN\n"
"   app_url: http://www.videolan.org/\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description:\n"
" }\n"
"\n"
msgstr ""
" # list-apps.sh WinGuest\n"
" [0] = {\n"
"   app_name: Mozilla Firefox (3.6.12)\n"
"   app_display_name: Mozilla Firefox (3.6.12)\n"
"   app_epoch: 0\n"
"   app_version: 3.6.12 (en-GB)\n"
"   app_release:\n"
"   app_install_path: C:\\Program Files\\Mozilla Firefox\n"
"   app_trans_path:\n"
"   app_publisher: Mozilla\n"
"   app_url: http://www.mozilla.com/en-GB/\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description: Mozilla Firefox\n"
" }\n"
" [1] = {\n"
"   app_name: VLC media player\n"
"   app_display_name: VLC media player 1.1.5\n"
"   app_epoch: 0\n"
"   app_version: 1.1.5\n"
"   app_release:\n"
"   app_install_path: C:\\Program Files\\VideoLAN\\VLC\n"
"   app_trans_path:\n"
"   app_publisher: VideoLAN\n"
"   app_url: http://www.videolan.org/\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description:\n"
" }\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:551
msgid ""
"If you want to run the script on disk images (instead of libvirt virtual "
"machines), change C<-d \"$1\"> to C<-a \"$1\">.  See also L<virt-"
"inspector(1)>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:555
msgid "List files and directories in a VM"
msgstr "Показати список файлів і каталогів у віртуальній машині"

#. type: textblock
#: ../examples/guestfs-recipes.pod:557
msgid "Use L<virt-ls(1)>."
msgstr "Скористайтеся L<virt-ls(1)>."

#. type: =head1
#: ../examples/guestfs-recipes.pod:559
msgid "List services in a Windows VM"
msgstr "Показати список служб у віртуальній машині Windows"

#. type: textblock
#: ../examples/guestfs-recipes.pod:561
msgid ""
"The link below contains a script that can be used to list out the services "
"from a Windows VM, and whether those services run at boot time or are loaded "
"on demand."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:565
msgid ""
"L<https://rwmj.wordpress.com/2010/12/10/tip-list-services-in-a-windows-guest/"
"#content>"
msgstr ""
"L<https://rwmj.wordpress.com/2010/12/10/tip-list-services-in-a-windows-guest/"
"#content>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:567
msgid "Make a disk image sparse"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:569
msgid "Use L<virt-sparsify(1)>."
msgstr "Скористайтеся L<virt-sparsify(1)>."

#. type: =head1
#: ../examples/guestfs-recipes.pod:571
msgid "Monitor disk usage over time"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:573
msgid ""
"You can use L<virt-df(1)> to monitor disk usage of your guests over time.  "
"The link below contains a guide."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:576
msgid "L<http://virt-tools.org/learning/advanced-virt-df/>"
msgstr "L<http://virt-tools.org/learning/advanced-virt-df/>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:578
msgid "Reading the Windows Event Log from Windows Vista (or later)"
msgstr "Читання журналу подій у Windows з версії Windows Vista"

#. type: textblock
#: ../examples/guestfs-recipes.pod:580
msgid ""
"L<guestfish(1)> plus the tools described in the link below can be used to "
"read out the Windows Event Log from any virtual machine running Windows "
"Vista or a later version."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:586
msgid "Remove root password (Linux)"
msgstr "Вилучення пароля root (Linux)"

#. type: textblock
#: ../examples/guestfs-recipes.pod:588
msgid ""
"Using the L<virt-edit(1)> I<-e> option you can do simple replacements on "
"files.  One use is to remove the root password from a Linux guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:593
#, no-wrap
msgid ""
" virt-edit -a disk.img /etc/passwd -e 's/^root:.*?:/root::/'\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:595
msgid "Remove Administrator password (Windows)"
msgstr "Вилучення пароля адміністратора (Windows)"

#. type: textblock
#: ../examples/guestfs-recipes.pod:597
msgid ""
"The link below contains one technique for removing the Administrator "
"password from a Windows VM, or to be more precise, it gives you a command "
"prompt the next time you log in which you can use to bypass any security:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:602
msgid ""
"L<https://mdbooth.wordpress.com/2010/10/18/resetting-a-windows-guests-"
"administrator-password-with-guestfish/>"
msgstr ""
"L<https://mdbooth.wordpress.com/2010/10/18/resetting-a-windows-guests-"
"administrator-password-with-guestfish/>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:604
msgid "Sysprepping a virtual machine (Windows)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:606
msgid ""
"It is possible to do a \"sysprep\" using libguestfs alone, although not "
"straightforward.  Currently there is code in the Aeolus Oz project which "
"does this (using libguestfs).  It is likely we will add this to L<virt-"
"sysprep(1)> in future."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:611
msgid ""
"L<https://github.com/clalancette/oz> L<https://www.redhat.com/archives/virt-"
"tools-list/2011-May/msg00019.html>"
msgstr ""
"L<https://github.com/clalancette/oz> L<https://www.redhat.com/archives/virt-"
"tools-list/2011-May/msg00019.html>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:614
msgid "Unpack a live CD"
msgstr "Розпакування компакт-диска з портативною системою"

#. type: textblock
#: ../examples/guestfs-recipes.pod:616
msgid ""
"Linux live CDs often contain multiple layers of disk images wrapped like a "
"Russian doll.  You can use L<guestfish(1)> to look inside these multiple "
"layers, as outlined in the guide below."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:620
msgid ""
"L<https://rwmj.wordpress.com/2009/07/15/unpack-the-russian-doll-of-a-f11-"
"live-cd/#content>"
msgstr ""
"L<https://rwmj.wordpress.com/2009/07/15/unpack-the-russian-doll-of-a-f11-"
"live-cd/#content>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:622
msgid "Uploading and downloading files"
msgstr "Вивантаження і звантаження файлів"

#. type: textblock
#: ../examples/guestfs-recipes.pod:624
msgid ""
"The link below contains general tips on uploading (copying in)  and "
"downloading (copying out) files from VMs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:627
msgid ""
"L<https://rwmj.wordpress.com/2010/12/02/tip-uploading-and-downloading/"
"#content>"
msgstr ""
"L<https://rwmj.wordpress.com/2010/12/02/tip-uploading-and-downloading/"
"#content>"

#. type: =head1
#: ../examples/guestfs-recipes.pod:629
msgid "Uploading raw filesystem content"
msgstr "Вивантаження даних на файлові системи без обробки"

#. type: textblock
#: ../examples/guestfs-recipes.pod:631
msgid ""
"You can use L<guestfish(1)> to upload whole filesystems into a VM, even into "
"a filesystem which is encrypted or buried inside an LV or RAID device:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:635
#, no-wrap
msgid ""
" guestfish --rw -a disk.img run : upload sda1.img /dev/sda1\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:637
#, no-wrap
msgid ""
" guestfish --rw -d Guest run : upload lv.img /dev/vg_guest/lv_root\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:639
msgid ""
"One common problem is that the filesystem isn't the right size for the "
"target.  If it is too large, there's not much you can do with libguestfs - "
"you have to prepare the filesystem differently.  But if the filesystem needs "
"to expand into the target, you can use guestfish to resize it to the right "
"size:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:645
#, no-wrap
msgid ""
" guestfish --rw -d Guest run : \\\n"
"   upload lv.img /dev/vg_guest/lv_root : \\\n"
"   resize2fs /dev/vg_guest/lv_root\n"
"\n"
msgstr ""
" guestfish --rw -d Guest run : \\\n"
"   upload lv.img /dev/vg_guest/lv_root : \\\n"
"   resize2fs /dev/vg_guest/lv_root\n"
"\n"

#. type: textblock
#: ../examples/guestfs-recipes.pod:649
msgid "(or use C<ntfsresize> if the filesystem is NTFS)."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:651
msgid "Use libguestfs tools on VMware ESX guests"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:653
msgid ""
"The link below explains how to use libguestfs, L<guestfish(1)> and the virt "
"tools on any VMware ESX guests, by first sharing the VMware VMFS over sshfs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:657
msgid ""
"L<https://rwmj.wordpress.com/2011/05/10/tip-use-libguestfs-on-vmware-esx-"
"guests/#content>"
msgstr ""
"L<https://rwmj.wordpress.com/2011/05/10/tip-use-libguestfs-on-vmware-esx-"
"guests/#content>"

#. type: textblock
#: ../examples/guestfs-recipes.pod:661
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<guestfs-examples(3)>, L<guestfs-"
"erlang(3)>, L<guestfs-golang(3)>, L<guestfs-java(3)>, L<guestfs-lua(3)>, "
"L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, L<guestfs-python(3)>, L<guestfs-"
"ruby(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:3
msgid "guestfs-testing - manual testing of libguestfs, you can help!"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:7
msgid ""
"This page has manual tests you can try on libguestfs.  Everyone has a "
"slightly different combination of platform, hardware and guests, so this "
"testing is very valuable.  Thanks for helping out!"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:11
msgid ""
"Tests marked with a B<*> (asterisk) can B<destroy data> if you're not "
"careful.  The others are safe and won't modify anything."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:14
msgid ""
"Most of these tests will work with any libguestfs E<ge> 1.14.  Some of these "
"tests (marked) require libguestfs E<ge> 1.22."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:17
msgid "You can report bugs you find through this link:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:21
msgid ""
"or post on the mailing list (registration is B<not> required, but if you're "
"not registered then you'll have to wait for a moderator to manually approve "
"your message):"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:25
msgid "L<https://www.redhat.com/mailman/listinfo/libguestfs>"
msgstr "L<https://www.redhat.com/mailman/listinfo/libguestfs>"

#. type: =head1
#: ../examples/guestfs-testing.pod:27
msgid "TESTS"
msgstr "ТЕСТИ"

#. type: =head2
#: ../examples/guestfs-testing.pod:29
msgid "Run libguestfs-test-tool"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:31 ../examples/guestfs-testing.pod:224
#: ../src/guestfs.pod:4486
msgid "Run:"
msgstr "Віддайте команду:"

#. type: textblock
#: ../examples/guestfs-testing.pod:35
msgid ""
"This command does a very simple, non-destructive test that basic libguestfs "
"is functioning.  You don't need to run it as root."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:38
msgid ""
"If it I<doesn't> print C<===== TEST FINISHED OK =====>, report it as a bug.  "
"It is very important that you include the B<complete, unedited> output of "
"C<libguestfs-test-tool> in your bug report.  See the L</BUGS> section at the "
"end of this page."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:43
msgid "Check KVM acceleration is being used."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:45
msgid ""
"If your host has hardware virt acceleration, then with a hot cache "
"libguestfs should be able to start up in a few seconds.  Run the following "
"command a few times:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:51
msgid ""
"After a few runs, the time should settle down to a few seconds (under 5 "
"seconds on fast 64 bit hardware)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:54
msgid "How to check for hardware virt:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:56
msgid "L<http://virt-tools.org/learning/check-hardware-virt/>"
msgstr "L<http://virt-tools.org/learning/check-hardware-virt/>"

#. type: textblock
#: ../examples/guestfs-testing.pod:58
msgid ""
"If the command above does not work at all, use L<libguestfs-test-tool(1)>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:61
msgid "Check which version of libguestfs, qemu, libvirt, etc is being used."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:63
msgid "Look at the output of C<libguestfs-test-tool> and check:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:69
msgid ""
"Which version of libguestfs is being used? Near the beginning of the output "
"you'll see a line like:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:72
#, no-wrap
msgid ""
" library version: 1.22.0fedora=19,release=1.fc19,libvirt\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:76
msgid ""
"Is libvirt being used? You can tell the difference by looking for the "
"backend:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:79
#, no-wrap
msgid ""
" guestfs_get_backend: direct\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:81 ../examples/guestfs-testing.pod:147
#: ../examples/guestfs-testing.pod:254 ../examples/guestfs-testing.pod:267
#: ../examples/guestfs-testing.pod:327 ../fish/guestfish.pod:1053
#: ../lua/examples/guestfs-lua.pod:64 ../src/guestfs.pod:3994
msgid "or:"
msgstr "або:"

#. type: verbatim
#: ../examples/guestfs-testing.pod:83
#, no-wrap
msgid ""
" guestfs_get_backend: libvirt\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:87
msgid "Which version of qemu is being used? It may be printed out:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:89
#, no-wrap
msgid ""
" libguestfs: qemu version 1.5\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:91
msgid ""
"but note that if you're using libvirt then libguestfs doesn't have this "
"information."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:96
msgid ""
"Which kernel is being used? L<supermin(1)> will try to pick the latest "
"kernel installed on your machine.  You can see the version in the appliance "
"output, eg:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:100
#, no-wrap
msgid ""
" [    0.000000] Linux version 3.9.2-200.fc18.x86_64 [...]\n"
"\n"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:104
msgid "Try to open a local guest image with guestfish."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:106
msgid ""
"You can use any guest disk image for this test.  Make sure you use the C<--"
"ro> flag so that L<guestfish(1)> will open the disk image read-only."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:110
#, no-wrap
msgid ""
" guestfish --ro -a /path/to/disk.img -i\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:112
msgid ""
"If the command is successful, it should print out the guest operating system "
"name and put you at the guestfish C<E<gt>E<lt>fsE<gt>> prompt.  You can use "
"guestfish commands like S<C<ll />> to look inside the disk image.  To exit, "
"type C<exit>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:117 ../examples/guestfs-testing.pod:138
msgid ""
"If you get an error, try enabling debugging (add C<-v> to the command "
"line).  Also make sure that L<libguestfs-test-tool(1)> succeeds."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:120
msgid "Try to open a remote guest image with guestfish."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:122
msgid ""
"B<Note> this test requires S<libguestfs E<ge> 1.22> and S<qemu E<ge> 1.5>.  "
"You may also have to disable libvirt by setting this:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:127
msgid "If you have a disk image available over HTTP/FTP, try to open it."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:129
#, no-wrap
msgid ""
" guestfish --ro -i --format=raw -a http://www.example.com/disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:131
msgid ""
"For SSH you will need to make sure that ssh-agent is set up so you don't "
"need a password to log in to the remote machine.  Then a command similar to "
"this should work:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:135
#, no-wrap
msgid ""
" guestfish --ro -i --format=raw \\\n"
"   -a ssh://remote.example.com/path/to/disk.img\n"
"\n"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:141
msgid "Run virt-alignment-scan on all your guests."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:143
msgid "Run L<virt-alignment-scan(1)> on guests or disk images:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:145
#, no-wrap
msgid ""
" virt-alignment-scan -a /path/to/disk.img\n"
"\n"
msgstr ""
" virt-alignment-scan -a /шлях/до/образу\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-testing.pod:149
#, no-wrap
msgid ""
" virt-alignment-scan -d Guest\n"
"\n"
msgstr ""
" virt-alignment-scan -d Guest\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:151
msgid "Does the alignment report match how the guest partitions are aligned?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:153
msgid "Run virt-cat on some files in guests."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:155
msgid "L<virt-cat(1)> can display files from guests.  For a Linux guest, try:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:157
#, no-wrap
msgid ""
" virt-cat LinuxGuest /etc/passwd\n"
"\n"
msgstr ""
" virt-cat LinuxGuest /etc/passwd\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:159
msgid "A recent feature is support for Windows paths, for example:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:161
#, no-wrap
msgid ""
" virt-cat WindowsGuest 'c:\\windows\\win.ini'\n"
"\n"
msgstr ""
" virt-cat WindowsGuest 'c:\\windows\\win.ini'\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:163
msgid ""
"An even better test is if you have a Windows guest with multiple drives.  Do "
"C<D:>, C<E:> etc paths work correctly?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:166
msgid "B<*> Copy some files into a B<shut off> guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:168
msgid ""
"L<virt-copy-in(1)> can recursively copy files and directories into a guest "
"or disk image."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:171
#, no-wrap
msgid ""
" virt-copy-in -d Guest /etc /tmp\n"
"\n"
msgstr ""
" virt-copy-in -d Guest /etc /tmp\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:173
msgid ""
"This should copy local directory C</etc> to C</tmp/etc> in the guest "
"(recursively).  If you boot the guest, can you see all of the copied files "
"and directories?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:177
msgid "Shut the guest down and try copying multiple files and directories:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:179
#, no-wrap
msgid ""
" virt-copy-in -d Guest /home /etc/issue /tmp\n"
"\n"
msgstr ""
" virt-copy-in -d Guest /home /etc/issue /tmp\n"
"\n"

#. type: =head2
#: ../examples/guestfs-testing.pod:181
msgid "Copy some files out of a guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:183
msgid ""
"L<virt-copy-out(1)> can recursively copy files and directories out of a "
"guest or disk image."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:188
msgid "Note the final space and period in the command is not a typo."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:190
msgid "This should copy C</home> from the guest into the current directory."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:192
msgid "Run virt-df."
msgstr "Виконайте virt-df."

#. type: textblock
#: ../examples/guestfs-testing.pod:194
msgid "L<virt-df(1)> lists disk space.  Run:"
msgstr ""
"L<virt-df(1)> показує список даних щодо простору на диску. Віддайте команду:"

#. type: verbatim
#: ../examples/guestfs-testing.pod:196
#, no-wrap
msgid ""
" virt-df\n"
"\n"
msgstr ""
" virt-df\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:198
msgid ""
"You can try comparing this to the results from L<df(1)> inside the guest, "
"but there are some provisos:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:205
msgid "The guest must be idle."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:209
msgid "The guest disks must be synched using L<sync(1)>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:213
msgid ""
"Any action such as booting the guest will write log files causing the "
"numbers to change."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:218
msgid ""
"We don't guarantee that the numbers will be identical even under these "
"circumstances.  They should be similar.  It would indicate a bug if you saw "
"greatly differing numbers."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:222
msgid "Try importing virt-df CSV output into a spreadsheet or database."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:226
#, no-wrap
msgid ""
" virt-df --csv > /tmp/report.csv\n"
"\n"
msgstr ""
" virt-df --csv > /tmp/report.csv\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:228
msgid ""
"Now try to load this into your favorite spreadsheet or database.  Are the "
"results reproduced faithfully in the spreadsheet/database?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:231
msgid ""
"L<http://www.postgresql.org/docs/8.1/static/sql-copy.html> L<http://dev."
"mysql.com/doc/refman/5.1/en/load-data.html>"
msgstr ""
"L<http://www.postgresql.org/docs/8.1/static/sql-copy.html> L<http://dev."
"mysql.com/doc/refman/5.1/en/load-data.html>"

#. type: =head2
#: ../examples/guestfs-testing.pod:234
msgid "B<*> Edit a file in a B<shut off> guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:236
msgid ""
"L<virt-edit(1)> can edit files in guests.  Try this command on a RHEL or "
"Fedora guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:239
#, no-wrap
msgid ""
" virt-edit LinuxGuest /etc/sysconfig/network\n"
"\n"
msgstr ""
" virt-edit LinuxGuest /etc/sysconfig/network\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:241
msgid "On other Linux guests try editing other files such as:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:243
#, no-wrap
msgid ""
" virt-edit LinuxGuest /etc/motd\n"
"\n"
msgstr ""
" virt-edit LinuxGuest /etc/motd\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:245
msgid "Are the changes seen inside the guest when it is booted?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:247
msgid "Display the filesystems / partitions / LVs in a guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:249
msgid ""
"L<virt-filesystems(1)> can be used to display filesystems in a guest.  Try "
"this command on any disk image or guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:252
#, no-wrap
msgid ""
" virt-filesystems -a /path/to/disk.img --all --long -h\n"
"\n"
msgstr ""
" virt-filesystems -a /шлях/до/образу --all --long -h\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-testing.pod:256
#, no-wrap
msgid ""
" virt-filesystems -d Guest --all --long -h\n"
"\n"
msgstr ""
" virt-filesystems -d Guest --all --long -h\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:258
msgid "Do the results match what is seen in the guest?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:260
msgid "Run virt-inspector on all your guests."
msgstr "Запустіть virt-inspector для всіх ваших гостьових систем."

#. type: textblock
#: ../examples/guestfs-testing.pod:262
msgid ""
"Use L<virt-inspector(1)> to get a report on all of your guests or disk "
"images:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:265
#, no-wrap
msgid ""
" virt-inspector -a /path/to/disk.img | less\n"
"\n"
msgstr ""
" virt-inspector -a /шлях/до/образу | less\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-testing.pod:269
#, no-wrap
msgid ""
" virt-inspector -d Guest | less\n"
"\n"
msgstr ""
" virt-inspector -d Guest | less\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:271
msgid "Do the results match what is actually in the guest?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:273
msgid "Try the auditing features of virt-ls on all your guests."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:277
#, no-wrap
msgid ""
" virt-ls -lR -d Guest / | grep '^- [42]'\n"
"\n"
msgstr ""
" virt-ls -lR -d Guest / | grep '^- [42]'\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-testing.pod:281
#, no-wrap
msgid ""
" virt-ls -lR -d Guest / | grep '^d ...7'\n"
"\n"
msgstr ""
" virt-ls -lR -d Guest / | grep '^d ...7'\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-testing.pod:285
#, no-wrap
msgid ""
" virt-ls -lR -d Guest / | grep '^s'\n"
"\n"
msgstr ""
" virt-ls -lR -d Guest / | grep '^s'\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-testing.pod:289
#, no-wrap
msgid ""
" virt-ls -lR -d Guest / | grep -i '^-.*\\.png$'\n"
"\n"
msgstr ""
" virt-ls -lR -d Guest / | grep -i '^-.*\\.png$'\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:291
msgid "Display files larger than 10MB in home directories:"
msgstr ""
"Щоб переглянути список файлів у домашніх каталогах, розмір яких перевищує 10 "
"МБ:"

#. type: verbatim
#: ../examples/guestfs-testing.pod:293
#, no-wrap
msgid ""
" virt-ls -lR -d Guest /home | awk '$3 > 10*1024*1024'\n"
"\n"
msgstr ""
" virt-ls -lR -d Guest /home | awk '$3 > 10*1024*1024'\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-testing.pod:297
#, no-wrap
msgid ""
" virt-ls -lR -d Guest --time-days / | awk '$6 <= 7'\n"
"\n"
msgstr ""
" virt-ls -lR -d Guest --time-days / | awk '$6 <= 7'\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-testing.pod:301
#, no-wrap
msgid ""
" virt-ls -lR -d Guest --time-days / | grep '^-' | awk '$6 < 1'\n"
"\n"
msgstr ""
" virt-ls -lR -d Guest --time-days / | grep '^-' | awk '$6 < 1'\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:303
msgid "Do the results match what is in the guest?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:305
msgid "Create a disk image from a tarball."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:307
msgid ""
"Use L<virt-make-fs(1)> to create a disk image from any tarball that you "
"happen to have:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:310
#, no-wrap
msgid ""
" virt-make-fs --partition=mbr --type=vfat /any/tarball.tar.gz output.img\n"
"\n"
msgstr ""
" virt-make-fs --partition=mbr --type=vfat /десь/якийсь.tar.gz образ_результат.img\n"
"\n"

#. type: textblock
#: ../examples/guestfs-testing.pod:312
msgid ""
"Add 'output.img' as a raw disk to an existing guest.  Check the guest can "
"see the files.  This test is particularly useful if you try it with a "
"Windows guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:316
msgid "Try other partitioning schemes, eg. I<--partition=gpt>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:318
msgid "Try other filesystem formats, eg. I<--type=ntfs>, I<--type=ext2>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:320
msgid "B<*> Run virt-rescue on a B<shut off> disk image or guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:322
msgid ""
"Use L<virt-rescue(1)> to examine, rescue or repair a B<shut off> guest or "
"disk image:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:325
#, no-wrap
msgid ""
" virt-rescue -a /path/to/disk.img\n"
"\n"
msgstr ""
" virt-rescue -a /шлях/до/образу.img\n"
"\n"

#. type: verbatim
#: ../examples/guestfs-testing.pod:329
#, no-wrap
msgid ""
" virt-rescue -d Guest\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:331
msgid "Can you use ordinary shell commands to examine the guest?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:333
msgid "B<*> Resize your guests."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:335
msgid ""
"Use L<virt-resize(1)> to give a guest some more disk space.  For example, if "
"you have a disk image that is smaller than 30G, increase it to 30G by doing:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:339
#, no-wrap
msgid ""
" truncate -s 30G newdisk.img\n"
" virt-filesystems -a /path/to/olddisk.img --all --long -h\n"
" virt-resize /path/to/olddisk.img newdisk.img --expand /dev/sda1\n"
" qemu-kvm -m 1024 -hda newdisk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:344
msgid "Does the guest still boot? Try expanding other partitions."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:346
msgid "B<*> Sparsify a guest disk."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:348
msgid "Using L<virt-sparsify(1)>, make a disk image more sparse:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:350
#, no-wrap
msgid ""
" virt-sparsify /path/to/olddisk.img newdisk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:352
msgid ""
"Is C<newdisk.img> still bootable after sparsifying? Is the resulting disk "
"image smaller (use C<du> to check)?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:355
msgid "B<*> \"sysprep\" a B<shut off> Linux guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:357
msgid ""
"B<Note> that this really will mess up an existing guest, so it's better to "
"clone the guest before trying this."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:360
#, no-wrap
msgid ""
" virt-sysprep --hostname newhost.example.com -a /path/to/disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:362
msgid ""
"Was the sysprep successful? After booting, what changes were made and were "
"they successful?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:365
msgid "Dump the Windows Registry from your Windows guests."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:367
msgid ""
"Use L<virt-win-reg(1)> to dump out the Windows Registry from any Windows "
"guests that you have."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:370
#, no-wrap
msgid ""
" virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\Software' |\n"
"   less\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:373
#, no-wrap
msgid ""
" virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\System' |\n"
"   less\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:376
msgid "Does the output match running C<regedit> inside the guest?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:378
msgid ""
"A recent feature is the ability to dump user registries, so try this, "
"replacing I<username> with the name of a local user in the guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:381
#, no-wrap
msgid ""
" virt-win-reg --unsafe-printable-strings WindowsGuest 'HKEY_USERS\\username' |\n"
"   less\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:386
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<guestfs-examples(3)>, L<http://libguestfs."
"org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<guestfs-examples(3)>, L<http://libguestfs."
"org/>."

#. type: =head2
#: ../fish/guestfish-actions.pod:26
msgid "acl-delete-def-file"
msgstr "acl-delete-def-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:28
#, no-wrap
msgid ""
" acl-delete-def-file dir\n"
"\n"
msgstr ""
" acl-delete-def-file каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:30 ../src/guestfs-actions.pod:32
msgid ""
"This function deletes the default POSIX Access Control List (ACL)  attached "
"to directory C<dir>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:33
msgid "acl-get-file"
msgstr "acl-get-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:35
#, no-wrap
msgid ""
" acl-get-file path acltype\n"
"\n"
msgstr ""
" acl-get-file шлях тип-acl\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:37 ../src/guestfs-actions.pod:46
msgid ""
"This function returns the POSIX Access Control List (ACL) attached to "
"C<path>.  The ACL is returned in \"long text form\" (see L<acl(5)>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:40 ../fish/guestfish-actions.pod:63
#: ../src/guestfs-actions.pod:49 ../src/guestfs-actions.pod:81
msgid "The C<acltype> parameter may be:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:44 ../fish/guestfish-actions.pod:67
#: ../src/guestfs-actions.pod:53 ../src/guestfs-actions.pod:85
msgid "C<access>"
msgstr "C<access>"

#. type: textblock
#: ../fish/guestfish-actions.pod:46 ../src/guestfs-actions.pod:55
msgid ""
"Return the ordinary (access) ACL for any file, directory or other filesystem "
"object."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:49 ../fish/guestfish-actions.pod:72
#: ../src/guestfs-actions.pod:58 ../src/guestfs-actions.pod:90
msgid "C<default>"
msgstr "C<default>"

#. type: textblock
#: ../fish/guestfish-actions.pod:51 ../src/guestfs-actions.pod:60
msgid ""
"Return the default ACL.  Normally this only makes sense if C<path> is a "
"directory."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:56
msgid "acl-set-file"
msgstr "acl-set-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:58
#, no-wrap
msgid ""
" acl-set-file path acltype acl\n"
"\n"
msgstr ""
" acl-set-file шлях тип-acl acl\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:60 ../src/guestfs-actions.pod:78
msgid ""
"This function sets the POSIX Access Control List (ACL) attached to C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:69 ../src/guestfs-actions.pod:87
msgid ""
"Set the ordinary (access) ACL for any file, directory or other filesystem "
"object."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:74 ../src/guestfs-actions.pod:92
msgid ""
"Set the default ACL.  Normally this only makes sense if C<path> is a "
"directory."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:79 ../src/guestfs-actions.pod:97
msgid ""
"The C<acl> parameter is the new ACL in either \"long text form\" or \"short "
"text form\" (see L<acl(5)>).  The new ACL completely replaces any previous "
"ACL on the file.  The ACL must contain the full Unix permissions (eg. C<u::"
"rwx,g::rx,o::rx>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:84 ../src/guestfs-actions.pod:102
msgid ""
"If you are specifying individual users or groups, then the mask field is "
"also required (eg. C<m::rwx>), followed by the C<u:I<ID>:...> and/or C<g:"
"I<ID>:...> field(s).  A full ACL string might therefore look like this:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:89 ../src/guestfs-actions.pod:107
#, no-wrap
msgid ""
" u::rwx,g::rwx,o::rwx,m::rwx,u:500:rwx,g:500:rwx\n"
" \\ Unix permissions / \\mask/ \\      ACL        /\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:92
msgid ""
"You should use numeric UIDs and GIDs.  To map usernames and groupnames to "
"the correct numeric ID in the context of the guest, use the Augeas functions "
"(see L</aug-init>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:96
msgid "add-cdrom"
msgstr "add-cdrom"

#. type: verbatim
#: ../fish/guestfish-actions.pod:98
#, no-wrap
msgid ""
" add-cdrom filename\n"
"\n"
msgstr ""
" add-cdrom назва_файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:100 ../src/guestfs-actions.pod:131
msgid "This function adds a virtual CD-ROM disk image to the guest."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:102
msgid ""
"The image is added as read-only drive, so this function is equivalent of L</"
"add-drive-ro>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:105
msgid ""
"I<This function is deprecated.> In new code, use the L</add-drive-ro> call "
"instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:108 ../fish/guestfish-actions.pod:488
#: ../fish/guestfish-actions.pod:518 ../fish/guestfish-actions.pod:961
#: ../fish/guestfish-actions.pod:1518 ../fish/guestfish-actions.pod:1594
#: ../fish/guestfish-actions.pod:1828 ../fish/guestfish-actions.pod:1856
#: ../fish/guestfish-actions.pod:1873 ../fish/guestfish-actions.pod:1935
#: ../fish/guestfish-actions.pod:1981 ../fish/guestfish-actions.pod:1998
#: ../fish/guestfish-actions.pod:2352 ../fish/guestfish-actions.pod:2546
#: ../fish/guestfish-actions.pod:2560 ../fish/guestfish-actions.pod:2680
#: ../fish/guestfish-actions.pod:2843 ../fish/guestfish-actions.pod:3859
#: ../fish/guestfish-actions.pod:4280 ../fish/guestfish-actions.pod:4648
#: ../fish/guestfish-actions.pod:4673 ../fish/guestfish-actions.pod:5196
#: ../fish/guestfish-actions.pod:5212 ../fish/guestfish-actions.pod:5228
#: ../fish/guestfish-actions.pod:5244 ../fish/guestfish-actions.pod:5257
#: ../fish/guestfish-actions.pod:5270 ../fish/guestfish-actions.pod:5348
#: ../fish/guestfish-actions.pod:5485 ../fish/guestfish-actions.pod:5498
#: ../fish/guestfish-actions.pod:5823 ../fish/guestfish-actions.pod:6657
#: ../fish/guestfish-actions.pod:6802 ../fish/guestfish-actions.pod:6821
#: ../fish/guestfish-actions.pod:7033 ../fish/guestfish-actions.pod:7191
#: ../fish/guestfish-actions.pod:7211 ../fish/guestfish-actions.pod:7230
#: ../fish/guestfish-actions.pod:7268 ../fish/guestfish-actions.pod:7335
#: ../fish/guestfish-actions.pod:7616 ../fish/guestfish-actions.pod:7632
#: ../fish/guestfish-actions.pod:7770 ../fish/guestfish-actions.pod:7786
#: ../fish/guestfish-actions.pod:8203 ../fish/guestfish-actions.pod:8279
#: ../fish/guestfish-actions.pod:8296 ../fish/guestfish-actions.pod:8371
#: ../fish/guestfish-actions.pod:8388 ../fish/guestfish-actions.pod:8407
#: ../fish/guestfish-actions.pod:8424 ../fish/guestfish-actions.pod:8441
#: ../src/guestfs-actions.pod:127 ../src/guestfs-actions.pod:614
#: ../src/guestfs-actions.pod:684 ../src/guestfs-actions.pod:1329
#: ../src/guestfs-actions.pod:2438 ../src/guestfs-actions.pod:2578
#: ../src/guestfs-actions.pod:2985 ../src/guestfs-actions.pod:3025
#: ../src/guestfs-actions.pod:3051 ../src/guestfs-actions.pod:3139
#: ../src/guestfs-actions.pod:3207 ../src/guestfs-actions.pod:3233
#: ../src/guestfs-actions.pod:3732 ../src/guestfs-actions.pod:3983
#: ../src/guestfs-actions.pod:4004 ../src/guestfs-actions.pod:4192
#: ../src/guestfs-actions.pod:4498 ../src/guestfs-actions.pod:5852
#: ../src/guestfs-actions.pod:6791 ../src/guestfs-actions.pod:7406
#: ../src/guestfs-actions.pod:7434 ../src/guestfs-actions.pod:8316
#: ../src/guestfs-actions.pod:8344 ../src/guestfs-actions.pod:8369
#: ../src/guestfs-actions.pod:8392 ../src/guestfs-actions.pod:8416
#: ../src/guestfs-actions.pod:8437 ../src/guestfs-actions.pod:8576
#: ../src/guestfs-actions.pod:8848 ../src/guestfs-actions.pod:8872
#: ../src/guestfs-actions.pod:9526 ../src/guestfs-actions.pod:10882
#: ../src/guestfs-actions.pod:11105 ../src/guestfs-actions.pod:11130
#: ../src/guestfs-actions.pod:11381 ../src/guestfs-actions.pod:11590
#: ../src/guestfs-actions.pod:11631 ../src/guestfs-actions.pod:11662
#: ../src/guestfs-actions.pod:11722 ../src/guestfs-actions.pod:11824
#: ../src/guestfs-actions.pod:12346 ../src/guestfs-actions.pod:12367
#: ../src/guestfs-actions.pod:12582 ../src/guestfs-actions.pod:12603
#: ../src/guestfs-actions.pod:13212 ../src/guestfs-actions.pod:13334
#: ../src/guestfs-actions.pod:13557 ../src/guestfs-actions.pod:13583
#: ../src/guestfs-actions.pod:13706 ../src/guestfs-actions.pod:13732
#: ../src/guestfs-actions.pod:13758 ../src/guestfs-actions.pod:13785
#: ../src/guestfs-actions.pod:13811
msgid ""
"Deprecated functions will not be removed from the API, but the fact that "
"they are deprecated indicates that there are problems with correct use of "
"these functions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:112
msgid "add-domain"
msgstr "add-domain"

#. type: =head2
#: ../fish/guestfish-actions.pod:114
msgid "domain"
msgstr "домен"

#. type: verbatim
#: ../fish/guestfish-actions.pod:116
#, no-wrap
msgid ""
" add-domain dom [libvirturi:..] [readonly:true|false] [iface:..] [live:true|false] [allowuuid:true|false] [readonlydisk:..] [cachemode:..] [discard:..] [copyonread:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:118
msgid ""
"This function adds the disk(s) attached to the named libvirt domain C<dom>.  "
"It works by connecting to libvirt, requesting the domain and domain XML from "
"libvirt, parsing it for disks, and calling L</add-drive-opts> on each one."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:123 ../src/guestfs-actions.pod:167
msgid ""
"The number of disks added is returned.  This operation is atomic: if an "
"error is returned, then no disks are added."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:126 ../src/guestfs-actions.pod:170
msgid ""
"This function does some minimal checks to make sure the libvirt domain is "
"not running (unless C<readonly> is true).  In a future version we will try "
"to acquire the libvirt lock on each disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:130 ../src/guestfs-actions.pod:174
msgid ""
"Disks must be accessible locally.  This often means that adding disks from a "
"remote libvirt connection (see L<http://libvirt.org/remote.html>)  will fail "
"unless those disks are accessible via the same device path locally too."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:135 ../src/guestfs-actions.pod:179
msgid ""
"The optional C<libvirturi> parameter sets the libvirt URI (see L<http://"
"libvirt.org/uri.html>).  If this is not set then we connect to the default "
"libvirt URI (or one set through an environment variable, see the libvirt "
"documentation for full details)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:141 ../src/guestfs-actions.pod:185
msgid ""
"The optional C<live> flag controls whether this call will try to connect to "
"a running virtual machine C<guestfsd> process if it sees a suitable "
"E<lt>channelE<gt> element in the libvirt XML definition.  The default (if "
"the flag is omitted) is never to try.  See L<guestfs(3)/ATTACHING TO RUNNING "
"DAEMONS> for more information."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:148 ../src/guestfs-actions.pod:192
msgid ""
"If the C<allowuuid> flag is true (default is false) then a UUID I<may> be "
"passed instead of the domain name.  The C<dom> string is treated as a UUID "
"first and looked up, and if that lookup fails then we treat C<dom> as a name "
"as usual."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:153 ../src/guestfs-actions.pod:197
msgid ""
"The optional C<readonlydisk> parameter controls what we do for disks which "
"are marked E<lt>readonly/E<gt> in the libvirt XML.  Possible values are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:159 ../src/guestfs-actions.pod:203
msgid "readonlydisk = \"error\""
msgstr "readonlydisk = \"error\""

#. type: textblock
#: ../fish/guestfish-actions.pod:161 ../fish/guestfish-actions.pod:172
#: ../fish/guestfish-actions.pod:183 ../src/guestfs-actions.pod:205
#: ../src/guestfs-actions.pod:216 ../src/guestfs-actions.pod:227
msgid "If C<readonly> is false:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:163 ../src/guestfs-actions.pod:207
msgid ""
"The whole call is aborted with an error if any disk with the E<lt>readonly/"
"E<gt> flag is found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:166 ../fish/guestfish-actions.pod:177
#: ../fish/guestfish-actions.pod:187 ../src/guestfs-actions.pod:210
#: ../src/guestfs-actions.pod:221 ../src/guestfs-actions.pod:231
msgid "If C<readonly> is true:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:168 ../fish/guestfish-actions.pod:179
#: ../fish/guestfish-actions.pod:189 ../src/guestfs-actions.pod:212
#: ../src/guestfs-actions.pod:223 ../src/guestfs-actions.pod:233
msgid "Disks with the E<lt>readonly/E<gt> flag are added read-only."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:170 ../src/guestfs-actions.pod:214
msgid "readonlydisk = \"read\""
msgstr "readonlydisk = \"read\""

#. type: textblock
#: ../fish/guestfish-actions.pod:174 ../src/guestfs-actions.pod:218
msgid ""
"Disks with the E<lt>readonly/E<gt> flag are added read-only.  Other disks "
"are added read/write."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:181 ../src/guestfs-actions.pod:225
msgid "readonlydisk = \"write\" (default)"
msgstr "readonlydisk = \"write\" (типово)"

#. type: textblock
#: ../fish/guestfish-actions.pod:185 ../src/guestfs-actions.pod:229
msgid "Disks with the E<lt>readonly/E<gt> flag are added read/write."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:191 ../src/guestfs-actions.pod:235
msgid "readonlydisk = \"ignore\""
msgstr "readonlydisk = \"ignore\""

#. type: textblock
#: ../fish/guestfish-actions.pod:193 ../src/guestfs-actions.pod:237
msgid "If C<readonly> is true or false:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:195 ../src/guestfs-actions.pod:239
msgid "Disks with the E<lt>readonly/E<gt> flag are skipped."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:199
msgid ""
"The other optional parameters are passed directly through to L</add-drive-"
"opts>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:202 ../fish/guestfish-actions.pod:465
#: ../fish/guestfish-actions.pod:506 ../fish/guestfish-actions.pod:1025
#: ../fish/guestfish-actions.pod:1040 ../fish/guestfish-actions.pod:1368
#: ../fish/guestfish-actions.pod:1389 ../fish/guestfish-actions.pod:1440
#: ../fish/guestfish-actions.pod:1471 ../fish/guestfish-actions.pod:1480
#: ../fish/guestfish-actions.pod:1489 ../fish/guestfish-actions.pod:1503
#: ../fish/guestfish-actions.pod:1575 ../fish/guestfish-actions.pod:1681
#: ../fish/guestfish-actions.pod:1815 ../fish/guestfish-actions.pod:2330
#: ../fish/guestfish-actions.pod:2825 ../fish/guestfish-actions.pod:3029
#: ../fish/guestfish-actions.pod:3493 ../fish/guestfish-actions.pod:4016
#: ../fish/guestfish-actions.pod:4033 ../fish/guestfish-actions.pod:4060
#: ../fish/guestfish-actions.pod:4077 ../fish/guestfish-actions.pod:4095
#: ../fish/guestfish-actions.pod:4119 ../fish/guestfish-actions.pod:5028
#: ../fish/guestfish-actions.pod:5179 ../fish/guestfish-actions.pod:5331
#: ../fish/guestfish-actions.pod:5364 ../fish/guestfish-actions.pod:5470
#: ../fish/guestfish-actions.pod:5537 ../fish/guestfish-actions.pod:5585
#: ../fish/guestfish-actions.pod:5615 ../fish/guestfish-actions.pod:5759
#: ../fish/guestfish-actions.pod:5775 ../fish/guestfish-actions.pod:5811
#: ../fish/guestfish-actions.pod:6399 ../fish/guestfish-actions.pod:6536
#: ../fish/guestfish-actions.pod:6560 ../fish/guestfish-actions.pod:6591
#: ../fish/guestfish-actions.pod:6778 ../fish/guestfish-actions.pod:7522
#: ../fish/guestfish-actions.pod:7566 ../fish/guestfish-actions.pod:7602
#: ../fish/guestfish-actions.pod:7744 ../fish/guestfish-actions.pod:7823
#: ../fish/guestfish-actions.pod:7844 ../fish/guestfish-actions.pod:8221
#: ../fish/guestfish-actions.pod:8233 ../fish/guestfish-actions.pod:8264
msgid ""
"This command has one or more optional arguments.  See L</OPTIONAL ARGUMENTS>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:204
msgid "add-drive"
msgstr "add-drive"

#. type: =head2
#: ../fish/guestfish-actions.pod:206
msgid "add"
msgstr "add"

#. type: =head2
#: ../fish/guestfish-actions.pod:208
msgid "add-drive-opts"
msgstr "add-drive-opts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:210
#, no-wrap
msgid ""
" add-drive filename [readonly:true|false] [format:..] [iface:..] [name:..] [label:..] [protocol:..] [server:..] [username:..] [secret:..] [cachemode:..] [discard:..] [copyonread:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:212 ../src/guestfs-actions.pod:310
msgid ""
"This function adds a disk image called C<filename> to the handle.  "
"C<filename> may be a regular host file or a host device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:215
msgid ""
"When this function is called before L</launch> (the usual case) then the "
"first time you call this function, the disk appears in the API as C</dev/"
"sda>, the second time as C</dev/sdb>, and so on."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:220 ../src/guestfs-actions.pod:318
msgid ""
"In libguestfs E<ge> 1.20 you can also call this function after launch (with "
"some restrictions).  This is called \"hotplugging\".  When hotplugging, you "
"must specify a C<label> so that the new disk gets a predictable name.  For "
"more information see L<guestfs(3)/HOTPLUGGING>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:226 ../src/guestfs-actions.pod:324
msgid ""
"You don't necessarily need to be root when using libguestfs.  However you "
"obviously do need sufficient permissions to access the filename for whatever "
"operations you want to perform (ie. read access if you just want to read the "
"image or write access if you want to modify the image)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:232 ../src/guestfs-actions.pod:330
msgid "This call checks that C<filename> exists."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:234 ../src/guestfs-actions.pod:332
msgid ""
"C<filename> may be the special string C<\"/dev/null\">.  See L<guestfs(3)/"
"NULL DISKS>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:237 ../fish/guestfish-actions.pod:5293
#: ../fish/guestfish-actions.pod:6521 ../fish/guestfish-actions.pod:7503
#: ../src/guestfs-actions.pod:335 ../src/guestfs-actions.pod:8499
#: ../src/guestfs-actions.pod:10627 ../src/guestfs-actions.pod:12098
msgid "The optional arguments are:"
msgstr "Додатковими аргументами є:"

#. type: =item
#: ../fish/guestfish-actions.pod:241 ../src/guestfs-actions.pod:339
msgid "C<readonly>"
msgstr "C<readonly>"

#. type: textblock
#: ../fish/guestfish-actions.pod:243 ../src/guestfs-actions.pod:341
msgid ""
"If true then the image is treated as read-only.  Writes are still allowed, "
"but they are stored in a temporary snapshot overlay which is discarded at "
"the end.  The disk that you add is not modified."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:247 ../src/guestfs-actions.pod:345
#: ../src/guestfs.pod:4331
msgid "C<format>"
msgstr "C<format>"

#. type: textblock
#: ../fish/guestfish-actions.pod:249
msgid ""
"This forces the image format.  If you omit this (or use L</add-drive> or L</"
"add-drive-ro>) then the format is automatically detected.  Possible formats "
"include C<raw> and C<qcow2>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:253 ../src/guestfs-actions.pod:351
msgid ""
"Automatic detection of the format opens you up to a potential security hole "
"when dealing with untrusted raw-format images.  See CVE-2010-3851 and "
"RHBZ#642934.  Specifying the format closes this security hole."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:258 ../src/guestfs-actions.pod:356
msgid "C<iface>"
msgstr "C<iface>"

#. type: textblock
#: ../fish/guestfish-actions.pod:260
msgid ""
"This rarely-used option lets you emulate the behaviour of the deprecated L</"
"add-drive-with-if> call (q.v.)"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:263 ../fish/guestfish-actions.pod:5056
#: ../p2v/virt-p2v.pod:494 ../src/guestfs-actions.pod:361
#: ../src/guestfs-actions.pod:8060
msgid "C<name>"
msgstr "C<name>"

#. type: textblock
#: ../fish/guestfish-actions.pod:265 ../src/guestfs-actions.pod:363
msgid ""
"The name the drive had in the original guest, e.g. C</dev/sdb>.  This is "
"used as a hint to the guest inspection process if it is available."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:269 ../src/guestfs-actions.pod:367
msgid "C<label>"
msgstr "C<label>"

#. type: textblock
#: ../fish/guestfish-actions.pod:271 ../src/guestfs-actions.pod:369
msgid ""
"Give the disk a label.  The label should be a unique, short string using "
"I<only> ASCII characters C<[a-zA-Z]>.  As well as its usual name in the API "
"(such as C</dev/sda>), the drive will also be named C</dev/disk/guestfs/"
"I<label>>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:276 ../src/guestfs-actions.pod:374
msgid "See L<guestfs(3)/DISK LABELS>."
msgstr "Див. L<guestfs(3)/МІТКИ ДИСКІВ>."

#. type: =item
#: ../fish/guestfish-actions.pod:278 ../src/guestfs-actions.pod:376
msgid "C<protocol>"
msgstr "C<protocol>"

#. type: textblock
#: ../fish/guestfish-actions.pod:280 ../src/guestfs-actions.pod:378
msgid ""
"The optional protocol argument can be used to select an alternate source "
"protocol."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:283 ../src/guestfs-actions.pod:381
msgid "See also: L<guestfs(3)/REMOTE STORAGE>."
msgstr "Див. також L<guestfs(3)/REMOTE STORAGE>."

#. type: =item
#: ../fish/guestfish-actions.pod:287 ../src/guestfs-actions.pod:385
msgid "C<protocol = \"file\">"
msgstr "C<protocol = \"file\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:289 ../src/guestfs-actions.pod:387
msgid ""
"C<filename> is interpreted as a local file or device.  This is the default "
"if the optional protocol parameter is omitted."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:293 ../src/guestfs-actions.pod:391
msgid "C<protocol = \"ftp\"|\"ftps\"|\"http\"|\"https\"|\"tftp\">"
msgstr "C<protocol = \"ftp\"|\"ftps\"|\"http\"|\"https\"|\"tftp\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:295 ../src/guestfs-actions.pod:393
msgid ""
"Connect to a remote FTP, HTTP or TFTP server.  The C<server> parameter must "
"also be supplied - see below."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:298 ../src/guestfs-actions.pod:396
msgid "See also: L<guestfs(3)/FTP, HTTP AND TFTP>"
msgstr "Див. також L<guestfs(3)/FTP, HTTP AND TFTP>"

#. type: =item
#: ../fish/guestfish-actions.pod:300 ../src/guestfs-actions.pod:398
msgid "C<protocol = \"gluster\">"
msgstr "C<protocol = \"gluster\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:302 ../src/guestfs-actions.pod:400
msgid ""
"Connect to the GlusterFS server.  The C<server> parameter must also be "
"supplied - see below."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:305 ../src/guestfs-actions.pod:403
msgid "See also: L<guestfs(3)/GLUSTER>"
msgstr "Див. також L<guestfs(3)/GLUSTER>."

#. type: =item
#: ../fish/guestfish-actions.pod:307 ../src/guestfs-actions.pod:405
msgid "C<protocol = \"iscsi\">"
msgstr "C<protocol = \"iscsi\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:309 ../src/guestfs-actions.pod:407
msgid ""
"Connect to the iSCSI server.  The C<server> parameter must also be supplied "
"- see below."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:312 ../src/guestfs-actions.pod:410
msgid "See also: L<guestfs(3)/ISCSI>."
msgstr "Див. також L<guestfs(3)/ISCSI>."

#. type: =item
#: ../fish/guestfish-actions.pod:314 ../src/guestfs-actions.pod:412
msgid "C<protocol = \"nbd\">"
msgstr "C<protocol = \"nbd\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:316 ../src/guestfs-actions.pod:414
msgid ""
"Connect to the Network Block Device server.  The C<server> parameter must "
"also be supplied - see below."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:319 ../src/guestfs-actions.pod:417
msgid "See also: L<guestfs(3)/NETWORK BLOCK DEVICE>."
msgstr "Див. також L<guestfs(3)/NETWORK BLOCK DEVICE>."

#. type: =item
#: ../fish/guestfish-actions.pod:321 ../src/guestfs-actions.pod:419
msgid "C<protocol = \"rbd\">"
msgstr "C<protocol = \"rbd\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:323 ../src/guestfs-actions.pod:421
msgid ""
"Connect to the Ceph (librbd/RBD) server.  The C<server> parameter must also "
"be supplied - see below.  The C<username> parameter may be supplied.  See "
"below.  The C<secret> parameter may be supplied.  See below."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:328 ../src/guestfs-actions.pod:426
msgid "See also: L<guestfs(3)/CEPH>."
msgstr "Див. також L<guestfs(3)/CEPH>."

#. type: =item
#: ../fish/guestfish-actions.pod:330 ../src/guestfs-actions.pod:428
msgid "C<protocol = \"sheepdog\">"
msgstr "C<protocol = \"sheepdog\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:332 ../src/guestfs-actions.pod:430
msgid ""
"Connect to the Sheepdog server.  The C<server> parameter may also be "
"supplied - see below."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:335 ../src/guestfs-actions.pod:433
msgid "See also: L<guestfs(3)/SHEEPDOG>."
msgstr "Див. також L<guestfs(3)/SHEEPDOG>."

#. type: =item
#: ../fish/guestfish-actions.pod:337 ../src/guestfs-actions.pod:435
msgid "C<protocol = \"ssh\">"
msgstr "C<protocol = \"ssh\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:339 ../src/guestfs-actions.pod:437
msgid "Connect to the Secure Shell (ssh) server."
msgstr "Встановити з’єднання з сервером Secure Shell (ssh)."

#. type: textblock
#: ../fish/guestfish-actions.pod:341 ../src/guestfs-actions.pod:439
msgid ""
"The C<server> parameter must be supplied.  The C<username> parameter may be "
"supplied.  See below."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:344 ../src/guestfs-actions.pod:442
msgid "See also: L<guestfs(3)/SSH>."
msgstr "Див. також L<guestfs(3)/SSH>."

#. type: =item
#: ../fish/guestfish-actions.pod:348 ../src/guestfs-actions.pod:446
#: ../v2v/virt-v2v.pod:699
msgid "C<server>"
msgstr "C<server>"

#. type: textblock
#: ../fish/guestfish-actions.pod:350 ../src/guestfs-actions.pod:448
msgid ""
"For protocols which require access to a remote server, this is a list of "
"server(s)."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:353 ../src/guestfs-actions.pod:451
#, no-wrap
msgid ""
" Protocol       Number of servers required\n"
" --------       --------------------------\n"
" file           List must be empty or param not used at all\n"
" ftp|ftps|http|https|tftp  Exactly one\n"
" gluster        Exactly one\n"
" iscsi          Exactly one\n"
" nbd            Exactly one\n"
" rbd            Zero or more\n"
" sheepdog       Zero or more\n"
" ssh            Exactly one\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:364 ../src/guestfs-actions.pod:462
msgid ""
"Each list element is a string specifying a server.  The string must be in "
"one of the following formats:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:367 ../src/guestfs-actions.pod:465
#, no-wrap
msgid ""
" hostname\n"
" hostname:port\n"
" tcp:hostname\n"
" tcp:hostname:port\n"
" unix:/path/to/socket\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:373 ../src/guestfs-actions.pod:471
msgid ""
"If the port number is omitted, then the standard port number for the "
"protocol is used (see C</etc/services>)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:376 ../fish/guestfish-actions.pod:6907
#: ../src/guestfs-actions.pod:474 ../src/guestfs-actions.pod:11249
msgid "C<username>"
msgstr "C<username>"

#. type: textblock
#: ../fish/guestfish-actions.pod:378 ../src/guestfs-actions.pod:476
msgid ""
"For the C<ftp>, C<ftps>, C<http>, C<https>, C<iscsi>, C<rbd>, C<ssh> and "
"C<tftp> protocols, this specifies the remote username."
msgstr ""
"Для протоколів C<ftp>, C<ftps>, C<http>, C<https>, C<iscsi>, C<rbd>, C<ssh> "
"та C<tftp> визначає ім’я користувача віддаленої системи."

#. type: textblock
#: ../fish/guestfish-actions.pod:381 ../src/guestfs-actions.pod:479
msgid ""
"If not given, then the local username is used for C<ssh>, and no "
"authentication is attempted for ceph.  But note this sometimes may give "
"unexpected results, for example if using the libvirt backend and if the "
"libvirt backend is configured to start the qemu appliance as a special user "
"such as C<qemu.qemu>.  If in doubt, specify the remote username you want."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:387 ../src/guestfs-actions.pod:485
msgid "C<secret>"
msgstr "C<secret>"

#. type: textblock
#: ../fish/guestfish-actions.pod:389 ../src/guestfs-actions.pod:487
msgid ""
"For the C<rbd> protocol only, this specifies the 'secret' to use when "
"connecting to the remote device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:392 ../src/guestfs-actions.pod:490
msgid ""
"If not given, then a secret matching the given username will be looked up in "
"the default keychain locations, or if no username is given, then no "
"authentication will be used."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:396 ../src/guestfs-actions.pod:494
msgid "C<cachemode>"
msgstr "C<cachemode>"

#. type: textblock
#: ../fish/guestfish-actions.pod:398 ../src/guestfs-actions.pod:496
msgid ""
"Choose whether or not libguestfs will obey sync operations (safe but slow)  "
"or not (unsafe but fast).  The possible values for this string are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:403 ../src/guestfs-actions.pod:501
msgid "C<cachemode = \"writeback\">"
msgstr "C<cachemode = \"writeback\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:407 ../src/guestfs-actions.pod:505
msgid ""
"Write operations in the API do not return until a L<write(2)> call has "
"completed in the host [but note this does not imply that anything gets "
"written to disk]."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:411 ../src/guestfs-actions.pod:509
msgid ""
"Sync operations in the API, including implicit syncs caused by filesystem "
"journalling, will not return until an L<fdatasync(2)> call has completed in "
"the host, indicating that data has been committed to disk."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:416 ../src/guestfs-actions.pod:514
msgid "C<cachemode = \"unsafe\">"
msgstr "C<cachemode = \"unsafe\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:418 ../src/guestfs-actions.pod:516
msgid ""
"In this mode, there are no guarantees.  Libguestfs may cache anything and "
"ignore sync requests.  This is suitable only for scratch or temporary disks."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:424 ../src/guestfs-actions.pod:522
msgid "C<discard>"
msgstr "C<discard>"

#. type: textblock
#: ../fish/guestfish-actions.pod:426
msgid ""
"Enable or disable discard (a.k.a. trim or unmap) support on this drive.  If "
"enabled, operations such as L</fstrim> will be able to discard / make thin / "
"punch holes in the underlying host file or device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:431 ../src/guestfs-actions.pod:529
msgid "Possible discard settings are:"
msgstr "Можливі варіанти параметрів відкидання:"

#. type: =item
#: ../fish/guestfish-actions.pod:435 ../src/guestfs-actions.pod:533
msgid "C<discard = \"disable\">"
msgstr "C<discard = \"disable\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:437 ../src/guestfs-actions.pod:535
msgid "Disable discard support.  This is the default."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:439 ../src/guestfs-actions.pod:537
msgid "C<discard = \"enable\">"
msgstr "C<discard = \"enable\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:441 ../src/guestfs-actions.pod:539
msgid "Enable discard support.  Fail if discard is not possible."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:443 ../src/guestfs-actions.pod:541
msgid "C<discard = \"besteffort\">"
msgstr "C<discard = \"besteffort\">"

#. type: textblock
#: ../fish/guestfish-actions.pod:445 ../src/guestfs-actions.pod:543
msgid ""
"Enable discard support if possible, but don't fail if it is not supported."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:448 ../src/guestfs-actions.pod:546
msgid ""
"Since not all backends and not all underlying systems support discard, this "
"is a good choice if you want to use discard if possible, but don't mind if "
"it doesn't work."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:454 ../src/guestfs-actions.pod:552
msgid "C<copyonread>"
msgstr "C<copyonread>"

#. type: textblock
#: ../fish/guestfish-actions.pod:456 ../src/guestfs-actions.pod:554
msgid ""
"The boolean parameter C<copyonread> enables copy-on-read support.  This only "
"affects disk formats which have backing files, and causes reads to be stored "
"in the overlay layer, speeding up multiple reads of the same area of disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:461 ../src/guestfs-actions.pod:559
msgid "The default is false."
msgstr "Типовим є значення false."

#. type: =head2
#: ../fish/guestfish-actions.pod:467
msgid "add-drive-ro"
msgstr "add-drive-ro"

#. type: =head2
#: ../fish/guestfish-actions.pod:469
msgid "add-ro"
msgstr "add-ro"

#. type: verbatim
#: ../fish/guestfish-actions.pod:471
#, no-wrap
msgid ""
" add-drive-ro filename\n"
"\n"
msgstr ""
" add-drive-ro назва_файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:473
msgid ""
"This function is the equivalent of calling L</add-drive-opts> with the "
"optional parameter C<GUESTFS_ADD_DRIVE_OPTS_READONLY> set to 1, so the disk "
"is added read-only, with the format being detected automatically."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:478
msgid "add-drive-ro-with-if"
msgstr "add-drive-ro-with-if"

#. type: verbatim
#: ../fish/guestfish-actions.pod:480
#, no-wrap
msgid ""
" add-drive-ro-with-if filename iface\n"
"\n"
msgstr ""
" add-drive-ro-with-if назва_файла інтерфейс\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:482
msgid ""
"This is the same as L</add-drive-ro> but it allows you to specify the QEMU "
"interface emulation to use at run time."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:485 ../fish/guestfish-actions.pod:515
msgid ""
"I<This function is deprecated.> In new code, use the L</add-drive> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:492
msgid "add-drive-scratch"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:494
msgid "scratch"
msgstr "scratch"

#. type: verbatim
#: ../fish/guestfish-actions.pod:496
#, no-wrap
msgid ""
" add-drive-scratch size [name:..] [label:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:498 ../src/guestfs-actions.pod:640
msgid ""
"This command adds a temporary scratch drive to the handle.  The C<size> "
"parameter is the virtual size (in bytes).  The scratch drive is blank "
"initially (all reads return zeroes until you start writing to it).  The "
"drive is deleted when the handle is closed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:503
msgid ""
"The optional arguments C<name> and C<label> are passed through to L</add-"
"drive>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:508
msgid "add-drive-with-if"
msgstr "add-drive-with-if"

#. type: verbatim
#: ../fish/guestfish-actions.pod:510
#, no-wrap
msgid ""
" add-drive-with-if filename iface\n"
"\n"
msgstr ""
" add-drive-with-if назва_файла інтерфейс\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:512
msgid ""
"This is the same as L</add-drive> but it allows you to specify the QEMU "
"interface emulation to use at run time."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:522
msgid "aug-clear"
msgstr "aug-clear"

#. type: verbatim
#: ../fish/guestfish-actions.pod:524
#, no-wrap
msgid ""
" aug-clear augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:526 ../src/guestfs-actions.pod:701
msgid ""
"Set the value associated with C<path> to C<NULL>.  This is the same as the "
"L<augtool(1)> C<clear> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:529
msgid "aug-close"
msgstr "aug-close"

#. type: verbatim
#: ../fish/guestfish-actions.pod:531
#, no-wrap
msgid ""
" aug-close\n"
"\n"
msgstr ""
" aug-close\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:533
msgid ""
"Close the current Augeas handle and free up any resources used by it.  After "
"calling this, you have to call L</aug-init> again before you can use any "
"other Augeas functions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:538
msgid "aug-defnode"
msgstr "aug-defnode"

#. type: verbatim
#: ../fish/guestfish-actions.pod:540
#, no-wrap
msgid ""
" aug-defnode name expr val\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:542 ../src/guestfs-actions.pod:730
msgid ""
"Defines a variable C<name> whose value is the result of evaluating C<expr>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:545
msgid ""
"If C<expr> evaluates to an empty nodeset, a node is created, equivalent to "
"calling L</aug-set> C<expr>, C<value>.  C<name> will be the nodeset "
"containing that single node."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:549 ../src/guestfs-actions.pod:737
msgid ""
"On success this returns a pair containing the number of nodes in the "
"nodeset, and a boolean flag if a node was created."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:553
msgid "aug-defvar"
msgstr "aug-defvar"

#. type: verbatim
#: ../fish/guestfish-actions.pod:555
#, no-wrap
msgid ""
" aug-defvar name expr\n"
"\n"
msgstr ""
" aug-defvar назва вираз\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:557 ../src/guestfs-actions.pod:754
msgid ""
"Defines an Augeas variable C<name> whose value is the result of evaluating "
"C<expr>.  If C<expr> is NULL, then C<name> is undefined."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:561 ../src/guestfs-actions.pod:758
msgid ""
"On success this returns the number of nodes in C<expr>, or C<0> if C<expr> "
"evaluates to something which is not a nodeset."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:564
msgid "aug-get"
msgstr "aug-get"

#. type: verbatim
#: ../fish/guestfish-actions.pod:566
#, no-wrap
msgid ""
" aug-get augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:568 ../src/guestfs-actions.pod:771
msgid ""
"Look up the value associated with C<path>.  If C<path> matches exactly one "
"node, the C<value> is returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:571
msgid "aug-init"
msgstr "aug-init"

#. type: verbatim
#: ../fish/guestfish-actions.pod:573
#, no-wrap
msgid ""
" aug-init root flags\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:575 ../src/guestfs-actions.pod:786
msgid ""
"Create a new Augeas handle for editing configuration files.  If there was "
"any previous Augeas handle associated with this guestfs session, then it is "
"closed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:579
msgid "You must call this before using any other L</aug-*> commands."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:582 ../src/guestfs-actions.pod:793
msgid ""
"C<root> is the filesystem root.  C<root> must not be NULL, use C</> instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:585 ../src/guestfs-actions.pod:796
msgid ""
"The flags are the same as the flags defined in E<lt>augeas.hE<gt>, the "
"logical I<or> of the following integers:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:591 ../src/guestfs-actions.pod:802
msgid "C<AUG_SAVE_BACKUP> = 1"
msgstr "C<AUG_SAVE_BACKUP> = 1"

#. type: textblock
#: ../fish/guestfish-actions.pod:593 ../src/guestfs-actions.pod:804
msgid "Keep the original file with a C<.augsave> extension."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:595 ../src/guestfs-actions.pod:806
msgid "C<AUG_SAVE_NEWFILE> = 2"
msgstr "C<AUG_SAVE_NEWFILE> = 2"

#. type: textblock
#: ../fish/guestfish-actions.pod:597 ../src/guestfs-actions.pod:808
msgid ""
"Save changes into a file with extension C<.augnew>, and do not overwrite "
"original.  Overrides C<AUG_SAVE_BACKUP>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:600 ../src/guestfs-actions.pod:811
msgid "C<AUG_TYPE_CHECK> = 4"
msgstr "C<AUG_TYPE_CHECK> = 4"

#. type: textblock
#: ../fish/guestfish-actions.pod:602 ../src/guestfs-actions.pod:813
msgid "Typecheck lenses."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:604
msgid ""
"This option is only useful when debugging Augeas lenses.  Use of this option "
"may require additional memory for the libguestfs appliance.  You may need to "
"set the C<LIBGUESTFS_MEMSIZE> environment variable or call L</set-memsize>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:609 ../src/guestfs-actions.pod:820
msgid "C<AUG_NO_STDINC> = 8"
msgstr "C<AUG_NO_STDINC> = 8"

#. type: textblock
#: ../fish/guestfish-actions.pod:611 ../src/guestfs-actions.pod:822
msgid "Do not use standard load path for modules."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:613 ../src/guestfs-actions.pod:824
msgid "C<AUG_SAVE_NOOP> = 16"
msgstr "C<AUG_SAVE_NOOP> = 16"

#. type: textblock
#: ../fish/guestfish-actions.pod:615 ../src/guestfs-actions.pod:826
msgid "Make save a no-op, just record what would have been changed."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:617 ../src/guestfs-actions.pod:828
msgid "C<AUG_NO_LOAD> = 32"
msgstr "C<AUG_NO_LOAD> = 32"

#. type: textblock
#: ../fish/guestfish-actions.pod:619
msgid "Do not load the tree in L</aug-init>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:623
msgid "To close the handle, you can call L</aug-close>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:625 ../src/guestfs-actions.pod:836
msgid "To find out more about Augeas, see L<http://augeas.net/>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:627
msgid "aug-insert"
msgstr "aug-insert"

#. type: verbatim
#: ../fish/guestfish-actions.pod:629
#, no-wrap
msgid ""
" aug-insert augpath label true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:631 ../src/guestfs-actions.pod:850
msgid ""
"Create a new sibling C<label> for C<path>, inserting it into the tree before "
"or after C<path> (depending on the boolean flag C<before>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:635 ../src/guestfs-actions.pod:854
msgid ""
"C<path> must match exactly one existing node in the tree, and C<label> must "
"be a label, ie. not contain C</>, C<*> or end with a bracketed index C<[N]>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:639
msgid "aug-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:641
#, no-wrap
msgid ""
" aug-label augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:643 ../src/guestfs-actions.pod:868
msgid ""
"The label (name of the last element) of the Augeas path expression "
"C<augpath> is returned.  C<augpath> must match exactly one node, else this "
"function returns an error."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:647
msgid "aug-load"
msgstr "aug-load"

#. type: verbatim
#: ../fish/guestfish-actions.pod:649
#, no-wrap
msgid ""
" aug-load\n"
"\n"
msgstr ""
" aug-load\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:651 ../src/guestfs-actions.pod:882
msgid "Load files into the tree."
msgstr "Завантажити файли до ієрархії."

#. type: textblock
#: ../fish/guestfish-actions.pod:653 ../src/guestfs-actions.pod:884
msgid "See C<aug_load> in the Augeas documentation for the full gory details."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:656
msgid "aug-ls"
msgstr "aug-ls"

#. type: verbatim
#: ../fish/guestfish-actions.pod:658
#, no-wrap
msgid ""
" aug-ls augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:660
msgid ""
"This is just a shortcut for listing L</aug-match> C<path/*> and sorting the "
"resulting nodes into alphabetical order."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:663
msgid "aug-match"
msgstr "aug-match"

#. type: verbatim
#: ../fish/guestfish-actions.pod:665
#, no-wrap
msgid ""
" aug-match augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:667 ../src/guestfs-actions.pod:912
msgid ""
"Returns a list of paths which match the path expression C<path>.  The "
"returned paths are sufficiently qualified so that they match exactly one "
"node in the current tree."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:671
msgid "aug-mv"
msgstr "aug-mv"

#. type: verbatim
#: ../fish/guestfish-actions.pod:673
#, no-wrap
msgid ""
" aug-mv src dest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:675 ../src/guestfs-actions.pod:929
msgid ""
"Move the node C<src> to C<dest>.  C<src> must match exactly one node.  "
"C<dest> is overwritten if it exists."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:678
msgid "aug-rm"
msgstr "aug-rm"

#. type: verbatim
#: ../fish/guestfish-actions.pod:680
#, no-wrap
msgid ""
" aug-rm augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:682 ../src/guestfs-actions.pod:942
msgid "Remove C<path> and all of its children."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:684 ../src/guestfs-actions.pod:944
msgid "On success this returns the number of entries which were removed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:686
msgid "aug-save"
msgstr "aug-save"

#. type: verbatim
#: ../fish/guestfish-actions.pod:688
#, no-wrap
msgid ""
" aug-save\n"
"\n"
msgstr ""
" aug-save\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:690 ../src/guestfs-actions.pod:955
msgid "This writes all pending changes to disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:692
msgid ""
"The flags which were passed to L</aug-init> affect exactly how files are "
"saved."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:695
msgid "aug-set"
msgstr "aug-set"

#. type: verbatim
#: ../fish/guestfish-actions.pod:697
#, no-wrap
msgid ""
" aug-set augpath val\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:699 ../src/guestfs-actions.pod:971
msgid "Set the value associated with C<path> to C<val>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:701
msgid ""
"In the Augeas API, it is possible to clear a node by setting the value to "
"NULL.  Due to an oversight in the libguestfs API you cannot do that with "
"this call.  Instead you must use the L</aug-clear> call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:706
msgid "aug-setm"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:708
#, no-wrap
msgid ""
" aug-setm base sub val\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:710 ../src/guestfs-actions.pod:990
msgid ""
"Change multiple Augeas nodes in a single operation.  C<base> is an "
"expression matching multiple nodes.  C<sub> is a path expression relative to "
"C<base>.  All nodes matching C<base> are found, and then for each node, "
"C<sub> is changed to C<val>.  C<sub> may also be C<NULL> in which case the "
"C<base> nodes are modified."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:716 ../src/guestfs-actions.pod:996
msgid "This returns the number of nodes modified."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:718
msgid "available"
msgstr "available"

#. type: verbatim
#: ../fish/guestfish-actions.pod:720
#, no-wrap
msgid ""
" available 'groups ...'\n"
"\n"
msgstr ""
" available 'groups ...'\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:722 ../src/guestfs-actions.pod:1008
msgid ""
"This command is used to check the availability of some groups of "
"functionality in the appliance, which not all builds of the libguestfs "
"appliance will be able to provide."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:726
msgid ""
"The libguestfs groups, and the functions that those groups correspond to, "
"are listed in L<guestfs(3)/AVAILABILITY>.  You can also fetch this list at "
"runtime by calling L</available-all-groups>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:731 ../src/guestfs-actions.pod:1017
msgid ""
"The argument C<groups> is a list of group names, eg: C<[\"inotify\", \"augeas"
"\"]> would check for the availability of the Linux inotify functions and "
"Augeas (configuration file editing) functions."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:736 ../src/guestfs-actions.pod:1022
msgid "The command returns no error if I<all> requested groups are available."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:738 ../src/guestfs-actions.pod:1024
msgid ""
"It fails with an error if one or more of the requested groups is unavailable "
"in the appliance."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:741 ../src/guestfs-actions.pod:1027
msgid ""
"If an unknown group name is included in the list of groups then an error is "
"always returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:744 ../src/guestfs-actions.pod:1030
msgid "I<Notes:>"
msgstr "I<Нотатки:>"

#. type: textblock
#: ../fish/guestfish-actions.pod:750
msgid ""
"L</feature-available> is the same as this call, but with a slightly simpler "
"to use API: that call returns a boolean true/false instead of throwing an "
"error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:756
msgid "You must call L</launch> before calling this function."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:758 ../src/guestfs-actions.pod:1044
msgid ""
"The reason is because we don't know what groups are supported by the "
"appliance/daemon until it is running and can be queried."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:764 ../src/guestfs-actions.pod:1050
msgid ""
"If a group of functions is available, this does not necessarily mean that "
"they will work.  You still have to check for errors when calling individual "
"API functions even if they are available."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:771 ../src/guestfs-actions.pod:1057
msgid ""
"It is usually the job of distro packagers to build complete functionality "
"into the libguestfs appliance.  Upstream libguestfs, if built from source "
"with all requirements satisfied, will support everything."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:778
msgid ""
"This call was added in version C<1.0.80>.  In previous versions of "
"libguestfs all you could do would be to speculatively execute a command to "
"find out if the daemon implemented it.  See also L</version>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:785
msgid "See also L</filesystem-available>."
msgstr "Див також L</filesystem-available>."

#. type: =head2
#: ../fish/guestfish-actions.pod:787
msgid "available-all-groups"
msgstr "available-all-groups"

#. type: verbatim
#: ../fish/guestfish-actions.pod:789
#, no-wrap
msgid ""
" available-all-groups\n"
"\n"
msgstr ""
" available-all-groups\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:791
msgid ""
"This command returns a list of all optional groups that this daemon knows "
"about.  Note this returns both supported and unsupported groups.  To find "
"out which ones the daemon can actually support you have to call L</"
"available> / L</feature-available> on each member of the returned list."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:797
msgid ""
"See also L</available>, L</feature-available> and L<guestfs(3)/AVAILABILITY>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:800
msgid "base64-in"
msgstr "base64-in"

#. type: verbatim
#: ../fish/guestfish-actions.pod:802
#, no-wrap
msgid ""
" base64-in (base64file|-) filename\n"
"\n"
msgstr ""
" base64-in (файл_base64|-) назва_файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:804 ../src/guestfs-actions.pod:1104
msgid ""
"This command uploads base64-encoded data from C<base64file> to C<filename>."
msgstr ""
"Ця команда вивантажує дані у кодуванні base64 з C<файл_base64> до файла з "
"назвою C<назва_файла>."

#. type: textblock
#: ../fish/guestfish-actions.pod:807 ../fish/guestfish-actions.pod:816
#: ../fish/guestfish-actions.pod:1269 ../fish/guestfish-actions.pod:1366
#: ../fish/guestfish-actions.pod:1387 ../fish/guestfish-actions.pod:1573
#: ../fish/guestfish-actions.pod:1740 ../fish/guestfish-actions.pod:1759
#: ../fish/guestfish-actions.pod:2254 ../fish/guestfish-actions.pod:4623
#: ../fish/guestfish-actions.pod:5736 ../fish/guestfish-actions.pod:5757
#: ../fish/guestfish-actions.pod:7564 ../fish/guestfish-actions.pod:7600
#: ../fish/guestfish-actions.pod:7611 ../fish/guestfish-actions.pod:7627
#: ../fish/guestfish-actions.pod:7765 ../fish/guestfish-actions.pod:7781
#: ../fish/guestfish-actions.pod:7857 ../fish/guestfish-actions.pod:7880
msgid "Use C<-> instead of a filename to read/write from stdin/stdout."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:809
msgid "base64-out"
msgstr "base64-out"

#. type: verbatim
#: ../fish/guestfish-actions.pod:811
#, no-wrap
msgid ""
" base64-out filename (base64file|-)\n"
"\n"
msgstr ""
" base64-out назва_файла (файл_base64|-)\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:813 ../src/guestfs-actions.pod:1118
msgid ""
"This command downloads the contents of C<filename>, writing it out to local "
"file C<base64file> encoded as base64."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:818
msgid "blkdiscard"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:820
#, no-wrap
msgid ""
" blkdiscard device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:822 ../src/guestfs-actions.pod:1131
msgid ""
"This discards all blocks on the block device C<device>, giving the free "
"space back to the host."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:825
msgid ""
"This operation requires support in libguestfs, the host filesystem, qemu and "
"the host kernel.  If this support isn't present it may give an error or even "
"appear to run but do nothing.  You must also set the C<discard> attribute on "
"the underlying drive (see L</add-drive-opts>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:831
msgid "blkdiscardzeroes"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:833
#, no-wrap
msgid ""
" blkdiscardzeroes device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:835
msgid ""
"This call returns true if blocks on C<device> that have been discarded by a "
"call to L</blkdiscard> are returned as blocks of zero bytes when read the "
"next time."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:839 ../src/guestfs-actions.pod:1154
msgid ""
"If it returns false, then it may be that discarded blocks are read as stale "
"or random data."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:842
msgid "blkid"
msgstr "blkid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:844
#, no-wrap
msgid ""
" blkid device\n"
"\n"
msgstr ""
" blkid пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:846 ../src/guestfs-actions.pod:1167
msgid ""
"This command returns block device attributes for C<device>. The following "
"fields are usually present in the returned hash. Other fields may also be "
"present."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:851 ../src/guestfs-actions.pod:1172
msgid "C<UUID>"
msgstr "C<UUID>"

#. type: textblock
#: ../fish/guestfish-actions.pod:853 ../src/guestfs-actions.pod:1174
msgid "The uuid of this device."
msgstr "Код UUID цього пристрою."

#. type: =item
#: ../fish/guestfish-actions.pod:855 ../src/guestfs-actions.pod:1176
msgid "C<LABEL>"
msgstr "C<МІТКА>"

#. type: textblock
#: ../fish/guestfish-actions.pod:857 ../src/guestfs-actions.pod:1178
msgid "The label of this device."
msgstr "Мітка пристрою."

#. type: =item
#: ../fish/guestfish-actions.pod:859 ../src/guestfs-actions.pod:1180
msgid "C<VERSION>"
msgstr "C<ВЕРСІЯ>"

#. type: textblock
#: ../fish/guestfish-actions.pod:861 ../src/guestfs-actions.pod:1182
msgid "The version of blkid command."
msgstr "Версія програми blkid."

#. type: =item
#: ../fish/guestfish-actions.pod:863 ../src/guestfs-actions.pod:1184
msgid "C<TYPE>"
msgstr "C<ТИП>"

#. type: textblock
#: ../fish/guestfish-actions.pod:865 ../src/guestfs-actions.pod:1186
msgid "The filesystem type or RAID of this device."
msgstr "Тип файлової системи або RAID для цього пристрою."

#. type: =item
#: ../fish/guestfish-actions.pod:867 ../src/guestfs-actions.pod:1188
msgid "C<USAGE>"
msgstr "C<ВИКОРИСТАННЯ>"

#. type: textblock
#: ../fish/guestfish-actions.pod:869 ../src/guestfs-actions.pod:1190
msgid "The usage of this device, for example C<filesystem> or C<raid>."
msgstr "Призначення цього пристрою, наприклад C<filesystem> або C<raid>."

#. type: =head2
#: ../fish/guestfish-actions.pod:873
msgid "blockdev-flushbufs"
msgstr "blockdev-flushbufs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:875
#, no-wrap
msgid ""
" blockdev-flushbufs device\n"
"\n"
msgstr ""
" blockdev-flushbufs пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:877 ../src/guestfs-actions.pod:1208
msgid ""
"This tells the kernel to flush internal buffers associated with C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:880 ../fish/guestfish-actions.pod:894
#: ../fish/guestfish-actions.pod:903 ../fish/guestfish-actions.pod:913
#: ../fish/guestfish-actions.pod:925 ../fish/guestfish-actions.pod:938
#: ../fish/guestfish-actions.pod:946 ../fish/guestfish-actions.pod:971
#: ../fish/guestfish-actions.pod:979 ../src/guestfs-actions.pod:1211
#: ../src/guestfs-actions.pod:1231 ../src/guestfs-actions.pod:1246
#: ../src/guestfs-actions.pod:1262 ../src/guestfs-actions.pod:1280
#: ../src/guestfs-actions.pod:1299 ../src/guestfs-actions.pod:1313
#: ../src/guestfs-actions.pod:1351 ../src/guestfs-actions.pod:1365
msgid "This uses the L<blockdev(8)> command."
msgstr "Використовується програма L<blockdev(8)>."

#. type: =head2
#: ../fish/guestfish-actions.pod:882
msgid "blockdev-getbsz"
msgstr "blockdev-getbsz"

#. type: verbatim
#: ../fish/guestfish-actions.pod:884
#, no-wrap
msgid ""
" blockdev-getbsz device\n"
"\n"
msgstr ""
" blockdev-getbsz пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:886 ../src/guestfs-actions.pod:1223
msgid "This returns the block size of a device."
msgstr "Повертає розмір блоку для пристрою."

#. type: textblock
#: ../fish/guestfish-actions.pod:888 ../src/guestfs-actions.pod:1225
msgid ""
"Note: this is different from both I<size in blocks> and I<filesystem block "
"size>.  Also this setting is not really used by anything.  You should "
"probably not use it for anything.  Filesystems have their own idea about "
"what block size to choose."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:896
msgid "blockdev-getro"
msgstr "blockdev-getro"

#. type: verbatim
#: ../fish/guestfish-actions.pod:898
#, no-wrap
msgid ""
" blockdev-getro device\n"
"\n"
msgstr ""
" blockdev-getro пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:900 ../src/guestfs-actions.pod:1243
msgid ""
"Returns a boolean indicating if the block device is read-only (true if read-"
"only, false if not)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:905
msgid "blockdev-getsize64"
msgstr "blockdev-getsize64"

#. type: verbatim
#: ../fish/guestfish-actions.pod:907
#, no-wrap
msgid ""
" blockdev-getsize64 device\n"
"\n"
msgstr ""
" blockdev-getsize64 пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:909 ../src/guestfs-actions.pod:1258
msgid "This returns the size of the device in bytes."
msgstr "Повертає розмір пристрою у байтах."

#. type: textblock
#: ../fish/guestfish-actions.pod:911
msgid "See also L</blockdev-getsz>."
msgstr "Див. також L</blockdev-getsz>."

#. type: =head2
#: ../fish/guestfish-actions.pod:915
msgid "blockdev-getss"
msgstr "blockdev-getss"

#. type: verbatim
#: ../fish/guestfish-actions.pod:917
#, no-wrap
msgid ""
" blockdev-getss device\n"
"\n"
msgstr ""
" blockdev-getss пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:919 ../src/guestfs-actions.pod:1274
msgid ""
"This returns the size of sectors on a block device.  Usually 512, but can be "
"larger for modern devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:922
msgid ""
"(Note, this is not the size in sectors, use L</blockdev-getsz> for that)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:927
msgid "blockdev-getsz"
msgstr "blockdev-getsz"

#. type: verbatim
#: ../fish/guestfish-actions.pod:929
#, no-wrap
msgid ""
" blockdev-getsz device\n"
"\n"
msgstr ""
" blockdev-getsz пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:931 ../src/guestfs-actions.pod:1292
msgid ""
"This returns the size of the device in units of 512-byte sectors (even if "
"the sectorsize isn't 512 bytes ... weird)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:934
msgid ""
"See also L</blockdev-getss> for the real sector size of the device, and L</"
"blockdev-getsize64> for the more useful I<size in bytes>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:940
msgid "blockdev-rereadpt"
msgstr "blockdev-rereadpt"

#. type: verbatim
#: ../fish/guestfish-actions.pod:942
#, no-wrap
msgid ""
" blockdev-rereadpt device\n"
"\n"
msgstr ""
" blockdev-rereadpt пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:944 ../src/guestfs-actions.pod:1311
msgid "Reread the partition table on C<device>."
msgstr "Повторно прочитати таблицю розділів з пристрою C<пристрій>."

#. type: =head2
#: ../fish/guestfish-actions.pod:948
msgid "blockdev-setbsz"
msgstr "blockdev-setbsz"

#. type: verbatim
#: ../fish/guestfish-actions.pod:950
#, no-wrap
msgid ""
" blockdev-setbsz device blocksize\n"
"\n"
msgstr ""
" blockdev-setbsz пристрій розмір_блоку\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:952 ../src/guestfs-actions.pod:1333
msgid ""
"This call does nothing and has never done anything because of a bug in "
"blockdev.  B<Do not use it.>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:955
msgid ""
"If you need to set the filesystem block size, use the C<blocksize> option of "
"L</mkfs>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:958 ../fish/guestfish-actions.pod:5345
msgid ""
"I<This function is deprecated.> In new code, use the L</mkfs> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:965
msgid "blockdev-setro"
msgstr "blockdev-setro"

#. type: verbatim
#: ../fish/guestfish-actions.pod:967
#, no-wrap
msgid ""
" blockdev-setro device\n"
"\n"
msgstr ""
" blockdev-setro пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:969 ../src/guestfs-actions.pod:1349
msgid "Sets the block device named C<device> to read-only."
msgstr ""
"Переводити блоковий пристрій з назвою C<пристрій> у режим лише читання."

#. type: =head2
#: ../fish/guestfish-actions.pod:973
msgid "blockdev-setrw"
msgstr "blockdev-setrw"

#. type: verbatim
#: ../fish/guestfish-actions.pod:975
#, no-wrap
msgid ""
" blockdev-setrw device\n"
"\n"
msgstr ""
" blockdev-setrw пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:977 ../src/guestfs-actions.pod:1363
msgid "Sets the block device named C<device> to read-write."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:981
msgid "btrfs-device-add"
msgstr "btrfs-device-add"

#. type: verbatim
#: ../fish/guestfish-actions.pod:983
#, no-wrap
msgid ""
" btrfs-device-add 'devices ...' fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:985 ../src/guestfs-actions.pod:1378
msgid ""
"Add the list of device(s) in C<devices> to the btrfs filesystem mounted at "
"C<fs>.  If C<devices> is an empty list, this does nothing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:988
msgid "btrfs-device-delete"
msgstr "btrfs-device-delete"

#. type: verbatim
#: ../fish/guestfish-actions.pod:990
#, no-wrap
msgid ""
" btrfs-device-delete 'devices ...' fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:992 ../src/guestfs-actions.pod:1392
msgid ""
"Remove the C<devices> from the btrfs filesystem mounted at C<fs>.  If "
"C<devices> is an empty list, this does nothing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:995
msgid "btrfs-filesystem-balance"
msgstr "btrfs-filesystem-balance"

#. type: verbatim
#: ../fish/guestfish-actions.pod:997
#, no-wrap
msgid ""
" btrfs-filesystem-balance fs\n"
"\n"
msgstr ""
" btrfs-filesystem-balance файлова_система\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:999 ../src/guestfs-actions.pod:1405
msgid ""
"Balance the chunks in the btrfs filesystem mounted at C<fs> across the "
"underlying devices."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1002
msgid "btrfs-filesystem-resize"
msgstr "btrfs-filesystem-resize"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1004
#, no-wrap
msgid ""
" btrfs-filesystem-resize mountpoint [size:N]\n"
"\n"
msgstr ""
" btrfs-filesystem-resize точка_монтування [size:N]\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1006 ../src/guestfs-actions.pod:1426
msgid "This command resizes a btrfs filesystem."
msgstr "Ця команда змінює розмір файлової системи btrfs."

#. type: textblock
#: ../fish/guestfish-actions.pod:1008 ../src/guestfs-actions.pod:1428
msgid ""
"Note that unlike other resize calls, the filesystem has to be mounted and "
"the parameter is the mountpoint not the device (this is a requirement of "
"btrfs itself)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1012 ../fish/guestfish-actions.pod:4977
#: ../fish/guestfish-actions.pod:5786 ../fish/guestfish-actions.pod:7674
#: ../fish/guestfish-prepopts.pod:34 ../fish/guestfish-prepopts.pod:49
#: ../fish/guestfish-prepopts.pod:66 ../fish/guestfish-prepopts.pod:85
#: ../fish/guestfish-prepopts.pod:102 ../fish/guestfish-prepopts.pod:118
#: ../fish/guestfish-prepopts.pod:135 ../src/guestfs-actions.pod:1432
#: ../src/guestfs-actions.pod:7953 ../src/guestfs-actions.pod:9465
#: ../src/guestfs-actions.pod:12454
msgid "The optional parameters are:"
msgstr "Додатковими параметрами є:"

#. type: =item
#: ../fish/guestfish-actions.pod:1016 ../fish/guestfish-actions.pod:5790
#: ../src/guestfs-actions.pod:1436 ../src/guestfs-actions.pod:9469
msgid "C<size>"
msgstr "C<розмір>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1018 ../src/guestfs-actions.pod:1438
msgid ""
"The new size (in bytes) of the filesystem.  If omitted, the filesystem is "
"resized to the maximum size."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1023 ../src/guestfs-actions.pod:1443
msgid "See also L<btrfs(8)>."
msgstr "Див. також L<btrfs(8)>."

#. type: =head2
#: ../fish/guestfish-actions.pod:1027
msgid "btrfs-filesystem-sync"
msgstr "btrfs-filesystem-sync"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1029
#, no-wrap
msgid ""
" btrfs-filesystem-sync fs\n"
"\n"
msgstr ""
" btrfs-filesystem-sync файлова_система\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1031 ../src/guestfs-actions.pod:1477
msgid "Force sync on the btrfs filesystem mounted at C<fs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1033
msgid "btrfs-fsck"
msgstr "btrfs-fsck"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1035
#, no-wrap
msgid ""
" btrfs-fsck device [superblock:N] [repair:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1037 ../src/guestfs-actions.pod:1498
msgid ""
"Used to check a btrfs filesystem, C<device> is the device file where the "
"filesystem is stored."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1042
msgid "btrfs-set-seeding"
msgstr "btrfs-set-seeding"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1044
#, no-wrap
msgid ""
" btrfs-set-seeding device true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1046 ../src/guestfs-actions.pod:1534
msgid ""
"Enable or disable the seeding feature of a device that contains a btrfs "
"filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1049
msgid "btrfs-subvolume-create"
msgstr "btrfs-subvolume-create"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1051
#, no-wrap
msgid ""
" btrfs-subvolume-create dest\n"
"\n"
msgstr ""
" btrfs-subvolume-create призначення\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1053 ../src/guestfs-actions.pod:1547
msgid ""
"Create a btrfs subvolume.  The C<dest> argument is the destination directory "
"and the name of the snapshot, in the form C</path/to/dest/name>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1056
msgid "btrfs-subvolume-delete"
msgstr "btrfs-subvolume-delete"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1058
#, no-wrap
msgid ""
" btrfs-subvolume-delete subvolume\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1060 ../src/guestfs-actions.pod:1560
msgid "Delete the named btrfs subvolume."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1062
msgid "btrfs-subvolume-list"
msgstr "btrfs-subvolume-list"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1064
#, no-wrap
msgid ""
" btrfs-subvolume-list fs\n"
"\n"
msgstr ""
" btrfs-subvolume-list фс\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1066 ../src/guestfs-actions.pod:1572
msgid ""
"List the btrfs snapshots and subvolumes of the btrfs filesystem which is "
"mounted at C<fs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1069
msgid "btrfs-subvolume-set-default"
msgstr "btrfs-subvolume-set-default"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1071
#, no-wrap
msgid ""
" btrfs-subvolume-set-default id fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1073
msgid ""
"Set the subvolume of the btrfs filesystem C<fs> which will be mounted by "
"default.  See L</btrfs-subvolume-list> to get a list of subvolumes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1077
msgid "btrfs-subvolume-snapshot"
msgstr "btrfs-subvolume-snapshot"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1079
#, no-wrap
msgid ""
" btrfs-subvolume-snapshot source dest\n"
"\n"
msgstr ""
" btrfs-subvolume-snapshot джерело призначення\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1081 ../src/guestfs-actions.pod:1603
msgid ""
"Create a writable snapshot of the btrfs subvolume C<source>.  The C<dest> "
"argument is the destination directory and the name of the snapshot, in the "
"form C</path/to/dest/name>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1085
msgid "canonical-device-name"
msgstr "canonical-device-name"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1087
#, no-wrap
msgid ""
" canonical-device-name device\n"
"\n"
msgstr ""
" canonical-device-name пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1089 ../src/guestfs-actions.pod:1617
msgid ""
"This utility function is useful when displaying device names to the user.  "
"It takes a number of irregular device names and returns them in a consistent "
"format:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1095 ../src/guestfs-actions.pod:1623
msgid "C</dev/hdX>"
msgstr "C</dev/hdX>"

#. type: =item
#: ../fish/guestfish-actions.pod:1097 ../src/guestfs-actions.pod:1625
msgid "C</dev/vdX>"
msgstr "C</dev/vdX>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1099 ../src/guestfs-actions.pod:1627
msgid ""
"These are returned as C</dev/sdX>.  Note this works for device names and "
"partition names.  This is approximately the reverse of the algorithm "
"described in L<guestfs(3)/BLOCK DEVICE NAMING>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1103 ../src/guestfs-actions.pod:1631
msgid "C</dev/mapper/VG-LV>"
msgstr "C</dev/mapper/VG-LV>"

#. type: =item
#: ../fish/guestfish-actions.pod:1105 ../src/guestfs-actions.pod:1633
msgid "C</dev/dm-N>"
msgstr "C</dev/dm-N>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1107
msgid "Converted to C</dev/VG/LV> form using L</lvm-canonical-lvm-name>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1111 ../src/guestfs-actions.pod:1639
msgid "Other strings are returned unmodified."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1113
msgid "cap-get-file"
msgstr "cap-get-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1115
#, no-wrap
msgid ""
" cap-get-file path\n"
"\n"
msgstr ""
" cap-get-file шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1117 ../src/guestfs-actions.pod:1652
msgid ""
"This function returns the Linux capabilities attached to C<path>.  The "
"capabilities set is returned in text form (see L<cap_to_text(3)>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1120 ../src/guestfs-actions.pod:1655
msgid "If no capabilities are attached to a file, an empty string is returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1122
msgid "cap-set-file"
msgstr "cap-set-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1124
#, no-wrap
msgid ""
" cap-set-file path cap\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1126 ../src/guestfs-actions.pod:1669
msgid ""
"This function sets the Linux capabilities attached to C<path>.  The "
"capabilities set C<cap> should be passed in text form (see "
"L<cap_from_text(3)>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1130
msgid "case-sensitive-path"
msgstr "case-sensitive-path"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1132
#, no-wrap
msgid ""
" case-sensitive-path path\n"
"\n"
msgstr ""
" case-sensitive-path шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1134 ../src/guestfs-actions.pod:1683
msgid ""
"This can be used to resolve case insensitive paths on a filesystem which is "
"case sensitive.  The use case is to resolve paths which you have read from "
"Windows configuration files or the Windows Registry, to the true path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1139 ../src/guestfs-actions.pod:1688
msgid ""
"The command handles a peculiarity of the Linux ntfs-3g filesystem driver "
"(and probably others), which is that although the underlying filesystem is "
"case-insensitive, the driver exports the filesystem to Linux as case-"
"sensitive."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1144 ../src/guestfs-actions.pod:1693
msgid ""
"One consequence of this is that special directories such as C<c:\\windows> "
"may appear as C</WINDOWS> or C</windows> (or other things) depending on the "
"precise details of how they were created.  In Windows itself this would not "
"be a problem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1150 ../src/guestfs-actions.pod:1699
msgid ""
"Bug or feature? You decide: L<http://www.tuxera.com/community/ntfs-3g-faq/"
"#posixfilenames1>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1153
msgid ""
"L</case-sensitive-path> attempts to resolve the true case of each element in "
"the path. It will return a resolved path if either the full path or its "
"parent directory exists. If the parent directory exists but the full path "
"does not, the case of the parent directory will be correctly resolved, and "
"the remainder appended unmodified. For example, if the file C<\"/Windows/"
"System32/netkvm.sys\"> exists:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1162
msgid "L</case-sensitive-path> (\"/windows/system32/netkvm.sys\")"
msgstr "L</case-sensitive-path> (\"/windows/system32/netkvm.sys\")"

#. type: textblock
#: ../fish/guestfish-actions.pod:1164 ../src/guestfs-actions.pod:1713
msgid "\"Windows/System32/netkvm.sys\""
msgstr "\"Windows/System32/netkvm.sys\""

#. type: =item
#: ../fish/guestfish-actions.pod:1166
msgid "L</case-sensitive-path> (\"/windows/system32/NoSuchFile\")"
msgstr "L</case-sensitive-path> (\"/windows/system32/NoSuchFile\")"

#. type: textblock
#: ../fish/guestfish-actions.pod:1168 ../src/guestfs-actions.pod:1717
msgid "\"Windows/System32/NoSuchFile\""
msgstr "\"Windows/System32/NoSuchFile\""

#. type: =item
#: ../fish/guestfish-actions.pod:1170
msgid "L</case-sensitive-path> (\"/windows/system33/netkvm.sys\")"
msgstr "L</case-sensitive-path> (\"/windows/system33/netkvm.sys\")"

#. type: textblock
#: ../fish/guestfish-actions.pod:1172 ../src/guestfs-actions.pod:1721
msgid "I<ERROR>"
msgstr "I<ERROR>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1176
msgid ""
"I<Note>: Because of the above behaviour, L</case-sensitive-path> cannot be "
"used to check for the existence of a file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1180 ../src/guestfs-actions.pod:1729
msgid "I<Note>: This function does not handle drive names, backslashes etc."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1183
msgid "See also L</realpath>."
msgstr "Див. також L</realpath>."

#. type: =head2
#: ../fish/guestfish-actions.pod:1185
msgid "cat"
msgstr "cat"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1187
#, no-wrap
msgid ""
" cat path\n"
"\n"
msgstr ""
" cat шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1189 ../fish/guestfish-actions.pod:6282
#: ../src/guestfs-actions.pod:1745 ../src/guestfs-actions.pod:10236
msgid "Return the contents of the file named C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1191
msgid ""
"Because, in C, this function returns a C<char *>, there is no way to "
"differentiate between a C<\\0> character in a file and end of string.  To "
"handle binary files, use the L</read-file> or L</download> functions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1196
msgid "checksum"
msgstr "checksum"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1198
#, no-wrap
msgid ""
" checksum csumtype path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1200 ../src/guestfs-actions.pod:1764
msgid ""
"This call computes the MD5, SHAx or CRC checksum of the file named C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1203 ../src/guestfs-actions.pod:1767
msgid ""
"The type of checksum to compute is given by the C<csumtype> parameter which "
"must have one of the following values:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1208 ../fish/guestfish-actions.pod:1567
#: ../src/guestfs-actions.pod:1772 ../src/guestfs-actions.pod:2534
msgid "C<crc>"
msgstr "C<crc>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1210 ../src/guestfs-actions.pod:1774
msgid ""
"Compute the cyclic redundancy check (CRC) specified by POSIX for the "
"C<cksum> command."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1213 ../src/guestfs-actions.pod:1777
msgid "C<md5>"
msgstr "C<md5>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1215 ../src/guestfs-actions.pod:1779
msgid "Compute the MD5 hash (using the C<md5sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1217 ../src/guestfs-actions.pod:1781
msgid "C<sha1>"
msgstr "C<sha1>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1219 ../src/guestfs-actions.pod:1783
msgid "Compute the SHA1 hash (using the C<sha1sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1221 ../src/guestfs-actions.pod:1785
msgid "C<sha224>"
msgstr "C<sha224>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1223 ../src/guestfs-actions.pod:1787
msgid "Compute the SHA224 hash (using the C<sha224sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1225 ../src/guestfs-actions.pod:1789
msgid "C<sha256>"
msgstr "C<sha256>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1227 ../src/guestfs-actions.pod:1791
msgid "Compute the SHA256 hash (using the C<sha256sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1229 ../src/guestfs-actions.pod:1793
msgid "C<sha384>"
msgstr "C<sha384>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1231 ../src/guestfs-actions.pod:1795
msgid "Compute the SHA384 hash (using the C<sha384sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1233 ../src/guestfs-actions.pod:1797
msgid "C<sha512>"
msgstr "C<sha512>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1235 ../src/guestfs-actions.pod:1799
msgid "Compute the SHA512 hash (using the C<sha512sum> program)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1239 ../src/guestfs-actions.pod:1803
msgid "The checksum is returned as a printable string."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1241
msgid "To get the checksum for a device, use L</checksum-device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1243
msgid "To get the checksums for many files, use L</checksums-out>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1245
msgid "checksum-device"
msgstr "checksum-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1247
#, no-wrap
msgid ""
" checksum-device csumtype device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1249
msgid ""
"This call computes the MD5, SHAx or CRC checksum of the contents of the "
"device named C<device>.  For the types of checksums supported see the L</"
"checksum> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1253
msgid "checksums-out"
msgstr "checksums-out"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1255
#, no-wrap
msgid ""
" checksums-out csumtype directory (sumsfile|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1257 ../src/guestfs-actions.pod:1838
msgid ""
"This command computes the checksums of all regular files in C<directory> and "
"then emits a list of those checksums to the local output file C<sumsfile>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1261 ../src/guestfs-actions.pod:1842
msgid ""
"This can be used for verifying the integrity of a virtual machine.  However "
"to be properly secure you should pay attention to the output of the checksum "
"command (it uses the ones from GNU coreutils).  In particular when the "
"filename is not printable, coreutils uses a special backslash syntax.  For "
"more information, see the GNU coreutils info file."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1271
msgid "chmod"
msgstr "chmod"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1273
#, no-wrap
msgid ""
" chmod mode path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1275 ../src/guestfs-actions.pod:1861
msgid ""
"Change the mode (permissions) of C<path> to C<mode>.  Only numeric modes are "
"supported."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1278 ../src/guestfs-actions.pod:1864
msgid ""
"I<Note>: When using this command from guestfish, C<mode> by default would be "
"decimal, unless you prefix it with C<0> to get octal, ie. use C<0700> not "
"C<700>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1282 ../fish/guestfish-actions.pod:5282
#: ../fish/guestfish-actions.pod:5437 ../fish/guestfish-actions.pod:5447
#: ../fish/guestfish-actions.pod:5457 ../src/guestfs-actions.pod:1868
#: ../src/guestfs-actions.pod:8458 ../src/guestfs-actions.pod:8735
#: ../src/guestfs-actions.pod:8754 ../src/guestfs-actions.pod:8773
msgid "The mode actually set is affected by the umask."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1284
msgid "chown"
msgstr "chown"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1286
#, no-wrap
msgid ""
" chown owner group path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1288 ../src/guestfs-actions.pod:1882
msgid "Change the file owner to C<owner> and group to C<group>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1290 ../fish/guestfish-actions.pod:4306
#: ../src/guestfs-actions.pod:1884 ../src/guestfs-actions.pod:6837
msgid ""
"Only numeric uid and gid are supported.  If you want to use names, you will "
"need to locate and parse the password file yourself (Augeas support makes "
"this relatively easy)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1294
msgid "clear-backend-setting"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1296
#, no-wrap
msgid ""
" clear-backend-setting name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1298 ../src/guestfs-actions.pod:1898
msgid ""
"If there is a backend setting string matching C<\"name\"> or beginning with "
"C<\"name=\">, then that string is removed from the backend settings."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1302 ../src/guestfs-actions.pod:1902
msgid ""
"This call returns the number of strings which were removed (which may be 0, "
"1 or greater than 1)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1305 ../fish/guestfish-actions.pod:2385
#: ../fish/guestfish-actions.pod:2396 ../fish/guestfish-actions.pod:6696
#: ../fish/guestfish-actions.pod:6717 ../src/guestfs-actions.pod:1905
#: ../src/guestfs-actions.pod:3787 ../src/guestfs-actions.pod:3804
#: ../src/guestfs-actions.pod:10941 ../src/guestfs-actions.pod:10968
msgid "See L<guestfs(3)/BACKEND>, L<guestfs(3)/BACKEND SETTINGS>."
msgstr "Див. L<guestfs(3)/МОДУЛЬ>, L<guestfs(3)/ПАРАМЕТРИ МОДУЛЯ>."

#. type: =head2
#: ../fish/guestfish-actions.pod:1307
msgid "command"
msgstr "command"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1309
#, no-wrap
msgid ""
" command 'arguments ...'\n"
"\n"
msgstr ""
" command 'параметри...'\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1311 ../src/guestfs-actions.pod:1917
msgid ""
"This call runs a command from the guest filesystem.  The filesystem must be "
"mounted, and must contain a compatible operating system (ie. something "
"Linux, with the same or compatible processor architecture)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1316
msgid ""
"The single parameter is an argv-style list of arguments.  The first element "
"is the name of the program to run.  Subsequent elements are parameters.  The "
"list must be non-empty (ie. must contain a program name).  Note that the "
"command runs directly, and is I<not> invoked via the shell (see L</sh>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1323 ../src/guestfs-actions.pod:1929
msgid "The return value is anything printed to I<stdout> by the command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1326 ../src/guestfs-actions.pod:1932
msgid ""
"If the command returns a non-zero exit status, then this function returns an "
"error message.  The error message string is the content of I<stderr> from "
"the command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1330 ../src/guestfs-actions.pod:1936
msgid ""
"The C<$PATH> environment variable will contain at least C</usr/bin> and C</"
"bin>.  If you require a program from another location, you should provide "
"the full path in the first parameter."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1335 ../src/guestfs-actions.pod:1941
msgid ""
"Shared libraries and data files required by the program must be available on "
"filesystems which are mounted in the correct places.  It is the caller's "
"responsibility to ensure all filesystems that are needed are mounted at the "
"right locations."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1341 ../fish/guestfish-actions.pod:1353
#: ../fish/guestfish-actions.pod:1850 ../fish/guestfish-actions.pod:1867
#: ../fish/guestfish-actions.pod:1975 ../fish/guestfish-actions.pod:1992
#: ../fish/guestfish-actions.pod:2827 ../fish/guestfish-actions.pod:2837
#: ../fish/guestfish-actions.pod:2894 ../fish/guestfish-actions.pod:2909
#: ../fish/guestfish-actions.pod:2919 ../fish/guestfish-actions.pod:3095
#: ../fish/guestfish-actions.pod:6145 ../fish/guestfish-actions.pod:6160
#: ../fish/guestfish-actions.pod:6248 ../fish/guestfish-actions.pod:6265
#: ../fish/guestfish-actions.pod:6350 ../fish/guestfish-actions.pod:7364
#: ../fish/guestfish-actions.pod:7410 ../fish/guestfish-actions.pod:7531
#: ../fish/guestfish-actions.pod:7546 ../fish/guestfish-actions.pod:8197
#: ../fish/guestfish-actions.pod:8273 ../fish/guestfish-actions.pod:8290
#: ../fish/guestfish-actions.pod:8365 ../fish/guestfish-actions.pod:8382
#: ../fish/guestfish-actions.pod:8418 ../fish/guestfish-actions.pod:8435
#: ../src/guestfs-actions.pod:1950 ../src/guestfs-actions.pod:1970
#: ../src/guestfs-actions.pod:3036 ../src/guestfs-actions.pod:3062
#: ../src/guestfs-actions.pod:3218 ../src/guestfs-actions.pod:3244
#: ../src/guestfs-actions.pod:4459 ../src/guestfs-actions.pod:4509
#: ../src/guestfs-actions.pod:4574 ../src/guestfs-actions.pod:4598
#: ../src/guestfs-actions.pod:4615 ../src/guestfs-actions.pod:4948
#: ../src/guestfs-actions.pod:10000 ../src/guestfs-actions.pod:10026
#: ../src/guestfs-actions.pod:10180 ../src/guestfs-actions.pod:10206
#: ../src/guestfs-actions.pod:10316 ../src/guestfs-actions.pod:11885
#: ../src/guestfs-actions.pod:11940 ../src/guestfs-actions.pod:12156
#: ../src/guestfs-actions.pod:12180 ../src/guestfs-actions.pod:13351
#: ../src/guestfs-actions.pod:13568 ../src/guestfs-actions.pod:13594
#: ../src/guestfs-actions.pod:13717 ../src/guestfs-actions.pod:13743
#: ../src/guestfs-actions.pod:13796 ../src/guestfs-actions.pod:13822
msgid ""
"Because of the message protocol, there is a transfer limit of somewhere "
"between 2MB and 4MB.  See L<guestfs(3)/PROTOCOL LIMITS>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1344
msgid "command-lines"
msgstr "command-lines"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1346
#, no-wrap
msgid ""
" command-lines 'arguments ...'\n"
"\n"
msgstr ""
" command-lines 'аргументи...'\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1348
msgid ""
"This is the same as L</command>, but splits the result into a list of lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1351
msgid "See also: L</sh-lines>"
msgstr "Див. також L</sh-lines>"

#. type: =head2
#: ../fish/guestfish-actions.pod:1356
msgid "compress-device-out"
msgstr "compress-device-out"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1358
#, no-wrap
msgid ""
" compress-device-out ctype device (zdevice|-) [level:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1360 ../src/guestfs-actions.pod:1991
msgid ""
"This command compresses C<device> and writes it out to the local file "
"C<zdevice>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1363
msgid ""
"The C<ctype> and optional C<level> parameters have the same meaning as in L</"
"compress-out>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1370
msgid "compress-out"
msgstr "compress-out"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1372
#, no-wrap
msgid ""
" compress-out ctype file (zfile|-) [level:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1374 ../src/guestfs-actions.pod:2043
msgid ""
"This command compresses C<file> and writes it out to the local file C<zfile>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1377 ../src/guestfs-actions.pod:2046
msgid ""
"The compression program used is controlled by the C<ctype> parameter.  "
"Currently this includes: C<compress>, C<gzip>, C<bzip2>, C<xz> or C<lzop>.  "
"Some compression types may not be supported by particular builds of "
"libguestfs, in which case you will get an error containing the substring "
"\"not supported\"."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1383 ../src/guestfs-actions.pod:2052
msgid ""
"The optional C<level> parameter controls compression level.  The meaning and "
"default for this parameter depends on the compression program being used."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1391
msgid "config"
msgstr "config"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1393
#, no-wrap
msgid ""
" config hvparam hvvalue\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1395 ../src/guestfs-actions.pod:2093
msgid ""
"This can be used to add arbitrary hypervisor parameters of the form I<-param "
"value>.  Actually it's not quite arbitrary - we prevent you from setting "
"some parameters which would interfere with parameters that we use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1400 ../src/guestfs-actions.pod:2098
msgid "The first character of C<hvparam> string must be a C<-> (dash)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1402 ../src/guestfs-actions.pod:2100
msgid "C<hvvalue> can be NULL."
msgstr "C<hvvalue> може дорівнювати NULL."

#. type: =head2
#: ../fish/guestfish-actions.pod:1404
msgid "copy-attributes"
msgstr "copy-attributes"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1406
#, no-wrap
msgid ""
" copy-attributes src dest [all:true|false] [mode:true|false] [xattributes:true|false] [ownership:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1408 ../src/guestfs-actions.pod:2124
msgid ""
"Copy the attributes of a path (which can be a file or a directory)  to "
"another path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1411 ../src/guestfs-actions.pod:2127
msgid ""
"By default C<no> attribute is copied, so make sure to specify any (or C<all> "
"to copy everything)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1414 ../src/guestfs-actions.pod:2130
msgid "The optional arguments specify which attributes can be copied:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1418 ../src/guestfs-actions.pod:2134
msgid "C<mode>"
msgstr "C<mode>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1420 ../src/guestfs-actions.pod:2136
msgid ""
"Copy part of the file mode from C<source> to C<destination>. Only the UNIX "
"permissions and the sticky/setuid/setgid bits can be copied."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1423 ../src/guestfs-actions.pod:2139
msgid "C<xattributes>"
msgstr "C<xattributes>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1425
msgid ""
"Copy the Linux extended attributes (xattrs) from C<source> to "
"C<destination>.  This flag does nothing if the I<linuxxattrs> feature is not "
"available (see L</feature-available>)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1429 ../src/guestfs-actions.pod:2145
msgid "C<ownership>"
msgstr "C<ownership>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1431 ../src/guestfs-actions.pod:2147
msgid "Copy the owner uid and the group gid of C<source> to C<destination>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1433 ../src/guestfs-actions.pod:2149
msgid "C<all>"
msgstr "C<all>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1435 ../src/guestfs-actions.pod:2151
msgid ""
"Copy B<all> the attributes from C<source> to C<destination>. Enabling it "
"enables all the other flags, if they are not specified already."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1442
msgid "copy-device-to-device"
msgstr "copy-device-to-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1444
#, no-wrap
msgid ""
" copy-device-to-device src dest [srcoffset:N] [destoffset:N] [size:N] [sparse:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1446
msgid ""
"The four calls L</copy-device-to-device>, L</copy-device-to-file>, L</copy-"
"file-to-device>, and L</copy-file-to-file> let you copy from a source "
"(device|file) to a destination (device|file)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1453 ../src/guestfs-actions.pod:2209
msgid ""
"Partial copies can be made since you can specify optionally the source "
"offset, destination offset and size to copy.  These values are all specified "
"in bytes.  If not given, the offsets both default to zero, and the size "
"defaults to copying as much as possible until we hit the end of the source."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1459 ../src/guestfs-actions.pod:2215
msgid ""
"The source and destination may be the same object.  However overlapping "
"regions may not be copied correctly."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1462 ../src/guestfs-actions.pod:2218
msgid ""
"If the destination is a file, it is created if required.  If the destination "
"file is not large enough, it is extended."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1465 ../src/guestfs-actions.pod:2221
msgid ""
"If the C<sparse> flag is true then the call avoids writing blocks that "
"contain only zeroes, which can help in some situations where the backing "
"disk is thin-provisioned.  Note that unless the target is already zeroed, "
"using this option will result in incorrect copying."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1473
msgid "copy-device-to-file"
msgstr "copy-device-to-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1475
#, no-wrap
msgid ""
" copy-device-to-file src dest [srcoffset:N] [destoffset:N] [size:N] [sparse:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1477 ../fish/guestfish-actions.pod:1486
#: ../fish/guestfish-actions.pod:1495
msgid "See L</copy-device-to-device> for a general overview of this call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1482
msgid "copy-file-to-device"
msgstr "copy-file-to-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1484
#, no-wrap
msgid ""
" copy-file-to-device src dest [srcoffset:N] [destoffset:N] [size:N] [sparse:true|false]\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1491
msgid "copy-file-to-file"
msgstr "copy-file-to-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1493
#, no-wrap
msgid ""
" copy-file-to-file src dest [srcoffset:N] [destoffset:N] [size:N] [sparse:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1498
msgid ""
"This is B<not> the function you want for copying files.  This is for copying "
"blocks within existing files.  See L</cp>, L</cp-a> and L</mv> for general "
"file copying and moving functions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1505
msgid "copy-size"
msgstr "copy-size"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1507
#, no-wrap
msgid ""
" copy-size src dest size\n"
"\n"
msgstr ""
" copy-size джерело призначення розмір\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1509 ../src/guestfs-actions.pod:2442
msgid ""
"This command copies exactly C<size> bytes from one source device or file "
"C<src> to another destination device or file C<dest>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1512 ../src/guestfs-actions.pod:2445
msgid ""
"Note this will fail if the source is too short or if the destination is not "
"large enough."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1515 ../fish/guestfish-actions.pod:1591
msgid ""
"I<This function is deprecated.> In new code, use the L</copy-device-to-"
"device> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1522
msgid "cp"
msgstr "cp"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1524
#, no-wrap
msgid ""
" cp src dest\n"
"\n"
msgstr ""
" cp джерело призначення\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1526 ../src/guestfs-actions.pod:2464
msgid ""
"This copies a file from C<src> to C<dest> where C<dest> is either a "
"destination filename or destination directory."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1529
msgid "cp-a"
msgstr "cp-a"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1531
#, no-wrap
msgid ""
" cp-a src dest\n"
"\n"
msgstr ""
" cp-a джерело призначення\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1533 ../src/guestfs-actions.pod:2478
msgid ""
"This copies a file or directory from C<src> to C<dest> recursively using the "
"C<cp -a> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1536
msgid "cp-r"
msgstr "cp-r"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1538
#, no-wrap
msgid ""
" cp-r src dest\n"
"\n"
msgstr ""
" cp-r джерело призначення\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1540 ../src/guestfs-actions.pod:2492
msgid ""
"This copies a file or directory from C<src> to C<dest> recursively using the "
"C<cp -rP> command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1543
msgid ""
"Most users should use L</cp-a> instead.  This command is useful when you "
"don't want to preserve permissions, because the target filesystem does not "
"support it (primarily when writing to DOS FAT filesystems)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1548
msgid "cpio-out"
msgstr "cpio-out"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1550
#, no-wrap
msgid ""
" cpio-out directory (cpiofile|-) [format:..]\n"
"\n"
msgstr ""
" cpio-out каталог (файл cpio|-) [формат:..]\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1552 ../src/guestfs-actions.pod:2519
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<cpiofile>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1555 ../src/guestfs-actions.pod:2522
msgid ""
"The optional C<format> parameter can be used to select the format.  Only the "
"following formats are currently permitted:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1560 ../src/guestfs-actions.pod:2527
msgid "C<newc>"
msgstr "C<newc>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1562 ../src/guestfs-actions.pod:2529
msgid ""
"New (SVR4) portable format.  This format happens to be compatible with the "
"cpio-like format used by the Linux kernel for initramfs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1565 ../src/guestfs-actions.pod:2532
msgid "This is the default format."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1569 ../src/guestfs-actions.pod:2536
msgid "New (SVR4) portable format with a checksum."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1577
msgid "dd"
msgstr "dd"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1579
#, no-wrap
msgid ""
" dd src dest\n"
"\n"
msgstr ""
" dd джерело призначення\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1581 ../src/guestfs-actions.pod:2582
msgid ""
"This command copies from one source device or file C<src> to another "
"destination device or file C<dest>.  Normally you would use this to copy to "
"or from a device or partition, for example to duplicate a filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1586
msgid ""
"If the destination is a device, it must be as large or larger than the "
"source file or device, otherwise the copy will fail.  This command cannot do "
"partial copies (see L</copy-device-to-device>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1598
msgid "device-index"
msgstr "device-index"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1600
#, no-wrap
msgid ""
" device-index device\n"
"\n"
msgstr ""
" device-index пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1602 ../src/guestfs-actions.pod:2602
msgid ""
"This function takes a device name (eg. \"/dev/sdb\") and returns the index "
"of the device in the list of devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1605
msgid ""
"Index numbers start from 0.  The named device must exist, for example as a "
"string returned from L</list-devices>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1608
msgid "See also L</list-devices>, L</part-to-dev>."
msgstr "Див. також L</list-devices>, L</part-to-dev>."

#. type: =head2
#: ../fish/guestfish-actions.pod:1610
msgid "df"
msgstr "df"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1612
#, no-wrap
msgid ""
" df\n"
"\n"
msgstr ""
" df\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1614 ../src/guestfs-actions.pod:2619
msgid "This command runs the C<df> command to report disk space used."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1616 ../fish/guestfish-actions.pod:1627
msgid ""
"This command is mostly useful for interactive sessions.  It is I<not> "
"intended that you try to parse the output string.  Use L</statvfs> from "
"programs."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1620
msgid "df-h"
msgstr "df-h"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1622
#, no-wrap
msgid ""
" df-h\n"
"\n"
msgstr ""
" df-h\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1624 ../src/guestfs-actions.pod:2635
msgid ""
"This command runs the C<df -h> command to report disk space used in human-"
"readable format."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1631
msgid "disk-create"
msgstr "disk-create"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1633
#, no-wrap
msgid ""
" disk-create filename format size [backingfile:..] [backingformat:..] [preallocation:..] [compat:..] [clustersize:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1635 ../src/guestfs-actions.pod:2667
msgid ""
"Create a blank disk image called C<filename> (a host file)  with format "
"C<format> (usually C<raw> or C<qcow2>).  The size is C<size> bytes."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1639 ../src/guestfs-actions.pod:2671
msgid ""
"If used with the optional C<backingfile> parameter, then a snapshot is "
"created on top of the backing file.  In this case, C<size> must be passed as "
"C<-1>.  The size of the snapshot is the same as the size of the backing "
"file, which is discovered automatically.  You are encouraged to also pass "
"C<backingformat> to describe the format of C<backingfile>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1646 ../src/guestfs-actions.pod:2678
msgid ""
"If C<filename> refers to a block device, then the device is formatted.  The "
"C<size> is ignored since block devices have an intrinsic size."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1650 ../src/guestfs-actions.pod:2682
msgid "The other optional parameters are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1654 ../src/guestfs-actions.pod:2686
msgid "C<preallocation>"
msgstr "C<preallocation>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1656 ../src/guestfs-actions.pod:2688
msgid ""
"If format is C<raw>, then this can be either C<sparse> or C<full> to create "
"a sparse or fully allocated file respectively.  The default is C<sparse>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1660 ../src/guestfs-actions.pod:2692
msgid ""
"If format is C<qcow2>, then this can be either C<off> or C<metadata>.  "
"Preallocating metadata can be faster when doing lots of writes, but uses "
"more space.  The default is C<off>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1664 ../src/guestfs-actions.pod:2696
msgid "C<compat>"
msgstr "C<compat>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1666 ../src/guestfs-actions.pod:2698
msgid ""
"C<qcow2> only: Pass the string C<1.1> to use the advanced qcow2 format "
"supported by qemu E<ge> 1.1."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1670 ../src/guestfs-actions.pod:2702
msgid "C<clustersize>"
msgstr "C<clustersize>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1672 ../src/guestfs-actions.pod:2704
msgid ""
"C<qcow2> only: Change the qcow2 cluster size.  The default is 65536 (bytes) "
"and this setting may be any power of two between 512 and 2097152."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1678
msgid ""
"Note that this call does not add the new disk to the handle.  You may need "
"to call L</add-drive-opts> separately."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1683
msgid "disk-format"
msgstr "disk-format"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1685
#, no-wrap
msgid ""
" disk-format filename\n"
"\n"
msgstr ""
" disk-format назва файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1687 ../src/guestfs-actions.pod:2749
msgid ""
"Detect and return the format of the disk image called C<filename>.  "
"C<filename> can also be a host device, etc.  If the format of the image "
"could not be detected, then C<\"unknown\"> is returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1691 ../src/guestfs-actions.pod:2753
msgid ""
"Note that detecting the disk format can be insecure under some "
"circumstances.  See L<guestfs(3)/CVE-2010-3851>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1694 ../src/guestfs-actions.pod:2756
msgid "See also: L<guestfs(3)/DISK IMAGE FORMATS>"
msgstr "Див. також: L<guestfs(3)/ФОРМАТИ ОБРАЗІВ ДИСКІВ>"

#. type: =head2
#: ../fish/guestfish-actions.pod:1696
msgid "disk-has-backing-file"
msgstr "disk-has-backing-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1698
#, no-wrap
msgid ""
" disk-has-backing-file filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1700 ../src/guestfs-actions.pod:2769
msgid ""
"Detect and return whether the disk image C<filename> has a backing file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1703 ../fish/guestfish-actions.pod:1713
#: ../src/guestfs-actions.pod:2772 ../src/guestfs-actions.pod:2788
msgid ""
"Note that detecting disk features can be insecure under some circumstances.  "
"See L<guestfs(3)/CVE-2010-3851>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1706
msgid "disk-virtual-size"
msgstr "disk-virtual-size"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1708
#, no-wrap
msgid ""
" disk-virtual-size filename\n"
"\n"
msgstr ""
" disk-virtual-size назва файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1710 ../src/guestfs-actions.pod:2785
msgid ""
"Detect and return the virtual size in bytes of the disk image called "
"C<filename>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1716
msgid "dmesg"
msgstr "dmesg"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1718
#, no-wrap
msgid ""
" dmesg\n"
"\n"
msgstr ""
" dmesg\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1720 ../src/guestfs-actions.pod:2800
msgid ""
"This returns the kernel messages (C<dmesg> output) from the guest kernel.  "
"This is sometimes useful for extended debugging of problems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1724
msgid ""
"Another way to get the same information is to enable verbose messages with "
"L</set-verbose> or by setting the environment variable C<LIBGUESTFS_DEBUG=1> "
"before running the program."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1729
msgid "download"
msgstr "download"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1731
#, no-wrap
msgid ""
" download remotefilename (filename|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1733 ../fish/guestfish-actions.pod:1746
#: ../src/guestfs-actions.pod:2821 ../src/guestfs-actions.pod:2846
msgid ""
"Download file C<remotefilename> and save it as C<filename> on the local "
"machine."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1736 ../fish/guestfish-actions.pod:7853
#: ../src/guestfs-actions.pod:2824 ../src/guestfs-actions.pod:12764
msgid "C<filename> can also be a named pipe."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1738
msgid "See also L</upload>, L</cat>."
msgstr "Див. також L</upload>, L</cat>."

#. type: =head2
#: ../fish/guestfish-actions.pod:1742
msgid "download-offset"
msgstr "download-offset"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1744
#, no-wrap
msgid ""
" download-offset remotefilename (filename|-) offset size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1749 ../src/guestfs-actions.pod:2849
msgid ""
"C<remotefilename> is read for C<size> bytes starting at C<offset> (this "
"region must be within the file or device)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1752
msgid ""
"Note that there is no limit on the amount of data that can be downloaded "
"with this call, unlike with L</pread>, and this call always reads the full "
"amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1757
msgid "See also L</download>, L</pread>."
msgstr "Див. також L</download>, L</pread>."

#. type: =head2
#: ../fish/guestfish-actions.pod:1761
msgid "drop-caches"
msgstr "drop-caches"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1763
#, no-wrap
msgid ""
" drop-caches whattodrop\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1765 ../src/guestfs-actions.pod:2874
msgid ""
"This instructs the guest kernel to drop its page cache, and/or dentries and "
"inode caches.  The parameter C<whattodrop> tells the kernel what precisely "
"to drop, see L<http://linux-mm.org/Drop_Caches>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1770 ../src/guestfs-actions.pod:2879
msgid "Setting C<whattodrop> to 3 should drop everything."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1772 ../src/guestfs-actions.pod:2881
msgid ""
"This automatically calls L<sync(2)> before the operation, so that the "
"maximum guest memory is freed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1775
msgid "du"
msgstr "du"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1777
#, no-wrap
msgid ""
" du path\n"
"\n"
msgstr ""
" du шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1779 ../src/guestfs-actions.pod:2894
msgid ""
"This command runs the C<du -s> command to estimate file space usage for "
"C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1782 ../src/guestfs-actions.pod:2897
msgid ""
"C<path> can be a file or a directory.  If C<path> is a directory then the "
"estimate includes the contents of the directory and all subdirectories "
"(recursively)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1786 ../src/guestfs-actions.pod:2901
msgid ""
"The result is the estimated size in I<kilobytes> (ie. units of 1024 bytes)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1789
msgid "e2fsck"
msgstr "e2fsck"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1791
#, no-wrap
msgid ""
" e2fsck device [correct:true|false] [forceall:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1793 ../src/guestfs-actions.pod:2928
msgid ""
"This runs the ext2/ext3 filesystem checker on C<device>.  It can take the "
"following optional arguments:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1798 ../src/guestfs-actions.pod:2933
msgid "C<correct>"
msgstr "C<correct>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1800 ../src/guestfs-actions.pod:2935
msgid ""
"Automatically repair the file system. This option will cause e2fsck to "
"automatically fix any filesystem problems that can be safely fixed without "
"human intervention."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1804 ../src/guestfs-actions.pod:2939
msgid ""
"This option may not be specified at the same time as the C<forceall> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1806 ../src/guestfs-actions.pod:2941
msgid "C<forceall>"
msgstr "C<forceall>"

#. type: textblock
#: ../fish/guestfish-actions.pod:1808 ../src/guestfs-actions.pod:2943
msgid ""
"Assume an answer of 'yes' to all questions; allows e2fsck to be used non-"
"interactively."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1811 ../src/guestfs-actions.pod:2946
msgid ""
"This option may not be specified at the same time as the C<correct> option."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1817
msgid "e2fsck-f"
msgstr "e2fsck-f"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1819
#, no-wrap
msgid ""
" e2fsck-f device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1821 ../src/guestfs-actions.pod:2989
msgid ""
"This runs C<e2fsck -p -f device>, ie. runs the ext2/ext3 filesystem checker "
"on C<device>, noninteractively (I<-p>), even if the filesystem appears to be "
"clean (I<-f>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1825
msgid ""
"I<This function is deprecated.> In new code, use the L</e2fsck> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1832
msgid "echo-daemon"
msgstr "echo-daemon"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1834
#, no-wrap
msgid ""
" echo-daemon 'words ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1836 ../src/guestfs-actions.pod:3003
msgid ""
"This command concatenates the list of C<words> passed with single spaces "
"between them and returns the resulting string."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1839 ../src/guestfs-actions.pod:3006
msgid "You can use this command to test the connection through to the daemon."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1841
msgid "See also L</ping-daemon>."
msgstr "Див. також L</ping-daemon>."

#. type: =head2
#: ../fish/guestfish-actions.pod:1843
msgid "egrep"
msgstr "egrep"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1845
#, no-wrap
msgid ""
" egrep regex path\n"
"\n"
msgstr ""
" egrep формальний_вираз шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1847 ../src/guestfs-actions.pod:3029
msgid ""
"This calls the external C<egrep> program and returns the matching lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1853 ../fish/guestfish-actions.pod:1870
#: ../fish/guestfish-actions.pod:1978 ../fish/guestfish-actions.pod:1995
#: ../fish/guestfish-actions.pod:2840 ../fish/guestfish-actions.pod:8276
#: ../fish/guestfish-actions.pod:8293 ../fish/guestfish-actions.pod:8368
#: ../fish/guestfish-actions.pod:8385 ../fish/guestfish-actions.pod:8421
#: ../fish/guestfish-actions.pod:8438
msgid ""
"I<This function is deprecated.> In new code, use the L</grep> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1860
msgid "egrepi"
msgstr "egrepi"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1862
#, no-wrap
msgid ""
" egrepi regex path\n"
"\n"
msgstr ""
" egrepi формальний_вираз шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1864 ../src/guestfs-actions.pod:3055
msgid ""
"This calls the external C<egrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1877
msgid "equal"
msgstr "equal"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1879
#, no-wrap
msgid ""
" equal file1 file2\n"
"\n"
msgstr ""
" equal файл1 файл2\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1881 ../src/guestfs-actions.pod:3074
msgid ""
"This compares the two files C<file1> and C<file2> and returns true if their "
"content is exactly equal, or false otherwise."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1884 ../src/guestfs-actions.pod:3077
msgid "The external L<cmp(1)> program is used for the comparison."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1886
msgid "exists"
msgstr "exists"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1888
#, no-wrap
msgid ""
" exists path\n"
"\n"
msgstr ""
" exists шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1890 ../src/guestfs-actions.pod:3089
msgid ""
"This returns C<true> if and only if there is a file, directory (or anything) "
"with the given C<path> name."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1893
msgid "See also L</is-file>, L</is-dir>, L</stat>."
msgstr "Див. також L</is-file>, L</is-dir>, L</stat>."

#. type: =head2
#: ../fish/guestfish-actions.pod:1895
msgid "extlinux"
msgstr "extlinux"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1897
#, no-wrap
msgid ""
" extlinux directory\n"
"\n"
msgstr ""
" extlinux каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1899
msgid ""
"Install the SYSLINUX bootloader on the device mounted at C<directory>.  "
"Unlike L</syslinux> which requires a FAT filesystem, this can be used on an "
"ext2/3/4 or btrfs filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1903 ../src/guestfs-actions.pod:3108
msgid ""
"The C<directory> parameter can be either a mountpoint, or a directory within "
"the mountpoint."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1906
msgid ""
"You also have to mark the partition as \"active\" (L</part-set-bootable>) "
"and a Master Boot Record must be installed (eg. using L</pwrite-device>) on "
"the first sector of the whole disk.  The SYSLINUX package comes with some "
"suitable Master Boot Records.  See the L<extlinux(1)> man page for further "
"information."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1913 ../src/guestfs-actions.pod:3118
msgid ""
"Additional configuration can be supplied to SYSLINUX by placing a file "
"called C<extlinux.conf> on the filesystem under C<directory>.  For further "
"information about the contents of this file, see L<extlinux(1)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1918
msgid "See also L</syslinux>."
msgstr "Див. також L</syslinux>."

#. type: =head2
#: ../fish/guestfish-actions.pod:1920
msgid "fallocate"
msgstr "fallocate"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1922
#, no-wrap
msgid ""
" fallocate path len\n"
"\n"
msgstr ""
" fallocate шлях довжина\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1924 ../fish/guestfish-actions.pod:1943
#: ../src/guestfs-actions.pod:3143 ../src/guestfs-actions.pod:3162
msgid ""
"This command preallocates a file (containing zero bytes) named C<path> of "
"size C<len> bytes.  If the file exists already, it is overwritten."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1928 ../src/guestfs-actions.pod:3147
msgid ""
"Do not confuse this with the guestfish-specific C<alloc> command which "
"allocates a file in the host and attaches it as a device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1932
msgid ""
"I<This function is deprecated.> In new code, use the L</fallocate64> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1939
msgid "fallocate64"
msgstr "fallocate64"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1941
#, no-wrap
msgid ""
" fallocate64 path len\n"
"\n"
msgstr ""
" fallocate64 шлях довжина\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1947
msgid ""
"Note that this call allocates disk blocks for the file.  To create a sparse "
"file use L</truncate-size> instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1950
msgid ""
"The deprecated call L</fallocate> does the same, but owing to an oversight "
"it only allowed 30 bit lengths to be specified, effectively limiting the "
"maximum size of files created through that call to 1GB."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1955 ../src/guestfs-actions.pod:3174
msgid ""
"Do not confuse this with the guestfish-specific C<alloc> and C<sparse> "
"commands which create a file in the host and attach it as a device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1959
msgid "feature-available"
msgstr "feature-available"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1961
#, no-wrap
msgid ""
" feature-available 'groups ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1963
msgid ""
"This is the same as L</available>, but unlike that call it returns a simple "
"true/false boolean result, instead of throwing an exception if a feature is "
"not found.  For other documentation see L</available>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1968
msgid "fgrep"
msgstr "fgrep"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1970
#, no-wrap
msgid ""
" fgrep pattern path\n"
"\n"
msgstr ""
" fgrep шаблон шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1972 ../src/guestfs-actions.pod:3211
msgid ""
"This calls the external C<fgrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1985
msgid "fgrepi"
msgstr "fgrepi"

#. type: verbatim
#: ../fish/guestfish-actions.pod:1987
#, no-wrap
msgid ""
" fgrepi pattern path\n"
"\n"
msgstr ""
" fgrepi шаблон шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:1989 ../src/guestfs-actions.pod:3237
msgid ""
"This calls the external C<fgrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2002
msgid "file"
msgstr "file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2004
#, no-wrap
msgid ""
" file path\n"
"\n"
msgstr ""
" file шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2006 ../src/guestfs-actions.pod:3255
msgid ""
"This call uses the standard L<file(1)> command to determine the type or "
"contents of the file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2009 ../src/guestfs-actions.pod:3258
msgid ""
"This call will also transparently look inside various types of compressed "
"file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2012 ../src/guestfs-actions.pod:3261
msgid ""
"The exact command which runs is C<file -zb path>.  Note in particular that "
"the filename is not prepended to the output (the I<-b> option)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2016 ../src/guestfs-actions.pod:3265
msgid ""
"The output depends on the output of the underlying L<file(1)> command and it "
"can change in future in ways beyond our control.  In other words, the output "
"is not guaranteed by the ABI."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2020
msgid ""
"See also: L<file(1)>, L</vfs-type>, L</lstat>, L</is-file>, L</is-blockdev> "
"(etc), L</is-zero>."
msgstr ""
"Див. також L<file(1)>, L</vfs-type>, L</lstat>, L</is-file>, L</is-blockdev> "
"(тощо), L</is-zero>."

#. type: =head2
#: ../fish/guestfish-actions.pod:2023
msgid "file-architecture"
msgstr "file-architecture"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2025
#, no-wrap
msgid ""
" file-architecture filename\n"
"\n"
msgstr ""
" file-architecture назва_файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2027 ../src/guestfs-actions.pod:3283
msgid ""
"This detects the architecture of the binary C<filename>, and returns it if "
"known."
msgstr ""
"Визначає архітектуру виконуваного файла C<назва_файла> і повертає її "
"значення, якщо воно визначене у програмі."

#. type: textblock
#: ../fish/guestfish-actions.pod:2030 ../src/guestfs-actions.pod:3286
msgid "Currently defined architectures are:"
msgstr "Архітектурами, визначеними у поточній версії є:"

#. type: =item
#: ../fish/guestfish-actions.pod:2034 ../src/guestfs-actions.pod:3290
msgid "\"i386\""
msgstr "\"i386\""

#. type: textblock
#: ../fish/guestfish-actions.pod:2036 ../src/guestfs-actions.pod:3292
msgid ""
"This string is returned for all 32 bit i386, i486, i586, i686 binaries "
"irrespective of the precise processor requirements of the binary."
msgstr ""
"Цей рядок буде повернуто для всіх виконуваних файлів для 32-бітових "
"процесорів i386, i486, i586, i686, незалежно від точного значення версії "
"процесора, визначеного для виконуваного файла."

#. type: =item
#: ../fish/guestfish-actions.pod:2039 ../src/guestfs-actions.pod:3295
msgid "\"x86_64\""
msgstr "\"x86_64\""

#. type: textblock
#: ../fish/guestfish-actions.pod:2041 ../src/guestfs-actions.pod:3297
msgid "64 bit x86-64."
msgstr "64-бітовий x86-64."

#. type: =item
#: ../fish/guestfish-actions.pod:2043 ../src/guestfs-actions.pod:3299
msgid "\"sparc\""
msgstr "\"sparc\""

#. type: textblock
#: ../fish/guestfish-actions.pod:2045 ../src/guestfs-actions.pod:3301
msgid "32 bit SPARC."
msgstr "32-бітовий SPARC."

#. type: =item
#: ../fish/guestfish-actions.pod:2047 ../src/guestfs-actions.pod:3303
msgid "\"sparc64\""
msgstr "\"sparc64\""

#. type: textblock
#: ../fish/guestfish-actions.pod:2049 ../src/guestfs-actions.pod:3305
msgid "64 bit SPARC V9 and above."
msgstr "64-бітовий SPARC V9 або новіша версія."

#. type: =item
#: ../fish/guestfish-actions.pod:2051 ../src/guestfs-actions.pod:3307
msgid "\"ia64\""
msgstr "\"ia64\""

#. type: textblock
#: ../fish/guestfish-actions.pod:2053 ../src/guestfs-actions.pod:3309
msgid "Intel Itanium."
msgstr "Intel Itanium."

#. type: =item
#: ../fish/guestfish-actions.pod:2055 ../src/guestfs-actions.pod:3311
msgid "\"ppc\""
msgstr "\"ppc\""

#. type: textblock
#: ../fish/guestfish-actions.pod:2057 ../src/guestfs-actions.pod:3313
msgid "32 bit Power PC."
msgstr "32-бітовий Power PC."

#. type: =item
#: ../fish/guestfish-actions.pod:2059 ../src/guestfs-actions.pod:3315
msgid "\"ppc64\""
msgstr "\"ppc64\""

#. type: textblock
#: ../fish/guestfish-actions.pod:2061 ../src/guestfs-actions.pod:3317
msgid "64 bit Power PC."
msgstr "64-бітовий Power PC."

#. type: =item
#: ../fish/guestfish-actions.pod:2063 ../src/guestfs-actions.pod:3319
msgid "\"arm\""
msgstr "\"arm\""

#. type: textblock
#: ../fish/guestfish-actions.pod:2065 ../src/guestfs-actions.pod:3321
msgid "32 bit ARM."
msgstr "32-бітовий ARM."

#. type: =item
#: ../fish/guestfish-actions.pod:2067 ../src/guestfs-actions.pod:3323
msgid "\"aarch64\""
msgstr "\"aarch64\""

#. type: textblock
#: ../fish/guestfish-actions.pod:2069 ../src/guestfs-actions.pod:3325
msgid "64 bit ARM."
msgstr "64-бітовий ARM."

#. type: textblock
#: ../fish/guestfish-actions.pod:2073 ../src/guestfs-actions.pod:3329
msgid "Libguestfs may return other architecture strings in future."
msgstr ""
"У майбутніх версіях Libguestfs може повертати і інші рядки назв архітектур."

#. type: textblock
#: ../fish/guestfish-actions.pod:2075 ../src/guestfs-actions.pod:3331
msgid "The function works on at least the following types of files:"
msgstr "Функція працює принаймні для таких типів файлів:"

#. type: textblock
#: ../fish/guestfish-actions.pod:2081 ../src/guestfs-actions.pod:3337
msgid "many types of Un*x and Linux binary"
msgstr "багатьох типів виконуваних файлів Un*x та Linux"

#. type: textblock
#: ../fish/guestfish-actions.pod:2085 ../src/guestfs-actions.pod:3341
msgid "many types of Un*x and Linux shared library"
msgstr "багатьох типів бібліотек спільного використання Un*x та Linux"

#. type: textblock
#: ../fish/guestfish-actions.pod:2089 ../src/guestfs-actions.pod:3345
msgid "Windows Win32 and Win64 binaries"
msgstr "виконуваних файлів Windows Win32 та Win64"

#. type: textblock
#: ../fish/guestfish-actions.pod:2093 ../src/guestfs-actions.pod:3349
msgid "Windows Win32 and Win64 DLLs"
msgstr "DLL Windows Win32 і Win64"

#. type: textblock
#: ../fish/guestfish-actions.pod:2095 ../src/guestfs-actions.pod:3351
msgid "Win32 binaries and DLLs return C<i386>."
msgstr "виконувані файли та DLL Win32 повертають C<i386>."

#. type: textblock
#: ../fish/guestfish-actions.pod:2097 ../src/guestfs-actions.pod:3353
msgid "Win64 binaries and DLLs return C<x86_64>."
msgstr "виконувані файли та DLL Win64 повертають C<x86_64>."

#. type: textblock
#: ../fish/guestfish-actions.pod:2101 ../src/guestfs-actions.pod:3357
msgid "Linux kernel modules"
msgstr "модулів ядра Linux"

#. type: textblock
#: ../fish/guestfish-actions.pod:2105 ../src/guestfs-actions.pod:3361
msgid "Linux new-style initrd images"
msgstr "образів нового стилю initrd Linux"

#. type: textblock
#: ../fish/guestfish-actions.pod:2109 ../src/guestfs-actions.pod:3365
msgid "some non-x86 Linux vmlinuz kernels"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2113 ../src/guestfs-actions.pod:3369
msgid "What it can't do currently:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2119 ../src/guestfs-actions.pod:3375
msgid "static libraries (libfoo.a)"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2123 ../src/guestfs-actions.pod:3379
msgid "Linux old-style initrd as compressed ext2 filesystem (RHEL 3)"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2127 ../src/guestfs-actions.pod:3383
msgid "x86 Linux vmlinuz kernels"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2129 ../src/guestfs-actions.pod:3385
msgid ""
"x86 vmlinuz images (bzImage format) consist of a mix of 16-, 32- and "
"compressed code, and are horribly hard to unpack.  If you want to find the "
"architecture of a kernel, use the architecture of the associated initrd or "
"kernel module(s) instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2136
msgid "filesize"
msgstr "filesize"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2138
#, no-wrap
msgid ""
" filesize file\n"
"\n"
msgstr ""
" filesize файл\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2140 ../src/guestfs-actions.pod:3403
msgid "This command returns the size of C<file> in bytes."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2142
msgid ""
"To get other stats about a file, use L</stat>, L</lstat>, L</is-dir>, L</is-"
"file> etc.  To get the size of block devices, use L</blockdev-getsize64>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2146
msgid "filesystem-available"
msgstr "filesystem-available"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2148
#, no-wrap
msgid ""
" filesystem-available filesystem\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2150 ../src/guestfs-actions.pod:3419
msgid ""
"Check whether libguestfs supports the named filesystem.  The argument "
"C<filesystem> is a filesystem name, such as C<ext3>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2154
msgid "You must call L</launch> before using this command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2156 ../src/guestfs-actions.pod:3425
msgid ""
"This is mainly useful as a negative test.  If this returns true, it doesn't "
"mean that a particular filesystem can be created or mounted, since "
"filesystems can fail for other reasons such as it being a later version of "
"the filesystem, or having incompatible features, or lacking the right mkfs."
"E<lt>I<fs>E<gt> tool."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2163
msgid ""
"See also L</available>, L</feature-available>, L<guestfs(3)/AVAILABILITY>."
msgstr ""
"Див. також L</available>, L</feature-available>, L<guestfs(3)/AVAILABILITY>."

#. type: =head2
#: ../fish/guestfish-actions.pod:2166
msgid "fill"
msgstr "fill"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2168
#, no-wrap
msgid ""
" fill c len path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2170 ../src/guestfs-actions.pod:3447
msgid ""
"This command creates a new file called C<path>.  The initial content of the "
"file is C<len> octets of C<c>, where C<c> must be a number in the range "
"C<[0..255]>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2174
msgid ""
"To fill a file with zero bytes (sparsely), it is much more efficient to use "
"L</truncate-size>.  To create a file with a pattern of repeating bytes use "
"L</fill-pattern>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2179
msgid "fill-dir"
msgstr "fill-dir"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2181
#, no-wrap
msgid ""
" fill-dir dir nr\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2183 ../src/guestfs-actions.pod:3472
msgid ""
"This function, useful for testing filesystems, creates C<nr> empty files in "
"the directory C<dir> with names C<00000000> through C<nr-1> (ie. each file "
"name is 8 digits long padded with zeroes)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2188
msgid "fill-pattern"
msgstr "fill-pattern"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2190
#, no-wrap
msgid ""
" fill-pattern pattern len path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2192
msgid ""
"This function is like L</fill> except that it creates a new file of length "
"C<len> containing the repeating pattern of bytes in C<pattern>.  The pattern "
"is truncated if necessary to ensure the length of the file is exactly C<len> "
"bytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2197
msgid "find"
msgstr "find"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2199
#, no-wrap
msgid ""
" find directory\n"
"\n"
msgstr ""
" find каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2201 ../src/guestfs-actions.pod:3509
msgid ""
"This command lists out all files and directories, recursively, starting at "
"C<directory>.  It is essentially equivalent to running the shell command "
"C<find directory -print> but some post-processing happens on the output, "
"described below."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2206 ../src/guestfs-actions.pod:3514
msgid ""
"This returns a list of strings I<without any prefix>.  Thus if the directory "
"structure was:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2209 ../src/guestfs-actions.pod:3517
#, no-wrap
msgid ""
" /tmp/a\n"
" /tmp/b\n"
" /tmp/c/d\n"
"\n"
msgstr ""
" /tmp/a\n"
" /tmp/b\n"
" /tmp/c/d\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2213
msgid "then the returned list from L</find> C</tmp> would be 4 elements:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2216 ../src/guestfs-actions.pod:3524
#, no-wrap
msgid ""
" a\n"
" b\n"
" c\n"
" c/d\n"
"\n"
msgstr ""
" a\n"
" b\n"
" c\n"
" c/d\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2221 ../src/guestfs-actions.pod:3529
msgid "If C<directory> is not a directory, then this command returns an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2224 ../src/guestfs-actions.pod:3532
msgid "The returned list is sorted."
msgstr "Список результатів буде впорядковано."

#. type: =head2
#: ../fish/guestfish-actions.pod:2226
msgid "find0"
msgstr "find0"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2228
#, no-wrap
msgid ""
" find0 directory (files|-)\n"
"\n"
msgstr ""
" find0 каталог (файли|-)\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2230 ../src/guestfs-actions.pod:3547
msgid ""
"This command lists out all files and directories, recursively, starting at "
"C<directory>, placing the resulting list in the external file called "
"C<files>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2234
msgid ""
"This command works the same way as L</find> with the following exceptions:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2241 ../src/guestfs-actions.pod:3558
msgid "The resulting list is written to an external file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2245 ../src/guestfs-actions.pod:3562
msgid ""
"Items (filenames) in the result are separated by C<\\0> characters.  See "
"L<find(1)> option I<-print0>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2250 ../src/guestfs-actions.pod:3567
msgid "The result list is not sorted."
msgstr "Список результатів не буде впорядковано."

#. type: =head2
#: ../fish/guestfish-actions.pod:2256
msgid "findfs-label"
msgstr "findfs-label"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2258
#, no-wrap
msgid ""
" findfs-label label\n"
"\n"
msgstr ""
" findfs-label мітка\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2260 ../src/guestfs-actions.pod:3581
msgid ""
"This command searches the filesystems and returns the one which has the "
"given label.  An error is returned if no such filesystem can be found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2264
msgid "To find the label of a filesystem, use L</vfs-label>."
msgstr "Для визначення мітки файлової системи скористайтеся L</vfs-label>."

#. type: =head2
#: ../fish/guestfish-actions.pod:2266
msgid "findfs-uuid"
msgstr "findfs-uuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2268
#, no-wrap
msgid ""
" findfs-uuid uuid\n"
"\n"
msgstr ""
" findfs-uuid uuid\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2270 ../src/guestfs-actions.pod:3598
msgid ""
"This command searches the filesystems and returns the one which has the "
"given UUID.  An error is returned if no such filesystem can be found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2274
msgid "To find the UUID of a filesystem, use L</vfs-uuid>."
msgstr "Для визначення UUID файлової системи скористайтеся L</vfs-uuid>."

#. type: =head2
#: ../fish/guestfish-actions.pod:2276
msgid "fsck"
msgstr "fsck"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2278
#, no-wrap
msgid ""
" fsck fstype device\n"
"\n"
msgstr ""
" fsck тип_файлової_системи пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2280 ../src/guestfs-actions.pod:3616
msgid ""
"This runs the filesystem checker (fsck) on C<device> which should have "
"filesystem type C<fstype>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2283 ../src/guestfs-actions.pod:3619
msgid ""
"The returned integer is the status.  See L<fsck(8)> for the list of status "
"codes from C<fsck>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2292 ../src/guestfs-actions.pod:3628
msgid "Multiple status codes can be summed together."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2296 ../src/guestfs-actions.pod:3632
msgid ""
"A non-zero return code can mean \"success\", for example if errors have been "
"corrected on the filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2301 ../src/guestfs-actions.pod:3637
msgid "Checking or repairing NTFS volumes is not supported (by linux-ntfs)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2306 ../src/guestfs-actions.pod:3642
msgid ""
"This command is entirely equivalent to running C<fsck -a -t fstype device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2308
msgid "fstrim"
msgstr "fstrim"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2310
#, no-wrap
msgid ""
" fstrim mountpoint [offset:N] [length:N] [minimumfreeextent:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2312 ../src/guestfs-actions.pod:3664
msgid ""
"Trim the free space in the filesystem mounted on C<mountpoint>.  The "
"filesystem must be mounted read-write."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2315 ../src/guestfs-actions.pod:3667
msgid ""
"The filesystem contents are not affected, but any free space in the "
"filesystem is \"trimmed\", that is, given back to the host device, thus "
"making disk images more sparse, allowing unused space in qcow2 files to be "
"reused, etc."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2320 ../src/guestfs-actions.pod:3672
msgid ""
"This operation requires support in libguestfs, the mounted filesystem, the "
"host filesystem, qemu and the host kernel.  If this support isn't present it "
"may give an error or even appear to run but do nothing."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2325
msgid ""
"See also L</zero-free-space>.  That is a slightly different operation that "
"turns free space in the filesystem into zeroes.  It is valid to call L</"
"fstrim> either instead of, or after calling L</zero-free-space>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2332
msgid "get-append"
msgstr "get-append"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2334
#, no-wrap
msgid ""
" get-append\n"
"\n"
msgstr ""
" get-append\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2336 ../src/guestfs-actions.pod:3713
msgid ""
"Return the additional kernel options which are added to the guest kernel "
"command line."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2339 ../src/guestfs-actions.pod:3716
msgid "If C<NULL> then no options are added."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2341
msgid "get-attach-method"
msgstr "get-attach-method"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2343
#, no-wrap
msgid ""
" get-attach-method\n"
"\n"
msgstr ""
" get-attach-method\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2345 ../fish/guestfish-actions.pod:2366
#: ../src/guestfs-actions.pod:3736 ../src/guestfs-actions.pod:3761
msgid "Return the current backend."
msgstr "Повертає назву поточного модуля."

#. type: textblock
#: ../fish/guestfish-actions.pod:2347 ../fish/guestfish-actions.pod:2370
msgid "See L</set-backend> and L<guestfs(3)/BACKEND>."
msgstr "Див. L</set-backend> та L<guestfs(3)/BACKEND>."

#. type: textblock
#: ../fish/guestfish-actions.pod:2349
msgid ""
"I<This function is deprecated.> In new code, use the L</get-backend> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2356
msgid "get-autosync"
msgstr "get-autosync"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2358
#, no-wrap
msgid ""
" get-autosync\n"
"\n"
msgstr ""
" get-autosync\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2360 ../src/guestfs-actions.pod:3750
msgid "Get the autosync flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2362
msgid "get-backend"
msgstr "get-backend"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2364
#, no-wrap
msgid ""
" get-backend\n"
"\n"
msgstr ""
" get-backend\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2368 ../fish/guestfish-actions.pod:6684
#: ../src/guestfs-actions.pod:3763 ../src/guestfs-actions.pod:10922
msgid "This handle property was previously called the \"attach method\"."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2372
msgid "get-backend-setting"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2374
#, no-wrap
msgid ""
" get-backend-setting name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2376 ../src/guestfs-actions.pod:3778
msgid ""
"Find a backend setting string which is either C<\"name\"> or begins with C<"
"\"name=\">.  If C<\"name\">, this returns the string C<\"1\">.  If C<\"name="
"\">, this returns the part after the equals sign (which may be an empty "
"string)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2381
msgid ""
"If no such setting is found, this function throws an error.  The errno (see "
"L</last-errno>) will be C<ESRCH> in this case."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2387
msgid "get-backend-settings"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2389
#, no-wrap
msgid ""
" get-backend-settings\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2391 ../src/guestfs-actions.pod:3799
msgid "Return the current backend settings."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2393
msgid ""
"This call returns all backend settings strings.  If you want to find a "
"single backend setting, see L</get-backend-setting>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2398
msgid "get-cachedir"
msgstr "get-cachedir"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2400
#, no-wrap
msgid ""
" get-cachedir\n"
"\n"
msgstr ""
" get-cachedir\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2402 ../src/guestfs-actions.pod:3817
msgid "Get the directory used by the handle to store the appliance cache."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2404
msgid "get-direct"
msgstr "get-direct"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2406
#, no-wrap
msgid ""
" get-direct\n"
"\n"
msgstr ""
" get-direct\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2408 ../src/guestfs-actions.pod:3829
msgid "Return the direct appliance mode flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2410
msgid "get-e2attrs"
msgstr "get-e2attrs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2412
#, no-wrap
msgid ""
" get-e2attrs file\n"
"\n"
msgstr ""
" get-e2attrs файл\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2414 ../src/guestfs-actions.pod:3841
msgid "This returns the file attributes associated with C<file>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2416 ../src/guestfs-actions.pod:3843
msgid ""
"The attributes are a set of bits associated with each inode which affect the "
"behaviour of the file.  The attributes are returned as a string of letters "
"(described below).  The string may be empty, indicating that no file "
"attributes are set for this file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2422 ../fish/guestfish-actions.pod:6774
#: ../src/guestfs-actions.pod:3849 ../src/guestfs-actions.pod:11048
msgid ""
"These attributes are only present when the file is located on an ext2/3/4 "
"filesystem.  Using this call on other filesystem types will result in an "
"error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2426 ../src/guestfs-actions.pod:3853
msgid "The characters (file attributes) in the returned string are currently:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2431 ../src/guestfs-actions.pod:3858
msgid "'A'"
msgstr "'A'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2433 ../src/guestfs-actions.pod:3860
msgid "When the file is accessed, its atime is not modified."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2435 ../src/guestfs-actions.pod:3862
msgid "'a'"
msgstr "'a'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2437 ../src/guestfs-actions.pod:3864
msgid "The file is append-only."
msgstr "До файла можна лише дописувати дані."

#. type: =item
#: ../fish/guestfish-actions.pod:2439 ../fish/guestfish-actions.pod:6311
#: ../src/guestfs-actions.pod:3866 ../src/guestfs-actions.pod:10273
msgid "'c'"
msgstr "'c'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2441 ../src/guestfs-actions.pod:3868
msgid "The file is compressed on-disk."
msgstr "Файл стиснено на диску."

#. type: =item
#: ../fish/guestfish-actions.pod:2443 ../src/guestfs-actions.pod:3870
msgid "'D'"
msgstr "'D'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2445 ../src/guestfs-actions.pod:3872
msgid ""
"(Directories only.)  Changes to this directory are written synchronously to "
"disk."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2448 ../fish/guestfish-actions.pod:6315
#: ../src/guestfs-actions.pod:3875 ../src/guestfs-actions.pod:10277
msgid "'d'"
msgstr "'d'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2450 ../src/guestfs-actions.pod:3877
msgid "The file is not a candidate for backup (see L<dump(8)>)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2452 ../src/guestfs-actions.pod:3879
msgid "'E'"
msgstr "'E'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2454 ../src/guestfs-actions.pod:3881
msgid "The file has compression errors."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2456 ../src/guestfs-actions.pod:3883
msgid "'e'"
msgstr "'e'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2458 ../src/guestfs-actions.pod:3885
msgid "The file is using extents."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2460 ../src/guestfs-actions.pod:3887
msgid "'h'"
msgstr "'h'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2462 ../src/guestfs-actions.pod:3889
msgid ""
"The file is storing its blocks in units of the filesystem blocksize instead "
"of sectors."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2465 ../src/guestfs-actions.pod:3892
msgid "'I'"
msgstr "'I'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2467 ../src/guestfs-actions.pod:3894
msgid "(Directories only.)  The directory is using hashed trees."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2469 ../src/guestfs-actions.pod:3896
msgid "'i'"
msgstr "'i'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2471 ../src/guestfs-actions.pod:3898
msgid ""
"The file is immutable.  It cannot be modified, deleted or renamed.  No link "
"can be created to this file."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2474 ../src/guestfs-actions.pod:3901
msgid "'j'"
msgstr "'j'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2476 ../src/guestfs-actions.pod:3903
msgid "The file is data-journaled."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2478 ../fish/guestfish-actions.pod:6331
#: ../src/guestfs-actions.pod:3905 ../src/guestfs-actions.pod:10293
msgid "'s'"
msgstr "'s'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2480 ../src/guestfs-actions.pod:3907
msgid "When the file is deleted, all its blocks will be zeroed."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2482 ../src/guestfs-actions.pod:3909
msgid "'S'"
msgstr "'S'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2484 ../src/guestfs-actions.pod:3911
msgid "Changes to this file are written synchronously to disk."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2486 ../src/guestfs-actions.pod:3913
msgid "'T'"
msgstr "'T'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2488 ../src/guestfs-actions.pod:3915
msgid ""
"(Directories only.)  This is a hint to the block allocator that "
"subdirectories contained in this directory should be spread across blocks.  "
"If not present, the block allocator will try to group subdirectories "
"together."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2493 ../src/guestfs-actions.pod:3920
msgid "'t'"
msgstr "'t'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2495 ../src/guestfs-actions.pod:3922
msgid ""
"For a file, this disables tail-merging.  (Not used by upstream "
"implementations of ext2.)"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2498 ../fish/guestfish-actions.pod:6335
#: ../src/guestfs-actions.pod:3925 ../src/guestfs-actions.pod:10297
msgid "'u'"
msgstr "'u'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2500 ../src/guestfs-actions.pod:3927
msgid ""
"When the file is deleted, its blocks will be saved, allowing the file to be "
"undeleted."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2503 ../src/guestfs-actions.pod:3930
msgid "'X'"
msgstr "'X'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2505 ../src/guestfs-actions.pod:3932
msgid "The raw contents of the compressed file may be accessed."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2507 ../src/guestfs-actions.pod:3934
msgid "'Z'"
msgstr "'Z'"

#. type: textblock
#: ../fish/guestfish-actions.pod:2509 ../src/guestfs-actions.pod:3936
msgid "The compressed file is dirty."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2513 ../src/guestfs-actions.pod:3940
msgid ""
"More file attributes may be added to this list later.  Not all file "
"attributes may be set for all kinds of files.  For detailed information, "
"consult the L<chattr(1)> man page."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2517
msgid "See also L</set-e2attrs>."
msgstr "Див. також L</set-e2attrs>."

#. type: textblock
#: ../fish/guestfish-actions.pod:2519
msgid ""
"Don't confuse these attributes with extended attributes (see L</getxattr>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2522
msgid "get-e2generation"
msgstr "get-e2generation"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2524
#, no-wrap
msgid ""
" get-e2generation file\n"
"\n"
msgstr ""
" get-e2generation файл\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2526 ../src/guestfs-actions.pod:3960
msgid ""
"This returns the ext2 file generation of a file.  The generation (which used "
"to be called the \"version\") is a number associated with an inode.  This is "
"most commonly used by NFS servers."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2530 ../src/guestfs-actions.pod:3964
msgid ""
"The generation is only present when the file is located on an ext2/3/4 "
"filesystem.  Using this call on other filesystem types will result in an "
"error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2534
msgid "See L</set-e2generation>."
msgstr "Див. L</set-e2generation>."

#. type: =head2
#: ../fish/guestfish-actions.pod:2536
msgid "get-e2label"
msgstr "get-e2label"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2538
#, no-wrap
msgid ""
" get-e2label device\n"
"\n"
msgstr ""
" get-e2label пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2540 ../src/guestfs-actions.pod:3987
msgid ""
"This returns the ext2/3/4 filesystem label of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2543
msgid ""
"I<This function is deprecated.> In new code, use the L</vfs-label> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2550
msgid "get-e2uuid"
msgstr "get-e2uuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2552
#, no-wrap
msgid ""
" get-e2uuid device\n"
"\n"
msgstr ""
" get-e2uuid пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2554 ../src/guestfs-actions.pod:4008
msgid ""
"This returns the ext2/3/4 filesystem UUID of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2557
msgid ""
"I<This function is deprecated.> In new code, use the L</vfs-uuid> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2564
msgid "get-hv"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2566
#, no-wrap
msgid ""
" get-hv\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2568 ../src/guestfs-actions.pod:4021
msgid "Return the current hypervisor binary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2570 ../fish/guestfish-actions.pod:2674
#: ../src/guestfs-actions.pod:4023 ../src/guestfs-actions.pod:4198
msgid ""
"This is always non-NULL.  If it wasn't set already, then this will return "
"the default qemu binary name."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2573
msgid "get-libvirt-requested-credential-challenge"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2575
#, no-wrap
msgid ""
" get-libvirt-requested-credential-challenge index\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2577 ../src/guestfs-actions.pod:4037
msgid ""
"Get the challenge (provided by libvirt) for the C<index>'th requested "
"credential.  If libvirt did not provide a challenge, this returns the empty "
"string C<\"\">."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2581 ../fish/guestfish-actions.pod:2591
#: ../fish/guestfish-actions.pod:2601 ../fish/guestfish-actions.pod:2614
#: ../fish/guestfish-actions.pod:6892 ../fish/guestfish-actions.pod:6929
#: ../src/guestfs-actions.pod:4041 ../src/guestfs-actions.pod:4058
#: ../src/guestfs-actions.pod:4075 ../src/guestfs-actions.pod:4094
#: ../src/guestfs-actions.pod:11228 ../src/guestfs-actions.pod:11271
msgid ""
"See L<guestfs(3)/LIBVIRT AUTHENTICATION> for documentation and example code."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2583
msgid "get-libvirt-requested-credential-defresult"
msgstr "get-libvirt-requested-credential-defresult"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2585
#, no-wrap
msgid ""
" get-libvirt-requested-credential-defresult index\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2587 ../src/guestfs-actions.pod:4054
msgid ""
"Get the default result (provided by libvirt) for the C<index>'th requested "
"credential.  If libvirt did not provide a default result, this returns the "
"empty string C<\"\">."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2593
msgid "get-libvirt-requested-credential-prompt"
msgstr "get-libvirt-requested-credential-prompt"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2595
#, no-wrap
msgid ""
" get-libvirt-requested-credential-prompt index\n"
"\n"
msgstr ""
" get-libvirt-requested-credential-prompt індекс\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2597 ../src/guestfs-actions.pod:4071
msgid ""
"Get the prompt (provided by libvirt) for the C<index>'th requested "
"credential.  If libvirt did not provide a prompt, this returns the empty "
"string C<\"\">."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2603
msgid "get-libvirt-requested-credentials"
msgstr "get-libvirt-requested-credentials"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2605
#, no-wrap
msgid ""
" get-libvirt-requested-credentials\n"
"\n"
msgstr ""
" get-libvirt-requested-credentials\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2607 ../src/guestfs-actions.pod:4087
msgid ""
"This should only be called during the event callback for events of type "
"C<GUESTFS_EVENT_LIBVIRT_AUTH>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2610
msgid ""
"Return the list of credentials requested by libvirt.  Possible values are a "
"subset of the strings provided when you called L</set-libvirt-supported-"
"credentials>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2616
msgid "get-memsize"
msgstr "get-memsize"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2618
#, no-wrap
msgid ""
" get-memsize\n"
"\n"
msgstr ""
" get-memsize\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2620 ../src/guestfs-actions.pod:4107
msgid "This gets the memory size in megabytes allocated to the hypervisor."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2623
msgid ""
"If L</set-memsize> was not called on this handle, and if "
"C<LIBGUESTFS_MEMSIZE> was not set, then this returns the compiled-in default "
"value for memsize."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2627 ../fish/guestfish-actions.pod:2697
#: ../fish/guestfish-actions.pod:6945 ../fish/guestfish-actions.pod:7069
#: ../src/guestfs-actions.pod:4114 ../src/guestfs-actions.pod:4225
#: ../src/guestfs-actions.pod:11291 ../src/guestfs-actions.pod:11443
msgid ""
"For more information on the architecture of libguestfs, see L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2630
msgid "get-network"
msgstr "get-network"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2632
#, no-wrap
msgid ""
" get-network\n"
"\n"
msgstr ""
" get-network\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2634 ../src/guestfs-actions.pod:4126
msgid "This returns the enable network flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2636
msgid "get-path"
msgstr "get-path"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2638
#, no-wrap
msgid ""
" get-path\n"
"\n"
msgstr ""
" get-path\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2640 ../src/guestfs-actions.pod:4137
msgid "Return the current search path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2642 ../src/guestfs-actions.pod:4139
msgid ""
"This is always non-NULL.  If it wasn't set already, then this will return "
"the default path."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2645
msgid "get-pgroup"
msgstr "get-pgroup"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2647
#, no-wrap
msgid ""
" get-pgroup\n"
"\n"
msgstr ""
" get-pgroup\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2649 ../src/guestfs-actions.pod:4152
msgid "This returns the process group flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2651
msgid "get-pid"
msgstr "get-pid"

#. type: =head2
#: ../fish/guestfish-actions.pod:2653
msgid "pid"
msgstr "PID"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2655
#, no-wrap
msgid ""
" get-pid\n"
"\n"
msgstr ""
" get-pid\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2657 ../src/guestfs-actions.pod:4163
msgid ""
"Return the process ID of the hypervisor.  If there is no hypervisor running, "
"then this will return an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2660 ../src/guestfs-actions.pod:4166
msgid "This is an internal call used for debugging and testing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2662
msgid "get-program"
msgstr "get-program"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2664
#, no-wrap
msgid ""
" get-program\n"
"\n"
msgstr ""
" get-program\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2666
msgid "Get the program name.  See L</set-program>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2668
msgid "get-qemu"
msgstr "get-qemu"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2670
#, no-wrap
msgid ""
" get-qemu\n"
"\n"
msgstr ""
" get-qemu\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2672 ../src/guestfs-actions.pod:4196
msgid "Return the current hypervisor binary (usually qemu)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2677
msgid ""
"I<This function is deprecated.> In new code, use the L</get-hv> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2684
msgid "get-recovery-proc"
msgstr "get-recovery-proc"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2686
#, no-wrap
msgid ""
" get-recovery-proc\n"
"\n"
msgstr ""
" get-recovery-proc\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2688 ../src/guestfs-actions.pod:4211
msgid "Return the recovery process enabled flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2690
msgid "get-selinux"
msgstr "get-selinux"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2692
#, no-wrap
msgid ""
" get-selinux\n"
"\n"
msgstr ""
" get-selinux\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2694
msgid ""
"This returns the current setting of the selinux flag which is passed to the "
"appliance at boot time.  See L</set-selinux>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2700
msgid "get-smp"
msgstr "get-smp"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2702
#, no-wrap
msgid ""
" get-smp\n"
"\n"
msgstr ""
" get-smp\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2704 ../src/guestfs-actions.pod:4237
msgid "This returns the number of virtual CPUs assigned to the appliance."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2706
msgid "get-tmpdir"
msgstr "get-tmpdir"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2708
#, no-wrap
msgid ""
" get-tmpdir\n"
"\n"
msgstr ""
" get-tmpdir\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2710 ../src/guestfs-actions.pod:4262
msgid "Get the directory used by the handle to store temporary files."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2712
msgid "get-trace"
msgstr "get-trace"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2714
#, no-wrap
msgid ""
" get-trace\n"
"\n"
msgstr ""
" get-trace\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2716 ../src/guestfs-actions.pod:4274
msgid "Return the command trace flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2718
msgid "get-umask"
msgstr "get-umask"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2720
#, no-wrap
msgid ""
" get-umask\n"
"\n"
msgstr ""
" get-umask\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2722
msgid ""
"Return the current umask.  By default the umask is C<022> unless it has been "
"set by calling L</umask>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2725
msgid "get-verbose"
msgstr "get-verbose"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2727
#, no-wrap
msgid ""
" get-verbose\n"
"\n"
msgstr ""
" get-verbose\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2729 ../src/guestfs-actions.pod:4297
msgid "This returns the verbose messages flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2731
msgid "getcon"
msgstr "getcon"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2733
#, no-wrap
msgid ""
" getcon\n"
"\n"
msgstr ""
" getcon\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2735 ../src/guestfs-actions.pod:4308
msgid "This gets the SELinux security context of the daemon."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2737
msgid "See the documentation about SELINUX in L<guestfs(3)>, and L</setcon>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2740
msgid "getxattr"
msgstr "getxattr"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2742
#, no-wrap
msgid ""
" getxattr path name\n"
"\n"
msgstr ""
" getxattr шлях назва\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2744
msgid ""
"Get a single extended attribute from file C<path> named C<name>.  This call "
"follows symlinks.  If you want to lookup an extended attribute for the "
"symlink itself, use L</lgetxattr>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2748 ../fish/guestfish-actions.pod:4415
msgid ""
"Normally it is better to get all extended attributes from a file in one go "
"by calling L</getxattrs>.  However some Linux filesystem implementations are "
"buggy and do not provide a way to list out attributes.  For these "
"filesystems (notably ntfs-3g)  you have to know the names of the extended "
"attributes you want in advance and call this function."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2755 ../fish/guestfish-actions.pod:4422
#: ../src/guestfs-actions.pod:4337 ../src/guestfs-actions.pod:7034
msgid ""
"Extended attribute values are blobs of binary data.  If there is no extended "
"attribute named C<name>, this returns an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2758
msgid "See also: L</getxattrs>, L</lgetxattr>, L<attr(5)>."
msgstr "Див. також L</getxattrs>, L</lgetxattr>, L<attr(5)>."

#. type: =head2
#: ../fish/guestfish-actions.pod:2760
msgid "getxattrs"
msgstr "getxattrs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2762
#, no-wrap
msgid ""
" getxattrs path\n"
"\n"
msgstr ""
" getxattrs шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2764 ../src/guestfs-actions.pod:4354
msgid ""
"This call lists the extended attributes of the file or directory C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2767 ../src/guestfs-actions.pod:4357
msgid ""
"At the system call level, this is a combination of the L<listxattr(2)> and "
"L<getxattr(2)> calls."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2770
msgid "See also: L</lgetxattrs>, L<attr(5)>."
msgstr "Див. також L</lgetxattrs>, L<attr(5)>."

#. type: =head2
#: ../fish/guestfish-actions.pod:2772
msgid "glob-expand"
msgstr "glob-expand"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2774
#, no-wrap
msgid ""
" glob-expand pattern\n"
"\n"
msgstr ""
" glob-expand шаблон\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2776 ../src/guestfs-actions.pod:4374
msgid ""
"This command searches for all the pathnames matching C<pattern> according to "
"the wildcard expansion rules used by the shell."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2780 ../src/guestfs-actions.pod:4378
msgid ""
"If no paths match, then this returns an empty list (note: not an error)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2783 ../src/guestfs-actions.pod:4381
msgid ""
"It is just a wrapper around the C L<glob(3)> function with flags C<GLOB_MARK|"
"GLOB_BRACE>.  See that manual page for more details."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2787
msgid ""
"Notice that there is no equivalent command for expanding a device name (eg. "
"C</dev/sd*>).  Use L</list-devices>, L</list-partitions> etc functions "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2791
msgid "grep"
msgstr "grep"

#. type: =head2
#: ../fish/guestfish-actions.pod:2793
msgid "grep-opts"
msgstr "grep-opts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2795
#, no-wrap
msgid ""
" grep regex path [extended:true|false] [fixed:true|false] [insensitive:true|false] [compressed:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2797 ../src/guestfs-actions.pod:4427
msgid "This calls the external C<grep> program and returns the matching lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2800 ../src/guestfs-actions.pod:4430
msgid "The optional flags are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2804 ../src/guestfs-actions.pod:4434
msgid "C<extended>"
msgstr "C<extended>"

#. type: textblock
#: ../fish/guestfish-actions.pod:2806 ../src/guestfs-actions.pod:4436
msgid ""
"Use extended regular expressions.  This is the same as using the I<-E> flag."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2809 ../src/guestfs-actions.pod:4439
msgid "C<fixed>"
msgstr "C<fixed>"

#. type: textblock
#: ../fish/guestfish-actions.pod:2811 ../src/guestfs-actions.pod:4441
msgid ""
"Match fixed (don't use regular expressions).  This is the same as using the "
"I<-F> flag."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2814 ../src/guestfs-actions.pod:4444
msgid "C<insensitive>"
msgstr "C<insensitive>"

#. type: textblock
#: ../fish/guestfish-actions.pod:2816 ../src/guestfs-actions.pod:4446
msgid "Match case-insensitive.  This is the same as using the I<-i> flag."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2818 ../src/guestfs-actions.pod:4448
msgid "C<compressed>"
msgstr "C<compressed>"

#. type: textblock
#: ../fish/guestfish-actions.pod:2820 ../src/guestfs-actions.pod:4450
msgid ""
"Use C<zgrep> instead of C<grep>.  This allows the input to be compress- or "
"gzip-compressed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2830
msgid "grepi"
msgstr "grepi"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2832
#, no-wrap
msgid ""
" grepi regex path\n"
"\n"
msgstr ""
" grepi формальний_вираз шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2834 ../src/guestfs-actions.pod:4502
msgid ""
"This calls the external C<grep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2847
msgid "grub-install"
msgstr "grub-install"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2849
#, no-wrap
msgid ""
" grub-install root device\n"
"\n"
msgstr ""
" grub-install кореневий пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2851 ../src/guestfs-actions.pod:4521
msgid ""
"This command installs GRUB 1 (the Grand Unified Bootloader) on C<device>, "
"with the root directory being C<root>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2860 ../src/guestfs-actions.pod:4530
msgid ""
"There is currently no way in the API to install grub2, which is used by most "
"modern Linux guests.  It is possible to run the grub2 command from the "
"guest, although see the caveats in L<guestfs(3)/RUNNING COMMANDS>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2867 ../src/guestfs-actions.pod:4537
msgid ""
"This uses C<grub-install> from the host.  Unfortunately grub is not always "
"compatible with itself, so this only works in rather narrow circumstances.  "
"Careful testing with each guest version is advisable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2874 ../src/guestfs-actions.pod:4544
msgid ""
"If grub-install reports the error \"No suitable drive was found in the "
"generated device map.\" it may be that you need to create a C</boot/grub/"
"device.map> file first that contains the mapping between grub device names "
"and Linux device names.  It is usually sufficient to create a file "
"containing:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2881 ../src/guestfs-actions.pod:4551
#, no-wrap
msgid ""
" (hd0) /dev/vda\n"
"\n"
msgstr ""
" (hd0) /dev/vda\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2883 ../src/guestfs-actions.pod:4553
msgid "replacing C</dev/vda> with the name of the installation device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2887
msgid "head"
msgstr "head"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2889
#, no-wrap
msgid ""
" head path\n"
"\n"
msgstr ""
" head шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2891 ../src/guestfs-actions.pod:4567
msgid ""
"This command returns up to the first 10 lines of a file as a list of strings."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2897
msgid "head-n"
msgstr "head-n"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2899
#, no-wrap
msgid ""
" head-n nrlines path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2901 ../src/guestfs-actions.pod:4586
msgid ""
"If the parameter C<nrlines> is a positive number, this returns the first "
"C<nrlines> lines of the file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2904 ../src/guestfs-actions.pod:4589
msgid ""
"If the parameter C<nrlines> is a negative number, this returns lines from "
"the file C<path>, excluding the last C<nrlines> lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2907 ../fish/guestfish-actions.pod:7544
#: ../src/guestfs-actions.pod:4592 ../src/guestfs-actions.pod:12174
msgid "If the parameter C<nrlines> is zero, this returns an empty list."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2912
msgid "hexdump"
msgstr "hexdump"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2914
#, no-wrap
msgid ""
" hexdump path\n"
"\n"
msgstr ""
" hexdump шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2916 ../src/guestfs-actions.pod:4609
msgid ""
"This runs C<hexdump -C> on the given C<path>.  The result is the human-"
"readable, canonical hex dump of the file."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2922
msgid "hivex-close"
msgstr "hivex-close"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2924
#, no-wrap
msgid ""
" hivex-close\n"
"\n"
msgstr ""
" hivex-close\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2926 ../src/guestfs-actions.pod:4625
msgid "Close the current hivex handle."
msgstr "Закрити поточний елемент керування hivex."

#. type: textblock
#: ../fish/guestfish-actions.pod:2928 ../fish/guestfish-actions.pod:2941
#: ../fish/guestfish-actions.pod:2949 ../fish/guestfish-actions.pod:2957
#: ../fish/guestfish-actions.pod:2965 ../fish/guestfish-actions.pod:2974
#: ../fish/guestfish-actions.pod:2984 ../fish/guestfish-actions.pod:2992
#: ../fish/guestfish-actions.pod:3000 ../fish/guestfish-actions.pod:3009
#: ../fish/guestfish-actions.pod:3017 ../fish/guestfish-actions.pod:3027
#: ../fish/guestfish-actions.pod:3037 ../fish/guestfish-actions.pod:3045
#: ../fish/guestfish-actions.pod:3053 ../fish/guestfish-actions.pod:3075
#: ../src/guestfs-actions.pod:4627 ../src/guestfs-actions.pod:4646
#: ../src/guestfs-actions.pod:4661 ../src/guestfs-actions.pod:4675
#: ../src/guestfs-actions.pod:4691 ../src/guestfs-actions.pod:4707
#: ../src/guestfs-actions.pod:4724 ../src/guestfs-actions.pod:4738
#: ../src/guestfs-actions.pod:4753 ../src/guestfs-actions.pod:4772
#: ../src/guestfs-actions.pod:4786 ../src/guestfs-actions.pod:4814
#: ../src/guestfs-actions.pod:4849 ../src/guestfs-actions.pod:4863
#: ../src/guestfs-actions.pod:4878 ../src/guestfs-actions.pod:4914
msgid "This is a wrapper around the L<hivex(3)> call of the same name."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2930
msgid "hivex-commit"
msgstr "hivex-commit"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2932
#, no-wrap
msgid ""
" hivex-commit filename\n"
"\n"
msgstr ""
" hivex-commit назва_файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2934 ../src/guestfs-actions.pod:4639
msgid "Commit (write) changes to the hive."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2936 ../src/guestfs-actions.pod:4641
msgid ""
"If the optional C<filename> parameter is null, then the changes are written "
"back to the same hive that was opened.  If this is not null then they are "
"written to the alternate filename given and the original hive is left "
"untouched."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2943
msgid "hivex-node-add-child"
msgstr "hivex-node-add-child"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2945
#, no-wrap
msgid ""
" hivex-node-add-child parent name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2947 ../src/guestfs-actions.pod:4659
msgid "Add a child node to C<parent> named C<name>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2951
msgid "hivex-node-children"
msgstr "hivex-node-children"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2953
#, no-wrap
msgid ""
" hivex-node-children nodeh\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2955 ../src/guestfs-actions.pod:4673
msgid "Return the list of nodes which are subkeys of C<nodeh>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2959
msgid "hivex-node-delete-child"
msgstr "hivex-node-delete-child"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2961
#, no-wrap
msgid ""
" hivex-node-delete-child nodeh\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2963 ../src/guestfs-actions.pod:4689
msgid "Delete C<nodeh>, recursively if necessary."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2967
msgid "hivex-node-get-child"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2969
#, no-wrap
msgid ""
" hivex-node-get-child nodeh name\n"
"\n"
msgstr ""
" hivex-node-get-child nodeh назва\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2971 ../src/guestfs-actions.pod:4704
msgid ""
"Return the child of C<nodeh> with the name C<name>, if it exists.  This can "
"return C<0> meaning the name was not found."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2976
msgid "hivex-node-get-value"
msgstr "hivex-node-get-value"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2978
#, no-wrap
msgid ""
" hivex-node-get-value nodeh key\n"
"\n"
msgstr ""
" hivex-node-get-value nodeh ключ\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2980 ../src/guestfs-actions.pod:4720
msgid ""
"Return the value attached to C<nodeh> which has the name C<key>, if it "
"exists.  This can return C<0> meaning the key was not found."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2986
msgid "hivex-node-name"
msgstr "hivex-node-name"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2988
#, no-wrap
msgid ""
" hivex-node-name nodeh\n"
"\n"
msgstr ""
" hivex-node-name nodeh\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2990 ../src/guestfs-actions.pod:4736
msgid "Return the name of C<nodeh>."
msgstr "Повернути назву C<nodeh>."

#. type: =head2
#: ../fish/guestfish-actions.pod:2994
msgid "hivex-node-parent"
msgstr "hivex-node-parent"

#. type: verbatim
#: ../fish/guestfish-actions.pod:2996
#, no-wrap
msgid ""
" hivex-node-parent nodeh\n"
"\n"
msgstr ""
" hivex-node-parent nodeh\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:2998 ../src/guestfs-actions.pod:4751
msgid "Return the parent node of C<nodeh>."
msgstr "Повернути батьківський вузол C<nodeh>."

#. type: =head2
#: ../fish/guestfish-actions.pod:3002
msgid "hivex-node-set-value"
msgstr "hivex-node-set-value"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3004
#, no-wrap
msgid ""
" hivex-node-set-value nodeh key t val\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3006 ../src/guestfs-actions.pod:4769
msgid ""
"Set or replace a single value under the node C<nodeh>.  The C<key> is the "
"name, C<t> is the type, and C<val> is the data."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3011
msgid "hivex-node-values"
msgstr "hivex-node-values"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3013
#, no-wrap
msgid ""
" hivex-node-values nodeh\n"
"\n"
msgstr ""
" hivex-node-values nodeh\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3015 ../src/guestfs-actions.pod:4784
msgid "Return the array of (key, datatype, data) tuples attached to C<nodeh>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3019
msgid "hivex-open"
msgstr "hivex-open"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3021
#, no-wrap
msgid ""
" hivex-open filename [verbose:true|false] [debug:true|false] [write:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3023 ../src/guestfs-actions.pod:4810
msgid ""
"Open the Windows Registry hive file named C<filename>.  If there was any "
"previous hivex handle associated with this guestfs session, then it is "
"closed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3031
msgid "hivex-root"
msgstr "hivex-root"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3033
#, no-wrap
msgid ""
" hivex-root\n"
"\n"
msgstr ""
" hivex-root\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3035 ../src/guestfs-actions.pod:4847
msgid "Return the root node of the hive."
msgstr "Повернути кореневий вузол гілки."

#. type: =head2
#: ../fish/guestfish-actions.pod:3039
msgid "hivex-value-key"
msgstr "hivex-value-key"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3041
#, no-wrap
msgid ""
" hivex-value-key valueh\n"
"\n"
msgstr ""
" hivex-value-key valueh\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3043 ../src/guestfs-actions.pod:4861
msgid "Return the key (name) field of a (key, datatype, data) tuple."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3047
msgid "hivex-value-type"
msgstr "hivex-value-type"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3049
#, no-wrap
msgid ""
" hivex-value-type valueh\n"
"\n"
msgstr ""
" hivex-value-type valueh\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3051 ../src/guestfs-actions.pod:4876
msgid "Return the data type field from a (key, datatype, data) tuple."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3055
msgid "hivex-value-utf8"
msgstr "hivex-value-utf8"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3057
#, no-wrap
msgid ""
" hivex-value-utf8 valueh\n"
"\n"
msgstr ""
" hivex-value-utf8 valueh\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3059
msgid ""
"This calls L</hivex-value-value> (which returns the data field from a hivex "
"value tuple).  It then assumes that the field is a UTF-16LE string and "
"converts the result to UTF-8 (or if this is not possible, it returns an "
"error)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3064 ../src/guestfs-actions.pod:4895
msgid ""
"This is useful for reading strings out of the Windows registry.  However it "
"is not foolproof because the registry is not strongly-typed and fields can "
"contain arbitrary or unexpected data."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3069
msgid "hivex-value-value"
msgstr "hivex-value-value"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3071
#, no-wrap
msgid ""
" hivex-value-value valueh\n"
"\n"
msgstr ""
" hivex-value-value valueh\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3073 ../src/guestfs-actions.pod:4912
msgid "Return the data field of a (key, datatype, data) tuple."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3077
msgid "See also: L</hivex-value-utf8>."
msgstr "Див. також L</hivex-value-utf8>."

#. type: =head2
#: ../fish/guestfish-actions.pod:3079
msgid "initrd-cat"
msgstr "initrd-cat"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3081
#, no-wrap
msgid ""
" initrd-cat initrdpath filename\n"
"\n"
msgstr ""
" initrd-cat шлях_initrd назва_файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3083 ../src/guestfs-actions.pod:4932
msgid ""
"This command unpacks the file C<filename> from the initrd file called "
"C<initrdpath>.  The filename must be given I<without> the initial C</> "
"character."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3087 ../src/guestfs-actions.pod:4936
msgid ""
"For example, in guestfish you could use the following command to examine the "
"boot script (usually called C</init>)  contained in a Linux initrd or "
"initramfs image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3091 ../src/guestfs-actions.pod:4940
#, no-wrap
msgid ""
" initrd-cat /boot/initrd-<version>.img init\n"
"\n"
msgstr ""
" initrd-cat /boot/initrd-<версія>.img init\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3093
msgid "See also L</initrd-list>."
msgstr "Див. також L</initrd-list>."

#. type: =head2
#: ../fish/guestfish-actions.pod:3098
msgid "initrd-list"
msgstr "initrd-list"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3100
#, no-wrap
msgid ""
" initrd-list path\n"
"\n"
msgstr ""
" initrd-list шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3102 ../src/guestfs-actions.pod:4959
msgid "This command lists out files contained in an initrd."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3104 ../src/guestfs-actions.pod:4961
msgid ""
"The files are listed without any initial C</> character.  The files are "
"listed in the order they appear (not necessarily alphabetical).  Directory "
"names are listed as separate items."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3108 ../src/guestfs-actions.pod:4965
msgid ""
"Old Linux kernels (2.4 and earlier) used a compressed ext2 filesystem as "
"initrd.  We I<only> support the newer initramfs format (compressed cpio "
"files)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3112
msgid "inotify-add-watch"
msgstr "inotify-add-watch"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3114
#, no-wrap
msgid ""
" inotify-add-watch path mask\n"
"\n"
msgstr ""
" inotify-add-watch шлях маска\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3116 ../src/guestfs-actions.pod:4982
msgid "Watch C<path> for the events listed in C<mask>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3118 ../src/guestfs-actions.pod:4984
msgid ""
"Note that if C<path> is a directory then events within that directory are "
"watched, but this does I<not> happen recursively (in subdirectories)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3122 ../src/guestfs-actions.pod:4988
msgid ""
"Note for non-C or non-Linux callers: the inotify events are defined by the "
"Linux kernel ABI and are listed in C</usr/include/sys/inotify.h>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3126
msgid "inotify-close"
msgstr "inotify-close"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3128
#, no-wrap
msgid ""
" inotify-close\n"
"\n"
msgstr ""
" inotify-close\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3130 ../src/guestfs-actions.pod:5001
msgid ""
"This closes the inotify handle which was previously opened by inotify_init.  "
"It removes all watches, throws away any pending events, and deallocates all "
"resources."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3134
msgid "inotify-files"
msgstr "inotify-files"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3136
#, no-wrap
msgid ""
" inotify-files\n"
"\n"
msgstr ""
" inotify-files\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3138
msgid ""
"This function is a helpful wrapper around L</inotify-read> which just "
"returns a list of pathnames of objects that were touched.  The returned "
"pathnames are sorted and deduplicated."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3142
msgid "inotify-init"
msgstr "inotify-init"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3144
#, no-wrap
msgid ""
" inotify-init maxevents\n"
"\n"
msgstr ""
" inotify-init макс_подій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3146 ../src/guestfs-actions.pod:5030
msgid ""
"This command creates a new inotify handle.  The inotify subsystem can be "
"used to notify events which happen to objects in the guest filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3150
msgid ""
"C<maxevents> is the maximum number of events which will be queued up between "
"calls to L</inotify-read> or L</inotify-files>.  If this is passed as C<0>, "
"then the kernel (or previously set)  default is used.  For Linux 2.6.29 the "
"default was 16384 events.  Beyond this limit, the kernel throws away events, "
"but records the fact that it threw them away by setting a flag "
"C<IN_Q_OVERFLOW> in the returned structure list (see L</inotify-read>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3160
msgid ""
"Before any events are generated, you have to add some watches to the "
"internal watch list.  See: L</inotify-add-watch> and L</inotify-rm-watch>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3164
msgid ""
"Queued up events should be read periodically by calling L</inotify-read> (or "
"L</inotify-files> which is just a helpful wrapper around L</inotify-read>).  "
"If you don't read the events out often enough then you risk the internal "
"queue overflowing."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3171
msgid ""
"The handle should be closed after use by calling L</inotify-close>.  This "
"also removes any watches automatically."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3175 ../src/guestfs-actions.pod:5059
msgid ""
"See also L<inotify(7)> for an overview of the inotify interface as exposed "
"by the Linux kernel, which is roughly what we expose via libguestfs.  Note "
"that there is one global inotify handle per libguestfs instance."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3180
msgid "inotify-read"
msgstr "inotify-read"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3182
#, no-wrap
msgid ""
" inotify-read\n"
"\n"
msgstr ""
" inotify-read\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3184 ../src/guestfs-actions.pod:5073
msgid ""
"Return the complete queue of events that have happened since the previous "
"read call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3187 ../src/guestfs-actions.pod:5076
msgid "If no events have happened, this returns an empty list."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3189 ../src/guestfs-actions.pod:5078
msgid ""
"I<Note>: In order to make sure that all events have been read, you must call "
"this function repeatedly until it returns an empty list.  The reason is that "
"the call will read events up to the maximum appliance-to-host message size "
"and leave remaining events in the queue."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3195
msgid "inotify-rm-watch"
msgstr "inotify-rm-watch"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3197
#, no-wrap
msgid ""
" inotify-rm-watch wd\n"
"\n"
msgstr ""
" inotify-rm-watch wd\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3199
msgid "Remove a previously defined inotify watch.  See L</inotify-add-watch>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3202
msgid "inspect-get-arch"
msgstr "inspect-get-arch"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3204
#, no-wrap
msgid ""
" inspect-get-arch root\n"
"\n"
msgstr ""
" inspect-get-arch корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3206
msgid ""
"This returns the architecture of the inspected operating system.  The "
"possible return values are listed under L</file-architecture>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3210 ../src/guestfs-actions.pod:5113
msgid ""
"If the architecture could not be determined, then the string C<unknown> is "
"returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3213 ../fish/guestfish-actions.pod:3336
#: ../fish/guestfish-actions.pod:3415 ../fish/guestfish-actions.pod:3427
#: ../fish/guestfish-actions.pod:3511 ../fish/guestfish-actions.pod:3573
#: ../fish/guestfish-actions.pod:3594 ../fish/guestfish-actions.pod:3608
#: ../fish/guestfish-actions.pod:3648 ../fish/guestfish-actions.pod:3700
#: ../fish/guestfish-actions.pod:3713 ../fish/guestfish-actions.pod:3726
#: ../fish/guestfish-actions.pod:3736 ../fish/guestfish-actions.pod:3746
#: ../fish/guestfish-actions.pod:3758 ../fish/guestfish-actions.pod:3854
#: ../fish/guestfish-actions.pod:3963 ../fish/guestfish-actions.pod:3997
#: ../src/guestfs-actions.pod:5116 ../src/guestfs-actions.pod:5246
#: ../src/guestfs-actions.pod:5350 ../src/guestfs-actions.pod:5369
#: ../src/guestfs-actions.pod:5500 ../src/guestfs-actions.pod:5584
#: ../src/guestfs-actions.pod:5612 ../src/guestfs-actions.pod:5633
#: ../src/guestfs-actions.pod:5686 ../src/guestfs-actions.pod:5746
#: ../src/guestfs-actions.pod:5766 ../src/guestfs-actions.pod:5786
#: ../src/guestfs-actions.pod:5803 ../src/guestfs-actions.pod:5819
#: ../src/guestfs-actions.pod:5837 ../src/guestfs-actions.pod:5946
#: ../src/guestfs-actions.pod:6056 ../src/guestfs-actions.pod:6097
msgid "Please read L<guestfs(3)/INSPECTION> for more details."
msgstr ""
"З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>."

#. type: =head2
#: ../fish/guestfish-actions.pod:3215
msgid "inspect-get-distro"
msgstr "inspect-get-distro"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3217
#, no-wrap
msgid ""
" inspect-get-distro root\n"
"\n"
msgstr ""
" inspect-get-distro корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3219 ../src/guestfs-actions.pod:5129
msgid ""
"This returns the distro (distribution) of the inspected operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3222 ../src/guestfs-actions.pod:5132
msgid "Currently defined distros are:"
msgstr "У поточній версії визначено такі дистрибутиви:"

#. type: =item
#: ../fish/guestfish-actions.pod:3226 ../src/guestfs-actions.pod:5136
msgid "\"archlinux\""
msgstr "\"archlinux\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3228 ../src/guestfs-actions.pod:5138
msgid "Arch Linux."
msgstr "Arch Linux."

#. type: =item
#: ../fish/guestfish-actions.pod:3230 ../src/guestfs-actions.pod:5140
msgid "\"buildroot\""
msgstr "\"buildroot\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3232 ../src/guestfs-actions.pod:5142
msgid "Buildroot-derived distro, but not one we specifically recognize."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3234 ../src/guestfs-actions.pod:5144
msgid "\"centos\""
msgstr "\"centos\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3236 ../src/guestfs-actions.pod:5146
msgid "CentOS."
msgstr "CentOS."

#. type: =item
#: ../fish/guestfish-actions.pod:3238 ../src/guestfs-actions.pod:5148
msgid "\"cirros\""
msgstr "\"cirros\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3240 ../src/guestfs-actions.pod:5150
msgid "Cirros."
msgstr "Cirros."

#. type: =item
#: ../fish/guestfish-actions.pod:3242 ../src/guestfs-actions.pod:5152
msgid "\"debian\""
msgstr "\"debian\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3244 ../src/guestfs-actions.pod:5154
msgid "Debian."
msgstr "Debian."

#. type: =item
#: ../fish/guestfish-actions.pod:3246 ../src/guestfs-actions.pod:5156
msgid "\"fedora\""
msgstr "\"fedora\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3248 ../src/guestfs-actions.pod:5158
msgid "Fedora."
msgstr "Fedora."

#. type: =item
#: ../fish/guestfish-actions.pod:3250 ../src/guestfs-actions.pod:5160
msgid "\"freedos\""
msgstr "\"freedos\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3252 ../src/guestfs-actions.pod:5162
msgid "FreeDOS."
msgstr "FreeDOS."

#. type: =item
#: ../fish/guestfish-actions.pod:3254 ../src/guestfs-actions.pod:5164
msgid "\"gentoo\""
msgstr "\"gentoo\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3256 ../src/guestfs-actions.pod:5166
msgid "Gentoo."
msgstr "Gentoo."

#. type: =item
#: ../fish/guestfish-actions.pod:3258 ../src/guestfs-actions.pod:5168
msgid "\"linuxmint\""
msgstr "\"linuxmint\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3260 ../src/guestfs-actions.pod:5170
msgid "Linux Mint."
msgstr "Linux Mint."

#. type: =item
#: ../fish/guestfish-actions.pod:3262 ../src/guestfs-actions.pod:5172
msgid "\"mageia\""
msgstr "\"mageia\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3264 ../src/guestfs-actions.pod:5174
msgid "Mageia."
msgstr "Mageia."

#. type: =item
#: ../fish/guestfish-actions.pod:3266 ../src/guestfs-actions.pod:5176
msgid "\"mandriva\""
msgstr "\"mandriva\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3268 ../src/guestfs-actions.pod:5178
msgid "Mandriva."
msgstr "Mandriva."

#. type: =item
#: ../fish/guestfish-actions.pod:3270 ../src/guestfs-actions.pod:5180
msgid "\"meego\""
msgstr "\"meego\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3272 ../src/guestfs-actions.pod:5182
msgid "MeeGo."
msgstr "MeeGo."

#. type: =item
#: ../fish/guestfish-actions.pod:3274 ../fish/guestfish-actions.pod:3675
#: ../src/guestfs-actions.pod:5184 ../src/guestfs-actions.pod:5721
msgid "\"openbsd\""
msgstr "\"openbsd\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3276 ../fish/guestfish-actions.pod:3677
#: ../src/guestfs-actions.pod:5186 ../src/guestfs-actions.pod:5723
msgid "OpenBSD."
msgstr "OpenBSD."

#. type: =item
#: ../fish/guestfish-actions.pod:3278 ../src/guestfs-actions.pod:5188
msgid "\"opensuse\""
msgstr "\"opensuse\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3280 ../src/guestfs-actions.pod:5190
msgid "OpenSUSE."
msgstr "OpenSUSE."

#. type: =item
#: ../fish/guestfish-actions.pod:3282 ../src/guestfs-actions.pod:5192
msgid "\"oraclelinux\""
msgstr "\"oraclelinux\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3284 ../src/guestfs-actions.pod:5194
msgid "Oracle Linux."
msgstr "Oracle Linux."

#. type: =item
#: ../fish/guestfish-actions.pod:3286 ../src/guestfs-actions.pod:5196
msgid "\"pardus\""
msgstr "\"pardus\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3288 ../src/guestfs-actions.pod:5198
msgid "Pardus."
msgstr "Pardus."

#. type: =item
#: ../fish/guestfish-actions.pod:3290 ../src/guestfs-actions.pod:5200
msgid "\"redhat-based\""
msgstr "\"redhat-based\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3292 ../src/guestfs-actions.pod:5202
msgid "Some Red Hat-derived distro."
msgstr "Дистрибутив, що походить від Red Hat."

#. type: =item
#: ../fish/guestfish-actions.pod:3294 ../src/guestfs-actions.pod:5204
msgid "\"rhel\""
msgstr "\"rhel\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3296 ../src/guestfs-actions.pod:5206
msgid "Red Hat Enterprise Linux."
msgstr "Red Hat Enterprise Linux."

#. type: =item
#: ../fish/guestfish-actions.pod:3298 ../src/guestfs-actions.pod:5208
msgid "\"scientificlinux\""
msgstr "\"scientificlinux\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3300 ../src/guestfs-actions.pod:5210
msgid "Scientific Linux."
msgstr "Scientific Linux."

#. type: =item
#: ../fish/guestfish-actions.pod:3302 ../src/guestfs-actions.pod:5212
msgid "\"slackware\""
msgstr "\"slackware\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3304 ../src/guestfs-actions.pod:5214
msgid "Slackware."
msgstr "Slackware."

#. type: =item
#: ../fish/guestfish-actions.pod:3306 ../src/guestfs-actions.pod:5216
msgid "\"sles\""
msgstr "\"sles\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3308 ../src/guestfs-actions.pod:5218
msgid "SuSE Linux Enterprise Server or Desktop."
msgstr "SuSE Linux Enterprise Server або Desktop."

#. type: =item
#: ../fish/guestfish-actions.pod:3310 ../src/guestfs-actions.pod:5220
msgid "\"suse-based\""
msgstr "\"suse-based\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3312 ../src/guestfs-actions.pod:5222
msgid "Some openSuSE-derived distro."
msgstr "Дистрибутив, заснований на openSuSE."

#. type: =item
#: ../fish/guestfish-actions.pod:3314 ../src/guestfs-actions.pod:5224
msgid "\"ttylinux\""
msgstr "\"ttylinux\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3316 ../src/guestfs-actions.pod:5226
msgid "ttylinux."
msgstr "ttylinux."

#. type: =item
#: ../fish/guestfish-actions.pod:3318 ../src/guestfs-actions.pod:5228
msgid "\"ubuntu\""
msgstr "\"ubuntu\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3320 ../src/guestfs-actions.pod:5230
msgid "Ubuntu."
msgstr "Ubuntu."

#. type: =item
#: ../fish/guestfish-actions.pod:3322 ../fish/guestfish-actions.pod:3406
#: ../fish/guestfish-actions.pod:3691 ../src/guestfs-actions.pod:5232
#: ../src/guestfs-actions.pod:5341 ../src/guestfs-actions.pod:5737
msgid "\"unknown\""
msgstr "\"unknown\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3324 ../src/guestfs-actions.pod:5234
msgid "The distro could not be determined."
msgstr "Дистрибутив, тип якого не вдалося визначити."

#. type: =item
#: ../fish/guestfish-actions.pod:3326 ../fish/guestfish-actions.pod:3663
#: ../src/guestfs-actions.pod:5236 ../src/guestfs-actions.pod:5709
msgid "\"windows\""
msgstr "\"windows\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3328 ../src/guestfs-actions.pod:5238
msgid ""
"Windows does not have distributions.  This string is returned if the OS type "
"is Windows."
msgstr ""
"У Windows немає дистрибутивів. Цей рядок буде повернуто, якщо операційна "
"система належить до сімейства Windows."

#. type: textblock
#: ../fish/guestfish-actions.pod:3333 ../fish/guestfish-actions.pod:3412
#: ../fish/guestfish-actions.pod:3697 ../src/guestfs-actions.pod:5243
#: ../src/guestfs-actions.pod:5347 ../src/guestfs-actions.pod:5743
msgid ""
"Future versions of libguestfs may return other strings here.  The caller "
"should be prepared to handle any string."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3338
msgid "inspect-get-drive-mappings"
msgstr "inspect-get-drive-mappings"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3340
#, no-wrap
msgid ""
" inspect-get-drive-mappings root\n"
"\n"
msgstr ""
" inspect-get-drive-mappings root\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3342 ../src/guestfs-actions.pod:5259
msgid ""
"This call is useful for Windows which uses a primitive system of assigning "
"drive letters (like \"C:\") to partitions.  This inspection API examines the "
"Windows Registry to find out how disks/partitions are mapped to drive "
"letters, and returns a hash table as in the example below:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3348 ../src/guestfs-actions.pod:5265
#, no-wrap
msgid ""
" C      =>     /dev/vda2\n"
" E      =>     /dev/vdb1\n"
" F      =>     /dev/vdc1\n"
"\n"
msgstr ""
" C      =>     /dev/vda2\n"
" E      =>     /dev/vdb1\n"
" F      =>     /dev/vdc1\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3352 ../src/guestfs-actions.pod:5269
msgid ""
"Note that keys are drive letters.  For Windows, the key is case insensitive "
"and just contains the drive letter, without the customary colon separator "
"character."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3356 ../src/guestfs-actions.pod:5273
msgid ""
"In future we may support other operating systems that also used drive "
"letters, but the keys for those might not be case insensitive and might be "
"longer than 1 character.  For example in OS-9, hard drives were named C<h0>, "
"C<h1> etc."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3361 ../src/guestfs-actions.pod:5278
msgid ""
"For Windows guests, currently only hard drive mappings are returned.  "
"Removable disks (eg. DVD-ROMs) are ignored."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3364 ../src/guestfs-actions.pod:5281
msgid ""
"For guests that do not use drive mappings, or if the drive mappings could "
"not be determined, this returns an empty hash table."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3367
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also L</inspect-"
"get-mountpoints>, L</inspect-get-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3371
msgid "inspect-get-filesystems"
msgstr "inspect-get-filesystems"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3373
#, no-wrap
msgid ""
" inspect-get-filesystems root\n"
"\n"
msgstr ""
" inspect-get-filesystems корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3375 ../src/guestfs-actions.pod:5302
msgid ""
"This returns a list of all the filesystems that we think are associated with "
"this operating system.  This includes the root filesystem, other ordinary "
"filesystems, and non-mounted devices like swap partitions."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3380 ../src/guestfs-actions.pod:5307
msgid ""
"In the case of a multi-boot virtual machine, it is possible for a filesystem "
"to be shared between operating systems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3383
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also L</inspect-"
"get-mountpoints>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3386
msgid "inspect-get-format"
msgstr "inspect-get-format"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3388
#, no-wrap
msgid ""
" inspect-get-format root\n"
"\n"
msgstr ""
" inspect-get-format корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3390 ../src/guestfs-actions.pod:5325
msgid ""
"This returns the format of the inspected operating system.  You can use it "
"to detect install images, live CDs and similar."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3393 ../src/guestfs-actions.pod:5328
msgid "Currently defined formats are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3397 ../src/guestfs-actions.pod:5332
msgid "\"installed\""
msgstr "\"installed\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3399 ../src/guestfs-actions.pod:5334
msgid "This is an installed operating system."
msgstr "Це встановлена операційна система."

#. type: =item
#: ../fish/guestfish-actions.pod:3401 ../src/guestfs-actions.pod:5336
msgid "\"installer\""
msgstr "\"installer\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3403 ../src/guestfs-actions.pod:5338
msgid ""
"The disk image being inspected is not an installed operating system, but a "
"I<bootable> install disk, live CD, or similar."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3408 ../src/guestfs-actions.pod:5343
msgid "The format of this disk image is not known."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3417
msgid "inspect-get-hostname"
msgstr "inspect-get-hostname"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3419
#, no-wrap
msgid ""
" inspect-get-hostname root\n"
"\n"
msgstr ""
" inspect-get-hostname корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3421 ../src/guestfs-actions.pod:5363
msgid ""
"This function returns the hostname of the operating system as found by "
"inspection of the guest's configuration files."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3424 ../src/guestfs-actions.pod:5366
msgid ""
"If the hostname could not be determined, then the string C<unknown> is "
"returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3429
msgid "inspect-get-icon"
msgstr "inspect-get-icon"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3431
#, no-wrap
msgid ""
" inspect-get-icon root [favicon:true|false] [highquality:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3433 ../src/guestfs-actions.pod:5392
msgid ""
"This function returns an icon corresponding to the inspected operating "
"system.  The icon is returned as a buffer containing a PNG image (re-encoded "
"to PNG if necessary)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3437 ../src/guestfs-actions.pod:5396
msgid ""
"If it was not possible to get an icon this function returns a zero-length "
"(non-NULL) buffer.  I<Callers must check for this case>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3440 ../src/guestfs-actions.pod:5399
msgid ""
"Libguestfs will start by looking for a file called C</etc/favicon.png> or "
"C<C:\\etc\\favicon.png> and if it has the correct format, the contents of "
"this file will be returned.  You can disable favicons by passing the "
"optional C<favicon> boolean as false (default is true)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3446 ../src/guestfs-actions.pod:5405
msgid ""
"If finding the favicon fails, then we look in other places in the guest for "
"a suitable icon."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3449 ../src/guestfs-actions.pod:5408
msgid ""
"If the optional C<highquality> boolean is true then only high quality icons "
"are returned, which means only icons of high resolution with an alpha "
"channel.  The default (false) is to return any icon we can, even if it is of "
"substandard quality."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3460 ../src/guestfs-actions.pod:5419
msgid ""
"Unlike most other inspection API calls, the guest's disks must be mounted up "
"before you call this, since it needs to read information from the guest "
"filesystem during the call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3466 ../src/guestfs-actions.pod:5425
msgid ""
"B<Security:> The icon data comes from the untrusted guest, and should be "
"treated with caution.  PNG files have been known to contain exploits.  "
"Ensure that libpng (or other relevant libraries) are fully up to date before "
"trying to process or display the icon."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3474 ../src/guestfs-actions.pod:5433
msgid ""
"The PNG image returned can be any size.  It might not be square.  Libguestfs "
"tries to return the largest, highest quality icon available.  The "
"application must scale the icon to the required size."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3481 ../src/guestfs-actions.pod:5440
msgid ""
"Extracting icons from Windows guests requires the external C<wrestool> "
"program from the C<icoutils> package, and several programs (C<bmptopnm>, "
"C<pnmtopng>, C<pamcut>)  from the C<netpbm> package.  These must be "
"installed separately."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3488 ../src/guestfs-actions.pod:5447
msgid ""
"Operating system icons are usually trademarks.  Seek legal advice before "
"using trademarks in applications."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3495
msgid "inspect-get-major-version"
msgstr "inspect-get-major-version"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3497
#, no-wrap
msgid ""
" inspect-get-major-version root\n"
"\n"
msgstr ""
" inspect-get-major-version корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3499 ../src/guestfs-actions.pod:5488
msgid ""
"This returns the major version number of the inspected operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3502 ../src/guestfs-actions.pod:5491
msgid ""
"Windows uses a consistent versioning scheme which is I<not> reflected in the "
"popular public names used by the operating system.  Notably the operating "
"system known as \"Windows 7\" is really version 6.1 (ie. major = 6, minor = "
"1).  You can find out the real versions corresponding to releases of Windows "
"by consulting Wikipedia or MSDN."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3509 ../fish/guestfish-actions.pod:3520
#: ../src/guestfs-actions.pod:5498 ../src/guestfs-actions.pod:5515
msgid "If the version could not be determined, then C<0> is returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3513
msgid "inspect-get-minor-version"
msgstr "inspect-get-minor-version"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3515
#, no-wrap
msgid ""
" inspect-get-minor-version root\n"
"\n"
msgstr ""
" inspect-get-minor-version корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3517 ../src/guestfs-actions.pod:5512
msgid ""
"This returns the minor version number of the inspected operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3522
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also L</inspect-"
"get-major-version>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3525
msgid "inspect-get-mountpoints"
msgstr "inspect-get-mountpoints"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3527
#, no-wrap
msgid ""
" inspect-get-mountpoints root\n"
"\n"
msgstr ""
" inspect-get-mountpoints корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3529 ../src/guestfs-actions.pod:5530
msgid ""
"This returns a hash of where we think the filesystems associated with this "
"operating system should be mounted.  Callers should note that this is at "
"best an educated guess made by reading configuration files such as C</etc/"
"fstab>.  I<In particular note> that this may return filesystems which are "
"non-existent or not mountable and callers should be prepared to handle or "
"ignore failures if they try to mount them."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3538 ../src/guestfs-actions.pod:5539
msgid ""
"Each element in the returned hashtable has a key which is the path of the "
"mountpoint (eg. C</boot>) and a value which is the filesystem that would be "
"mounted there (eg. C</dev/sda1>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3543 ../src/guestfs-actions.pod:5544
msgid ""
"Non-mounted devices such as swap devices are I<not> returned in this list."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3546
msgid ""
"For operating systems like Windows which still use drive letters, this call "
"will only return an entry for the first drive \"mounted on\" C</>.  For "
"information about the mapping of drive letters to partitions, see L</inspect-"
"get-drive-mappings>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3552
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also L</inspect-"
"get-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3555
msgid "inspect-get-package-format"
msgstr "inspect-get-package-format"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3557
#, no-wrap
msgid ""
" inspect-get-package-format root\n"
"\n"
msgstr ""
" inspect-get-package-format корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3559
msgid ""
"This function and L</inspect-get-package-management> return the package "
"format and package management tool used by the inspected operating system.  "
"For example for Fedora these functions would return C<rpm> (package format) "
"and C<yum> (package management)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3565 ../src/guestfs-actions.pod:5576
msgid ""
"This returns the string C<unknown> if we could not determine the package "
"format I<or> if the operating system does not have a real packaging system "
"(eg. Windows)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3569 ../src/guestfs-actions.pod:5580
msgid ""
"Possible strings include: C<rpm>, C<deb>, C<ebuild>, C<pisi>, C<pacman>, "
"C<pkgsrc>.  Future versions of libguestfs may return other strings."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3575
msgid "inspect-get-package-management"
msgstr "inspect-get-package-management"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3577
#, no-wrap
msgid ""
" inspect-get-package-management root\n"
"\n"
msgstr ""
" inspect-get-package-management корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3579
msgid ""
"L</inspect-get-package-format> and this function return the package format "
"and package management tool used by the inspected operating system.  For "
"example for Fedora these functions would return C<rpm> (package format) and "
"C<yum> (package management)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3585 ../src/guestfs-actions.pod:5603
msgid ""
"This returns the string C<unknown> if we could not determine the package "
"management tool I<or> if the operating system does not have a real packaging "
"system (eg. Windows)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3589 ../src/guestfs-actions.pod:5607
msgid ""
"Possible strings include: C<yum>, C<up2date>, C<apt> (for all Debian "
"derivatives), C<portage>, C<pisi>, C<pacman>, C<urpmi>, C<zypper>.  Future "
"versions of libguestfs may return other strings."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3596
msgid "inspect-get-product-name"
msgstr "inspect-get-product-name"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3598
#, no-wrap
msgid ""
" inspect-get-product-name root\n"
"\n"
msgstr ""
" inspect-get-product-name корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3600 ../src/guestfs-actions.pod:5625
msgid ""
"This returns the product name of the inspected operating system.  The "
"product name is generally some freeform string which can be displayed to the "
"user, but should not be parsed by programs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3605 ../src/guestfs-actions.pod:5630
msgid ""
"If the product name could not be determined, then the string C<unknown> is "
"returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3610
msgid "inspect-get-product-variant"
msgstr "inspect-get-product-variant"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3612
#, no-wrap
msgid ""
" inspect-get-product-variant root\n"
"\n"
msgstr ""
" inspect-get-product-variant root\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3614 ../src/guestfs-actions.pod:5646
msgid "This returns the product variant of the inspected operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3617 ../src/guestfs-actions.pod:5649
msgid ""
"For Windows guests, this returns the contents of the Registry key C<HKLM"
"\\Software\\Microsoft\\Windows NT\\CurrentVersion> C<InstallationType> which "
"is usually a string such as C<Client> or C<Server> (other values are "
"possible).  This can be used to distinguish consumer and enterprise versions "
"of Windows that have the same version number (for example, Windows 7 and "
"Windows 2008 Server are both version 6.1, but the former is C<Client> and "
"the latter is C<Server>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3626 ../src/guestfs-actions.pod:5658
msgid ""
"For enterprise Linux guests, in future we intend this to return the product "
"variant such as C<Desktop>, C<Server> and so on.  But this is not "
"implemented at present."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3630 ../src/guestfs-actions.pod:5662
msgid ""
"If the product variant could not be determined, then the string C<unknown> "
"is returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3633
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also L</inspect-"
"get-product-name>, L</inspect-get-major-version>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3637
msgid "inspect-get-roots"
msgstr "inspect-get-roots"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3639
#, no-wrap
msgid ""
" inspect-get-roots\n"
"\n"
msgstr ""
" inspect-get-roots\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3641
msgid ""
"This function is a convenient way to get the list of root devices, as "
"returned from a previous call to L</inspect-os>, but without redoing the "
"whole inspection process."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3645
msgid ""
"This returns an empty list if either no root devices were found or the "
"caller has not called L</inspect-os>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3650
msgid "inspect-get-type"
msgstr "inspect-get-type"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3652
#, no-wrap
msgid ""
" inspect-get-type root\n"
"\n"
msgstr ""
" inspect-get-type корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3654 ../src/guestfs-actions.pod:5700
msgid ""
"This returns the type of the inspected operating system.  Currently defined "
"types are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3659 ../src/guestfs-actions.pod:5705
msgid "\"linux\""
msgstr "\"linux\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3661 ../src/guestfs-actions.pod:5707
msgid "Any Linux-based operating system."
msgstr "Будь-яка заснована на Linux операційна система."

#. type: textblock
#: ../fish/guestfish-actions.pod:3665 ../src/guestfs-actions.pod:5711
msgid "Any Microsoft Windows operating system."
msgstr "Будь-яка операційна система Microsoft Windows."

#. type: =item
#: ../fish/guestfish-actions.pod:3667 ../src/guestfs-actions.pod:5713
msgid "\"freebsd\""
msgstr "\"freebsd\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3669 ../src/guestfs-actions.pod:5715
msgid "FreeBSD."
msgstr "FreeBSD."

#. type: =item
#: ../fish/guestfish-actions.pod:3671 ../src/guestfs-actions.pod:5717
msgid "\"netbsd\""
msgstr "\"netbsd\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3673 ../src/guestfs-actions.pod:5719
msgid "NetBSD."
msgstr "NetBSD."

#. type: =item
#: ../fish/guestfish-actions.pod:3679 ../src/guestfs-actions.pod:5725
msgid "\"hurd\""
msgstr "\"hurd\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3681 ../src/guestfs-actions.pod:5727
msgid "GNU/Hurd."
msgstr "GNU/Hurd."

#. type: =item
#: ../fish/guestfish-actions.pod:3683 ../src/guestfs-actions.pod:5729
msgid "\"dos\""
msgstr "\"dos\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3685 ../src/guestfs-actions.pod:5731
msgid "MS-DOS, FreeDOS and others."
msgstr "MS-DOS, FreeDOS та інші."

#. type: =item
#: ../fish/guestfish-actions.pod:3687 ../src/guestfs-actions.pod:5733
msgid "\"minix\""
msgstr "\"minix\""

#. type: textblock
#: ../fish/guestfish-actions.pod:3689 ../src/guestfs-actions.pod:5735
msgid "MINIX."
msgstr "MINIX."

#. type: textblock
#: ../fish/guestfish-actions.pod:3693 ../src/guestfs-actions.pod:5739
msgid "The operating system type could not be determined."
msgstr "Не вдалося визначити тип операційної системи."

#. type: =head2
#: ../fish/guestfish-actions.pod:3702
msgid "inspect-get-windows-current-control-set"
msgstr "inspect-get-windows-current-control-set"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3704
#, no-wrap
msgid ""
" inspect-get-windows-current-control-set root\n"
"\n"
msgstr ""
" inspect-get-windows-current-control-set root\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3706 ../src/guestfs-actions.pod:5759
msgid ""
"This returns the Windows CurrentControlSet of the inspected guest.  The "
"CurrentControlSet is a registry key name such as C<ControlSet001>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3709 ../src/guestfs-actions.pod:5762
msgid ""
"This call assumes that the guest is Windows and that the Registry could be "
"examined by inspection.  If this is not the case then an error is returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3715
msgid "inspect-get-windows-systemroot"
msgstr "inspect-get-windows-systemroot"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3717
#, no-wrap
msgid ""
" inspect-get-windows-systemroot root\n"
"\n"
msgstr ""
" inspect-get-windows-systemroot корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3719 ../src/guestfs-actions.pod:5779
msgid ""
"This returns the Windows systemroot of the inspected guest.  The systemroot "
"is a directory path such as C</WINDOWS>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3722 ../src/guestfs-actions.pod:5782
msgid ""
"This call assumes that the guest is Windows and that the systemroot could be "
"determined by inspection.  If this is not the case then an error is returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3728
msgid "inspect-is-live"
msgstr "inspect-is-live"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3730
#, no-wrap
msgid ""
" inspect-is-live root\n"
"\n"
msgstr ""
" inspect-is-live корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3732
msgid ""
"If L</inspect-get-format> returns C<installer> (this is an install disk), "
"then this returns true if a live image was detected on the disk."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3738
msgid "inspect-is-multipart"
msgstr "inspect-is-multipart"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3740
#, no-wrap
msgid ""
" inspect-is-multipart root\n"
"\n"
msgstr ""
" inspect-is-multipart корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3742
msgid ""
"If L</inspect-get-format> returns C<installer> (this is an install disk), "
"then this returns true if the disk is part of a set."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3748
msgid "inspect-is-netinst"
msgstr "inspect-is-netinst"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3750
#, no-wrap
msgid ""
" inspect-is-netinst root\n"
"\n"
msgstr ""
" inspect-is-netinst корінь\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3752
msgid ""
"If L</inspect-get-format> returns C<installer> (this is an install disk), "
"then this returns true if the disk is a network installer, ie. not a self-"
"contained install CD but one which is likely to require network access to "
"complete the install."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3760
msgid "inspect-list-applications"
msgstr "inspect-list-applications"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3762
#, no-wrap
msgid ""
" inspect-list-applications root\n"
"\n"
msgstr ""
" inspect-list-applications кореневий_каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3764 ../fish/guestfish-actions.pod:3867
#: ../src/guestfs-actions.pod:5856 ../src/guestfs-actions.pod:5960
msgid "Return the list of applications installed in the operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3766 ../fish/guestfish-actions.pod:3869
msgid ""
"I<Note:> This call works differently from other parts of the inspection "
"API.  You have to call L</inspect-os>, then L</inspect-get-mountpoints>, "
"then mount up the disks, before calling this.  Listing applications is a "
"significantly more difficult operation which requires access to the full "
"filesystem.  Also note that unlike the other L</inspect-get-*> calls which "
"are just returning data cached in the libguestfs handle, this call actually "
"reads parts of the mounted filesystems during the call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3776 ../fish/guestfish-actions.pod:3879
#: ../src/guestfs-actions.pod:5868 ../src/guestfs-actions.pod:5972
msgid ""
"This returns an empty list if the inspection code was not able to determine "
"the list of applications."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3779 ../fish/guestfish-actions.pod:3882
#: ../src/guestfs-actions.pod:5871 ../src/guestfs-actions.pod:5975
msgid "The application structure contains the following fields:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3783 ../src/guestfs-actions.pod:5875
msgid "C<app_name>"
msgstr "C<app_name>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3785 ../fish/guestfish-actions.pod:3888
#: ../src/guestfs-actions.pod:5877 ../src/guestfs-actions.pod:5981
msgid ""
"The name of the application.  For Red Hat-derived and Debian-derived Linux "
"guests, this is the package name."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3788 ../src/guestfs-actions.pod:5880
msgid "C<app_display_name>"
msgstr "C<app_display_name>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3790 ../fish/guestfish-actions.pod:3893
#: ../src/guestfs-actions.pod:5882 ../src/guestfs-actions.pod:5986
msgid ""
"The display name of the application, sometimes localized to the install "
"language of the guest operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3793 ../src/guestfs-actions.pod:5885
msgid ""
"If unavailable this is returned as an empty string C<\"\">.  Callers needing "
"to display something can use C<app_name> instead."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3796 ../src/guestfs-actions.pod:5888
msgid "C<app_epoch>"
msgstr "C<app_epoch>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3798 ../fish/guestfish-actions.pod:3901
#: ../src/guestfs-actions.pod:5890 ../src/guestfs-actions.pod:5994
msgid ""
"For package managers which use epochs, this contains the epoch of the "
"package (an integer).  If unavailable, this is returned as C<0>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3801 ../src/guestfs-actions.pod:5893
msgid "C<app_version>"
msgstr "C<app_version>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3803 ../fish/guestfish-actions.pod:3906
#: ../src/guestfs-actions.pod:5895 ../src/guestfs-actions.pod:5999
msgid ""
"The version string of the application or package.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3806 ../src/guestfs-actions.pod:5898
msgid "C<app_release>"
msgstr "C<app_release>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3808 ../fish/guestfish-actions.pod:3911
#: ../src/guestfs-actions.pod:5900 ../src/guestfs-actions.pod:6004
msgid ""
"The release string of the application or package, for package managers that "
"use this.  If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3812 ../src/guestfs-actions.pod:5904
msgid "C<app_install_path>"
msgstr "C<app_install_path>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3814 ../fish/guestfish-actions.pod:3923
#: ../src/guestfs-actions.pod:5906 ../src/guestfs-actions.pod:6016
msgid ""
"The installation path of the application (on operating systems such as "
"Windows which use installation paths).  This path is in the format used by "
"the guest operating system, it is not a libguestfs path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3819 ../fish/guestfish-actions.pod:3928
#: ../src/guestfs-actions.pod:5911 ../src/guestfs-actions.pod:6021
msgid "If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3821 ../src/guestfs-actions.pod:5913
msgid "C<app_trans_path>"
msgstr "C<app_trans_path>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3823 ../fish/guestfish-actions.pod:3932
#: ../src/guestfs-actions.pod:5915 ../src/guestfs-actions.pod:6025
msgid ""
"The install path translated into a libguestfs path.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3826 ../src/guestfs-actions.pod:5918
msgid "C<app_publisher>"
msgstr "C<app_publisher>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3828 ../fish/guestfish-actions.pod:3937
#: ../src/guestfs-actions.pod:5920 ../src/guestfs-actions.pod:6030
msgid ""
"The name of the publisher of the application, for package managers that use "
"this.  If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3832 ../src/guestfs-actions.pod:5924
msgid "C<app_url>"
msgstr "C<app_url>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3834 ../fish/guestfish-actions.pod:3943
#: ../src/guestfs-actions.pod:5926 ../src/guestfs-actions.pod:6036
msgid ""
"The URL (eg. upstream URL) of the application.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3837 ../src/guestfs-actions.pod:5929
msgid "C<app_source_package>"
msgstr "C<app_source_package>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3839 ../fish/guestfish-actions.pod:3948
#: ../src/guestfs-actions.pod:5931 ../src/guestfs-actions.pod:6041
msgid ""
"For packaging systems which support this, the name of the source package.  "
"If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3842 ../src/guestfs-actions.pod:5934
msgid "C<app_summary>"
msgstr "C<app_summary>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3844 ../fish/guestfish-actions.pod:3953
#: ../src/guestfs-actions.pod:5936 ../src/guestfs-actions.pod:6046
msgid ""
"A short (usually one line) description of the application or package.  If "
"unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3847 ../src/guestfs-actions.pod:5939
msgid "C<app_description>"
msgstr "C<app_description>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3849 ../fish/guestfish-actions.pod:3958
#: ../src/guestfs-actions.pod:5941 ../src/guestfs-actions.pod:6051
msgid ""
"A longer description of the application or package.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3856
msgid ""
"I<This function is deprecated.> In new code, use the L</inspect-list-"
"applications2> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3863
msgid "inspect-list-applications2"
msgstr "inspect-list-applications2"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3865
#, no-wrap
msgid ""
" inspect-list-applications2 root\n"
"\n"
msgstr ""
" inspect-list-applications2 кореневий_каталог\n"
"\n"

#. type: =item
#: ../fish/guestfish-actions.pod:3886 ../src/guestfs-actions.pod:5979
msgid "C<app2_name>"
msgstr "C<app2_name>"

#. type: =item
#: ../fish/guestfish-actions.pod:3891 ../src/guestfs-actions.pod:5984
msgid "C<app2_display_name>"
msgstr "C<app2_display_name>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3896 ../src/guestfs-actions.pod:5989
msgid ""
"If unavailable this is returned as an empty string C<\"\">.  Callers needing "
"to display something can use C<app2_name> instead."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3899 ../src/guestfs-actions.pod:5992
msgid "C<app2_epoch>"
msgstr "C<app2_epoch>"

#. type: =item
#: ../fish/guestfish-actions.pod:3904 ../src/guestfs-actions.pod:5997
msgid "C<app2_version>"
msgstr "C<app2_version>"

#. type: =item
#: ../fish/guestfish-actions.pod:3909 ../src/guestfs-actions.pod:6002
msgid "C<app2_release>"
msgstr "C<app2_release>"

#. type: =item
#: ../fish/guestfish-actions.pod:3915 ../src/guestfs-actions.pod:6008
msgid "C<app2_arch>"
msgstr "C<app2_arch>"

#. type: textblock
#: ../fish/guestfish-actions.pod:3917 ../src/guestfs-actions.pod:6010
msgid ""
"The architecture string of the application or package, for package managers "
"that use this.  If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3921 ../src/guestfs-actions.pod:6014
msgid "C<app2_install_path>"
msgstr "C<app2_install_path>"

#. type: =item
#: ../fish/guestfish-actions.pod:3930 ../src/guestfs-actions.pod:6023
msgid "C<app2_trans_path>"
msgstr "C<app2_trans_path>"

#. type: =item
#: ../fish/guestfish-actions.pod:3935 ../src/guestfs-actions.pod:6028
msgid "C<app2_publisher>"
msgstr "C<app2_publisher>"

#. type: =item
#: ../fish/guestfish-actions.pod:3941 ../src/guestfs-actions.pod:6034
msgid "C<app2_url>"
msgstr "C<app2_url>"

#. type: =item
#: ../fish/guestfish-actions.pod:3946 ../src/guestfs-actions.pod:6039
msgid "C<app2_source_package>"
msgstr "C<app2_source_package>"

#. type: =item
#: ../fish/guestfish-actions.pod:3951 ../src/guestfs-actions.pod:6044
msgid "C<app2_summary>"
msgstr "C<app2_summary>"

#. type: =item
#: ../fish/guestfish-actions.pod:3956 ../src/guestfs-actions.pod:6049
msgid "C<app2_description>"
msgstr "C<app2_description>"

#. type: =head2
#: ../fish/guestfish-actions.pod:3965
msgid "inspect-os"
msgstr "inspect-os"

#. type: verbatim
#: ../fish/guestfish-actions.pod:3967
#, no-wrap
msgid ""
" inspect-os\n"
"\n"
msgstr ""
" inspect-os\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:3969 ../src/guestfs-actions.pod:6069
msgid ""
"This function uses other libguestfs functions and certain heuristics to "
"inspect the disk(s) (usually disks belonging to a virtual machine), looking "
"for operating systems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3973 ../src/guestfs-actions.pod:6073
msgid "The list returned is empty if no operating systems were found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3975 ../src/guestfs-actions.pod:6075
msgid ""
"If one operating system was found, then this returns a list with a single "
"element, which is the name of the root filesystem of this operating system.  "
"It is also possible for this function to return a list containing more than "
"one element, indicating a dual-boot or multi-boot virtual machine, with each "
"element being the root filesystem of one of the operating systems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3982
msgid ""
"You can pass the root string(s) returned to other L</inspect-get-*> "
"functions in order to query further information about each operating system, "
"such as the name and version."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3987
msgid ""
"This function uses other libguestfs features such as L</mount-ro> and L</"
"umount-all> in order to mount and unmount filesystems and look at the "
"contents.  This should be called with no disks currently mounted.  The "
"function may also use Augeas, so any existing Augeas handle will be closed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3993 ../src/guestfs-actions.pod:6093
msgid ""
"This function cannot decrypt encrypted disks.  The caller must do that first "
"(supplying the necessary keys) if the disk is encrypted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3999 ../fish/guestfish-actions.pod:4450
#: ../fish/guestfish-actions.pod:4548
msgid "See also L</list-filesystems>."
msgstr "Див. також L</list-filesystems>."

#. type: =head2
#: ../fish/guestfish-actions.pod:4001
msgid "is-blockdev"
msgstr "is-blockdev"

#. type: =head2
#: ../fish/guestfish-actions.pod:4003
msgid "is-blockdev-opts"
msgstr "is-blockdev-opts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4005
#, no-wrap
msgid ""
" is-blockdev path [followsymlinks:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4007 ../src/guestfs-actions.pod:6134
msgid ""
"This returns C<true> if and only if there is a block device with the given "
"C<path> name."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4010 ../src/guestfs-actions.pod:6137
msgid ""
"If the optional flag C<followsymlinks> is true, then a symlink (or chain of "
"symlinks) that ends with a block device also causes the function to return "
"true."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4014 ../fish/guestfish-actions.pod:4031
#: ../fish/guestfish-actions.pod:4058 ../fish/guestfish-actions.pod:4075
#: ../fish/guestfish-actions.pod:4093 ../fish/guestfish-actions.pod:4117
#: ../fish/guestfish-actions.pod:4128
msgid "See also L</stat>."
msgstr "Див. також L</stat>."

#. type: =head2
#: ../fish/guestfish-actions.pod:4018
msgid "is-chardev"
msgstr "is-chardev"

#. type: =head2
#: ../fish/guestfish-actions.pod:4020
msgid "is-chardev-opts"
msgstr "is-chardev-opts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4022
#, no-wrap
msgid ""
" is-chardev path [followsymlinks:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4024 ../src/guestfs-actions.pod:6210
msgid ""
"This returns C<true> if and only if there is a character device with the "
"given C<path> name."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4027 ../src/guestfs-actions.pod:6213
msgid ""
"If the optional flag C<followsymlinks> is true, then a symlink (or chain of "
"symlinks) that ends with a chardev also causes the function to return true."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4035
msgid "is-config"
msgstr "is-config"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4037
#, no-wrap
msgid ""
" is-config\n"
"\n"
msgstr ""
" is-config\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4039 ../src/guestfs-actions.pod:6250
msgid ""
"This returns true iff this handle is being configured (in the C<CONFIG> "
"state)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4042 ../src/guestfs-actions.pod:4251
#: ../src/guestfs-actions.pod:6177 ../src/guestfs-actions.pod:6253
#: ../src/guestfs-actions.pod:6455 ../src/guestfs-actions.pod:6482
msgid "For more information on states, see L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4044
msgid "is-dir"
msgstr "is-dir"

#. type: =head2
#: ../fish/guestfish-actions.pod:4046
msgid "is-dir-opts"
msgstr "is-dir-opts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4048
#, no-wrap
msgid ""
" is-dir path [followsymlinks:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4050 ../src/guestfs-actions.pod:6286
msgid ""
"This returns C<true> if and only if there is a directory with the given "
"C<path> name.  Note that it returns false for other objects like files."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4054 ../src/guestfs-actions.pod:6290
msgid ""
"If the optional flag C<followsymlinks> is true, then a symlink (or chain of "
"symlinks) that ends with a directory also causes the function to return true."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4062
msgid "is-fifo"
msgstr "is-fifo"

#. type: =head2
#: ../fish/guestfish-actions.pod:4064
msgid "is-fifo-opts"
msgstr "is-fifo-opts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4066
#, no-wrap
msgid ""
" is-fifo path [followsymlinks:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4068 ../src/guestfs-actions.pod:6349
msgid ""
"This returns C<true> if and only if there is a FIFO (named pipe)  with the "
"given C<path> name."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4071 ../src/guestfs-actions.pod:6352
msgid ""
"If the optional flag C<followsymlinks> is true, then a symlink (or chain of "
"symlinks) that ends with a FIFO also causes the function to return true."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4079
msgid "is-file"
msgstr "is-file"

#. type: =head2
#: ../fish/guestfish-actions.pod:4081
msgid "is-file-opts"
msgstr "is-file-opts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4083
#, no-wrap
msgid ""
" is-file path [followsymlinks:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4085 ../src/guestfs-actions.pod:6411
msgid ""
"This returns C<true> if and only if there is a regular file with the given "
"C<path> name.  Note that it returns false for other objects like directories."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4089 ../src/guestfs-actions.pod:6415
msgid ""
"If the optional flag C<followsymlinks> is true, then a symlink (or chain of "
"symlinks) that ends with a file also causes the function to return true."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4097
msgid "is-lv"
msgstr "is-lv"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4099
#, no-wrap
msgid ""
" is-lv device\n"
"\n"
msgstr ""
" is-lv пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4101 ../src/guestfs-actions.pod:6467
msgid ""
"This command tests whether C<device> is a logical volume, and returns true "
"iff this is the case."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4104
msgid "is-socket"
msgstr "is-socket"

#. type: =head2
#: ../fish/guestfish-actions.pod:4106
msgid "is-socket-opts"
msgstr "is-socket-opts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4108
#, no-wrap
msgid ""
" is-socket path [followsymlinks:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4110 ../src/guestfs-actions.pod:6515
msgid ""
"This returns C<true> if and only if there is a Unix domain socket with the "
"given C<path> name."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4113 ../src/guestfs-actions.pod:6518
msgid ""
"If the optional flag C<followsymlinks> is true, then a symlink (or chain of "
"symlinks) that ends with a socket also causes the function to return true."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4121
msgid "is-symlink"
msgstr "is-symlink"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4123
#, no-wrap
msgid ""
" is-symlink path\n"
"\n"
msgstr ""
" is-symlink шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4125 ../src/guestfs-actions.pod:6556
msgid ""
"This returns C<true> if and only if there is a symbolic link with the given "
"C<path> name."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4130
msgid "is-whole-device"
msgstr "is-whole-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4132
#, no-wrap
msgid ""
" is-whole-device device\n"
"\n"
msgstr ""
" is-whole-device пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4134 ../src/guestfs-actions.pod:6571
msgid ""
"This returns C<true> if and only if C<device> refers to a whole block "
"device. That is, not a partition or a logical device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4137
msgid "is-zero"
msgstr "is-zero"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4139
#, no-wrap
msgid ""
" is-zero path\n"
"\n"
msgstr ""
" is-zero шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4141 ../src/guestfs-actions.pod:6584
msgid ""
"This returns true iff the file exists and the file is empty or it contains "
"all zero bytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4144
msgid "is-zero-device"
msgstr "is-zero-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4146
#, no-wrap
msgid ""
" is-zero-device device\n"
"\n"
msgstr ""
" is-zero-device пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4148 ../src/guestfs-actions.pod:6597
msgid "This returns true iff the device exists and contains all zero bytes."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4150 ../src/guestfs-actions.pod:6599
msgid "Note that for large devices this can take a long time to run."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4152
msgid "isoinfo"
msgstr "isoinfo"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4154
#, no-wrap
msgid ""
" isoinfo isofile\n"
"\n"
msgstr ""
" isoinfo файл_образу_iso\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4156
msgid ""
"This is the same as L</isoinfo-device> except that it works for an ISO file "
"located inside some other mounted filesystem.  Note that in the common case "
"where you have added an ISO file as a libguestfs device, you would I<not> "
"call this.  Instead you would call L</isoinfo-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4162
msgid "isoinfo-device"
msgstr "isoinfo-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4164
#, no-wrap
msgid ""
" isoinfo-device device\n"
"\n"
msgstr ""
" isoinfo-device пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4166 ../src/guestfs-actions.pod:6629
msgid ""
"C<device> is an ISO device.  This returns a struct of information read from "
"the primary volume descriptor (the ISO equivalent of the superblock) of the "
"device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4170 ../src/guestfs-actions.pod:6633
msgid ""
"Usually it is more efficient to use the L<isoinfo(1)> command with the I<-d> "
"option on the host to analyze ISO files, instead of going through libguestfs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4174 ../src/guestfs-actions.pod:6637
msgid ""
"For information on the primary volume descriptor fields, see L<http://wiki."
"osdev.org/ISO_9660#The_Primary_Volume_Descriptor>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4177
msgid "journal-close"
msgstr "journal-close"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4179
#, no-wrap
msgid ""
" journal-close\n"
"\n"
msgstr ""
" journal-close\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4181 ../src/guestfs-actions.pod:6651
msgid "Close the journal handle."
msgstr "Завершити роботу обробника журналу."

#. type: =head2
#: ../fish/guestfish-actions.pod:4183
msgid "journal-get"
msgstr "journal-get"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4185
#, no-wrap
msgid ""
" journal-get\n"
"\n"
msgstr ""
" journal-get\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4187 ../src/guestfs-actions.pod:6662
msgid ""
"Read the current journal entry.  This returns all the fields in the journal "
"as a set of C<(attrname, attrval)> pairs.  The C<attrname> is the field name "
"(a string)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4191 ../src/guestfs-actions.pod:6666
msgid ""
"The C<attrval> is the field value (a binary blob, often but not always a "
"string).  Please note that C<attrval> is a byte array, I<not> a \\0-"
"terminated C string."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4195
msgid ""
"The length of data may be truncated to the data threshold (see: L</journal-"
"set-data-threshold>, L</journal-get-data-threshold>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4199 ../src/guestfs-actions.pod:6674
msgid ""
"If you set the data threshold to unlimited (C<0>) then this call can read a "
"journal entry of any size, ie. it is not limited by the libguestfs protocol."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4203
msgid "journal-get-data-threshold"
msgstr "journal-get-data-threshold"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4205
#, no-wrap
msgid ""
" journal-get-data-threshold\n"
"\n"
msgstr ""
" journal-get-data-threshold\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4207 ../src/guestfs-actions.pod:6689
msgid ""
"Get the current data threshold for reading journal entries.  This is a hint "
"to the journal that it may truncate data fields to this size when reading "
"them (note also that it may not truncate them).  If this returns C<0>, then "
"the threshold is unlimited."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4212
msgid "See also L</journal-set-data-threshold>."
msgstr "Див. також L</journal-set-data-threshold>."

#. type: =head2
#: ../fish/guestfish-actions.pod:4214
msgid "journal-get-realtime-usec"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4216
#, no-wrap
msgid ""
" journal-get-realtime-usec\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4218 ../src/guestfs-actions.pod:6705
msgid "Get the realtime (wallclock) timestamp of the current journal entry."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4220
msgid "journal-next"
msgstr "journal-next"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4222
#, no-wrap
msgid ""
" journal-next\n"
"\n"
msgstr ""
" journal-next\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4224 ../src/guestfs-actions.pod:6716
msgid ""
"Move to the next journal entry.  You have to call this at least once after "
"opening the handle before you are able to read data."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4228
msgid ""
"The returned boolean tells you if there are any more journal records to "
"read.  C<true> means you can read the next record (eg. using L</journal-get-"
"data>), and C<false> means you have reached the end of the journal."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4233
msgid "journal-open"
msgstr "journal-open"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4235
#, no-wrap
msgid ""
" journal-open directory\n"
"\n"
msgstr ""
" journal-open каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4237 ../src/guestfs-actions.pod:6735
msgid ""
"Open the systemd journal located in C<directory>.  Any previously opened "
"journal handle is closed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4240
msgid ""
"The contents of the journal can be read using L</journal-next> and L</"
"journal-get>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4243
msgid ""
"After you have finished using the journal, you should close the handle by "
"calling L</journal-close>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4246
msgid "journal-set-data-threshold"
msgstr "journal-set-data-threshold"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4248
#, no-wrap
msgid ""
" journal-set-data-threshold threshold\n"
"\n"
msgstr ""
" journal-set-data-threshold порогове_значення\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4250 ../src/guestfs-actions.pod:6754
msgid ""
"Set the data threshold for reading journal entries.  This is a hint to the "
"journal that it may truncate data fields to this size when reading them "
"(note also that it may not truncate them).  If you set this to C<0>, then "
"the threshold is unlimited."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4255
msgid "See also L</journal-get-data-threshold>."
msgstr "Див. також L</journal-get-data-threshold>."

#. type: =head2
#: ../fish/guestfish-actions.pod:4257
msgid "journal-skip"
msgstr "journal-skip"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4259
#, no-wrap
msgid ""
" journal-skip skip\n"
"\n"
msgstr ""
" journal-skip пропуск\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4261 ../src/guestfs-actions.pod:6771
msgid ""
"Skip forwards (C<skip E<ge> 0>) or backwards (C<skip E<lt> 0>) in the "
"journal."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4264 ../src/guestfs-actions.pod:6774
msgid ""
"The number of entries actually skipped is returned (note S<C<rskip E<ge> "
"0>>).  If this is not the same as the absolute value of the skip parameter "
"(C<|skip|>) you passed in then it means you have reached the end or the "
"start of the journal."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4269
msgid "kill-subprocess"
msgstr "kill-subprocess"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4271
#, no-wrap
msgid ""
" kill-subprocess\n"
"\n"
msgstr ""
" kill-subprocess\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4273 ../src/guestfs-actions.pod:6795
msgid "This kills the hypervisor."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4275
msgid "Do not call this.  See: L</shutdown> instead."
msgstr "Не виконуйте цього виклику, краще скористайтеся L</shutdown>."

#. type: textblock
#: ../fish/guestfish-actions.pod:4277
msgid ""
"I<This function is deprecated.> In new code, use the L</shutdown> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4284
msgid "launch"
msgstr "launch"

#. type: =head2
#: ../fish/guestfish-actions.pod:4286
msgid "run"
msgstr "run"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4288
#, no-wrap
msgid ""
" launch\n"
"\n"
msgstr ""
" launch\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4290 ../src/guestfs-actions.pod:6808
msgid ""
"You should call this after configuring the handle (eg. adding drives) but "
"before performing any actions."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4293
msgid ""
"Do not call L</launch> twice on the same handle.  Although it will not give "
"an error (for historical reasons), the precise behaviour when you do this is "
"not well defined.  Handles are very cheap to create, so create a new one for "
"each launch."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4298
msgid "lchown"
msgstr "lchown"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4300
#, no-wrap
msgid ""
" lchown owner group path\n"
"\n"
msgstr ""
" lchown власник група шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4302
msgid ""
"Change the file owner to C<owner> and group to C<group>.  This is like L</"
"chown> but if C<path> is a symlink then the link itself is changed, not the "
"target."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4310
msgid "ldmtool-create-all"
msgstr "ldmtool-create-all"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4312
#, no-wrap
msgid ""
" ldmtool-create-all\n"
"\n"
msgstr ""
" ldmtool-create-all\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4314 ../src/guestfs-actions.pod:6850
msgid ""
"This function scans all block devices looking for Windows dynamic disk "
"volumes and partitions, and creates devices for any that were found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4318
msgid ""
"Call L</list-ldm-volumes> and L</list-ldm-partitions> to return all devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4321
msgid ""
"Note that you B<don't> normally need to call this explicitly, since it is "
"done automatically at L</launch> time.  However you might want to call this "
"function if you have hotplugged disks or have just created a Windows dynamic "
"disk."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4326
msgid "ldmtool-diskgroup-disks"
msgstr "ldmtool-diskgroup-disks"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4328
#, no-wrap
msgid ""
" ldmtool-diskgroup-disks diskgroup\n"
"\n"
msgstr ""
" ldmtool-diskgroup-disks група_дисків\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4330
msgid ""
"Return the disks in a Windows dynamic disk group.  The C<diskgroup> "
"parameter should be the GUID of a disk group, one element from the list "
"returned by L</ldmtool-scan>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4334
msgid "ldmtool-diskgroup-name"
msgstr "ldmtool-diskgroup-name"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4336
#, no-wrap
msgid ""
" ldmtool-diskgroup-name diskgroup\n"
"\n"
msgstr ""
" ldmtool-diskgroup-name група_дисків\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4338
msgid ""
"Return the name of a Windows dynamic disk group.  The C<diskgroup> parameter "
"should be the GUID of a disk group, one element from the list returned by L</"
"ldmtool-scan>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4342
msgid "ldmtool-diskgroup-volumes"
msgstr "ldmtool-diskgroup-volumes"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4344
#, no-wrap
msgid ""
" ldmtool-diskgroup-volumes diskgroup\n"
"\n"
msgstr ""
" ldmtool-diskgroup-volumes група_дисків\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4346
msgid ""
"Return the volumes in a Windows dynamic disk group.  The C<diskgroup> "
"parameter should be the GUID of a disk group, one element from the list "
"returned by L</ldmtool-scan>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4350
msgid "ldmtool-remove-all"
msgstr "ldmtool-remove-all"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4352
#, no-wrap
msgid ""
" ldmtool-remove-all\n"
"\n"
msgstr ""
" ldmtool-remove-all\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4354
msgid ""
"This is essentially the opposite of L</ldmtool-create-all>.  It removes the "
"device mapper mappings for all Windows dynamic disk volumes"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4358
msgid "ldmtool-scan"
msgstr "ldmtool-scan"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4360
#, no-wrap
msgid ""
" ldmtool-scan\n"
"\n"
msgstr ""
" ldmtool-scan\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4362 ../fish/guestfish-actions.pod:4373
msgid ""
"This function scans for Windows dynamic disks.  It returns a list of "
"identifiers (GUIDs) for all disk groups that were found.  These identifiers "
"can be passed to other L</ldmtool-*> functions."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4366
msgid ""
"This function scans all block devices.  To scan a subset of block devices, "
"call L</ldmtool-scan-devices> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4369
msgid "ldmtool-scan-devices"
msgstr "ldmtool-scan-devices"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4371
#, no-wrap
msgid ""
" ldmtool-scan-devices 'devices ...'\n"
"\n"
msgstr ""
" ldmtool-scan-devices 'пристрої...'\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4377 ../src/guestfs-actions.pod:6954
msgid ""
"The parameter C<devices> is a list of block devices which are scanned.  If "
"this list is empty, all block devices are scanned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4380
msgid "ldmtool-volume-hint"
msgstr "ldmtool-volume-hint"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4382
#, no-wrap
msgid ""
" ldmtool-volume-hint diskgroup volume\n"
"\n"
msgstr ""
" ldmtool-volume-hint група_дисків том\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4384 ../src/guestfs-actions.pod:6970
msgid ""
"Return the hint field of the volume named C<volume> in the disk group with "
"GUID C<diskgroup>.  This may not be defined, in which case the empty string "
"is returned.  The hint field is often, though not always, the name of a "
"Windows drive, eg. C<E:>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4389
msgid "ldmtool-volume-partitions"
msgstr "ldmtool-volume-partitions"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4391
#, no-wrap
msgid ""
" ldmtool-volume-partitions diskgroup volume\n"
"\n"
msgstr ""
" ldmtool-volume-partitions група_дисків том\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4393 ../src/guestfs-actions.pod:6987
msgid ""
"Return the list of partitions in the volume named C<volume> in the disk "
"group with GUID C<diskgroup>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4396
msgid "ldmtool-volume-type"
msgstr "ldmtool-volume-type"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4398
#, no-wrap
msgid ""
" ldmtool-volume-type diskgroup volume\n"
"\n"
msgstr ""
" ldmtool-volume-type група_дисків том\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4400 ../src/guestfs-actions.pod:7003
msgid ""
"Return the type of the volume named C<volume> in the disk group with GUID "
"C<diskgroup>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4403 ../src/guestfs-actions.pod:7006
msgid ""
"Possible volume types that can be returned here include: C<simple>, "
"C<spanned>, C<striped>, C<mirrored>, C<raid5>.  Other types may also be "
"returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4407
msgid "lgetxattr"
msgstr "lgetxattr"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4409
#, no-wrap
msgid ""
" lgetxattr path name\n"
"\n"
msgstr ""
" lgetxattr шлях назва\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4411 ../src/guestfs-actions.pod:7023
msgid ""
"Get a single extended attribute from file C<path> named C<name>.  If C<path> "
"is a symlink, then this call returns an extended attribute from the symlink."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4425
msgid "See also: L</lgetxattrs>, L</getxattr>, L<attr(5)>."
msgstr "Див. також L</lgetxattrs>, L</getxattr>, L<attr(5)>."

#. type: =head2
#: ../fish/guestfish-actions.pod:4427
msgid "lgetxattrs"
msgstr "lgetxattrs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4429
#, no-wrap
msgid ""
" lgetxattrs path\n"
"\n"
msgstr ""
" lgetxattrs шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4431
msgid ""
"This is the same as L</getxattrs>, but if C<path> is a symbolic link, then "
"it returns the extended attributes of the link itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4435
msgid "list-9p"
msgstr "list-9p"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4437
#, no-wrap
msgid ""
" list-9p\n"
"\n"
msgstr ""
" list-9p\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4439 ../src/guestfs-actions.pod:7066
msgid ""
"List all 9p filesystems attached to the guest.  A list of mount tags is "
"returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4442
msgid "list-devices"
msgstr "list-devices"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4444
#, no-wrap
msgid ""
" list-devices\n"
"\n"
msgstr ""
" list-devices\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4446 ../src/guestfs-actions.pod:7080
msgid "List all the block devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4448 ../src/guestfs-actions.pod:7082
msgid "The full block device names are returned, eg. C</dev/sda>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4452
msgid "list-disk-labels"
msgstr "list-disk-labels"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4454
#, no-wrap
msgid ""
" list-disk-labels\n"
"\n"
msgstr ""
" list-disk-labels\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4456
msgid ""
"If you add drives using the optional C<label> parameter of L</add-drive-"
"opts>, you can use this call to map between disk labels, and raw block "
"device and partition names (like C</dev/sda> and C</dev/sda1>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4461 ../src/guestfs-actions.pod:7102
msgid ""
"This returns a hashtable, where keys are the disk labels (I<without> the C</"
"dev/disk/guestfs> prefix), and the values are the full raw block device and "
"partition names (eg. C</dev/sda> and C</dev/sda1>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4466
msgid "list-dm-devices"
msgstr "list-dm-devices"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4468
#, no-wrap
msgid ""
" list-dm-devices\n"
"\n"
msgstr ""
" list-dm-devices\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4470 ../src/guestfs-actions.pod:7120
msgid "List all device mapper devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4472
msgid ""
"The returned list contains C</dev/mapper/*> devices, eg. ones created by a "
"previous call to L</luks-open>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4475
msgid ""
"Device mapper devices which correspond to logical volumes are I<not> "
"returned in this list.  Call L</lvs> if you want to list logical volumes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4479
msgid "list-filesystems"
msgstr "list-filesystems"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4481
#, no-wrap
msgid ""
" list-filesystems\n"
"\n"
msgstr ""
" list-filesystems\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4483 ../src/guestfs-actions.pod:7140
msgid ""
"This inspection command looks for filesystems on partitions, block devices "
"and logical volumes, returning a list of C<mountables> containing "
"filesystems and their type."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4487 ../src/guestfs-actions.pod:7144
msgid ""
"The return value is a hash, where the keys are the devices containing "
"filesystems, and the values are the filesystem types.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4491 ../src/guestfs-actions.pod:7148
#, no-wrap
msgid ""
" \"/dev/sda1\" => \"ntfs\"\n"
" \"/dev/sda2\" => \"ext2\"\n"
" \"/dev/vg_guest/lv_root\" => \"ext4\"\n"
" \"/dev/vg_guest/lv_swap\" => \"swap\"\n"
"\n"
msgstr ""
" \"/dev/sda1\" => \"ntfs\"\n"
" \"/dev/sda2\" => \"ext2\"\n"
" \"/dev/vg_guest/lv_root\" => \"ext4\"\n"
" \"/dev/vg_guest/lv_swap\" => \"swap\"\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4496
msgid ""
"The key is not necessarily a block device. It may also be an opaque "
"'mountable' string which can be passed to L</mount>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4499 ../src/guestfs-actions.pod:7156
msgid ""
"The value can have the special value \"unknown\", meaning the content of the "
"device is undetermined or empty.  \"swap\" means a Linux swap partition."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4503
msgid ""
"This command runs other libguestfs commands, which might include L</mount> "
"and L</umount>, and therefore you should use this soon after launch and only "
"when nothing is mounted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4507
msgid ""
"Not all of the filesystems returned will be mountable.  In particular, swap "
"partitions are returned in the list.  Also this command does not check that "
"each filesystem found is valid and mountable, and some filesystems might be "
"mountable but require special options.  Filesystems may not all belong to a "
"single logical operating system (use L</inspect-os> to look for OSes)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4515
msgid "list-ldm-partitions"
msgstr "list-ldm-partitions"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4517
#, no-wrap
msgid ""
" list-ldm-partitions\n"
"\n"
msgstr ""
" list-ldm-partitions\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4519 ../src/guestfs-actions.pod:7185
msgid ""
"This function returns all Windows dynamic disk partitions that were found at "
"launch time.  It returns a list of device names."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4523
msgid "list-ldm-volumes"
msgstr "list-ldm-volumes"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4525
#, no-wrap
msgid ""
" list-ldm-volumes\n"
"\n"
msgstr ""
" list-ldm-volumes\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4527 ../src/guestfs-actions.pod:7200
msgid ""
"This function returns all Windows dynamic disk volumes that were found at "
"launch time.  It returns a list of device names."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4531
msgid "list-md-devices"
msgstr "list-md-devices"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4533
#, no-wrap
msgid ""
" list-md-devices\n"
"\n"
msgstr ""
" list-md-devices\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4535 ../src/guestfs-actions.pod:7215
msgid "List all Linux md devices."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4537
msgid "list-partitions"
msgstr "list-partitions"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4539
#, no-wrap
msgid ""
" list-partitions\n"
"\n"
msgstr ""
" list-partitions\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4541 ../src/guestfs-actions.pod:7228
msgid "List all the partitions detected on all block devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4543 ../src/guestfs-actions.pod:7230
msgid "The full partition device names are returned, eg. C</dev/sda1>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4545
msgid ""
"This does not return logical volumes.  For that you will need to call L</"
"lvs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4550
msgid "ll"
msgstr "ll"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4552
#, no-wrap
msgid ""
" ll directory\n"
"\n"
msgstr ""
" ll каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4554 ../src/guestfs-actions.pod:7249
msgid ""
"List the files in C<directory> (relative to the root directory, there is no "
"cwd) in the format of 'ls -la'."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4557 ../fish/guestfish-actions.pod:4566
#: ../src/guestfs-actions.pod:7252 ../src/guestfs-actions.pod:7268
msgid ""
"This command is mostly useful for interactive sessions.  It is I<not> "
"intended that you try to parse the output string."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4560
msgid "llz"
msgstr "llz"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4562
#, no-wrap
msgid ""
" llz directory\n"
"\n"
msgstr ""
" llz каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4564 ../src/guestfs-actions.pod:7266
msgid "List the files in C<directory> in the format of 'ls -laZ'."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4569
msgid "ln"
msgstr "ln"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4571
#, no-wrap
msgid ""
" ln target linkname\n"
"\n"
msgstr ""
" ln призначення назва_посилання\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4573 ../src/guestfs-actions.pod:7283
msgid "This command creates a hard link using the C<ln> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4575
msgid "ln-f"
msgstr "ln-f"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4577
#, no-wrap
msgid ""
" ln-f target linkname\n"
"\n"
msgstr ""
" ln-f призначення назва_посилання\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4579 ../src/guestfs-actions.pod:7296
msgid ""
"This command creates a hard link using the C<ln -f> command.  The I<-f> "
"option removes the link (C<linkname>) if it exists already."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4582
msgid "ln-s"
msgstr "ln-s"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4584
#, no-wrap
msgid ""
" ln-s target linkname\n"
"\n"
msgstr ""
" ln-s призначення назва_посилання\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4586 ../src/guestfs-actions.pod:7310
msgid "This command creates a symbolic link using the C<ln -s> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4588
msgid "ln-sf"
msgstr "ln-sf"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4590
#, no-wrap
msgid ""
" ln-sf target linkname\n"
"\n"
msgstr ""
" ln-sf призначення назва_посилання\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4592 ../src/guestfs-actions.pod:7323
msgid ""
"This command creates a symbolic link using the C<ln -sf> command, The I<-f> "
"option removes the link (C<linkname>) if it exists already."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4595
msgid "lremovexattr"
msgstr "lremovexattr"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4597
#, no-wrap
msgid ""
" lremovexattr xattr path\n"
"\n"
msgstr ""
" lremovexattr xattr шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4599
msgid ""
"This is the same as L</removexattr>, but if C<path> is a symbolic link, then "
"it removes an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4603
msgid "ls"
msgstr "ls"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4605
#, no-wrap
msgid ""
" ls directory\n"
"\n"
msgstr ""
" ls каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4607 ../src/guestfs-actions.pod:7351
msgid ""
"List the files in C<directory> (relative to the root directory, there is no "
"cwd).  The '.' and '..' entries are not returned, but hidden files are shown."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4611
msgid "ls0"
msgstr "ls0"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4613
#, no-wrap
msgid ""
" ls0 dir (filenames|-)\n"
"\n"
msgstr ""
" ls0 каталог (назви файлів|-)\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4615 ../src/guestfs-actions.pod:7368
msgid ""
"This specialized command is used to get a listing of the filenames in the "
"directory C<dir>.  The list of filenames is written to the local file "
"C<filenames> (on the host)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4619 ../src/guestfs-actions.pod:7372
msgid "In the output file, the filenames are separated by C<\\0> characters."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4621 ../src/guestfs-actions.pod:7374
msgid "C<.> and C<..> are not returned.  The filenames are not sorted."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4625
msgid "lsetxattr"
msgstr "lsetxattr"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4627
#, no-wrap
msgid ""
" lsetxattr xattr val vallen path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4629
msgid ""
"This is the same as L</setxattr>, but if C<path> is a symbolic link, then it "
"sets an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4633
msgid "lstat"
msgstr "lstat"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4635
#, no-wrap
msgid ""
" lstat path\n"
"\n"
msgstr ""
" lstat шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4637 ../fish/guestfish-actions.pod:4681
#: ../fish/guestfish-actions.pod:7328 ../fish/guestfish-actions.pod:7343
#: ../src/guestfs-actions.pod:7410 ../src/guestfs-actions.pod:7464
#: ../src/guestfs-actions.pod:11828 ../src/guestfs-actions.pod:11844
msgid "Returns file information for the given C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4639
msgid ""
"This is the same as L</stat> except that if C<path> is a symbolic link, then "
"the link is stat-ed, not the file it refers to."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4643 ../fish/guestfish-actions.pod:4687
#: ../src/guestfs-actions.pod:7416 ../src/guestfs-actions.pod:7470
msgid "This is the same as the C<lstat(2)> system call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4645
msgid ""
"I<This function is deprecated.> In new code, use the L</lstatns> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4652
msgid "lstatlist"
msgstr "lstatlist"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4654
#, no-wrap
msgid ""
" lstatlist path 'names ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4656
msgid ""
"This call allows you to perform the L</lstat> operation on multiple files, "
"where all files are in the directory C<path>.  C<names> is the list of files "
"from this directory."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4660 ../fish/guestfish-actions.pod:4697
#: ../src/guestfs-actions.pod:7442 ../src/guestfs-actions.pod:7489
msgid ""
"On return you get a list of stat structs, with a one-to-one correspondence "
"to the C<names> list.  If any name did not exist or could not be lstat'd, "
"then the C<st_ino> field of that structure is set to C<-1>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4665 ../fish/guestfish-actions.pod:4702
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also L</lxattrlist> for a "
"similarly efficient call for getting extended attributes."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4670
msgid ""
"I<This function is deprecated.> In new code, use the L</lstatnslist> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4677
msgid "lstatns"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4679
#, no-wrap
msgid ""
" lstatns path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4683
msgid ""
"This is the same as L</statns> except that if C<path> is a symbolic link, "
"then the link is stat-ed, not the file it refers to."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4689
msgid "lstatnslist"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4691
#, no-wrap
msgid ""
" lstatnslist path 'names ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4693
msgid ""
"This call allows you to perform the L</lstatns> operation on multiple files, "
"where all files are in the directory C<path>.  C<names> is the list of files "
"from this directory."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4707
msgid "luks-add-key"
msgstr "luks-add-key"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4709
#, no-wrap
msgid ""
" luks-add-key device keyslot\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4711 ../src/guestfs-actions.pod:7514
msgid ""
"This command adds a new key on LUKS device C<device>.  C<key> is any "
"existing key, and is used to access the device.  C<newkey> is the new key to "
"add.  C<keyslot> is the key slot that will be replaced."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4716
msgid ""
"Note that if C<keyslot> already contains a key, then this command will "
"fail.  You have to use L</luks-kill-slot> first to remove that key."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4720 ../fish/guestfish-actions.pod:4742
#: ../fish/guestfish-actions.pod:4752 ../fish/guestfish-actions.pod:4763
#: ../fish/guestfish-actions.pod:4789 ../fish/guestfish-actions.pod:4799
msgid ""
"This command has one or more key or passphrase parameters.  Guestfish will "
"prompt for these separately."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4723
msgid "luks-close"
msgstr "luks-close"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4725
#, no-wrap
msgid ""
" luks-close device\n"
"\n"
msgstr ""
" luks-close пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4727
msgid ""
"This closes a LUKS device that was created earlier by L</luks-open> or L</"
"luks-open-ro>.  The C<device> parameter must be the name of the LUKS mapping "
"device (ie. C</dev/mapper/mapname>) and I<not> the name of the underlying "
"block device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4733
msgid "luks-format"
msgstr "luks-format"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4735
#, no-wrap
msgid ""
" luks-format device keyslot\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4737 ../src/guestfs-actions.pod:7555
msgid ""
"This command erases existing data on C<device> and formats the device as a "
"LUKS encrypted device.  C<key> is the initial key, which is added to key "
"slot C<slot>.  (LUKS supports 8 key slots, numbered 0-7)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4745
msgid "luks-format-cipher"
msgstr "luks-format-cipher"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4747
#, no-wrap
msgid ""
" luks-format-cipher device keyslot cipher\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4749
msgid ""
"This command is the same as L</luks-format> but it also allows you to set "
"the C<cipher> used."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4755
msgid "luks-kill-slot"
msgstr "luks-kill-slot"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4757
#, no-wrap
msgid ""
" luks-kill-slot device keyslot\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4759 ../src/guestfs-actions.pod:7596
msgid ""
"This command deletes the key in key slot C<keyslot> from the encrypted LUKS "
"device C<device>.  C<key> must be one of the I<other> keys."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4766
msgid "luks-open"
msgstr "luks-open"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4768
#, no-wrap
msgid ""
" luks-open device mapname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4770 ../src/guestfs-actions.pod:7616
msgid ""
"This command opens a block device which has been encrypted according to the "
"Linux Unified Key Setup (LUKS) standard."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4773 ../src/guestfs-actions.pod:7619
msgid "C<device> is the encrypted block device or partition."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4775 ../src/guestfs-actions.pod:7621
msgid ""
"The caller must supply one of the keys associated with the LUKS block "
"device, in the C<key> parameter."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4778 ../src/guestfs-actions.pod:7624
msgid ""
"This creates a new block device called C</dev/mapper/mapname>.  Reads and "
"writes to this block device are decrypted from and encrypted to the "
"underlying C<device> respectively."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4782
msgid ""
"If this block device contains LVM volume groups, then calling L</vgscan> "
"followed by L</vg-activate-all> will make them visible."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4786
msgid "Use L</list-dm-devices> to list all device mapper devices."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4792
msgid "luks-open-ro"
msgstr "luks-open-ro"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4794
#, no-wrap
msgid ""
" luks-open-ro device mapname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4796
msgid ""
"This is the same as L</luks-open> except that a read-only mapping is created."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4802
msgid "lvcreate"
msgstr "lvcreate"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4804
#, no-wrap
msgid ""
" lvcreate logvol volgroup mbytes\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4806 ../src/guestfs-actions.pod:7670
msgid ""
"This creates an LVM logical volume called C<logvol> on the volume group "
"C<volgroup>, with C<size> megabytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4809
msgid "lvcreate-free"
msgstr "lvcreate-free"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4811
#, no-wrap
msgid ""
" lvcreate-free logvol volgroup percent\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4813 ../src/guestfs-actions.pod:7685
msgid ""
"Create an LVM logical volume called C</dev/volgroup/logvol>, using "
"approximately C<percent> % of the free space remaining in the volume group.  "
"Most usefully, when C<percent> is C<100> this will create the largest "
"possible LV."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4818
msgid "lvm-canonical-lv-name"
msgstr "lvm-canonical-lv-name"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4820
#, no-wrap
msgid ""
" lvm-canonical-lv-name lvname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4822 ../src/guestfs-actions.pod:7700
msgid ""
"This converts alternative naming schemes for LVs that you might find to the "
"canonical name.  For example, C</dev/mapper/VG-LV> is converted to C</dev/VG/"
"LV>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4826 ../src/guestfs-actions.pod:7704
msgid ""
"This command returns an error if the C<lvname> parameter does not refer to a "
"logical volume."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4829
msgid "See also L</is-lv>, L</canonical-device-name>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4831
msgid "lvm-clear-filter"
msgstr "lvm-clear-filter"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4833
#, no-wrap
msgid ""
" lvm-clear-filter\n"
"\n"
msgstr ""
" lvm-clear-filter\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4835
msgid ""
"This undoes the effect of L</lvm-set-filter>.  LVM will be able to see every "
"block device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4838 ../fish/guestfish-actions.pod:4866
#: ../src/guestfs-actions.pod:7722 ../src/guestfs-actions.pod:7761
msgid ""
"This command also clears the LVM cache and performs a volume group scan."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4841
msgid "lvm-remove-all"
msgstr "lvm-remove-all"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4843
#, no-wrap
msgid ""
" lvm-remove-all\n"
"\n"
msgstr ""
" lvm-remove-all\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4845 ../src/guestfs-actions.pod:7734
msgid ""
"This command removes all LVM logical volumes, volume groups and physical "
"volumes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4848
msgid "lvm-set-filter"
msgstr "lvm-set-filter"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4850
#, no-wrap
msgid ""
" lvm-set-filter 'devices ...'\n"
"\n"
msgstr ""
" lvm-set-filter 'пристрої...'\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4852 ../src/guestfs-actions.pod:7747
msgid ""
"This sets the LVM device filter so that LVM will only be able to \"see\" the "
"block devices in the list C<devices>, and will ignore all other attached "
"block devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4856 ../src/guestfs-actions.pod:7751
msgid ""
"Where disk image(s) contain duplicate PVs or VGs, this command is useful to "
"get LVM to ignore the duplicates, otherwise LVM can get confused.  Note also "
"there are two types of duplication possible: either cloned PVs/VGs which "
"have identical UUIDs; or VGs that are not cloned but just happen to have the "
"same name.  In normal operation you cannot create this situation, but you "
"can do it outside LVM, eg.  by cloning disk images or by bit twiddling "
"inside the LVM metadata."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4869 ../src/guestfs-actions.pod:7764
msgid "You can filter whole block devices or individual partitions."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4871 ../src/guestfs-actions.pod:7766
msgid ""
"You cannot use this if any VG is currently in use (eg.  contains a mounted "
"filesystem), even if you are not filtering out that VG."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4875
msgid "lvremove"
msgstr "lvremove"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4877
#, no-wrap
msgid ""
" lvremove device\n"
"\n"
msgstr ""
" lvremove пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4879 ../src/guestfs-actions.pod:7780
msgid ""
"Remove an LVM logical volume C<device>, where C<device> is the path to the "
"LV, such as C</dev/VG/LV>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4882 ../src/guestfs-actions.pod:7783
msgid ""
"You can also remove all LVs in a volume group by specifying the VG name, C</"
"dev/VG>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4885
msgid "lvrename"
msgstr "lvrename"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4887
#, no-wrap
msgid ""
" lvrename logvol newlogvol\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4889 ../src/guestfs-actions.pod:7797
msgid "Rename a logical volume C<logvol> with the new name C<newlogvol>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4891
msgid "lvresize"
msgstr "lvresize"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4893
#, no-wrap
msgid ""
" lvresize device mbytes\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4895 ../src/guestfs-actions.pod:7810
msgid ""
"This resizes (expands or shrinks) an existing LVM logical volume to "
"C<mbytes>.  When reducing, data in the reduced part is lost."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4899
msgid "lvresize-free"
msgstr "lvresize-free"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4901
#, no-wrap
msgid ""
" lvresize-free lv percent\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4903 ../src/guestfs-actions.pod:7825
msgid ""
"This expands an existing logical volume C<lv> so that it fills C<pc>% of the "
"remaining free space in the volume group.  Commonly you would call this with "
"pc = 100 which expands the logical volume as much as possible, using all "
"remaining free space in the volume group."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4909
msgid "lvs"
msgstr "lvs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4911
#, no-wrap
msgid ""
" lvs\n"
"\n"
msgstr ""
" lvs\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4913 ../src/guestfs-actions.pod:7840
msgid ""
"List all the logical volumes detected.  This is the equivalent of the "
"L<lvs(8)> command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4916 ../src/guestfs-actions.pod:7843
msgid ""
"This returns a list of the logical volume device names (eg. C</dev/"
"VolGroup00/LogVol00>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4919
msgid "See also L</lvs-full>, L</list-filesystems>."
msgstr "Див. також L</lvs-full>, L</list-filesystems>."

#. type: =head2
#: ../fish/guestfish-actions.pod:4921
msgid "lvs-full"
msgstr "lvs-full"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4923
#, no-wrap
msgid ""
" lvs-full\n"
"\n"
msgstr ""
" lvs-full\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4925 ../src/guestfs-actions.pod:7859
msgid ""
"List all the logical volumes detected.  This is the equivalent of the "
"L<lvs(8)> command.  The \"full\" version includes all fields."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4928
msgid "lvuuid"
msgstr "lvuuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4930
#, no-wrap
msgid ""
" lvuuid device\n"
"\n"
msgstr ""
" lvuuid пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:4932 ../src/guestfs-actions.pod:7874
msgid "This command returns the UUID of the LVM LV C<device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4934
msgid "lxattrlist"
msgstr "lxattrlist"

#. type: verbatim
#: ../fish/guestfish-actions.pod:4936
#, no-wrap
msgid ""
" lxattrlist path 'names ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4938 ../src/guestfs-actions.pod:7888
msgid ""
"This call allows you to get the extended attributes of multiple files, where "
"all files are in the directory C<path>.  C<names> is the list of files from "
"this directory."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4942 ../src/guestfs-actions.pod:7892
msgid ""
"On return you get a flat list of xattr structs which must be interpreted "
"sequentially.  The first xattr struct always has a zero-length C<attrname>.  "
"C<attrval> in this struct is zero-length to indicate there was an error "
"doing C<lgetxattr> for this file, I<or> is a C string which is a decimal "
"number (the number of following attributes for this file, which could be C<"
"\"0\">).  Then after the first xattr struct are the zero or more attributes "
"for the first named file.  This repeats for the second and subsequent files."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4952
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also L</lstatlist> for a "
"similarly efficient call for getting standard stats."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4957
msgid "max-disks"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4959
#, no-wrap
msgid ""
" max-disks\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4961
msgid ""
"Return the maximum number of disks that may be added to a handle (eg. by L</"
"add-drive-opts> and similar calls)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4964 ../src/guestfs-actions.pod:7921
msgid ""
"This function was added in libguestfs 1.19.7.  In previous versions of "
"libguestfs the limit was 25."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4967 ../src/guestfs-actions.pod:7924
msgid ""
"See L<guestfs(3)/MAXIMUM NUMBER OF DISKS> for additional information on this "
"topic."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4970
msgid "md-create"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4972
#, no-wrap
msgid ""
" md-create name 'devices ...' [missingbitmap:N] [nrdevices:N] [spare:N] [chunk:N] [level:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4974 ../src/guestfs-actions.pod:7950
msgid ""
"Create a Linux md (RAID) device named C<name> on the devices in the list "
"C<devices>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4981 ../src/guestfs-actions.pod:7957
msgid "C<missingbitmap>"
msgstr "C<missingbitmap>"

#. type: textblock
#: ../fish/guestfish-actions.pod:4983 ../src/guestfs-actions.pod:7959
msgid ""
"A bitmap of missing devices.  If a bit is set it means that a missing device "
"is added to the array.  The least significant bit corresponds to the first "
"device in the array."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4987 ../src/guestfs-actions.pod:7963
msgid "As examples:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4989 ../src/guestfs-actions.pod:7965
msgid ""
"If C<devices = [\"/dev/sda\"]> and C<missingbitmap = 0x1> then the resulting "
"array would be C<[E<lt>missingE<gt>, \"/dev/sda\"]>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4992 ../src/guestfs-actions.pod:7968
msgid ""
"If C<devices = [\"/dev/sda\"]> and C<missingbitmap = 0x2> then the resulting "
"array would be C<[\"/dev/sda\", E<lt>missingE<gt>]>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4995 ../src/guestfs-actions.pod:7971
msgid "This defaults to C<0> (no missing devices)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4997 ../src/guestfs-actions.pod:7973
msgid ""
"The length of C<devices> + the number of bits set in C<missingbitmap> must "
"equal C<nrdevices> + C<spare>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5000 ../src/guestfs-actions.pod:7976
msgid "C<nrdevices>"
msgstr "C<nrdevices>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5002 ../src/guestfs-actions.pod:7978
msgid "The number of active RAID devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5004 ../src/guestfs-actions.pod:7980
msgid ""
"If not set, this defaults to the length of C<devices> plus the number of "
"bits set in C<missingbitmap>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5007 ../src/guestfs-actions.pod:7983
msgid "C<spare>"
msgstr "C<spare>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5009 ../src/guestfs-actions.pod:7985
msgid "The number of spare devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5011 ../src/guestfs-actions.pod:7987
msgid "If not set, this defaults to C<0>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5013 ../src/guestfs-actions.pod:7989
msgid "C<chunk>"
msgstr "C<chunk>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5015 ../src/guestfs-actions.pod:7991
msgid "The chunk size in bytes."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5017 ../fish/guestfish-actions.pod:5040
#: ../src/guestfs-actions.pod:7993 ../src/guestfs-actions.pod:8044
msgid "C<level>"
msgstr "C<level>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5019 ../src/guestfs-actions.pod:7995
msgid ""
"The RAID level, which can be one of: I<linear>, I<raid0>, I<0>, I<stripe>, "
"I<raid1>, I<1>, I<mirror>, I<raid4>, I<4>, I<raid5>, I<5>, I<raid6>, I<6>, "
"I<raid10>, I<10>.  Some of these are synonymous, and more levels may be "
"added in future."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5024 ../src/guestfs-actions.pod:8000
msgid "If not set, this defaults to C<raid1>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5030
msgid "md-detail"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5032
#, no-wrap
msgid ""
" md-detail md\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5034 ../src/guestfs-actions.pod:8038
msgid ""
"This command exposes the output of 'mdadm -DY E<lt>mdE<gt>'.  The following "
"fields are usually present in the returned hash.  Other fields may also be "
"present."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5042 ../src/guestfs-actions.pod:8046
msgid "The raid level of the MD device."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5044 ../src/guestfs-actions.pod:8048
msgid "C<devices>"
msgstr "C<devices>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5046 ../src/guestfs-actions.pod:8050
msgid "The number of underlying devices in the MD device."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5048 ../src/guestfs-actions.pod:8052
msgid "C<metadata>"
msgstr "C<metadata>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5050 ../src/guestfs-actions.pod:8054
msgid "The metadata version used."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5052 ../src/guestfs-actions.pod:8056
msgid "C<uuid>"
msgstr "C<uuid>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5054 ../src/guestfs-actions.pod:8058
msgid "The UUID of the MD device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5058 ../src/guestfs-actions.pod:8062
msgid "The name of the MD device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5062
msgid "md-stat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5064
#, no-wrap
msgid ""
" md-stat md\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5066 ../src/guestfs-actions.pod:8080
msgid ""
"This call returns a list of the underlying devices which make up the single "
"software RAID array device C<md>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5069
msgid "To get a list of software RAID devices, call L</list-md-devices>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5071 ../src/guestfs-actions.pod:8085
msgid ""
"Each structure returned corresponds to one device along with additional "
"status information:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5076 ../src/guestfs-actions.pod:8090
msgid "C<mdstat_device>"
msgstr "C<mdstat_device>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5078 ../src/guestfs-actions.pod:8092
msgid "The name of the underlying device."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5080 ../src/guestfs-actions.pod:8094
msgid "C<mdstat_index>"
msgstr "C<mdstat_index>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5082 ../src/guestfs-actions.pod:8096
msgid "The index of this device within the array."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5084 ../src/guestfs-actions.pod:8098
msgid "C<mdstat_flags>"
msgstr "C<mdstat_flags>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5086 ../src/guestfs-actions.pod:8100
msgid ""
"Flags associated with this device.  This is a string containing (in no "
"specific order) zero or more of the following flags:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5091 ../src/guestfs-actions.pod:8105
msgid "C<W>"
msgstr "C<W>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5093 ../src/guestfs-actions.pod:8107
msgid "write-mostly"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5095 ../src/guestfs-actions.pod:8109
msgid "C<F>"
msgstr "C<F>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5097 ../src/guestfs-actions.pod:8111
msgid "device is faulty"
msgstr "пристрій працює з помилками"

#. type: =item
#: ../fish/guestfish-actions.pod:5099 ../src/guestfs-actions.pod:8113
msgid "C<S>"
msgstr "C<S>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5101 ../src/guestfs-actions.pod:8115
msgid "device is a RAID spare"
msgstr "пристрій є запасною частиною RAID"

#. type: =item
#: ../fish/guestfish-actions.pod:5103 ../src/guestfs-actions.pod:8117
msgid "C<R>"
msgstr "C<R>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5105 ../src/guestfs-actions.pod:8119
msgid "replacement"
msgstr "заміна"

#. type: =head2
#: ../fish/guestfish-actions.pod:5111
msgid "md-stop"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5113
#, no-wrap
msgid ""
" md-stop md\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5115 ../src/guestfs-actions.pod:8137
msgid ""
"This command deactivates the MD array named C<md>.  The device is stopped, "
"but it is not destroyed or zeroed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5118
msgid "mkdir"
msgstr "mkdir"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5120
#, no-wrap
msgid ""
" mkdir path\n"
"\n"
msgstr ""
" mkdir шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5122 ../src/guestfs-actions.pod:8150
msgid "Create a directory named C<path>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5124
msgid "mkdir-mode"
msgstr "mkdir-mode"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5126
#, no-wrap
msgid ""
" mkdir-mode path mode\n"
"\n"
msgstr ""
" mkdir-mode шлях режим\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5128 ../src/guestfs-actions.pod:8163
msgid ""
"This command creates a directory, setting the initial permissions of the "
"directory to C<mode>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5131 ../src/guestfs-actions.pod:8166
msgid ""
"For common Linux filesystems, the actual mode which is set will be C<mode & "
"~umask & 01777>.  Non-native-Linux filesystems may interpret the mode in "
"other ways."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5135
msgid "See also L</mkdir>, L</umask>"
msgstr "Див. також L</mkdir>, L</umask>"

#. type: =head2
#: ../fish/guestfish-actions.pod:5137
msgid "mkdir-p"
msgstr "mkdir-p"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5139
#, no-wrap
msgid ""
" mkdir-p path\n"
"\n"
msgstr ""
" mkdir-p шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5141 ../src/guestfs-actions.pod:8182
msgid ""
"Create a directory named C<path>, creating any parent directories as "
"necessary.  This is like the C<mkdir -p> shell command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5144
msgid "mkdtemp"
msgstr "mkdtemp"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5146
#, no-wrap
msgid ""
" mkdtemp tmpl\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5148 ../src/guestfs-actions.pod:8195
msgid ""
"This command creates a temporary directory.  The C<tmpl> parameter should be "
"a full pathname for the temporary directory name with the final six "
"characters being \"XXXXXX\"."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5153 ../fish/guestfish-actions.pod:5520
#: ../src/guestfs-actions.pod:8200 ../src/guestfs-actions.pod:8916
msgid ""
"For example: \"/tmp/myprogXXXXXX\" or \"/Temp/myprogXXXXXX\", the second one "
"being suitable for Windows filesystems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5156 ../src/guestfs-actions.pod:8203
msgid "The name of the temporary directory that was created is returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5159 ../src/guestfs-actions.pod:8206
msgid "The temporary directory is created with mode 0700 and is owned by root."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5162 ../src/guestfs-actions.pod:8209
msgid ""
"The caller is responsible for deleting the temporary directory and its "
"contents after use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5165 ../src/guestfs-actions.pod:8212
msgid "See also: L<mkdtemp(3)>"
msgstr "Див. також L<mkdtemp(3)>"

#. type: =head2
#: ../fish/guestfish-actions.pod:5167
msgid "mke2fs"
msgstr "mke2fs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5169
#, no-wrap
msgid ""
" mke2fs device [blockscount:N] [blocksize:N] [fragsize:N] [blockspergroup:N] [numberofgroups:N] [bytesperinode:N] [inodesize:N] [journalsize:N] [numberofinodes:N] [stridesize:N] [stripewidth:N] [maxonlineresize:N] [reservedblockspercentage:N] [mmpupdateinterval:N] [journaldevice:..] [label:..] [lastmounteddir:..] [creatoros:..] [fstype:..] [usagetype:..] [uuid:..] [forcecreate:true|false] [writesbandgrouponly:true|false] [lazyitableinit:true|false] [lazyjournalinit:true|false] [testfs:true|false] [discard:true|false] [quotatype:true|false] [extent:true|false] [filetype:true|false] [flexbg:true|false] [hasjournal:true|false] [journaldev:true|false] [largefile:true|false] [quota:true|false] [resizeinode:true|false] [sparsesuper:true|false] [uninitbg:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5171 ../src/guestfs-actions.pod:8270
msgid ""
"C<mke2fs> is used to create an ext2, ext3, or ext4 filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5174 ../src/guestfs-actions.pod:8273
msgid ""
"The optional C<blockscount> is the size of the filesystem in blocks.  If "
"omitted it defaults to the size of C<device>.  Note if the filesystem is too "
"small to contain a journal, C<mke2fs> will silently create an ext2 "
"filesystem instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5181
msgid "mke2fs-J"
msgstr "mke2fs-J"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5183
#, no-wrap
msgid ""
" mke2fs-J fstype blocksize device journal\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5185 ../src/guestfs-actions.pod:8320
msgid ""
"This creates an ext2/3/4 filesystem on C<device> with an external journal on "
"C<journal>.  It is equivalent to the command:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5189 ../src/guestfs-actions.pod:8324
#, no-wrap
msgid ""
" mke2fs -t fstype -b blocksize -J device=<journal> <device>\n"
"\n"
msgstr ""
" mke2fs -t fstype -b blocksize -J device=<журнал> <пристрій>\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5191
msgid "See also L</mke2journal>."
msgstr "Див. також L</mke2journal>."

#. type: textblock
#: ../fish/guestfish-actions.pod:5193 ../fish/guestfish-actions.pod:5209
#: ../fish/guestfish-actions.pod:5225 ../fish/guestfish-actions.pod:5241
#: ../fish/guestfish-actions.pod:5254 ../fish/guestfish-actions.pod:5267
msgid ""
"I<This function is deprecated.> In new code, use the L</mke2fs> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5200
msgid "mke2fs-JL"
msgstr "mke2fs-JL"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5202
#, no-wrap
msgid ""
" mke2fs-JL fstype blocksize device label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5204 ../src/guestfs-actions.pod:8348
msgid ""
"This creates an ext2/3/4 filesystem on C<device> with an external journal on "
"the journal labeled C<label>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5207
msgid "See also L</mke2journal-L>."
msgstr "Див. також L</mke2journal-L>."

#. type: =head2
#: ../fish/guestfish-actions.pod:5216
msgid "mke2fs-JU"
msgstr "mke2fs-JU"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5218
#, no-wrap
msgid ""
" mke2fs-JU fstype blocksize device uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5220 ../src/guestfs-actions.pod:8373
msgid ""
"This creates an ext2/3/4 filesystem on C<device> with an external journal on "
"the journal with UUID C<uuid>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5223
msgid "See also L</mke2journal-U>."
msgstr "Див. також L</mke2journal-U>."

#. type: =head2
#: ../fish/guestfish-actions.pod:5232
msgid "mke2journal"
msgstr "mke2journal"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5234
#, no-wrap
msgid ""
" mke2journal blocksize device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5236 ../src/guestfs-actions.pod:8396
msgid ""
"This creates an ext2 external journal on C<device>.  It is equivalent to the "
"command:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5239 ../src/guestfs-actions.pod:8399
#, no-wrap
msgid ""
" mke2fs -O journal_dev -b blocksize device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5248
msgid "mke2journal-L"
msgstr "mke2journal-L"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5250
#, no-wrap
msgid ""
" mke2journal-L blocksize label device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5252 ../src/guestfs-actions.pod:8420
msgid "This creates an ext2 external journal on C<device> with label C<label>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5261
msgid "mke2journal-U"
msgstr "mke2journal-U"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5263
#, no-wrap
msgid ""
" mke2journal-U blocksize uuid device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5265 ../src/guestfs-actions.pod:8441
msgid "This creates an ext2 external journal on C<device> with UUID C<uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5274
msgid "mkfifo"
msgstr "mkfifo"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5276
#, no-wrap
msgid ""
" mkfifo mode path\n"
"\n"
msgstr ""
" mkfifo режим шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5278
msgid ""
"This call creates a FIFO (named pipe) called C<path> with mode C<mode>.  It "
"is just a convenient wrapper around L</mknod>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5284
msgid "mkfs"
msgstr "mkfs"

#. type: =head2
#: ../fish/guestfish-actions.pod:5286
msgid "mkfs-opts"
msgstr "mkfs-opts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5288
#, no-wrap
msgid ""
" mkfs fstype device [blocksize:N] [features:..] [inode:N] [sectorsize:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5290 ../src/guestfs-actions.pod:8496
msgid ""
"This function creates a filesystem on C<device>.  The filesystem type is "
"C<fstype>, for example C<ext3>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5297 ../src/guestfs-actions.pod:8503
msgid "C<blocksize>"
msgstr "C<blocksize>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5299 ../src/guestfs-actions.pod:8505
msgid ""
"The filesystem block size.  Supported block sizes depend on the filesystem "
"type, but typically they are C<1024>, C<2048> or C<4096> for Linux ext2/3 "
"filesystems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5303 ../fish/guestfish-actions.pod:5342
#: ../src/guestfs-actions.pod:8509 ../src/guestfs-actions.pod:8585
msgid ""
"For VFAT and NTFS the C<blocksize> parameter is treated as the requested "
"cluster size."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5306 ../src/guestfs-actions.pod:8512
msgid "For UFS block sizes, please see L<mkfs.ufs(8)>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5308 ../src/guestfs-actions.pod:8514
msgid "C<features>"
msgstr "C<features>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5310 ../src/guestfs-actions.pod:8516
msgid "This passes the I<-O> parameter to the external mkfs program."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5312 ../src/guestfs-actions.pod:8518
msgid ""
"For certain filesystem types, this allows extra filesystem features to be "
"selected.  See L<mke2fs(8)> and L<mkfs.ufs(8)> for more details."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5316 ../src/guestfs-actions.pod:8522
msgid ""
"You cannot use this optional parameter with the C<gfs> or C<gfs2> filesystem "
"type."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5319 ../src/guestfs-actions.pod:8525
msgid "C<inode>"
msgstr "C<inode>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5321 ../src/guestfs-actions.pod:8527
msgid ""
"This passes the I<-I> parameter to the external L<mke2fs(8)> program which "
"sets the inode size (only for ext2/3/4 filesystems at present)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5324 ../src/guestfs-actions.pod:8530
msgid "C<sectorsize>"
msgstr "C<sectorsize>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5326 ../src/guestfs-actions.pod:8532
msgid ""
"This passes the I<-S> parameter to external L<mkfs.ufs(8)> program, which "
"sets sector size for ufs filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5333
msgid "mkfs-b"
msgstr "mkfs-b"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5335
#, no-wrap
msgid ""
" mkfs-b fstype blocksize device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5337
msgid ""
"This call is similar to L</mkfs>, but it allows you to control the block "
"size of the resulting filesystem.  Supported block sizes depend on the "
"filesystem type, but typically they are C<1024>, C<2048> or C<4096> only."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5352
msgid "mkfs-btrfs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5354
#, no-wrap
msgid ""
" mkfs-btrfs 'devices ...' [allocstart:N] [bytecount:N] [datatype:..] [leafsize:N] [label:..] [metadata:..] [nodesize:N] [sectorsize:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5356 ../src/guestfs-actions.pod:8613
msgid ""
"Create a btrfs filesystem, allowing all configurables to be set.  For more "
"information on the optional arguments, see L<mkfs.btrfs(8)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5359 ../src/guestfs-actions.pod:8616
msgid ""
"Since btrfs filesystems can span multiple devices, this takes a non-empty "
"list of devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5362
msgid "To create general filesystems, use L</mkfs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5366
msgid "mklost-and-found"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5368
#, no-wrap
msgid ""
" mklost-and-found mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5370 ../src/guestfs-actions.pod:8653
msgid ""
"Make the C<lost+found> directory, normally in the root directory of an "
"ext2/3/4 filesystem.  C<mountpoint> is the directory under which we try to "
"create the C<lost+found> directory."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5374
msgid "mkmountpoint"
msgstr "mkmountpoint"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5376
#, no-wrap
msgid ""
" mkmountpoint exemptpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5378
msgid ""
"L</mkmountpoint> and L</rmmountpoint> are specialized calls that can be used "
"to create extra mountpoints before mounting the first filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5382 ../src/guestfs-actions.pod:8671
msgid ""
"These calls are I<only> necessary in some very limited circumstances, mainly "
"the case where you want to mount a mix of unrelated and/or read-only "
"filesystems together."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5386 ../src/guestfs-actions.pod:8675
msgid ""
"For example, live CDs often contain a \"Russian doll\" nest of filesystems, "
"an ISO outer layer, with a squashfs image inside, with an ext2/3 image "
"inside that.  You can unpack this as follows in guestfish:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5391 ../src/guestfs-actions.pod:8680
#, no-wrap
msgid ""
" add-ro Fedora-11-i686-Live.iso\n"
" run\n"
" mkmountpoint /cd\n"
" mkmountpoint /sqsh\n"
" mkmountpoint /ext3fs\n"
" mount /dev/sda /cd\n"
" mount-loop /cd/LiveOS/squashfs.img /sqsh\n"
" mount-loop /sqsh/LiveOS/ext3fs.img /ext3fs\n"
"\n"
msgstr ""
" add-ro Fedora-11-i686-Live.iso\n"
" run\n"
" mkmountpoint /cd\n"
" mkmountpoint /sqsh\n"
" mkmountpoint /ext3fs\n"
" mount /dev/sda /cd\n"
" mount-loop /cd/LiveOS/squashfs.img /sqsh\n"
" mount-loop /sqsh/LiveOS/ext3fs.img /ext3fs\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5400 ../src/guestfs-actions.pod:8689
msgid "The inner filesystem is now unpacked under the /ext3fs mountpoint."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5402
msgid ""
"L</mkmountpoint> is not compatible with L</umount-all>.  You may get "
"unexpected errors if you try to mix these calls.  It is safest to manually "
"unmount filesystems and remove mountpoints after use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5406
msgid ""
"L</umount-all> unmounts filesystems by sorting the paths longest first, so "
"for this to work for manual mountpoints, you must ensure that the innermost "
"mountpoints have the longest pathnames, as in the example code above."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5411 ../src/guestfs-actions.pod:8700
msgid ""
"For more details see L<https://bugzilla.redhat.com/show_bug.cgi?id=599503>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5413
msgid ""
"Autosync [see L</set-autosync>, this is set by default on handles] can cause "
"L</umount-all> to be called when the handle is closed which can also trigger "
"these issues."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5417
msgid "mknod"
msgstr "mknod"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5419
#, no-wrap
msgid ""
" mknod mode devmajor devminor path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5421 ../src/guestfs-actions.pod:8719
msgid ""
"This call creates block or character special devices, or named pipes (FIFOs)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5424 ../src/guestfs-actions.pod:8722
msgid ""
"The C<mode> parameter should be the mode, using the standard constants.  "
"C<devmajor> and C<devminor> are the device major and minor numbers, only "
"used when creating block and character special devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5429
msgid ""
"Note that, just like L<mknod(2)>, the mode must be bitwise OR'd with "
"S_IFBLK, S_IFCHR, S_IFIFO or S_IFSOCK (otherwise this call just creates a "
"regular file).  These constants are available in the standard Linux header "
"files, or you can use L</mknod-b>, L</mknod-c> or L</mkfifo> which are "
"wrappers around this command which bitwise OR in the appropriate constant "
"for you."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5439
msgid "mknod-b"
msgstr "mknod-b"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5441
#, no-wrap
msgid ""
" mknod-b mode devmajor devminor path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5443
msgid ""
"This call creates a block device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around L</mknod>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5449
msgid "mknod-c"
msgstr "mknod-c"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5451
#, no-wrap
msgid ""
" mknod-c mode devmajor devminor path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5453
msgid ""
"This call creates a char device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around L</mknod>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5459
msgid "mkswap"
msgstr "mkswap"

#. type: =head2
#: ../fish/guestfish-actions.pod:5461
msgid "mkswap-opts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5463
#, no-wrap
msgid ""
" mkswap device [label:..] [uuid:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5465 ../src/guestfs-actions.pod:8807
msgid "Create a Linux swap partition on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5467 ../src/guestfs-actions.pod:8809
msgid ""
"The option arguments C<label> and C<uuid> allow you to set the label and/or "
"UUID of the new swap partition."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5472
msgid "mkswap-L"
msgstr "mkswap-L"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5474
#, no-wrap
msgid ""
" mkswap-L label device\n"
"\n"
msgstr ""
" mkswap-L мітка пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5476 ../src/guestfs-actions.pod:8852
msgid "Create a swap partition on C<device> with label C<label>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5478 ../src/guestfs-actions.pod:8854
msgid ""
"Note that you cannot attach a swap label to a block device (eg. C</dev/"
"sda>), just to a partition.  This appears to be a limitation of the kernel "
"or swap tools."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5482 ../fish/guestfish-actions.pod:5495
msgid ""
"I<This function is deprecated.> In new code, use the L</mkswap> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5489
msgid "mkswap-U"
msgstr "mkswap-U"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5491
#, no-wrap
msgid ""
" mkswap-U uuid device\n"
"\n"
msgstr ""
" mkswap-U uuid пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5493 ../src/guestfs-actions.pod:8876
msgid "Create a swap partition on C<device> with UUID C<uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5502
msgid "mkswap-file"
msgstr "mkswap-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5504
#, no-wrap
msgid ""
" mkswap-file path\n"
"\n"
msgstr ""
" mkswap-file шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5506 ../src/guestfs-actions.pod:8888
msgid "Create a swap file."
msgstr "Створити файл резервної пам’яті."

#. type: textblock
#: ../fish/guestfish-actions.pod:5508
msgid ""
"This command just writes a swap file signature to an existing file.  To "
"create the file itself, use something like L</fallocate>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5511
msgid "mktemp"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5513
#, no-wrap
msgid ""
" mktemp tmpl [suffix:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5515 ../src/guestfs-actions.pod:8911
msgid ""
"This command creates a temporary file.  The C<tmpl> parameter should be a "
"full pathname for the temporary directory name with the final six characters "
"being \"XXXXXX\"."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5523 ../src/guestfs-actions.pod:8919
msgid "The name of the temporary file that was created is returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5526 ../src/guestfs-actions.pod:8922
msgid "The temporary file is created with mode 0600 and is owned by root."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5529 ../src/guestfs-actions.pod:8925
msgid "The caller is responsible for deleting the temporary file after use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5532 ../src/guestfs-actions.pod:8928
msgid ""
"If the optional C<suffix> parameter is given, then the suffix (eg. C<.txt>) "
"is appended to the temporary name."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5535
msgid "See also: L</mkdtemp>."
msgstr "Див. також L</mkdtemp>."

#. type: =head2
#: ../fish/guestfish-actions.pod:5539
msgid "modprobe"
msgstr "modprobe"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5541
#, no-wrap
msgid ""
" modprobe modulename\n"
"\n"
msgstr ""
" modprobe назва_модуля\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5543 ../src/guestfs-actions.pod:8966
msgid "This loads a kernel module in the appliance."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5545 ../src/guestfs-actions.pod:8968
msgid ""
"The kernel module must have been whitelisted when libguestfs was built (see "
"C<appliance/kmod.whitelist.in> in the source)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5548
msgid "mount"
msgstr "mount"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5550
#, no-wrap
msgid ""
" mount mountable mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5552
msgid ""
"Mount a guest disk at a position in the filesystem.  Block devices are named "
"C</dev/sda>, C</dev/sdb> and so on, as they were added to the guest.  If "
"those block devices contain partitions, they will have the usual names (eg. "
"C</dev/sda1>).  Also LVM C</dev/VG/LV>-style names can be used, or "
"'mountable' strings returned by L</list-filesystems> or L</inspect-get-"
"mountpoints>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5559 ../src/guestfs-actions.pod:8989
msgid ""
"The rules are the same as for L<mount(2)>: A filesystem must first be "
"mounted on C</> before others can be mounted.  Other filesystems can only be "
"mounted on directories which already exist."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5564 ../src/guestfs-actions.pod:8994
msgid ""
"The mounted filesystem is writable, if we have sufficient permissions on the "
"underlying device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5567
msgid ""
"Before libguestfs 1.13.16, this call implicitly added the options C<sync> "
"and C<noatime>.  The C<sync> option greatly slowed writes and caused many "
"problems for users.  If your program might need to work with older versions "
"of libguestfs, use L</mount-options> instead (using an empty string for the "
"first parameter if you don't want any options)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5574
msgid "mount-9p"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5576
#, no-wrap
msgid ""
" mount-9p mounttag mountpoint [options:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5578 ../src/guestfs-actions.pod:9023
msgid ""
"Mount the virtio-9p filesystem with the tag C<mounttag> on the directory "
"C<mountpoint>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5581 ../src/guestfs-actions.pod:9026
msgid ""
"If required, C<trans=virtio> will be automatically added to the options.  "
"Any other options required can be passed in the optional C<options> "
"parameter."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5587
msgid "mount-local"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5589
#, no-wrap
msgid ""
" mount-local localmountpoint [readonly:true|false] [options:..] [cachetimeout:N] [debugcalls:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5591 ../src/guestfs-actions.pod:9075
msgid ""
"This call exports the libguestfs-accessible filesystem to a local mountpoint "
"(directory) called C<localmountpoint>.  Ordinary reads and writes to files "
"and directories under C<localmountpoint> are redirected through libguestfs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5596 ../src/guestfs-actions.pod:9080
msgid ""
"If the optional C<readonly> flag is set to true, then writes to the "
"filesystem return error C<EROFS>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5599 ../src/guestfs-actions.pod:9083
msgid ""
"C<options> is a comma-separated list of mount options.  See L<guestmount(1)> "
"for some useful options."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5602 ../src/guestfs-actions.pod:9086
msgid ""
"C<cachetimeout> sets the timeout (in seconds) for cached directory entries.  "
"The default is 60 seconds.  See L<guestmount(1)> for further information."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5606 ../src/guestfs-actions.pod:9090
msgid ""
"If C<debugcalls> is set to true, then additional debugging information is "
"generated for every FUSE call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5609
msgid ""
"When L</mount-local> returns, the filesystem is ready, but is not processing "
"requests (access to it will block).  You have to call L</mount-local-run> to "
"run the main loop."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5613 ../fish/guestfish-actions.pod:5636
#: ../fish/guestfish-actions.pod:7842 ../src/guestfs-actions.pod:9097
#: ../src/guestfs-actions.pod:9145 ../src/guestfs-actions.pod:12728
msgid "See L<guestfs(3)/MOUNT LOCAL> for full documentation."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5617
msgid "mount-local-run"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5619
#, no-wrap
msgid ""
" mount-local-run\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5621 ../src/guestfs-actions.pod:9130
msgid "Run the main loop which translates kernel calls to libguestfs calls."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5624
msgid ""
"This should only be called after L</mount-local> returns successfully.  The "
"call will not return until the filesystem is unmounted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5628 ../src/guestfs-actions.pod:9137
msgid ""
"B<Note> you must I<not> make concurrent libguestfs calls on the same handle "
"from another thread."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5631
msgid ""
"You may call this from a different thread than the one which called L</mount-"
"local>, subject to the usual rules for threads and libguestfs (see "
"L<guestfs(3)/MULTIPLE HANDLES AND MULTIPLE THREADS>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5638
msgid "mount-loop"
msgstr "mount-loop"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5640
#, no-wrap
msgid ""
" mount-loop file mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5642 ../src/guestfs-actions.pod:9158
msgid ""
"This command lets you mount C<file> (a filesystem image in a file) on a "
"mount point.  It is entirely equivalent to the command C<mount -o loop file "
"mountpoint>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5646
msgid "mount-options"
msgstr "mount-options"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5648
#, no-wrap
msgid ""
" mount-options options mountable mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5650
msgid ""
"This is the same as the L</mount> command, but it allows you to set the "
"mount options as for the L<mount(8)> I<-o> flag."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5654 ../src/guestfs-actions.pod:9178
msgid ""
"If the C<options> parameter is an empty string, then no options are passed "
"(all options default to whatever the filesystem uses)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5658
msgid "mount-ro"
msgstr "mount-ro"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5660
#, no-wrap
msgid ""
" mount-ro mountable mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5662
msgid ""
"This is the same as the L</mount> command, but it mounts the filesystem with "
"the read-only (I<-o ro>) flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5665
msgid "mount-vfs"
msgstr "mount-vfs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5667
#, no-wrap
msgid ""
" mount-vfs options vfstype mountable mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5669
msgid ""
"This is the same as the L</mount> command, but it allows you to set both the "
"mount options and the vfstype as for the L<mount(8)> I<-o> and I<-t> flags."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5673
msgid "mountpoints"
msgstr "mountpoints"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5675
#, no-wrap
msgid ""
" mountpoints\n"
"\n"
msgstr ""
" mountpoints\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5677
msgid ""
"This call is similar to L</mounts>.  That call returns a list of devices.  "
"This one returns a hash table (map) of device name to directory where the "
"device is mounted."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5681
msgid "mounts"
msgstr "mounts"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5683
#, no-wrap
msgid ""
" mounts\n"
"\n"
msgstr ""
" mounts\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5685 ../src/guestfs-actions.pod:9239
msgid ""
"This returns the list of currently mounted filesystems.  It returns the list "
"of devices (eg. C</dev/sda1>, C</dev/VG/LV>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5688 ../src/guestfs-actions.pod:9242
msgid "Some internal mounts are not shown."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5690
msgid "See also: L</mountpoints>"
msgstr "Див. також L</mountpoints>"

#. type: =head2
#: ../fish/guestfish-actions.pod:5692
msgid "mv"
msgstr "mv"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5694
#, no-wrap
msgid ""
" mv src dest\n"
"\n"
msgstr ""
" mv джерело призначення\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5696 ../src/guestfs-actions.pod:9259
msgid ""
"This moves a file from C<src> to C<dest> where C<dest> is either a "
"destination filename or destination directory."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5699
msgid "See also: L</rename>."
msgstr "Див. також L</rename>."

#. type: =head2
#: ../fish/guestfish-actions.pod:5701
msgid "nr-devices"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5703
#, no-wrap
msgid ""
" nr-devices\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5705
msgid ""
"This returns the number of whole block devices that were added.  This is the "
"same as the number of devices that would be returned if you called L</list-"
"devices>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5709
msgid ""
"To find out the maximum number of devices that could be added, call L</max-"
"disks>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5712
msgid "ntfs-3g-probe"
msgstr "ntfs-3g-probe"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5714
#, no-wrap
msgid ""
" ntfs-3g-probe true|false device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5716 ../src/guestfs-actions.pod:9291
msgid ""
"This command runs the L<ntfs-3g.probe(8)> command which probes an NTFS "
"C<device> for mountability.  (Not all NTFS volumes can be mounted read-"
"write, and some cannot be mounted at all)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5720 ../src/guestfs-actions.pod:9295
msgid ""
"C<rw> is a boolean flag.  Set it to true if you want to test if the volume "
"can be mounted read-write.  Set it to false if you want to test if the "
"volume can be mounted read-only."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5724 ../src/guestfs-actions.pod:9299
msgid ""
"The return value is an integer which C<0> if the operation would succeed, or "
"some non-zero value documented in the L<ntfs-3g.probe(8)> manual page."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5728
msgid "ntfsclone-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5730
#, no-wrap
msgid ""
" ntfsclone-in (backupfile|-) device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5732
msgid ""
"Restore the C<backupfile> (from a previous call to L</ntfsclone-out>) to "
"C<device>, overwriting any existing contents of this device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5738
msgid "ntfsclone-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5740
#, no-wrap
msgid ""
" ntfsclone-out device (backupfile|-) [metadataonly:true|false] [rescue:true|false] [ignorefscheck:true|false] [preservetimestamps:true|false] [force:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5742 ../src/guestfs-actions.pod:9341
msgid ""
"Stream the NTFS filesystem C<device> to the local file C<backupfile>.  The "
"format used for the backup file is a special format used by the "
"L<ntfsclone(8)> tool."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5746 ../src/guestfs-actions.pod:9345
msgid ""
"If the optional C<metadataonly> flag is true, then I<only> the metadata is "
"saved, losing all the user data (this is useful for diagnosing some "
"filesystem problems)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5750 ../src/guestfs-actions.pod:9349
msgid ""
"The optional C<rescue>, C<ignorefscheck>, C<preservetimestamps> and C<force> "
"flags have precise meanings detailed in the L<ntfsclone(8)> man page."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5754
msgid "Use L</ntfsclone-in> to restore the file back to a libguestfs device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5761
msgid "ntfsfix"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5763
#, no-wrap
msgid ""
" ntfsfix device [clearbadsectors:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5765 ../src/guestfs-actions.pod:9398
msgid ""
"This command repairs some fundamental NTFS inconsistencies, resets the NTFS "
"journal file, and schedules an NTFS consistency check for the first boot "
"into Windows."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5769 ../src/guestfs-actions.pod:9402
msgid ""
"This is I<not> an equivalent of Windows C<chkdsk>.  It does I<not> scan the "
"filesystem for inconsistencies."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5772 ../src/guestfs-actions.pod:9405
msgid ""
"The optional C<clearbadsectors> flag clears the list of bad sectors.  This "
"is useful after cloning a disk with bad sectors to a new disk."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5777
msgid "ntfsresize"
msgstr "ntfsresize"

#. type: =head2
#: ../fish/guestfish-actions.pod:5779
msgid "ntfsresize-opts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5781
#, no-wrap
msgid ""
" ntfsresize device [size:N] [force:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5783 ../src/guestfs-actions.pod:9462
msgid ""
"This command resizes an NTFS filesystem, expanding or shrinking it to the "
"size of the underlying device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5792 ../src/guestfs-actions.pod:9471
msgid ""
"The new size (in bytes) of the filesystem.  If omitted, the filesystem is "
"resized to fit the container (eg. partition)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5795 ../fish/guestfish-actions.pod:7678
#: ../src/guestfs-actions.pod:9474 ../src/guestfs-actions.pod:12458
msgid "C<force>"
msgstr "C<force>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5797 ../src/guestfs-actions.pod:9476
msgid ""
"If this option is true, then force the resize of the filesystem even if the "
"filesystem is marked as requiring a consistency check."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5800
msgid ""
"After the resize operation, the filesystem is always marked as requiring a "
"consistency check (for safety).  You have to boot into Windows to perform "
"this check and clear this condition.  If you I<don't> set the C<force> "
"option then it is not possible to call L</ntfsresize> multiple times on a "
"single filesystem without booting into Windows between each resize."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5809 ../src/guestfs-actions.pod:9488
msgid "See also L<ntfsresize(8)>."
msgstr "Див. також L<ntfsresize(8)>."

#. type: =head2
#: ../fish/guestfish-actions.pod:5813
msgid "ntfsresize-size"
msgstr "ntfsresize-size"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5815
#, no-wrap
msgid ""
" ntfsresize-size device size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5817
msgid ""
"This command is the same as L</ntfsresize> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5820
msgid ""
"I<This function is deprecated.> In new code, use the L</ntfsresize> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5827
msgid "parse-environment"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5829
#, no-wrap
msgid ""
" parse-environment\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5831 ../src/guestfs-actions.pod:9542
msgid ""
"Parse the program's environment and set flags in the handle accordingly.  "
"For example if C<LIBGUESTFS_DEBUG=1> then the 'verbose' flag is set in the "
"handle."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5835
msgid ""
"I<Most programs do not need to call this>.  It is done implicitly when you "
"call L</create>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5838
msgid ""
"See L<guestfs(3)/ENVIRONMENT VARIABLES> for a list of environment variables "
"that can affect libguestfs handles.  See also L<guestfs(3)/"
"guestfs_create_flags>, and L</parse-environment-list>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5843
msgid "parse-environment-list"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5845
#, no-wrap
msgid ""
" parse-environment-list 'environment ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5847 ../src/guestfs-actions.pod:9564
msgid ""
"Parse the list of strings in the argument C<environment> and set flags in "
"the handle accordingly.  For example if C<LIBGUESTFS_DEBUG=1> is a string in "
"the list, then the 'verbose' flag is set in the handle."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5852
msgid ""
"This is the same as L</parse-environment> except that it parses an explicit "
"list of strings instead of the program's environment."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5856
msgid "part-add"
msgstr "part-add"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5858
#, no-wrap
msgid ""
" part-add device prlogex startsect endsect\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5860
msgid ""
"This command adds a partition to C<device>.  If there is no partition table "
"on the device, call L</part-init> first."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5863 ../src/guestfs-actions.pod:9589
msgid ""
"The C<prlogex> parameter is the type of partition.  Normally you should pass "
"C<p> or C<primary> here, but MBR partition tables also support C<l> (or "
"C<logical>) and C<e> (or C<extended>) partition types."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5868 ../src/guestfs-actions.pod:9594
msgid ""
"C<startsect> and C<endsect> are the start and end of the partition in "
"I<sectors>.  C<endsect> may be negative, which means it counts backwards "
"from the end of the disk (C<-1> is the last sector)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5872
msgid ""
"Creating a partition which covers the whole disk is not so easy.  Use L</"
"part-disk> to do that."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5875
msgid "part-del"
msgstr "part-del"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5877
#, no-wrap
msgid ""
" part-del device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5879 ../src/guestfs-actions.pod:9612
msgid "This command deletes the partition numbered C<partnum> on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5881 ../src/guestfs-actions.pod:9614
msgid ""
"Note that in the case of MBR partitioning, deleting an extended partition "
"also deletes any logical partitions it contains."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5885
msgid "part-disk"
msgstr "part-disk"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5887
#, no-wrap
msgid ""
" part-disk device parttype\n"
"\n"
msgstr ""
" part-disk пристрій тип_розділу\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5889
msgid ""
"This command is simply a combination of L</part-init> followed by L</part-"
"add> to create a single primary partition covering the whole disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5893
msgid ""
"C<parttype> is the partition table type, usually C<mbr> or C<gpt>, but other "
"possible values are described in L</part-init>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5896
msgid "part-get-bootable"
msgstr "part-get-bootable"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5898
#, no-wrap
msgid ""
" part-get-bootable device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5900 ../src/guestfs-actions.pod:9647
msgid ""
"This command returns true if the partition C<partnum> on C<device> has the "
"bootable flag set."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5903
msgid "See also L</part-set-bootable>."
msgstr "Див. також L</part-set-bootable>."

#. type: =head2
#: ../fish/guestfish-actions.pod:5905
msgid "part-get-gpt-type"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5907
#, no-wrap
msgid ""
" part-get-gpt-type device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5909 ../src/guestfs-actions.pod:9663
msgid ""
"Return the type GUID of numbered GPT partition C<partnum>. For MBR "
"partitions, return an appropriate GUID corresponding to the MBR type. "
"Behaviour is undefined for other partition types."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5913
msgid "part-get-mbr-id"
msgstr "part-get-mbr-id"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5915
#, no-wrap
msgid ""
" part-get-mbr-id device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5917 ../src/guestfs-actions.pod:9679
msgid ""
"Returns the MBR type byte (also known as the ID byte) from the numbered "
"partition C<partnum>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5920 ../fish/guestfish-actions.pod:6085
msgid ""
"Note that only MBR (old DOS-style) partitions have type bytes.  You will get "
"undefined results for other partition table types (see L</part-get-"
"parttype>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5924
msgid "part-get-name"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5926
#, no-wrap
msgid ""
" part-get-name device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5928 ../src/guestfs-actions.pod:9697
msgid ""
"This gets the partition name on partition numbered C<partnum> on device "
"C<device>.  Note that partitions are numbered from 1."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5931 ../src/guestfs-actions.pod:9700
msgid ""
"The partition name can only be read on certain types of partition table.  "
"This works on C<gpt> but not on C<mbr> partitions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5934
msgid "part-get-parttype"
msgstr "part-get-parttype"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5936
#, no-wrap
msgid ""
" part-get-parttype device\n"
"\n"
msgstr ""
" part-get-parttype пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5938 ../src/guestfs-actions.pod:9714
msgid ""
"This command examines the partition table on C<device> and returns the "
"partition table type (format) being used."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5941
msgid ""
"Common return values include: C<msdos> (a DOS/Windows style MBR partition "
"table), C<gpt> (a GPT/EFI-style partition table).  Other values are "
"possible, although unusual.  See L</part-init> for a full list."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5946
msgid "part-init"
msgstr "part-init"

#. type: verbatim
#: ../fish/guestfish-actions.pod:5948
#, no-wrap
msgid ""
" part-init device parttype\n"
"\n"
msgstr ""
" part-init пристрій тип_розділу\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:5950 ../src/guestfs-actions.pod:9734
msgid ""
"This creates an empty partition table on C<device> of one of the partition "
"types listed below.  Usually C<parttype> should be either C<msdos> or C<gpt> "
"(for large disks)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5954
msgid ""
"Initially there are no partitions.  Following this, you should call L</part-"
"add> for each partition required."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5957 ../src/guestfs-actions.pod:9741
msgid "Possible values for C<parttype> are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5961 ../src/guestfs-actions.pod:9745
msgid "B<efi>"
msgstr "B<efi>"

#. type: =item
#: ../fish/guestfish-actions.pod:5963 ../src/guestfs-actions.pod:9747
msgid "B<gpt>"
msgstr "B<gpt>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5965 ../src/guestfs-actions.pod:9749
msgid "Intel EFI / GPT partition table."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5967 ../src/guestfs-actions.pod:9751
msgid ""
"This is recommended for >= 2 TB partitions that will be accessed from Linux "
"and Intel-based Mac OS X.  It also has limited backwards compatibility with "
"the C<mbr> format."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5971 ../src/guestfs-actions.pod:9755
msgid "B<mbr>"
msgstr "B<mbr>"

#. type: =item
#: ../fish/guestfish-actions.pod:5973 ../src/guestfs-actions.pod:9757
msgid "B<msdos>"
msgstr "B<msdos>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5975 ../src/guestfs-actions.pod:9759
msgid ""
"The standard PC \"Master Boot Record\" (MBR) format used by MS-DOS and "
"Windows.  This partition type will B<only> work for device sizes up to 2 "
"TB.  For large disks we recommend using C<gpt>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5982 ../src/guestfs-actions.pod:9766
msgid ""
"Other partition table types that may work but are not supported include:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5987 ../src/guestfs-actions.pod:9771
msgid "B<aix>"
msgstr "B<aix>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5989 ../src/guestfs-actions.pod:9773
msgid "AIX disk labels."
msgstr "Мітки дисків AIX."

#. type: =item
#: ../fish/guestfish-actions.pod:5991 ../src/guestfs-actions.pod:9775
msgid "B<amiga>"
msgstr "B<amiga>"

#. type: =item
#: ../fish/guestfish-actions.pod:5993 ../src/guestfs-actions.pod:9777
msgid "B<rdb>"
msgstr "B<rdb>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5995 ../src/guestfs-actions.pod:9779
msgid "Amiga \"Rigid Disk Block\" format."
msgstr "Формат \"Rigid Disk Block\" Amiga."

#. type: =item
#: ../fish/guestfish-actions.pod:5997 ../src/guestfs-actions.pod:9781
msgid "B<bsd>"
msgstr "B<bsd>"

#. type: textblock
#: ../fish/guestfish-actions.pod:5999 ../src/guestfs-actions.pod:9783
msgid "BSD disk labels."
msgstr "Мітки дисків BSD."

#. type: =item
#: ../fish/guestfish-actions.pod:6001 ../src/guestfs-actions.pod:9785
msgid "B<dasd>"
msgstr "B<dasd>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6003 ../src/guestfs-actions.pod:9787
msgid "DASD, used on IBM mainframes."
msgstr "DASD, використовувалися у мейнфреймах IBM."

#. type: =item
#: ../fish/guestfish-actions.pod:6005 ../src/guestfs-actions.pod:9789
msgid "B<dvh>"
msgstr "B<dvh>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6007 ../src/guestfs-actions.pod:9791
msgid "MIPS/SGI volumes."
msgstr "Томи MIPS/SGI."

#. type: =item
#: ../fish/guestfish-actions.pod:6009 ../src/guestfs-actions.pod:9793
msgid "B<mac>"
msgstr "B<mac>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6011 ../src/guestfs-actions.pod:9795
msgid "Old Mac partition format.  Modern Macs use C<gpt>."
msgstr "Старий формат розділів Mac. Сучасні системи Mac використовують C<gpt>."

#. type: =item
#: ../fish/guestfish-actions.pod:6013 ../src/guestfs-actions.pod:9797
msgid "B<pc98>"
msgstr "B<pc98>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6015 ../src/guestfs-actions.pod:9799
msgid "NEC PC-98 format, common in Japan apparently."
msgstr "Формат NEC PC-98, поширений у Японії."

#. type: =item
#: ../fish/guestfish-actions.pod:6017 ../src/guestfs-actions.pod:9801
msgid "B<sun>"
msgstr "B<sun>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6019 ../src/guestfs-actions.pod:9803
msgid "Sun disk labels."
msgstr "Мітки дисків Sun."

#. type: =head2
#: ../fish/guestfish-actions.pod:6023
msgid "part-list"
msgstr "part-list"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6025
#, no-wrap
msgid ""
" part-list device\n"
"\n"
msgstr ""
" part-list device\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6027 ../src/guestfs-actions.pod:9817
msgid ""
"This command parses the partition table on C<device> and returns the list of "
"partitions found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6030 ../src/guestfs-actions.pod:9820
msgid "The fields in the returned structure are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:6034 ../src/guestfs-actions.pod:9824
msgid "B<part_num>"
msgstr "B<part_num>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6036 ../src/guestfs-actions.pod:9826
msgid "Partition number, counting from 1."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:6038 ../src/guestfs-actions.pod:9828
msgid "B<part_start>"
msgstr "B<part_start>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6040
msgid ""
"Start of the partition I<in bytes>.  To get sectors you have to divide by "
"the device's sector size, see L</blockdev-getss>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:6043 ../src/guestfs-actions.pod:9833
msgid "B<part_end>"
msgstr "B<part_end>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6045 ../src/guestfs-actions.pod:9835
msgid "End of the partition in bytes."
msgstr "Позиція завершення розділу у байтах."

#. type: =item
#: ../fish/guestfish-actions.pod:6047 ../src/guestfs-actions.pod:9837
msgid "B<part_size>"
msgstr "B<part_size>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6049 ../src/guestfs-actions.pod:9839
msgid "Size of the partition in bytes."
msgstr "Розмір розділу у байтах."

#. type: =head2
#: ../fish/guestfish-actions.pod:6053
msgid "part-set-bootable"
msgstr "part-set-bootable"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6055
#, no-wrap
msgid ""
" part-set-bootable device partnum true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6057 ../src/guestfs-actions.pod:9857
msgid ""
"This sets the bootable flag on partition numbered C<partnum> on device "
"C<device>.  Note that partitions are numbered from 1."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6060 ../src/guestfs-actions.pod:9860
msgid ""
"The bootable flag is used by some operating systems (notably Windows) to "
"determine which partition to boot from.  It is by no means universally "
"recognized."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6064
msgid "part-set-gpt-type"
msgstr "part-set-gpt-type"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6066
#, no-wrap
msgid ""
" part-set-gpt-type device partnum guid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6068 ../src/guestfs-actions.pod:9876
msgid ""
"Set the type GUID of numbered GPT partition C<partnum> to C<guid>. Return an "
"error if the partition table of C<device> isn't GPT, or if C<guid> is not a "
"valid GUID."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6072 ../src/guestfs-actions.pod:9880
msgid ""
"See L<http://en.wikipedia.org/wiki/"
"GUID_Partition_Table#Partition_type_GUIDs> for a useful list of type GUIDs."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6075
msgid "part-set-mbr-id"
msgstr "part-set-mbr-id"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6077
#, no-wrap
msgid ""
" part-set-mbr-id device partnum idbyte\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6079 ../src/guestfs-actions.pod:9895
msgid ""
"Sets the MBR type byte (also known as the ID byte) of the numbered partition "
"C<partnum> to C<idbyte>.  Note that the type bytes quoted in most "
"documentation are in fact hexadecimal numbers, but usually documented "
"without any leading \"0x\" which might be confusing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6089
msgid "part-set-name"
msgstr "part-set-name"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6091
#, no-wrap
msgid ""
" part-set-name device partnum name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6093 ../src/guestfs-actions.pod:9917
msgid ""
"This sets the partition name on partition numbered C<partnum> on device "
"C<device>.  Note that partitions are numbered from 1."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6096 ../src/guestfs-actions.pod:9920
msgid ""
"The partition name can only be set on certain types of partition table.  "
"This works on C<gpt> but not on C<mbr> partitions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6099
msgid "part-to-dev"
msgstr "part-to-dev"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6101
#, no-wrap
msgid ""
" part-to-dev partition\n"
"\n"
msgstr ""
" part-to-dev розділ\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6103 ../src/guestfs-actions.pod:9933
msgid ""
"This function takes a partition name (eg. \"/dev/sdb1\") and removes the "
"partition number, returning the device name (eg. \"/dev/sdb\")."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6107 ../fish/guestfish-actions.pod:6119
msgid ""
"The named partition must exist, for example as a string returned from L</"
"list-partitions>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6110
msgid "See also L</part-to-partnum>, L</device-index>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6112
msgid "part-to-partnum"
msgstr "part-to-partnum"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6114
#, no-wrap
msgid ""
" part-to-partnum partition\n"
"\n"
msgstr ""
" part-to-partnum розділ\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6116 ../src/guestfs-actions.pod:9953
msgid ""
"This function takes a partition name (eg. \"/dev/sdb1\") and returns the "
"partition number (eg. C<1>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6122
msgid "See also L</part-to-dev>."
msgstr "Див. також L</part-to-dev>."

#. type: =head2
#: ../fish/guestfish-actions.pod:6124
msgid "ping-daemon"
msgstr "ping-daemon"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6126
#, no-wrap
msgid ""
" ping-daemon\n"
"\n"
msgstr ""
" ping-daemon\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6128 ../src/guestfs-actions.pod:9970
msgid ""
"This is a test probe into the guestfs daemon running inside the hypervisor.  "
"Calling this function checks that the daemon responds to the ping message, "
"without affecting the daemon or attached block device(s) in any other way."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6133
msgid "pread"
msgstr "pread"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6135
#, no-wrap
msgid ""
" pread path count offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6137 ../src/guestfs-actions.pod:9988
msgid ""
"This command lets you read part of a file.  It reads C<count> bytes of the "
"file, starting at C<offset>, from file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6140 ../fish/guestfish-actions.pod:6155
#: ../src/guestfs-actions.pod:9991 ../src/guestfs-actions.pod:10017
msgid ""
"This may read fewer bytes than requested.  For further details see the "
"L<pread(2)> system call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6143
msgid "See also L</pwrite>, L</pread-device>."
msgstr "Див. також L</pwrite>, L</pread-device>."

#. type: =head2
#: ../fish/guestfish-actions.pod:6148
msgid "pread-device"
msgstr "pread-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6150
#, no-wrap
msgid ""
" pread-device device count offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6152 ../src/guestfs-actions.pod:10014
msgid ""
"This command lets you read part of a block device.  It reads C<count> bytes "
"of C<device>, starting at C<offset>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6158
msgid "See also L</pread>."
msgstr "Див. також L</pread>."

#. type: =head2
#: ../fish/guestfish-actions.pod:6163
msgid "pvchange-uuid"
msgstr "pvchange-uuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6165
#, no-wrap
msgid ""
" pvchange-uuid device\n"
"\n"
msgstr ""
" pvchange-uuid пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6167 ../src/guestfs-actions.pod:10037
msgid "Generate a new random UUID for the physical volume C<device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6169
msgid "pvchange-uuid-all"
msgstr "pvchange-uuid-all"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6171
#, no-wrap
msgid ""
" pvchange-uuid-all\n"
"\n"
msgstr ""
" pvchange-uuid-all\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6173 ../src/guestfs-actions.pod:10048
msgid "Generate new random UUIDs for all physical volumes."
msgstr "Створити нові випадкові UUID для всіх фізичних томів."

#. type: =head2
#: ../fish/guestfish-actions.pod:6175
msgid "pvcreate"
msgstr "pvcreate"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6177
#, no-wrap
msgid ""
" pvcreate device\n"
"\n"
msgstr ""
" pvcreate пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6179 ../src/guestfs-actions.pod:10060
msgid ""
"This creates an LVM physical volume on the named C<device>, where C<device> "
"should usually be a partition name such as C</dev/sda1>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6183
msgid "pvremove"
msgstr "pvremove"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6185
#, no-wrap
msgid ""
" pvremove device\n"
"\n"
msgstr ""
" pvremove пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6187 ../src/guestfs-actions.pod:10074
msgid ""
"This wipes a physical volume C<device> so that LVM will no longer recognise "
"it."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6190 ../src/guestfs-actions.pod:10077
msgid ""
"The implementation uses the C<pvremove> command which refuses to wipe "
"physical volumes that contain any volume groups, so you have to remove those "
"first."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6194
msgid "pvresize"
msgstr "pvresize"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6196
#, no-wrap
msgid ""
" pvresize device\n"
"\n"
msgstr ""
" pvresize пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6198 ../src/guestfs-actions.pod:10091
msgid ""
"This resizes (expands or shrinks) an existing LVM physical volume to match "
"the new size of the underlying device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6201
msgid "pvresize-size"
msgstr "pvresize-size"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6203
#, no-wrap
msgid ""
" pvresize-size device size\n"
"\n"
msgstr ""
" pvresize-size пристрій розмір\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6205
msgid ""
"This command is the same as L</pvresize> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6208
msgid "pvs"
msgstr "pvs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6210
#, no-wrap
msgid ""
" pvs\n"
"\n"
msgstr ""
" pvs\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6212 ../src/guestfs-actions.pod:10117
msgid ""
"List all the physical volumes detected.  This is the equivalent of the "
"L<pvs(8)> command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6215 ../src/guestfs-actions.pod:10120
msgid ""
"This returns a list of just the device names that contain PVs (eg. C</dev/"
"sda2>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6218
msgid "See also L</pvs-full>."
msgstr "Див. також L</pvs-full>."

#. type: =head2
#: ../fish/guestfish-actions.pod:6220
msgid "pvs-full"
msgstr "pvs-full"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6222
#, no-wrap
msgid ""
" pvs-full\n"
"\n"
msgstr ""
" pvs-full\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6224 ../src/guestfs-actions.pod:10136
msgid ""
"List all the physical volumes detected.  This is the equivalent of the "
"L<pvs(8)> command.  The \"full\" version includes all fields."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6227
msgid "pvuuid"
msgstr "pvuuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6229
#, no-wrap
msgid ""
" pvuuid device\n"
"\n"
msgstr ""
" pvuuid пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6231 ../src/guestfs-actions.pod:10151
msgid "This command returns the UUID of the LVM PV C<device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6233
msgid "pwrite"
msgstr "pwrite"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6235
#, no-wrap
msgid ""
" pwrite path content offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6237 ../src/guestfs-actions.pod:10167
msgid ""
"This command writes to part of a file.  It writes the data buffer C<content> "
"to the file C<path> starting at offset C<offset>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6240 ../src/guestfs-actions.pod:10170
msgid ""
"This command implements the L<pwrite(2)> system call, and like that system "
"call it may not write the full data requested.  The return value is the "
"number of bytes that were actually written to the file.  This could even be "
"0, although short writes are unlikely for regular files in ordinary "
"circumstances."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6246
msgid "See also L</pread>, L</pwrite-device>."
msgstr "Див. також L</pread>, L</pwrite-device>."

#. type: =head2
#: ../fish/guestfish-actions.pod:6251
msgid "pwrite-device"
msgstr "pwrite-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6253
#, no-wrap
msgid ""
" pwrite-device device content offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6255 ../src/guestfs-actions.pod:10194
msgid ""
"This command writes to part of a device.  It writes the data buffer "
"C<content> to C<device> starting at offset C<offset>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6258 ../src/guestfs-actions.pod:10197
msgid ""
"This command implements the L<pwrite(2)> system call, and like that system "
"call it may not write the full data requested (although short writes to disk "
"devices and partitions are probably impossible with standard Linux kernels)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6263
msgid "See also L</pwrite>."
msgstr "Див. також L</pwrite>."

#. type: =head2
#: ../fish/guestfish-actions.pod:6268
msgid "read-file"
msgstr "read-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6270
#, no-wrap
msgid ""
" read-file path\n"
"\n"
msgstr ""
" read-file шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6272 ../src/guestfs-actions.pod:10218
msgid "This calls returns the contents of the file C<path> as a buffer."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6275
msgid ""
"Unlike L</cat>, this function can correctly handle files that contain "
"embedded ASCII NUL characters."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6278
msgid "read-lines"
msgstr "read-lines"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6280
#, no-wrap
msgid ""
" read-lines path\n"
"\n"
msgstr ""
" read-lines шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6284 ../src/guestfs-actions.pod:10238
msgid ""
"The file contents are returned as a list of lines.  Trailing C<LF> and "
"C<CRLF> character sequences are I<not> returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6287
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of string).  For "
"those you need to use the L</read-file> function and split the buffer into "
"lines yourself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6292
msgid "readdir"
msgstr "readdir"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6294
#, no-wrap
msgid ""
" readdir dir\n"
"\n"
msgstr ""
" readdir каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6296 ../src/guestfs-actions.pod:10258
msgid "This returns the list of directory entries in directory C<dir>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6298 ../src/guestfs-actions.pod:10260
msgid ""
"All entries in the directory are returned, including C<.> and C<..>.  The "
"entries are I<not> sorted, but returned in the same order as the underlying "
"filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6302 ../src/guestfs-actions.pod:10264
msgid ""
"Also this call returns basic file type information about each file.  The "
"C<ftyp> field will contain one of the following characters:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:6307 ../src/guestfs-actions.pod:10269
msgid "'b'"
msgstr "'b'"

#. type: textblock
#: ../fish/guestfish-actions.pod:6309 ../src/guestfs-actions.pod:10271
msgid "Block special"
msgstr "Блоковий особливий"

#. type: textblock
#: ../fish/guestfish-actions.pod:6313 ../src/guestfs-actions.pod:10275
msgid "Char special"
msgstr "Символьний особливий"

#. type: textblock
#: ../fish/guestfish-actions.pod:6317 ../src/guestfs-actions.pod:10279
msgid "Directory"
msgstr "Каталог"

#. type: =item
#: ../fish/guestfish-actions.pod:6319 ../src/guestfs-actions.pod:10281
msgid "'f'"
msgstr "'f'"

#. type: textblock
#: ../fish/guestfish-actions.pod:6321 ../src/guestfs-actions.pod:10283
msgid "FIFO (named pipe)"
msgstr "FIFO (іменований канал)"

#. type: =item
#: ../fish/guestfish-actions.pod:6323 ../src/guestfs-actions.pod:10285
msgid "'l'"
msgstr "'l'"

#. type: textblock
#: ../fish/guestfish-actions.pod:6325 ../src/guestfs-actions.pod:10287
msgid "Symbolic link"
msgstr "Символічне посилання"

#. type: =item
#: ../fish/guestfish-actions.pod:6327 ../src/guestfs-actions.pod:10289
msgid "'r'"
msgstr "'r'"

#. type: textblock
#: ../fish/guestfish-actions.pod:6329 ../src/guestfs-actions.pod:10291
msgid "Regular file"
msgstr "Звичайний файл"

#. type: textblock
#: ../fish/guestfish-actions.pod:6333 ../src/guestfs-actions.pod:10295
msgid "Socket"
msgstr "Сокет"

#. type: textblock
#: ../fish/guestfish-actions.pod:6337 ../src/guestfs-actions.pod:10299
msgid "Unknown file type"
msgstr "Невідомий тип файла"

#. type: =item
#: ../fish/guestfish-actions.pod:6339 ../src/guestfs-actions.pod:10301
msgid "'?'"
msgstr "'?'"

#. type: textblock
#: ../fish/guestfish-actions.pod:6341 ../src/guestfs-actions.pod:10303
msgid ""
"The L<readdir(3)> call returned a C<d_type> field with an unexpected value"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6346
msgid ""
"This function is primarily intended for use by programs.  To get a simple "
"list of names, use L</ls>.  To get a printable directory for human "
"consumption, use L</ll>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6353
msgid "readlink"
msgstr "readlink"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6355
#, no-wrap
msgid ""
" readlink path\n"
"\n"
msgstr ""
" readlink шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6357 ../src/guestfs-actions.pod:10327
msgid "This command reads the target of a symbolic link."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6359
msgid "readlinklist"
msgstr "readlinklist"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6361
#, no-wrap
msgid ""
" readlinklist path 'names ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6363 ../src/guestfs-actions.pod:10341
msgid ""
"This call allows you to do a C<readlink> operation on multiple files, where "
"all files are in the directory C<path>.  C<names> is the list of files from "
"this directory."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6367 ../src/guestfs-actions.pod:10345
msgid ""
"On return you get a list of strings, with a one-to-one correspondence to the "
"C<names> list.  Each string is the value of the symbolic link."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6371 ../src/guestfs-actions.pod:10349
msgid ""
"If the C<readlink(2)> operation fails on any name, then the corresponding "
"result string is the empty string C<\"\">.  However the whole operation is "
"completed even if there were C<readlink(2)> errors, and so you can call this "
"function with names where you don't know if they are symbolic links already "
"(albeit slightly less efficient)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6378 ../src/guestfs-actions.pod:10356
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6381
msgid "realpath"
msgstr "realpath"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6383
#, no-wrap
msgid ""
" realpath path\n"
"\n"
msgstr ""
" realpath шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6385 ../src/guestfs-actions.pod:10371
msgid ""
"Return the canonicalized absolute pathname of C<path>.  The returned path "
"has no C<.>, C<..> or symbolic link path elements."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6388
msgid "remount"
msgstr "remount"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6390
#, no-wrap
msgid ""
" remount mountpoint [rw:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6392 ../src/guestfs-actions.pod:10393
msgid ""
"This call allows you to change the C<rw> (readonly/read-write)  flag on an "
"already mounted filesystem at C<mountpoint>, converting a readonly "
"filesystem to be read-write, or vice-versa."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6396 ../src/guestfs-actions.pod:10397
msgid ""
"Note that at the moment you must supply the \"optional\" C<rw> parameter.  "
"In future we may allow other flags to be adjusted."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6401
msgid "remove-drive"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6403
#, no-wrap
msgid ""
" remove-drive label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6405
msgid ""
"This function is conceptually the opposite of L</add-drive-opts>.  It "
"removes the drive that was previously added with label C<label>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6408
msgid ""
"Note that in order to remove drives, you have to add them with labels (see "
"the optional C<label> argument to L</add-drive-opts>).  If you didn't use a "
"label, then they cannot be removed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6412 ../src/guestfs-actions.pod:10439
msgid ""
"You can call this function before or after launching the handle.  If called "
"after launch, if the backend supports it, we try to hot unplug the drive: "
"see L<guestfs(3)/HOTPLUGGING>.  The disk B<must not> be in use (eg. mounted) "
"when you do this.  We try to detect if the disk is in use and stop you from "
"doing this."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6418
msgid "removexattr"
msgstr "removexattr"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6420
#, no-wrap
msgid ""
" removexattr xattr path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6422 ../src/guestfs-actions.pod:10456
msgid ""
"This call removes the extended attribute named C<xattr> of the file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6425
msgid "See also: L</lremovexattr>, L<attr(5)>."
msgstr "Див. також L</lremovexattr>, L<attr(5)>."

#. type: =head2
#: ../fish/guestfish-actions.pod:6427
msgid "rename"
msgstr "rename"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6429
#, no-wrap
msgid ""
" rename oldpath newpath\n"
"\n"
msgstr ""
" rename стара_адреса нова_адреса\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6431
msgid ""
"Rename a file to a new place on the same filesystem.  This is the same as "
"the Linux L<rename(2)> system call.  In most cases you are better to use L</"
"mv> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6435
msgid "resize2fs"
msgstr "resize2fs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6437
#, no-wrap
msgid ""
" resize2fs device\n"
"\n"
msgstr ""
" resize2fs пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6439 ../src/guestfs-actions.pod:10486
msgid ""
"This resizes an ext2, ext3 or ext4 filesystem to match the size of the "
"underlying device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6442 ../fish/guestfish-actions.pod:6457
#: ../fish/guestfish-actions.pod:6466 ../src/guestfs-actions.pod:10489
#: ../src/guestfs-actions.pod:10510 ../src/guestfs-actions.pod:10526
msgid "See also L<guestfs(3)/RESIZE2FS ERRORS>."
msgstr "Див. також L<guestfs(3)/RESIZE2FS ERRORS>."

#. type: =head2
#: ../fish/guestfish-actions.pod:6444
msgid "resize2fs-M"
msgstr "resize2fs-M"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6446
#, no-wrap
msgid ""
" resize2fs-M device\n"
"\n"
msgstr ""
" resize2fs-M пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6448
msgid ""
"This command is the same as L</resize2fs>, but the filesystem is resized to "
"its minimum size.  This works like the I<-M> option to the C<resize2fs> "
"command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6452
msgid ""
"To get the resulting size of the filesystem you should call L</tune2fs-l> "
"and read the C<Block size> and C<Block count> values.  These two numbers, "
"multiplied together, give the resulting size of the minimal filesystem in "
"bytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6459
msgid "resize2fs-size"
msgstr "resize2fs-size"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6461
#, no-wrap
msgid ""
" resize2fs-size device size\n"
"\n"
msgstr ""
" resize2fs-size пристрій розмір\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6463
msgid ""
"This command is the same as L</resize2fs> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6468
msgid "rm"
msgstr "rm"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6470
#, no-wrap
msgid ""
" rm path\n"
"\n"
msgstr ""
" rm шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6472 ../src/guestfs-actions.pod:10538
msgid "Remove the single file C<path>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6474
msgid "rm-f"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6476
#, no-wrap
msgid ""
" rm-f path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6478 ../src/guestfs-actions.pod:10550
msgid "Remove the file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6480 ../src/guestfs-actions.pod:10552
msgid ""
"If the file doesn't exist, that error is ignored.  (Other errors, eg. I/O "
"errors or bad paths, are not ignored)"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6483
msgid ""
"This call cannot remove directories.  Use L</rmdir> to remove an empty "
"directory, or L</rm-rf> to remove directories recursively."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6487
msgid "rm-rf"
msgstr "rm-rf"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6489
#, no-wrap
msgid ""
" rm-rf path\n"
"\n"
msgstr ""
" rm-rf шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6491 ../src/guestfs-actions.pod:10569
msgid ""
"Remove the file or directory C<path>, recursively removing the contents if "
"its a directory.  This is like the C<rm -rf> shell command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6495
msgid "rmdir"
msgstr "rmdir"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6497
#, no-wrap
msgid ""
" rmdir path\n"
"\n"
msgstr ""
" rmdir шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6499 ../src/guestfs-actions.pod:10583
msgid "Remove the single directory C<path>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6501
msgid "rmmountpoint"
msgstr "rmmountpoint"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6503
#, no-wrap
msgid ""
" rmmountpoint exemptpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6505
msgid ""
"This calls removes a mountpoint that was previously created with L</"
"mkmountpoint>.  See L</mkmountpoint> for full details."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6509
msgid "rsync"
msgstr "rsync"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6511
#, no-wrap
msgid ""
" rsync src dest [archive:true|false] [deletedest:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6513 ../src/guestfs-actions.pod:10619
msgid ""
"This call may be used to copy or synchronize two directories under the same "
"libguestfs handle.  This uses the L<rsync(1)> program which uses a fast "
"algorithm that avoids copying files unnecessarily."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6518 ../src/guestfs-actions.pod:10624
msgid ""
"C<src> and C<dest> are the source and destination directories.  Files are "
"copied from C<src> to C<dest>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:6525 ../src/guestfs-actions.pod:10631
msgid "C<archive>"
msgstr "C<archive>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6527 ../src/guestfs-actions.pod:10633
msgid ""
"Turns on archive mode.  This is the same as passing the I<--archive> flag to "
"C<rsync>."
msgstr ""
"Вмикає режим архівування. Те саме, що передати параметр I<--archive> команді "
"C<rsync>."

#. type: =item
#: ../fish/guestfish-actions.pod:6530 ../src/guestfs-actions.pod:10636
msgid "C<deletedest>"
msgstr "C<deletedest>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6532 ../src/guestfs-actions.pod:10638
msgid "Delete files at the destination that do not exist at the source."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6538
msgid "rsync-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6540
#, no-wrap
msgid ""
" rsync-in remote dest [archive:true|false] [deletedest:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6542 ../src/guestfs-actions.pod:10686
msgid ""
"This call may be used to copy or synchronize the filesystem on the host or "
"on a remote computer with the filesystem within libguestfs.  This uses the "
"L<rsync(1)> program which uses a fast algorithm that avoids copying files "
"unnecessarily."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6547 ../fish/guestfish-actions.pod:6571
msgid ""
"This call only works if the network is enabled.  See L</set-network> or the "
"I<--network> option to various tools like L<guestfish(1)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6551 ../src/guestfs-actions.pod:10695
msgid ""
"Files are copied from the remote server and directory specified by C<remote> "
"to the destination directory C<dest>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6554 ../fish/guestfish-actions.pod:6578
#: ../src/guestfs-actions.pod:10698 ../src/guestfs-actions.pod:10760
msgid ""
"The format of the remote server string is defined by L<rsync(1)>.  Note that "
"there is no way to supply a password or passphrase so the target must be set "
"up not to require one."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6558 ../fish/guestfish-actions.pod:6582
msgid "The optional arguments are the same as those of L</rsync>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6562
msgid "rsync-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6564
#, no-wrap
msgid ""
" rsync-out src remote [archive:true|false] [deletedest:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6566 ../src/guestfs-actions.pod:10748
msgid ""
"This call may be used to copy or synchronize the filesystem within "
"libguestfs with a filesystem on the host or on a remote computer.  This uses "
"the L<rsync(1)> program which uses a fast algorithm that avoids copying "
"files unnecessarily."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6575 ../src/guestfs-actions.pod:10757
msgid ""
"Files are copied from the source directory C<src> to the remote server and "
"directory specified by C<remote>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6584
msgid ""
"Globbing does not happen on the C<src> parameter.  In programs which use the "
"API directly you have to expand wildcards yourself (see L</glob-expand>).  "
"In guestfish you can use the C<glob> command (see L<guestfish(1)/glob>), for "
"example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6589 ../src/guestfs-actions.pod:10771
#, no-wrap
msgid ""
" ><fs> glob rsync-out /* rsync://remote/\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6593
msgid "scrub-device"
msgstr "scrub-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6595
#, no-wrap
msgid ""
" scrub-device device\n"
"\n"
msgstr ""
" scrub-device пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6597 ../src/guestfs-actions.pod:10807
msgid ""
"This command writes patterns over C<device> to make data retrieval more "
"difficult."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6600 ../fish/guestfish-actions.pod:6612
#: ../fish/guestfish-actions.pod:6625 ../src/guestfs-actions.pod:10810
#: ../src/guestfs-actions.pod:10828 ../src/guestfs-actions.pod:10847
msgid ""
"It is an interface to the L<scrub(1)> program.  See that manual page for "
"more details."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6603
msgid "scrub-file"
msgstr "scrub-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6605
#, no-wrap
msgid ""
" scrub-file file\n"
"\n"
msgstr ""
" scrub-file файл\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6607 ../src/guestfs-actions.pod:10823
msgid ""
"This command writes patterns over a file to make data retrieval more "
"difficult."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6610 ../src/guestfs-actions.pod:10826
msgid "The file is I<removed> after scrubbing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6615
msgid "scrub-freespace"
msgstr "scrub-freespace"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6617
#, no-wrap
msgid ""
" scrub-freespace dir\n"
"\n"
msgstr ""
" scrub-freespace каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6619
msgid ""
"This command creates the directory C<dir> and then fills it with files until "
"the filesystem is full, and scrubs the files as for L</scrub-file>, and "
"deletes them.  The intention is to scrub any free space on the partition "
"containing C<dir>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6628
msgid "set-append"
msgstr "set-append"

#. type: =head2
#: ../fish/guestfish-actions.pod:6630
msgid "append"
msgstr "append"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6632
#, no-wrap
msgid ""
" set-append append\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6634 ../src/guestfs-actions.pod:10860
msgid ""
"This function is used to add additional options to the guest kernel command "
"line."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6637 ../src/guestfs-actions.pod:10863
msgid ""
"The default is C<NULL> unless overridden by setting C<LIBGUESTFS_APPEND> "
"environment variable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6640 ../src/guestfs-actions.pod:10866
msgid ""
"Setting C<append> to C<NULL> means I<no> additional options are passed "
"(libguestfs always adds a few of its own)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6643
msgid "set-attach-method"
msgstr "set-attach-method"

#. type: =head2
#: ../fish/guestfish-actions.pod:6645
msgid "attach-method"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6647
#, no-wrap
msgid ""
" set-attach-method backend\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6649 ../fish/guestfish-actions.pod:6681
#: ../src/guestfs-actions.pod:10886 ../src/guestfs-actions.pod:10919
msgid ""
"Set the method that libguestfs uses to connect to the backend guestfsd "
"daemon."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6652 ../fish/guestfish-actions.pod:6686
#: ../src/guestfs-actions.pod:10889 ../src/guestfs-actions.pod:10924
msgid "See L<guestfs(3)/BACKEND>."
msgstr "Див. L<guestfs(3)/BACKEND>."

#. type: textblock
#: ../fish/guestfish-actions.pod:6654
msgid ""
"I<This function is deprecated.> In new code, use the L</set-backend> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6661
msgid "set-autosync"
msgstr "set-autosync"

#. type: =head2
#: ../fish/guestfish-actions.pod:6663
msgid "autosync"
msgstr "autosync"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6665
#, no-wrap
msgid ""
" set-autosync true|false\n"
"\n"
msgstr ""
" set-autosync true|false\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6667 ../src/guestfs-actions.pod:10901
msgid ""
"If C<autosync> is true, this enables autosync.  Libguestfs will make a best "
"effort attempt to make filesystems consistent and synchronized when the "
"handle is closed (also if the program exits without closing handles)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6672 ../src/guestfs-actions.pod:10906
msgid ""
"This is enabled by default (since libguestfs 1.5.24, previously it was "
"disabled by default)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6675
msgid "set-backend"
msgstr "set-backend"

#. type: =head2
#: ../fish/guestfish-actions.pod:6677
msgid "backend"
msgstr "модуль"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6679
#, no-wrap
msgid ""
" set-backend backend\n"
"\n"
msgstr ""
" set-backend модуль\n"
"\n"

#. type: =head2
#: ../fish/guestfish-actions.pod:6688
msgid "set-backend-setting"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6690
#, no-wrap
msgid ""
" set-backend-setting name val\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6692 ../src/guestfs-actions.pod:10937
msgid ""
"Append C<\"name=value\"> to the backend settings string list.  However if a "
"string already exists matching C<\"name\"> or beginning with C<\"name=\">, "
"then that setting is replaced."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6698
msgid "set-backend-settings"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6700
#, no-wrap
msgid ""
" set-backend-settings 'settings ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6702 ../src/guestfs-actions.pod:10953
msgid ""
"Set a list of zero or more settings which are passed through to the current "
"backend.  Each setting is a string which is interpreted in a backend-"
"specific way, or ignored if not understood by the backend."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6707 ../src/guestfs-actions.pod:10958
msgid ""
"The default value is an empty list, unless the environment variable "
"C<LIBGUESTFS_BACKEND_SETTINGS> was set when the handle was created.  This "
"environment variable contains a colon-separated list of settings."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6712
msgid ""
"This call replaces all backend settings.  If you want to replace a single "
"backend setting, see L</set-backend-setting>.  If you want to clear a single "
"backend setting, see L</clear-backend-setting>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6719
msgid "set-cachedir"
msgstr "set-cachedir"

#. type: =head2
#: ../fish/guestfish-actions.pod:6721
msgid "cachedir"
msgstr "каталог_кешування"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6723
#, no-wrap
msgid ""
" set-cachedir cachedir\n"
"\n"
msgstr ""
" set-cachedir каталог_кешування\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6725 ../src/guestfs-actions.pod:10980
msgid ""
"Set the directory used by the handle to store the appliance cache, when "
"using a supermin appliance.  The appliance is cached and shared between all "
"handles which have the same effective user ID."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6730 ../src/guestfs-actions.pod:10985
msgid ""
"The environment variables C<LIBGUESTFS_CACHEDIR> and C<TMPDIR> control the "
"default value: If C<LIBGUESTFS_CACHEDIR> is set, then that is the default.  "
"Else if C<TMPDIR> is set, then that is the default.  Else C</var/tmp> is the "
"default."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6735
msgid "set-direct"
msgstr "set-direct"

#. type: =head2
#: ../fish/guestfish-actions.pod:6737
msgid "direct"
msgstr "direct"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6739
#, no-wrap
msgid ""
" set-direct true|false\n"
"\n"
msgstr ""
" set-direct true|false\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6741 ../src/guestfs-actions.pod:11000
msgid ""
"If the direct appliance mode flag is enabled, then stdin and stdout are "
"passed directly through to the appliance once it is launched."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6745
msgid ""
"One consequence of this is that log messages aren't caught by the library "
"and handled by L</set-log-message-callback>, but go straight to stdout."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6749 ../src/guestfs-actions.pod:11008
msgid "You probably don't want to use this unless you know what you are doing."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6752 ../src/guestfs-actions.pod:11011
msgid "The default is disabled."
msgstr "Типово вимкнено."

#. type: =head2
#: ../fish/guestfish-actions.pod:6754
msgid "set-e2attrs"
msgstr "set-e2attrs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6756
#, no-wrap
msgid ""
" set-e2attrs file attrs [clear:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6758 ../src/guestfs-actions.pod:11032
msgid ""
"This sets or clears the file attributes C<attrs> associated with the inode "
"C<file>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6761
msgid ""
"C<attrs> is a string of characters representing file attributes.  See L</get-"
"e2attrs> for a list of possible attributes.  Not all attributes can be "
"changed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6765 ../src/guestfs-actions.pod:11039
msgid ""
"If optional boolean C<clear> is not present or false, then the C<attrs> "
"listed are set in the inode."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6768 ../src/guestfs-actions.pod:11042
msgid "If C<clear> is true, then the C<attrs> listed are cleared in the inode."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6771 ../src/guestfs-actions.pod:11045
msgid ""
"In both cases, other attributes not present in the C<attrs> string are left "
"unchanged."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6780
msgid "set-e2generation"
msgstr "set-e2generation"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6782
#, no-wrap
msgid ""
" set-e2generation file generation\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6784 ../src/guestfs-actions.pod:11087
msgid "This sets the ext2 file generation of a file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6786
msgid "See L</get-e2generation>."
msgstr "Див. L</get-e2generation>."

#. type: =head2
#: ../fish/guestfish-actions.pod:6788
msgid "set-e2label"
msgstr "set-e2label"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6790
#, no-wrap
msgid ""
" set-e2label device label\n"
"\n"
msgstr ""
" set-e2label пристрій мітка\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6792 ../src/guestfs-actions.pod:11109
msgid ""
"This sets the ext2/3/4 filesystem label of the filesystem on C<device> to "
"C<label>.  Filesystem labels are limited to 16 characters."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6796
msgid ""
"You can use either L</tune2fs-l> or L</get-e2label> to return the existing "
"label on a filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6799
msgid ""
"I<This function is deprecated.> In new code, use the L</set-label> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6806
msgid "set-e2uuid"
msgstr "set-e2uuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6808
#, no-wrap
msgid ""
" set-e2uuid device uuid\n"
"\n"
msgstr ""
" set-e2uuid пристрій uuid\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6810 ../src/guestfs-actions.pod:11134
msgid ""
"This sets the ext2/3/4 filesystem UUID of the filesystem on C<device> to "
"C<uuid>.  The format of the UUID and alternatives such as C<clear>, "
"C<random> and C<time> are described in the L<tune2fs(8)> manpage."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6815
msgid "You can use L</vfs-uuid> to return the existing UUID of a filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6818
msgid ""
"I<This function is deprecated.> In new code, use the L</set-uuid> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6825
msgid "set-hv"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6827
msgid "hv"
msgstr "hv"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6829
#, no-wrap
msgid ""
" set-hv hv\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6831 ../src/guestfs-actions.pod:11152
msgid ""
"Set the hypervisor binary that we will use.  The hypervisor depends on the "
"backend, but is usually the location of the qemu/KVM hypervisor.  For the "
"uml backend, it is the location of the C<linux> or C<vmlinux> binary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6836 ../fish/guestfish-actions.pod:7014
#: ../src/guestfs-actions.pod:11157 ../src/guestfs-actions.pod:11387
msgid ""
"The default is chosen when the library was compiled by the configure script."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6839 ../fish/guestfish-actions.pod:7017
#: ../src/guestfs-actions.pod:11160 ../src/guestfs-actions.pod:11390
msgid ""
"You can also override this by setting the C<LIBGUESTFS_HV> environment "
"variable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6842 ../fish/guestfish-actions.pod:7022
#: ../src/guestfs-actions.pod:11163 ../src/guestfs-actions.pod:11395
msgid ""
"Note that you should call this function as early as possible after creating "
"the handle.  This is because some pre-launch operations depend on testing "
"qemu features (by running C<qemu -help>).  If the qemu binary changes, we "
"don't retest features, and so you might see inconsistent results.  Using the "
"environment variable C<LIBGUESTFS_HV> is safest of all since that picks the "
"qemu binary at the same time as the handle is created."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6850
msgid "set-label"
msgstr "set-label"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6852
#, no-wrap
msgid ""
" set-label mountable label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6854 ../src/guestfs-actions.pod:11182
msgid "Set the filesystem label on C<mountable> to C<label>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6856 ../src/guestfs-actions.pod:11184
msgid ""
"Only some filesystem types support labels, and libguestfs supports setting "
"labels on only a subset of these."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:6861 ../src/guestfs-actions.pod:11189
msgid "ext2, ext3, ext4"
msgstr "ext2, ext3, ext4"

#. type: textblock
#: ../fish/guestfish-actions.pod:6863 ../src/guestfs-actions.pod:11191
msgid "Labels are limited to 16 bytes."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:6865 ../src/guestfs-actions.pod:11193
msgid "NTFS"
msgstr "NTFS"

#. type: textblock
#: ../fish/guestfish-actions.pod:6867 ../src/guestfs-actions.pod:11195
msgid "Labels are limited to 128 unicode characters."
msgstr "Мітки обмежено 128 символами unicode."

#. type: =item
#: ../fish/guestfish-actions.pod:6869 ../src/guestfs-actions.pod:11197
msgid "XFS"
msgstr "XFS"

#. type: textblock
#: ../fish/guestfish-actions.pod:6871 ../src/guestfs-actions.pod:11199
msgid ""
"The label is limited to 12 bytes.  The filesystem must not be mounted when "
"trying to set the label."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:6874 ../src/guestfs-actions.pod:11202
msgid "btrfs"
msgstr "btrfs"

#. type: textblock
#: ../fish/guestfish-actions.pod:6876 ../src/guestfs-actions.pod:11204
msgid ""
"The label is limited to 256 bytes and some characters are not allowed.  "
"Setting the label on a btrfs subvolume will set the label on its parent "
"filesystem.  The filesystem must not be mounted when trying to set the label."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6883
msgid "To read the label on a filesystem, call L</vfs-label>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6885
msgid "set-libvirt-requested-credential"
msgstr "set-libvirt-requested-credential"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6887
#, no-wrap
msgid ""
" set-libvirt-requested-credential index cred\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6889 ../src/guestfs-actions.pod:11225
msgid ""
"After requesting the C<index>'th credential from the user, call this "
"function to pass the answer back to libvirt."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6894
msgid "set-libvirt-supported-credentials"
msgstr "set-libvirt-supported-credentials"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6896
#, no-wrap
msgid ""
" set-libvirt-supported-credentials 'creds ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6898 ../src/guestfs-actions.pod:11240
msgid ""
"Call this function before setting an event handler for "
"C<GUESTFS_EVENT_LIBVIRT_AUTH>, to supply the list of credential types that "
"the program knows how to process."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6902 ../src/guestfs-actions.pod:11244
msgid ""
"The C<creds> list must be a non-empty list of strings.  Possible strings are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:6909 ../src/guestfs-actions.pod:11251
msgid "C<authname>"
msgstr "C<authname>"

#. type: =item
#: ../fish/guestfish-actions.pod:6911 ../src/guestfs-actions.pod:11253
msgid "C<language>"
msgstr "C<language>"

#. type: =item
#: ../fish/guestfish-actions.pod:6913 ../src/guestfs-actions.pod:11255
msgid "C<cnonce>"
msgstr "C<cnonce>"

#. type: =item
#: ../fish/guestfish-actions.pod:6915 ../src/guestfs-actions.pod:11257
msgid "C<passphrase>"
msgstr "C<passphrase>"

#. type: =item
#: ../fish/guestfish-actions.pod:6917 ../src/guestfs-actions.pod:11259
msgid "C<echoprompt>"
msgstr "C<echoprompt>"

#. type: =item
#: ../fish/guestfish-actions.pod:6919 ../src/guestfs-actions.pod:11261
msgid "C<noechoprompt>"
msgstr "C<noechoprompt>"

#. type: =item
#: ../fish/guestfish-actions.pod:6921 ../src/guestfs-actions.pod:11263
msgid "C<realm>"
msgstr "C<realm>"

#. type: =item
#: ../fish/guestfish-actions.pod:6923 ../src/guestfs-actions.pod:11265
msgid "C<external>"
msgstr "C<external>"

#. type: textblock
#: ../fish/guestfish-actions.pod:6927 ../src/guestfs-actions.pod:11269
msgid "See libvirt documentation for the meaning of these credential types."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6931
msgid "set-memsize"
msgstr "set-memsize"

#. type: =head2
#: ../fish/guestfish-actions.pod:6933
msgid "memsize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6935
#, no-wrap
msgid ""
" set-memsize memsize\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6937
msgid ""
"This sets the memory size in megabytes allocated to the hypervisor.  This "
"only has any effect if called before L</launch>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6941 ../src/guestfs-actions.pod:11287
msgid ""
"You can also change this by setting the environment variable "
"C<LIBGUESTFS_MEMSIZE> before the handle is created."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6948
msgid "set-network"
msgstr "set-network"

#. type: =head2
#: ../fish/guestfish-actions.pod:6950
msgid "network"
msgstr "network"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6952
#, no-wrap
msgid ""
" set-network true|false\n"
"\n"
msgstr ""
" set-network true|false\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6954 ../src/guestfs-actions.pod:11304
msgid ""
"If C<network> is true, then the network is enabled in the libguestfs "
"appliance.  The default is false."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6957 ../src/guestfs-actions.pod:11307
msgid ""
"This affects whether commands are able to access the network (see "
"L<guestfs(3)/RUNNING COMMANDS>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6960
msgid ""
"You must call this before calling L</launch>, otherwise it has no effect."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6963
msgid "set-path"
msgstr "set-path"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6967
#, no-wrap
msgid ""
" set-path searchpath\n"
"\n"
msgstr ""
" set-path шлях_для_пошуку\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6969 ../src/guestfs-actions.pod:11323
msgid "Set the path that libguestfs searches for kernel and initrd.img."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6971 ../src/guestfs-actions.pod:11325
msgid ""
"The default is C<$libdir/guestfs> unless overridden by setting "
"C<LIBGUESTFS_PATH> environment variable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6974 ../src/guestfs-actions.pod:11328
msgid "Setting C<path> to C<NULL> restores the default path."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6976
msgid "set-pgroup"
msgstr "set-pgroup"

#. type: =head2
#: ../fish/guestfish-actions.pod:6978
msgid "pgroup"
msgstr "pgroup"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6980
#, no-wrap
msgid ""
" set-pgroup true|false\n"
"\n"
msgstr ""
" set-pgroup true|false\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6982 ../src/guestfs-actions.pod:11340
msgid ""
"If C<pgroup> is true, child processes are placed into their own process "
"group."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6985 ../src/guestfs-actions.pod:11343
msgid ""
"The practical upshot of this is that signals like C<SIGINT> (from users "
"pressing C<^C>) won't be received by the child process."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6988
msgid ""
"The default for this flag is false, because usually you want C<^C> to kill "
"the subprocess.  Guestfish sets this flag to true when used interactively, "
"so that C<^C> can cancel long-running commands gracefully (see L</user-"
"cancel>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6993
msgid "set-program"
msgstr "set-program"

#. type: =head2
#: ../fish/guestfish-actions.pod:6995
msgid "program"
msgstr "програма"

#. type: verbatim
#: ../fish/guestfish-actions.pod:6997
#, no-wrap
msgid ""
" set-program program\n"
"\n"
msgstr ""
" set-program програма\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:6999 ../src/guestfs-actions.pod:11361
msgid ""
"Set the program name.  This is an informative string which the main program "
"may optionally set in the handle."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7002 ../src/guestfs-actions.pod:11364
msgid ""
"When the handle is created, the program name in the handle is set to the "
"basename from C<argv[0]>.  If that was not possible, it is set to the empty "
"string (but never C<NULL>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7006
msgid "set-qemu"
msgstr "set-qemu"

#. type: =head2
#: ../fish/guestfish-actions.pod:7008
msgid "qemu"
msgstr "qemu"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7010
#, no-wrap
msgid ""
" set-qemu hv\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7012 ../src/guestfs-actions.pod:11385
msgid "Set the hypervisor binary (usually qemu) that we will use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7020 ../src/guestfs-actions.pod:11393
msgid "Setting C<hv> to C<NULL> restores the default qemu binary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7030
msgid ""
"I<This function is deprecated.> In new code, use the L</set-hv> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7037
msgid "set-recovery-proc"
msgstr "set-recovery-proc"

#. type: =head2
#: ../fish/guestfish-actions.pod:7039
msgid "recovery-proc"
msgstr "recovery-proc"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7041
#, no-wrap
msgid ""
" set-recovery-proc true|false\n"
"\n"
msgstr ""
" set-recovery-proc true|false\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7043
msgid ""
"If this is called with the parameter C<false> then L</launch> does not "
"create a recovery process.  The purpose of the recovery process is to stop "
"runaway hypervisor processes in the case where the main program aborts "
"abruptly."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7048
msgid ""
"This only has any effect if called before L</launch>, and the default is "
"true."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7051 ../src/guestfs-actions.pod:11421
msgid ""
"About the only time when you would want to disable this is if the main "
"process will fork itself into the background (\"daemonize\" itself).  In "
"this case the recovery process thinks that the main program has disappeared "
"and so kills the hypervisor, which is not very helpful."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7057
msgid "set-selinux"
msgstr "set-selinux"

#. type: =head2
#: ../fish/guestfish-actions.pod:7059
msgid "selinux"
msgstr "selinux"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7061
#, no-wrap
msgid ""
" set-selinux true|false\n"
"\n"
msgstr ""
" set-selinux true|false\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7063 ../src/guestfs-actions.pod:11437
msgid ""
"This sets the selinux flag that is passed to the appliance at boot time.  "
"The default is C<selinux=0> (disabled)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7066 ../src/guestfs-actions.pod:11440
msgid ""
"Note that if SELinux is enabled, it is always in Permissive mode "
"(C<enforcing=0>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7072
msgid "set-smp"
msgstr "set-smp"

#. type: =head2
#: ../fish/guestfish-actions.pod:7074
msgid "smp"
msgstr "smp"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7076
#, no-wrap
msgid ""
" set-smp smp\n"
"\n"
msgstr ""
" set-smp smp\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7078 ../src/guestfs-actions.pod:11456
msgid ""
"Change the number of virtual CPUs assigned to the appliance.  The default is "
"C<1>.  Increasing this may improve performance, though often it has no "
"effect."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7082
msgid "This function must be called before L</launch>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7084
msgid "set-tmpdir"
msgstr "set-tmpdir"

#. type: =head2
#: ../fish/guestfish-actions.pod:7086
msgid "tmpdir"
msgstr "тимчасовий_каталог"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7088
#, no-wrap
msgid ""
" set-tmpdir tmpdir\n"
"\n"
msgstr ""
" set-tmpdir тимчасовий_каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7090 ../src/guestfs-actions.pod:11472
msgid "Set the directory used by the handle to store temporary files."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7092 ../src/guestfs-actions.pod:11474
msgid ""
"The environment variables C<LIBGUESTFS_TMPDIR> and C<TMPDIR> control the "
"default value: If C<LIBGUESTFS_TMPDIR> is set, then that is the default.  "
"Else if C<TMPDIR> is set, then that is the default.  Else C</tmp> is the "
"default."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7097
msgid "set-trace"
msgstr "set-trace"

#. type: =head2
#: ../fish/guestfish-actions.pod:7099
msgid "trace"
msgstr "trace"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7101
#, no-wrap
msgid ""
" set-trace true|false\n"
"\n"
msgstr ""
" set-trace true|false\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7103 ../src/guestfs-actions.pod:11489
msgid ""
"If the command trace flag is set to 1, then libguestfs calls, parameters and "
"return values are traced."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7106 ../src/guestfs-actions.pod:11492
msgid ""
"If you want to trace C API calls into libguestfs (and other libraries) then "
"possibly a better way is to use the external ltrace(1) command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7110 ../src/guestfs-actions.pod:11496
msgid ""
"Command traces are disabled unless the environment variable "
"C<LIBGUESTFS_TRACE> is defined and set to C<1>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7113
msgid ""
"Trace messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see L</set-event-callback>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7117
msgid "set-uuid"
msgstr "set-uuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7119
#, no-wrap
msgid ""
" set-uuid device uuid\n"
"\n"
msgstr ""
" set-uuid пристрій uuid\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7121 ../src/guestfs-actions.pod:11514
msgid "Set the filesystem UUID on C<device> to C<uuid>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7123 ../src/guestfs-actions.pod:11516
msgid "Only some filesystem types support setting UUIDs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7125
msgid "To read the UUID on a filesystem, call L</vfs-uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7127
msgid "set-verbose"
msgstr "set-verbose"

#. type: =head2
#: ../fish/guestfish-actions.pod:7129
msgid "verbose"
msgstr "verbose"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7131
#, no-wrap
msgid ""
" set-verbose true|false\n"
"\n"
msgstr ""
" set-verbose true|false\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7133 ../src/guestfs-actions.pod:11530
msgid "If C<verbose> is true, this turns on verbose messages."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7135 ../src/guestfs-actions.pod:11532
msgid ""
"Verbose messages are disabled unless the environment variable "
"C<LIBGUESTFS_DEBUG> is defined and set to C<1>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7138
msgid ""
"Verbose messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see L</set-event-callback>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7142
msgid "setcon"
msgstr "setcon"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7144
#, no-wrap
msgid ""
" setcon context\n"
"\n"
msgstr ""
" setcon контекст\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7146 ../src/guestfs-actions.pod:11549
msgid ""
"This sets the SELinux security context of the daemon to the string "
"C<context>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7149 ../src/guestfs-actions.pod:11552
msgid "See the documentation about SELINUX in L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7151
msgid "setxattr"
msgstr "setxattr"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7153
#, no-wrap
msgid ""
" setxattr xattr val vallen path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7155 ../src/guestfs-actions.pod:11567
msgid ""
"This call sets the extended attribute named C<xattr> of the file C<path> to "
"the value C<val> (of length C<vallen>).  The value is arbitrary 8 bit data."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7159
msgid "See also: L</lsetxattr>, L<attr(5)>."
msgstr "Див. також L</lsetxattr>, L<attr(5)>."

#. type: =head2
#: ../fish/guestfish-actions.pod:7161
msgid "sfdisk"
msgstr "sfdisk"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7163
#, no-wrap
msgid ""
" sfdisk device cyls heads sectors 'lines ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7165 ../src/guestfs-actions.pod:11594
msgid ""
"This is a direct interface to the L<sfdisk(8)> program for creating "
"partitions on block devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7168 ../src/guestfs-actions.pod:11597
msgid "C<device> should be a block device, for example C</dev/sda>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7170 ../src/guestfs-actions.pod:11599
msgid ""
"C<cyls>, C<heads> and C<sectors> are the number of cylinders, heads and "
"sectors on the device, which are passed directly to sfdisk as the I<-C>, I<-"
"H> and I<-S> parameters.  If you pass C<0> for any of these, then the "
"corresponding parameter is omitted.  Usually for 'large' disks, you can just "
"pass C<0> for these, but for small (floppy-sized) disks, sfdisk (or rather, "
"the kernel) cannot work out the right geometry and you will need to tell it."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7178 ../src/guestfs-actions.pod:11607
msgid ""
"C<lines> is a list of lines that we feed to C<sfdisk>.  For more information "
"refer to the L<sfdisk(8)> manpage."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7181 ../src/guestfs-actions.pod:11610
msgid ""
"To create a single partition occupying the whole disk, you would pass "
"C<lines> as a single element list, when the single element being the string "
"C<,> (comma)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7185
msgid "See also: L</sfdisk-l>, L</sfdisk-N>, L</part-init>"
msgstr "Див. також L</sfdisk-l>, L</sfdisk-N>, L</part-init>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7188 ../fish/guestfish-actions.pod:7208
#: ../fish/guestfish-actions.pod:7227
msgid ""
"I<This function is deprecated.> In new code, use the L</part-add> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7195
msgid "sfdiskM"
msgstr "sfdiskM"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7197
#, no-wrap
msgid ""
" sfdiskM device 'lines ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7199
msgid ""
"This is a simplified interface to the L</sfdisk> command, where partition "
"sizes are specified in megabytes only (rounded to the nearest cylinder) and "
"you don't need to specify the cyls, heads and sectors parameters which were "
"rarely if ever used anyway."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7205
msgid "See also: L</sfdisk>, the L<sfdisk(8)> manpage and L</part-disk>"
msgstr ""
"Див також L</sfdisk>, сторінку довідки (man) L<sfdisk(8)> та L</part-disk>"

#. type: =head2
#: ../fish/guestfish-actions.pod:7215
msgid "sfdisk-N"
msgstr "sfdisk-N"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7217
#, no-wrap
msgid ""
" sfdisk-N device partnum cyls heads sectors line\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7219 ../src/guestfs-actions.pod:11666
msgid ""
"This runs L<sfdisk(8)> option to modify just the single partition C<n> "
"(note: C<n> counts from 1)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7222
msgid ""
"For other parameters, see L</sfdisk>.  You should usually pass C<0> for the "
"cyls/heads/sectors parameters."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7225
msgid "See also: L</part-add>"
msgstr "Див. також L</part-add>"

#. type: =head2
#: ../fish/guestfish-actions.pod:7234
msgid "sfdisk-disk-geometry"
msgstr "sfdisk-disk-geometry"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7236
#, no-wrap
msgid ""
" sfdisk-disk-geometry device\n"
"\n"
msgstr ""
" sfdisk-disk-geometry пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7238
msgid ""
"This displays the disk geometry of C<device> read from the partition table.  "
"Especially in the case where the underlying block device has been resized, "
"this can be different from the kernel's idea of the geometry (see L</sfdisk-"
"kernel-geometry>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7243 ../fish/guestfish-actions.pod:7252
#: ../src/guestfs-actions.pod:11689 ../src/guestfs-actions.pod:11705
msgid "The result is in human-readable format, and not designed to be parsed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7246
msgid "sfdisk-kernel-geometry"
msgstr "sfdisk-kernel-geometry"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7248
#, no-wrap
msgid ""
" sfdisk-kernel-geometry device\n"
"\n"
msgstr ""
" sfdisk-kernel-geometry пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7250 ../src/guestfs-actions.pod:11703
msgid "This displays the kernel's idea of the geometry of C<device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7255
msgid "sfdisk-l"
msgstr "sfdisk-l"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7257
#, no-wrap
msgid ""
" sfdisk-l device\n"
"\n"
msgstr ""
" sfdisk-l пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7259 ../src/guestfs-actions.pod:11726
msgid ""
"This displays the partition table on C<device>, in the human-readable output "
"of the L<sfdisk(8)> command.  It is not intended to be parsed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7263
msgid "See also: L</part-list>"
msgstr "Див. також L</part-list>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7265
msgid ""
"I<This function is deprecated.> In new code, use the L</part-list> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7272
msgid "sh"
msgstr "sh"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7274
#, no-wrap
msgid ""
" sh command\n"
"\n"
msgstr ""
" sh команда\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7276 ../src/guestfs-actions.pod:11743
msgid ""
"This call runs a command from the guest filesystem via the guest's C</bin/"
"sh>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7279
msgid "This is like L</command>, but passes the command to:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:7281 ../src/guestfs-actions.pod:11748
#, no-wrap
msgid ""
" /bin/sh -c \"command\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7283 ../src/guestfs-actions.pod:11750
msgid ""
"Depending on the guest's shell, this usually results in wildcards being "
"expanded, shell expressions being interpolated and so on."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7287
msgid "All the provisos about L</command> apply to this call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7289
msgid "sh-lines"
msgstr "sh-lines"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7291
#, no-wrap
msgid ""
" sh-lines command\n"
"\n"
msgstr ""
" sh-lines команда\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7293
msgid "This is the same as L</sh>, but splits the result into a list of lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7296
msgid "See also: L</command-lines>"
msgstr "Див. також L</command-lines>"

#. type: =head2
#: ../fish/guestfish-actions.pod:7298
msgid "shutdown"
msgstr "shutdown"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7300
#, no-wrap
msgid ""
" shutdown\n"
"\n"
msgstr ""
" shutdown\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7302
msgid ""
"This is the opposite of L</launch>.  It performs an orderly shutdown of the "
"backend process(es).  If the autosync flag is set (which is the default) "
"then the disk image is synchronized."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7306 ../src/guestfs-actions.pod:11787
msgid ""
"If the subprocess exits with an error then this function will return an "
"error, which should I<not> be ignored (it may indicate that the disk image "
"could not be written out properly)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7310 ../src/guestfs-actions.pod:11791
msgid "It is safe to call this multiple times.  Extra calls are ignored."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7312
msgid ""
"This call does I<not> close or free up the handle.  You still need to call "
"L</close> afterwards."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7315
msgid ""
"L</close> will call this if you don't do it explicitly, but note that any "
"errors are ignored in that case."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7318
msgid "sleep"
msgstr "sleep"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7320
#, no-wrap
msgid ""
" sleep secs\n"
"\n"
msgstr ""
" sleep час_у_секундах\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7322 ../src/guestfs-actions.pod:11809
msgid "Sleep for C<secs> seconds."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7324
msgid "stat"
msgstr "stat"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7326
#, no-wrap
msgid ""
" stat path\n"
"\n"
msgstr ""
" stat шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7330 ../fish/guestfish-actions.pod:7345
#: ../src/guestfs-actions.pod:11830 ../src/guestfs-actions.pod:11846
msgid "This is the same as the C<stat(2)> system call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7332
msgid ""
"I<This function is deprecated.> In new code, use the L</statns> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7339
msgid "statns"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:7341
#, no-wrap
msgid ""
" statns path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7347
msgid "statvfs"
msgstr "statvfs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7349
#, no-wrap
msgid ""
" statvfs path\n"
"\n"
msgstr ""
" statvfs шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7351 ../src/guestfs-actions.pod:11860
msgid ""
"Returns file system statistics for any mounted file system.  C<path> should "
"be a file or directory in the mounted file system (typically it is the mount "
"point itself, but it doesn't need to be)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7355 ../src/guestfs-actions.pod:11864
msgid "This is the same as the C<statvfs(2)> system call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7357
msgid "strings"
msgstr "strings"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7359
#, no-wrap
msgid ""
" strings path\n"
"\n"
msgstr ""
" strings шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7361 ../src/guestfs-actions.pod:11878
msgid ""
"This runs the L<strings(1)> command on a file and returns the list of "
"printable strings found."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7367
msgid "strings-e"
msgstr "strings-e"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7369
#, no-wrap
msgid ""
" strings-e encoding path\n"
"\n"
msgstr ""
" strings-e кодування шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7371
msgid ""
"This is like the L</strings> command, but allows you to specify the encoding "
"of strings that are looked for in the source file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7375 ../src/guestfs-actions.pod:11901
msgid "Allowed encodings are:"
msgstr "Можливими кодуваннями є:"

#. type: =item
#: ../fish/guestfish-actions.pod:7379 ../src/guestfs-actions.pod:11905
msgid "s"
msgstr "s"

#. type: textblock
#: ../fish/guestfish-actions.pod:7381
msgid ""
"Single 7-bit-byte characters like ASCII and the ASCII-compatible parts of "
"ISO-8859-X (this is what L</strings> uses)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7384 ../src/guestfs-actions.pod:11910
msgid "S"
msgstr "S"

#. type: textblock
#: ../fish/guestfish-actions.pod:7386 ../src/guestfs-actions.pod:11912
msgid "Single 8-bit-byte characters."
msgstr "Окремі 8-бітові-байтові символи."

#. type: =item
#: ../fish/guestfish-actions.pod:7388 ../src/guestfs-actions.pod:11914
msgid "b"
msgstr "b"

#. type: textblock
#: ../fish/guestfish-actions.pod:7390 ../src/guestfs-actions.pod:11916
msgid "16-bit big endian strings such as those encoded in UTF-16BE or UCS-2BE."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7393 ../src/guestfs-actions.pod:11919
msgid "l (lower case letter L)"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7395 ../src/guestfs-actions.pod:11921
msgid ""
"16-bit little endian such as UTF-16LE and UCS-2LE.  This is useful for "
"examining binaries in Windows guests."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7398 ../src/guestfs-actions.pod:11924
msgid "B"
msgstr "B"

#. type: textblock
#: ../fish/guestfish-actions.pod:7400 ../src/guestfs-actions.pod:11926
msgid "32-bit big endian such as UCS-4BE."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7402 ../src/guestfs-actions.pod:11928
msgid "L"
msgstr "L"

#. type: textblock
#: ../fish/guestfish-actions.pod:7404 ../src/guestfs-actions.pod:11930
msgid "32-bit little endian such as UCS-4LE."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7408 ../src/guestfs-actions.pod:11934
msgid "The returned strings are transcoded to UTF-8."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7413
msgid "swapoff-device"
msgstr "swapoff-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7415
#, no-wrap
msgid ""
" swapoff-device device\n"
"\n"
msgstr ""
" swapoff-device пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7417
msgid ""
"This command disables the libguestfs appliance swap device or partition "
"named C<device>.  See L</swapon-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7421
msgid "swapoff-file"
msgstr "swapoff-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7423
#, no-wrap
msgid ""
" swapoff-file file\n"
"\n"
msgstr ""
" swapoff-file файл\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7425 ../src/guestfs-actions.pod:11965
msgid "This command disables the libguestfs appliance swap on file."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7427
msgid "swapoff-label"
msgstr "swapoff-label"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7429
#, no-wrap
msgid ""
" swapoff-label label\n"
"\n"
msgstr ""
" swapoff-label мітка\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7431 ../src/guestfs-actions.pod:11977
msgid ""
"This command disables the libguestfs appliance swap on labeled swap "
"partition."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7434
msgid "swapoff-uuid"
msgstr "swapoff-uuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7436
#, no-wrap
msgid ""
" swapoff-uuid uuid\n"
"\n"
msgstr ""
" swapoff-uuid uuid\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7438 ../src/guestfs-actions.pod:11990
msgid ""
"This command disables the libguestfs appliance swap partition with the given "
"UUID."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7441
msgid "swapon-device"
msgstr "swapon-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7443
#, no-wrap
msgid ""
" swapon-device device\n"
"\n"
msgstr ""
" swapon-device пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7445
msgid ""
"This command enables the libguestfs appliance to use the swap device or "
"partition named C<device>.  The increased memory is made available for all "
"commands, for example those run using L</command> or L</sh>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7450 ../src/guestfs-actions.pod:12008
msgid ""
"Note that you should not swap to existing guest swap partitions unless you "
"know what you are doing.  They may contain hibernation information, or other "
"information that the guest doesn't want you to trash.  You also risk leaking "
"information about the host to the guest this way.  Instead, attach a new "
"host device to the guest and swap on that."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7457
msgid "swapon-file"
msgstr "swapon-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7459
#, no-wrap
msgid ""
" swapon-file file\n"
"\n"
msgstr ""
" swapon-file файл\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7461
msgid ""
"This command enables swap to a file.  See L</swapon-device> for other notes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7464
msgid "swapon-label"
msgstr "swapon-label"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7466
#, no-wrap
msgid ""
" swapon-label label\n"
"\n"
msgstr ""
" swapon-label мітка\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7468
msgid ""
"This command enables swap to a labeled swap partition.  See L</swapon-"
"device> for other notes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7471
msgid "swapon-uuid"
msgstr "swapon-uuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7473
#, no-wrap
msgid ""
" swapon-uuid uuid\n"
"\n"
msgstr ""
" swapon-uuid uuid\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7475
msgid ""
"This command enables swap to a swap partition with the given UUID.  See L</"
"swapon-device> for other notes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7478
msgid "sync"
msgstr "sync"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7480
#, no-wrap
msgid ""
" sync\n"
"\n"
msgstr ""
" sync\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7482 ../src/guestfs-actions.pod:12063
msgid ""
"This syncs the disk, so that any writes are flushed through to the "
"underlying disk image."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7485 ../src/guestfs-actions.pod:12066
msgid ""
"You should always call this if you have modified a disk image, before "
"closing the handle."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7488
msgid "syslinux"
msgstr "syslinux"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7490
#, no-wrap
msgid ""
" syslinux device [directory:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7492 ../src/guestfs-actions.pod:12087
msgid "Install the SYSLINUX bootloader on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7494
msgid ""
"The device parameter must be either a whole disk formatted as a FAT "
"filesystem, or a partition formatted as a FAT filesystem.  In the latter "
"case, the partition should be marked as \"active\" (L</part-set-bootable>) "
"and a Master Boot Record must be installed (eg. using L</pwrite-device>) on "
"the first sector of the whole disk.  The SYSLINUX package comes with some "
"suitable Master Boot Records.  See the L<syslinux(1)> man page for further "
"information."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7507 ../src/guestfs-actions.pod:12102
msgid "C<directory>"
msgstr "C<directory>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7509 ../src/guestfs-actions.pod:12104
msgid ""
"Install SYSLINUX in the named subdirectory, instead of in the root directory "
"of the FAT filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7514 ../src/guestfs-actions.pod:12109
msgid ""
"Additional configuration can be supplied to SYSLINUX by placing a file "
"called C<syslinux.cfg> on the FAT filesystem, either in the root directory, "
"or under C<directory> if that optional argument is being used.  For further "
"information about the contents of this file, see L<syslinux(1)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7520
msgid "See also L</extlinux>."
msgstr "Див. також L</extlinux>."

#. type: =head2
#: ../fish/guestfish-actions.pod:7524
msgid "tail"
msgstr "tail"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7526
#, no-wrap
msgid ""
" tail path\n"
"\n"
msgstr ""
" tail шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7528 ../src/guestfs-actions.pod:12149
msgid ""
"This command returns up to the last 10 lines of a file as a list of strings."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7534
msgid "tail-n"
msgstr "tail-n"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7536
#, no-wrap
msgid ""
" tail-n nrlines path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7538 ../src/guestfs-actions.pod:12168
msgid ""
"If the parameter C<nrlines> is a positive number, this returns the last "
"C<nrlines> lines of the file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7541 ../src/guestfs-actions.pod:12171
msgid ""
"If the parameter C<nrlines> is a negative number, this returns lines from "
"the file C<path>, starting with the C<-nrlines>th line."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7549
msgid "tar-in"
msgstr "tar-in"

#. type: =head2
#: ../fish/guestfish-actions.pod:7551
msgid "tar-in-opts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:7553
#, no-wrap
msgid ""
" tar-in (tarfile|-) directory [compress:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7555 ../src/guestfs-actions.pod:12214
msgid ""
"This command uploads and unpacks local file C<tarfile> into C<directory>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7557 ../src/guestfs-actions.pod:12216
msgid ""
"The optional C<compress> flag controls compression.  If not given, then the "
"input should be an uncompressed tar file.  Otherwise one of the following "
"strings may be given to select the compression type of the input file: "
"C<compress>, C<gzip>, C<bzip2>, C<xz>, C<lzop>.  (Note that not all builds "
"of libguestfs will support all of these compression types)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7568
msgid "tar-out"
msgstr "tar-out"

#. type: =head2
#: ../fish/guestfish-actions.pod:7570
msgid "tar-out-opts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:7572
#, no-wrap
msgid ""
" tar-out directory (tarfile|-) [compress:..] [numericowner:true|false] [excludes:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7574 ../src/guestfs-actions.pod:12282
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<tarfile>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7577 ../src/guestfs-actions.pod:12285
msgid ""
"The optional C<compress> flag controls compression.  If not given, then the "
"output will be an uncompressed tar file.  Otherwise one of the following "
"strings may be given to select the compression type of the output file: "
"C<compress>, C<gzip>, C<bzip2>, C<xz>, C<lzop>.  (Note that not all builds "
"of libguestfs will support all of these compression types)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7584 ../src/guestfs-actions.pod:12292
msgid "The other optional arguments are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7588 ../src/guestfs-actions.pod:12296
msgid "C<excludes>"
msgstr "C<excludes>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7590 ../src/guestfs-actions.pod:12298
msgid ""
"A list of wildcards.  Files are excluded if they match any of the wildcards."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7593 ../src/guestfs-actions.pod:12301
msgid "C<numericowner>"
msgstr "C<numericowner>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7595 ../src/guestfs-actions.pod:12303
msgid ""
"If set to true, the output tar file will contain UID/GID numbers instead of "
"user/group names."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7604
msgid "tgz-in"
msgstr "tgz-in"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7606
#, no-wrap
msgid ""
" tgz-in (tarball|-) directory\n"
"\n"
msgstr ""
" tgz-in (архів tar|-) каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7608 ../src/guestfs-actions.pod:12350
msgid ""
"This command uploads and unpacks local file C<tarball> (a I<gzip compressed> "
"tar file) into C<directory>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7613 ../fish/guestfish-actions.pod:7767
msgid ""
"I<This function is deprecated.> In new code, use the L</tar-in> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7620
msgid "tgz-out"
msgstr "tgz-out"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7622
#, no-wrap
msgid ""
" tgz-out directory (tarball|-)\n"
"\n"
msgstr ""
" tgz-out каталог (архів tar|-)\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7624 ../src/guestfs-actions.pod:12371
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<tarball>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7629 ../fish/guestfish-actions.pod:7783
msgid ""
"I<This function is deprecated.> In new code, use the L</tar-out> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7636
msgid "touch"
msgstr "touch"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7638
#, no-wrap
msgid ""
" touch path\n"
"\n"
msgstr ""
" touch шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7640 ../src/guestfs-actions.pod:12384
msgid ""
"Touch acts like the L<touch(1)> command.  It can be used to update the "
"timestamps on a file, or, if the file does not exist, to create a new zero-"
"length file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7644 ../src/guestfs-actions.pod:12388
msgid ""
"This command only works on regular files, and will fail on other file types "
"such as directories, symbolic links, block special etc."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7647
msgid "truncate"
msgstr "truncate"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7649
#, no-wrap
msgid ""
" truncate path\n"
"\n"
msgstr ""
" truncate шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7651 ../src/guestfs-actions.pod:12401
msgid ""
"This command truncates C<path> to a zero-length file.  The file must exist "
"already."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7654
msgid "truncate-size"
msgstr "truncate-size"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7656
#, no-wrap
msgid ""
" truncate-size path size\n"
"\n"
msgstr ""
" truncate-size шлях розмір\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7658 ../src/guestfs-actions.pod:12415
msgid ""
"This command truncates C<path> to size C<size> bytes.  The file must exist "
"already."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7661
msgid ""
"If the current file size is less than C<size> then the file is extended to "
"the required size with zero bytes.  This creates a sparse file (ie. disk "
"blocks are not allocated for the file until you write to it).  To create a "
"non-sparse file of zeroes, use L</fallocate64> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7667
msgid "tune2fs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:7669
#, no-wrap
msgid ""
" tune2fs device [force:true|false] [maxmountcount:N] [mountcount:N] [errorbehavior:..] [group:N] [intervalbetweenchecks:N] [reservedblockspercentage:N] [lastmounteddirectory:..] [reservedblockscount:N] [user:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7671 ../src/guestfs-actions.pod:12451
msgid ""
"This call allows you to adjust various filesystem parameters of an ext2/ext3/"
"ext4 filesystem called C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7680 ../src/guestfs-actions.pod:12460
msgid ""
"Force tune2fs to complete the operation even in the face of errors.  This is "
"the same as the tune2fs C<-f> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7683 ../src/guestfs-actions.pod:12463
msgid "C<maxmountcount>"
msgstr "C<maxmountcount>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7685 ../src/guestfs-actions.pod:12465
msgid ""
"Set the number of mounts after which the filesystem is checked by "
"L<e2fsck(8)>.  If this is C<0> then the number of mounts is disregarded.  "
"This is the same as the tune2fs C<-c> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7689 ../src/guestfs-actions.pod:12469
msgid "C<mountcount>"
msgstr "C<mountcount>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7691 ../src/guestfs-actions.pod:12471
msgid ""
"Set the number of times the filesystem has been mounted.  This is the same "
"as the tune2fs C<-C> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7694 ../src/guestfs-actions.pod:12474
msgid "C<errorbehavior>"
msgstr "C<errorbehavior>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7696 ../src/guestfs-actions.pod:12476
msgid ""
"Change the behavior of the kernel code when errors are detected.  Possible "
"values currently are: C<continue>, C<remount-ro>, C<panic>.  In practice "
"these options don't really make any difference, particularly for write "
"errors."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7701 ../src/guestfs-actions.pod:12481
msgid "This is the same as the tune2fs C<-e> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7703 ../src/guestfs-actions.pod:12483
msgid "C<group>"
msgstr "C<group>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7705 ../src/guestfs-actions.pod:12485
msgid ""
"Set the group which can use reserved filesystem blocks.  This is the same as "
"the tune2fs C<-g> option except that it can only be specified as a number."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7709 ../src/guestfs-actions.pod:12489
msgid "C<intervalbetweenchecks>"
msgstr "C<intervalbetweenchecks>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7711 ../src/guestfs-actions.pod:12491
msgid ""
"Adjust the maximal time between two filesystem checks (in seconds).  If the "
"option is passed as C<0> then time-dependent checking is disabled."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7715 ../src/guestfs-actions.pod:12495
msgid "This is the same as the tune2fs C<-i> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7717 ../src/guestfs-actions.pod:12497
msgid "C<reservedblockspercentage>"
msgstr "C<reservedblockspercentage>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7719 ../src/guestfs-actions.pod:12499
msgid ""
"Set the percentage of the filesystem which may only be allocated by "
"privileged processes.  This is the same as the tune2fs C<-m> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7723 ../src/guestfs-actions.pod:12503
msgid "C<lastmounteddirectory>"
msgstr "C<lastmounteddirectory>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7725 ../src/guestfs-actions.pod:12505
msgid ""
"Set the last mounted directory.  This is the same as the tune2fs C<-M> "
"option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7728 ../src/guestfs-actions.pod:12508
msgid ""
"C<reservedblockscount> Set the number of reserved filesystem blocks.  This "
"is the same as the tune2fs C<-r> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:7732 ../src/guestfs-actions.pod:12512
msgid "C<user>"
msgstr "C<user>"

#. type: textblock
#: ../fish/guestfish-actions.pod:7734 ../src/guestfs-actions.pod:12514
msgid ""
"Set the user who can use the reserved filesystem blocks.  This is the same "
"as the tune2fs C<-u> option except that it can only be specified as a number."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7740
msgid ""
"To get the current values of filesystem parameters, see L</tune2fs-l>.  For "
"precise details of how tune2fs works, see the L<tune2fs(8)> man page."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7746
msgid "tune2fs-l"
msgstr "tune2fs-l"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7748
#, no-wrap
msgid ""
" tune2fs-l device\n"
"\n"
msgstr ""
" tune2fs-l пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7750 ../src/guestfs-actions.pod:12556
msgid ""
"This returns the contents of the ext2, ext3 or ext4 filesystem superblock on "
"C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7753 ../src/guestfs-actions.pod:12559
msgid ""
"It is the same as running C<tune2fs -l device>.  See L<tune2fs(8)> manpage "
"for more details.  The list of fields returned isn't clearly defined, and "
"depends on both the version of C<tune2fs> that libguestfs was built against, "
"and the filesystem itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7758
msgid "txz-in"
msgstr "txz-in"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7760
#, no-wrap
msgid ""
" txz-in (tarball|-) directory\n"
"\n"
msgstr ""
" txz-in (архів tar|-) каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7762 ../src/guestfs-actions.pod:12586
msgid ""
"This command uploads and unpacks local file C<tarball> (an I<xz compressed> "
"tar file) into C<directory>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7774
msgid "txz-out"
msgstr "txz-out"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7776
#, no-wrap
msgid ""
" txz-out directory (tarball|-)\n"
"\n"
msgstr ""
" txz-out каталог (архів tar|-)\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7778 ../src/guestfs-actions.pod:12607
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<tarball> (as an xz compressed tar archive)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7790
msgid "umask"
msgstr "umask"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7792
#, no-wrap
msgid ""
" umask mask\n"
"\n"
msgstr ""
" umask маска\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7794 ../src/guestfs-actions.pod:12620
msgid ""
"This function sets the mask used for creating new files and device nodes to "
"C<mask & 0777>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7797 ../src/guestfs-actions.pod:12623
msgid ""
"Typical umask values would be C<022> which creates new files with "
"permissions like \"-rw-r--r--\" or \"-rwxr-xr-x\", and C<002> which creates "
"new files with permissions like \"-rw-rw-r--\" or \"-rwxrwxr-x\"."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7802 ../src/guestfs-actions.pod:12628
msgid ""
"The default umask is C<022>.  This is important because it means that "
"directories and device nodes will be created with C<0644> or C<0755> mode "
"even if you specify C<0777>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7806
msgid "See also L</get-umask>, L<umask(2)>, L</mknod>, L</mkdir>."
msgstr "Див. також L</get-umask>, L<umask(2)>, L</mknod>, L</mkdir>."

#. type: textblock
#: ../fish/guestfish-actions.pod:7809 ../src/guestfs-actions.pod:12635
msgid "This call returns the previous umask."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7811
msgid "umount"
msgstr "umount"

#. type: =head2
#: ../fish/guestfish-actions.pod:7813
msgid "unmount"
msgstr "unmount"

#. type: =head2
#: ../fish/guestfish-actions.pod:7815
msgid "umount-opts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:7817
#, no-wrap
msgid ""
" umount pathordevice [force:true|false] [lazyunmount:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7819 ../src/guestfs-actions.pod:12669
msgid ""
"This unmounts the given filesystem.  The filesystem may be specified either "
"by its mountpoint (path) or the device which contains the filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7825
msgid "umount-all"
msgstr "umount-all"

#. type: =head2
#: ../fish/guestfish-actions.pod:7827
msgid "unmount-all"
msgstr "unmount-all"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7829
#, no-wrap
msgid ""
" umount-all\n"
"\n"
msgstr ""
" umount-all\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7831 ../src/guestfs-actions.pod:12704
msgid "This unmounts all mounted filesystems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7833 ../src/guestfs-actions.pod:12706
msgid "Some internal mounts are not unmounted by this call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7835
msgid "umount-local"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:7837
#, no-wrap
msgid ""
" umount-local [retry:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7839 ../src/guestfs-actions.pod:12725
msgid ""
"If libguestfs is exporting the filesystem on a local mountpoint, then this "
"unmounts it."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7846
msgid "upload"
msgstr "upload"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7848
#, no-wrap
msgid ""
" upload (filename|-) remotefilename\n"
"\n"
msgstr ""
" upload (назва_файла|-) назва_віддаленого_файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7850 ../fish/guestfish-actions.pod:7863
#: ../src/guestfs-actions.pod:12761 ../src/guestfs-actions.pod:12785
msgid "Upload local file C<filename> to C<remotefilename> on the filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7855
msgid "See also L</download>."
msgstr "Див. також L</download>."

#. type: =head2
#: ../fish/guestfish-actions.pod:7859
msgid "upload-offset"
msgstr "upload-offset"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7861
#, no-wrap
msgid ""
" upload-offset (filename|-) remotefilename offset\n"
"\n"
msgstr ""
" upload-offset (назва_файла|-) назва_віддаленого_файла відступ\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7866 ../src/guestfs-actions.pod:12788
msgid ""
"C<remotefilename> is overwritten starting at the byte C<offset> specified.  "
"The intention is to overwrite parts of existing files or devices, although "
"if a non-existent file is specified then it is created with a \"hole\" "
"before C<offset>.  The size of the data written is implicit in the size of "
"the source C<filename>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7873
msgid ""
"Note that there is no limit on the amount of data that can be uploaded with "
"this call, unlike with L</pwrite>, and this call always writes the full "
"amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7878
msgid "See also L</upload>, L</pwrite>."
msgstr "Див. також L</upload>, L</pwrite>."

#. type: =head2
#: ../fish/guestfish-actions.pod:7882
msgid "user-cancel"
msgstr "user-cancel"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7884
#, no-wrap
msgid ""
" user-cancel\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7886 ../src/guestfs-actions.pod:12816
msgid "This function cancels the current upload or download operation."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7888 ../src/guestfs-actions.pod:12818
msgid ""
"Unlike most other libguestfs calls, this function is signal safe and thread "
"safe.  You can call it from a signal handler or from another thread, without "
"needing to do any locking."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7892 ../src/guestfs-actions.pod:12822
msgid ""
"The transfer that was in progress (if there is one) will stop shortly "
"afterwards, and will return an error.  The errno (see L</"
"guestfs_last_errno>) is set to C<EINTR>, so you can test for this to find "
"out if the operation was cancelled or failed because of another error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7898 ../src/guestfs-actions.pod:12828
msgid ""
"No cleanup is performed: for example, if a file was being uploaded then "
"after cancellation there may be a partially uploaded file.  It is the "
"caller's responsibility to clean up if necessary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7902
msgid "There are two common places that you might call L</user-cancel>:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7904 ../src/guestfs-actions.pod:12834
msgid ""
"In an interactive text-based program, you might call it from a C<SIGINT> "
"signal handler so that pressing C<^C> cancels the current operation.  (You "
"also need to call L</guestfs_set_pgroup> so that child processes don't "
"receive the C<^C> signal)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7909 ../src/guestfs-actions.pod:12839
msgid ""
"In a graphical program, when the main thread is displaying a progress bar "
"with a cancel button, wire up the cancel button to call this function."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7913
msgid "utimens"
msgstr "utimens"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7915
#, no-wrap
msgid ""
" utimens path atsecs atnsecs mtsecs mtnsecs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7917 ../src/guestfs-actions.pod:12857
msgid "This command sets the timestamps of a file with nanosecond precision."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7920 ../src/guestfs-actions.pod:12860
msgid ""
"C<atsecs, atnsecs> are the last access time (atime) in secs and nanoseconds "
"from the epoch."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7923 ../src/guestfs-actions.pod:12863
msgid ""
"C<mtsecs, mtnsecs> are the last modification time (mtime) in secs and "
"nanoseconds from the epoch."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7926 ../src/guestfs-actions.pod:12866
msgid ""
"If the C<*nsecs> field contains the special value C<-1> then the "
"corresponding timestamp is set to the current time.  (The C<*secs> field is "
"ignored in this case)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7930 ../src/guestfs-actions.pod:12870
msgid ""
"If the C<*nsecs> field contains the special value C<-2> then the "
"corresponding timestamp is left unchanged.  (The C<*secs> field is ignored "
"in this case)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7934
msgid "utsname"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:7936
#, no-wrap
msgid ""
" utsname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7938 ../src/guestfs-actions.pod:12883
msgid ""
"This returns the kernel version of the appliance, where this is available.  "
"This information is only useful for debugging.  Nothing in the returned "
"structure is defined by the API."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7942
msgid "version"
msgstr "version"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7944
#, no-wrap
msgid ""
" version\n"
"\n"
msgstr ""
" version\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:7946 ../src/guestfs-actions.pod:12898
msgid ""
"Return the libguestfs version number that the program is linked against."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7949 ../src/guestfs-actions.pod:12901
msgid ""
"Note that because of dynamic linking this is not necessarily the version of "
"libguestfs that you compiled against.  You can compile the program, and then "
"at runtime dynamically link against a completely different C<libguestfs.so> "
"library."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7954 ../src/guestfs-actions.pod:12906
msgid ""
"This call was added in version C<1.0.58>.  In previous versions of "
"libguestfs there was no way to get the version number.  From C code you can "
"use dynamic linker functions to find out if this symbol exists (if it "
"doesn't, then it's an earlier version)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7960 ../src/guestfs-actions.pod:12912
msgid ""
"The call returns a structure with four elements.  The first three (C<major>, "
"C<minor> and C<release>) are numbers and correspond to the usual version "
"triplet.  The fourth element (C<extra>) is a string and is normally empty, "
"but may be used for distro-specific information."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7966 ../src/guestfs-actions.pod:12918
msgid ""
"To construct the original version string: C<$major.$minor.$release$extra>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7969 ../src/guestfs-actions.pod:12921
msgid "See also: L<guestfs(3)/LIBGUESTFS VERSION NUMBERS>."
msgstr "Див також: L<guestfs(3)/LIBGUESTFS VERSION NUMBERS>."

#. type: textblock
#: ../fish/guestfish-actions.pod:7971
msgid ""
"I<Note:> Don't use this call to test for availability of features.  In "
"enterprise distributions we backport features from later versions into "
"earlier versions, making this an unreliable way to test for features.  Use "
"L</available> or L</feature-available> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7977
msgid "vfs-label"
msgstr "vfs-label"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7979
#, no-wrap
msgid ""
" vfs-label mountable\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7981 ../src/guestfs-actions.pod:12941
msgid "This returns the label of the filesystem on C<mountable>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7983 ../src/guestfs-actions.pod:12943
msgid "If the filesystem is unlabeled, this returns the empty string."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7985
msgid "To find a filesystem from the label, use L</findfs-label>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7987
msgid "vfs-type"
msgstr "vfs-type"

#. type: verbatim
#: ../fish/guestfish-actions.pod:7989
#, no-wrap
msgid ""
" vfs-type mountable\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7991 ../src/guestfs-actions.pod:12958
msgid ""
"This command gets the filesystem type corresponding to the filesystem on "
"C<mountable>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7994 ../src/guestfs-actions.pod:12961
msgid ""
"For most filesystems, the result is the name of the Linux VFS module which "
"would be used to mount this filesystem if you mounted it without specifying "
"the filesystem type.  For example a string such as C<ext3> or C<ntfs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:7999
msgid "vfs-uuid"
msgstr "vfs-uuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8001
#, no-wrap
msgid ""
" vfs-uuid mountable\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8003 ../src/guestfs-actions.pod:12977
msgid "This returns the filesystem UUID of the filesystem on C<mountable>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8005 ../src/guestfs-actions.pod:12979
msgid "If the filesystem does not have a UUID, this returns the empty string."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8007
msgid "To find a filesystem from the UUID, use L</findfs-uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8009
msgid "vg-activate"
msgstr "vg-activate"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8011
#, no-wrap
msgid ""
" vg-activate true|false 'volgroups ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8013 ../src/guestfs-actions.pod:12995
msgid ""
"This command activates or (if C<activate> is false) deactivates all logical "
"volumes in the listed volume groups C<volgroups>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8016 ../src/guestfs-actions.pod:12998
msgid "This command is the same as running C<vgchange -a y|n volgroups...>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8018 ../src/guestfs-actions.pod:13000
msgid ""
"Note that if C<volgroups> is an empty list then B<all> volume groups are "
"activated or deactivated."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8021
msgid "vg-activate-all"
msgstr "vg-activate-all"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8023
#, no-wrap
msgid ""
" vg-activate-all true|false\n"
"\n"
msgstr ""
" vg-activate-all true|false\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8025 ../src/guestfs-actions.pod:13013
msgid ""
"This command activates or (if C<activate> is false) deactivates all logical "
"volumes in all volume groups."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8028 ../src/guestfs-actions.pod:13016
msgid "This command is the same as running C<vgchange -a y|n>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8030
msgid "vgchange-uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:8032
#, no-wrap
msgid ""
" vgchange-uuid vg\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8034 ../src/guestfs-actions.pod:13028
msgid "Generate a new random UUID for the volume group C<vg>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8036
msgid "vgchange-uuid-all"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:8038
#, no-wrap
msgid ""
" vgchange-uuid-all\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8040 ../src/guestfs-actions.pod:13039
msgid "Generate new random UUIDs for all volume groups."
msgstr "Створити нові випадкові UUID для всіх груп томів."

#. type: =head2
#: ../fish/guestfish-actions.pod:8042
msgid "vgcreate"
msgstr "vgcreate"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8044
#, no-wrap
msgid ""
" vgcreate volgroup 'physvols ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8046 ../src/guestfs-actions.pod:13052
msgid ""
"This creates an LVM volume group called C<volgroup> from the non-empty list "
"of physical volumes C<physvols>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8049
msgid "vglvuuids"
msgstr "vglvuuids"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8051
#, no-wrap
msgid ""
" vglvuuids vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8053 ../src/guestfs-actions.pod:13065
msgid ""
"Given a VG called C<vgname>, this returns the UUIDs of all the logical "
"volumes created in this volume group."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8056
msgid ""
"You can use this along with L</lvs> and L</lvuuid> calls to associate "
"logical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8059
msgid "See also L</vgpvuuids>."
msgstr "Див. також L</vgpvuuids>."

#. type: =head2
#: ../fish/guestfish-actions.pod:8061
msgid "vgmeta"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:8063
#, no-wrap
msgid ""
" vgmeta vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8065 ../src/guestfs-actions.pod:13086
msgid ""
"C<vgname> is an LVM volume group.  This command examines the volume group "
"and returns its metadata."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8068 ../src/guestfs-actions.pod:13089
msgid ""
"Note that the metadata is an internal structure used by LVM, subject to "
"change at any time, and is provided for information only."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8071
msgid "vgpvuuids"
msgstr "vgpvuuids"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8073
#, no-wrap
msgid ""
" vgpvuuids vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8075 ../src/guestfs-actions.pod:13104
msgid ""
"Given a VG called C<vgname>, this returns the UUIDs of all the physical "
"volumes that this volume group resides on."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8078
msgid ""
"You can use this along with L</pvs> and L</pvuuid> calls to associate "
"physical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8081
msgid "See also L</vglvuuids>."
msgstr "Див. також L</vglvuuids>."

#. type: =head2
#: ../fish/guestfish-actions.pod:8083
msgid "vgremove"
msgstr "vgremove"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8085
#, no-wrap
msgid ""
" vgremove vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8087 ../src/guestfs-actions.pod:13124
msgid "Remove an LVM volume group C<vgname>, (for example C<VG>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8089 ../src/guestfs-actions.pod:13126
msgid ""
"This also forcibly removes all logical volumes in the volume group (if any)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8092
msgid "vgrename"
msgstr "vgrename"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8094
#, no-wrap
msgid ""
" vgrename volgroup newvolgroup\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8096 ../src/guestfs-actions.pod:13140
msgid "Rename a volume group C<volgroup> with the new name C<newvolgroup>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8098
msgid "vgs"
msgstr "vgs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8100
#, no-wrap
msgid ""
" vgs\n"
"\n"
msgstr ""
" vgs\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8102 ../src/guestfs-actions.pod:13151
msgid ""
"List all the volumes groups detected.  This is the equivalent of the "
"L<vgs(8)> command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8105 ../src/guestfs-actions.pod:13154
msgid ""
"This returns a list of just the volume group names that were detected (eg. "
"C<VolGroup00>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8108
msgid "See also L</vgs-full>."
msgstr "Див. також L</vgs-full>."

#. type: =head2
#: ../fish/guestfish-actions.pod:8110
msgid "vgs-full"
msgstr "vgs-full"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8112
#, no-wrap
msgid ""
" vgs-full\n"
"\n"
msgstr ""
" vgs-full\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8114 ../src/guestfs-actions.pod:13170
msgid ""
"List all the volumes groups detected.  This is the equivalent of the "
"L<vgs(8)> command.  The \"full\" version includes all fields."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8117
msgid "vgscan"
msgstr "vgscan"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8119
#, no-wrap
msgid ""
" vgscan\n"
"\n"
msgstr ""
" vgscan\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8121 ../src/guestfs-actions.pod:13184
msgid ""
"This rescans all block devices and rebuilds the list of LVM physical "
"volumes, volume groups and logical volumes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8124
msgid "vguuid"
msgstr "vguuid"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8126
#, no-wrap
msgid ""
" vguuid vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8128 ../src/guestfs-actions.pod:13197
msgid "This command returns the UUID of the LVM VG named C<vgname>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8130
msgid "wc-c"
msgstr "wc-c"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8132
#, no-wrap
msgid ""
" wc-c path\n"
"\n"
msgstr ""
" wc-c шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8134 ../src/guestfs-actions.pod:13237
msgid ""
"This command counts the characters in a file, using the C<wc -c> external "
"command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8137
msgid "wc-l"
msgstr "wc-l"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8139
#, no-wrap
msgid ""
" wc-l path\n"
"\n"
msgstr ""
" wc-l шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8141 ../src/guestfs-actions.pod:13250
msgid ""
"This command counts the lines in a file, using the C<wc -l> external command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8144
msgid "wc-w"
msgstr "wc-w"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8146
#, no-wrap
msgid ""
" wc-w path\n"
"\n"
msgstr ""
" wc-w шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8148 ../src/guestfs-actions.pod:13263
msgid ""
"This command counts the words in a file, using the C<wc -w> external command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8151
msgid "wipefs"
msgstr "wipefs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8153
#, no-wrap
msgid ""
" wipefs device\n"
"\n"
msgstr ""
" wipefs пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8155 ../src/guestfs-actions.pod:13276
msgid ""
"This command erases filesystem or RAID signatures from the specified "
"C<device> to make the filesystem invisible to libblkid."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8158 ../src/guestfs-actions.pod:13279
msgid ""
"This does not erase the filesystem itself nor any other data from the "
"C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8161
msgid "Compare with L</zero> which zeroes the first few blocks of a device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8164
msgid "write"
msgstr "write"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8166
#, no-wrap
msgid ""
" write path content\n"
"\n"
msgstr ""
" write шлях дані\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8168 ../src/guestfs-actions.pod:13297
msgid ""
"This call creates a file called C<path>.  The content of the file is the "
"string C<content> (which can contain any 8 bit data)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8171
msgid "See also L</write-append>."
msgstr "Див. також L</write-append>."

#. type: =head2
#: ../fish/guestfish-actions.pod:8173
msgid "write-append"
msgstr "write-append"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8175
#, no-wrap
msgid ""
" write-append path content\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8177 ../src/guestfs-actions.pod:13314
msgid ""
"This call appends C<content> to the end of file C<path>.  If C<path> does "
"not exist, then a new file is created."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8180
msgid "See also L</write>."
msgstr "Див. також L</write>."

#. type: =head2
#: ../fish/guestfish-actions.pod:8182
msgid "write-file"
msgstr "write-file"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8184
#, no-wrap
msgid ""
" write-file path content size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8186 ../src/guestfs-actions.pod:13338
msgid ""
"This call creates a file called C<path>.  The contents of the file is the "
"string C<content> (which can contain any 8 bit data), with length C<size>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8190 ../src/guestfs-actions.pod:13342
msgid ""
"As a special case, if C<size> is C<0> then the length is calculated using "
"C<strlen> (so in this case the content cannot contain embedded ASCII NULs)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8194 ../src/guestfs-actions.pod:13346
msgid ""
"I<NB.> Owing to a bug, writing content containing ASCII NUL characters does "
"I<not> work, even if the length is specified."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8200
msgid ""
"I<This function is deprecated.> In new code, use the L</write> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8207
msgid "xfs-admin"
msgstr "xfs-admin"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8209
#, no-wrap
msgid ""
" xfs-admin device [extunwritten:true|false] [imgfile:true|false] [v2log:true|false] [projid32bit:true|false] [lazycounter:true|false] [label:..] [uuid:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8211 ../src/guestfs-actions.pod:13376
msgid "Change the parameters of the XFS filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8213 ../src/guestfs-actions.pod:13378
msgid ""
"Devices that are mounted cannot be modified.  Administrators must unmount "
"filesystems before this call can modify parameters."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8217
msgid ""
"Some of the parameters of a mounted filesystem can be examined and modified "
"using the L</xfs-info> and L</xfs-growfs> calls."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8223
msgid "xfs-growfs"
msgstr "xfs-growfs"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8225
#, no-wrap
msgid ""
" xfs-growfs path [datasec:true|false] [logsec:true|false] [rtsec:true|false] [datasize:N] [logsize:N] [rtsize:N] [rtextsize:N] [maxpct:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8227 ../src/guestfs-actions.pod:13433
msgid "Grow the XFS filesystem mounted at C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8229 ../fish/guestfish-actions.pod:8242
#: ../src/guestfs-actions.pod:13435 ../src/guestfs-actions.pod:13474
msgid ""
"The returned struct contains geometry information.  Missing fields are "
"returned as C<-1> (for numeric fields) or empty string."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8235
msgid "xfs-info"
msgstr "xfs-info"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8237
#, no-wrap
msgid ""
" xfs-info pathordevice\n"
"\n"
msgstr ""
" xfs-info шлях_або_пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8239 ../src/guestfs-actions.pod:13471
msgid ""
"C<pathordevice> is a mounted XFS filesystem or a device containing an XFS "
"filesystem.  This command returns the geometry of the filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8246
msgid "xfs-repair"
msgstr "xfs-repair"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8248
#, no-wrap
msgid ""
" xfs-repair device [forcelogzero:true|false] [nomodify:true|false] [noprefetch:true|false] [forcegeometry:true|false] [maxmem:N] [ihashsize:N] [bhashsize:N] [agstride:N] [logdev:..] [rtdev:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8250 ../src/guestfs-actions.pod:13507
msgid "Repair corrupt or damaged XFS filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8252 ../src/guestfs-actions.pod:13509
msgid ""
"The filesystem is specified using the C<device> argument which should be the "
"device name of the disk partition or volume containing the filesystem.  If "
"given the name of a block device, C<xfs_repair> will attempt to find the raw "
"device associated with the specified block device and will use the raw "
"device instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8258 ../src/guestfs-actions.pod:13515
msgid ""
"Regardless, the filesystem to be repaired must be unmounted, otherwise, the "
"resulting filesystem may be inconsistent or corrupt."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8261 ../src/guestfs-actions.pod:13518
msgid ""
"The returned status indicates whether filesystem corruption was detected "
"(returns C<1>) or was not detected (returns C<0>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8266
msgid "zegrep"
msgstr "zegrep"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8268
#, no-wrap
msgid ""
" zegrep regex path\n"
"\n"
msgstr ""
" zegrep формальний_вираз шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8270 ../src/guestfs-actions.pod:13561
msgid ""
"This calls the external C<zegrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8283
msgid "zegrepi"
msgstr "zegrepi"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8285
#, no-wrap
msgid ""
" zegrepi regex path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8287 ../src/guestfs-actions.pod:13587
msgid ""
"This calls the external C<zegrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8300
msgid "zero"
msgstr "zero"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8302
#, no-wrap
msgid ""
" zero device\n"
"\n"
msgstr ""
" zero пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8304 ../src/guestfs-actions.pod:13605
msgid "This command writes zeroes over the first few blocks of C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8306 ../src/guestfs-actions.pod:13607
msgid ""
"How many blocks are zeroed isn't specified (but it's I<not> enough to "
"securely wipe the device).  It should be sufficient to remove any partition "
"tables, filesystem superblocks and so on."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8310 ../fish/guestfish-actions.pod:8325
#: ../src/guestfs-actions.pod:13611 ../src/guestfs-actions.pod:13637
msgid ""
"If blocks are already zero, then this command avoids writing zeroes.  This "
"prevents the underlying device from becoming non-sparse or growing "
"unnecessarily."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8314
msgid "See also: L</zero-device>, L</scrub-device>, L</is-zero-device>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8317
msgid "zero-device"
msgstr "zero-device"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8319
#, no-wrap
msgid ""
" zero-device device\n"
"\n"
msgstr ""
" zero-device пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8321
msgid ""
"This command writes zeroes over the entire C<device>.  Compare with L</zero> "
"which just zeroes the first few blocks of a device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8329
msgid "zero-free-space"
msgstr "zero-free-space"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8331
#, no-wrap
msgid ""
" zero-free-space directory\n"
"\n"
msgstr ""
" zero-free-space каталог\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8333 ../src/guestfs-actions.pod:13656
msgid ""
"Zero the free space in the filesystem mounted on C<directory>.  The "
"filesystem must be mounted read-write."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8336 ../src/guestfs-actions.pod:13659
msgid ""
"The filesystem contents are not affected, but any free space in the "
"filesystem is freed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8339
msgid ""
"Free space is not \"trimmed\".  You may want to call L</fstrim> either as an "
"alternative to this, or after calling this, depending on your requirements."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8343
msgid "zerofree"
msgstr "zerofree"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8345
#, no-wrap
msgid ""
" zerofree device\n"
"\n"
msgstr ""
" zerofree пристрій\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8347 ../src/guestfs-actions.pod:13681
msgid ""
"This runs the I<zerofree> program on C<device>.  This program claims to zero "
"unused inodes and disk blocks on an ext2/3 filesystem, thus making it "
"possible to compress the filesystem more effectively."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8352 ../src/guestfs-actions.pod:13686
msgid "You should B<not> run this program if the filesystem is mounted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8355 ../src/guestfs-actions.pod:13689
msgid ""
"It is possible that using this program can damage the filesystem or data on "
"the filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8358
msgid "zfgrep"
msgstr "zfgrep"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8360
#, no-wrap
msgid ""
" zfgrep pattern path\n"
"\n"
msgstr ""
" zfgrep шаблон шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8362 ../src/guestfs-actions.pod:13710
msgid ""
"This calls the external C<zfgrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8375
msgid "zfgrepi"
msgstr "zfgrepi"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8377
#, no-wrap
msgid ""
" zfgrepi pattern path\n"
"\n"
msgstr ""
" zfgrepi шаблон шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8379 ../src/guestfs-actions.pod:13736
msgid ""
"This calls the external C<zfgrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8392
msgid "zfile"
msgstr "zfile"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8394
#, no-wrap
msgid ""
" zfile meth path\n"
"\n"
msgstr ""
" zfile метод шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8396 ../src/guestfs-actions.pod:13762
msgid ""
"This command runs C<file> after first decompressing C<path> using C<method>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8399 ../src/guestfs-actions.pod:13765
msgid "C<method> must be one of C<gzip>, C<compress> or C<bzip2>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8401
msgid ""
"Since 1.0.63, use L</file> instead which can now process compressed files."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:8404
msgid ""
"I<This function is deprecated.> In new code, use the L</file> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8411
msgid "zgrep"
msgstr "zgrep"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8413
#, no-wrap
msgid ""
" zgrep regex path\n"
"\n"
msgstr ""
" zgrep формальний_вираз шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8415 ../src/guestfs-actions.pod:13789
msgid ""
"This calls the external C<zgrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:8428
msgid "zgrepi"
msgstr "zgrepi"

#. type: verbatim
#: ../fish/guestfish-actions.pod:8430
#, no-wrap
msgid ""
" zgrepi regex path\n"
"\n"
msgstr ""
" zgrepi формальний_вираз шлях\n"
"\n"

#. type: textblock
#: ../fish/guestfish-actions.pod:8432 ../src/guestfs-actions.pod:13815
msgid ""
"This calls the external C<zgrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:26
msgid "alloc"
msgstr "alloc"

#. type: =head2
#: ../fish/guestfish-commands.pod:28
msgid "allocate"
msgstr "allocate"

#. type: verbatim
#: ../fish/guestfish-commands.pod:30
#, no-wrap
msgid ""
" alloc filename size\n"
"\n"
msgstr ""
" alloc назва_файла розмір\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:32
msgid ""
"This creates an empty (zeroed) file of the given size, and then adds so it "
"can be further examined."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:35 ../fish/guestfish-commands.pod:268
msgid "For more advanced image creation, see L</disk-create>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:37 ../fish/guestfish-commands.pod:270
msgid "Size can be specified using standard suffixes, eg. C<1M>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:39
msgid ""
"To create a sparse file, use L</sparse> instead.  To create a prepared disk "
"image, see L</PREPARED DISK IMAGES>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:42
msgid "copy-in"
msgstr "copy-in"

#. type: verbatim
#: ../fish/guestfish-commands.pod:44
#, no-wrap
msgid ""
" copy-in local [local ...] /remotedir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:46
msgid ""
"C<copy-in> copies local files or directories recursively into the disk "
"image, placing them in the directory called C</remotedir> (which must "
"exist).  This guestfish meta-command turns into a sequence of L</tar-in> and "
"other commands as necessary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:51
msgid ""
"Multiple local files and directories can be specified, but the last "
"parameter must always be a remote directory.  Wildcards cannot be used."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:55
msgid "copy-out"
msgstr "copy-out"

#. type: verbatim
#: ../fish/guestfish-commands.pod:57
#, no-wrap
msgid ""
" copy-out remote [remote ...] localdir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:59
msgid ""
"C<copy-out> copies remote files or directories recursively out of the disk "
"image, placing them on the host disk in a local directory called C<localdir> "
"(which must exist).  This guestfish meta-command turns into a sequence of L</"
"download>, L</tar-out> and other commands as necessary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:65
msgid ""
"Multiple remote files and directories can be specified, but the last "
"parameter must always be a local directory.  To download to the current "
"directory, use C<.> as in:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:69
#, no-wrap
msgid ""
" copy-out /home .\n"
"\n"
msgstr ""
" copy-out /home .\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:71
msgid ""
"Wildcards cannot be used in the ordinary command, but you can use them with "
"the help of L</glob> like this:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:74
#, no-wrap
msgid ""
" glob copy-out /home/* .\n"
"\n"
msgstr ""
" glob copy-out /home/* .\n"
"\n"

#. type: =head2
#: ../fish/guestfish-commands.pod:76
msgid "delete-event"
msgstr "delete-event"

#. type: verbatim
#: ../fish/guestfish-commands.pod:78
#, no-wrap
msgid ""
" delete-event name\n"
"\n"
msgstr ""
" delete-event назва\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:80
msgid ""
"Delete the event handler which was previously registered as C<name>.  If "
"multiple event handlers were registered with the same name, they are all "
"deleted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:84
msgid "See also the guestfish commands C<event> and C<list-events>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:86
msgid "display"
msgstr "display"

#. type: verbatim
#: ../fish/guestfish-commands.pod:88
#, no-wrap
msgid ""
" display filename\n"
"\n"
msgstr ""
" display назва_файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:90
msgid ""
"Use C<display> (a graphical display program) to display an image file.  It "
"downloads the file, and runs C<display> on it."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:93
msgid ""
"To use an alternative program, set the C<GUESTFISH_DISPLAY_IMAGE> "
"environment variable.  For example to use the GNOME display program:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:96
#, no-wrap
msgid ""
" export GUESTFISH_DISPLAY_IMAGE=eog\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:98
msgid "See also L<display(1)>."
msgstr "Див. також L<display(1)>."

#. type: =head2
#: ../fish/guestfish-commands.pod:100
msgid "echo"
msgstr "echo"

#. type: verbatim
#: ../fish/guestfish-commands.pod:102
#, no-wrap
msgid ""
" echo [params ...]\n"
"\n"
msgstr ""
" echo [параметри...]\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:104
msgid "This echos the parameters to the terminal."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:106
msgid "edit"
msgstr "edit"

#. type: =head2
#: ../fish/guestfish-commands.pod:108
msgid "vi"
msgstr "vi"

#. type: =head2
#: ../fish/guestfish-commands.pod:110
msgid "emacs"
msgstr "emacs"

#. type: verbatim
#: ../fish/guestfish-commands.pod:112
#, no-wrap
msgid ""
" edit filename\n"
"\n"
msgstr ""
" edit назва_файла\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:114
msgid ""
"This is used to edit a file.  It downloads the file, edits it locally using "
"your editor, then uploads the result."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:117
msgid ""
"The editor is C<$EDITOR>.  However if you use the alternate commands C<vi> "
"or C<emacs> you will get those corresponding editors."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:121
msgid "event"
msgstr "event"

#. type: verbatim
#: ../fish/guestfish-commands.pod:123
#, no-wrap
msgid ""
" event name eventset \"shell script ...\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:125
msgid ""
"Register a shell script fragment which is executed when an event is raised.  "
"See L<guestfs(3)/guestfs_set_event_callback> for a discussion of the event "
"API in libguestfs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:129
msgid ""
"The C<name> parameter is a name that you give to this event handler.  It can "
"be any string (even the empty string) and is simply there so you can delete "
"the handler using the guestfish C<delete-event> command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:134
msgid ""
"The C<eventset> parameter is a comma-separated list of one or more events, "
"for example C<close> or C<close,trace>.  The special value C<*> means all "
"events."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:138
msgid ""
"The third and final parameter is the shell script fragment (or any external "
"command) that is executed when any of the events in the eventset occurs.  It "
"is executed using C<$SHELL -c>, or if C<$SHELL> is not set then C</bin/sh -"
"c>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:143
msgid ""
"The shell script fragment receives callback parameters as arguments C<$1>, C<"
"$2> etc.  The actual event that was called is available in the environment "
"variable C<$EVENT>."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:147
#, no-wrap
msgid ""
" event \"\" close \"echo closed\"\n"
" event messages appliance,library,trace \"echo $@\"\n"
" event \"\" progress \"echo progress: $3/$4\"\n"
" event \"\" * \"echo $EVENT $@\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:152
msgid "See also the guestfish commands C<delete-event> and C<list-events>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:154
msgid "glob"
msgstr "glob"

#. type: verbatim
#: ../fish/guestfish-commands.pod:156
#, no-wrap
msgid ""
" glob command args...\n"
"\n"
msgstr ""
" glob команда параметри...\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:158
msgid ""
"Expand wildcards in any paths in the args list, and run C<command> "
"repeatedly on each matching path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:161
msgid "See L</WILDCARDS AND GLOBBING>."
msgstr "Див. L</WILDCARDS AND GLOBBING>."

#. type: =head2
#: ../fish/guestfish-commands.pod:163
msgid "hexedit"
msgstr "hexedit"

#. type: verbatim
#: ../fish/guestfish-commands.pod:165
#, no-wrap
msgid ""
" hexedit <filename|device>\n"
" hexedit <filename|device> <max>\n"
" hexedit <filename|device> <start> <max>\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:169
msgid ""
"Use hexedit (a hex editor) to edit all or part of a binary file or block "
"device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:172
msgid ""
"This command works by downloading potentially the whole file or device, "
"editing it locally, then uploading it.  If the file or device is large, you "
"have to specify which part you wish to edit by using C<max> and/or C<start> "
"C<max> parameters.  C<start> and C<max> are specified in bytes, with the "
"usual modifiers allowed such as C<1M> (1 megabyte)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:179
msgid "For example to edit the first few sectors of a disk you might do:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:182
#, no-wrap
msgid ""
" hexedit /dev/sda 1M\n"
"\n"
msgstr ""
" hexedit /dev/sda 1M\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:184
msgid ""
"which would allow you to edit anywhere within the first megabyte of the disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:187
msgid "To edit the superblock of an ext2 filesystem on C</dev/sda1>, do:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:189
#, no-wrap
msgid ""
" hexedit /dev/sda1 0x400 0x400\n"
"\n"
msgstr ""
" hexedit /dev/sda1 0x400 0x400\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:191
msgid "(assuming the superblock is in the standard location)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:193
msgid ""
"This command requires the external L<hexedit(1)> program.  You can specify "
"another program to use by setting the C<HEXEDITOR> environment variable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:197
msgid "See also L</hexdump>."
msgstr "Див. також L</hexdump>."

#. type: =head2
#: ../fish/guestfish-commands.pod:199
msgid "lcd"
msgstr "lcd"

#. type: verbatim
#: ../fish/guestfish-commands.pod:201
#, no-wrap
msgid ""
" lcd directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:203
msgid ""
"Change the local directory, ie. the current directory of guestfish itself."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:206
msgid "Note that C<!cd> won't do what you might expect."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:208
msgid "list-events"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:210
#, no-wrap
msgid ""
" list-events\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:212
msgid ""
"List the event handlers registered using the guestfish C<event> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:215
msgid "man"
msgstr "man"

#. type: =head2
#: ../fish/guestfish-commands.pod:217
msgid "manual"
msgstr "підручник"

#. type: verbatim
#: ../fish/guestfish-commands.pod:219
#, no-wrap
msgid ""
"  man\n"
"\n"
msgstr ""
"  man\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:221
msgid "Opens the manual page for guestfish."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:223
msgid "more"
msgstr "more"

#. type: =head2
#: ../fish/guestfish-commands.pod:225
msgid "less"
msgstr "less"

#. type: verbatim
#: ../fish/guestfish-commands.pod:227
#, no-wrap
msgid ""
" more filename\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:229
#, no-wrap
msgid ""
" less filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:231
msgid "This is used to view a file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:233
msgid ""
"The default viewer is C<$PAGER>.  However if you use the alternate command "
"C<less> you will get the C<less> command specifically."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:236
msgid "reopen"
msgstr "reopen"

#. type: verbatim
#: ../fish/guestfish-commands.pod:238
#, no-wrap
msgid ""
"  reopen\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:240
msgid ""
"Close and reopen the libguestfs handle.  It is not necessary to use this "
"normally, because the handle is closed properly when guestfish exits.  "
"However this is occasionally useful for testing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:244
msgid "setenv"
msgstr "setenv"

#. type: verbatim
#: ../fish/guestfish-commands.pod:246
#, no-wrap
msgid ""
"  setenv VAR value\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:248
msgid "Set the environment variable C<VAR> to the string C<value>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:250
msgid ""
"To print the value of an environment variable use a shell command such as:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:253
#, no-wrap
msgid ""
" !echo $VAR\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:255
msgid "sparse"
msgstr "sparse"

#. type: verbatim
#: ../fish/guestfish-commands.pod:257
#, no-wrap
msgid ""
" sparse filename size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:259
msgid ""
"This creates an empty sparse file of the given size, and then adds so it can "
"be further examined."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:262
msgid ""
"In all respects it works the same as the L</alloc> command, except that the "
"image file is allocated sparsely, which means that disk blocks are not "
"assigned to the file until they are needed.  Sparse disk files only use "
"space when written to, but they are slower and there is a danger you could "
"run out of real disk space during a write operation."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:272
msgid "See also the guestfish L</scratch> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:274
msgid "supported"
msgstr "supported"

#. type: verbatim
#: ../fish/guestfish-commands.pod:276
#, no-wrap
msgid ""
" supported\n"
"\n"
msgstr ""
" supported\n"
"\n"

#. type: textblock
#: ../fish/guestfish-commands.pod:278
msgid ""
"This command returns a list of the optional groups known to the daemon, and "
"indicates which ones are supported by this build of the libguestfs appliance."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:282
msgid "See also L<guestfs(3)/AVAILABILITY>."
msgstr "Див. також L<guestfs(3)/AVAILABILITY>."

#. type: =head2
#: ../fish/guestfish-commands.pod:284
msgid "time"
msgstr "time"

#. type: verbatim
#: ../fish/guestfish-commands.pod:286
#, no-wrap
msgid ""
" time command args...\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:288
msgid ""
"Run the command as usual, but print the elapsed time afterwards.  This can "
"be useful for benchmarking operations."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:291
msgid "unsetenv"
msgstr "unsetenv"

#. type: verbatim
#: ../fish/guestfish-commands.pod:293
#, no-wrap
msgid ""
"  unsetenv VAR\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:295
msgid "Remove C<VAR> from the environment."
msgstr ""

#. type: =head2
#: ../fish/guestfish-prepopts.pod:26
msgid "B<-N disk> - create a blank disk"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:28
msgid "C<guestfish -N [I<filename>=]disk[:I<size>]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:30
msgid "Create a blank disk, size 100MB (by default)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:32
msgid "The default size can be changed by supplying an optional parameter."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-prepopts.pod:36
#, no-wrap
msgid ""
" Name          Default value\n"
" size          100M          the size of the disk image\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-prepopts.pod:39
msgid "B<-N part> - create a partitioned disk"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:41
msgid "C<guestfish -N [I<filename>=]part[:I<size>[:I<partition>]]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:43
msgid ""
"Create a disk with a single partition.  By default the size of the disk is "
"100MB (the available space in the partition will be a tiny bit smaller)  and "
"the partition table will be MBR (old DOS-style)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:47 ../fish/guestfish-prepopts.pod:64
msgid "These defaults can be changed by supplying optional parameters."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-prepopts.pod:51
#, no-wrap
msgid ""
" Name          Default value\n"
" size          100M          the size of the disk image\n"
" partition     mbr           partition table type\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-prepopts.pod:55
msgid "B<-N fs> - create a filesystem"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:57
msgid ""
"C<guestfish -N [I<filename>=]fs[:I<filesystem>[:I<size>[:I<partition>]]]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:59
msgid ""
"Create a disk with a single partition, with the partition containing an "
"empty filesystem.  This defaults to creating a 100MB disk (the available "
"space in the filesystem will be a tiny bit smaller) with an MBR (old DOS-"
"style) partition table and an ext2 filesystem."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-prepopts.pod:68
#, no-wrap
msgid ""
" Name          Default value\n"
" filesystem    ext2          the type of filesystem to use\n"
" size          100M          the size of the disk image\n"
" partition     mbr           partition table type\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-prepopts.pod:73
msgid "B<-N lv> - create a disk with logical volume"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:75
msgid "C<guestfish -N [I<filename>=]lv[:I<name>[:I<size>[:I<partition>]]]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:77
msgid ""
"Create a disk with a single partition, set up the partition as an LVM2 "
"physical volume, and place a volume group and logical volume on there.  This "
"defaults to creating a 100MB disk with the VG and LV called C</dev/VG/LV>.  "
"You can change the name of the VG and LV by supplying an alternate name as "
"the first optional parameter."
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:83
msgid "Note this does not create a filesystem.  Use 'lvfs' to do that."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-prepopts.pod:87
#, no-wrap
msgid ""
" Name          Default value\n"
" name          /dev/VG/LV    the name of the VG and LV to use\n"
" size          100M          the size of the disk image\n"
" partition     mbr           partition table type\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-prepopts.pod:92
msgid "B<-N lvfs> - create a disk with logical volume and filesystem"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:94
msgid ""
"C<guestfish -N [I<filename>=]lvfs[:I<name>[:I<filesystem>[:I<size>[:"
"I<partition>]]]]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:96
msgid ""
"Create a disk with a single partition, set up the partition as an LVM2 "
"physical volume, and place a volume group and logical volume on there.  Then "
"format the LV with a filesystem.  This defaults to creating a 100MB disk "
"with the VG and LV called C</dev/VG/LV>, with an ext2 filesystem."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-prepopts.pod:104
#, no-wrap
msgid ""
" Name          Default value\n"
" name          /dev/VG/LV    the name of the VG and LV to use\n"
" filesystem    ext2          the type of filesystem to use\n"
" size          100M          the size of the disk image\n"
" partition     mbr           partition table type\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-prepopts.pod:110
msgid "B<-N bootroot> - create a boot and root filesystem"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:112
msgid ""
"C<guestfish -N [I<filename>=]bootroot[:I<bootfs>[:I<rootfs>[:I<size>[:"
"I<bootsize>[:I<partition>]]]]]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:114
msgid ""
"Create a disk with two partitions, for boot and root filesystem.  Format the "
"two filesystems independently.  There are several optional parameters which "
"control the exact layout and filesystem types."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-prepopts.pod:120
#, no-wrap
msgid ""
" Name          Default value\n"
" bootfs        ext2          the type of filesystem to use for boot\n"
" rootfs        ext2          the type of filesystem to use for root\n"
" size          100M          the size of the disk image\n"
" bootsize      32M           the size of the boot filesystem\n"
" partition     mbr           partition table type\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-prepopts.pod:127
msgid "B<-N bootrootlv> - create a boot and root filesystem using LVM"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:129
msgid ""
"C<guestfish -N [I<filename>=]bootrootlv[:I<name>[:I<bootfs>[:I<rootfs>[:"
"I<size>[:I<bootsize>[:I<partition>]]]]]]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-prepopts.pod:131
msgid ""
"This is the same as C<bootroot> but the root filesystem (only) is placed on "
"a logical volume, named by default C</dev/VG/LV>.  There are several "
"optional parameters which control the exact layout."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-prepopts.pod:137
#, no-wrap
msgid ""
" Name          Default value\n"
" name          /dev/VG/LV    the name of the VG and LV for root\n"
" bootfs        ext2          the type of filesystem to use for boot\n"
" rootfs        ext2          the type of filesystem to use for root\n"
" size          100M          the size of the disk image\n"
" bootsize      32M           the size of the boot filesystem\n"
" partition     mbr           partition table type\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:3
msgid "guestfish - the guest filesystem shell"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:7
#, no-wrap
msgid ""
" guestfish [--options] [commands]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:9
#, no-wrap
msgid ""
" guestfish\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:11
#, no-wrap
msgid ""
" guestfish [--ro|--rw] -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:13
#, no-wrap
msgid ""
" guestfish [--ro|--rw] -a disk.img -m dev[:mountpoint]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:15
#, no-wrap
msgid ""
" guestfish -d libvirt-domain\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:17
#, no-wrap
msgid ""
" guestfish [--ro|--rw] -a disk.img -i\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:19
#, no-wrap
msgid ""
" guestfish -d libvirt-domain -i\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:23
msgid ""
"Using guestfish in read/write mode on live virtual machines can be "
"dangerous, potentially causing disk corruption.  Use the I<--ro> (read-only) "
"option to use guestfish safely if the disk image or virtual machine might be "
"live."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:30
msgid ""
"Guestfish is a shell and command-line tool for examining and modifying "
"virtual machine filesystems.  It uses libguestfs and exposes all of the "
"functionality of the guestfs API, see L<guestfs(3)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:34
msgid ""
"Guestfish gives you structured access to the libguestfs API, from shell "
"scripts or the command line or interactively.  If you want to rescue a "
"broken virtual machine image, you should look at the L<virt-rescue(1)> "
"command."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:41
msgid "As an interactive shell"
msgstr "Як інтерактивну оболонку"

#. type: verbatim
#: ../fish/guestfish.pod:43
#, no-wrap
msgid ""
" $ guestfish\n"
" \n"
msgstr ""
" $ guestfish\n"
" \n"

#. type: verbatim
#: ../fish/guestfish.pod:45
#, no-wrap
msgid ""
" Welcome to guestfish, the guest filesystem shell for\n"
" editing virtual machine filesystems.\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:48
#, no-wrap
msgid ""
" Type: 'help' for a list of commands\n"
"       'man' to read the manual\n"
"       'quit' to quit the shell\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:52
#, no-wrap
msgid ""
" ><fs> add-ro disk.img\n"
" ><fs> run\n"
" ><fs> list-filesystems\n"
" /dev/sda1: ext4\n"
" /dev/vg_guest/lv_root: ext4\n"
" /dev/vg_guest/lv_swap: swap\n"
" ><fs> mount /dev/vg_guest/lv_root /\n"
" ><fs> cat /etc/fstab\n"
" # /etc/fstab\n"
" # Created by anaconda\n"
" [...]\n"
" ><fs> exit\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:65
msgid "From shell scripts"
msgstr "Зі скриптів оболонки"

#. type: textblock
#: ../fish/guestfish.pod:67
msgid "Create a new C</etc/motd> file in a guest or disk image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:69
#, no-wrap
msgid ""
" guestfish <<_EOF_\n"
" add disk.img\n"
" run\n"
" mount /dev/vg_guest/lv_root /\n"
" write /etc/motd \"Welcome, new users\"\n"
" _EOF_\n"
"\n"
msgstr ""
" guestfish <<_EOF_\n"
" add disk.img\n"
" run\n"
" mount /dev/vg_guest/lv_root /\n"
" write /etc/motd \"Welcome, new users\"\n"
" _EOF_\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:76
msgid "List the LVM logical volumes in a disk image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:78
#, no-wrap
msgid ""
" guestfish -a disk.img --ro <<_EOF_\n"
" run\n"
" lvs\n"
" _EOF_\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:83
msgid "List all the filesystems in a disk image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:85
#, no-wrap
msgid ""
" guestfish -a disk.img --ro <<_EOF_\n"
" run\n"
" list-filesystems\n"
" _EOF_\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:90
msgid "On one command line"
msgstr "У одному рядку команди"

#. type: textblock
#: ../fish/guestfish.pod:92 ../fish/virt-copy-in.pod:29
msgid "Update C</etc/resolv.conf> in a guest:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:94
#, no-wrap
msgid ""
" guestfish \\\n"
"   add disk.img : run : mount /dev/vg_guest/lv_root / : \\\n"
"   write /etc/resolv.conf \"nameserver 1.2.3.4\"\n"
"\n"
msgstr ""
" guestfish \\\n"
"   add disk.img : run : mount /dev/vg_guest/lv_root / : \\\n"
"   write /etc/resolv.conf \"nameserver 1.2.3.4\"\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:98
msgid "Edit C</boot/grub/grub.conf> interactively:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:100
#, no-wrap
msgid ""
" guestfish --rw --add disk.img \\\n"
"   --mount /dev/vg_guest/lv_root \\\n"
"   --mount /dev/sda1:/boot \\\n"
"   edit /boot/grub/grub.conf\n"
"\n"
msgstr ""
" guestfish --rw --add disk.img \\\n"
"   --mount /dev/vg_guest/lv_root \\\n"
"   --mount /dev/sda1:/boot \\\n"
"   edit /boot/grub/grub.conf\n"
"\n"

#. type: =head2
#: ../fish/guestfish.pod:105
msgid "Mount disks automatically"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:107
msgid ""
"Use the I<-i> option to automatically mount the disks from a virtual machine:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:110
#, no-wrap
msgid ""
" guestfish --ro -a disk.img -i cat /etc/group\n"
"\n"
msgstr ""
" guestfish --ro -a disk.img -i cat /etc/group\n"
"\n"

#. type: verbatim
#: ../fish/guestfish.pod:112
#, no-wrap
msgid ""
" guestfish --ro -d libvirt-domain -i cat /etc/group\n"
"\n"
msgstr ""
" guestfish --ro -d libvirt-domain -i cat /etc/group\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:114
msgid "Another way to edit C</boot/grub/grub.conf> interactively is:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:116
#, no-wrap
msgid ""
" guestfish --rw -a disk.img -i edit /boot/grub/grub.conf\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:118
msgid "As a script interpreter"
msgstr "Як інтерпретатор скриптів"

#. type: textblock
#: ../fish/guestfish.pod:120
msgid "Create a 100MB disk containing an ext2-formatted partition:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:122
#, no-wrap
msgid ""
" #!/usr/bin/guestfish -f\n"
" sparse test1.img 100M\n"
" run\n"
" part-disk /dev/sda mbr\n"
" mkfs ext2 /dev/sda1\n"
"\n"
msgstr ""
" #!/usr/bin/guestfish -f\n"
" sparse test1.img 100M\n"
" run\n"
" part-disk /dev/sda mbr\n"
" mkfs ext2 /dev/sda1\n"
"\n"

#. type: =head2
#: ../fish/guestfish.pod:128
msgid "Start with a prepared disk"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:130
msgid ""
"An alternate way to create a 100MB disk called C<test1.img> containing a "
"single ext2-formatted partition:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:133 ../src/guestfs.pod:3381
#, no-wrap
msgid ""
" guestfish -N fs\n"
"\n"
msgstr ""
" guestfish -N fs\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:135
msgid "To list what is available do:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:137
#, no-wrap
msgid ""
" guestfish -N help | less\n"
"\n"
msgstr ""
" guestfish -N help | less\n"
"\n"

#. type: =head2
#: ../fish/guestfish.pod:139
msgid "Remote drives"
msgstr "Віддалені диски"

#. type: textblock
#: ../fish/guestfish.pod:141
msgid "Access a remote disk using ssh:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:143 ../guestfs-release-notes.pod:1273
#, no-wrap
msgid ""
" guestfish -a ssh://example.com/path/to/disk.img\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:145
msgid "Remote control"
msgstr "Дистанційне керування"

#. type: verbatim
#: ../fish/guestfish.pod:147
#, no-wrap
msgid ""
" eval \"`guestfish --listen`\"\n"
" guestfish --remote add-ro disk.img\n"
" guestfish --remote run\n"
" guestfish --remote lvs\n"
"\n"
msgstr ""
" eval \"`guestfish --listen`\"\n"
" guestfish --remote add-ro disk.img\n"
" guestfish --remote run\n"
" guestfish --remote lvs\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:158
msgid "Displays general help on options."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:162
msgid "B<--cmd-help>"
msgstr "B<--cmd-help>"

#. type: textblock
#: ../fish/guestfish.pod:164
msgid "Lists all available guestfish commands."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:166
msgid "B<-h cmd>"
msgstr "B<-h команда>"

#. type: =item
#: ../fish/guestfish.pod:168
msgid "B<--cmd-help cmd>"
msgstr "B<--cmd-help команда>"

#. type: textblock
#: ../fish/guestfish.pod:170
msgid "Displays detailed help on a single command C<cmd>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:172 ../fuse/guestmount.pod:163
msgid "B<-a image>"
msgstr "B<-a образ>"

#. type: =item
#: ../fish/guestfish.pod:174 ../fuse/guestmount.pod:165
msgid "B<--add image>"
msgstr "B<--add образ>"

#. type: textblock
#: ../fish/guestfish.pod:176
msgid "Add a block device or virtual machine image to the shell."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:181
msgid ""
"Using this flag is mostly equivalent to using the C<add> command, with "
"C<readonly:true> if the I<--ro> flag was given, and with C<format:...> if "
"the I<--format=...> flag was given."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:189
msgid "Add a remote disk.  See L</ADDING REMOTE STORAGE>."
msgstr "Додати віддалений диск. Див. L</ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА>."

#. type: textblock
#: ../fish/guestfish.pod:195 ../fuse/guestmount.pod:182
msgid ""
"When used in conjunction with the I<-d> option, this specifies the libvirt "
"URI to use.  The default is to use the default libvirt connection."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:199
msgid "B<--csh>"
msgstr "B<--csh>"

#. type: textblock
#: ../fish/guestfish.pod:201
msgid ""
"If using the I<--listen> option and a csh-like shell, use this option.  See "
"section L</REMOTE CONTROL AND CSH> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:204 ../fuse/guestmount.pod:186
msgid "B<-d libvirt-domain>"
msgstr "B<-d домен-libvirt>"

#. type: =item
#: ../fish/guestfish.pod:206 ../fuse/guestmount.pod:188
msgid "B<--domain libvirt-domain>"
msgstr "B<--domain домен-libvirt>"

#. type: textblock
#: ../fish/guestfish.pod:208 ../fuse/guestmount.pod:190
msgid ""
"Add disks from the named libvirt domain.  If the I<--ro> option is also "
"used, then any libvirt domain can be used.  However in write mode, only "
"libvirt domains which are shut down can be named here."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:212 ../fuse/guestmount.pod:194
msgid "Domain UUIDs can be used instead of names."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:214
msgid ""
"Using this flag is mostly equivalent to using the C<add-domain> command, "
"with C<readonly:true> if the I<--ro> flag was given, and with C<format:...> "
"if the I<--format=...> flag was given."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:220 ../fuse/guestmount.pod:210
msgid ""
"When prompting for keys and passphrases, guestfish normally turns echoing "
"off so you cannot see what you are typing.  If you are not worried about "
"Tempest attacks and there is no one else in the room you can specify this "
"flag to see what you are typing."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:225
msgid "B<-f file>"
msgstr "B<-f файл>"

#. type: =item
#: ../fish/guestfish.pod:227
msgid "B<--file file>"
msgstr "B<--file файл>"

#. type: textblock
#: ../fish/guestfish.pod:229
msgid "Read commands from C<file>.  To write pure guestfish scripts, use:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:232
#, no-wrap
msgid ""
" #!/usr/bin/guestfish -f\n"
"\n"
msgstr ""
" #!/usr/bin/guestfish -f\n"
"\n"

#. type: verbatim
#: ../fish/guestfish.pod:245
#, no-wrap
msgid ""
" guestfish --format=raw -a disk.img\n"
"\n"
msgstr ""
" guestfish --format=raw -a disk.img\n"
"\n"

#. type: verbatim
#: ../fish/guestfish.pod:249
#, no-wrap
msgid ""
" guestfish --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""
" guestfish --format=raw -a disk.img --format -a another.img\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:254
msgid ""
"If you have untrusted raw-format guest disk images, you should use this "
"option to specify the disk format.  This avoids a possible security problem "
"with malicious guests (CVE-2010-3851).  See also L</add>."
msgstr ""
"Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому "
"форматі, вам слід скористатися цим параметром для визначення формату диска. "
"Таким чином можна уникнути можливих проблем з захистом для сформованих "
"зловмисниками гостьових систем (CVE-2010-3851). Див. також L</add>."

#. type: =item
#: ../fish/guestfish.pod:261 ../fuse/guestmount.pod:246
msgid "B<--inspector>"
msgstr "B<--inspector>"

#. type: textblock
#: ../fish/guestfish.pod:263 ../fuse/guestmount.pod:248
msgid ""
"Using L<virt-inspector(1)> code, inspect the disks looking for an operating "
"system and mount filesystems as they would be mounted on the real virtual "
"machine."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:267
msgid "Typical usage is either:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:269
#, no-wrap
msgid ""
" guestfish -d myguest -i\n"
"\n"
msgstr ""
" guestfish -d myguest -i\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:271
msgid "(for an inactive libvirt domain called I<myguest>), or:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:273
#, no-wrap
msgid ""
" guestfish --ro -d myguest -i\n"
"\n"
msgstr ""
" guestfish --ro -d myguest -i\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:275
msgid "(for active domains, readonly), or specify the block device directly:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:277
#, no-wrap
msgid ""
" guestfish --rw -a /dev/Guests/MyGuest -i\n"
"\n"
msgstr ""
" guestfish --rw -a /dev/Guests/MyGuest -i\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:279
msgid ""
"Note that the command line syntax changed slightly over older versions of "
"guestfish.  You can still use the old syntax:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:282
#, no-wrap
msgid ""
" guestfish [--ro] -i disk.img\n"
"\n"
msgstr ""
" guestfish [--ro] -i disk.img\n"
"\n"

#. type: verbatim
#: ../fish/guestfish.pod:284
#, no-wrap
msgid ""
" guestfish [--ro] -i libvirt-domain\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:286
msgid ""
"Using this flag is mostly equivalent to using the C<inspect-os> command and "
"then using other commands to mount the filesystems that were found."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:295
msgid "B<--listen>"
msgstr "B<--listen>"

#. type: textblock
#: ../fish/guestfish.pod:297
msgid ""
"Fork into the background and listen for remote commands.  See section L</"
"REMOTE CONTROL GUESTFISH OVER A SOCKET> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:300 ../fuse/guestmount.pod:257
msgid "B<--live>"
msgstr "B<--live>"

#. type: textblock
#: ../fish/guestfish.pod:302 ../fuse/guestmount.pod:259
msgid ""
"Connect to a live virtual machine.  (Experimental, see L<guestfs(3)/"
"ATTACHING TO RUNNING DAEMONS>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:313
msgid "You have to mount something on C</> before most commands will work."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:315
msgid ""
"If any I<-m> or I<--mount> options are given, the guest is automatically "
"launched."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:343
msgid "Enable QEMU user networking in the guest."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:345
msgid "B<-N [filename=]type>"
msgstr "B<-N [назва_файла=]тип>"

#. type: =item
#: ../fish/guestfish.pod:347
msgid "B<--new [filename=]type>"
msgstr "B<--new [назва_файла=]тип>"

#. type: =item
#: ../fish/guestfish.pod:349
msgid "B<-N help>"
msgstr "B<-N help>"

#. type: textblock
#: ../fish/guestfish.pod:351
msgid ""
"Prepare a fresh disk image formatted as \"type\".  This is an alternative to "
"the I<-a> option: whereas I<-a> adds an existing disk, I<-N> creates a "
"preformatted disk with a filesystem and adds it.  See L</PREPARED DISK "
"IMAGES> below."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:360
msgid ""
"Disable autosync.  This is enabled by default.  See the discussion of "
"autosync in the L<guestfs(3)> manpage."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:363
msgid "B<--no-dest-paths>"
msgstr "B<--no-dest-paths>"

#. type: textblock
#: ../fish/guestfish.pod:365
msgid ""
"Don't tab-complete paths on the guest filesystem.  It is useful to be able "
"to hit the tab key to complete paths on the guest filesystem, but this "
"causes extra \"hidden\" guestfs calls to be made, so this option is here to "
"allow this feature to be disabled."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:370
msgid "B<--pipe-error>"
msgstr "B<--pipe-error>"

#. type: textblock
#: ../fish/guestfish.pod:372
msgid ""
"If writes fail to pipe commands (see L</PIPES> below), then the command "
"returns an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:375
msgid ""
"The default (also for historical reasons) is to ignore such errors so that:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:378
#, no-wrap
msgid ""
" ><fs> command_with_lots_of_output | head\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:380
msgid "doesn't give an error."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:382
msgid "B<--progress-bars>"
msgstr "B<--progress-bars>"

#. type: textblock
#: ../fish/guestfish.pod:384
msgid "Enable progress bars, even when guestfish is used non-interactively."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:386
msgid ""
"Progress bars are enabled by default when guestfish is used as an "
"interactive shell."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:389
msgid "B<--no-progress-bars>"
msgstr "B<--no-progress-bars>"

#. type: textblock
#: ../fish/guestfish.pod:391
msgid "Disable progress bars."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:393
msgid "B<--remote[=pid]>"
msgstr "B<--remote[=pid]>"

#. type: textblock
#: ../fish/guestfish.pod:395
msgid ""
"Send remote commands to C<$GUESTFISH_PID> or C<pid>.  See section L</REMOTE "
"CONTROL GUESTFISH OVER A SOCKET> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:400 ../fuse/guestmount.pod:343
#: ../rescue/virt-rescue.pod:198
msgid "B<--ro>"
msgstr "B<--ro>"

#. type: textblock
#: ../fish/guestfish.pod:402
msgid ""
"This changes the I<-a>, I<-d> and I<-m> options so that disks are added and "
"mounts are done read-only."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:405 ../rescue/virt-rescue.pod:202
msgid ""
"The option must always be used if the disk image or virtual machine might be "
"running, and is generally recommended in cases where you don't need write "
"access to the disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:409
msgid ""
"Note that prepared disk images created with I<-N> are not affected by this "
"option.  Also commands like C<add> are not affected - you have to specify "
"the C<readonly:true> option explicitly if you need it."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:413
msgid "See also L</OPENING DISKS FOR READ AND WRITE> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:415 ../fuse/guestmount.pod:355
#: ../rescue/virt-rescue.pod:220
msgid "B<--selinux>"
msgstr "B<--selinux>"

#. type: textblock
#: ../fish/guestfish.pod:417
msgid "Enable SELinux support for the guest.  See L<guestfs(3)/SELINUX>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:423
msgid ""
"Enable very verbose messages.  This is particularly useful if you find a bug."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:430
msgid "Display the guestfish / libguestfs version number and exit."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:432 ../fuse/guestmount.pod:371
#: ../rescue/virt-rescue.pod:250
msgid "B<-w>"
msgstr "B<-w>"

#. type: =item
#: ../fish/guestfish.pod:434 ../fuse/guestmount.pod:373
#: ../rescue/virt-rescue.pod:252
msgid "B<--rw>"
msgstr "B<--rw>"

#. type: textblock
#: ../fish/guestfish.pod:436 ../fuse/guestmount.pod:375
msgid ""
"This changes the I<-a>, I<-d> and I<-m> options so that disks are added and "
"mounts are done read-write."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:439
msgid "See L</OPENING DISKS FOR READ AND WRITE> below."
msgstr "Див. L</OPENING DISKS FOR READ AND WRITE> нижче."

#. type: textblock
#: ../fish/guestfish.pod:443
msgid "Echo each command before executing it."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:447
msgid "COMMANDS ON COMMAND LINE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:449
msgid ""
"Any additional (non-option) arguments are treated as commands to execute."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:452
msgid ""
"Commands to execute should be separated by a colon (C<:>), where the colon "
"is a separate parameter.  Thus:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:455
#, no-wrap
msgid ""
" guestfish cmd [args...] : cmd [args...] : cmd [args...] ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:457
msgid ""
"If there are no additional arguments, then we enter a shell, either an "
"interactive shell with a prompt (if the input is a terminal) or a non-"
"interactive shell."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:461
msgid ""
"In either command line mode or non-interactive shell, the first command that "
"gives an error causes the whole shell to exit.  In interactive mode (with a "
"prompt) if a command fails, you can continue to enter commands."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:466
msgid "USING launch (OR run)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:468
msgid ""
"As with L<guestfs(3)>, you must first configure your guest by adding disks, "
"then launch it, then mount any disks you need, and finally issue actions/"
"commands.  So the general order of the day is:"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:476
msgid "add or -a/--add"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:480
msgid "launch (aka run)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:484
msgid "mount or -m/--mount"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:488
msgid "any other commands"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:492
msgid ""
"C<run> is a synonym for C<launch>.  You must C<launch> (or C<run>)  your "
"guest before mounting or performing any other commands."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:495
msgid ""
"The only exception is that if any of the I<-i>, I<-m>, I<--mount>, I<-N> or "
"I<--new> options were given then C<run> is done automatically, simply "
"because guestfish can't perform the action you asked for without doing this."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:500
msgid "OPENING DISKS FOR READ AND WRITE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:502
msgid ""
"The guestfish, L<guestmount(1)> and L<virt-rescue(1)> options I<--ro> and "
"I<--rw> affect whether the other command line options I<-a>, I<-c>, I<-d>, "
"I<-i> and I<-m> open disk images read-only or for writing."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:507
msgid ""
"In libguestfs E<le> 1.10, guestfish, guestmount and virt-rescue defaulted to "
"opening disk images supplied on the command line for write.  To open a disk "
"image read-only you have to do I<-a image --ro>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:511
msgid ""
"This matters: If you accidentally open a live VM disk image writable then "
"you will cause irreversible disk corruption."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:514
msgid ""
"In a future libguestfs we intend to change the default the other way.  Disk "
"images will be opened read-only.  You will have to either specify "
"I<guestfish --rw>, I<guestmount --rw>, I<virt-rescue --rw>, or change the "
"configuration file in order to get write access for disk images specified by "
"those other command line options."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:520
msgid ""
"This version of guestfish, guestmount and virt-rescue has a I<--rw> option "
"which does nothing (it is already the default).  However it is highly "
"recommended that you use this option to indicate that you need write access, "
"and prepare your scripts for the day when this option will be required for "
"write access."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:526
msgid ""
"B<Note:> This does I<not> affect commands like L</add> and L</mount>, or any "
"other libguestfs program apart from guestfish and guestmount."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:529
msgid "QUOTING"
msgstr "ЛАПКИ"

#. type: textblock
#: ../fish/guestfish.pod:531
msgid ""
"You can quote ordinary parameters using either single or double quotes.  For "
"example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:534
#, no-wrap
msgid ""
" add \"file with a space.img\"\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:536
#, no-wrap
msgid ""
" rm '/file name'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:538
#, no-wrap
msgid ""
" rm '/\"'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:540
msgid ""
"A few commands require a list of strings to be passed.  For these, use a "
"whitespace-separated list, enclosed in quotes.  Strings containing "
"whitespace to be passed through must be enclosed in single quotes.  A "
"literal single quote must be escaped with a backslash."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:545
#, no-wrap
msgid ""
" vgcreate VG \"/dev/sda1 /dev/sdb1\"\n"
" command \"/bin/echo 'foo      bar'\"\n"
" command \"/bin/echo \\'foo\\'\"\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:549
msgid "ESCAPE SEQUENCES IN DOUBLE QUOTED ARGUMENTS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:551
msgid ""
"In double-quoted arguments (only) use backslash to insert special characters:"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:556
msgid "C<\\a>"
msgstr "C<\\a>"

#. type: textblock
#: ../fish/guestfish.pod:558
msgid "Alert (bell) character."
msgstr "Символ гудка (дзвінка)."

#. type: =item
#: ../fish/guestfish.pod:560
msgid "C<\\b>"
msgstr "C<\\b>"

#. type: textblock
#: ../fish/guestfish.pod:562
msgid "Backspace character."
msgstr "Символ «зворотній хід»"

#. type: =item
#: ../fish/guestfish.pod:564
msgid "C<\\f>"
msgstr "C<\\f>"

#. type: textblock
#: ../fish/guestfish.pod:566
msgid "Form feed character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:568
msgid "C<\\n>"
msgstr "C<\\n>"

#. type: textblock
#: ../fish/guestfish.pod:570
msgid "Newline character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:572
msgid "C<\\r>"
msgstr "C<\\r>"

#. type: textblock
#: ../fish/guestfish.pod:574
msgid "Carriage return character."
msgstr "Символ повернення каретки."

#. type: =item
#: ../fish/guestfish.pod:576
msgid "C<\\t>"
msgstr "C<\\t>"

#. type: textblock
#: ../fish/guestfish.pod:578
msgid "Horizontal tab character."
msgstr "Символ горизонтальної табуляції"

#. type: =item
#: ../fish/guestfish.pod:580
msgid "C<\\v>"
msgstr "C<\\v>"

#. type: textblock
#: ../fish/guestfish.pod:582
msgid "Vertical tab character."
msgstr "Символ вертикальної табуляції."

#. type: =item
#: ../fish/guestfish.pod:584
msgid "C<\\\">"
msgstr "C<\\\">"

#. type: textblock
#: ../fish/guestfish.pod:586
msgid "A literal double quote character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:588
msgid "C<\\ooo>"
msgstr "C<\\ooo>"

#. type: textblock
#: ../fish/guestfish.pod:590
msgid ""
"A character with octal value I<ooo>.  There must be precisely 3 octal digits "
"(unlike C)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:593
msgid "C<\\xhh>"
msgstr "C<\\xhh>"

#. type: textblock
#: ../fish/guestfish.pod:595
msgid ""
"A character with hex value I<hh>.  There must be precisely 2 hex digits."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:598
msgid ""
"In the current implementation C<\\000> and C<\\x00> cannot be used in "
"strings."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:601
msgid "C<\\\\>"
msgstr "C<\\\\>"

#. type: textblock
#: ../fish/guestfish.pod:603 ../fish/guestfish.pod:1285
msgid "A literal backslash character."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:607 ../java/examples/guestfs-java.pod:71
msgid "OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:609
msgid ""
"Some commands take optional arguments.  These arguments appear in this "
"documentation as C<[argname:..]>.  You can use them as in these examples:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:613
#, no-wrap
msgid ""
" add filename\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:615
#, no-wrap
msgid ""
" add filename readonly:true\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:617
#, no-wrap
msgid ""
" add filename format:qcow2 readonly:false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:619
msgid ""
"Each optional argument can appear at most once.  All optional arguments must "
"appear after the required ones."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:622
msgid "NUMBERS"
msgstr "ЧИСЛА"

#. type: textblock
#: ../fish/guestfish.pod:624
msgid ""
"This section applies to all commands which can take integers as parameters."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:627
msgid "SIZE SUFFIX"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:629
msgid ""
"When the command takes a parameter measured in bytes, you can use one of the "
"following suffixes to specify kilobytes, megabytes and larger sizes:"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:635
msgid "B<k> or B<K> or B<KiB>"
msgstr "B<k>, B<K> або B<KiB>"

#. type: textblock
#: ../fish/guestfish.pod:637
msgid "The size in kilobytes (multiplied by 1024)."
msgstr "Розмір у кілобайтах (у одному кілобайті 1024 байтів)."

#. type: =item
#: ../fish/guestfish.pod:639
msgid "B<KB>"
msgstr "B<KB>"

#. type: textblock
#: ../fish/guestfish.pod:641
msgid "The size in SI 1000 byte units."
msgstr "Розмір у одиницях СІ: 1000 байтів."

#. type: =item
#: ../fish/guestfish.pod:643
msgid "B<M> or B<MiB>"
msgstr "B<M> або B<MiB>"

#. type: textblock
#: ../fish/guestfish.pod:645
msgid "The size in megabytes (multiplied by 1048576)."
msgstr "Розмір у мегабайтах (у одному мегабайті 1048576 байтів)."

#. type: =item
#: ../fish/guestfish.pod:647
msgid "B<MB>"
msgstr "B<MB>"

#. type: textblock
#: ../fish/guestfish.pod:649
msgid "The size in SI 1000000 byte units."
msgstr "Розмір у одиницях СІ: 1000000 байтів."

#. type: =item
#: ../fish/guestfish.pod:651
msgid "B<G> or B<GiB>"
msgstr "B<G> або B<GiB>"

#. type: textblock
#: ../fish/guestfish.pod:653
msgid "The size in gigabytes (multiplied by 2**30)."
msgstr "Розмір у гігабайтах (з множником 2**30)."

#. type: =item
#: ../fish/guestfish.pod:655
msgid "B<GB>"
msgstr "B<GB>"

#. type: textblock
#: ../fish/guestfish.pod:657
msgid "The size in SI 10**9 byte units."
msgstr "Розмір у одиницях СІ: 10**9 байтів."

#. type: =item
#: ../fish/guestfish.pod:659
msgid "B<T> or B<TiB>"
msgstr "B<T> або B<TiB>"

#. type: textblock
#: ../fish/guestfish.pod:661
msgid "The size in terabytes (multiplied by 2**40)."
msgstr "Розмір у терабайтах (з множником 2**40)."

#. type: =item
#: ../fish/guestfish.pod:663
msgid "B<TB>"
msgstr "B<TB>"

#. type: textblock
#: ../fish/guestfish.pod:665
msgid "The size in SI 10**12 byte units."
msgstr "Розмір у одиницях СІ: 10**12 байтів."

#. type: =item
#: ../fish/guestfish.pod:667
msgid "B<P> or B<PiB>"
msgstr "B<P> або B<PiB>"

#. type: textblock
#: ../fish/guestfish.pod:669
msgid "The size in petabytes (multiplied by 2**50)."
msgstr "Розмір у петабайтах (у одному петабайті 2**50 байтів)."

#. type: =item
#: ../fish/guestfish.pod:671
msgid "B<PB>"
msgstr "B<PB>"

#. type: textblock
#: ../fish/guestfish.pod:673
msgid "The size in SI 10**15 byte units."
msgstr "Розмір у одиницях СІ: 10**15 байтів."

#. type: =item
#: ../fish/guestfish.pod:675
msgid "B<E> or B<EiB>"
msgstr "B<E> або B<EiB>"

#. type: textblock
#: ../fish/guestfish.pod:677
msgid "The size in exabytes (multiplied by 2**60)."
msgstr "Розмір у ексабайтах (у одному ексабайті 2**60 байтів)."

#. type: =item
#: ../fish/guestfish.pod:679
msgid "B<EB>"
msgstr "B<EB>"

#. type: textblock
#: ../fish/guestfish.pod:681
msgid "The size in SI 10**18 byte units."
msgstr "Розмір у одиницях СІ: 10**18 байтів."

#. type: =item
#: ../fish/guestfish.pod:683
msgid "B<Z> or B<ZiB>"
msgstr "B<Z> або B<ZiB>"

#. type: textblock
#: ../fish/guestfish.pod:685
msgid "The size in zettabytes (multiplied by 2**70)."
msgstr "Розмір у зетабайтах (у одному зетабайті 2**70 байтів)."

#. type: =item
#: ../fish/guestfish.pod:687
msgid "B<ZB>"
msgstr "B<ZB>"

#. type: textblock
#: ../fish/guestfish.pod:689
msgid "The size in SI 10**21 byte units."
msgstr "Розмір у одиницях СІ: 10**21 байтів."

#. type: =item
#: ../fish/guestfish.pod:691
msgid "B<Y> or B<YiB>"
msgstr "B<Y> або B<YiB>"

#. type: textblock
#: ../fish/guestfish.pod:693
msgid "The size in yottabytes (multiplied by 2**80)."
msgstr "Розмір у йотабайтах (у одному йотабайті 2**80 байтів)."

#. type: =item
#: ../fish/guestfish.pod:695
msgid "B<YB>"
msgstr "B<YB>"

#. type: textblock
#: ../fish/guestfish.pod:697
msgid "The size in SI 10**24 byte units."
msgstr "Розмір у одиницях СІ: 10**24 байтів."

#. type: verbatim
#: ../fish/guestfish.pod:703
#, no-wrap
msgid ""
" truncate-size /file 1G\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:705
msgid "would truncate the file to 1 gigabyte."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:707
msgid ""
"Be careful because a few commands take sizes in kilobytes or megabytes (eg. "
"the parameter to L</memsize> is specified in megabytes already).  Adding a "
"suffix will probably not do what you expect."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:711
msgid "OCTAL AND HEXADECIMAL NUMBERS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:713
msgid ""
"For specifying the radix (base) use the C convention: C<0> to prefix an "
"octal number or C<0x> to prefix a hexadecimal number.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:716
#, no-wrap
msgid ""
" 1234      decimal number 1234\n"
" 02322     octal number, equivalent to decimal 1234\n"
" 0x4d2     hexadecimal number, equivalent to decimal 1234\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:720
msgid ""
"When using the C<chmod> command, you almost always want to specify an octal "
"number for the mode, and you must prefix it with C<0> (unlike the Unix "
"L<chmod(1)> program):"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:724
#, no-wrap
msgid ""
" chmod 0777 /public  # OK\n"
" chmod 777 /public   # WRONG! This is mode 777 decimal = 01411 octal.\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:727
msgid ""
"Commands that return numbers usually print them in decimal, but some "
"commands print numbers in other radices (eg. C<umask> prints the mode in "
"octal, preceded by C<0>)."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:731
msgid "WILDCARDS AND GLOBBING"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:733
msgid ""
"Neither guestfish nor the underlying guestfs API performs wildcard expansion "
"(globbing) by default.  So for example the following will not do what you "
"expect:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:737
#, no-wrap
msgid ""
" rm-rf /home/*\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:739
msgid ""
"Assuming you don't have a directory called literally C</home/*> then the "
"above command will return an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:742
msgid "To perform wildcard expansion, use the C<glob> command."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:744
#, no-wrap
msgid ""
" glob rm-rf /home/*\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:746
msgid ""
"runs C<rm-rf> on each path that matches (ie. potentially running the command "
"many times), equivalent to:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:749
#, no-wrap
msgid ""
" rm-rf /home/jim\n"
" rm-rf /home/joe\n"
" rm-rf /home/mary\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:753
msgid "C<glob> only works on simple guest paths and not on device names."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:755
msgid ""
"If you have several parameters, each containing a wildcard, then glob will "
"perform a Cartesian product."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:758
msgid "COMMENTS"
msgstr "КОМЕНТАРІ"

#. type: textblock
#: ../fish/guestfish.pod:760
msgid ""
"Any line which starts with a I<#> character is treated as a comment and "
"ignored.  The I<#> can optionally be preceded by whitespace, but B<not> by a "
"command.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:764
#, no-wrap
msgid ""
" # this is a comment\n"
"         # this is a comment\n"
" foo # NOT a comment\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:768
msgid "Blank lines are also ignored."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:770
msgid "RUNNING COMMANDS LOCALLY"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:772
msgid ""
"Any line which starts with a I<!> character is treated as a command sent to "
"the local shell (C</bin/sh> or whatever L<system(3)> uses).  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:776
#, no-wrap
msgid ""
" !mkdir local\n"
" tgz-out /remote local/remote-data.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:779
msgid ""
"will create a directory C<local> on the host, and then export the contents "
"of C</remote> on the mounted filesystem to C<local/remote-data.tar.gz>.  "
"(See C<tgz-out>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:783
msgid ""
"To change the local directory, use the C<lcd> command.  C<!cd> will have no "
"effect, due to the way that subprocesses work in Unix."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:786
msgid "LOCAL COMMANDS WITH INLINE EXECUTION"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:788
msgid ""
"If a line starts with I<E<lt>!> then the shell command is executed (as for "
"I<!>), but subsequently any output (stdout) of the shell command is parsed "
"and executed as guestfish commands."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:792
msgid ""
"Thus you can use shell script to construct arbitrary guestfish commands "
"which are then parsed by guestfish."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:795
msgid ""
"For example it is tedious to create a sequence of files (eg. C</foo.1> "
"through C</foo.100>) using guestfish commands alone.  However this is simple "
"if we use a shell script to create the guestfish commands for us:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:800
#, no-wrap
msgid ""
" <! for n in `seq 1 100`; do echo write /foo.$n $n; done\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:802
msgid "or with names like C</foo.001>:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:804
#, no-wrap
msgid ""
" <! for n in `seq 1 100`; do printf \"write /foo.%03d %d\\n\" $n $n; done\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:806
msgid ""
"When using guestfish interactively it can be helpful to just run the shell "
"script first (ie. remove the initial C<E<lt>> character so it is just an "
"ordinary I<!> local command), see what guestfish commands it would run, and "
"when you are happy with those prepend the C<E<lt>> character to run the "
"guestfish commands for real."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:812
msgid "PIPES"
msgstr "КАНАЛИ"

#. type: textblock
#: ../fish/guestfish.pod:814
msgid ""
"Use C<command E<lt>spaceE<gt> | command> to pipe the output of the first "
"command (a guestfish command) to the second command (any host command).  For "
"example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:818
#, no-wrap
msgid ""
" cat /etc/passwd | awk -F: '$3 == 0 { print }'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:820
msgid ""
"(where C<cat> is the guestfish cat command, but C<awk> is the host awk "
"program).  The above command would list all accounts in the guest filesystem "
"which have UID 0, ie. root accounts including backdoors.  Other examples:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:825
#, no-wrap
msgid ""
" hexdump /bin/ls | head\n"
" list-devices | tail -1\n"
" tgz-out / - | tar ztf -\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:829
msgid ""
"The space before the pipe symbol is required, any space after the pipe "
"symbol is optional.  Everything after the pipe symbol is just passed "
"straight to the host shell, so it can contain redirections, globs and "
"anything else that makes sense on the host side."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:834
msgid ""
"To use a literal argument which begins with a pipe symbol, you have to quote "
"it, eg:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:837
#, no-wrap
msgid ""
" echo \"|\"\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:839
msgid "HOME DIRECTORIES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:841
msgid ""
"If a parameter starts with the character C<~> then the tilde may be expanded "
"as a home directory path (either C<~> for the current user's home directory, "
"or C<~user> for another user)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:845
msgid ""
"Note that home directory expansion happens for users known I<on the host>, "
"not in the guest filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:848
msgid ""
"To use a literal argument which begins with a tilde, you have to quote it, "
"eg:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:851
#, no-wrap
msgid ""
" echo \"~\"\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:853 ../src/guestfs.pod:563
msgid "ENCRYPTED DISKS"
msgstr "ЗАШИФРОВАНІ ДИСКИ"

#. type: textblock
#: ../fish/guestfish.pod:855
msgid ""
"Libguestfs has some support for Linux guests encrypted according to the "
"Linux Unified Key Setup (LUKS) standard, which includes nearly all whole "
"disk encryption systems used by modern Linux guests.  Currently only LVM-on-"
"LUKS is supported."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:860
msgid "Identify encrypted block devices and partitions using L</vfs-type>:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:862
#, no-wrap
msgid ""
" ><fs> vfs-type /dev/sda2\n"
" crypto_LUKS\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:865
msgid ""
"Then open those devices using L</luks-open>.  This creates a device-mapper "
"device called C</dev/mapper/luksdev>."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:868
#, no-wrap
msgid ""
" ><fs> luks-open /dev/sda2 luksdev\n"
" Enter key or passphrase (\"key\"): <enter the passphrase>\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:871
msgid ""
"Finally you have to tell LVM to scan for volume groups on the newly created "
"mapper device:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:874
#, no-wrap
msgid ""
" vgscan\n"
" vg-activate-all true\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:877
msgid "The logical volume(s) can now be mounted in the usual way."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:879
msgid ""
"Before closing a LUKS device you must unmount any logical volumes on it and "
"deactivate the volume groups by calling C<vg-activate false VG> on each "
"one.  Then you can close the mapper device:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:883
#, no-wrap
msgid ""
" vg-activate false /dev/VG\n"
" luks-close /dev/mapper/luksdev\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:888
msgid ""
"If a path is prefixed with C<win:> then you can use Windows-style drive "
"letters and paths (with some limitations).  The following commands are "
"equivalent:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:892
#, no-wrap
msgid ""
" file /WINDOWS/system32/config/system.LOG\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:894
#, no-wrap
msgid ""
" file win:\\windows\\system32\\config\\system.log\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:896
#, no-wrap
msgid ""
" file WIN:C:\\Windows\\SYSTEM32\\CONFIG\\SYSTEM.LOG\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:898
msgid ""
"The parameter is rewritten \"behind the scenes\" by looking up the position "
"where the drive is mounted, prepending that to the path, changing all "
"backslash characters to forward slash, then resolving the result using L</"
"case-sensitive-path>.  For example if the E: drive was mounted on C</e> then "
"the parameter might be rewritten like this:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:904
#, no-wrap
msgid ""
" win:e:\\foo\\bar => /e/FOO/bar\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:906
msgid "This only works in argument positions that expect a path."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:908
msgid "UPLOADING AND DOWNLOADING FILES"
msgstr "ВИВАНТАЖЕННЯ ТА ОТРИМАННЯ ФАЙЛІВ"

#. type: textblock
#: ../fish/guestfish.pod:910
msgid ""
"For commands such as C<upload>, C<download>, C<tar-in>, C<tar-out> and "
"others which upload from or download to a local file, you can use the "
"special filename C<-> to mean \"from stdin\" or \"to stdout\".  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:914
#, no-wrap
msgid ""
" upload - /foo\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:916
msgid ""
"reads stdin and creates from that a file C</foo> in the disk image, and:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:919
#, no-wrap
msgid ""
" tar-out /etc - | tar tf -\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:921
msgid ""
"writes the tarball to stdout and then pipes that into the external \"tar\" "
"command (see L</PIPES>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:924
msgid ""
"When using C<-> to read from stdin, the input is read up to the end of "
"stdin.  You can also use a special \"heredoc\"-like syntax to read up to "
"some arbitrary end marker:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:928
#, no-wrap
msgid ""
" upload -<<END /foo\n"
" input line 1\n"
" input line 2\n"
" input line 3\n"
" END\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:934
msgid ""
"Any string of characters can be used instead of C<END>.  The end marker must "
"appear on a line of its own, without any preceding or following characters "
"(not even spaces)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:938
msgid ""
"Note that the C<-E<lt>E<lt>> syntax only applies to parameters used to "
"upload local files (so-called \"FileIn\" parameters in the generator)."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:941
msgid "EXIT ON ERROR BEHAVIOUR"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:943
msgid ""
"By default, guestfish will ignore any errors when in interactive mode (ie. "
"taking commands from a human over a tty), and will exit on the first error "
"in non-interactive mode (scripts, commands given on the command line)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:948
msgid ""
"If you prefix a command with a I<-> character, then that command will not "
"cause guestfish to exit, even if that (one) command returns an error."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:952
msgid "REMOTE CONTROL GUESTFISH OVER A SOCKET"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:954
msgid ""
"Guestfish can be remote-controlled over a socket.  This is useful "
"particularly in shell scripts where you want to make several different "
"changes to a filesystem, but you don't want the overhead of starting up a "
"guestfish process each time."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:959
msgid "Start a guestfish server process using:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:961
#, no-wrap
msgid ""
" eval \"`guestfish --listen`\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:963
msgid "and then send it commands by doing:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:965
#, no-wrap
msgid ""
" guestfish --remote cmd [...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:967
msgid "To cause the server to exit, send it the exit command:"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:971
msgid ""
"Note that the server will normally exit if there is an error in a command.  "
"You can change this in the usual way.  See section L</EXIT ON ERROR "
"BEHAVIOUR>."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:975
msgid "CONTROLLING MULTIPLE GUESTFISH PROCESSES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:977
msgid ""
"The C<eval> statement sets the environment variable C<$GUESTFISH_PID>, which "
"is how the I<--remote> option knows where to send the commands.  You can "
"have several guestfish listener processes running using:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:981
#, no-wrap
msgid ""
" eval \"`guestfish --listen`\"\n"
" pid1=$GUESTFISH_PID\n"
" eval \"`guestfish --listen`\"\n"
" pid2=$GUESTFISH_PID\n"
" ...\n"
" guestfish --remote=$pid1 cmd\n"
" guestfish --remote=$pid2 cmd\n"
"\n"
msgstr ""
" eval \"`guestfish --listen`\"\n"
" pid1=$GUESTFISH_PID\n"
" eval \"`guestfish --listen`\"\n"
" pid2=$GUESTFISH_PID\n"
" ...\n"
" guestfish --remote=$pid1 cmd\n"
" guestfish --remote=$pid2 cmd\n"
"\n"

#. type: =head2
#: ../fish/guestfish.pod:989
msgid "REMOTE CONTROL AND CSH"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:991
msgid ""
"When using csh-like shells (csh, tcsh etc) you have to add the I<--csh> "
"option:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:994
#, no-wrap
msgid ""
" eval \"`guestfish --listen --csh`\"\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:996
msgid "REMOTE CONTROL DETAILS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:998
msgid ""
"Remote control happens over a Unix domain socket called C</tmp/.guestfish-"
"$UID/socket-$PID>, where C<$UID> is the effective user ID of the process, "
"and C<$PID> is the process ID of the server."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1002
msgid "Guestfish client and server versions must match exactly."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1004
msgid ""
"Older versions of guestfish were vulnerable to CVE-2013-4419 (see "
"L<guestfs(3)/CVE-2013-4419>).  This is fixed in the current version."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1007
msgid "USING REMOTE CONTROL ROBUSTLY FROM SHELL SCRIPTS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1009
msgid ""
"From Bash, you can use the following code which creates a guestfish "
"instance, correctly quotes the command line, handles failure to start, and "
"cleans up guestfish when the script exits:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1017
#, no-wrap
msgid ""
" guestfish[0]=\"guestfish\"\n"
" guestfish[1]=\"--listen\"\n"
" guestfish[2]=\"--ro\"\n"
" guestfish[3]=\"-a\"\n"
" guestfish[4]=\"disk.img\"\n"
" \n"
msgstr ""
" guestfish[0]=\"guestfish\"\n"
" guestfish[1]=\"--listen\"\n"
" guestfish[2]=\"--ro\"\n"
" guestfish[3]=\"-a\"\n"
" guestfish[4]=\"disk.img\"\n"
" \n"

#. type: verbatim
#: ../fish/guestfish.pod:1023
#, no-wrap
msgid ""
" GUESTFISH_PID=\n"
" eval $(\"${guestfish[@]}\")\n"
" if [ -z \"$GUESTFISH_PID\" ]; then\n"
"     echo \"error: guestfish didn't start up, see error messages above\"\n"
"     exit 1\n"
" fi\n"
" \n"
msgstr ""
" GUESTFISH_PID=\n"
" eval $(\"${guestfish[@]}\")\n"
" if [ -z \"$GUESTFISH_PID\" ]; then\n"
"     echo \"error: guestfish didn't start up, see error messages above\"\n"
"     exit 1\n"
" fi\n"
" \n"

#. type: verbatim
#: ../fish/guestfish.pod:1030
#, no-wrap
msgid ""
" cleanup_guestfish ()\n"
" {\n"
"     guestfish --remote -- exit >/dev/null 2>&1 ||:\n"
" }\n"
" trap cleanup_guestfish EXIT ERR\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1036
#, no-wrap
msgid ""
" guestfish --remote -- run\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1038
#, no-wrap
msgid ""
" # ...\n"
"\n"
msgstr ""
" # ...\n"
"\n"

#. type: =head2
#: ../fish/guestfish.pod:1040
msgid "REMOTE CONTROL DOES NOT WORK WITH I<-a> ETC. OPTIONS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1042
msgid ""
"Options such as I<-a>, I<--add>, I<-N>, I<--new> etc don't interact properly "
"with remote support.  They are processed locally, and not sent through to "
"the remote guestfish.  In particular this won't do what you expect:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1047
#, no-wrap
msgid ""
" guestfish --remote --add disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1049
msgid "Don't use these options.  Use the equivalent commands instead, eg:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1051
#, no-wrap
msgid ""
" guestfish --remote add-drive disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1055
#, no-wrap
msgid ""
" guestfish --remote\n"
" ><fs> add disk.img\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1058
msgid "REMOTE CONTROL RUN COMMAND HANGING"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1060
msgid ""
"Using the C<run> (or C<launch>) command remotely in a command substitution "
"context hangs, ie. don't do (note the backquotes):"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1063
#, no-wrap
msgid ""
" a=`guestfish --remote run`\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1065
msgid ""
"Since the C<run> command produces no output on stdout, this is not useful "
"anyway.  For further information see L<https://bugzilla.redhat.com/show_bug."
"cgi?id=592910>."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1069
msgid "PREPARED DISK IMAGES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1071
msgid ""
"Use the I<-N [filename=]type> or I<--new [filename=]type> parameter to "
"select one of a set of preformatted disk images that guestfish can make for "
"you to save typing.  This is particularly useful for testing purposes.  This "
"option is used instead of the I<-a> option, and like I<-a> can appear "
"multiple times (and can be mixed with I<-a>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1077
msgid ""
"The new disk is called C<test1.img> for the first I<-N>, C<test2.img> for "
"the second and so on.  Existing files in the current directory are "
"I<overwritten>.  You can use a different filename by specifying C<filename=> "
"before the type (see examples below)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1082
msgid ""
"The type briefly describes how the disk should be sized, partitioned, how "
"filesystem(s) should be created, and how content should be added.  "
"Optionally the type can be followed by extra parameters, separated by C<:> "
"(colon) characters.  For example, I<-N fs> creates a default 100MB, sparsely-"
"allocated disk, containing a single partition, with the partition formatted "
"as ext2.  I<-N fs:ext4:1G> is the same, but for an ext4 filesystem on a 1GB "
"disk instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1090
msgid ""
"Note that the prepared filesystem is not mounted.  You would usually have to "
"use the C<mount /dev/sda1 /> command or add the I<-m /dev/sda1> option."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1094
msgid ""
"If any I<-N> or I<--new> options are given, the libguestfs appliance is "
"automatically launched."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1099
msgid ""
"Create a 100MB disk with an ext4-formatted partition, called C<test1.img> in "
"the current directory:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1102
#, no-wrap
msgid ""
" guestfish -N fs:ext4\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1104
msgid "Create a 32MB disk with a VFAT-formatted partition, and mount it:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1106
#, no-wrap
msgid ""
" guestfish -N fs:vfat:32M -m /dev/sda1\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1108
msgid "Create a blank 200MB disk:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1110
#, no-wrap
msgid ""
" guestfish -N disk:200M\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1112
msgid ""
"Create a blank 200MB disk called C<blankdisk.img> (instead of C<test1.img>):"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1115
#, no-wrap
msgid ""
" guestfish -N blankdisk.img=disk:200M\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1117
msgid "__PREPOPTS__"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1119
msgid "ADDING REMOTE STORAGE"
msgstr "ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА"

#. type: textblock
#: ../fish/guestfish.pod:1121
msgid ""
"I<For API-level documentation on this topic, see L<guestfs(3)/"
"guestfs_add_drive_opts> and L<guestfs(3)/REMOTE STORAGE>>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1125
msgid ""
"On the command line, you can use the I<-a> option to add network block "
"devices using a URI-style format, for example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1128
#, no-wrap
msgid ""
" guestfish -a ssh://root@example.com/disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1130
msgid ""
"URIs I<cannot> be used with the L</add> command.  The equivalent command "
"using the API directly is:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1133
#, no-wrap
msgid ""
" ><fs> add /disk.img protocol:ssh server:tcp:example.com username:root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1135
msgid "The possible I<-a URI> formats are described below."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1137
msgid "B<-a disk.img>"
msgstr "B<-a disk.img>"

#. type: =head2
#: ../fish/guestfish.pod:1139
msgid "B<-a file:///path/to/disk.img>"
msgstr "B<-a file:///шлях/на/диску.img>"

#. type: textblock
#: ../fish/guestfish.pod:1141
msgid "Add the local disk image (or device) called C<disk.img>."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1143
msgid "B<-a ftp://[user@]example.com[:port]/disk.img>"
msgstr "B<-a ftp://[user@]example.com[:port]/disk.img>"

#. type: =head2
#: ../fish/guestfish.pod:1145
msgid "B<-a ftps://[user@]example.com[:port]/disk.img>"
msgstr "B<-a ftps://[user@]example.com[:порт]/disk.img>"

#. type: =head2
#: ../fish/guestfish.pod:1147
msgid "B<-a http://[user@]example.com[:port]/disk.img>"
msgstr "B<-a http://[user@]example.com[:порт]/disk.img>"

#. type: =head2
#: ../fish/guestfish.pod:1149
msgid "B<-a https://[user@]example.com[:port]/disk.img>"
msgstr "B<-a https://[user@]example.com[:порт]/disk.img>"

#. type: =head2
#: ../fish/guestfish.pod:1151
msgid "B<-a tftp://[user@]example.com[:port]/disk.img>"
msgstr "B<-a tftp://[user@]example.com[:порт]/disk.img>"

#. type: textblock
#: ../fish/guestfish.pod:1153
msgid "Add a disk located on a remote FTP, HTTP or TFTP server."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1155 ../fish/guestfish.pod:1165
#: ../fish/guestfish.pod:1173 ../fish/guestfish.pod:1207
#: ../fish/guestfish.pod:1219 ../fish/guestfish.pod:1229
msgid "The equivalent API command would be:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1157
#, no-wrap
msgid ""
" ><fs> add /disk.img protocol:(ftp|...) server:tcp:example.com\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1159
msgid "B<-a gluster://example.com[:port]/volname/image>"
msgstr "B<-a gluster://example.com[:порт]/назва_тому/образ>"

#. type: textblock
#: ../fish/guestfish.pod:1161
msgid "Add a disk image located on GlusterFS storage."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1163
msgid "The server is the one running C<glusterd>, and may be C<localhost>."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1167
#, no-wrap
msgid ""
" ><fs> add volname/image protocol:gluster server:tcp:example.com\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1169
msgid "B<-a iscsi://example.com[:port]/target-iqn-name[/lun]>"
msgstr "B<-a iscsi://example.com[:порт]/назваt-iqn-призначення[/lun]>"

#. type: textblock
#: ../fish/guestfish.pod:1171
msgid "Add a disk located on an iSCSI server."
msgstr "Додати диск з сервера iSCSI."

#. type: verbatim
#: ../fish/guestfish.pod:1175
#, no-wrap
msgid ""
" ><fs> add target-iqn-name/lun protocol:iscsi server:tcp:example.com\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1177
msgid "B<-a nbd://example.com[:port]>"
msgstr "B<-a nbd://example.com[:порт]>"

#. type: =head2
#: ../fish/guestfish.pod:1179
msgid "B<-a nbd://example.com[:port]/exportname>"
msgstr "B<-a nbd://example.com[:порт]/назва_для_експортування>"

#. type: =head2
#: ../fish/guestfish.pod:1181
msgid "B<-a nbd://?socket=/socket>"
msgstr "B<-a nbd://?socket=/сокет>"

#. type: =head2
#: ../fish/guestfish.pod:1183
msgid "B<-a nbd:///exportname?socket=/socket>"
msgstr "B<-a nbd:///exportname?socket=/socket>"

#. type: textblock
#: ../fish/guestfish.pod:1185
msgid "Add a disk located on Network Block Device (nbd) storage."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1187
msgid ""
"The I</exportname> part of the URI specifies an NBD export name, but is "
"usually left empty."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1190
msgid ""
"The optional I<?socket> parameter can be used to specify a Unix domain "
"socket that we talk to the NBD server over.  Note that you cannot mix server "
"name (ie. TCP/IP) and socket path."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1194
msgid "The equivalent API command would be (no export name):"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1196
#, no-wrap
msgid ""
" ><fs> add \"\" protocol:nbd server:[tcp:example.com|unix:/socket]\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1198
msgid "B<-a rbd:///pool/disk>"
msgstr "B<-a rbd:///буфер/диск>"

#. type: =head2
#: ../fish/guestfish.pod:1200
msgid "B<-a rbd://example.com[:port]/pool/disk>"
msgstr "B<-a rbd://example.com[:порт]/буфер/диск>"

#. type: textblock
#: ../fish/guestfish.pod:1202
msgid "Add a disk image located on a Ceph (RBD/librbd) storage volume."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1204
msgid ""
"Although libguestfs and Ceph supports multiple servers, only a single server "
"can be specified when using this URI syntax."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1209
#, no-wrap
msgid ""
" ><fs> add pool/disk protocol:rbd server:tcp:example.com:port\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1211
msgid "B<-a sheepdog://[example.com[:port]]/volume/image>"
msgstr "B<-a sheepdog://[example.com[:порт]]/том/образ>"

#. type: textblock
#: ../fish/guestfish.pod:1213
msgid "Add a disk image located on a Sheepdog volume."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1215
msgid ""
"The server name is optional.  Although libguestfs and Sheepdog supports "
"multiple servers, only at most one server can be specified when using this "
"URI syntax."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1221
#, no-wrap
msgid ""
" ><fs> add volume protocol:sheepdog [server:tcp:example.com]\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1223
msgid "B<-a ssh://[user@]example.com[:port]/disk.img>"
msgstr "B<-a ssh://[користувач@]example.com[:порт]/диск.img>"

#. type: textblock
#: ../fish/guestfish.pod:1225
msgid ""
"Add a disk image located on a remote server, accessed using the Secure Shell "
"(ssh) SFTP protocol.  SFTP is supported out of the box by all major SSH "
"servers."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1231
#, no-wrap
msgid ""
" ><fs> add /disk protocol:ssh server:tcp:example.com [username:user]\n"
"\n"
msgstr ""
" ><fs> add /disk protocol:ssh server:tcp:example.com [username:user]\n"
"\n"

#. type: =head1
#: ../fish/guestfish.pod:1233
msgid "PROGRESS BARS"
msgstr "СМУЖКИ ПОСТУПУ"

#. type: textblock
#: ../fish/guestfish.pod:1235
msgid ""
"Some (not all) long-running commands send progress notification messages as "
"they are running.  Guestfish turns these messages into progress bars."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1239
msgid ""
"When a command that supports progress bars takes longer than two seconds to "
"run, and if progress bars are enabled, then you will see one appearing below "
"the command:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1243
#, no-wrap
msgid ""
" ><fs> copy-size /large-file /another-file 2048M\n"
" / 10% [#####-----------------------------------------] 00:30\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1246
msgid ""
"The spinner on the left hand side moves round once for every progress "
"notification received from the backend.  This is a (reasonably) golden "
"assurance that the command is \"doing something\" even if the progress bar "
"is not moving, because the command is able to send the progress "
"notifications.  When the bar reaches 100% and the command finishes, the "
"spinner disappears."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1253
msgid ""
"Progress bars are enabled by default when guestfish is used interactively.  "
"You can enable them even for non-interactive modes using I<--progress-bars>, "
"and you can disable them completely using I<--no-progress-bars>."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1258
msgid "PROMPT"
msgstr "ЗАПИТ"

#. type: textblock
#: ../fish/guestfish.pod:1260
msgid ""
"You can change or add colours to the default prompt (C<E<gt>E<lt>fsE<gt>>) "
"by setting the C<GUESTFISH_PS1> environment variable.  A second string "
"(C<GUESTFISH_OUTPUT>) is printed after the command has been entered and "
"before the output, allowing you to control the colour of the output.  A "
"third string (C<GUESTFISH_INIT>)  is printed before the welcome message, "
"allowing you to control the colour of that message.  A fourth string "
"(C<GUESTFISH_RESTORE>) is printed before guestfish exits."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1269
msgid ""
"A simple prompt can be set by setting C<GUESTFISH_PS1> to an alternate "
"string:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1272
#, no-wrap
msgid ""
" $ GUESTFISH_PS1='(type a command) '\n"
" $ export GUESTFISH_PS1\n"
" $ guestfish\n"
" [...]\n"
" (type a command) ▂\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1278
msgid ""
"You can also use special escape sequences, as described in the table below:"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1283
msgid "\\\\"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1287
msgid "\\["
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1289
msgid "\\]"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1291
msgid "(These should only be used in C<GUESTFISH_PS1>.)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1293
msgid ""
"Place non-printing characters (eg. terminal control codes for colours)  "
"between C<\\[...\\]>.  What this does it to tell the L<readline(3)> library "
"that it should treat this subsequence as zero-width, so that command-line "
"redisplay, editing etc works."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1298
msgid "\\a"
msgstr "\\a"

#. type: textblock
#: ../fish/guestfish.pod:1300
msgid "A bell character."
msgstr "Символ гудка."

#. type: =item
#: ../fish/guestfish.pod:1302
msgid "\\e"
msgstr "\\e"

#. type: textblock
#: ../fish/guestfish.pod:1304
msgid "An ASCII ESC (escape) character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1306
msgid "\\n"
msgstr "\\n"

#. type: textblock
#: ../fish/guestfish.pod:1308
msgid "A newline."
msgstr "Символ розриву рядка."

#. type: =item
#: ../fish/guestfish.pod:1310
msgid "\\r"
msgstr "\\r"

#. type: textblock
#: ../fish/guestfish.pod:1312
msgid "A carriage return."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1314
msgid "\\NNN"
msgstr "\\NNN"

#. type: textblock
#: ../fish/guestfish.pod:1316
msgid "The ASCII character whose code is the octal value NNN."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1318
msgid "\\xNN"
msgstr "\\xNN"

#. type: textblock
#: ../fish/guestfish.pod:1320
msgid "The ASCII character whose code is the hex value NN."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1324
msgid "EXAMPLES OF PROMPTS"
msgstr "ПРИКЛАДИ ЗАПИТІВ"

#. type: textblock
#: ../fish/guestfish.pod:1326
msgid "Note these these require a terminal that supports ANSI escape codes."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1332
#, no-wrap
msgid ""
" GUESTFISH_PS1='\\[\\e[1;30m\\]><fs>\\[\\e[0;30m\\] '\n"
"\n"
msgstr ""
" GUESTFISH_PS1='\\[\\e[1;30m\\]><fs>\\[\\e[0;30m\\] '\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:1334
msgid "A bold black version of the ordinary prompt."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1338
#, no-wrap
msgid ""
" GUESTFISH_PS1='\\[\\e[1;32m\\]><fs>\\[\\e[0;31m\\] '\n"
" GUESTFISH_OUTPUT='\\e[0m'\n"
" GUESTFISH_RESTORE=\"$GUESTFISH_OUTPUT\"\n"
" GUESTFISH_INIT='\\e[1;34m'\n"
"\n"
msgstr ""
" GUESTFISH_PS1='\\[\\e[1;32m\\]><fs>\\[\\e[0;31m\\] '\n"
" GUESTFISH_OUTPUT='\\e[0m'\n"
" GUESTFISH_RESTORE=\"$GUESTFISH_OUTPUT\"\n"
" GUESTFISH_INIT='\\e[1;34m'\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:1343
msgid "Blue welcome text, green prompt, red commands, black command output."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1348 ../resize/virt-resize.pod:706
#: ../sparsify/virt-sparsify.pod:390 ../sysprep/virt-sysprep.pod:512
#: ../tools/virt-win-reg:618
msgid "WINDOWS 8"
msgstr "WINDOWS 8"

#. type: textblock
#: ../fish/guestfish.pod:1350
msgid ""
"Windows 8 \"fast startup\" can prevent guestfish from mounting NTFS "
"partitions.  See L<guestfs(3)/WINDOWS HIBERNATION AND WINDOWS 8 FAST "
"STARTUP>."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1354
msgid "GUESTFISH COMMANDS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1356
msgid ""
"The commands in this section are guestfish convenience commands, in other "
"words, they are not part of the L<guestfs(3)> API."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1359
msgid "help"
msgstr "help"

#. type: verbatim
#: ../fish/guestfish.pod:1361
#, no-wrap
msgid ""
" help\n"
" help cmd\n"
"\n"
msgstr ""
" help\n"
" help команда\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:1364
msgid "Without any parameter, this provides general help."
msgstr "Без параметра показує загальну довідкову інформацію."

#. type: textblock
#: ../fish/guestfish.pod:1366
msgid "With a C<cmd> parameter, this displays detailed help for that command."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1368
msgid "exit"
msgstr "exit"

#. type: =head2
#: ../fish/guestfish.pod:1370
msgid "quit"
msgstr "quit"

#. type: textblock
#: ../fish/guestfish.pod:1372
msgid "This exits guestfish.  You can also use C<^D> key."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1374
msgid "__FISH_COMMANDS__"
msgstr "__FISH_COMMANDS__"

#. type: =head1
#: ../fish/guestfish.pod:1376
msgid "COMMANDS"
msgstr "КОМАНДИ"

#. type: textblock
#: ../fish/guestfish.pod:1378 ../src/guestfs.pod:2504
msgid "__ACTIONS__"
msgstr "__ACTIONS__"

#. type: textblock
#: ../fish/guestfish.pod:1382
msgid ""
"guestfish returns 0 if the commands completed without error, or 1 if there "
"was an error."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1389
msgid "EDITOR"
msgstr "РЕДАКТОР"

#. type: textblock
#: ../fish/guestfish.pod:1391
msgid ""
"The C<edit> command uses C<$EDITOR> as the editor.  If not set, it uses "
"C<vi>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1394 ../src/guestfs.pod:4646
msgid "FEBOOTSTRAP_KERNEL"
msgstr "FEBOOTSTRAP_KERNEL"

#. type: =item
#: ../fish/guestfish.pod:1396 ../src/guestfs.pod:4648
msgid "FEBOOTSTRAP_MODULES"
msgstr "FEBOOTSTRAP_MODULES"

#. type: textblock
#: ../fish/guestfish.pod:1398 ../src/guestfs.pod:4650
msgid ""
"When using supermin E<ge> 4.1.0, these have been renamed L</SUPERMIN_KERNEL> "
"and L</SUPERMIN_MODULES>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1401
msgid "GUESTFISH_DISPLAY_IMAGE"
msgstr "GUESTFISH_DISPLAY_IMAGE"

#. type: textblock
#: ../fish/guestfish.pod:1403
msgid ""
"The C<display> command uses C<$GUESTFISH_DISPLAY_IMAGE> to display images.  "
"If not set, it uses L<display(1)>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1406
msgid "GUESTFISH_INIT"
msgstr "GUESTFISH_INIT"

#. type: textblock
#: ../fish/guestfish.pod:1408
msgid "Printed when guestfish starts.  See L</PROMPT>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1410
msgid "GUESTFISH_OUTPUT"
msgstr "GUESTFISH_OUTPUT"

#. type: textblock
#: ../fish/guestfish.pod:1412
msgid "Printed before guestfish output.  See L</PROMPT>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1414
msgid "GUESTFISH_PID"
msgstr "GUESTFISH_PID"

#. type: textblock
#: ../fish/guestfish.pod:1416
msgid ""
"Used with the I<--remote> option to specify the remote guestfish process to "
"control.  See section L</REMOTE CONTROL GUESTFISH OVER A SOCKET>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1420
msgid "GUESTFISH_PS1"
msgstr "GUESTFISH_PS1"

#. type: textblock
#: ../fish/guestfish.pod:1422
msgid "Set the command prompt.  See L</PROMPT>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1424
msgid "GUESTFISH_RESTORE"
msgstr "GUESTFISH_RESTORE"

#. type: textblock
#: ../fish/guestfish.pod:1426
msgid "Printed before guestfish exits.  See L</PROMPT>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1428
msgid "HEXEDITOR"
msgstr "HEXEDITOR"

#. type: textblock
#: ../fish/guestfish.pod:1430
msgid ""
"The L</hexedit> command uses C<$HEXEDITOR> as the external hex editor.  If "
"not specified, the external L<hexedit(1)> program is used."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1434
msgid "HOME"
msgstr "ДОМІВКА"

#. type: textblock
#: ../fish/guestfish.pod:1436
msgid ""
"If compiled with GNU readline support, various files in the home directory "
"can be used.  See L</FILES>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1439 ../src/guestfs.pod:4653
msgid "LIBGUESTFS_APPEND"
msgstr "LIBGUESTFS_APPEND"

#. type: textblock
#: ../fish/guestfish.pod:1441 ../src/guestfs.pod:4655
msgid "Pass additional options to the guest kernel."
msgstr "Передати додаткові параметри ядру гостьової системи."

#. type: =item
#: ../fish/guestfish.pod:1443 ../src/guestfs.pod:4657
msgid "LIBGUESTFS_ATTACH_METHOD"
msgstr "LIBGUESTFS_ATTACH_METHOD"

#. type: textblock
#: ../fish/guestfish.pod:1445 ../src/guestfs.pod:4659
msgid "This is the old way to set C<LIBGUESTFS_BACKEND>."
msgstr "Це старий спосіб визначити C<LIBGUESTFS_BACKEND>."

#. type: =item
#: ../fish/guestfish.pod:1447 ../src/guestfs.pod:4661
msgid "LIBGUESTFS_BACKEND"
msgstr "LIBGUESTFS_BACKEND"

#. type: textblock
#: ../fish/guestfish.pod:1449
msgid ""
"Choose the default way to create the appliance.  See L<guestfs(3)/"
"guestfs_set_backend>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1452 ../src/guestfs.pod:4666
msgid "LIBGUESTFS_BACKEND_SETTINGS"
msgstr "LIBGUESTFS_BACKEND_SETTINGS"

#. type: textblock
#: ../fish/guestfish.pod:1454
msgid ""
"A colon-separated list of backend-specific settings.  See L<guestfs(3)/"
"BACKEND>, L<guestfs(3)/BACKEND SETTINGS>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1457 ../src/guestfs.pod:4671
msgid "LIBGUESTFS_CACHEDIR"
msgstr "LIBGUESTFS_CACHEDIR"

#. type: textblock
#: ../fish/guestfish.pod:1459 ../src/guestfs.pod:4673
msgid ""
"The location where libguestfs will cache its appliance, when using a "
"supermin appliance.  The appliance is cached and shared between all handles "
"which have the same effective user ID."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1463 ../src/guestfs.pod:4677
msgid ""
"If C<LIBGUESTFS_CACHEDIR> is not set, then C<TMPDIR> is used.  If C<TMPDIR> "
"is not set, then C</var/tmp> is used."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1466
msgid "See also L</LIBGUESTFS_TMPDIR>, L</set-cachedir>."
msgstr "Див. також L</LIBGUESTFS_TMPDIR>, L</set-cachedir>."

#. type: =item
#: ../fish/guestfish.pod:1468 ../src/guestfs.pod:4682
msgid "LIBGUESTFS_DEBUG"
msgstr "LIBGUESTFS_DEBUG"

#. type: textblock
#: ../fish/guestfish.pod:1470
msgid ""
"Set C<LIBGUESTFS_DEBUG=1> to enable verbose messages.  This has the same "
"effect as using the B<-v> option."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1473 ../src/guestfs.pod:4687
msgid "LIBGUESTFS_HV"
msgstr "LIBGUESTFS_HV"

#. type: textblock
#: ../fish/guestfish.pod:1475 ../src/guestfs.pod:4689
msgid ""
"Set the default hypervisor (usually qemu) binary that libguestfs uses.  If "
"not set, then the qemu which was found at compile time by the configure "
"script is used."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1479 ../src/guestfs.pod:4695
msgid "LIBGUESTFS_MEMSIZE"
msgstr "LIBGUESTFS_MEMSIZE"

#. type: textblock
#: ../fish/guestfish.pod:1481 ../src/guestfs.pod:4697
msgid ""
"Set the memory allocated to the qemu process, in megabytes.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1484 ../src/guestfs.pod:4700
#, no-wrap
msgid ""
" LIBGUESTFS_MEMSIZE=700\n"
"\n"
msgstr ""
" LIBGUESTFS_MEMSIZE=700\n"
"\n"

#. type: =item
#: ../fish/guestfish.pod:1486 ../src/guestfs.pod:4702
msgid "LIBGUESTFS_PATH"
msgstr "LIBGUESTFS_PATH"

#. type: textblock
#: ../fish/guestfish.pod:1488
msgid ""
"Set the path that guestfish uses to search for kernel and initrd.img.  See "
"the discussion of paths in L<guestfs(3)>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1491 ../src/guestfs.pod:4707
msgid "LIBGUESTFS_QEMU"
msgstr "LIBGUESTFS_QEMU"

#. type: textblock
#: ../fish/guestfish.pod:1493 ../src/guestfs.pod:4709
msgid "This is the old way to set C<LIBGUESTFS_HV>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1495 ../src/guestfs.pod:4711
msgid "LIBGUESTFS_TMPDIR"
msgstr "LIBGUESTFS_TMPDIR"

#. type: textblock
#: ../fish/guestfish.pod:1497 ../src/guestfs.pod:4713
msgid ""
"The location where libguestfs will store temporary files used by each handle."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1500 ../src/guestfs.pod:4716
msgid ""
"If C<LIBGUESTFS_TMPDIR> is not set, then C<TMPDIR> is used.  If C<TMPDIR> is "
"not set, then C</tmp> is used."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1503
msgid "See also L</LIBGUESTFS_CACHEDIR>, L</set-tmpdir>."
msgstr "Див. також L</LIBGUESTFS_CACHEDIR>, L</set-tmpdir>."

#. type: =item
#: ../fish/guestfish.pod:1505 ../src/guestfs.pod:4721
msgid "LIBGUESTFS_TRACE"
msgstr "LIBGUESTFS_TRACE"

#. type: textblock
#: ../fish/guestfish.pod:1507
msgid "Set C<LIBGUESTFS_TRACE=1> to enable command traces."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1509
msgid "PAGER"
msgstr "РОЗБИТТЯ НА СТОРІНКИ"

#. type: textblock
#: ../fish/guestfish.pod:1511
msgid ""
"The C<more> command uses C<$PAGER> as the pager.  If not set, it uses "
"C<more>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1514 ../src/guestfs.pod:1331 ../src/guestfs.pod:4726
msgid "PATH"
msgstr "ШЛЯХ"

#. type: textblock
#: ../fish/guestfish.pod:1516
msgid ""
"Libguestfs and guestfish may run some external programs, and rely on C<"
"$PATH> being set to a reasonable value.  If using the libvirt backend, "
"libvirt will not work at all unless C<$PATH> contains the path of qemu/KVM."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1521 ../src/guestfs.pod:4734
msgid "SUPERMIN_KERNEL"
msgstr "SUPERMIN_KERNEL"

#. type: =item
#: ../fish/guestfish.pod:1523 ../src/guestfs.pod:4736
msgid "SUPERMIN_MODULES"
msgstr "SUPERMIN_MODULES"

#. type: textblock
#: ../fish/guestfish.pod:1525 ../src/guestfs.pod:4738
msgid ""
"These two environment variables allow the kernel that libguestfs uses in the "
"appliance to be selected.  If C<$SUPERMIN_KERNEL> is not set, then the most "
"recent host kernel is chosen.  For more information about kernel selection, "
"see L<supermin(1)>.  This feature is only available in supermin / "
"febootstrap E<ge> 3.8."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1531 ../sparsify/virt-sparsify.pod:399
#: ../src/guestfs.pod:4744
msgid "TMPDIR"
msgstr "ТИМЧАСОВИЙ КАТАЛОГ"

#. type: textblock
#: ../fish/guestfish.pod:1533 ../src/guestfs.pod:4746
msgid "See L</LIBGUESTFS_CACHEDIR>, L</LIBGUESTFS_TMPDIR>."
msgstr "Див. L</LIBGUESTFS_CACHEDIR>, L</LIBGUESTFS_TMPDIR>."

#. type: =item
#: ../fish/guestfish.pod:1541 ../fuse/guestmount.pod:395
#: ../rescue/virt-rescue.pod:397
msgid "$XDG_CONFIG_HOME/libguestfs/libguestfs-tools.conf"
msgstr "$XDG_CONFIG_HOME/libguestfs/libguestfs-tools.conf"

#. type: =item
#: ../fish/guestfish.pod:1543 ../fish/libguestfs-tools.conf.pod:67
#: ../fuse/guestmount.pod:397 ../rescue/virt-rescue.pod:399
msgid "$HOME/.libguestfs-tools.rc"
msgstr "$HOME/.libguestfs-tools.rc"

#. type: =item
#: ../fish/guestfish.pod:1545 ../fuse/guestmount.pod:399
#: ../rescue/virt-rescue.pod:401
msgid "$XDG_CONFIG_DIRS/libguestfs/libguestfs-tools.conf"
msgstr "$XDG_CONFIG_DIRS/libguestfs/libguestfs-tools.conf"

#. type: =item
#: ../fish/guestfish.pod:1547 ../fish/libguestfs-tools.conf.pod:77
#: ../fuse/guestmount.pod:401 ../rescue/virt-rescue.pod:403
msgid "/etc/libguestfs-tools.conf"
msgstr "/etc/libguestfs-tools.conf"

#. type: textblock
#: ../fish/guestfish.pod:1549 ../fuse/guestmount.pod:403
#: ../rescue/virt-rescue.pod:405
msgid ""
"This configuration file controls the default read-only or read-write mode "
"(I<--ro> or I<--rw>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1552 ../fuse/guestmount.pod:406
#: ../rescue/virt-rescue.pod:408
msgid "See L<libguestfs-tools.conf(5)>."
msgstr "Див. L<libguestfs-tools.conf(5)>."

#. type: =item
#: ../fish/guestfish.pod:1554
msgid "$HOME/.guestfish"
msgstr "$HOME/.guestfish"

#. type: textblock
#: ../fish/guestfish.pod:1556
msgid ""
"If compiled with GNU readline support, then the command history is saved in "
"this file."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1559
msgid "$HOME/.inputrc"
msgstr "$HOME/.inputrc"

#. type: =item
#: ../fish/guestfish.pod:1561
msgid "/etc/inputrc"
msgstr "/etc/inputrc"

#. type: textblock
#: ../fish/guestfish.pod:1563
msgid ""
"If compiled with GNU readline support, then these files can be used to "
"configure readline.  For further information, please see L<readline(3)/"
"INITIALIZATION FILE>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1567
msgid "To write rules which only apply to guestfish, use:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1569
#, no-wrap
msgid ""
" $if guestfish\n"
" ...\n"
" $endif\n"
"\n"
msgstr ""
" $if guestfish\n"
" ...\n"
" $endif\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:1573
msgid ""
"Variables that you can set in inputrc that change the behaviour of guestfish "
"in useful ways include:"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1578
msgid "completion-ignore-case (default: on)"
msgstr "completion-ignore-case (типово: on)"

#. type: textblock
#: ../fish/guestfish.pod:1580
msgid ""
"By default, guestfish will ignore case when tab-completing paths on the "
"disk.  Use:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1583
#, no-wrap
msgid ""
" set completion-ignore-case off\n"
"\n"
msgstr ""
" set completion-ignore-case off\n"
"\n"

#. type: textblock
#: ../fish/guestfish.pod:1585
msgid "to make guestfish case sensitive."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1589
msgid "test1.img"
msgstr "test1.img"

#. type: =item
#: ../fish/guestfish.pod:1591
msgid "test2.img (etc)"
msgstr "test2.img (тощо)"

#. type: textblock
#: ../fish/guestfish.pod:1593
msgid ""
"When using the I<-N> or I<--new> option, the prepared disk or filesystem "
"will be created in the file C<test1.img> in the current directory.  The "
"second use of I<-N> will use C<test2.img> and so on.  Any existing file with "
"the same name will be overwritten.  You can use a different filename by "
"using the C<filename=> prefix."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1603
msgid ""
"L<guestfs(3)>, L<http://libguestfs.org/>, L<virt-alignment-scan(1)>, L<virt-"
"builder(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-"
"customize(1)>, L<virt-df(1)>, L<virt-diff(1)>, L<virt-edit(1)>, L<virt-"
"filesystems(1)>, L<virt-inspector(1)>, L<virt-list-filesystems(1)>, L<virt-"
"list-partitions(1)>, L<virt-log(1)>, L<virt-ls(1)>, L<virt-make-fs(1)>, "
"L<virt-p2v(1)>, L<virt-rescue(1)>, L<virt-resize(1)>, L<virt-sparsify(1)>, "
"L<virt-sysprep(1)>, L<virt-tar(1)>, L<virt-tar-in(1)>, L<virt-tar-out(1)>, "
"L<virt-v2v(1)>, L<virt-win-reg(1)>, L<libguestfs-tools.conf(5)>, "
"L<display(1)>, L<hexedit(1)>, L<supermin(1)>."
msgstr ""

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:3
msgid ""
"libguestfs-tools.conf - configuration file for guestfish, guestmount, virt-"
"rescue"
msgstr ""

#. type: verbatim
#: ../fish/libguestfs-tools.conf.pod:7
#, no-wrap
msgid ""
" /etc/libguestfs-tools.conf\n"
"\n"
msgstr ""
" /etc/libguestfs-tools.conf\n"
"\n"

#. type: verbatim
#: ../fish/libguestfs-tools.conf.pod:9
#, no-wrap
msgid ""
" $XDG_CONFIG_DIRS/libguestfs/libguestfs-tools.conf\n"
"\n"
msgstr ""
" $XDG_CONFIG_DIRS/libguestfs/libguestfs-tools.conf\n"
"\n"

#. type: verbatim
#: ../fish/libguestfs-tools.conf.pod:11
#, no-wrap
msgid ""
" $HOME/.libguestfs-tools.rc\n"
"\n"
msgstr ""
" $HOME/.libguestfs-tools.rc\n"
"\n"

#. type: verbatim
#: ../fish/libguestfs-tools.conf.pod:13
#, no-wrap
msgid ""
" $XDG_CONFIG_HOME/libguestfs/libguestfs-tools.conf\n"
"\n"
msgstr ""
" $XDG_CONFIG_HOME/libguestfs/libguestfs-tools.conf\n"
"\n"

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:17
msgid ""
"C<libguestfs-tools.conf> (or C<$HOME/.libguestfs-tools.rc>) changes the "
"defaults for the following programs only:"
msgstr ""

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:24
msgid "L<guestfish(1)>"
msgstr "L<guestfish(1)>"

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:28
msgid "L<guestmount(1)>"
msgstr "L<guestmount(1)>"

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:32
msgid "L<virt-rescue(1)>"
msgstr "L<virt-rescue(1)>"

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:36
msgid ""
"There is currently only one setting which is controlled by this file.  "
"Adding (or uncommenting):"
msgstr ""

#. type: verbatim
#: ../fish/libguestfs-tools.conf.pod:39
#, no-wrap
msgid ""
" read_only = true;\n"
"\n"
msgstr ""
" read_only = true;\n"
"\n"

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:41
msgid ""
"changes these programs so they act as if the I<--ro> flag was given on the "
"command line.  You can use this to make the programs safe against accidental "
"modification of a live guest (users would have to explicitly add the I<--rw> "
"flag to modify guests).  This is not the default because it is not backwards "
"compatible.  See also L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."
msgstr ""

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:48
msgid "Note that B<the semicolon is required>."
msgstr ""

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:50
msgid ""
"This file is parsed by the libconfig library.  For more information about "
"the format, see: L<http://www.hyperrealm.com/libconfig/libconfig_manual.html>"
msgstr ""

#. type: =head1
#: ../fish/libguestfs-tools.conf.pod:54
msgid "FILE LOCATION"
msgstr "АДРЕСА ФАЙЛА"

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:56
msgid "The order of the configuration files being read is, by importance:"
msgstr ""

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:62
msgid ""
"$XDG_CONFIG_HOME/libguestfs/libguestfs-tools.conf (C<$XDG_CONFIG_HOME> is C<"
"$HOME/.config> if not set)."
msgstr ""

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:71
msgid ""
"$XDG_CONFIG_DIRS/libguestfs/libguestfs-tools.conf (where C<$XDG_CONFIG_DIRS> "
"means any of the directories in that environment variable, or just C</etc/"
"xdg> if not set)"
msgstr ""

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:81
msgid ""
"This means local users can override the system configuration by copying the "
"configuration file (or creating it anew) into C<$XDG_CONFIG_HOME/libguestfs/"
"libguestfs-tools.conf>."
msgstr ""

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:85
msgid ""
"C</etc/libguestfs-tools.conf> and C<$HOME/.libguestfs-tools.rc> are the old "
"non-XDG paths which are read for compatibility."
msgstr ""

#. type: textblock
#: ../fish/libguestfs-tools.conf.pod:90
msgid ""
"L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>, L<guestmount(1)>, L<virt-"
"rescue(1)>, L<http://libguestfs.org/>, L<http://standards.freedesktop.org/"
"basedir-spec/latest/>."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:3
msgid ""
"virt-copy-in - Copy files and directories into a virtual machine disk image."
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-in.pod:7
#, no-wrap
msgid ""
" virt-copy-in -a disk.img file|dir [file|dir ...] /destination\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-in.pod:9
#, no-wrap
msgid ""
" virt-copy-in -d domain file|dir [file|dir ...] /destination\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:13
msgid ""
"Using C<virt-copy-in> on live virtual machines can be dangerous, potentially "
"causing disk corruption.  The virtual machine must be shut down before you "
"use this command."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:19
msgid ""
"C<virt-copy-in> copies files and directories from the local disk into a "
"virtual machine disk image or named libvirt domain."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:22
msgid ""
"You can give one of more filenames and directories on the command line.  "
"Directories are copied in recursively.  The final parameter must be the "
"destination directory in the disk image which must be an absolute path "
"starting with a C</> character."
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-in.pod:31
#, no-wrap
msgid ""
" virt-copy-in -d MyGuest resolv.conf /etc\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:33 ../fish/virt-tar-in.pod:30
msgid "Upload a home directory to a guest:"
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-in.pod:35
#, no-wrap
msgid ""
" virt-copy-in -d MyGuest skel /home\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/virt-copy-in.pod:37 ../fish/virt-copy-out.pod:26
#: ../fish/virt-tar-in.pod:34 ../fish/virt-tar-out.pod:28
msgid "JUST A SHELL SCRIPT WRAPPER AROUND GUESTFISH"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:39
msgid ""
"This command is just a simple shell script wrapper around the "
"L<guestfish(1)> C<copy-in> command.  For anything more complex than a "
"trivial copy, you are probably better off using guestfish directly."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:45 ../fish/virt-copy-out.pod:34
#: ../fish/virt-tar-in.pod:42 ../fish/virt-tar-out.pod:36
msgid ""
"Since the shell script just passes options straight to guestfish, read "
"L<guestfish(1)> to see the full list of options."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:50
msgid ""
"L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>, L<virt-edit(1)>, "
"L<virt-tar-in(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:3
msgid ""
"virt-copy-out - Copy files and directories out of a virtual machine disk "
"image."
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-out.pod:7
#, no-wrap
msgid ""
" virt-copy-out -a disk.img /file|dir [/file|dir ...] localdir\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-out.pod:9
#, no-wrap
msgid ""
" virt-copy-out -d domain /file|dir [/file|dir ...] localdir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:13
msgid ""
"C<virt-copy-out> copies files and directories out of a virtual machine disk "
"image or named libvirt domain."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:16
msgid ""
"You can give one of more filenames and directories on the command line.  "
"Directories are copied out recursively."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:21
msgid "Download the home directories from a virtual machine:"
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-out.pod:23
#, no-wrap
msgid ""
" mkdir homes\n"
" virt-copy-out -d MyGuest /home homes\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:28
msgid ""
"This command is just a simple shell script wrapper around the "
"L<guestfish(1)> C<copy-out> command.  For anything more complex than a "
"trivial copy, you are probably better off using guestfish directly."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:39
msgid ""
"L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-edit(1)>, L<virt-"
"tar-in(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:3
msgid "virt-tar-in - Unpack a tarball into a virtual machine disk image."
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-in.pod:7
#, no-wrap
msgid ""
" virt-tar-in -a disk.img data.tar /destination\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-in.pod:9
#, no-wrap
msgid ""
" virt-tar-in -d domain data.tar /destination\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-in.pod:11
#, no-wrap
msgid ""
" zcat data.tar.gz | virt-tar-in -d domain - /destination\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:15
msgid ""
"Using C<virt-tar-in> on live virtual machines can be dangerous, potentially "
"causing disk corruption.  The virtual machine must be shut down before you "
"use this command."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:21
msgid ""
"C<virt-tar-in> unpacks an uncompressed tarball into a virtual machine disk "
"image or named libvirt domain."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:24
msgid ""
"The first parameter is the tar file.  Use C<-> to read the tar file from "
"standard input.  The second parameter is the absolute target directory to "
"unpack into."
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-in.pod:32
#, no-wrap
msgid ""
" virt-tar-in -d MyGuest homes.tar /home\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:36
msgid ""
"This command is just a simple shell script wrapper around the "
"L<guestfish(1)> C<tar-in> command.  For anything more complex than a trivial "
"copy, you are probably better off using guestfish directly."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:47
msgid ""
"L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
"L<virt-edit(1)>, L<virt-make-fs(1)>, L<virt-tar-out(1)>, L<http://libguestfs."
"org/>."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:3
msgid ""
"virt-tar-out - Pack a virtual machine disk image directory into a tarball."
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-out.pod:7
#, no-wrap
msgid ""
" virt-tar-out -a disk.img /dir files.tar\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-out.pod:9
#, no-wrap
msgid ""
" virt-tar-out -d domain /dir files.tar\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-out.pod:11
#, no-wrap
msgid ""
" virt-tar-out -d domain /dir - | gzip --best > files.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:15
msgid ""
"C<virt-tar-out> packs a virtual machine disk image directory into a tarball."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:18
msgid ""
"The first parameter is the absolute path of the virtual machine directory.  "
"The second parameter is the tar file to write.  Use C<-> to write to "
"standard output."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:24
msgid "Download the home directories from a guest:"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-out.pod:26
#, no-wrap
msgid ""
" virt-tar-out -d MyGuest /home - | gzip --best > homes.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:30
msgid ""
"This command is just a simple shell script wrapper around the "
"L<guestfish(1)> C<tar-out> command.  For anything more complex than a "
"trivial copy, you are probably better off using guestfish directly."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:41
msgid ""
"L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
"L<virt-edit(1)>, L<virt-tar-in(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:3
msgid "virt-format - Erase and make a blank disk"
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:7
#, no-wrap
msgid ""
" virt-format [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:11
msgid ""
"Virt-format takes an existing disk file (or it can be a host partition, LV "
"etc), B<erases all data on it>, and formats it as a blank disk.  It can "
"optionally create partition tables, empty filesystems, logical volumes and "
"more."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:16
msgid ""
"To create a disk containing data, you may be better to use L<virt-make-"
"fs(1)>.  If you are creating a blank disk to use in L<guestfish(1)>, you "
"should instead use the guestfish I<-N> option."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:20
msgid "Normal usage would be something like this:"
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:22
#, no-wrap
msgid ""
" virt-format -a disk.qcow\n"
"\n"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:24
msgid "or this:"
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:26
#, no-wrap
msgid ""
" virt-format -a /dev/VG/LV\n"
"\n"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:28
msgid ""
"C<disk.qcow> or C</dev/VG/LV> must exist already.  B<Any data on these disks "
"will be erased by these commands>.  These commands will create a single "
"empty partition covering the whole disk, with no filesystem inside it."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:33
msgid ""
"Additional parameters can be used to control the creation of partitions, "
"filesystems, etc.  The most commonly used options are:"
msgstr ""

#. type: =item
#: ../format/virt-format.pod:38
msgid "I<--filesystem=[ext3|ntfs|vfat|...]>"
msgstr "I<--filesystem=[ext3|ntfs|vfat|...]>"

#. type: textblock
#: ../format/virt-format.pod:40
msgid "Create an empty filesystem (C<ext3>, C<ntfs> etc) inside the partition."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:42
msgid "I<--lvm[=/dev/VG/LV]>"
msgstr "I<--lvm[=/dev/VG/LV]>"

#. type: textblock
#: ../format/virt-format.pod:44
msgid ""
"Create a Linux LVM2 logical volume on the disk.  When used with I<--"
"filesystem>, the filesystem is created inside the LV."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:49
msgid ""
"For more information about these and other options, see L</OPTIONS> below."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:52
msgid ""
"The format of the disk is normally auto-detected, but you can also force it "
"by using the I<--format> option (q.v.).  In situations where you do not "
"trust the existing content of the disk, then it is advisable to use this "
"option to avoid possible exploits."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:69
msgid "Add I<file>, a disk image, host partition, LV, external USB disk, etc."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:74
msgid "B<Any existing data on the disk is erased.>"
msgstr "B<Всі поточні дані на диску буде витерто.>"

#. type: =item
#: ../format/virt-format.pod:82
msgid "B<--filesystem=ext3|ntfs|vfat|...>"
msgstr "B<--filesystem=ext3|ntfs|vfat|...>"

#. type: textblock
#: ../format/virt-format.pod:84
msgid ""
"Create an empty filesystem of the specified type.  Many filesystem types are "
"supported by libguestfs."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:87
msgid "B<--filesystem=none>"
msgstr "B<--filesystem=none>"

#. type: textblock
#: ../format/virt-format.pod:89
msgid "Create no filesystem.  This is the default."
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:102
#, no-wrap
msgid ""
" virt-format --format=raw -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:106
#, no-wrap
msgid ""
" virt-format --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""

#. type: =item
#: ../format/virt-format.pod:115
msgid "B<--label=LABEL>"
msgstr "B<--label=МІТКА>"

#. type: textblock
#: ../format/virt-format.pod:117 ../make-fs/virt-make-fs.pod:183
msgid "Set the filesystem label."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:119
msgid "B<--lvm=/dev/I<VG>/I<LV>>"
msgstr "B<--lvm=/dev/I<VG>/I<LV>>"

#. type: textblock
#: ../format/virt-format.pod:121
msgid ""
"Create a Linux LVM2 logical volume called C</dev/I<VG>/I<LV>>.  You can "
"change the name of the volume group and logical volume."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:124
msgid "B<--lvm>"
msgstr "B<--lvm>"

#. type: textblock
#: ../format/virt-format.pod:126
msgid ""
"Create a Linux LVM2 logical volume with the default name (C</dev/VG/LV>)."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:129
msgid "B<--lvm=none>"
msgstr "B<--lvm=none>"

#. type: textblock
#: ../format/virt-format.pod:131
msgid "Create no logical volume.  This is the default."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:133 ../make-fs/virt-make-fs.pod:185
msgid "B<--partition>"
msgstr "B<--partition>"

#. type: textblock
#: ../format/virt-format.pod:135
msgid ""
"Create either an MBR or GPT partition covering the whole disk.  MBR is "
"chosen if the disk size is E<lt> 2 TB, GPT if E<ge> 2 TB."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:140
msgid "B<--partition=gpt>"
msgstr "B<--partition=gpt>"

#. type: textblock
#: ../format/virt-format.pod:142
msgid "Create a GPT partition."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:144
msgid "B<--partition=mbr>"
msgstr "B<--partition=mbr>"

#. type: textblock
#: ../format/virt-format.pod:146
msgid "Create an MBR partition."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:148
msgid "B<--partition=none>"
msgstr "B<--partition=none>"

#. type: textblock
#: ../format/virt-format.pod:150
msgid ""
"Create no partition table.  Note that Windows may not be able to see these "
"disks."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:165
msgid "B<--wipe>"
msgstr "B<--wipe>"

#. type: textblock
#: ../format/virt-format.pod:167
msgid ""
"Normally virt-format does not wipe data from the disk (because that takes a "
"long time).  Thus if there is data on the disk, it is only hidden and "
"partially overwritten by virt-format, and it might be recovered by disk "
"editing tools."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:172
msgid ""
"If you use this option, virt-format writes zeroes over the whole disk so "
"that previous data is not recoverable."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:183
msgid "This program returns C<0> on success, or C<1> on failure."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:187
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-make-fs(1)>, "
"L<virt-rescue(1)>, L<virt-resize(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:3
msgid ""
"guestmount - Mount a guest filesystem on the host using FUSE and libguestfs"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:7
#, no-wrap
msgid ""
" guestmount [--options] -a disk.img -m device [--ro] mountpoint\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:9
#, no-wrap
msgid ""
" guestmount [--options] -a disk.img -i [--ro] mountpoint\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:11
#, no-wrap
msgid ""
" guestmount [--options] -d Guest -i [--ro] mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:15
msgid ""
"You must I<not> use C<guestmount> in read-write mode on live virtual "
"machines.  If you do this, you risk disk corruption in the VM."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:20
msgid ""
"The guestmount program can be used to mount virtual machine filesystems and "
"other disk images on the host.  It uses libguestfs for access to the guest "
"filesystem, and FUSE (the \"filesystem in userspace\") to make it appear as "
"a mountable device."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:25
msgid ""
"Along with other options, you have to give at least one device (I<-a> "
"option) or libvirt domain (I<-d> option), and at least one mountpoint (I<-m> "
"option) or use the I<-i> inspection option or the I<--live> option.  How "
"this works is better explained in the L<guestfish(1)> manual page, or by "
"looking at the examples below."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:31
msgid ""
"FUSE lets you mount filesystems as non-root.  The mountpoint must be owned "
"by you, and the filesystem will not be visible to any other users unless you "
"make certain global configuration changes to C</etc/fuse.conf>.  To unmount "
"the filesystem, use the L<guestunmount(1)> command."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:39
msgid ""
"For a typical Windows guest which has its main filesystem on the first "
"partition:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:42
#, no-wrap
msgid ""
" guestmount -a windows.img -m /dev/sda1 --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:44
msgid ""
"For a typical Linux guest which has a /boot filesystem on the first "
"partition, and the root filesystem on a logical volume:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:47
#, no-wrap
msgid ""
" guestmount -a linux.img -m /dev/VG/LV -m /dev/sda1:/boot --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:49
msgid "To get libguestfs to detect guest mountpoints for you:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:51
#, no-wrap
msgid ""
" guestmount -a guest.img -i --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:53
msgid "For a libvirt guest called \"Guest\" you could do:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:55
#, no-wrap
msgid ""
" guestmount -d Guest -i --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:57
msgid ""
"If you don't know what filesystems are contained in a guest or disk image, "
"use L<virt-filesystems(1)> first:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:60
#, no-wrap
msgid ""
" virt-filesystems -d MyGuest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:62
msgid ""
"If you want to trace the libguestfs calls but without excessive debugging "
"information, we recommend:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:65
#, no-wrap
msgid ""
" guestmount [...] --trace /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:67
msgid "If you want to debug the program, we recommend:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:69
#, no-wrap
msgid ""
" guestmount [...] --trace --verbose /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:71
msgid "To unmount the filesystem after using it:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:73
#, no-wrap
msgid ""
" guestunmount /mnt\n"
"\n"
msgstr ""

#. type: =head1
#: ../fuse/guestmount.pod:75 ../rescue/virt-rescue.pod:94
#: ../resize/virt-resize.pod:651
msgid "NOTES"
msgstr "ПРИМІТКИ"

#. type: =head2
#: ../fuse/guestmount.pod:77
msgid "Other users cannot see the filesystem by default"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:79
msgid ""
"If you mount a filesystem as one user (eg. root), then other users will not "
"be able to see it by default.  The fix is to add the FUSE C<allow_other> "
"option when mounting:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:83
#, no-wrap
msgid ""
" sudo guestmount [...] -o allow_other /mnt\n"
"\n"
msgstr ""

#. type: =head2
#: ../fuse/guestmount.pod:85
msgid "Enabling FUSE"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:87
msgid ""
"On some distros, you may need to add yourself to a special group (eg. "
"C<fuse>) before you can use any FUSE filesystem.  This is necessary on "
"Debian and derivatives."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:91
msgid ""
"On other distros, no special group is required.  It is not necessary on "
"Fedora or Red Hat Enterprise Linux."
msgstr ""

#. type: =head2
#: ../fuse/guestmount.pod:94
msgid "fusermount error: \"Device or resource busy\""
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:96
msgid ""
"You can see this error when another process on the system jumps into the "
"mountpoint you have just created, holding it open and preventing you from "
"unmounting it.  The usual culprits are various GUI \"indexing\" programs."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:101
msgid ""
"The popular workaround for this problem is to retry the C<fusermount -u> "
"command a few times until it works (L<guestunmount(1)> does this for you).  "
"Unfortunately this isn't a reliable fix if (for example)  the mounted "
"filesystem is particularly large and the intruding program particularly "
"persistent."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:107
msgid ""
"A proper fix is to use a private mountpoint by creating a new mount "
"namespace using the Linux-specific L<clone(2)>/L<unshare(2)> flag "
"C<CLONE_NEWNS>.  Unfortunately at the moment this requires root and we would "
"also probably need to add it as a feature to guestmount."
msgstr ""

#. type: =head2
#: ../fuse/guestmount.pod:112
msgid "Race conditions possible when shutting down the connection"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:114
msgid ""
"When L<guestunmount(1)>/L<fusermount(1)> exits, guestmount may still be "
"running and cleaning up the mountpoint.  The disk image will not be fully "
"finalized."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:118
msgid "This means that scripts like the following have a nasty race condition:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:121
#, no-wrap
msgid ""
" guestmount -a disk.img -i /mnt\n"
" # copy things into /mnt\n"
" guestunmount /mnt\n"
" # immediately try to use 'disk.img' ** UNSAFE **\n"
"\n"
msgstr ""
" guestmount -a disk.img -i /mnt\n"
" # скопіювати дані до /mnt\n"
" guestunmount /mnt\n"
" # негайно спробувати використати 'disk.img' ** НЕБЕЗПЕЧНО **\n"
"\n"

#. type: textblock
#: ../fuse/guestmount.pod:126
msgid ""
"The solution is to use the I<--pid-file> option to write the guestmount PID "
"to a file, then after guestunmount spin waiting for this PID to exit."
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:130
#, no-wrap
msgid ""
" guestmount -a disk.img -i --pid-file guestmount.pid /mnt\n"
" \n"
msgstr ""
" guestmount -a disk.img -i --pid-file guestmount.pid /mnt\n"
" \n"

#. type: verbatim
#: ../fuse/guestmount.pod:132
#, no-wrap
msgid ""
" # ...\n"
" # ...\n"
" \n"
msgstr ""
" # ...\n"
" # ...\n"
" \n"

#. type: verbatim
#: ../fuse/guestmount.pod:135
#, no-wrap
msgid ""
" # Save the PID of guestmount *before* calling guestunmount.\n"
" pid=\"$(cat guestmount.pid)\"\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:138
#, no-wrap
msgid ""
" # Unmount the filesystem.\n"
" guestunmount /mnt\n"
" \n"
msgstr ""
" # Демонтувати файлову систему.\n"
" guestunmount /mnt\n"
" \n"

#. type: verbatim
#: ../fuse/guestmount.pod:141
#, no-wrap
msgid ""
" timeout=10\n"
" \n"
msgstr ""
" timeout=10\n"
" \n"

#. type: verbatim
#: ../fuse/guestmount.pod:143
#, no-wrap
msgid ""
" count=$timeout\n"
" while kill -0 \"$pid\" 2>/dev/null && [ $count -gt 0 ]; do\n"
"     sleep 1\n"
"     ((count--))\n"
" done\n"
" if [ $count -eq 0 ]; then\n"
"     echo \"$0: wait for guestmount to exit failed after $timeout seconds\"\n"
"     exit 1\n"
" fi\n"
" \n"
msgstr ""
" count=$timeout\n"
" while kill -0 \"$pid\" 2>/dev/null && [ $count -gt 0 ]; do\n"
"     sleep 1\n"
"     ((count--))\n"
" done\n"
" if [ $count -eq 0 ]; then\n"
"     echo \"$0: wait for guestmount to exit failed after $timeout seconds\"\n"
"     exit 1\n"
" fi\n"
" \n"

#. type: verbatim
#: ../fuse/guestmount.pod:153
#, no-wrap
msgid ""
" # Now it is safe to use the disk image.\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:155
msgid ""
"Note that if you use the C<guestfs_mount_local> API directly (see "
"L<guestfs(3)/MOUNT LOCAL>) then it is much easier to write a safe, race-free "
"program."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:167
msgid "Add a block device or virtual machine image."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:196
msgid "B<--dir-cache-timeout N>"
msgstr "B<--dir-cache-timeout N>"

#. type: textblock
#: ../fuse/guestmount.pod:198
msgid ""
"Set the readdir cache timeout to I<N> seconds, the default being 60 "
"seconds.  The readdir cache [actually, there are several semi-independent "
"caches] is populated after a readdir(2) call with the stat and extended "
"attributes of the files in the directory, in anticipation that they will be "
"requested soon after."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:204
msgid ""
"There is also a different attribute cache implemented by FUSE (see the FUSE "
"option I<-o attr_timeout>), but the FUSE cache does not anticipate future "
"requests, only cache existing ones."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:215 ../fuse/guestunmount.pod:74
msgid "B<--fd=FD>"
msgstr "B<--fd=FD>"

#. type: textblock
#: ../fuse/guestmount.pod:217
msgid ""
"Specify a pipe or eventfd file descriptor.  When the mountpoint is ready to "
"be used, guestmount writes a single byte to this file descriptor.  This can "
"be used in conjunction with I<--no-fork> in order to run guestmount captive "
"under another process."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:231
msgid ""
"If you have untrusted raw-format guest disk images, you should use this "
"option to specify the disk format.  This avoids a possible security problem "
"with malicious guests (CVE-2010-3851).  See also L<guestfs(3)/"
"guestfs_add_drive_opts>."
msgstr ""
"Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому "
"форматі, вам слід скористатися цим параметром для визначення формату диска. "
"Таким чином можна уникнути можливих проблем з захистом для сформованих "
"зловмисниками гостьових систем (CVE-2010-3851). Див. також <guestfs(3)/"
"guestfs_add_drive_opts>."

#. type: =item
#: ../fuse/guestmount.pod:236
msgid "B<--fuse-help>"
msgstr "B<--fuse-help>"

#. type: textblock
#: ../fuse/guestmount.pod:238
msgid "Display help on special FUSE options (see I<-o> below)."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:242 ../fuse/guestunmount.pod:81
msgid "Display brief help and exit."
msgstr "Показати короткі довідкові дані і завершити роботу."

#. type: =item
#: ../fuse/guestmount.pod:262
msgid "B<-m dev[:mountpoint[:options[:fstype]]>"
msgstr "B<-m пристрій[:точка монтування[:параметри[:тип файлової системи]]>"

#. type: textblock
#: ../fuse/guestmount.pod:266
msgid ""
"Mount the named partition or logical volume on the given mountpoint B<in the "
"guest> (this has nothing to do with mountpoints in the host)."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:269
msgid ""
"If the mountpoint is omitted, it defaults to C</>.  You have to mount "
"something on C</>."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:287
msgid "B<--no-fork>"
msgstr "B<--no-fork>"

#. type: textblock
#: ../fuse/guestmount.pod:289
msgid "Don't daemonize (or fork into the background)."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:295
msgid ""
"By default, we attempt to sync the guest disk when the FUSE mountpoint is "
"unmounted.  If you specify this option, then we don't attempt to sync the "
"disk.  See the discussion of autosync in the L<guestfs(3)> manpage."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:300
msgid "B<-o option>"
msgstr "B<-o параметр>"

#. type: =item
#: ../fuse/guestmount.pod:302
msgid "B<--option option>"
msgstr "B<--option параметр>"

#. type: textblock
#: ../fuse/guestmount.pod:304
msgid "Pass extra options to FUSE."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:306
msgid ""
"To get a list of all the extra options supported by FUSE, use the command "
"below.  Note that only the FUSE I<-o> options can be passed, and only some "
"of them are a good idea."
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:310
#, no-wrap
msgid ""
" guestmount --fuse-help\n"
"\n"
msgstr ""
" guestmount --fuse-help\n"
"\n"

#. type: textblock
#: ../fuse/guestmount.pod:312
msgid "Some potentially useful FUSE options:"
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:316
msgid "B<-o allow_other>"
msgstr "B<-o allow_other>"

#. type: textblock
#: ../fuse/guestmount.pod:318
msgid "Allow other users to see the filesystem."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:320
msgid "B<-o attr_timeout=N>"
msgstr "B<-o attr_timeout=N>"

#. type: textblock
#: ../fuse/guestmount.pod:322
msgid "Enable attribute caching by FUSE, and set the timeout to I<N> seconds."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:324
msgid "B<-o kernel_cache>"
msgstr "B<-o kernel_cache>"

#. type: textblock
#: ../fuse/guestmount.pod:326
msgid ""
"Allow the kernel to cache files (reduces the number of reads that have to go "
"through the L<guestfs(3)> API).  This is generally a good idea if you can "
"afford the extra memory usage."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:330
msgid "B<-o uid=N> B<-o gid=N>"
msgstr "B<-o uid=N> B<-o gid=N>"

#. type: textblock
#: ../fuse/guestmount.pod:332
msgid ""
"Use these options to map all UIDs and GIDs inside the guest filesystem to "
"the chosen values."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:337
msgid "B<--pid-file filename>"
msgstr "B<--pid-file назва_файла>"

#. type: textblock
#: ../fuse/guestmount.pod:339
msgid "Write the PID of the guestmount worker process to C<filename>."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:345
msgid ""
"Add devices and mount everything read-only.  Also disallow writes and make "
"the disk appear read-only to FUSE."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:348
msgid ""
"This is highly recommended if you are not going to edit the guest disk.  If "
"the guest is running and this option is I<not> supplied, then there is a "
"strong risk of disk corruption in the guest.  We try to prevent this from "
"happening, but it is not always possible."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:353 ../rescue/virt-rescue.pod:206
msgid "See also L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."
msgstr "Див. також L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."

#. type: textblock
#: ../fuse/guestmount.pod:357
msgid "Enable SELinux support for the guest."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:363
msgid "Enable verbose messages from underlying libguestfs."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:369 ../fuse/guestunmount.pod:109
msgid "Display the program version and exit."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:378 ../rescue/virt-rescue.pod:257
msgid "See L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."
msgstr "Див. L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."

#. type: =item
#: ../fuse/guestmount.pod:382
msgid "B<--trace>"
msgstr "B<--trace>"

#. type: textblock
#: ../fuse/guestmount.pod:384
msgid "Trace libguestfs calls and entry into each FUSE function."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:386
msgid ""
"This also stops the daemon from forking into the background (see I<--no-"
"fork>)."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:417
msgid ""
"L<guestunmount(1)>, L<fusermount(1)>, L<guestfish(1)>, L<virt-inspector(1)>, "
"L<virt-cat(1)>, L<virt-edit(1)>, L<virt-tar(1)>, L<libguestfs-tools."
"conf(5)>, L<guestfs(3)/MOUNT LOCAL>, L<http://libguestfs.org/>, L<http://"
"fuse.sf.net/>."
msgstr ""
"L<guestunmount(1)>, L<fusermount(1)>, L<guestfish(1)>, L<virt-inspector(1)>, "
"L<virt-cat(1)>, L<virt-edit(1)>, L<virt-tar(1)>, L<libguestfs-tools."
"conf(5)>, L<guestfs(3)/MOUNT LOCAL>, L<http://libguestfs.org/>, L<http://"
"fuse.sf.net/>."

#. type: textblock
#: ../fuse/guestunmount.pod:3
msgid "guestunmount - Unmount a guestmounted filesystem"
msgstr ""

#. type: verbatim
#: ../fuse/guestunmount.pod:7 ../fuse/guestunmount.pod:23
#, no-wrap
msgid ""
" guestunmount mountpoint\n"
"\n"
msgstr ""
" guestunmount точка_монтування\n"
"\n"

#. type: verbatim
#: ../fuse/guestunmount.pod:9
#, no-wrap
msgid ""
" guestunmount --fd=<FD> mountpoint\n"
"\n"
msgstr ""
" guestunmount --fd=<дескрипто_файла> точка монтування\n"
"\n"

#. type: textblock
#: ../fuse/guestunmount.pod:13
msgid ""
"guestunmount is a utility to clean up mounted filesystems automatically.  "
"L<guestmount(1)> mounts filesystems using libguestfs.  This program unmounts "
"the filesystem when a program or script has finished with it."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:18
msgid ""
"guestunmount is a wrapper around the FUSE L<fusermount(1)> program, which "
"must exist on the current C<PATH>."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:21
msgid "There are two ways to use guestunmount.  When called as:"
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:25
msgid "it unmounts C<mountpoint> immediately."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:27
msgid "When called as:"
msgstr ""

#. type: verbatim
#: ../fuse/guestunmount.pod:29 ../fuse/guestunmount.pod:49
#, no-wrap
msgid ""
" guestunmount --fd=FD mountpoint\n"
"\n"
msgstr ""
" guestunmount --fd=FD точка_монтування\n"
"\n"

#. type: textblock
#: ../fuse/guestunmount.pod:31
msgid ""
"it waits until the pipe C<FD> is closed.  This can be used to monitor "
"another process and clean up its mountpoint when that process exits, as "
"described below."
msgstr ""

#. type: =head2
#: ../fuse/guestunmount.pod:35
msgid "FROM PROGRAMS"
msgstr "З ПРОГРАМ"

#. type: textblock
#: ../fuse/guestunmount.pod:37
msgid ""
"You can just call C<guestunmount mountpoint> from the program, but a more "
"sophisticated way to use guestunmount is to have it monitor your program so "
"it can clean up the mount point if your program exits unexpectedly."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:42
msgid ""
"In the program, create a pipe (eg. by calling L<pipe(2)>).  Let C<FD> be the "
"file descriptor number of the read side of the pipe (ie. C<pipefd[0]>)."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:46
msgid ""
"After mounting the filesystem with L<guestmount(1)> (on C<mountpoint>), fork "
"and run guestunmount like this:"
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:51
msgid "Close the read side of the pipe in the parent process."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:53
msgid ""
"Now, when the write side of the pipe (ie. C<pipefd[1]>) is closed for any "
"reason, either explicitly or because the parent process exits, guestunmount "
"notices and unmounts the mountpoint."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:57
msgid ""
"If your operating system supports it, you should set the C<FD_CLOEXEC> flag "
"on the write side of the pipe.  This is so that other child processes don't "
"inherit the file descriptor and keep it open."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:61
msgid "Guestunmount never daemonizes itself."
msgstr ""

#. type: =head2
#: ../fuse/guestunmount.pod:63
msgid "FROM SHELL SCRIPTS"
msgstr "ЗІ СКРИПТІВ ОБОЛОНКИ"

#. type: textblock
#: ../fuse/guestunmount.pod:65
msgid ""
"Since bash doesn't provide a way to create an unnamed pipe, use a trap to "
"call guestunmount on exit like this:"
msgstr ""

#. type: verbatim
#: ../fuse/guestunmount.pod:68
#, no-wrap
msgid ""
" trap \"guestunmount mountpoint\" EXIT INT QUIT TERM\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:76
msgid ""
"Specify the pipe file descriptor to monitor, and delay cleanup until that "
"pipe is closed."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:87
msgid ""
"Don't display error messages from fusermount.  The return status is still "
"set (see L</EXIT STATUS> below)."
msgstr ""

#. type: =item
#: ../fuse/guestunmount.pod:90
msgid "B<--no-retry>"
msgstr "B<--no-retry>"

#. type: =item
#: ../fuse/guestunmount.pod:92
msgid "B<--retry=N>"
msgstr "B<--retry=N>"

#. type: textblock
#: ../fuse/guestunmount.pod:94
msgid ""
"By default, guestunmount will retry the fusermount operation up to S<5 "
"times> (that is, it will run it up to S<6 times> = S<1 try> + S<5 retries>)."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:98
msgid "Use I<--no-retry> to make guestunmount run fusermount only once."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:100
msgid "Use I<--retry=N> to make guestunmount retry C<N> times instead of 5."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:102
msgid ""
"guestunmount performs an exponential back-off between retries, waiting S<1 "
"second>, S<2 seconds>, S<4 seconds>, etc before each retry."
msgstr ""

#. type: =item
#: ../fuse/guestunmount.pod:117
msgid "C<PATH>"
msgstr "C<PATH>"

#. type: textblock
#: ../fuse/guestunmount.pod:119
msgid ""
"The L<fusermount(1)> program (supplied by FUSE) must be available on the "
"current C<PATH>."
msgstr ""

#. type: textblock
#: ../fuse/guestunmount.pod:126
msgid ""
"This program returns 0 if successful, or one of the following error codes:"
msgstr ""

#. type: =item
#: ../fuse/guestunmount.pod:131
msgid "C<1>"
msgstr "C<1>"

#. type: textblock
#: ../fuse/guestunmount.pod:133
msgid ""
"Program error, eg. could not allocate memory, could not run fusermount.  See "
"the error message printed for more information."
msgstr ""

#. type: =item
#: ../fuse/guestunmount.pod:136
msgid "C<2>"
msgstr "C<2>"

#. type: textblock
#: ../fuse/guestunmount.pod:138
msgid ""
"The mount point could not be unmounted even after retrying.  See the error "
"message printed for the underlying fusermount error."
msgstr ""

#. type: =item
#: ../fuse/guestunmount.pod:141
msgid "C<3>"
msgstr "C<3>"

#. type: textblock
#: ../fuse/guestunmount.pod:143
msgid "The mount point is not mounted."
msgstr "Точку монтування не змонтовано."

#. type: textblock
#: ../fuse/guestunmount.pod:149
msgid ""
"L<guestmount(1)>, L<fusermount(1)>, L<pipe(2)>, L<guestfs(3)/MOUNT LOCAL>, "
"L<http://libguestfs.org/>, L<http://fuse.sf.net/>."
msgstr ""
"L<guestmount(1)>, L<fusermount(1)>, L<pipe(2)>, L<guestfs(3)/MOUNT LOCAL>, "
"L<http://libguestfs.org/>, L<http://fuse.sf.net/>."

#. type: textblock
#: ../golang/examples/guestfs-golang.pod:3
msgid "guestfs-golang - How to use libguestfs from Go"
msgstr ""

#. type: verbatim
#: ../golang/examples/guestfs-golang.pod:7
#, no-wrap
msgid ""
" import \"libguestfs.org/guestfs\"\n"
" \n"
msgstr ""
" import \"libguestfs.org/guestfs\"\n"
" \n"

#. type: verbatim
#: ../golang/examples/guestfs-golang.pod:9
#, no-wrap
msgid ""
" g, errno := guestfs.Create ()\n"
" if errno != nil {\n"
"     panic (fmt.Sprintf (\"could not create handle: %s\", errno))\n"
" }\n"
" defer g.Close ()\n"
" if err := g.Add_drive (\"test.img\"); err != nil {\n"
"     panic (err)\n"
" }\n"
" if err := g.Launch (); err != nil {\n"
"     panic (err)\n"
" }\n"
" if err := g.Shutdown (); err != nil {\n"
"     panic (err)\n"
" }\n"
"\n"
msgstr ""
" g, errno := guestfs.Create ()\n"
" if errno != nil {\n"
"     panic (fmt.Sprintf (\"could not create handle: %s\", errno))\n"
" }\n"
" defer g.Close ()\n"
" if err := g.Add_drive (\"test.img\"); err != nil {\n"
"     panic (err)\n"
" }\n"
" if err := g.Launch (); err != nil {\n"
"     panic (err)\n"
" }\n"
" if err := g.Shutdown (); err != nil {\n"
"     panic (err)\n"
" }\n"
"\n"

#. type: textblock
#: ../golang/examples/guestfs-golang.pod:26
msgid ""
"This manual page documents how to call libguestfs from the Go programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../golang/examples/guestfs-golang.pod:31
msgid "IMPORTING THE MODULE"
msgstr ""

#. type: textblock
#: ../golang/examples/guestfs-golang.pod:33
msgid ""
"The module is called C<guestfs>.  The full package name to import is "
"C<libguestfs.org/guestfs>."
msgstr ""

#. type: =head2
#: ../golang/examples/guestfs-golang.pod:36
msgid "CREATING AND CLOSING THE HANDLE"
msgstr ""

#. type: textblock
#: ../golang/examples/guestfs-golang.pod:38
msgid ""
"Use either C<guestfs.Create> or C<guestfs.Create_flags> to create the "
"handle.  The handle is closed implicitly if it is garbage collected.  "
"However it is probably a good idea to close it explicitly, either by calling "
"S<C<g.Close ()>> or by deferring the same."
msgstr ""

#. type: =head2
#: ../golang/examples/guestfs-golang.pod:43 ../lua/examples/guestfs-lua.pod:74
#: ../perl/examples/guestfs-perl.pod:25
msgid "ERRORS"
msgstr "ПОМИЛКИ"

#. type: textblock
#: ../golang/examples/guestfs-golang.pod:45
msgid ""
"C<guestfs.Create> and C<guestfs.Create_flags> return a simple C<*error>, "
"which is really just a C C<errno> wrapped up in the appropriate golang "
"struct."
msgstr ""

#. type: textblock
#: ../golang/examples/guestfs-golang.pod:49
msgid ""
"All other calls return a C<*GuestfsError> which (if non-nil) is a richer "
"struct that contains the error string from libguestfs, the errno (if "
"available) and the operation which failed.  This can also be converted to a "
"string for display."
msgstr ""

#. type: =head2
#: ../golang/examples/guestfs-golang.pod:54
msgid "LIMITATIONS"
msgstr "ОБМЕЖЕННЯ"

#. type: textblock
#: ../golang/examples/guestfs-golang.pod:60
msgid "No support for events (see L<guestfs(3)/EVENTS>)."
msgstr ""

#. type: textblock
#: ../golang/examples/guestfs-golang.pod:64
msgid "UUIDs are not returned in structures."
msgstr ""

#. type: textblock
#: ../golang/examples/guestfs-golang.pod:78
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"www.golang.org/>, L<http://libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"www.golang.org/>, L<http://libguestfs.org/>."

#. type: textblock
#: ../guestfs-release-notes.pod:3
msgid "guestfs-release-notes - libguestfs Release Notes"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:7
msgid "UPDATED TO (put commit hash here)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:13
msgid ""
"<script> document.body.style.backgroundImage = \"url('draft.png')\"; "
"document.body.style.backgroundRepeat = \"no-repeat\"; </script>"
msgstr ""
"<script> document.body.style.backgroundImage = \"url('draft.png')\"; "
"document.body.style.backgroundRepeat = \"no-repeat\"; </script>"

#. type: =head1
#: ../guestfs-release-notes.pod:20
msgid "RELEASE NOTES FOR LIBGUESTFS 1.28"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.28"

#. type: textblock
#: ../guestfs-release-notes.pod:22
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.26.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: =head2
#: ../guestfs-release-notes.pod:26 ../guestfs-release-notes.pod:521
#: ../guestfs-release-notes.pod:893 ../guestfs-release-notes.pod:1205
#: ../guestfs-release-notes.pod:1562 ../guestfs-release-notes.pod:2154
#: ../guestfs-release-notes.pod:2392 ../guestfs-release-notes.pod:2532
#: ../guestfs-release-notes.pod:2701 ../guestfs-release-notes.pod:2834
#: ../guestfs-release-notes.pod:2976 ../guestfs-release-notes.pod:3118
#: ../guestfs-release-notes.pod:3285
msgid "New features"
msgstr "Нові можливості"

#. type: =head3
#: ../guestfs-release-notes.pod:28 ../guestfs-release-notes.pod:523
#: ../guestfs-release-notes.pod:903 ../guestfs-release-notes.pod:1263
msgid "Tools"
msgstr "Інструменти"

#. type: textblock
#: ../guestfs-release-notes.pod:30
msgid ""
"L<virt-v2v(1)> and L<virt-p2v(1)> are tools for converting from foreign "
"hypervisors (such as VMware or Xen) or physical machines, to KVM.  These "
"tools were previously a separate project.  The code for both tools has been "
"integrated into the libguestfs tree.  As part of the refactoring, virt-p2v "
"has been rewritten (from Ruby, now C), and virt-v2v now uses several modern "
"features of qemu which make it run many times faster than before.  L<virt-"
"v2v(1)> can import from: VMware vCenter, VMware OVA files, local disk files, "
"libvirt, RHEL 5 Xen.  It can output to: oVirt or Red Hat Enterprise "
"Virtualization (RHEV-M), OpenStack Glance, libvirt, qemu, local disk files."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:41
msgid ""
"L<virt-log(1)> is a new tool for listing log files from guests.  It supports "
"a variety of guests including Linux traditional, Linux using journal, and "
"Windows event log."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:45
msgid ""
"L<virt-builder(1)> has a new C<--machine-readable> option to make it simpler "
"to consume virt-builder from other programs."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:48
msgid "New L<virt-builder(1)> and L<virt-customize(1)> I<--chmod> option."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:50
msgid ""
"L<virt-sysprep(1)> will now remove: systemd journals, anaconda logs, lightdm "
"logs, debian-installer files, apt logs, exim logs, ConsoleKit logs, "
"firewalld logs, grubby logs, proftpd logs, libvirt/libxml logs, and several "
"other log files.  The virt-sysprep C<user-account> operation is now able to "
"remove or keep particular user accounts.  (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:57
msgid ""
"New L<guestmount(1)> I<--fd> option, allowing you to run guestmount captive "
"under another process."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:60
msgid ""
"L<virt-sparsify(1)> has a new I<--tmp> option allowing you to precisely "
"control where temporary files are stored."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:63
msgid "L<virt-sparsify(1)> can now write to a block device."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:65
msgid ""
"L<virt-customize(1)> and L<virt-sysprep(1)> now support adding firstboot "
"scripts to Windows guests."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:68
msgid ""
"L<virt-cat(1)>, L<virt-edit(1)>, L<virt-ls(1)> now support the I<-m> option, "
"allowing you to override automatic inspection of guests and instead specify "
"where to mount partitions (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:72
msgid ""
"The virt tools now have coloured output: green for OK, red for errors, blue "
"for warnings."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:75 ../guestfs-release-notes.pod:572
#: ../guestfs-release-notes.pod:934 ../guestfs-release-notes.pod:1295
msgid "Language bindings"
msgstr "Прив’язки до мов програмування"

#. type: textblock
#: ../guestfs-release-notes.pod:77
msgid "You can build a Python distribution using C<make -C python sdist>"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:79
msgid "Ruby bindings have switched from C<Test::Unit> to C<MiniTest>."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:81
msgid "The Java bindings are now compatible with OpenJDK 8 (Pino Toscano)."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:83 ../guestfs-release-notes.pod:580
#: ../guestfs-release-notes.pod:950
msgid "Inspection"
msgstr "Перевірка"

#. type: textblock
#: ../guestfs-release-notes.pod:85
msgid "Oracle Linux is returned as C<oraclelinux> (Nikos Skalkotos)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:87
msgid ""
"Linux guests which do not have C</etc/fstab> can now be handled (Pino "
"Toscano)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:90
msgid "Minix is returned as C<minix> (Pino Toscano)."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:92 ../guestfs-release-notes.pod:584
msgid "Architectures"
msgstr "Архітектури"

#. type: textblock
#: ../guestfs-release-notes.pod:94
msgid "Aarch64 (64 bit ARM) support has been added."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:96
msgid ""
"Inspection and the C<guestfs_file_architecture> call can now recognize arm "
"(32 bit) and aarch64 guests."
msgstr ""

#. type: =head2
#: ../guestfs-release-notes.pod:99 ../guestfs-release-notes.pod:593
#: ../guestfs-release-notes.pod:958 ../guestfs-release-notes.pod:1330
#: ../guestfs-release-notes.pod:1743 ../guestfs-release-notes.pod:2239
#: ../guestfs-release-notes.pod:2466 ../guestfs-release-notes.pod:2633
#: ../guestfs-release-notes.pod:2782 ../guestfs-release-notes.pod:2919
#: ../guestfs-release-notes.pod:3042 ../guestfs-release-notes.pod:3203
#: ../guestfs-release-notes.pod:3358
msgid "Security"
msgstr "Безпека"

#. type: =item
#: ../guestfs-release-notes.pod:103
msgid "CVE-2014-0191 Network usage and entity resolution in XML parsing"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:105
msgid ""
"Libguestfs previously used unsafe libxml2 APIs for parsing libvirt XML.  "
"These APIs defaulted to allowing network connections to be made when certain "
"XML documents were presented.  Using a malformed XML document it was also "
"possible to exhaust all CPU, memory or file descriptors on the machine."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:111
msgid ""
"Since the libvirt XML comes from a trusted source (the libvirt daemon)  it "
"is not thought that this could have been exploitable."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:114
msgid ""
"This was fixed in libguestfs E<ge> 1.27.9 and the fix was backported to "
"stable versions E<ge> 1.26.2, E<ge> 1.24.9, E<ge> 1.22.10 and E<ge> "
"1.20.13.  (Thanks: Dan Berrange, Pino Toscano)."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:118
msgid "Shellshock (bash CVE-2014-6271)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:120
msgid ""
"This bash bug indirectly affects libguestfs.  For more information see: "
"L<https://www.redhat.com/archives/libguestfs/2014-September/msg00252.html>"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:126 ../guestfs-release-notes.pod:622
#: ../guestfs-release-notes.pod:938 ../guestfs-release-notes.pod:1207
#: ../guestfs-release-notes.pod:2212
msgid "API"
msgstr "API"

#. type: =head2
#: ../guestfs-release-notes.pod:128 ../guestfs-release-notes.pod:628
#: ../guestfs-release-notes.pod:978 ../guestfs-release-notes.pod:1334
#: ../guestfs-release-notes.pod:1764 ../guestfs-release-notes.pod:2243
#: ../guestfs-release-notes.pod:2472 ../guestfs-release-notes.pod:2637
#: ../guestfs-release-notes.pod:2788 ../guestfs-release-notes.pod:2923
#: ../guestfs-release-notes.pod:3053 ../guestfs-release-notes.pod:3213
#: ../guestfs-release-notes.pod:3364
msgid "New APIs"
msgstr "Нові програмні інтерфейси"

#. type: =item
#: ../guestfs-release-notes.pod:132
msgid "C<guestfs_clear_backend_setting>"
msgstr "C<guestfs_clear_backend_setting>"

#. type: =item
#: ../guestfs-release-notes.pod:134
msgid "C<guestfs_get_backend_setting>"
msgstr "C<guestfs_get_backend_setting>"

#. type: =item
#: ../guestfs-release-notes.pod:136
msgid "C<guestfs_set_backend_setting>"
msgstr "C<guestfs_set_backend_setting>"

#. type: textblock
#: ../guestfs-release-notes.pod:138
msgid "Use these APIs to set individual backend settings."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:140
msgid "C<guestfs_cpio_out>"
msgstr "C<guestfs_cpio_out>"

#. type: textblock
#: ../guestfs-release-notes.pod:142
msgid "Convert a directory within the disk image to cpio format."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:144
msgid "C<guestfs_journal_get_realtime_usec>"
msgstr "C<guestfs_journal_get_realtime_usec>"

#. type: textblock
#: ../guestfs-release-notes.pod:146
msgid "Fetch precise journal times, see L<sd_journal_get_realtime_usec(3)>."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:148
msgid "C<guestfs_lstatns>"
msgstr "C<guestfs_lstatns>"

#. type: =item
#: ../guestfs-release-notes.pod:150
msgid "C<guestfs_lstatnslist>"
msgstr "C<guestfs_lstatnslist>"

#. type: =item
#: ../guestfs-release-notes.pod:152
msgid "C<guestfs_statns>"
msgstr "C<guestfs_statns>"

#. type: textblock
#: ../guestfs-release-notes.pod:154
msgid ""
"Enhanced versions of C<guestfs_lstat>, C<guestfs_lstatlist>, C<guestfs_stat> "
"which return nanosecond timestamps."
msgstr ""

#. type: =head2
#: ../guestfs-release-notes.pod:159 ../guestfs-release-notes.pod:688
#: ../guestfs-release-notes.pod:998
msgid "Build changes"
msgstr "Зміни у збиранні"

#. type: textblock
#: ../guestfs-release-notes.pod:161
msgid "Libguestfs can now be built with qemu 2.x."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:163
msgid ""
"Add support for packaging the appliance on Mageia (Joseph Wang, Thierry "
"Vignaud)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:166
msgid "Augeas is now a required dependency."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:168
msgid "Flex and bison are now required dependencies."
msgstr ""

#. type: =head2
#: ../guestfs-release-notes.pod:170 ../guestfs-release-notes.pod:710
#: ../guestfs-release-notes.pod:1035 ../guestfs-release-notes.pod:1351
#: ../guestfs-release-notes.pod:1848 ../guestfs-release-notes.pod:2273
#: ../guestfs-release-notes.pod:2482 ../guestfs-release-notes.pod:2648
#: ../guestfs-release-notes.pod:2794 ../guestfs-release-notes.pod:2930
#: ../guestfs-release-notes.pod:3066 ../guestfs-release-notes.pod:3226
#: ../guestfs-release-notes.pod:3394
msgid "Internals"
msgstr "Внутрішня частина роботи програми"

#. type: textblock
#: ../guestfs-release-notes.pod:172
msgid ""
"User-Mode Linux (UML) is no longer a supported backend (although still "
"available).  It will be supported again once someone steps in and fixes "
"various regressions and brokenness in the UML (Linux) kernel."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:176
msgid ""
"You can now connect gdb to qemu by specifying "
"C<LIBGUESTFS_BACKEND_SETTINGS=gdb>"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:179
msgid ""
"Serial BIOS (sgabios) is now used by the libvirt backend (on x86 only)  so "
"that we see early BIOS messages."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:182
msgid ""
"For the OCaml virt tools, exceptions are now handled and printed by a common "
"function."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:185
msgid ""
"A GCC warning about large stack frames is now enabled by default.  Several "
"places that used large arrays and structures on the stack have been fixed."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:189
msgid ""
"There is now a test for booting the appliance repeatedly.  Useful for "
"finding kernel leaks.  See: C<tests/qemu/qemu-boot.c>"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:192
msgid ""
"There is a test for testing the speed of various qemu features such as "
"virtio-serial uploads and block device writes.  See: C<tests/qemu/qemu-speed-"
"test.c>"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:196
msgid ""
"GCC warnings are now enabled for OCaml-C bindings in the OCaml virt tools."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:199
msgid ""
"The code for editing files used by L<virt-edit(1)>, L<guestfish(1)> C<edit> "
"command, L<virt-customize(1)> I<--edit> option and more is now shared "
"between all these utilities (thanks Pino Toscano)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:203
msgid ""
"The FUSE tests were rewritten in C to ensure finer control over how system "
"calls are tested."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:206
msgid ""
"The C<update-bugs.sh> script has been fixed so it should no longer create an "
"empty C<BUGS> file if the Bugzilla server is unavailable."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:209
msgid ""
"The L<virt-resize(1)> tests now use a stochastic method to ensure much "
"deeper and broader testing."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:212
msgid ""
"When the network is enabled, the appliance now uses DHCP to acquire an IP "
"address."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:215
msgid ""
"If libvirt is being used then the appliance will connect to C<virbr0> (can "
"be overridden by setting "
"C<LIBGUESTFS_BACKEND_SETTINGS=network_bridge=E<lt>some_bridgeE<gt>>).  This "
"enables full-featured network connections, with working ICMP, ping and so on."
msgstr ""

#. type: =head2
#: ../guestfs-release-notes.pod:221 ../guestfs-release-notes.pod:765
#: ../guestfs-release-notes.pod:1069 ../guestfs-release-notes.pod:1418
#: ../guestfs-release-notes.pod:1974 ../guestfs-release-notes.pod:2346
#: ../guestfs-release-notes.pod:2512 ../guestfs-release-notes.pod:2672
#: ../guestfs-release-notes.pod:2816 ../guestfs-release-notes.pod:2946
#: ../guestfs-release-notes.pod:3101 ../guestfs-release-notes.pod:3242
#: ../guestfs-release-notes.pod:3406
msgid "Bugs fixed"
msgstr "Виправлені вади"

#. type: textblock
#: ../guestfs-release-notes.pod:225
msgid "./bugs-in-changelog.sh 1.26.0.."
msgstr "./bugs-in-changelog.sh 1.26.0.."

#. type: =item
#: ../guestfs-release-notes.pod:231
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1148355>"
msgid "L<https://bugzilla.redhat.com/1153515>"
msgstr "L<https://bugzilla.redhat.com/1148355>"

#. type: textblock
#: ../guestfs-release-notes.pod:233
#, fuzzy
#| msgid ""
#| " unset LIBGUESTFS_BACKEND\n"
#| " guestfish get-backend\n"
#| "\n"
msgid ""
"empty (but set) LIBGUESTFS_BACKEND prints libguestfs: error: invalid backend:"
msgstr ""
" unset LIBGUESTFS_BACKEND\n"
" guestfish get-backend\n"
"\n"

#. type: =item
#: ../guestfs-release-notes.pod:235
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1144766>"
msgid "L<https://bugzilla.redhat.com/1151766>"
msgstr "L<https://bugzilla.redhat.com/1144766>"

#. type: textblock
#: ../guestfs-release-notes.pod:237
msgid ""
"libguestfs-bash-completion package contains file /usr/share/bash-completion/"
"completions/virt-log, but no _virt_log() function in that file"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:239
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1141723>"
msgid "L<https://bugzilla.redhat.com/1151738>"
msgstr "L<https://bugzilla.redhat.com/1141723>"

#. type: textblock
#: ../guestfs-release-notes.pod:241
#, fuzzy
#| msgid "typo errors in man pages"
msgid "typo error in man page of virt-edit"
msgstr "Друкарські помилки у сторінках man"

#. type: =item
#: ../guestfs-release-notes.pod:243
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1045033>"
msgid "L<https://bugzilla.redhat.com/1151033>"
msgstr "L<https://bugzilla.redhat.com/1045033>"

#. type: textblock
#: ../guestfs-release-notes.pod:245
msgid "virt-v2v conversions from VMware vCenter server run slowly"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:247
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1148072>"
msgid "L<https://bugzilla.redhat.com/1150880>"
msgstr "L<https://bugzilla.redhat.com/1148072>"

#. type: textblock
#: ../guestfs-release-notes.pod:249
msgid ""
"virt-v2v: warning: display <graphics type='sdl'> was ignored when converting "
"rhel5 guest with sdl graphics"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:251
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1138586>"
msgid "L<https://bugzilla.redhat.com/1150867>"
msgstr "L<https://bugzilla.redhat.com/1138586>"

#. type: textblock
#: ../guestfs-release-notes.pod:253
msgid ""
"'copy-file-to-file /src /dest' create file /dest even if command 'copy-file-"
"to-file /src /dest' failed"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:255
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1146815>"
msgid "L<https://bugzilla.redhat.com/1150815>"
msgstr "L<https://bugzilla.redhat.com/1146815>"

#. type: textblock
#: ../guestfs-release-notes.pod:257
msgid "Can not find \"RECURSIVE LONG LISTING\" in 'man virt-diff'"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:259
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1148072>"
msgid "L<https://bugzilla.redhat.com/1150701>"
msgstr "L<https://bugzilla.redhat.com/1148072>"

#. type: textblock
#: ../guestfs-release-notes.pod:261
msgid "virt-v2v does not fstrim data disks and non-mounted filesystems"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:263
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1146275>"
msgid "L<https://bugzilla.redhat.com/1150475>"
msgstr "L<https://bugzilla.redhat.com/1146275>"

#. type: textblock
#: ../guestfs-release-notes.pod:265
msgid "Exporting 2+ disk guest to RHEV, only one disk shows after import"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:267
msgid "L<https://bugzilla.redhat.com/1148355>"
msgstr "L<https://bugzilla.redhat.com/1148355>"

#. type: textblock
#: ../guestfs-release-notes.pod:269
msgid ""
"virt-filesystems: incorrect LVM vg name when listing Fedora 21 Alpha Atomic "
"image filesystems"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:271
msgid "L<https://bugzilla.redhat.com/1148072>"
msgstr "L<https://bugzilla.redhat.com/1148072>"

#. type: textblock
#: ../guestfs-release-notes.pod:273
msgid "Option missing --no-selinux-relabel"
msgstr "Не вистачає параметра --no-selinux-relabel"

#. type: =item
#: ../guestfs-release-notes.pod:275
msgid "L<https://bugzilla.redhat.com/1148012>"
msgstr "L<https://bugzilla.redhat.com/1148012>"

#. type: textblock
#: ../guestfs-release-notes.pod:277
msgid ""
"RFE: Allow qemu-bridge-helper to be used to implement guestfs_set_network"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:279
msgid "L<https://bugzilla.redhat.com/1146815>"
msgstr "L<https://bugzilla.redhat.com/1146815>"

#. type: textblock
#: ../guestfs-release-notes.pod:281
msgid ""
"virt-v2v prints warning: /files/etc/fstab/8/spec references unknown device "
"\"cdrom\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:283
msgid "L<https://bugzilla.redhat.com/1146275>"
msgstr "L<https://bugzilla.redhat.com/1146275>"

#. type: textblock
#: ../guestfs-release-notes.pod:285
msgid "regression setting root password with virt-builder/virt-customize"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:287
msgid "L<https://bugzilla.redhat.com/1146017>"
msgstr "L<https://bugzilla.redhat.com/1146017>"

#. type: textblock
#: ../guestfs-release-notes.pod:289
msgid ""
"virt-v2v -v -x during windows guest conversion will hang at hivex: "
"hivex_open: used block id ……"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:291
msgid "L<https://bugzilla.redhat.com/1145995>"
msgstr "L<https://bugzilla.redhat.com/1145995>"

#. type: textblock
#: ../guestfs-release-notes.pod:293
msgid ""
"Improve the error info when converting windows guest with unclean file system"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:295
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/1145995>"
msgid "L<https://bugzilla.redhat.com/1145916>"
msgstr "L<https://bugzilla.redhat.com/1145995>"

#. type: textblock
#: ../guestfs-release-notes.pod:297
msgid "virt-v2v fails to convert win7 guest"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:299
msgid "L<https://bugzilla.redhat.com/1144891>"
msgstr "L<https://bugzilla.redhat.com/1144891>"

#. type: textblock
#: ../guestfs-release-notes.pod:301
msgid "RFE: stat calls do not return nanosecond timestamps"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:303
msgid "L<https://bugzilla.redhat.com/1144766>"
msgstr "L<https://bugzilla.redhat.com/1144766>"

#. type: textblock
#: ../guestfs-release-notes.pod:305
msgid "futimens() is a no-op via guestmount"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:307
msgid "L<https://bugzilla.redhat.com/1144201>"
msgstr "L<https://bugzilla.redhat.com/1144201>"

#. type: textblock
#: ../guestfs-release-notes.pod:309
msgid ""
"guestfish can not restore terminal's output colour when exit guestfish, if "
"the terminal's background colour is black then it will make a inconvenient"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:311
msgid "L<https://bugzilla.redhat.com/1143949>"
msgstr "L<https://bugzilla.redhat.com/1143949>"

#. type: textblock
#: ../guestfs-release-notes.pod:313
msgid "virt-customize option '--password-crypto' do not work"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:315
msgid "L<https://bugzilla.redhat.com/1143887>"
msgstr "L<https://bugzilla.redhat.com/1143887>"

#. type: textblock
#: ../guestfs-release-notes.pod:317
msgid ""
"Warning shows when converting guests to rhev:chown: changing ownership of ‘/"
"tmp/v2v.u48xag/*.ovf’: Invalid argument"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:319
msgid "L<https://bugzilla.redhat.com/1143883>"
msgstr "L<https://bugzilla.redhat.com/1143883>"

#. type: textblock
#: ../guestfs-release-notes.pod:321
msgid ""
"warning shows when converting rhel7 guest:virt-v2v:could not update grub2 "
"console: aug_get: no matching node (ignored)"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:323
msgid "L<https://bugzilla.redhat.com/1143866>"
msgstr "L<https://bugzilla.redhat.com/1143866>"

#. type: textblock
#: ../guestfs-release-notes.pod:325
msgid "virt-v2v fails with error: cannot open Packages index using db5"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:327
msgid "L<https://bugzilla.redhat.com/1142416>"
msgstr "L<https://bugzilla.redhat.com/1142416>"

#. type: textblock
#: ../guestfs-release-notes.pod:329
msgid ""
"part-get-name give 'libguestfs: error: part_get_name: parted does not "
"support the machine output (-m)' error message when run 'part-get-name /dev/"
"sda 1'"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:331
msgid "L<https://bugzilla.redhat.com/1142186>"
msgstr "L<https://bugzilla.redhat.com/1142186>"

#. type: textblock
#: ../guestfs-release-notes.pod:333
msgid "virt-sysprep option '--mount-options' don't work well"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:335
msgid "L<https://bugzilla.redhat.com/1142158>"
msgstr "L<https://bugzilla.redhat.com/1142158>"

#. type: textblock
#: ../guestfs-release-notes.pod:337
msgid ""
"Illegal command 'part-get-name /dev/sda1 1' cause libguestfs appliance "
"crashed"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:339
msgid "L<https://bugzilla.redhat.com/1142004>"
msgstr "L<https://bugzilla.redhat.com/1142004>"

#. type: textblock
#: ../guestfs-release-notes.pod:341
msgid ""
"virt-v2v prints waring:WARNING:/files/boot/grub/device.map references "
"unknown device \"xvda\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:343
msgid "L<https://bugzilla.redhat.com/1141723>"
msgstr "L<https://bugzilla.redhat.com/1141723>"

#. type: textblock
#: ../guestfs-release-notes.pod:345
msgid ""
"virt-v2v: error: disk sda has no defined format shows when converting xen "
"hvm guest"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:347
msgid "L<https://bugzilla.redhat.com/1141680>"
msgstr "L<https://bugzilla.redhat.com/1141680>"

#. type: textblock
#: ../guestfs-release-notes.pod:349
msgid ""
"[RFE] virt-v2 should support convert a domain with using domain's UUID "
"instead of domain name"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:351
msgid "L<https://bugzilla.redhat.com/1141631>"
msgstr "L<https://bugzilla.redhat.com/1141631>"

#. type: textblock
#: ../guestfs-release-notes.pod:353
msgid ""
"[RFE] virt-v2 should support convert a guest to a dir-pool with using pool's "
"uuid"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:355
msgid "L<https://bugzilla.redhat.com/1141157>"
msgstr "L<https://bugzilla.redhat.com/1141157>"

#. type: textblock
#: ../guestfs-release-notes.pod:357
msgid "virt-sysprep option '--user-accounts' don't work well"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:359
msgid "L<https://bugzilla.redhat.com/1141145>"
msgstr "L<https://bugzilla.redhat.com/1141145>"

#. type: textblock
#: ../guestfs-release-notes.pod:361
msgid "virt-v2v fails to convert xen pv guests."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:363
msgid "L<https://bugzilla.redhat.com/1141113>"
msgstr "L<https://bugzilla.redhat.com/1141113>"

#. type: textblock
#: ../guestfs-release-notes.pod:365
msgid "virt-v2v fails to convert esx guests"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:367
msgid "L<https://bugzilla.redhat.com/1140946>"
msgstr "L<https://bugzilla.redhat.com/1140946>"

#. type: textblock
#: ../guestfs-release-notes.pod:369
msgid "qemu-img shows error message for backing file twice"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:371
msgid "L<https://bugzilla.redhat.com/1140894>"
msgstr "L<https://bugzilla.redhat.com/1140894>"

#. type: textblock
#: ../guestfs-release-notes.pod:373
msgid ""
"No error messages output if append '--format qcow2' after '-a guest.img', "
"guest.img is a raw format image file"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:375
msgid "L<https://bugzilla.redhat.com/1140547>"
msgstr "L<https://bugzilla.redhat.com/1140547>"

#. type: textblock
#: ../guestfs-release-notes.pod:377
msgid "virt-builder option '--format' don't work well"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:379
msgid "L<https://bugzilla.redhat.com/1140156>"
msgstr "L<https://bugzilla.redhat.com/1140156>"

#. type: textblock
#: ../guestfs-release-notes.pod:381
msgid "RFE: Export to RHEV data domain"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:383
msgid "L<https://bugzilla.redhat.com/1140050>"
msgstr "L<https://bugzilla.redhat.com/1140050>"

#. type: textblock
#: ../guestfs-release-notes.pod:385
msgid "No error shows when multiple conflicting options used with virt-v2v"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:387
msgid "L<https://bugzilla.redhat.com/1139973>"
msgstr "L<https://bugzilla.redhat.com/1139973>"

#. type: textblock
#: ../guestfs-release-notes.pod:389
msgid ""
"Improve the error info when converting xen guest with no passwordless SSH "
"access configured"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:391
msgid "L<https://bugzilla.redhat.com/1139543>"
msgstr "L<https://bugzilla.redhat.com/1139543>"

#. type: textblock
#: ../guestfs-release-notes.pod:393
msgid "Improve the error info when converting guest with no space left"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:395
msgid "L<https://bugzilla.redhat.com/1138586>"
msgstr "L<https://bugzilla.redhat.com/1138586>"

#. type: textblock
#: ../guestfs-release-notes.pod:397
msgid "No error shows when converting running guest with virt-v2v"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:399
msgid "L<https://bugzilla.redhat.com/1138184>"
msgstr "L<https://bugzilla.redhat.com/1138184>"

#. type: textblock
#: ../guestfs-release-notes.pod:401
msgid ""
"virt-v2v will fail when converting guests with initramfs-*kdump.img under /"
"boot"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:403
msgid "L<https://bugzilla.redhat.com/1138182>"
msgstr "L<https://bugzilla.redhat.com/1138182>"

#. type: textblock
#: ../guestfs-release-notes.pod:405
msgid "xen guest will be kernel panic after converted by virt-v2v"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:407
msgid "L<https://bugzilla.redhat.com/1130189>"
msgstr "L<https://bugzilla.redhat.com/1130189>"

#. type: textblock
#: ../guestfs-release-notes.pod:409
msgid "Annoying message about permissions of /dev/kvm"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:411
msgid "L<https://bugzilla.redhat.com/1123007>"
msgstr "L<https://bugzilla.redhat.com/1123007>"

#. type: textblock
#: ../guestfs-release-notes.pod:413
msgid ""
"libguestfs 'direct' backend should close file descriptors before exec-ing "
"qemu to avoid leaking !O_CLOEXEC fds"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:415
msgid "L<https://bugzilla.redhat.com/1122557>"
msgstr "L<https://bugzilla.redhat.com/1122557>"

#. type: textblock
#: ../guestfs-release-notes.pod:417 ../guestfs-release-notes.pod:505
#: ../guestfs-release-notes.pod:793
msgid "virt-sparsify overwrites block devices if used as output files"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:419
msgid "L<https://bugzilla.redhat.com/1113156>"
msgstr "L<https://bugzilla.redhat.com/1113156>"

#. type: textblock
#: ../guestfs-release-notes.pod:421
msgid "Empty fstab breaks libguestfs inspection"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:423
msgid "L<https://bugzilla.redhat.com/1111662>"
msgstr "L<https://bugzilla.redhat.com/1111662>"

#. type: textblock
#: ../guestfs-release-notes.pod:425
msgid ""
"Guestfs.Error(\"vgchange_uuid_all: Volume group has active logical volumes\")"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:427
msgid "L<https://bugzilla.redhat.com/1109174>"
msgstr "L<https://bugzilla.redhat.com/1109174>"

#. type: textblock
#: ../guestfs-release-notes.pod:429
msgid "virt-win-reg manual page is corrupted"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:431
msgid "L<https://bugzilla.redhat.com/1106548>"
msgstr "L<https://bugzilla.redhat.com/1106548>"

#. type: textblock
#: ../guestfs-release-notes.pod:433
msgid ""
"root gets an error accessing to a non-root dir on a snapshot guestmount VMDK "
"img"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:435
msgid "L<https://bugzilla.redhat.com/1103877>"
msgstr "L<https://bugzilla.redhat.com/1103877>"

#. type: textblock
#: ../guestfs-release-notes.pod:437
msgid "These APIs also need to add to `guestfish -h` command list"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:439
msgid "L<https://bugzilla.redhat.com/1102448>"
msgstr "L<https://bugzilla.redhat.com/1102448>"

#. type: textblock
#: ../guestfs-release-notes.pod:441
msgid "mageia package list is incorrect"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:443
msgid "L<https://bugzilla.redhat.com/1102447>"
msgstr "L<https://bugzilla.redhat.com/1102447>"

#. type: textblock
#: ../guestfs-release-notes.pod:445
msgid "libguestfs 1.27.13 does not build due to libxml library order"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:447
msgid "L<https://bugzilla.redhat.com/1100498>"
msgstr "L<https://bugzilla.redhat.com/1100498>"

#. type: textblock
#: ../guestfs-release-notes.pod:449
msgid "RFE: non-polling mechanism to detect guestmount --no-fork readiness"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:451
msgid "L<https://bugzilla.redhat.com/1099490>"
msgstr "L<https://bugzilla.redhat.com/1099490>"

#. type: textblock
#: ../guestfs-release-notes.pod:453
msgid "scrub-file can't handle link file"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:455
msgid "L<https://bugzilla.redhat.com/1099284>"
msgstr "L<https://bugzilla.redhat.com/1099284>"

#. type: textblock
#: ../guestfs-release-notes.pod:457
msgid "typo errors in man pages"
msgstr "Друкарські помилки у сторінках man"

#. type: =item
#: ../guestfs-release-notes.pod:459
msgid "L<https://bugzilla.redhat.com/1098718>"
msgstr "L<https://bugzilla.redhat.com/1098718>"

#. type: textblock
#: ../guestfs-release-notes.pod:461
msgid "RFE: virt-builder aliases"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:463
msgid "L<https://bugzilla.redhat.com/1096465>"
msgstr "L<https://bugzilla.redhat.com/1096465>"

#. type: textblock
#: ../guestfs-release-notes.pod:465
msgid ""
"virt-builder \"proxy=off\" setting doesn't turn off the proxy for downloads"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:467
msgid "L<https://bugzilla.redhat.com/1094746>"
msgstr "L<https://bugzilla.redhat.com/1094746>"

#. type: textblock
#: ../guestfs-release-notes.pod:469
msgid ""
"virt-sparsify man failes to mention what happens to snapshots within a qcow2 "
"image (they are discarded)"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:471
msgid "L<https://bugzilla.redhat.com/1092753>"
msgstr "L<https://bugzilla.redhat.com/1092753>"

#. type: textblock
#: ../guestfs-release-notes.pod:473
msgid ""
"virt-builder: If several repos contain the same os-version images, then they "
"are duplicated in -l output"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:475
msgid "L<https://bugzilla.redhat.com/1091803>"
msgstr "L<https://bugzilla.redhat.com/1091803>"

#. type: textblock
#: ../guestfs-release-notes.pod:477
msgid "tar-in-opts execute failed that cause libguestfs appliance crashed"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:479
msgid "L<https://bugzilla.redhat.com/1088424>"
msgstr "L<https://bugzilla.redhat.com/1088424>"

#. type: textblock
#: ../guestfs-release-notes.pod:481
msgid ""
"virt-resize: libguestfs error: part_set_name: parted: /dev/sdb: Error during "
"translation: Invalid or incomplete multibyte or wide character"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:483
msgid "L<https://bugzilla.redhat.com/1088262>"
msgstr "L<https://bugzilla.redhat.com/1088262>"

#. type: textblock
#: ../guestfs-release-notes.pod:485
msgid "virt-builder cannot write to a block device"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:487
msgid "L<https://bugzilla.redhat.com/1085029>"
msgstr "L<https://bugzilla.redhat.com/1085029>"

#. type: textblock
#: ../guestfs-release-notes.pod:489
msgid "Ruby tests fail with latest Ruby"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:491
msgid "L<https://bugzilla.redhat.com/1079210>"
msgstr "L<https://bugzilla.redhat.com/1079210>"

#. type: textblock
#: ../guestfs-release-notes.pod:493
msgid "virt-sparsify --in-place cannot sparsify as much as it should"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:495
msgid "L<https://bugzilla.redhat.com/1079182>"
msgstr "L<https://bugzilla.redhat.com/1079182>"

#. type: textblock
#: ../guestfs-release-notes.pod:497
msgid ""
"virt-df cannot report used disk space of windows guest when updated to 6.5"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:499
msgid "L<https://bugzilla.redhat.com/1077817>"
msgstr "L<https://bugzilla.redhat.com/1077817>"

#. type: textblock
#: ../guestfs-release-notes.pod:501
msgid "virt-builder error: \"syntax error at line 3: syntax error\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:503 ../guestfs-release-notes.pod:791
msgid "L<https://bugzilla.redhat.com/1056290>"
msgstr "L<https://bugzilla.redhat.com/1056290>"

#. type: =item
#: ../guestfs-release-notes.pod:507
msgid "L<https://bugzilla.redhat.com/812970>"
msgstr "L<https://bugzilla.redhat.com/812970>"

#. type: textblock
#: ../guestfs-release-notes.pod:509
msgid "virt-rescue cannot set E<ge>E<lt>rescueE<gt> prompt, on Ubuntu 12.04"
msgstr ""

#. type: =for
#: ../guestfs-release-notes.pod:513 ../guestfs-release-notes.pod:885
#: ../guestfs-release-notes.pod:1197 ../guestfs-release-notes.pod:1554
#: ../guestfs-release-notes.pod:2146 ../guestfs-release-notes.pod:2384
#: ../guestfs-release-notes.pod:2524 ../guestfs-release-notes.pod:2693
#: ../guestfs-release-notes.pod:2826 ../guestfs-release-notes.pod:2968
#: ../guestfs-release-notes.pod:3110 ../guestfs-release-notes.pod:3277
#: ../guestfs-release-notes.pod:3473
msgid ""
"comment ################################################################"
msgstr ""
"коментар ################################################################"

#. type: =head1
#: ../guestfs-release-notes.pod:515
msgid "RELEASE NOTES FOR LIBGUESTFS 1.26"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.26"

#. type: textblock
#: ../guestfs-release-notes.pod:517
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.24.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:525
msgid ""
"L<virt-customize(1)> is a new tool for customizing virtual machine disk "
"images.  It lets you install packages, edit configuration files, run "
"scripts, set passwords and so on.  L<virt-builder(1)> and L<virt-sysprep(1)> "
"use virt-customize, and command line options across all these tools are now "
"identical."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:531
msgid ""
"L<virt-diff(1)> is a new tool for showing the differences between the "
"filesystems of two virtual machines.  It is mainly useful when showing what "
"files have been changed between snapshots."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:535
msgid ""
"L<virt-builder(1)> has been greatly enhanced.  There are many more ways to "
"customize the virtual machine.  It can pull templates from multiple "
"repositories.  A parallelized internal xzcat implementation speeds up "
"template decompression.  Virt-builder uses an optimizing planner to choose "
"the fastest way to build the VM.  It is now easier to use virt-builder from "
"other programs.  Internationalization support has been added to metadata.  "
"More efficient SELinux relabelling of files.  Can build guests for multiple "
"architectures.  Error messages have been improved.  (Pino Toscano)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:546
msgid ""
"L<virt-sparsify(1)> has a new I<--in-place> option.  This sparsifies an "
"image in place (without copying it) and is also much faster.  (Lots of help "
"provided by Paolo Bonzini)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:550
msgid ""
"L<virt-sysprep(1)> can delete and scrub files under user control.  You can "
"lock user accounts or set random passwords on accounts.  Can remove more log "
"files.  Can unsubscribe a guest from Red Hat Subscription Manager.  New "
"flexible way to enable and disable operations.  (Wanlong Gao, Pino Toscano)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:557
msgid ""
"L<virt-win-reg(1)> allows you to use URIs to specify remote disk images."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:560
msgid ""
"L<virt-format(1)> can now pass the extra space that it recovers back to the "
"host."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:563
msgid ""
"L<guestfish(1)> has additional environment variables to give fine control "
"over the C<E<gt>E<lt>fsE<gt>> prompt.  Guestfish reads its (rarely used) "
"configuration file in a different order now so that local settings override "
"global settings.  (Pino Toscano)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:569
msgid ""
"L<virt-make-fs(1)> was rewritten in C, but is unchanged in terms of "
"functionality and command line usage."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:574
msgid ""
"The OCaml bindings have a new C<Guestfs.Errno> module, used to check the "
"error number returned by C<Guestfs.last_errno>."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:577
msgid "PHP tests now work.  (Pino Toscano)"
msgstr "Відновлення працездатності тестів PHP. (Pino Toscano)"

#. type: textblock
#: ../guestfs-release-notes.pod:582
msgid "Inspection can recognize Debian live images."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:586
msgid "ARMv7 (32 bit) now supports KVM acceleration."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:588
msgid ""
"Aarch64 (ARM 64 bit) is supported, but the appliance part does not work yet."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:591
msgid "PPC64 support has been fixed and enhanced."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:597
msgid ""
"Denial of service when inspecting disk images with corrupt btrfs volumes"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:599
msgid ""
"It was possible to crash libguestfs (and programs that use libguestfs as a "
"library) by presenting a disk image containing a corrupt btrfs volume."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:603
msgid ""
"This was caused by a NULL pointer dereference causing a denial of service, "
"and is not thought to be exploitable any further."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:606
msgid ""
"See commit d70ceb4cbea165c960710576efac5a5716055486 for the fix.  This fix "
"is included in libguestfs stable branches S<E<ge> 1.26.0>, S<E<ge> 1.24.6> "
"and S<E<ge> 1.22.8>, and also in RHEL S<E<ge> 7.0>.  Earlier versions of "
"libguestfs are not vulnerable."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:611
msgid "Better generation of random root passwords and random seeds"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:613
msgid ""
"When generating random root passwords and random seeds, two bugs were fixed "
"which are possibly security related.  Firstly we no longer read excessive "
"bytes from C</dev/urandom> (most of which were just thrown away).  Secondly "
"we changed the code to avoid modulo bias.  These issues were not thought to "
"be exploitable.  (Both changes suggested by Edwin Török)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:624
msgid ""
"GUID parameters are now validated when they are passed to API calls, whereas "
"previously you could have passed any string.  (Pino Toscano)"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:632
msgid "C<guestfs_add_drive_opts>: new C<discard> parameter"
msgstr "C<guestfs_add_drive_opts>: новий параметр C<discard>"

#. type: textblock
#: ../guestfs-release-notes.pod:634
msgid ""
"The new C<discard> parameter allows fine-grained control over discard/trim "
"support for a particular disk.  This allows the host file to become more "
"sparse (or thin-provisioned) when you delete files or issue the "
"C<guestfs_fstrim> API call."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:639
msgid "C<guestfs_add_domain>: new parameters: C<cachemode>, C<discard>"
msgstr "C<guestfs_add_domain>: нові параметри: C<cachemode>, C<discard>"

#. type: textblock
#: ../guestfs-release-notes.pod:641
msgid "These parameters are passed through when adding the domain's disks."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:643
msgid "C<guestfs_blkdiscard>"
msgstr "C<guestfs_blkdiscard>"

#. type: textblock
#: ../guestfs-release-notes.pod:645
msgid ""
"Discard all blocks on a guestfs device.  Combined with the C<discard> "
"parameter above, this makes the host file sparse."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:648
msgid "C<guestfs_blkdiscardzeroes>"
msgstr "C<guestfs_blkdiscardzeroes>"

#. type: textblock
#: ../guestfs-release-notes.pod:650
msgid "Test if discarded blocks read back as zeroes."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:652
msgid "C<guestfs_compare_*>"
msgstr "C<guestfs_compare_*>"

#. type: =item
#: ../guestfs-release-notes.pod:654
msgid "C<guestfs_copy_*>"
msgstr "C<guestfs_copy_*>"

#. type: textblock
#: ../guestfs-release-notes.pod:656
msgid ""
"For each struct returned through the API, libguestfs now generates "
"C<guestfs_compare_*> and C<guestfs_copy_*> functions to allow you to compare "
"and copy structs."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:660
msgid "C<guestfs_copy_attributes>"
msgstr "C<guestfs_copy_attributes>"

#. type: textblock
#: ../guestfs-release-notes.pod:662
msgid ""
"Copy attributes (like permissions, xattrs, ownership) from one file to "
"another.  (Pino Toscano)"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:666
msgid "C<guestfs_disk_create>"
msgstr "C<guestfs_disk_create>"

#. type: textblock
#: ../guestfs-release-notes.pod:668
msgid ""
"A flexible API for creating empty disk images from scratch.  This avoids the "
"need to call out to external programs like L<qemu-img(1)>."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:671
msgid "C<guestfs_get_backend_settings>"
msgstr "C<guestfs_get_backend_settings>"

#. type: =item
#: ../guestfs-release-notes.pod:673
msgid "C<guestfs_set_backend_settings>"
msgstr "C<guestfs_set_backend_settings>"

#. type: textblock
#: ../guestfs-release-notes.pod:675
msgid ""
"Per-backend settings (can also be set via the environment variable "
"C<LIBGUESTFS_BACKEND_SETTINGS>).  The main use for this is forcing TCG mode "
"in the qemu-based backends, for example:"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:679
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND=direct\n"
" export LIBGUESTFS_BACKEND_SETTINGS=force_tcg\n"
"\n"
msgstr ""
" export LIBGUESTFS_BACKEND=direct\n"
" export LIBGUESTFS_BACKEND_SETTINGS=force_tcg\n"
"\n"

#. type: =item
#: ../guestfs-release-notes.pod:682
msgid "C<guestfs_part_get_name>"
msgstr "C<guestfs_part_get_name>"

#. type: textblock
#: ../guestfs-release-notes.pod:684
msgid "Get the label or name of a partition (for GPT disk images)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:690
msgid "The following extra packages are required to build libguestfs 1.26:"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:694
msgid "supermin E<ge> 5"
msgstr "supermin E<ge> 5"

#. type: textblock
#: ../guestfs-release-notes.pod:696
msgid "Supermin version 5 is required to build this version of libguestfs."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:698
msgid "flex, bison"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:700
msgid ""
"Virt-builder now uses a real parser to parse its metadata file, so these "
"tools are required."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:703 ../guestfs-release-notes.pod:1025
msgid "xz"
msgstr "xz"

#. type: textblock
#: ../guestfs-release-notes.pod:705
msgid ""
"This is now a required build dependency, where previously it was (in theory) "
"optional."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:712
msgid "PO message extraction rewritten to be more robust.  (Pino Toscano)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:715
msgid ""
"C<podwrapper> gives an error if the I<--insert> or I<--verbatim> argument "
"pattern is not found."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:718
msgid ""
"Libguestfs now passes the qemu I<-enable-fips> option to enable FIPS, if "
"qemu supports it."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:721
msgid ""
"C<./configure --without-qemu> can be used if you don't want to specify a "
"default hypervisor."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:724
msgid ""
"Copy-on-write [COW] overlays, used for example for read-only drives, are now "
"created through an internal backend API (C<.create_cow_overlay>)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:727
msgid ""
"Libvirt backend uses some funky C macros to generate XML.  These are simpler "
"and safer."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:730
msgid ""
"The ChangeLog file format has changed.  It is now just the same as C<git "
"log>, instead of using a custom format."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:733
msgid "Appliance start-up has changed:"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:739
msgid ""
"The libguestfs appliance now initializes LVM the same way as it is done on "
"physical machines."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:744
msgid ""
"The libguestfs appliance does not write an empty string to C</proc/sys/"
"kernel/hotplug> when starting up."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:747
msgid ""
"Note that you B<must> configure your kernel to have "
"C<CONFIG_UEVENT_HELPER_PATH=\"\"> otherwise you will get strange LVM errors "
"(this applies as much to any Linux machine, not just libguestfs).  (Peter "
"Rajnoha)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:755
msgid ""
"Libguestfs can now be built on arches that have L<ocamlc(1)> but not "
"L<ocamlopt(1)>.  (Hilko Bengen, Olaf Hering)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:759
msgid ""
"You cannot use C<./configure --disable-daemon --enable-appliance>.  It made "
"no sense anyway.  Now it is expressly forbidden by the configure script."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:763
msgid "The packagelist file uses C<m4> for macro expansion instead of C<cpp>."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:769
msgid "./bugs-in-changelog.sh 1.24.0.."
msgstr "./bugs-in-changelog.sh 1.24.0.."

#. type: =item
#: ../guestfs-release-notes.pod:775
msgid "L<https://bugzilla.redhat.com/1073906>"
msgstr "L<https://bugzilla.redhat.com/1073906>"

#. type: textblock
#: ../guestfs-release-notes.pod:777
msgid ""
"java bindings inspect_list_applications2 throws java.lang."
"ArrayIndexOutOfBoundsException:"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:779
msgid "L<https://bugzilla.redhat.com/1063374>"
msgstr "L<https://bugzilla.redhat.com/1063374>"

#. type: textblock
#: ../guestfs-release-notes.pod:781
msgid ""
"[RFE] enable subscription manager clean or unregister operation to sysprep"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:783
msgid "L<https://bugzilla.redhat.com/1060404>"
msgstr "L<https://bugzilla.redhat.com/1060404>"

#. type: textblock
#: ../guestfs-release-notes.pod:785
msgid "virt-resize does not preserve GPT partition names"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:787
msgid "L<https://bugzilla.redhat.com/1057504>"
msgstr "L<https://bugzilla.redhat.com/1057504>"

#. type: textblock
#: ../guestfs-release-notes.pod:789
msgid "mount-local should give a clearer error if root is not mounted"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:795
msgid "L<https://bugzilla.redhat.com/1055452>"
msgstr "L<https://bugzilla.redhat.com/1055452>"

#. type: textblock
#: ../guestfs-release-notes.pod:797
msgid "libguestfs: error: invalid backend: appliance"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:799
msgid "L<https://bugzilla.redhat.com/1054761>"
msgstr "L<https://bugzilla.redhat.com/1054761>"

#. type: textblock
#: ../guestfs-release-notes.pod:801
msgid "guestfs_pvs prints \"unknown device\" if a physical volume is missing"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:803
msgid "L<https://bugzilla.redhat.com/1053847>"
msgstr "L<https://bugzilla.redhat.com/1053847>"

#. type: textblock
#: ../guestfs-release-notes.pod:805
msgid "Recommended default clock/timer settings"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:807
msgid "L<https://bugzilla.redhat.com/1046509>"
msgstr "L<https://bugzilla.redhat.com/1046509>"

#. type: textblock
#: ../guestfs-release-notes.pod:809
msgid ""
"ruby-libguestfs throws \"expecting 0 or 1 arguments\" on Guestfs::Guestfs.new"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:811
msgid "L<https://bugzilla.redhat.com/1045450>"
msgstr "L<https://bugzilla.redhat.com/1045450>"

#. type: textblock
#: ../guestfs-release-notes.pod:813
msgid "Cannot inspect cirros 0.3.1 disk image fully"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:815
msgid "L<https://bugzilla.redhat.com/1045033>"
msgstr "L<https://bugzilla.redhat.com/1045033>"

#. type: textblock
#: ../guestfs-release-notes.pod:817
msgid "LIBVIRT_DEFAULT_URI=qemu:///system breaks libguestfs"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:819
msgid "L<https://bugzilla.redhat.com/1044585>"
msgstr "L<https://bugzilla.redhat.com/1044585>"

#. type: textblock
#: ../guestfs-release-notes.pod:821
msgid ""
"virt-builder network (eg. --install) doesn't work if resolv.conf sets "
"nameserver 127.0.0.1"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:823
msgid "L<https://bugzilla.redhat.com/1044014>"
msgstr "L<https://bugzilla.redhat.com/1044014>"

#. type: textblock
#: ../guestfs-release-notes.pod:825
msgid ""
"When SSSD is installed, libvirt configuration requires authentication, but "
"not clear to user"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:827
msgid "L<https://bugzilla.redhat.com/1039995>"
msgstr "L<https://bugzilla.redhat.com/1039995>"

#. type: textblock
#: ../guestfs-release-notes.pod:829
msgid ""
"virt-make-fs fails making fat/vfat whole disk: Device partition expected, "
"not making filesystem on entire device '/dev/sda' (use -I to override)"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:831
msgid "L<https://bugzilla.redhat.com/1039540>"
msgstr "L<https://bugzilla.redhat.com/1039540>"

#. type: textblock
#: ../guestfs-release-notes.pod:833
msgid "virt-sysprep to delete more logfiles"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:835
msgid "L<https://bugzilla.redhat.com/1033207>"
msgstr "L<https://bugzilla.redhat.com/1033207>"

#. type: textblock
#: ../guestfs-release-notes.pod:837
msgid "RFE: libguestfs inspection does not recognize Free4NAS live CD"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:839
msgid "L<https://bugzilla.redhat.com/1028660>"
msgstr "L<https://bugzilla.redhat.com/1028660>"

#. type: textblock
#: ../guestfs-release-notes.pod:841
msgid ""
"RFE: virt-sysprep/virt-builder should have an option to lock a user account"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:843
msgid "L<https://bugzilla.redhat.com/1026688>"
msgstr "L<https://bugzilla.redhat.com/1026688>"

#. type: textblock
#: ../guestfs-release-notes.pod:845
msgid ""
"libguestfs fails examining libvirt guest with ceph drives: rbd: image name "
"must begin with a '/'"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:847
msgid "L<https://bugzilla.redhat.com/1022431>"
msgstr "L<https://bugzilla.redhat.com/1022431>"

#. type: textblock
#: ../guestfs-release-notes.pod:849
msgid "virt-builder fails if $HOME/.cache doesn't exist"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:851
msgid "L<https://bugzilla.redhat.com/1022184>"
msgstr "L<https://bugzilla.redhat.com/1022184>"

#. type: textblock
#: ../guestfs-release-notes.pod:853
msgid "libguestfs: do not use versioned jar file"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:855
msgid "L<https://bugzilla.redhat.com/1020806>"
msgstr "L<https://bugzilla.redhat.com/1020806>"

#. type: textblock
#: ../guestfs-release-notes.pod:857
msgid "All libguestfs LVM operations fail on Debian/Ubuntu"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:859
msgid "L<https://bugzilla.redhat.com/1008417>"
msgstr "L<https://bugzilla.redhat.com/1008417>"

#. type: textblock
#: ../guestfs-release-notes.pod:861
msgid "Need update helpout of part-set-gpt-type"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:863
msgid "L<https://bugzilla.redhat.com/953907>"
msgstr "L<https://bugzilla.redhat.com/953907>"

#. type: textblock
#: ../guestfs-release-notes.pod:865
msgid "virt-sysprep does not correctly set the hostname on Debian/Ubuntu"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:867
msgid "L<https://bugzilla.redhat.com/923355>"
msgstr "L<https://bugzilla.redhat.com/923355>"

#. type: textblock
#: ../guestfs-release-notes.pod:869
msgid "guestfish prints literal \"\\n\" in error messages"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:871
msgid "L<https://bugzilla.redhat.com/660687>"
msgstr "L<https://bugzilla.redhat.com/660687>"

#. type: textblock
#: ../guestfs-release-notes.pod:873
msgid ""
"guestmount: \"touch\" command fails: touch: setting times of `timestamp': "
"Invalid argument"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:875
msgid "L<https://bugzilla.redhat.com/593511>"
msgstr "L<https://bugzilla.redhat.com/593511>"

#. type: textblock
#: ../guestfs-release-notes.pod:877
msgid "[RFE] function to get partition name"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:879
msgid "L<https://bugzilla.redhat.com/563450>"
msgstr "L<https://bugzilla.redhat.com/563450>"

#. type: textblock
#: ../guestfs-release-notes.pod:881
msgid "list-devices returns devices of different types out of order"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:887
msgid "RELEASE NOTES FOR LIBGUESTFS 1.24"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.24"

#. type: textblock
#: ../guestfs-release-notes.pod:889
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.22.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:895
msgid ""
"User-Mode Linux (UML) can be used as an alternative backend (ie. instead of "
"KVM).  This improves performance especially when using libguestfs inside a "
"VM (eg. in the cloud).  UML is supported as a first-class backend.  See "
"L<guestfs(3)/USER-MODE LINUX BACKEND> for how to use this."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:901
msgid "ARM (32 bit) and PPC64 are now fully supported."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:905
msgid ""
"L<virt-builder(1)> is a new tool for building virtual machine images.  It "
"lets you rapidly and securely create guests and customize them."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:908
msgid ""
"New L<virt-sysprep(1)> operations: Remove files in C</tmp> and C</var/tmp>.  "
"Remove RPM database files.  Change root and user passwords.  More log files "
"are removed.  New operations which are not enabled by default: Create random "
"UUIDs for filesystems.  Reset firewall rules.  (Wanlong Gao)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:918
msgid ""
"L<virt-resize(1)> and virt-sysprep can now use URIs to specify a remote disk."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:921
msgid ""
"Use C<guestfish -N filename=type> to create a named disk image (instead of "
"the default C<test1.img> etc)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:924
msgid ""
"L<virt-sparsify(1)> now tests if there is enough disk space to complete the "
"operation, instead of possibly running out of space half way through."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:928
msgid ""
"L<virt-format(1)> and L<virt-make-fs(1)>: new I<--label> option for setting "
"filesystem label."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:931
msgid ""
"virt-resize I<--no-sparse> flag can be used to resize on to partitions and "
"other targets that are not zeroed."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:936
msgid "New bindings for the Go programming language."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:940
msgid "Support for the systemd journal."
msgstr "Підтримка журналу systemd."

#. type: textblock
#: ../guestfs-release-notes.pod:942
msgid ""
"C<guestfs_add_drive_opts> can now control the qemu caching mode through a "
"new C<cachemode> parameter.  You can select improved performance for "
"temporary drives, or safety."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:946
msgid "C<guestfs_set_label> now works for XFS and btrfs."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:948
msgid "New GUESTFS_EVENT_WARNING event for warning messages."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:952
msgid "Better inspection of SUSE guests (Olaf Hering)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:954
msgid "Better support for non-standard Windows %systemroot% (Matthew Booth)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:956
msgid "Enhanced error reporting for Augeas errors."
msgstr ""

#. type: =head2
#: ../guestfs-release-notes.pod:962 ../src/guestfs.pod:2147
msgid "CVE-2013-2124"
msgstr "CVE-2013-2124"

#. type: textblock
#: ../guestfs-release-notes.pod:964
msgid "L<https://bugzilla.redhat.com/show_bug.cgi?id=968306>"
msgstr "L<https://bugzilla.redhat.com/show_bug.cgi?id=968306>"

#. type: textblock
#: ../guestfs-release-notes.pod:966
msgid ""
"A denial of service was possible when inspecting certain guests.  The fix "
"has been backported to 1.20 and 1.22 branches."
msgstr ""

#. type: =head2
#: ../guestfs-release-notes.pod:969 ../src/guestfs.pod:2158
msgid "CVE-2013-4419"
msgstr "CVE-2013-4419"

#. type: textblock
#: ../guestfs-release-notes.pod:971
msgid ""
"L<https://www.redhat.com/archives/libguestfs/2013-October/msg00031.html>"
msgstr ""
"L<https://www.redhat.com/archives/libguestfs/2013-October/msg00031.html>"

#. type: textblock
#: ../guestfs-release-notes.pod:973
msgid ""
"Fix insecure temporary directory handling for remote guestfish.  The fix has "
"been backported to 1.20 and 1.22 branches."
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:980
#, no-wrap
msgid ""
" add-drive-scratch: Add a temporary scratch drive\n"
" aug-label\n"
" aug-setm\n"
" journal-open: Systemd journal support\n"
" journal-close\n"
" journal-next\n"
" journal-skip\n"
" journal-get\n"
" journal-get-data-threshold\n"
" journal-set-data-threshold\n"
" remount: Allow rw flag to be adjusted on mounted filesystems\n"
" set-uuid: Set UUID of filesystem\n"
"\n"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:993
msgid ""
"C<is-file>, C<is-dir>, C<is-blockdev>, C<is-chardev>, C<is-fifo>, C<is-"
"socket> APIs now have an extra C<followsymlinks> flag."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:996
msgid "C<add-drive> has a new C<cachemode> parameter."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1000
msgid "The following packages are required to build libguestfs 1.24:"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1004
msgid "Augeas E<ge> 1.0.0"
msgstr "Augeas E<ge> 1.0.0"

#. type: textblock
#: ../guestfs-release-notes.pod:1008
msgid ""
"The following optional packages may be added to enhance functionality but "
"are not required:"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1013
msgid "sd-journal"
msgstr "sd-journal"

#. type: textblock
#: ../guestfs-release-notes.pod:1015
msgid "To read journal files from guests which use that."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1017
msgid "url_mkcow"
msgstr "url_mkcow"

#. type: textblock
#: ../guestfs-release-notes.pod:1019
msgid "For UML backend."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1021
msgid "curl"
msgstr "curl"

#. type: =item
#: ../guestfs-release-notes.pod:1023
msgid "gpg"
msgstr "gpg"

#. type: textblock
#: ../guestfs-release-notes.pod:1027
msgid "For virt-builder."
msgstr "Для virt-builder."

#. type: =item
#: ../guestfs-release-notes.pod:1029
msgid "golang E<ge> 1.1.1"
msgstr "golang E<ge> 1.1.1"

#. type: textblock
#: ../guestfs-release-notes.pod:1031
msgid "For Go language bindings."
msgstr "Для прив’язок до мови Go."

#. type: textblock
#: ../guestfs-release-notes.pod:1037
msgid ""
"New C<make check-*> rules replace C<make extra-tests>.  See C<make help> and "
"L<guestfs(3)> for details."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1040
msgid "Perl code can now be valgrinded."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1042
msgid "Inspection code is now fuzz-tested."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1044
msgid ""
"C<make> no longer recurses into the generator directory in every other "
"directory.  This reduces the overhead of builds considerably."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1047
msgid "Additional tests for Augeas, hivex."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1049
msgid ""
"Add a launch timeout of 20 minutes waiting for the appliance to start up."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1052
msgid ""
"Add a timeout (4 hours) to all tests so we can catch the case where qemu or "
"other components hang."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1055
msgid ""
"Use kvmclock and C<-cpu host>.  This improves clock stability and overall "
"performance."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1058
msgid "C<./configure --enable-packet-dump> mode is fixed."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1060
msgid ""
"C<./configure --enable-valgrind-daemon> mode has been rewritten.  It is now "
"feasible for developers to keep this flag enabled at all times."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1063
msgid ""
"Backends have been refactored to be modular (although they are not actually "
"loadable modules)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1066
msgid ""
"When enabled, the network now uses resolver configuration (ie. /etc/resolv."
"conf) from the host."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1073
msgid "./bugs-in-changelog.sh 1.22.0.."
msgstr "./bugs-in-changelog.sh 1.22.0.."

#. type: =item
#: ../guestfs-release-notes.pod:1079
msgid "L<https://bugzilla.redhat.com/1019889>"
msgstr "L<https://bugzilla.redhat.com/1019889>"

#. type: textblock
#: ../guestfs-release-notes.pod:1081
msgid "libguestfs-tools.conf should have a man page"
msgstr "libguestfs-tools.conf потрібна сторінка man"

#. type: =item
#: ../guestfs-release-notes.pod:1083
msgid "L<https://bugzilla.redhat.com/1018149>"
msgstr "L<https://bugzilla.redhat.com/1018149>"

#. type: textblock
#: ../guestfs-release-notes.pod:1085
msgid "valgrind errors in btrfs_subvolume_list"
msgstr "Помилки valgrind у btrfs_subvolume_list"

#. type: =item
#: ../guestfs-release-notes.pod:1087
msgid "L<https://bugzilla.redhat.com/1002032>"
msgstr "L<https://bugzilla.redhat.com/1002032>"

#. type: textblock
#: ../guestfs-release-notes.pod:1089
msgid ""
"mke2fs can't return the correct filesystem type when blockscount is less "
"than 2048 for ext3"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1091
msgid "L<https://bugzilla.redhat.com/1001876>"
msgstr "L<https://bugzilla.redhat.com/1001876>"

#. type: textblock
#: ../guestfs-release-notes.pod:1093
msgid "Update \"rsync-out\" helpout for using wildcard"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1095
msgid "L<https://bugzilla.redhat.com/1001875>"
msgstr "L<https://bugzilla.redhat.com/1001875>"

#. type: textblock
#: ../guestfs-release-notes.pod:1097
msgid "Argument 'excludes' of tar-out does not work"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1099
msgid "L<https://bugzilla.redhat.com/1000428>"
msgstr "L<https://bugzilla.redhat.com/1000428>"

#. type: textblock
#: ../guestfs-release-notes.pod:1101
msgid "virt-format uses wrong partition type for vfat filesystems"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1103
msgid "L<https://bugzilla.redhat.com/1000121>"
msgstr "L<https://bugzilla.redhat.com/1000121>"

#. type: textblock
#: ../guestfs-release-notes.pod:1105
msgid "'sh' command before mount causes daemon to segfault"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1107
msgid "L<https://bugzilla.redhat.com/998513>"
msgstr "L<https://bugzilla.redhat.com/998513>"

#. type: textblock
#: ../guestfs-release-notes.pod:1109
msgid "guestfish does not work when you mix --remote and --add options"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1111
msgid "L<https://bugzilla.redhat.com/998482>"
msgstr "L<https://bugzilla.redhat.com/998482>"

#. type: textblock
#: ../guestfs-release-notes.pod:1113
msgid ""
"guestfish remote prints \"libguestfs: error: waitpid (qemu): No child "
"processes\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1115
msgid "L<https://bugzilla.redhat.com/995711>"
msgstr "L<https://bugzilla.redhat.com/995711>"

#. type: textblock
#: ../guestfs-release-notes.pod:1117
msgid "list-filesystems command fails if there are no block devices"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1119
msgid "L<https://bugzilla.redhat.com/994517>"
msgstr "L<https://bugzilla.redhat.com/994517>"

#. type: textblock
#: ../guestfs-release-notes.pod:1121
msgid ""
"cache=none/O_DIRECT workaround doesn't work for images with backing files"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1123
msgid "L<https://bugzilla.redhat.com/989356>"
msgstr "L<https://bugzilla.redhat.com/989356>"

#. type: textblock
#: ../guestfs-release-notes.pod:1125
msgid "cap-get-file will return error if the file has not be set capabilities"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1127
msgid "L<https://bugzilla.redhat.com/986877>"
msgstr "L<https://bugzilla.redhat.com/986877>"

#. type: textblock
#: ../guestfs-release-notes.pod:1129
msgid "RFE: Implement set-uuid command"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1131
msgid "L<https://bugzilla.redhat.com/986875>"
msgstr "L<https://bugzilla.redhat.com/986875>"

#. type: textblock
#: ../guestfs-release-notes.pod:1133
msgid "RFE: Implement set-label for xfs"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1135
msgid "L<https://bugzilla.redhat.com/985269>"
msgstr "L<https://bugzilla.redhat.com/985269>"

#. type: textblock
#: ../guestfs-release-notes.pod:1137
msgid "Can't set acl value for a specified user with 'acl-set-file'"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1139
msgid "L<https://bugzilla.redhat.com/983218>"
msgstr "L<https://bugzilla.redhat.com/983218>"

#. type: textblock
#: ../guestfs-release-notes.pod:1141
msgid "libguestfs double free when kernel link fails during launch"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1143
msgid "L<https://bugzilla.redhat.com/981715>"
msgstr "L<https://bugzilla.redhat.com/981715>"

#. type: textblock
#: ../guestfs-release-notes.pod:1145
msgid ""
"Make xfs filesystem failed with specified blocksize, gives \"unknown option -"
"b\" error"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1147
msgid "L<https://bugzilla.redhat.com/981683>"
msgstr "L<https://bugzilla.redhat.com/981683>"

#. type: textblock
#: ../guestfs-release-notes.pod:1149
msgid "\"hivex-commit\" should fail with a relative path"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1151
msgid "L<https://bugzilla.redhat.com/981663>"
msgstr "L<https://bugzilla.redhat.com/981663>"

#. type: textblock
#: ../guestfs-release-notes.pod:1153
msgid ""
"disk-format \"qemu-img info: JSON parse error\" when target file does not "
"exist"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1155
msgid "L<https://bugzilla.redhat.com/978302>"
msgstr "L<https://bugzilla.redhat.com/978302>"

#. type: textblock
#: ../guestfs-release-notes.pod:1157
msgid ""
"mke2fs-J should give a meaningful error when specified type is anything "
"except 'ext{2,3,4}'"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1159
msgid "L<https://bugzilla.redhat.com/975797>"
msgstr "L<https://bugzilla.redhat.com/975797>"

#. type: textblock
#: ../guestfs-release-notes.pod:1161
msgid ""
"Specifying virtio interface ('iface' parameter) breaks the direct backend - "
"libguestfs hangs"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1163
msgid "L<https://bugzilla.redhat.com/975753>"
msgstr "L<https://bugzilla.redhat.com/975753>"

#. type: textblock
#: ../guestfs-release-notes.pod:1165
msgid ""
"\"virt-resize --expand\" and \"virt-resize --resize\" outputs error message "
"for Win2008 32bit OS"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1167
msgid "L<https://bugzilla.redhat.com/975412>"
msgstr "L<https://bugzilla.redhat.com/975412>"

#. type: textblock
#: ../guestfs-release-notes.pod:1169
msgid "inspection: Augeas expressions are broken with augeas >= 0.10"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1171
msgid "L<https://bugzilla.redhat.com/974904>"
msgstr "L<https://bugzilla.redhat.com/974904>"

#. type: textblock
#: ../guestfs-release-notes.pod:1173
msgid "virt-resize --expand fails on Ubuntu Cloud Image"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1175
msgid "L<https://bugzilla.redhat.com/974489>"
msgstr "L<https://bugzilla.redhat.com/974489>"

#. type: textblock
#: ../guestfs-release-notes.pod:1177
msgid ""
"Regression: Fedora inspection broken by change from guestfs_exists to "
"guestfs_is_file"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1179
msgid "L<https://bugzilla.redhat.com/972775>"
msgstr "L<https://bugzilla.redhat.com/972775>"

#. type: textblock
#: ../guestfs-release-notes.pod:1181
msgid ""
"txz-out command produces a bzip2-compressed file (should be xz-compressed)"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1183
msgid "L<https://bugzilla.redhat.com/969845>"
msgstr "L<https://bugzilla.redhat.com/969845>"

#. type: textblock
#: ../guestfs-release-notes.pod:1185
msgid "upload to a directory occasionally hangs instead of failing"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1187
msgid "L<https://bugzilla.redhat.com/968875>"
msgstr "L<https://bugzilla.redhat.com/968875>"

#. type: textblock
#: ../guestfs-release-notes.pod:1189
msgid "virt-sysprep should support URL-type arguments"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1191
msgid "L<https://bugzilla.redhat.com/624334>"
msgstr "L<https://bugzilla.redhat.com/624334>"

#. type: textblock
#: ../guestfs-release-notes.pod:1193
msgid "blockdev-setbsz succeeds, but does not affect blockdev-getbsz"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:1199
msgid "RELEASE NOTES FOR LIBGUESTFS 1.22"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.22"

#. type: textblock
#: ../guestfs-release-notes.pod:1201
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.20.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1209
msgid "Remote access to disks:"
msgstr "Віддалений доступ до таких дисків:"

#. type: textblock
#: ../guestfs-release-notes.pod:1215
msgid "Network Block Device (nbd)"
msgstr "Network Block Device (nbd)"

#. type: textblock
#: ../guestfs-release-notes.pod:1219
msgid "Secure Shell (ssh)"
msgstr "Secure Shell (ssh)"

#. type: textblock
#: ../guestfs-release-notes.pod:1223
msgid "HTTP and HTTPS"
msgstr "HTTP та HTTPS"

#. type: textblock
#: ../guestfs-release-notes.pod:1227
msgid "FTP and FTPS"
msgstr "FTP та FTPS"

#. type: textblock
#: ../guestfs-release-notes.pod:1231
msgid "iSCSI"
msgstr "iSCSI"

#. type: textblock
#: ../guestfs-release-notes.pod:1235
msgid "Gluster"
msgstr "Gluster"

#. type: textblock
#: ../guestfs-release-notes.pod:1239
msgid "Ceph/rbd (Mike Kelly)"
msgstr "Ceph/rbd (Mike Kelly)"

#. type: textblock
#: ../guestfs-release-notes.pod:1244
msgid "Sheepdog"
msgstr "Sheepdog"

#. type: textblock
#: ../guestfs-release-notes.pod:1248
msgid "TFTP"
msgstr "TFTP"

#. type: textblock
#: ../guestfs-release-notes.pod:1252
msgid ""
"The SYSLINUX and EXTLINUX bootloaders can now be installed in disk images "
"using the API."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1255
msgid ""
"Inspection can now handle filesystems such as btrfs where subvolumes are "
"separately mountable (Matthew Booth)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1258
msgid ""
"\"Attach methods\" are now known as \"backends\".  Compatibility with "
"existing code is preserved."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1261
msgid "Filenames can contain ':', as long as newer QEMU is being used."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1265
msgid "Virt-alignment-scan and virt-df scan multiple guests in parallel."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1267
msgid ""
"Guestmount now passes errno accurately back to userspace in almost all cases."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1270
msgid ""
"Guestfish and other tools can now use a URI-like syntax to access remote "
"disks, eg:"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1275
msgid ""
"Guestfish and guestmount now allow you to specify the filesystem type when "
"mounting, which is more secure (Dave Vasilevsky)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1278
msgid "Guestfish is now the \"guest filesystem shell\"."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1280
msgid ""
"Guestfish allows only C<1> C<true> C<t> C<yes> C<y> C<on> C<0> C<false> C<f> "
"C<no> C<n> C<off> for boolean values (case insensitive), and gives an error "
"for all other strings."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1284
msgid "New tool C<guestunmount> for unmounting FUSE filesystems safely."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1286
msgid "C<guestmount --no-fork> flag prevents guestmount from daemonizing."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1288
msgid ""
"Virt-resize now uses sparse copies by default, saving considerable space for "
"guests which are mostly empty."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1291
msgid ""
"Bash tab completion has been rewritten and can now handle most tools, and "
"correctly tab-complete C<--long> options.  In addition, bash completion "
"scripts are loaded on demand."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1297
msgid "The Java API now supports events."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1299
msgid "The Python object now inherits from the C<object> base class."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1301
msgid ""
"Python methods which previously returned lists of tuples can now be made to "
"return a Python dict.  For backwards compatibility, you have to enable this "
"by using the constructor option S<C<guestfs.GuestFS "
"(python_return_dict=True)>>."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1306
msgid "The PHP bindings are now tested properly, and have had multiple fixes."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1308
msgid ""
"The long-deprecated Perl C<Sys::Guestfs::Lib> library has been removed.  "
"L<https://www.redhat.com/archives/libguestfs/2013-April/msg00001.html>"
msgstr ""
"Вилучено застарілу бібліотеку Perl C<Sys::Guestfs::Lib>. L<https://www."
"redhat.com/archives/libguestfs/2013-April/msg00001.html>"

#. type: =head3
#: ../guestfs-release-notes.pod:1312
msgid "Examples"
msgstr "Приклади"

#. type: textblock
#: ../guestfs-release-notes.pod:1314
msgid ""
"New example program showing how to enable debugging and capture log messages."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1317
msgid "Other"
msgstr "Інше"

#. type: textblock
#: ../guestfs-release-notes.pod:1319
msgid ""
"Distributors can add arbitrary extra packages to the appliance by doing:"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:1322
#, no-wrap
msgid ""
" ./configure --with-extra-packages=\"list of package names\"\n"
"\n"
msgstr ""
" ./configure --with-extra-packages=\"список назв пакунків\"\n"
"\n"

#. type: textblock
#: ../guestfs-release-notes.pod:1324
msgid "Distributors can use:"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:1326
#, no-wrap
msgid ""
" ./configure --with-supermin-extra-options=\"...\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1328
msgid "to add arbitrary extra options to supermin."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1332
msgid "No security issues were found in this release."
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:1336
#, no-wrap
msgid ""
" cp-r\n"
" extlinux\n"
" feature-available\n"
" get-program\n"
" is-whole-device\n"
" part-get-gpt-type\n"
" part-set-gpt-type\n"
" rename\n"
" set-program\n"
" syslinux\n"
"\n"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1347
msgid "C only:"
msgstr "Лише C:"

#. type: verbatim
#: ../guestfs-release-notes.pod:1349
#, no-wrap
msgid ""
" guestfs_event_to_string\n"
"\n"
msgstr ""
" guestfs_event_to_string\n"
"\n"

#. type: textblock
#: ../guestfs-release-notes.pod:1353
msgid ""
"The febootstrap tool has now been renamed to \"supermin\".  Libguestfs can "
"use either, but now prefers \"supermin\".  L<http://people.redhat.com/"
"~rjones/supermin/>"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1357
msgid "libxml2 is required to build libguestfs."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1359
msgid "The hivexregedit program (from hivex) is required to build from git."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1361
msgid ""
"Internal functions can no longer be used unless the caller defines C<-"
"DGUESTFS_PRIVATE=1>."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1364
msgid "Enable C compiler warnings in Python, Ruby bindings."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1366
msgid ""
"Fail early and clearly if libvirt does not support qemu/KVM (eg. if default "
"libvirt connection is to Xen)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1369
msgid "C<make print-subdirs> rule, useful for selectively running tests."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1371
msgid "Multiple fixes to allow separated (sourcedir != builddir) builds."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1373
msgid "Multiple fixes to Haskell bindings."
msgstr "Декілька виправлень у прив’язках до Haskell."

#. type: textblock
#: ../guestfs-release-notes.pod:1375
msgid "C<ln> and C<ln-f> APIs now capture C<errno> correctly."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1377
msgid ""
"Language binding tests use (mostly) a standard numbering scheme and aim to "
"test the same range of features in each language.  Also the number of "
"launches required has been reduced so these tests should run much more "
"quickly."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1382
msgid ""
"Library code internally uses GCC C<__attribute__((cleanup))> (if available) "
"to simplify memory allocation."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1385
msgid ""
"Internal header files have been reorganized.  See the comments in C<src/"
"guestfs-internal*.h>"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1388
msgid ""
"Internal code shared between the library and certain tools is now located in "
"a static C<libutils> library."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1391
msgid ""
"Almost all subdirectories can now use parallel builds, although note that "
"the top-level directories still build in series."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1394
msgid "Use of C<PATH_MAX> and C<NAME_MAX> has been eliminated from the code."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1396
msgid "The Java API now requires JVM E<ge> 1.6."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1398
msgid "Force use of C<serial-tests> with automake E<ge> 1.12."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1400
msgid ""
"Use of sockets in the library protocol layer is abstracted, allowing other "
"non-POSIX layers to be added in future (see C<src/conn-socket.c>)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1404
msgid ""
"C<qemu-img info --output json> is used if available, for more secure parsing "
"of the output of this command."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1407
msgid ""
"Distros can now use C<make INSTALLDIRS=vendor install> to place Ruby "
"bindings in vendordir.  This eliminates a non-upstream patch carried by both "
"Fedora and Debian."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1411
msgid ""
"Valgrind log files are now written to C<tmp/valgrind-I<DATE>-I<PID>.log>"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1413
msgid "C<make clean> cleans the local C<tmp/> directory."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1415
msgid ""
"The C API tests have been rewritten using a more flexible generator language "
"that allows arbitrary C code to be executing during tests."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1422
msgid "./bugs-in-changelog.sh 1.20.0.."
msgstr "./bugs-in-changelog.sh 1.20.0.."

#. type: =item
#: ../guestfs-release-notes.pod:1428
msgid "L<https://bugzilla.redhat.com/961812>"
msgstr "L<https://bugzilla.redhat.com/961812>"

#. type: textblock
#: ../guestfs-release-notes.pod:1430
msgid "Segfault in inspect-fs.c in mountable code"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1432
msgid "L<https://bugzilla.redhat.com/957772>"
msgstr "L<https://bugzilla.redhat.com/957772>"

#. type: textblock
#: ../guestfs-release-notes.pod:1434
msgid "tar-out and base64-out quoting error"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1436
msgid "L<https://bugzilla.redhat.com/957380>"
msgstr "L<https://bugzilla.redhat.com/957380>"

#. type: textblock
#: ../guestfs-release-notes.pod:1438
msgid ""
"libguestfs: error: btrfsvol:/dev/sda2/root: root device not found: only call "
"this function with a root device previously returned by guestfs_inspect_os"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1440
msgid "L<https://bugzilla.redhat.com/948324>"
msgstr "L<https://bugzilla.redhat.com/948324>"

#. type: textblock
#: ../guestfs-release-notes.pod:1442
msgid "inspection fails if libosinfo is not installed"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1444
msgid "L<https://bugzilla.redhat.com/928995>"
msgstr "L<https://bugzilla.redhat.com/928995>"

#. type: textblock
#: ../guestfs-release-notes.pod:1446
msgid "file on zero-sized file now produces \"empty \" instead of \"empty\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1448
msgid "L<https://bugzilla.redhat.com/921292>"
msgstr "L<https://bugzilla.redhat.com/921292>"

#. type: textblock
#: ../guestfs-release-notes.pod:1450
msgid "qemu: could not open disk image /tmp/.../snapshot1: Permission denied"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1452
msgid "L<https://bugzilla.redhat.com/921040>"
msgstr "L<https://bugzilla.redhat.com/921040>"

#. type: textblock
#: ../guestfs-release-notes.pod:1454
msgid ""
"\"error: external command failed, see earlier error messages\" message needs "
"to change"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1456
msgid "L<https://bugzilla.redhat.com/920225>"
msgstr "L<https://bugzilla.redhat.com/920225>"

#. type: textblock
#: ../guestfs-release-notes.pod:1458
msgid ""
"libguestfs should use --output json (if supported) to safely parse the "
"output of qemu-img command"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1460
msgid "L<https://bugzilla.redhat.com/916780>"
msgstr "L<https://bugzilla.redhat.com/916780>"

#. type: textblock
#: ../guestfs-release-notes.pod:1462
msgid "feature request: guestmount --with-cleanup-pipefd"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1464
msgid "L<https://bugzilla.redhat.com/914934>"
msgstr "L<https://bugzilla.redhat.com/914934>"

#. type: textblock
#: ../guestfs-release-notes.pod:1466
msgid "oom-killer kills guestfsd when tar-in a lot of data"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1468
msgid "L<https://bugzilla.redhat.com/914931>"
msgstr "L<https://bugzilla.redhat.com/914931>"

#. type: textblock
#: ../guestfs-release-notes.pod:1470
msgid ""
"FileIn commands cause segfault if appliance dies during the file copy in"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1472
msgid "L<https://bugzilla.redhat.com/913145>"
msgstr "L<https://bugzilla.redhat.com/913145>"

#. type: textblock
#: ../guestfs-release-notes.pod:1474
msgid "Misc leaks in virNetClientProgramCall in libvirt 1.0.2"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1476
msgid "L<https://bugzilla.redhat.com/912499>"
msgstr "L<https://bugzilla.redhat.com/912499>"

#. type: textblock
#: ../guestfs-release-notes.pod:1478
msgid "Security context on image file gets reset"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1480
msgid "L<https://bugzilla.redhat.com/909836>"
msgstr "L<https://bugzilla.redhat.com/909836>"

#. type: textblock
#: ../guestfs-release-notes.pod:1482
msgid "libguestfs-test-tool --qemu segfaults"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1484
msgid "L<https://bugzilla.redhat.com/909624>"
msgstr "L<https://bugzilla.redhat.com/909624>"

#. type: textblock
#: ../guestfs-release-notes.pod:1486
msgid ""
"Unexpected non-tail recursion in recv_from_daemon results in stack overflow "
"in very long-running API calls that send progress messages"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1488
msgid "L<https://bugzilla.redhat.com/908322>"
msgstr "L<https://bugzilla.redhat.com/908322>"

#. type: textblock
#: ../guestfs-release-notes.pod:1490
msgid ""
"virt-tar fails on non-existent directory names \"error in chunked encoding "
"at /home/rjones/d/libguestfs/tools/virt-tar line 272.\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1492
msgid "L<https://bugzilla.redhat.com/908321>"
msgstr "L<https://bugzilla.redhat.com/908321>"

#. type: textblock
#: ../guestfs-release-notes.pod:1494
msgid ""
"virt-cat fails on directory names \"/dev/stdout: error in chunked encoding\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1496
msgid "L<https://bugzilla.redhat.com/907554>"
msgstr "L<https://bugzilla.redhat.com/907554>"

#. type: textblock
#: ../guestfs-release-notes.pod:1498
msgid "btrfs causes subsequent ntfs-3g filesystem to fail"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1500
msgid "L<https://bugzilla.redhat.com/905341>"
msgstr "L<https://bugzilla.redhat.com/905341>"

#. type: textblock
#: ../guestfs-release-notes.pod:1502
msgid "\"No such file or directory\" when execute \"hivex-commit\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1504
msgid "L<https://bugzilla.redhat.com/903620>"
msgstr "L<https://bugzilla.redhat.com/903620>"

#. type: textblock
#: ../guestfs-release-notes.pod:1506
msgid "btrfs_subvolume_list broken due to change in subvolume list output"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1508
msgid "L<https://bugzilla.redhat.com/895910>"
msgstr "L<https://bugzilla.redhat.com/895910>"

#. type: textblock
#: ../guestfs-release-notes.pod:1510
msgid "guestmount: rename() incorrectly follows symbolic links"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1512
msgid "L<https://bugzilla.redhat.com/895905>"
msgstr "L<https://bugzilla.redhat.com/895905>"

#. type: textblock
#: ../guestfs-release-notes.pod:1514
msgid "guestmount: link() incorrectly returns ENOENT, when it should be EXDEV"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1516
msgid "L<https://bugzilla.redhat.com/895904>"
msgstr "L<https://bugzilla.redhat.com/895904>"

#. type: textblock
#: ../guestfs-release-notes.pod:1518
msgid ""
"checksums-out fail to compute the checksums of all regular files in directory"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1520
msgid "L<https://bugzilla.redhat.com/894545>"
msgstr "L<https://bugzilla.redhat.com/894545>"

#. type: textblock
#: ../guestfs-release-notes.pod:1522
msgid "libguestfs FTBFS on Fedora 19 because of new ruby"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1524
msgid "L<https://bugzilla.redhat.com/890027>"
msgstr "L<https://bugzilla.redhat.com/890027>"

#. type: textblock
#: ../guestfs-release-notes.pod:1526
msgid ""
"virt-sysprep: Setting hostname, domain name and pretty name on Fedora 18 "
"correctly"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1528
msgid "L<https://bugzilla.redhat.com/887971>"
msgstr "L<https://bugzilla.redhat.com/887971>"

#. type: textblock
#: ../guestfs-release-notes.pod:1530
msgid "pvcreate fails if partition contains a swap signature"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1532
msgid "L<https://bugzilla.redhat.com/887520>"
msgstr "L<https://bugzilla.redhat.com/887520>"

#. type: textblock
#: ../guestfs-release-notes.pod:1534
msgid "zero_free_space: open: /sysroot//ujqqq135.rd3: Cannot allocate memory"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1536
msgid "L<https://bugzilla.redhat.com/886915>"
msgstr "L<https://bugzilla.redhat.com/886915>"

#. type: textblock
#: ../guestfs-release-notes.pod:1538
msgid ""
"libguestfs with libvirt attach-method fails with odd error if default "
"hypervisor is Xen"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1540
msgid "L<https://bugzilla.redhat.com/847549>"
msgstr "L<https://bugzilla.redhat.com/847549>"

#. type: textblock
#: ../guestfs-release-notes.pod:1542
msgid ""
"Adding a zero-length virtio-scsi disk causes: qemu-kvm: hw/scsi-bus.c:1568: "
"scsi_req_complete: Assertion `req->status == -1' failed."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1544
msgid "L<https://bugzilla.redhat.com/811649>"
msgstr "L<https://bugzilla.redhat.com/811649>"

#. type: textblock
#: ../guestfs-release-notes.pod:1546
msgid ""
"libguestfs cannot open disk images which are symlinks to files that contain "
"':' (colon) character"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1548
msgid "L<https://bugzilla.redhat.com/664558>"
msgstr "L<https://bugzilla.redhat.com/664558>"

#. type: textblock
#: ../guestfs-release-notes.pod:1550
msgid "RFE: Allow to set log callback in Ruby bindings"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:1556
msgid "RELEASE NOTES FOR LIBGUESTFS 1.20"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.20"

#. type: textblock
#: ../guestfs-release-notes.pod:1558
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.18.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1564
msgid "libvirt and sVirt (SELinux confinement)"
msgstr "libvirt і sVirt (контейнер SELinux)"

#. type: textblock
#: ../guestfs-release-notes.pod:1566
msgid ""
"You can I<optionally> use libvirt to launch and manage the backend appliance "
"by:"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1573
msgid "setting C<LIBGUESTFS_ATTACH_METHOD=libvirt[:URI]>"
msgstr "встановленням C<LIBGUESTFS_ATTACH_METHOD=libvirt[:URI]>"

#. type: textblock
#: ../guestfs-release-notes.pod:1577
msgid "using C<./configure --with-default-attach-method=libvirt[:URI]>"
msgstr "за допомогою C<./configure --with-default-attach-method=libvirt[:URI]>"

#. type: textblock
#: ../guestfs-release-notes.pod:1581
msgid "or calling the API method C<guestfs_set_attach_method>"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1585
msgid ""
"SVirt (SELinux confinement) is used to secure the libguestfs appliance, if "
"the libvirt backend is selected."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1588
msgid "virtio-scsi, larger number of drives, hotplugging"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1590
msgid ""
"Virtio-scsi is now used by default, if it is available.  This greatly "
"increases the number of drives that can be added to a single libguestfs "
"handle (up to 255)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1594
msgid "You can now hotplug drives (add and remove drives after launch)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1596
msgid "Libguestfs can now handle E<gt> 25 disks, in all APIs, tools and tests."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1598
msgid ""
"You can label drives when adding them, then refer to them by label (C</dev/"
"disk/guestfs/LABEL>) instead of having to use device names (C</dev/sda>)."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1602
msgid "new library features"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1604
msgid ""
"POSIX Access Control Lists (ACLs) and Linux filesystem capabilities can now "
"be read and written through the API."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1607
msgid ""
"Windows Dynamic Disks are now supported.  The metadata can only be read "
"(volumes cannot be modified or created).  However the data/filesystems in "
"the volumes themselves can be mounted, read and written (Matthew Booth)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1612
msgid ""
"Hivex (Windows Registry editing) is now directly supported through the API, "
"making reading or editing the Windows Registry much more efficient."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1616
msgid ""
"Several libguestfs APIs were reimplemented so they no longer have any limits "
"on output.  The reimplemented APIs are: C<guestfs_cat>, C<guestfs_find>, "
"C<guestfs_read_file>, C<guestfs_read_lines>, C<guestfs_write>, "
"C<guestfs_write_append>, C<guestfs_lstatlist>, C<guestfs_lxattrlist>, "
"C<guestfs_readlinklist>, C<guestfs_ls>."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1622 ../guestfs-release-notes.pod:2156
#: ../guestfs-release-notes.pod:2443
msgid "virt tools"
msgstr "virt tools"

#. type: textblock
#: ../guestfs-release-notes.pod:1624
msgid "C<guestfish touch 'win:c:\\new_file'> now works as expected."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1626
msgid ""
"C<guestfish> has a new I<--network> option, which enables the user network "
"in libguestfs."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1629
msgid "You can set C<GUESTFISH_PS1> to use fancy prompts in C<guestfish>."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1631
msgid ""
"C<rsync>, C<ssh>, C<less> and C<lrzip> commands are now available in virt-"
"rescue.  In addition, C<rsync> can be used through the API for doing "
"incremental copies."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1635
msgid "C<virt-sparsify> uses qcow2 v3 for increased efficiency."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1637
msgid "C<virt-sysprep> enhancements:"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1643
msgid "generate new UUIDs for PVs and VGs"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1647
msgid "remove the local machine ID (Wanlong Gao)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1651
msgid "remove ABRT data (Wanlong Gao)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1655
msgid "remove puppet keys and log files (Wanlong Gao)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1659
msgid "remove process accounting files (Wanlong Gao)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1663
msgid ""
"new I<--firstboot> parameter allowing firstboot scripts for customizing "
"guests"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1668
msgid "remove HOSTNAME field from C<ifcfg-eth*> files (Wanlong Gao)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1672
msgid "miscellaneous improvements for SuSE (Olaf Hering)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1676
msgid "remove man pages cache (Wanlong Gao)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1680
msgid "remove crash data generated by kexec-tools (Wanlong Gao)"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1684
msgid "C<virt-make-fs> can now create virtual floppy disks (VFDs)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1686
msgid ""
"C<guestmount> has a I<--pid-file> option, which can be used to avoid a race "
"condition between unmounting the filesystem and using the underlying disk "
"image."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1690 ../guestfs-release-notes.pod:2412
msgid "language bindings"
msgstr "прив’язки до мов програмування"

#. type: textblock
#: ../guestfs-release-notes.pod:1692
msgid ""
"Full-featured Lua bindings have been added in this release (thanks to Jerome "
"Vuarand for many suggestions)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1695
msgid "In Ruby, optional arguments hash is optional."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1697
msgid ""
"In Python, optional arguments now don't use special \"sentinel\" values, so "
"any integer can be passed as an optional argument."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1700
msgid "Erlang bindings now come with examples and tests."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1702
msgid "Erlang bindings now handle 64 bit integer parameters correctly."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1704
msgid ""
"The automated 'bindtests' now test for 64 bit cleanliness in parameter "
"passing.  Several bugs in the bindings were found and fixed as a result."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1708
msgid ""
"Better handling of blocking and non-blocking functions should make "
"libguestfs calls more efficient."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1711 ../guestfs-release-notes.pod:2201
#: ../guestfs-release-notes.pod:2430 ../guestfs-release-notes.pod:2604
msgid "inspection"
msgstr "перевірка"

#. type: textblock
#: ../guestfs-release-notes.pod:1713
msgid ""
"Windows guests with unlimited-sized Registries are now supported.  By adding "
"the hivex API to the libguestfs API, it is much more efficient and easier to "
"inspect and modify the Windows Registry in guests."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1718
msgid "Better support for SuSE guests (Olaf Hering)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1720
msgid "Return the architecture of installed applications (John Eckersberg)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1722
msgid "Windows 8 is now supported."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1724
msgid "Fedora 18 is now supported."
msgstr "Тепер підтримується Fedora 18."

#. type: textblock
#: ../guestfs-release-notes.pod:1726
msgid "Inspection of ISOs/CDs/DVDs can now use the libosinfo database."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1728
msgid "ports"
msgstr "порти"

#. type: textblock
#: ../guestfs-release-notes.pod:1730
msgid ""
"Libguestfs without the appliance can be compiled on Mac OS X (Masami HIRATA)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1733
msgid ""
"RHEL 5 is now explicitly supported through the 'oldlinux' branch in upstream "
"git."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1736
msgid ""
"PowerPC 64 bit is now supported.  Also libguestfs has been examined for "
"endianness bugs and these have been fixed."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1739
msgid "daemon"
msgstr "фонова служба"

#. type: textblock
#: ../guestfs-release-notes.pod:1741
msgid "A man page for the daemon (L<guestfsd(8)>) is included."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:1745
msgid "guestfish history file"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1747
msgid ""
"The C<$HOME/.guestfish> history file is now created with 0600 permissions "
"(instead of 0644 before) so it is no longer world readable."
msgstr ""

#. type: =head2
#: ../guestfs-release-notes.pod:1751 ../src/guestfs.pod:2135
msgid "CVE-2012-2690"
msgstr "CVE-2012-2690"

#. type: textblock
#: ../guestfs-release-notes.pod:1753
msgid ""
"Old versions of both C<virt-edit> and the C<guestfish> C<edit> command "
"created a new file containing the changes but did not set the permissions, "
"etc of the new file to match the old one.  The result of this was that if "
"you edited a security sensitive file such as C</etc/shadow> then it would be "
"left world-readable after the edit."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1759
msgid ""
"This issue was assigned CVE-2012-2690, and is fixed in libguestfs E<ge> 1.16."
msgstr ""
"Цій ваді було надано код CVE-2012-2690. Її було виправлено у libguestfs "
"E<ge> 1.16."

#. type: textblock
#: ../guestfs-release-notes.pod:1761
msgid ""
"For further information, see L<https://bugzilla.redhat.com/show_bug.cgi?"
"id=788642>"
msgstr ""
"Докладніші дані можна знайти на сторінці L<https://bugzilla.redhat.com/"
"show_bug.cgi?id=788642>"

#. type: verbatim
#: ../guestfs-release-notes.pod:1766
#, no-wrap
msgid ""
" acl-delete-def-file\n"
" acl-get-file\n"
" acl-set-file\n"
" canonical-device-name\n"
" cap-get-file\n"
" cap-set-file\n"
" create-flags\n"
" device-index\n"
" disk-has-backing-file\n"
" disk-format\n"
" disk-virtual-size\n"
" filesystem-available\n"
" fill-dir\n"
" fstrim\n"
" get-cachedir\n"
" get-libvirt-requested-credentials\n"
" get-libvirt-requested-credential-prompt\n"
" get-libvirt-requested-credential-challenge\n"
" get-libvirt-requested-credential-defresult\n"
" get-tmpdir\n"
" hivex-close\n"
" hivex-commit\n"
" hivex-node-add-child\n"
" hivex-node-children\n"
" hivex-node-delete-child\n"
" hivex-node-get-child\n"
" hivex-node-get-value\n"
" hivex-node-name\n"
" hivex-node-parent\n"
" hivex-node-set-value\n"
" hivex-node-values\n"
" hivex-open\n"
" hivex-root\n"
" hivex-value-key\n"
" hivex-value-type\n"
" hivex-value-utf8\n"
" hivex-value-value\n"
" inspect-list-applications2 (John Eckersberg)\n"
" list-ldm-volumes\n"
" list-ldm-partitions\n"
" ldmtool-create-all\n"
" ldmtool-diskgroup-disks\n"
" ldmtool-diskgroup-name\n"
" ldmtool-diskgroup-volumes\n"
" ldmtool-remove-all\n"
" ldmtool-scan\n"
" ldmtool-scan-devices\n"
" ldmtool-volume-hint\n"
" ldmtool-volume-partitions\n"
" ldmtool-volume-type\n"
" ls0\n"
" max-disks\n"
" mke2fs (Wanlong Gao)\n"
" mklost-and-found\n"
" mkswap [added label and uuid optional arguments]\n"
" mktemp (Wanlong Gao)\n"
" nr-devices\n"
" parse-environment\n"
" parse-environment-list\n"
" rm-f\n"
" rsync\n"
" rsync-in\n"
" rsync-out\n"
" set-cachedir\n"
" set-libvirt-supported-credentials\n"
" set-libvirt-requested-credential\n"
" set-tmpdir\n"
" shutdown [backported to 1.16 and 1.18]\n"
" tar-in [added compress flag]\n"
" tar-out [added compress, numericowner, excludes flags]\n"
" umount [added force and lazy optional arguments]\n"
" utsname\n"
" xfs-admin (Wanlong Gao)\n"
" xfs-growfs (Wanlong Gao)\n"
" xfs-info (Wanlong Gao)\n"
" xfs-repair (Wanlong Gao)\n"
"\n"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1843
msgid "In the C API only:"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:1845
#, no-wrap
msgid ""
" guestfs_push_error_handler\n"
" guestfs_pop_error_handler\n"
"\n"
msgstr ""
" guestfs_push_error_handler\n"
" guestfs_pop_error_handler\n"
"\n"

#. type: textblock
#: ../guestfs-release-notes.pod:1850
msgid "qemu E<ge> 1.1 is required (E<ge> 1.2 preferred)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1852
msgid "febootstrap E<ge> 3.20 is required."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1854
msgid ""
"libvirt is optional, but if you want to use the new libvirt backend for "
"launching the appliance then libvirt E<ge> 0.10.2 would be required."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1858
msgid ""
"Coverity has been run over the complete codebase, and many issues fixed "
"(thanks Ondrej Vasik, Kamil Dudka)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1861
msgid ""
"Functions which previously had no optargs can now be converted to ones with "
"optargs, making extending the API much more flexible.  Source and binary "
"backwards compatibility is preserved for users of the API."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1865
msgid ""
"The way that libguestfs APIs and structures are represented in the generator "
"has changed to use an OCaml struct instead of a tuple.  This makes generator "
"descriptions more flexible and easier to understand.  For details see "
"commits 39d1a7db and eb185eef."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1870
msgid "Separation of the library code into more files:"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1876
msgid ""
"Launch backends are now located in separate files eg. C<src/launch-appliance."
"c>, C<src/launch-libvirt.c>."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1881
msgid ""
"Generated action code is now split over several C<src/action*.c> files, for "
"faster compilation."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1886
msgid "The huge C<src/guestfs.c> file is now split into smaller logical units."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1891
msgid ""
"POD (documentation) is now generated using a rewritten Perl program instead "
"of pod2* + shell scripts."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1894
msgid "Man pages now contain stable dates (Hilko Bengen)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1896
msgid ""
"Skipped tests now exit with code 77, so they appear as C<SKIP:> in C<make "
"check> output."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1899
msgid "The parallel mount-local test has been rewritten in C (RHBZ#838081)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1901
msgid "Ruby 1.8.5 is now supported (though Ruby E<ge> 1.9 is preferred)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1903
msgid ""
"Perl bindings can be disabled via C<./configure --disable-perl> (Wulf C. "
"Krueger).  Note that Perl is still required in order to build libguestfs."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1907
msgid ""
"Java bindings are now enabled/disabled using C<./configure --with-java> or "
"C<./configure --without-java> (Wulf C. Krueger)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1910
msgid ""
"New configure options C<./configure --enable-code-profiling> and C<./"
"configure --enable-code-coverage>."
msgstr ""
"Нові параметри налаштування: C<./configure --enable-code-profiling> і C<./"
"configure --enable-code-coverage>."

#. type: textblock
#: ../guestfs-release-notes.pod:1913
msgid "Multiple fixes to use of 64 bit integers in language bindings."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1915
msgid ""
"The appliance backend now uses sgabios instead of vgabios (Dan Berrange)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1918
msgid ""
"The C<./run> script now sets enough environment variables that you can run "
"OCaml, Python, Ruby, Java, GJS, Erlang, Lua programs."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1921
msgid ""
"C<./run --test> flag for running tests with minimal output.  It also prints "
"the time taken to run each test."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1924
msgid ""
"The C<./run> script now builds up paths cumulatively, meaning that you can "
"use C<./run> twice, or use the libguestfs and libvirt C<./run> scripts "
"together."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1928
msgid ""
"You can extract a list of external commands required by the daemon, making "
"building the appliance on certain distros easier (Olaf Hering)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1932
msgid "The C<virt-rescue> command is now tested during C<make check>."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1934
msgid ""
"The generator now removes unused generated files.  This helps when going "
"back and forth with git rebase, git bisect, etc."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1937
msgid ""
"Tests now run in a separate toplevel C<tmp/> directory in the source.  This "
"allows the directory to be labelled for SELinux (sVirt), and also makes it "
"easier to clean up."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1941
msgid ""
"C<make syntax-check> now works to a greater extent, and many problems in the "
"main code that were found by syntax-check have been fixed (thanks Jim "
"Meyering)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1945
msgid "Emacs mode (-*- foo -*-) has been added to generated files."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1947
msgid ""
"Progress bar output is now sent to C</dev/tty> so it doesn't end up in the "
"regular output of the program.  virt-resize and virt-sparsify now suppress "
"progress bars if stdout is not a tty."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1951
msgid ""
"There is now a C<./configure --without-libvirt> option.  This is useful for "
"testing that the code still compiles without libvirt."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1954
msgid ""
"There is now an internal mini-library for running commands.  This allows us "
"to redirect errors from external commands into events."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1957
msgid ""
"Code for handling temporary directories and the appliance cache was "
"completely overhauled."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1960
msgid "Code for temporarily ignoring/disabling errors now looks like this:"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:1962 ../src/guestfs.pod:2469
#, no-wrap
msgid ""
" guestfs_push_error_handler (g, NULL, NULL);\n"
" guestfs_mkdir (g, \"/foo\"); /* We don't care if this fails. */\n"
" guestfs_pop_error_handler (g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1966
msgid ""
"The C<tests/extra> directory has gone.  The \"extra tests\" are now split "
"into separately runnable targets, such as C<make check-valgrind>.  Use "
"C<make help> to get a summary of the targets."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1970
msgid ""
"The C<lpj> option is passed to the appliance kernel when using TCG.  This "
"should improve clock stability (thanks Marcelo Tosatti, Olaf Hering)."
msgstr ""

#. type: textblock
#: ../guestfs-release-notes.pod:1978
msgid "./bugs-in-changelog.sh 1.18.0.."
msgstr "./bugs-in-changelog.sh 1.18.0.."

#. type: =item
#: ../guestfs-release-notes.pod:1984
msgid "L<https://bugzilla.redhat.com/882417>"
msgstr "L<https://bugzilla.redhat.com/882417>"

#. type: textblock
#: ../guestfs-release-notes.pod:1986
msgid ""
"libguestfs tools fail with odd error messages if TMPDIR is not an absolute "
"path"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1988
msgid "L<https://bugzilla.redhat.com/882299>"
msgstr "L<https://bugzilla.redhat.com/882299>"

#. type: textblock
#: ../guestfs-release-notes.pod:1990
msgid ""
"Windows 8 guest disks can't be mounted: \"The NTFS partition is in an unsafe "
"state. Please resume and shutdown Windows fully (no hibernation or fast "
"restarting), or mount the volume read-only with the 'ro' mount option.\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1992
msgid "L<https://bugzilla.redhat.com/881953>"
msgstr "L<https://bugzilla.redhat.com/881953>"

#. type: textblock
#: ../guestfs-release-notes.pod:1994
msgid ""
"libguestfs: migration to /etc/hostname, /etc/vconsole.conf, /etc/locale.conf"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:1996
msgid "L<https://bugzilla.redhat.com/880801>"
msgstr "L<https://bugzilla.redhat.com/880801>"

#. type: textblock
#: ../guestfs-release-notes.pod:1998
msgid "virt-df with two -a options displays incorrect disk image name"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2000
msgid "L<https://bugzilla.redhat.com/879416>"
msgstr "L<https://bugzilla.redhat.com/879416>"

#. type: textblock
#: ../guestfs-release-notes.pod:2002
msgid "libguestfs-test-tool pauses when you use --help option"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2004
msgid "L<https://bugzilla.redhat.com/876579>"
msgstr "L<https://bugzilla.redhat.com/876579>"

#. type: textblock
#: ../guestfs-release-notes.pod:2006
msgid ""
"mke2fs API does not apply block device naming translation to journaldevice "
"optarg"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2008
msgid "L<https://bugzilla.redhat.com/860235>"
msgstr "L<https://bugzilla.redhat.com/860235>"

#. type: textblock
#: ../guestfs-release-notes.pod:2010
msgid ""
"SELinux policy ought to allow qemu to write to unconfined_u:object_r:"
"user_tmp_t:s0"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2012
msgid "L<https://bugzilla.redhat.com/859949>"
msgstr "L<https://bugzilla.redhat.com/859949>"

#. type: textblock
#: ../guestfs-release-notes.pod:2014
msgid ""
"RFE: inspect-list-applications does not return the architecture of RPM "
"packages"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2016
msgid "L<https://bugzilla.redhat.com/859885>"
msgstr "L<https://bugzilla.redhat.com/859885>"

#. type: textblock
#: ../guestfs-release-notes.pod:2018
msgid ""
"inspect-list-applications does not list all installed RPM packages with same "
"name and different versions"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2020
msgid "L<https://bugzilla.redhat.com/859876>"
msgstr "L<https://bugzilla.redhat.com/859876>"

#. type: textblock
#: ../guestfs-release-notes.pod:2022
msgid "guestfish printed paths are not canonicalized"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2024
msgid "L<https://bugzilla.redhat.com/859875>"
msgstr "L<https://bugzilla.redhat.com/859875>"

#. type: textblock
#: ../guestfs-release-notes.pod:2026
msgid "Progress bar output should go to tty(?) stderr(?)"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2028
msgid "L<https://bugzilla.redhat.com/858696>"
msgstr "L<https://bugzilla.redhat.com/858696>"

#. type: textblock
#: ../guestfs-release-notes.pod:2030
msgid ""
"virt-sysprep reports Guestfs.Error(\"read_lines: fopen: /etc/sysconfig/"
"network: No such file or directory\") on some Fedora guests"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2032
msgid "L<https://bugzilla.redhat.com/858128>"
msgstr "L<https://bugzilla.redhat.com/858128>"

#. type: textblock
#: ../guestfs-release-notes.pod:2034
msgid "libguestfs fail to list devices added by add-drive-ro-with-if twice"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2036
msgid "L<https://bugzilla.redhat.com/858126>"
msgstr "L<https://bugzilla.redhat.com/858126>"

#. type: textblock
#: ../guestfs-release-notes.pod:2038
msgid "virt-inspector fail to work with some windows guests"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2040
msgid "L<https://bugzilla.redhat.com/853762>"
msgstr "L<https://bugzilla.redhat.com/853762>"

#. type: textblock
#: ../guestfs-release-notes.pod:2042
msgid ""
"virt-sparsify should use a more robust method to detect the input format"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2044
msgid "L<https://bugzilla.redhat.com/853393>"
msgstr "L<https://bugzilla.redhat.com/853393>"

#. type: textblock
#: ../guestfs-release-notes.pod:2046
msgid "libvirt doesn't label console, serial sockets"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2048
msgid "L<https://bugzilla.redhat.com/853159>"
msgstr "L<https://bugzilla.redhat.com/853159>"

#. type: textblock
#: ../guestfs-release-notes.pod:2050
msgid "virt-rescue in Fedora 18 is completely broken"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2052
msgid "L<https://bugzilla.redhat.com/852394>"
msgstr "L<https://bugzilla.redhat.com/852394>"

#. type: textblock
#: ../guestfs-release-notes.pod:2054
msgid "libguestfs inspection limits registries to 100 MiB"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2056
msgid "L<https://bugzilla.redhat.com/852194>"
msgstr "L<https://bugzilla.redhat.com/852194>"

#. type: textblock
#: ../guestfs-release-notes.pod:2058
msgid "virt-sparsify --compress fails if output is raw format"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2060
msgid "L<https://bugzilla.redhat.com/847881>"
msgstr "L<https://bugzilla.redhat.com/847881>"

#. type: textblock
#: ../guestfs-release-notes.pod:2062
msgid "RFE: allow extra arguments (like --exclude) to tar-out"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2064
msgid "L<https://bugzilla.redhat.com/847880>"
msgstr "L<https://bugzilla.redhat.com/847880>"

#. type: textblock
#: ../guestfs-release-notes.pod:2066
msgid "tar-out should allow (or force) --numeric-owner"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2068
msgid "L<https://bugzilla.redhat.com/845522>"
msgstr "L<https://bugzilla.redhat.com/845522>"

#. type: textblock
#: ../guestfs-release-notes.pod:2070
msgid ""
"guestfish \"copy-out / localdir\" command fails with \"No such file or "
"directory\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2072
msgid "L<https://bugzilla.redhat.com/845488>"
msgstr "L<https://bugzilla.redhat.com/845488>"

#. type: textblock
#: ../guestfs-release-notes.pod:2074
msgid ""
"Long filenames on NTFS cause tar-out, copy-out etc to fail with error "
"\"Cannot open: File name too long\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2076
msgid "L<https://bugzilla.redhat.com/842307>"
msgstr "L<https://bugzilla.redhat.com/842307>"

#. type: textblock
#: ../guestfs-release-notes.pod:2078
msgid ""
"RFE: Need help designing and implementing selinux policy for libguestfs/sVirt"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2080
msgid "L<https://bugzilla.redhat.com/840572>"
msgstr "L<https://bugzilla.redhat.com/840572>"

#. type: textblock
#: ../guestfs-release-notes.pod:2082
msgid "virt-make-fs / tar-in should support vfat properly"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2084
msgid "L<https://bugzilla.redhat.com/840115>"
msgstr "L<https://bugzilla.redhat.com/840115>"

#. type: textblock
#: ../guestfs-release-notes.pod:2086
msgid ""
"guestfish touch problem - case_sensitive_path API expects the file to exist"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2088
msgid "L<https://bugzilla.redhat.com/836710>"
msgstr "L<https://bugzilla.redhat.com/836710>"

#. type: textblock
#: ../guestfs-release-notes.pod:2090
msgid "Data loss when writing to qcow2-format disk files"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2092
msgid "L<https://bugzilla.redhat.com/834712>"
msgstr "L<https://bugzilla.redhat.com/834712>"

#. type: textblock
#: ../guestfs-release-notes.pod:2094
msgid ""
"lvresize, lvresize-free fail unnecessarily if you don't change the size of "
"the LV: \"New size (nn extents) matches existing size (nn extents)\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2096
msgid "L<https://bugzilla.redhat.com/824716>"
msgstr "L<https://bugzilla.redhat.com/824716>"

#. type: textblock
#: ../guestfs-release-notes.pod:2098
msgid "compress-device-out didn't support bzip2"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2100
msgid "L<https://bugzilla.redhat.com/824043>"
msgstr "L<https://bugzilla.redhat.com/824043>"

#. type: textblock
#: ../guestfs-release-notes.pod:2102
msgid "guestfish unrecognized mount option gives confusing error message"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2104
msgid "L<https://bugzilla.redhat.com/823887>"
msgstr "L<https://bugzilla.redhat.com/823887>"

#. type: textblock
#: ../guestfs-release-notes.pod:2106
msgid ""
"Filenames containing Chinese characters can't be created on vfat filesystems"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2108
msgid "L<https://bugzilla.redhat.com/823885>"
msgstr "L<https://bugzilla.redhat.com/823885>"

#. type: textblock
#: ../guestfs-release-notes.pod:2110
msgid ""
"virt-make-fs cannot create vfat filesystem containing filesystems with "
"Chinese characters"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2112
msgid "L<https://bugzilla.redhat.com/823883>"
msgstr "L<https://bugzilla.redhat.com/823883>"

#. type: textblock
#: ../guestfs-release-notes.pod:2114
msgid "virt-make-fs -t fat fails with an obscure error message"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2116
msgid "L<https://bugzilla.redhat.com/823821>"
msgstr "L<https://bugzilla.redhat.com/823821>"

#. type: textblock
#: ../guestfs-release-notes.pod:2118
msgid "Inspection fails when /etc/HOSTNAME is empty"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2120
msgid "L<https://bugzilla.redhat.com/801117>"
msgstr "L<https://bugzilla.redhat.com/801117>"

#. type: textblock
#: ../guestfs-release-notes.pod:2122
msgid "libguestfs cannot get icon for Windows 8"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2124
msgid "L<https://bugzilla.redhat.com/798979>"
msgstr "L<https://bugzilla.redhat.com/798979>"

#. type: textblock
#: ../guestfs-release-notes.pod:2126
msgid ""
"Ubuntu install CDs from oneiric onwards are not recognized: \"multi-boot "
"operating systems are not supported\""
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2128
msgid "L<https://bugzilla.redhat.com/782167>"
msgstr "L<https://bugzilla.redhat.com/782167>"

#. type: textblock
#: ../guestfs-release-notes.pod:2130
msgid ""
"libguestfs doesn't recognize Windows Dynamic disks in some configurations, "
"eg. spanned"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2132
msgid "L<https://bugzilla.redhat.com/713678>"
msgstr "L<https://bugzilla.redhat.com/713678>"

#. type: textblock
#: ../guestfs-release-notes.pod:2134
msgid "Not all febootstrap messages are redirected to log callbacks"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2136
msgid "L<https://bugzilla.redhat.com/627675>"
msgstr "L<https://bugzilla.redhat.com/627675>"

#. type: textblock
#: ../guestfs-release-notes.pod:2138
msgid "libguestfs inspector code cannot handle /dev/disk/by-id/* paths"
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:2140
msgid "L<https://bugzilla.redhat.com/602997>"
msgstr "L<https://bugzilla.redhat.com/602997>"

#. type: textblock
#: ../guestfs-release-notes.pod:2142
msgid "part-get-bootable gives wrong result with an unordered part layout"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:2148
msgid "RELEASE NOTES FOR LIBGUESTFS 1.18"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.18"

#. type: textblock
#: ../guestfs-release-notes.pod:2150
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.16.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2158
#, no-wrap
msgid ""
"   - virt-sysprep has been rewritten and expanded (thanks Wanlong Gao)\n"
"     http://libguestfs.org/virt-sysprep.1.html\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2161
#, no-wrap
msgid ""
"   - virt-sparsify --zero is a new option that zeroes the named\n"
"     partition or filesystem\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2164
#, no-wrap
msgid ""
"   - virt-sparsify can now safely sparsify Linux swap partitions\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2166
#, no-wrap
msgid ""
"   - virt-sparsify fixed so it cleans up after ^C\n"
"     http://libguestfs.org/virt-sparsify.1.html\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2169
#, no-wrap
msgid ""
"   - a new tool 'libguestfs-make-fixed-appliance' is provided to build\n"
"     fixed appliances that can be copied to other machines that don't\n"
"     have febootstrap support\n"
"     http://libguestfs.org/libguestfs-make-fixed-appliance.1.html\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2174
#, no-wrap
msgid ""
"   - virt-filesystems now displays the parents (containers) of MD\n"
"     devices and volume groups\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2177
#, no-wrap
msgid ""
"   - virt-alignment-scan, run with no args, displays alignment information\n"
"     for all libvirt domains\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2180
#, no-wrap
msgid ""
"   - virt-df and virt-alignment-scan will display information from all\n"
"     guests even when a disk is inaccessible\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2183
#, no-wrap
msgid ""
"   - virt-rescue new --scratch option to make scratch disks\n"
"     https://rwmj.wordpress.com/2012/04/26/virt-rescue-scratch/#content\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2186
#, no-wrap
msgid ""
"   - virt-make-fs can now be used to create btrfs\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2188
#, no-wrap
msgid ""
"   - virt-edit preserves permissions, UID, GID and SELinux context\n"
"     when editing files\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2191
#, no-wrap
msgid ""
"   - guestfish passes the close event over stdout and remote correctly\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2193
#, no-wrap
msgid ""
"   - guestfish new '--pipe-error' option lets you detect errors in pipe\n"
"     commands\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2196
#, no-wrap
msgid ""
"   - guestfish globs now expand device names\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2198
#, no-wrap
msgid ""
"   - comma and colon characters in filenames now handled correctly by\n"
"     all virt tools\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2203
#, no-wrap
msgid ""
"   - added support for Fedora 17+\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2205
#, no-wrap
msgid ""
"   - added support for FreeDOS\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2207
#, no-wrap
msgid ""
"   - added support for Buildroot and Cirros\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2209
#, no-wrap
msgid ""
"   - inspection is now compatible with Windows guests that have been\n"
"     sysprepped (thanks Grant Williamson).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2214
#, no-wrap
msgid ""
"   - broad support for btrfs added, including adding multiple devices,\n"
"     fsck, snapshots (thanks Wanlong Gao)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2217
#, no-wrap
msgid ""
"   - the new 'mount-local' API brings FUSE support directly into the\n"
"     core libguestfs API\n"
"     https://rwmj.wordpress.com/2012/05/14/tip-using-mount-local-api-from-c/#content\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2221
#, no-wrap
msgid ""
"   - new man page: guestfs-performance(1), which contains performance\n"
"     tuning tips\n"
"     http://libguestfs.org/guestfs-performance.1.html\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2225
#, no-wrap
msgid ""
"   - new man page: guestfs-faq(1), Frequently Asked Questions\n"
"     http://libguestfs.org/guestfs-faq.1.html\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2228
#, no-wrap
msgid ""
"   - ENOTSUP (from guestfs_last_errno) is now returned for APIs that\n"
"     are not supported\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2231
msgid "examples"
msgstr "приклади"

#. type: verbatim
#: ../guestfs-release-notes.pod:2233
#, no-wrap
msgid ""
"   - 'copy_over' example showing how to copy between two handles\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2235
#, no-wrap
msgid ""
"   - 'display_icon' program displays the icon associated with a guest\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2237
#, no-wrap
msgid ""
"   - 'mount_local.c' example shows how to use the mount-local API\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2241 ../guestfs-release-notes.pod:2635
#, no-wrap
msgid ""
"  (no security problems were found or fixed in this release)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2245
#, no-wrap
msgid ""
"  btrfs-device-add: Add devices to a btrfs filesystem.\n"
"  btrfs-device-delete: Remove devices from a btrfs filesystem.\n"
"  btrfs-filesystem-sync: Sync a btrfs filesystem.\n"
"  btrfs-filesystem-balance: Balance a btrfs filesystem.\n"
"  btrfs-fsck: Check btrfs filesystem.\n"
"  btrfs-set-seeding: Enable or disable seeding.\n"
"  btrfs-subvolume-create: Create a btrfs snapshot.\n"
"  btrfs-subvolume-delete: Delete a btrfs snapshot.\n"
"  btrfs-subvolume-list: List btrfs snapshots and subvolumes.\n"
"  btrfs-subvolume-set-default: Set default btrfs subvolume.\n"
"  btrfs-subvolume-snapshot: Create a writable btrfs snapshot.\n"
"  get-e2attrs: List ext2 file attributes of a file.\n"
"  get-e2generation: Get ext2 file generation of a file.\n"
"  isoinfo, isoinfo-device: Get information from the header of ISO files.\n"
"  llz: List files with SELinux information.\n"
"  lvcreate-free: Create an LVM logical volume in % remaining free space.\n"
"  md-stat: Return underlying devices from an MD device.\n"
"  mkfs-brtfs: Make btrfs filesystem, with all tunables.\n"
"  mount-local, mount-local-run, umount-local: FUSE support in the API.\n"
"  ntfsclone-in, ntfsclone-out: Save, restore NTFS from backup.\n"
"  ntfsfix: Fix common errors and force Windows to check NTFS.\n"
"  set-e2attrs: Set or clear ext2 file attributes of a file.\n"
"  set-e2generation: Set ext2 file generation of a file.\n"
"  set-label: Unified interface for setting filesystem label.\n"
"  vgmeta: Get volume group metadata.\n"
"  wipefs: Wipe filesystem signatures from a device.\n"
"  zero-free-space: Zero free space in a filesystem.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2275
#, no-wrap
msgid ""
" - The debian/ subdirectory has been removed.  We recommend you use\n"
"   the official Debian packages made by Hilko Bengen.\n"
"   http://people.debian.org/~bengen/libguestfs/\n"
"   http://packages.debian.org/search?keywords=libguestfs\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2280
#, no-wrap
msgid ""
" - O_CLOEXEC / SOCK_CLOEXEC is now used for almost all file\n"
"   descriptors that the library opens.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2283
#, no-wrap
msgid ""
" - posix_fadvise is called when sequentially reading or writing large\n"
"   files.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2286
#, no-wrap
msgid ""
" - close all file descriptors and remove all signal handlers in the\n"
"   recovery process\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2289
#, no-wrap
msgid ""
" - multiple gcc warnings and Coverity bugs have been fixed;  many\n"
"   strict-overflow bugs have also been fixed\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2292
#, no-wrap
msgid ""
" - use ./configure --enable-valgrind-daemon to use valgrind on the\n"
"   daemon;  many errors have been fixed\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2295
#, no-wrap
msgid ""
" - use ./configure --with-qemu-options to pass extra options to qemu\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2297
#, no-wrap
msgid ""
" - the daemon now has a growable strings buffer type (DECLARE_STRINGSBUF)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2299
#, no-wrap
msgid ""
" - the <guestfs.h> header file works with C++ and we have a regression\n"
"   test for this\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2302
#, no-wrap
msgid ""
" - multiple APIs which should only be called in the CONFIG state now\n"
"   give an error if they are not\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2305
#, no-wrap
msgid ""
" - .gitignore fixed to use absolute paths\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2307
#, no-wrap
msgid ""
" - gobject bindings have been expanded, including mapping libguestfs\n"
"   events to gobject signals (thanks Matt Booth)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2310
#, no-wrap
msgid ""
" - gobject documentation is generated properly (thanks Matt Booth)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2312
#, no-wrap
msgid ""
" - gobject header files now live in a subdirectory\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2314
#, no-wrap
msgid ""
" - CompareWithString test in the generator now works\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2316
#, no-wrap
msgid ""
" - FUInt32, FUInt64 struct field types now use the correct XDR type\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2318
#, no-wrap
msgid ""
" - OCaml tests are now run on bytecode and native code.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2320
#, no-wrap
msgid ""
" - java -Xlint:all is used, and all warnings have been fixed\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2322
#, no-wrap
msgid ""
" - bmptopng, wrestool (etc) missing or failure no longer prints\n"
"   warning messages\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2325
#, no-wrap
msgid ""
" - ruby: Use RbConfig instead of Config.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2327
#, no-wrap
msgid ""
" - PYTHONPATH is set by the ./run script.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2329
#, no-wrap
msgid ""
" - appliance building is now thread-safe.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2331
#, no-wrap
msgid ""
" - appliance now uses 'ip' instead of 'ifconfig' and 'netstat'\n"
"   commands\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2334
#, no-wrap
msgid ""
" - several fixes to make parallel builds work properly\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2336
#, no-wrap
msgid ""
" - guestfish --listen now cleans up properly\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2338
#, no-wrap
msgid ""
" - the BUSY state has been removed\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2340
#, no-wrap
msgid ""
" - gettextize has been removed, replaced by a simple Makefile.am\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2342
#, no-wrap
msgid ""
" - gettext support now covers virt-resize, virt-sparsify and virt-sysprep\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2344
#, no-wrap
msgid ""
" - better support for the arm architecture\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2348
#, no-wrap
msgid ""
" - 822490 virt-ls error: \"libguestfs: error: checksum: path: parameter cannot be NULL\"\n"
" - 816839 data overflow error when debug progress -1\n"
" - 816098 virt-make-fs fails to make a btrfs filesystem because it doesn't allocate enough space\n"
" - 811872 inspection fails on ubuntu 10.04 guest with encrypted swap\n"
" - 811650 guestfs_last_error not set when qemu fails early during launch\n"
" - 811649 libguestfs cannot open disk images which are symlinks to files that contain ':' (colon) character\n"
" - 811117 [RFE][virt-sysprep] net-hwaddr not removed from \"ifcfg-*\" files on rhel\n"
" - 811112 [RFE][virt-sysprep] hostname can not be changed on rhel system\n"
" - 809361 inspection doesn't recognize Fedora 18 (grub2 + GPT)\n"
" - 807905 mkfs blocksize option breaks when creating btrfs\n"
" - 805070 virt-filesystems should show 'parents' of LV and RAID devices\n"
" - 804464 libguestfs cannot be built when LINGUAS is different then ja or uk\n"
" - 803664 libguestfs inspection fails on Windows XP: libguestfs: error: hivex: could not locate HKLM\\SYSTEM\\MountedDevices\n"
" - 803533 guestfish: write error\n"
" - 802389 event handlers for 'close' event doesn't work in remote mode\n"
" - 802109 libguestfs uses putc on stderr, results in many individual 1 byte writes of debug messages\n"
" - 801640 [RFE] the error reported by resize2fs-M need to be more clear\n"
" - 801298 Possible null dereference and resource leaks\n"
" - 801273 Document for set-pgroup need to be updated\n"
" - 798196 virt-resize confuses format and output_format variables; using --output-format sets the input format\n"
" - 797986 virt-resize on Windows XP in sysprep state causes \"UNMOUNTABLE_BOOT_VOLUME\" BSOD\n"
" - 796520 [RFE] Prevent user from running some appliance configure commands after appliance boot up\n"
" - 790721 multiprovider build error: RuntimeError: link: /tmp/.guestfs-0/kernel /tmp/.guestfs-0/kernel.10139: File exists\n"
" - 789960 guestfsd crash when try to mount non-exist disk\n"
" - 789504 virt-df (other tools?) should not give up if a guest disk is missing\n"
" - 788641 virt-edit doesn't preserve file permissions\n"
" - 786215 libguestfs inspection does not recognize FreeDOS operating system\n"
" - 786188 libguestfs inspection does not recognize FreeDOS install CD\n"
" - 785668 aug-defnode: daemon crash\n"
" - 784647 Libguestfs uses deprecated net-tools\n"
" - 769304 virt-resize on RHEL 6 kernel fails to re-read the partition table\n"
" - 755729 Error message for resize2fs-M needs tweaking\n"
" - 701814 virt-win-reg fails on a libvirt guest that has no defined disk format: \"format parameter is empty or contains disallowed characters\"\n"
" - 679737 libguestfs: improve error message when zerofree is not available in the appliance\n"
" - 635971 glob mkfs ext2 /dev/vd[b-t]1 does not expand\n"
"\n"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:2386
msgid "RELEASE NOTES FOR LIBGUESTFS 1.16"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.16"

#. type: textblock
#: ../guestfs-release-notes.pod:2388
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.14.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2394
msgid "libguestfs"
msgstr "libguestfs"

#. type: verbatim
#: ../guestfs-release-notes.pod:2396
#, no-wrap
msgid ""
"   - allow XFS filesystems to be created over an existing filesystem\n"
"     (Wanlong Gao)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2399
#, no-wrap
msgid ""
"   - the (unspecified) default alignment for part-disk has been\n"
"     changed to 64K for better support of high-end network-attached\n"
"     storage\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2403
#, no-wrap
msgid ""
"   - new guestfs-testing(1) man page\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2405
#, no-wrap
msgid ""
"   - list-filesystems returns MD devices containing filesystems\n"
"     (Matthew Booth)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2408
#, no-wrap
msgid ""
"   - support for GCC >= 4.7 (Jim Meyering)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2410
#, no-wrap
msgid ""
"   - check user does not add the same drive twice (Wanlong Gao).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2414
#, no-wrap
msgid ""
"   - Experimental GObject bindings, with support for GObject\n"
"     Introspection.  You can now use libguestfs from Javascript.\n"
"     Please note these are not stable and final in this release.\n"
"     (Matthew Booth).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2419
#, no-wrap
msgid ""
"   - support for Ruby >= 1.9\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2421
#, no-wrap
msgid ""
"   - Ruby bindings can be disabled individually (Hilko Bengen)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2423
#, no-wrap
msgid ""
"   - support for Python 2.6, 3.x (Richard Jones, Hilko Bengen)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2425
#, no-wrap
msgid ""
"   - support for PHP >= 5.4\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2427
#, no-wrap
msgid ""
"   - new %guestfs_introspection hash is available in Perl bindings so\n"
"     you can query which optional arguments are available\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2432
#, no-wrap
msgid ""
"   - guests with MD devices can be inspected (Matthew Booth)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2434
#, no-wrap
msgid ""
"   - support for GNU/Hurd guests\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2436 ../guestfs-release-notes.pod:2545
#: ../guestfs-release-notes.pod:2703
msgid "guestfish"
msgstr "guestfish"

#. type: verbatim
#: ../guestfs-release-notes.pod:2438
#, no-wrap
msgid ""
"   - libguestfs events (such as progress bar events and log messages) can\n"
"     be trapped and processed by user-defined shell scripts.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2441
#, no-wrap
msgid ""
"   - MD devices are tab-completed (Matthew Booth)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2445
#, no-wrap
msgid ""
"   - New tool virt-format for erasing and making blank disks\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2447
#, no-wrap
msgid ""
"   - virt-sparsify new --compress and -o options to allow for compressed\n"
"     and different format output\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2450
#, no-wrap
msgid ""
"   - virt-sparsify can now detect and sparsify .vdi files\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2452
#, no-wrap
msgid ""
"   - virt-sysprep no longer requires xmlstarlet; a new virt-inspector --xpath\n"
"     option has been added to replace this functionality\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2455
#, no-wrap
msgid ""
"   - virt-rescue has a new --suggest option which suggests mount commands\n"
"     for the guest\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2458
#, no-wrap
msgid ""
"   - virt-resize no longer requires OCaml pcre library\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2460
msgid "libguestfs live"
msgstr "libguestfs live"

#. type: verbatim
#: ../guestfs-release-notes.pod:2462
#, no-wrap
msgid ""
"   - daemon will no longer try to edit your live /etc/lvm configuration\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2464
#, no-wrap
msgid ""
"   - fix a potential security problem with predictable /tmp names (Steve Kemp)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2468
#, no-wrap
msgid ""
"  CVE-2011-4127, RHBZ#757071\n"
"  Mitigate possible privilege escalation via SG_IO ioctl\n"
"  For more information, see: https://github.com/libguestfs/libguestfs/commit/9a5f784d511a8f00a8386f316eab41fe660430db\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2474
#, no-wrap
msgid ""
"  blkid: print all attributes of a device known to blkid (Wanlong Gao)\n"
"  e2fsck: access to more features of e2fsck (Wanlong Gao)\n"
"  list-md-devices: list of Linux MD devices (Matthew Booth)\n"
"  md-create: create an MD device\n"
"  md-detail: returns metadata for an MD device (Matthew Booth)\n"
"  md-stop: stop an MD device (Wanlong Gao)\n"
"  tune2fs: allow ext2/3/4 filesystems to be tuned\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2484
#, no-wrap
msgid ""
"  Git hosting has moved to http://github.com/libguestfs\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2486
#, no-wrap
msgid ""
"  The various test directories have been rearranged logically, and now\n"
"  all appear under 'tests/'.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2489
#, no-wrap
msgid ""
"  There is a 'make extra-tests' rule which runs ordinary tests and\n"
"  additional tests, using valgrind to check for memory problems.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2492
#, no-wrap
msgid ""
"  Multiple memory leaks and other problems found by valgrind and fixed.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2494
#, no-wrap
msgid ""
"  Support for optional arguments in the generator has been rewritten\n"
"  to provide more features and safety (Matthew Booth).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2497
#, no-wrap
msgid ""
"  With gcc -fvisibility=hidden is used for internal symbols, avoiding\n"
"  call indirection via the PLT.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2500
#, no-wrap
msgid ""
"  RHashtable functions can be tested in the generator.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2502
#, no-wrap
msgid ""
"  ADD_ARG macro in daemon allows arg lists to be constructed without\n"
"  risk of stack smashing.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2505
#, no-wrap
msgid ""
"  Fix generation of OCaml functions that have more than 10 arguments.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2507
#, no-wrap
msgid ""
"  psmisc has been added to the appliance, allowing use of 'fuser',\n"
"  'killall' and 'pstree' for debugging.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2510
#, no-wrap
msgid ""
"  bindtests now cover RBufferOut and optional arguments (Matthew Booth).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2514
#, no-wrap
msgid ""
" - 769680 temporary directories created during appliance builds are not cleaned up on error\n"
" - 761460 guestfs_utimens hangs on named pipes\n"
" - 761451 guestfs_utimens cannot set times on a directory\n"
" - 760775 \"guestfish: multi-boot operating systems are not supported by the -i option\" should be more explanatory\n"
" - 760669 guestfish copy-in and <! (inline execution) don't mix well: pclose: No child processes\n"
" - 760000 libguestfs fails to compile with Ruby >= 1.9\n"
" - 755729 Error message for resize2fs-M needs tweaking\n"
" - 750889 Python code incompatible with Python v3.\n"
" - 596761 Ctrl-\\ causes guestfish to abort\n"
"\n"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:2526
msgid "RELEASE NOTES FOR LIBGUESTFS 1.14"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.14"

#. type: textblock
#: ../guestfs-release-notes.pod:2528
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.12.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2534
#, no-wrap
msgid ""
"  Erlang bindings.\n"
"\n"
msgstr ""
"  прив’язки до Erlang.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:2536
#, no-wrap
msgid ""
"  virt-alignment-scan is a new tool to check the alignment of\n"
"  partitions within virtual machines or disk images.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2539
#, no-wrap
msgid ""
"  virt-sparsify is a new tool to make virtual machine disk images\n"
"  sparse.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2542
#, no-wrap
msgid ""
"  virt-sysprep is a new tool to make cloning guests from a template\n"
"  simpler.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2547
#, no-wrap
msgid ""
"   - New commands setenv, unsetenv, to set environment variables.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2549
#, no-wrap
msgid ""
"   - The input file and line number is printed in error messages.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2551
#, no-wrap
msgid ""
"   - guestfish progress bars are now a \"mini-library\" used by other\n"
"     tools too.\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2554
msgid "guestmount"
msgstr "guestmount"

#. type: verbatim
#: ../guestfs-release-notes.pod:2556
#, no-wrap
msgid ""
"   - the --live option (for access to live VMs) now works.\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2558
msgid "virt-cat"
msgstr "virt-cat"

#. type: verbatim
#: ../guestfs-release-notes.pod:2560
#, no-wrap
msgid ""
"   - virt-cat can now handle Windows paths and drive letters (RHBZ#693359).\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2562
msgid "virt-filesystems"
msgstr "virt-filesystems"

#. type: verbatim
#: ../guestfs-release-notes.pod:2564
#, no-wrap
msgid ""
"   - the MBR partition type byte is displayed in --long output.\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2566
msgid "virt-make-fs"
msgstr "virt-make-fs"

#. type: verbatim
#: ../guestfs-release-notes.pod:2568
#, no-wrap
msgid ""
"   - virt-make-fs now sets the MBR partition type byte correctly,\n"
"     improving compatibility with Windows (RHBZ#746295).\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2571 ../guestfs-release-notes.pod:2730
msgid "virt-resize"
msgstr "virt-resize"

#. type: verbatim
#: ../guestfs-release-notes.pod:2573
#, no-wrap
msgid ""
"   - virt-resize can now work with guests using extended and logical\n"
"     partitions, in particular Ubuntu guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2576
#, no-wrap
msgid ""
"   - virt-resize can now align the first partition of Windows guests,\n"
"     improving performance.  The new virt-resize --align-first option\n"
"     controls this behaviour.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2580
#, no-wrap
msgid ""
"   - The virt-resize --machine-readable flag makes it possible to use\n"
"     virt-resize from other programs.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2583
#, no-wrap
msgid ""
"   - Partitions are now aligned to 128 sectors (usually 64K) by\n"
"     default.  This improves efficiency on high-end storage.  The new\n"
"     virt-resize --alignment option allows the alignment to be\n"
"     adjusted.\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2588
msgid "virt-win-reg"
msgstr "virt-win-reg"

#. type: verbatim
#: ../guestfs-release-notes.pod:2590
#, no-wrap
msgid ""
"   - The syntax for deleting registry keys and values is documented\n"
"     in the man page (RHBZ#737944).\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2593
msgid "library"
msgstr "Бібліотека"

#. type: verbatim
#: ../guestfs-release-notes.pod:2595
#, no-wrap
msgid ""
"   - non-printing characters are escaped correctly in debug output.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2597
#, no-wrap
msgid ""
"   - GUESTFS_EVENT_ENTER is a new event type generated whenever a\n"
"     libguestfs function is called.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2600
#, no-wrap
msgid ""
"   - the library contains systemtap/DTrace probes.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2602
#, no-wrap
msgid ""
"   - the library can now be compiled without hivex (RHBZ#723474).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2606
#, no-wrap
msgid ""
"   - Improve detection of Windows disks.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2608
#, no-wrap
msgid ""
"   - Adds support for:\n"
"         ttylinux - a minimal Linux\n"
"         Mageia (thanks Michael Scherer)\n"
"         OpenSUSE and zypper (thanks Michael Scherer, Vincent Untz)\n"
"         Ubuntu logos (thanks Michael Scherer)\n"
"         NetBSD and pkgsrc (thanks Michael Scherer)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2615
#, no-wrap
msgid ""
"   - Handle some guest types that use /dev/root in /etc/fstab.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2617
#, no-wrap
msgid ""
"   - Fix handling of guests with > 26 disks (thanks Matthew Booth)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2619
#, no-wrap
msgid ""
"   - Add support for guests with HP Smart Array disks (thanks Matthew Booth)\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2621
msgid "febootstrap"
msgstr "febootstrap"

#. type: verbatim
#: ../guestfs-release-notes.pod:2623
#, no-wrap
msgid ""
"   - FEBOOTSTRAP_KERNEL, FEBOOTSTRAP_MODULES environment variables can\n"
"     be set in order to choose which kernel to use for the appliance.\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2626
msgid "misc"
msgstr "інше"

#. type: verbatim
#: ../guestfs-release-notes.pod:2628
#, no-wrap
msgid ""
"   - ArchLinux support now working with Linux 3.0 (thanks Erik Nolte)\n"
"\n"
msgstr ""
"   - Підтримка ArchLinux тепер працює для Linux 3.0 (завдяки Erik Nolte)\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:2630
#, no-wrap
msgid ""
"   - libvirt disks marked <readonly/> are now added readonly when\n"
"     using the virt-tools '-d' option.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2639
#, no-wrap
msgid ""
"  compress-out, compress-device-out, copy-device-to-device,\n"
"  copy-device-to-file, copy-file-to-device, copy-file-to-file,\n"
"  get-smp, part-to-partnum, set-smp.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2643
#, no-wrap
msgid ""
"  The mount API no longer implicitly adds -o sync,noatime options.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2645
#, no-wrap
msgid ""
"  add-domain has a new 'readonlydisk' optional parameter to control\n"
"  how <readonly/> disks are handled.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2650
#, no-wrap
msgid ""
" - Coverity was run on the source and more bugs were identified and\n"
"   fixed.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2653
#, no-wrap
msgid ""
" - PCRE library is now required to build libguestfs.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2655
#, no-wrap
msgid ""
" - APIC is now the default for the appliance.  You can also enable\n"
"   SMP support in the appliance.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2658
#, no-wrap
msgid ""
" - OCaml bindings now correctly acquire GC lock during callbacks.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2660
#, no-wrap
msgid ""
" - Out of tree builds should now work correctly (thanks Hilko Bengen).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2662
#, no-wrap
msgid ""
" - ./configure --with-extra=\"...\" can be used by packagers to set\n"
"   the extra version string.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2665
#, no-wrap
msgid ""
" - zero, zero-device APIs: if the blocks already contain zeroes,\n"
"   don't write zeroes, so that we don't unnecessarily make the\n"
"   underlying storage non-sparse.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2669
#, no-wrap
msgid ""
" - is-zero, is-zero-device APIs: optimize these so zero detection is\n"
"   faster.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2674
#, no-wrap
msgid ""
" - 748266 libguestfs should detect versions of qemu which require -machine pc option\n"
" - 747290 libguestfs ignores <readonly/> in libvirt XML\n"
" - 747287 Misleading error message when permission denied opening a disk image\n"
" - 746295 virt-make-fs doesn't set partition ID\n"
" - 744795 guestmount --live is not usable\n"
" - 737944 virt-win-reg hyphen (delete key) syntax may be wrong, and is not documented\n"
" - 733297 ruby event handlers fail with \"exception in callback: wrong argument type Proc (expected Data)\"\n"
" - 731744 libguestfs should escape special/non-printing characters in debug output\n"
" - 729887 appliance crashes running aug_init with flags=4\n"
" - 729075 libguestfs confuses Hp_recovery partition with Windows root filesystem\n"
" - 727178 error: luks_open: cryptsetup: error while loading shared libraries: libfipscheck.so.1: cannot open shared object file: No such file or directory\n"
" - 726739 libguestfs: error: aug_get: no matching node, trying to find hostname\n"
" - 723474 If hivex and/or pcre not installed, libguestfs fails to compile\n"
" - 693359 virt-cat and virt-edit don't handle case sensitive NTFS paths properly\n"
" - 678231 virt-inspector reports unknown filesystem UUID\n"
" - 671082 libguestfs does not work with kernel-rt\n"
" - 666578 libguestfs: unknown filesystem label SWAP-sda2\n"
" - 642821 virt-resize falls over on a disk image with a logical swap partition\n"
"\n"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:2695
msgid "RELEASE NOTES FOR LIBGUESTFS 1.12"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.12"

#. type: textblock
#: ../guestfs-release-notes.pod:2697
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.10.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2705
#, no-wrap
msgid ""
"   - guestfish strings can use escapes,\n"
"     eg. ><fs> write /foo \"line 1\\nline 2\\n\"\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2708
#, no-wrap
msgid ""
"   - guestfish write-append command can be used to append to files.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2710
#, no-wrap
msgid ""
"   - Long-running file uploads and downloads can be cancelled through the\n"
"     API or by hitting ^C in guestfish.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2713
#, no-wrap
msgid ""
"   - New guestfish \"display\" command for displaying graphical files\n"
"     inside guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2716
#, no-wrap
msgid ""
"   - In guestfish, tab completion now works on /dev/mapper devices.\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2718
msgid "virt-inspector"
msgstr "virt-inspector"

#. type: verbatim
#: ../guestfs-release-notes.pod:2720
#, no-wrap
msgid ""
"   - Inspection API can get an icon or logo for certain guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2722
#, no-wrap
msgid ""
"   - virt-inspector includes the logo and hostname for certain guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2724
#, no-wrap
msgid ""
"   - virt-inspector can now get the version and release numbers for RPM\n"
"     packages.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2727
#, no-wrap
msgid ""
"   - CentOS and Scientific Linux are now treated as separate distros by\n"
"     the inspection API.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2732
#, no-wrap
msgid ""
"   - virt-resize can now handle btrfs.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2734
#, no-wrap
msgid ""
"   - New virt-resize --ntfsresize-force option allows Windows VMs to be\n"
"     resized multiple times.\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2737
msgid "other virt tools"
msgstr "інші virt tools"

#. type: verbatim
#: ../guestfs-release-notes.pod:2739
#, no-wrap
msgid ""
"   - guestfish, guestmount, virt-cat, virt-df, virt-edit, virt-filesystems,\n"
"     virt-inspector, virt-ls and virt-rescue now allow you to use\n"
"     \"-d UUID\" option to specify a guest by UUID.  This makes them more\n"
"     robust to use from other programs.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2744
#, no-wrap
msgid ""
"   - virt-ls -lR option allows complex file iteration and guest analysis.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2746
#, no-wrap
msgid ""
"   - virt-win-reg supports HKEY_USERS\\<SID> and HKEY_USERS\\<username>.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2748
#, no-wrap
msgid ""
"   - virt-win-reg new option --unsafe-printable-strings allows printable\n"
"     strings to be displayed in the output (unsafely: read the documentation\n"
"     before using).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2752
#, no-wrap
msgid ""
"   - virt-edit has been rewritten in C.\n"
"\n"
msgstr ""

#. type: =head3
#: ../guestfs-release-notes.pod:2754
msgid "API and language bindings"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2756
#, no-wrap
msgid ""
"   - Java is now completely supported.\n"
"     See http://libguestfs.org/guestfs-java.3.html\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2759
#, no-wrap
msgid ""
"   - JRuby is supported via the Java bindings.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2761
#, no-wrap
msgid ""
"   - guestfs_close now appears in trace messages.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2763
#, no-wrap
msgid ""
"   - Python binding adds explicit g.close() method.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2765
#, no-wrap
msgid ""
"   - Python programs can now use the new event API.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2767
#, no-wrap
msgid ""
"   - Python GIL is released during libguestfs calls, allowing multithreaded\n"
"     Python programs to work properly.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2770
#, no-wrap
msgid ""
"   - 9pfs (Plan 9 filesystems exported from the host) are now supported.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2772
#, no-wrap
msgid ""
"   - Add -DGUESTFS_WARN_DEPRECATED=1 to warn about use of deprecated API\n"
"     functions in C programs.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2775
#, no-wrap
msgid ""
"   - New manual page guestfs-recipes(1) with recipes.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2777
#, no-wrap
msgid ""
"   - mkfs-opts can now set inode size and sector size on created filesystems\n"
"     (thanks Nikita Menkovich).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2780
#, no-wrap
msgid ""
"   - guestfs_last_errno is now accessible from OCaml (as g#last_errno ()).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2784
#, no-wrap
msgid ""
" - optargs_bitmask is checked even for calls that have no optional\n"
"   arguments.  This closes a possible exploit in the daemon from\n"
"   untrusted callers.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2790
#, no-wrap
msgid ""
"  btrfs-filesystem-resize, get-pgroup, inspect-get-icon, is-zero,\n"
"  is-zero-device, list-9p, list-dm-devices, mount-9p, ntfsresize-opts,\n"
"  set-pgroup, write-append\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2796
#, no-wrap
msgid ""
" - Coverity (a static analysis tool) was run across the codebase and\n"
"   many fixes were made.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2799
#, no-wrap
msgid ""
" - Generator can handle functions that return RBufferOut and have\n"
"   optional arguments.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2802
#, no-wrap
msgid ""
" - Compatible with Perl 5.14.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2804
#, no-wrap
msgid ""
" - Compatible with gcc 4.6.\n"
"\n"
msgstr ""
" - Сумісність з gcc 4.6.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:2806
#, no-wrap
msgid ""
" - Perform safety checks on QEMU.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2808
#, no-wrap
msgid ""
" - C API tests can now fully test calls that have optional arguments.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2810
#, no-wrap
msgid ""
" - Use ./configure --enable-install-daemon to install /usr/sbin/guestfsd.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2812
#, no-wrap
msgid ""
" - po-docs directory now covers all man pages.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2814
#, no-wrap
msgid ""
" - stderr from qemu process is now captured by the event subsystem.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2818
#, no-wrap
msgid ""
" - 602997 part-get-bootable gives wrong result with an unordered part layout\n"
" - 661280 virt-rescue: panic when shutting down: \"/sbin/reboot: No such file or directory\"\n"
" - 700369 qemu-system-x86_64 says 'KVM not supported for this target'\n"
" - 705200 guestmount attempt results in access denied\n"
" - 714981 'list-filesystems' does not know about virtio 9p filesystems or detect existing mounts\n"
" - 717786 libguestfs python bindings should have an explicit close call\n"
" - 721275 virt-resize in F16 should support btrfs\n"
"\n"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:2828
msgid "Release notes for libguestfs 1.10.0"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.10.0"

#. type: textblock
#: ../guestfs-release-notes.pod:2830
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.8.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2836
#, no-wrap
msgid ""
" - libguestfs and tools can be used against live virtual machines.\n"
"   See the 'guestfish --live' and 'guestmount --live' options, and (for\n"
"   the low-level interface) the new APIs set-attach-method and\n"
"   get-attach-method.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2841
#, no-wrap
msgid ""
" - New virt tools:\n"
"   virt-copy-in, virt-copy-out, virt-tar-in, virt-tar-out.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2844
#, no-wrap
msgid ""
" - libguestfs can get the drive letter mappings for Windows guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2846
#, no-wrap
msgid ""
" - virt-inspector displays drive letter mappings for Windows guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2848
#, no-wrap
msgid ""
" - Drive letters can now be used in virt-edit and guestfish programs\n"
"   when operating on Windows guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2851
#, no-wrap
msgid ""
" - virt-resize now works on 32 bit hosts.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2853
#, no-wrap
msgid ""
" - You can now inspect the install disks and live CDs of many different\n"
"   operating systems.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2856
#, no-wrap
msgid ""
" - guestfish <! cmd which executes a shell cmd and inlines the result.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2858
#, no-wrap
msgid ""
" - guestfish, guestmount, virt-rescue now all support --ro and --rw\n"
"   options, and the default for this can be chosen via a configuration\n"
"   file (/etc/libguestfs-tools.conf).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2862
#, no-wrap
msgid ""
" - New event API allows more than one callback to be registered for\n"
"   each event, makes it possible to call the API from other languages,\n"
"   and allows nearly all log, debug and trace messages to be rerouted\n"
"   from stderr.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2867
#, no-wrap
msgid ""
" - Greater FHS compliance for temporary files, including using /var/tmp\n"
"   for large cached files that should survive reboot (instead of /tmp).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2870
#, no-wrap
msgid ""
" - guestfish, guestmount -m option allows mount options to be passed\n"
"   through to the underlying filesystem.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2873
#, no-wrap
msgid ""
" - mkfs-opts allows filesystem features to be specified.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2875
#, no-wrap
msgid ""
" - More intelligent handling of mountpoints, allowing mkmountpoint, mount\n"
"   and umount-all commands to work together properly.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2878
#, no-wrap
msgid ""
" - Trace messages are prefixed with a distinct string, allowing them to\n"
"   be easily 'grepped' out from debug output.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2881
#, no-wrap
msgid ""
" - guestfs_launch (guestfish 'run' command) now produces progress\n"
"   messages (a guestfish progress bar) if it takes longer than 5\n"
"   seconds to run.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2885
#, no-wrap
msgid ""
" - Several long-running commands where we are unable to estimate time\n"
"   to completion generate \"pulse mode\" progress events.  Progress bar\n"
"   in guestfish has been updated to display these.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2889
#, no-wrap
msgid ""
" - Publish new example code in: C, Perl, Python, OCaml, Ruby.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2891
#, no-wrap
msgid ""
" - New virt-dhcp-address example program.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2893
#, no-wrap
msgid ""
" - The Java and Ruby bindings have been improved greatly.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2895
#, no-wrap
msgid ""
" - Perl includes a way to get the errno of the last error.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2897
#, no-wrap
msgid ""
" - Python bindings now compatible with rpyc (thanks Erez Shinan).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2899
#, no-wrap
msgid ""
" - Transifex is now being used to manage translations.\n"
"   http://www.transifex.net/projects/p/libguestfs/\n"
"\n"
msgstr ""
" - Для керування перекладами тепер використовується Transifex.\n"
"   http://www.transifex.net/projects/p/libguestfs/\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:2902
#, no-wrap
msgid ""
" - Inspection now supports Red Hat Desktop, Slackware distributions.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2904
#, no-wrap
msgid ""
" - Inspection no longer fails for Windows guests that have two or\n"
"   more disks.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2907
#, no-wrap
msgid ""
" - Inspection can now tell the difference between Windows 2008 Server\n"
"   and Windows 7.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2910
#, no-wrap
msgid ""
" - Inspection can detect 32 bit applications installed in 64 bit\n"
"   Windows, running on the WOW64 emulator.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2913
#, no-wrap
msgid ""
" - A series of protocol fixes has fixed the old bug RHBZ#576879\n"
"   which used to cause errors during the upload command to lose\n"
"   protocol synchronization.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2917
#, no-wrap
msgid ""
" - New logo!\n"
"\n"
msgstr ""
" - Новий логотип!\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:2921
#, no-wrap
msgid ""
"  [none]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2925
#, no-wrap
msgid ""
"  first-private, get-attach-method, inspect-get-drive-mappings,\n"
"  inspect-get-product-variant,\n"
"  inspect-get-windows-current-control-set, next-private, resize2fs-M,\n"
"  set-attach-method.\n"
"\n"
msgstr ""
"  first-private, get-attach-method, inspect-get-drive-mappings,\n"
"  inspect-get-product-variant,\n"
"  inspect-get-windows-current-control-set, next-private, resize2fs-M,\n"
"  set-attach-method.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:2932
#, no-wrap
msgid ""
" - The 'HACKING' file is obsolete.  The contents have been moved into\n"
"   a section of the guestfs(3) manual page.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2935
#, no-wrap
msgid ""
" - libguestfs-test-tool simplified.  It no longer needs the static\n"
"   binary or tries to construct an ISO.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2938
#, no-wrap
msgid ""
" - rpcgen-generated files are compiled with -fno-strict-aliasing\n"
"   which should be safer (thanks Matt Booth).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2941
#, no-wrap
msgid ""
" - virt-resize was rewritten in OCaml.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2943
#, no-wrap
msgid ""
" - guestfish and other tools tested with valgrind; some memory leaks\n"
"   were fixed.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2948
#, no-wrap
msgid ""
" - 502533 Updated Polish translation of libguestfs\n"
" - 576879 libguestfs protocol loses synchronization if you 'upload' before mounting disks\n"
" - 599503 document that mkmountpoint and umount-all cannot be mixed\n"
" - 617440 guestfish: fails to tilde expand '~' when the $HOME env is unset\n"
" - 664558 RFE: Allow to set log callback in Ruby bindings\n"
" - 665358 Punjabi Translation Completed (pa_IN)\n"
" - 666577 libguestfs: unknown filesystem /dev/fd0\n"
" - 667610 Multiple bugs, memory leaks in libguestfs ruby bindings\n"
" - 668112 virt-filesystems command fails on guest with corrupt filesystem label\n"
" - 668574 guestfish -i is trying to mount all mounts from /etc/fstab and fails with an error when device doesn't exists\n"
" - 673479 Add a grep-friendly string to LIBGUESTFS_TRACE output\n"
" - 674130 Inspection code fails for Windows guest with two disks\n"
" - 682756 libguestfs trace segfaults when list-filesystems returns error\n"
" - 682979 libguestfs incorrectly detects Red Hat desktop as 'redhat-based' instead of 'redhat'\n"
" - 690819 mkfs fails creating a filesystem on a disk device when using a disk with 'ide' interface\n"
" - 691389 Extended attributes don't work over guestmount (FUSE)\n"
" - 691724 virt-inspector reports unknown filesystem /dev/vda1\n"
" - 692545 inspect-list-applications fails to detect 32 bit apps installed under WOW64 emulator on 64 bit Windows\n"
" - 693324 sfdisk's python interface only accepts lists of type 'list' for the lines parameter\n"
"\n"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:2970
msgid "Release notes for libguestfs 1.8"
msgstr "Нотатки щодо випуску libguestfs 1.8"

#. type: textblock
#: ../guestfs-release-notes.pod:2972
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.6.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2978
#, no-wrap
msgid ""
" - Support and packages for Debian and Ubuntu.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2980
#, no-wrap
msgid ""
" - Daily builds from git repository on Debian and Ubuntu to reduce risk\n"
"   of regressions.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2983
#, no-wrap
msgid ""
" - Port to ArchLinux 'pacman' (thanks Thomas S Hatch).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2985
#, no-wrap
msgid ""
" - The following tools have been rewritten in C (originally in Perl):\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2987
#, no-wrap
msgid ""
"     . virt-cat\n"
"     . virt-df\n"
"     . virt-inspector\n"
"     . virt-ls\n"
"     . virt-rescue\n"
"\n"
msgstr ""
"     . virt-cat\n"
"     . virt-df\n"
"     . virt-inspector\n"
"     . virt-ls\n"
"     . virt-rescue\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:2993
#, no-wrap
msgid ""
" - Some C tools support encrypted guests automatically.  This is\n"
"   supported in: guestfish, guestmount, virt-cat, virt-inspector,\n"
"   virt-ls.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:2997
#, no-wrap
msgid ""
" - New tool virt-filesystems (in C) which is a replacement for\n"
"   virt-list-filesystems and virt-list-partitions, and has a superset\n"
"   of the functionality of those tools.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3001
#, no-wrap
msgid ""
" - guestfish, guestmount and the C tools use unified command line option\n"
"   parsing, so they support many common options such as '-a disk.img',\n"
"   '-d libvirt-domain', '-x', '-v'.  The old command line option\n"
"   parsing is preserved for compatibility in scripts etc.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3006
#, no-wrap
msgid ""
" - guestfish no longer has any dependencies on Perl\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3008
#, no-wrap
msgid ""
" - New man pages containing programming examples: guestfs-examples(3) (C/C++),\n"
"   guestfs-ocaml(3), guestfs-python(3), guestfs-ruby(3).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3011
#, no-wrap
msgid ""
" - Trace mode prints return values from API functions.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3013
#, no-wrap
msgid ""
" - virt-inspector can list applications installed in Windows guests, along\n"
"   with a great deal of information about those applications.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3016
#, no-wrap
msgid ""
" - Add support for inspecting: Linux Mint, Mandriva, FreeBSD.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3018
#, no-wrap
msgid ""
" - guestfish --rw option (with no effect currently) to make potentially\n"
"   dangerous write access explicit.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3021
#, no-wrap
msgid ""
" - guestfish --listen --csh for compatibility with csh, tcsh (thanks\n"
"   Eric Blake).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3024
#, no-wrap
msgid ""
" - The first upstream version that introduced each API function is now\n"
"   documented in guestfs(3).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3027
#, no-wrap
msgid ""
" - guestfs_last_errno allows you to retrieve the errno from the\n"
"   daemon, correctly translated to the local operating system.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3030
#, no-wrap
msgid ""
" - Functions can now have optional parameters.\n"
"\n"
msgstr ""
" - Тепер функції мають додаткові параметри.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3032
#, no-wrap
msgid ""
" - Progress bars and progress notifications can now happen for upload\n"
"   commands.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3035
#, no-wrap
msgid ""
" - Appliance builder more careful about not leaving temporary files\n"
"   around in /tmp.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3038
#, no-wrap
msgid ""
" - getfattr/setfattr commands added to virt-rescue.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3040
#, no-wrap
msgid ""
" - ROADMAP file covers roadmap and goals for future releases.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3044
#, no-wrap
msgid ""
" - New SECURITY section in guestfs(3) API documentation.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3046
#, no-wrap
msgid ""
" - virt-inspector no longer runs any guest commands.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3048
#, no-wrap
msgid ""
" - Inspection code is more careful about avoiding very large files\n"
"   from guests which might previously have caused a denial of service.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3051
#, no-wrap
msgid ""
" - FUSE calls into guestmount are now traced when using guestmount -x.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3055
#, no-wrap
msgid ""
" - add-domain\n"
" - add-drive-opts\n"
" - getxattr\n"
" - inspect-get-hostname\n"
" - inspect-get-package-format\n"
" - inspect-get-package-management\n"
" - inspect-get-roots\n"
" - inspect-list-applications\n"
" - lgetxattr\n"
" - mkfs-opts\n"
"\n"
msgstr ""
" - add-domain\n"
" - add-drive-opts\n"
" - getxattr\n"
" - inspect-get-hostname\n"
" - inspect-get-package-format\n"
" - inspect-get-package-management\n"
" - inspect-get-roots\n"
" - inspect-list-applications\n"
" - lgetxattr\n"
" - mkfs-opts\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3068
#, no-wrap
msgid ""
" - C programs now only link precisely with the libraries that they use.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3070
#, no-wrap
msgid ""
" - PCRE, libmagic, hivex and libvirt libraries are now completely\n"
"   optional for building.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3073
#, no-wrap
msgid ""
" - Multiple memory leaks and file descriptor leaks fixed.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3075
#, no-wrap
msgid ""
" - Add a POD wrapper to unify generation of man pages and HTML files\n"
"   across all programs.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3078
#, no-wrap
msgid ""
" - Source includes phony images of Fedora, Debian, Ubuntu and\n"
"   Windows guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3081
#, no-wrap
msgid ""
" - Ruby bindings have 'make install' rule.\n"
"\n"
msgstr ""
" - Прив’язки Ruby мають правило «make install».\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3083
#, no-wrap
msgid ""
" - <guestfs.h> is now a single file.\n"
"\n"
msgstr ""
" - <guestfs.h> тепер є єдиним файлом.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3085
#, no-wrap
msgid ""
" - <guestfs.h> does not require XDR headers.\n"
"\n"
msgstr ""
" - <guestfs.h> не потребує заголовків XDR.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3087
#, no-wrap
msgid ""
" - ocaml xml-light library is no longer required to build (thanks\n"
"   Maxim Koltsov).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3090
#, no-wrap
msgid ""
" - ./configure --disable-[...] for each language binding (thanks\n"
"   Maxim Koltsov).\n"
"\n"
msgstr ""
" - ./configure --disable-[...] для кожної з прив’язок до мови (завдяки\n"
"   Максимові Кольцову).\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3093
#, no-wrap
msgid ""
" - Old ocaml-viewer program removed (use guestfs-browser instead).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3095
#, no-wrap
msgid ""
" - New C API test type 'InitScratchFS' makes the tests run a little\n"
"   more quickly.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3098
#, no-wrap
msgid ""
" - Excluded packages in the appliance are now listed in a separate\n"
"   file appliance/excludelist.in, and can be customized per-distro.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3103
#, no-wrap
msgid ""
" - 663407 readlink and readlinklist returns /sysroot/ in some paths\n"
" - 661280 virt-rescue: panic when shutting down: \"/sbin/reboot: No such file or directory\"\n"
" - 657499 checksum: wrong check sum type causes umount to fail\n"
" - 655554 Whole disk paths are not made canonical by virt-inspector\n"
" - 654638 openssl updated to 1.0.0b libguestfs depends on exact file names\n"
" - 652796 ruby bindings not installed by 'make install', hence omitted from the binary distribution\n"
"\n"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:3112
msgid "RELEASE NOTES FOR LIBGUESTFS 1.6"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.6"

#. type: textblock
#: ../guestfs-release-notes.pod:3114
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.4.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3120
#, no-wrap
msgid ""
" - Use a new method for creating and caching the appliance.  This\n"
"   greatly improves the performance of libguestfs, often by a factor\n"
"   of x 4 to x 5.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3124
#, no-wrap
msgid ""
" - Support for guest inspection (like virt-inspector) via the ordinary\n"
"   API and all language bindings.  'guestfish -i' option is as a side-\n"
"   effect much quicker.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3128
#, no-wrap
msgid ""
" - virt-inspector and core inspection API can now detect guests running:\n"
"   Fedora, Debian, Ubuntu, Windows, Red Hat Enterprise Linux, CentOS,\n"
"   Scientific Linux, Gentoo, Pardus, Arch Linux, MeeGo.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3132
#, no-wrap
msgid ""
" - Support for LUKS whole-disk encryption in guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3134
#, no-wrap
msgid ""
" - PHP bindings.\n"
"\n"
msgstr ""
" - Прив’язки до PHP.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3136
#, no-wrap
msgid ""
" - Progress messages (and progress bars in guestfish and virt-resize)\n"
"   for certain long-running operations.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3139
#, no-wrap
msgid ""
" - virt-df is now much more efficient.  Use '--one-per-guest' to restore\n"
"   the old per-guest isolation behaviour.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3142
#, no-wrap
msgid ""
" - guestfish 'copy-in' and 'copy-out' commands for copying files and\n"
"   directories recursively in and out of the guest.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3145
#, no-wrap
msgid ""
" - guestfish 'hexedit' command for doing binary edits to devices and\n"
"   files.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3148
#, no-wrap
msgid ""
" - Change guestfish -i syntax to allow commands to be specified on the\n"
"   command line (retaining backwards compatibility).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3151
#, no-wrap
msgid ""
" - guestfish '-d <domain>' for adding disks from libvirt domains.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3153
#, no-wrap
msgid ""
" - guestfish '-N' option supports several new prepared disk image types:\n"
"         lvfs : disk with LV formatted with filesystem\n"
"           lv : disk with LV\n"
"     bootroot : boot+root\n"
"   bootrootlv : boot and root on LV\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3159
#, no-wrap
msgid ""
" - guestfish 'more' and 'edit' commands now work with arbitrary files.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3161
#, no-wrap
msgid ""
" - guestfish '--echo-keys' option allows you to echo keys/passphrases\n"
"   while typing them.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3164
#, no-wrap
msgid ""
" - guestmount now supports -a / -d / -i options, like guestfish.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3166
#, no-wrap
msgid ""
" - Use virtio-serial for communications with the appliance.  This\n"
"   also has a major performance benefit.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3169
#, no-wrap
msgid ""
" - virt-edit '-b' option to create a backup of edited files.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3171
#, no-wrap
msgid ""
" - virt-edit '-e' option for non-interactive edits to files.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3173
#, no-wrap
msgid ""
" - Ability to capture core dumps from the appliance (thanks Matthew Booth).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3175
#, no-wrap
msgid ""
" - virt-rescue now shuts down cleanly (thanks Matthew Booth).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3177
#, no-wrap
msgid ""
" - virt-rescue now has a --network option to enable network access.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3179
#, no-wrap
msgid ""
" - virt-resize can now handle guests which use GPT partition table format.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3181
#, no-wrap
msgid ""
" - virt-resize has better support for shrinking guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3183
#, no-wrap
msgid ""
" - virt-resize supports qcow2-format guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3185
#, no-wrap
msgid ""
" - $TMPDIR can be used to override almost all temporary directory usage.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3187
#, no-wrap
msgid ""
" - OCaml users can use an alternate OO-style of coding, eg. g#launch ()\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3189
#, no-wrap
msgid ""
" - The API supports calls which take optional parameters, eg.\n"
"     $g->add_drive_opts (\"disk\", readonly => 1);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3192
#, no-wrap
msgid ""
" - Trace output now escapes and shortens large strings (thanks\n"
"   Matthew Booth).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3195
#, no-wrap
msgid ""
" - Autosync is now on by default, resulting in more reliable behaviour\n"
"   when the handle is closed.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3198
#, no-wrap
msgid ""
" - virt-df --uuid option allows you to follow a domain across migration\n"
"   and renaming.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3201
#, no-wrap
msgid ""
" - Translations of manual pages.\n"
"\n"
msgstr ""
" - Переклади сторінок підручника (man).\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3205
#, no-wrap
msgid ""
" - CVE-2010-3851 libguestfs: missing disk format specifier when adding a disk\n"
"   https://www.redhat.com/archives/libguestfs/2010-October/msg00036.html\n"
"   This is comprehensively fixed in this release, and the fix will be\n"
"   backported to the other stable branches after more testing.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3210
#, no-wrap
msgid ""
" - virt-inspector no longer relies on untrusted guest code to list\n"
"   applications in some guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3215
#, no-wrap
msgid ""
"  download-offset, file-architecture, findfs-label, findfs-uuid,\n"
"  inspect-os, inspect-get-arch, inspect-get-distro,\n"
"  inspect-get-filesystems, inspect-get-major-version,\n"
"  inspect-get-minor-version, inspect-get-mountpoints,\n"
"  inspect-get-product-name, inspect-get-type, is-blockdev, is-chardev,\n"
"  is-fifo, is-lv, is-socket, is-symlink, list-filesystems, luks-add-key,\n"
"  luks-close, luks-format, luks-format-cipher, luks-kill-slot,\n"
"  luks-open, luks-open-ro, lvm-clear-filter, lvm-canonical-lv-name,\n"
"  lvm-set-filter, part-to-dev, pread-device, pwrite-device,\n"
"  upload-offset\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3228
#, no-wrap
msgid ""
" - Use size_t for loop iterators.\n"
" - Refactor the library code into separate files.\n"
" - Refactor the generator code into separate files.\n"
" - Generate guestfish commands.\n"
" - guestfish & guestmount options processing is unified.\n"
" - Protocol changes:\n"
"     error message size increased to 64K\n"
"     send errno to library\n"
" - Add 'make bindist' to make a binary distribution.\n"
" - Cleaner behaviour under valgrind.\n"
" - More testing of the guestfish command line options and libvirt\n"
"   integration.\n"
" - The Perl inspection code is no longer used by any of the tools.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3244
#, no-wrap
msgid ""
" - 646822 libguestfs trace mode should not print long binary strings\n"
" - 646821 virt-df should have --uuid option\n"
" - 646432 /dev/mapper paths should not be returned from guestfs_mountpoints\n"
" - 643624 libguestfs tools documentation should describe how to quote guest domain names from shell\n"
" - 642934 No way to specify disk format when adding a disk to libguestfs\n"
" - 642933 guestfs_list_filesystems should be used in all possible places\n"
" - 642932 guestmount options should match guestfish options\n"
" - 642930 virt-inspector (Sys::Guestfs::Lib) should use C inspection APIs\n"
" - 642929 C inspection code should ignore /dev/fd* in /etc/fstab\n"
" - 642826 virt-resize converts any other image format to raw without notifying user, instructions do not account for this\n"
" - 640961 Document that grub-install might be needed for old Linux guests after virt-resize\n"
" - 639986 virt-df --csv does not properly quote \" in libvirt domain names\n"
" - 639405 Interrupted cached appliance creation leaves libguestfs unusable\n"
" - 638901 Appliance filename should not contain repository name\n"
" - 638899 /dev/mapper paths should not be returned from C inspection APIs\n"
" - 636918 Updates to Spanish translation\n"
" - 636061 [abrt] guestfish-1.2.11-1.fc12: malloc_consolidate: Process /usr/bin/guestfish was killed by signal 11 (SIGSEGV)\n"
" - 635969 glob echo mkfs ext2 /dev/vd[b-t]1 prints garbage\n"
" - 634246 guestfs_part_get_parttype returns \"loop\" when run against a partition, LV or filesystem\n"
" - 633766 virt-resize --shrink fails\n"
" - 633357 Updates to Spanish translation\n"
" - 633096 virt-resize calculates block device size incorrectly, doesn't work with qcow2 target\n"
" - 629593 Dutch translation added\n"
" - 627556 Updates to Spanish translations of libguestfs\n"
" - 626843 Updates to Spanish translations\n"
" - 619793 [RFE] Need a way to determine if a particular block device is a logical volume\n"
" - 618556 virt-rescue return none zero value when exit\n"
" - 617200 mount operation failed and hung on some images which running in read-only mode\n"
" - 610880 libguestfs should set broader read perms on tmpdir, so works in some situations when executed with umask 077\n"
" - 599503 document that mkmountpoint and umount-all cannot be mixed\n"
" - 571714 Running virt-df on disk image relabels it, so qemu can no longer write to it.\n"
" - 502533 Updated Polish translation of libguestfs\n"
"\n"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:3279
msgid "RELEASE NOTES FOR LIBGUESTFS 1.4"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ LIBGUESTFS 1.4"

#. type: textblock
#: ../guestfs-release-notes.pod:3281
msgid ""
"These release notes only cover the differences from the previous stable/dev "
"branch split (1.2.0).  For detailed changelogs, please see the git "
"repository, or the ChangeLog file distributed in the tarball."
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3287
#, no-wrap
msgid ""
" - guestfish lets you choose a prepared disk image, eg:\n"
"     guestfish -N fs:ext4\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3290
#, no-wrap
msgid ""
" - Add write support to guestmount (FUSE) module.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3292
#, no-wrap
msgid ""
" - virt-resize can now resize the content of partitions and logical\n"
"   volumes in the guest, and we have better support for shrinking guests.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3295
#, no-wrap
msgid ""
" - Bash tab-completion script for guestfish.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3297
#, no-wrap
msgid ""
" - Add ZFS support to virt-rescue.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3299
#, no-wrap
msgid ""
" - New tool 'virt-make-fs' for creating filesystems with content.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3301
#, no-wrap
msgid ""
" - Allow suffixes on any guestfish number parameter, eg. \"1M\".\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3303
#, no-wrap
msgid ""
" - guestfish 'man' command opens the manual page.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3305
#, no-wrap
msgid ""
" - guestfish supports a \"heredoc\" syntax for uploading files:\n"
"     upload -<<_end_ /foo\n"
"     content\n"
"     _end_\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3310
#, no-wrap
msgid ""
" - Some guestfish commands now print their output in octal or hex\n"
"   where appropriate (RHBZ#583242).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3313
#, no-wrap
msgid ""
" - Allow dash prefix on guestfish command line.  This ignores any\n"
"   error from the second command:                   (RHBZ#578407)\n"
"     guestfish -- cmd1 : -cmd2 : cmd3\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3317
#, no-wrap
msgid ""
" - guestfish -h / help command now returns an error for non-existent\n"
"   commands (RHBZ#597145).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3320
#, no-wrap
msgid ""
" - New 'supported' command in guestfish to list optional groups of\n"
"   commands which are supported by the daemon / configuration.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3323
#, no-wrap
msgid ""
" - virt-inspector and guestfish -i now work for filenames which\n"
"   contain spaces (RHBZ#507810).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3326
#, no-wrap
msgid ""
" - Change the protocol to use link-local addresses, to avoid\n"
"   conflicting with any address that the host might be using\n"
"   (RHBZ#588763).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3330
#, no-wrap
msgid ""
" - libguestfs now sets the correct time and timezone on filesystem\n"
"   modifications.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3333
#, no-wrap
msgid ""
" - Sort the domains into alphabetical order in virt-df.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3335
#, no-wrap
msgid ""
" - Make mkfs-b command work for FAT and NTFS by mapping the blocksize\n"
"   parameter to the cluster size (RHBZ#599464).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3338
#, no-wrap
msgid ""
" - Add version numbers to Perl modules (RHBZ#521674).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3340
#, no-wrap
msgid ""
" - Localization now works for all the libguestfs tools (RHBZ#559963).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3342
#, no-wrap
msgid ""
" - Tools now support filesystem-on-image VMs (RHBZ#590167).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3344
#, no-wrap
msgid ""
" - virt-list-partitions has a '-t' option to show the total size of disks.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3346
#, no-wrap
msgid ""
" - Include extra Augeas lenses in the supermin appliance (Matthew Booth).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3348
#, no-wrap
msgid ""
" - Add error and close callbacks.\n"
"\n"
msgstr ""
" - Додано зворотні виклики error та close.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3350
#, no-wrap
msgid ""
" - Add explicit close method in the Perl API.\n"
"\n"
msgstr ""
" - Додано явний метод close до програмного інтерфейсу Perl.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3352
#, no-wrap
msgid ""
" - Multiple fixes for RHEL 5 compatibility.\n"
"\n"
msgstr ""
" - Декілька виправлень для забезпечення сумісності з RHEL 5.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3354
#, no-wrap
msgid ""
" - Multiple fixes for Debian/Ubuntu compatibility.\n"
"\n"
msgstr ""
" - Декілька виправлень для забезпечення сумісності з Debian/Ubuntu.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3356
#, no-wrap
msgid ""
" - Multiple revisions to improve the documentation.\n"
"\n"
msgstr ""
" - Декілька модифікацій з покращеннями у документації.\n"
"\n"

#. type: verbatim
#: ../guestfs-release-notes.pod:3360
#, no-wrap
msgid ""
" - Fix a potential DoS in virt-inspector and virt-v2v if a specially\n"
"   crafted disk image contained a char device in place of one of the\n"
"   configuration files that we read under /etc (RHBZ#582484).\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3366
#, no-wrap
msgid ""
" - aug-clear - clear Augeas path\n"
" - available-all-groups - return a list of all optional groups\n"
" - base64-in - upload base64-encoded data to file\n"
" - base64-out - download file and encode as base64\n"
" - checksum-device - compute checksums on the contents of a device\n"
" - checksums-out - compute checksums of multiple files in a directory\n"
" - debug-upload - upload a file to the appliance\n"
" - fallocate64 - preallocate a file in the guest filesystem\n"
" - fill-pattern - fill a file with a repeating pattern of bytes\n"
" - get-umask - get the current umask\n"
" - lvresize-free - expand an LV to fill free space\n"
" - ntfsresize - resize an NTFS filesystem\n"
" - ntfsresize-size - resize an NTFS filesystem (with size)\n"
" - part-del - delete a partition\n"
" - part-get-bootable - get the bootable flag of a partition\n"
" - part-get-mbr-id - get the MBR type byte of a partition\n"
" - part-set-mbr-id - set the MBR type byte of a partition\n"
" - pvresize-size - resize a physical volume (with size)\n"
" - pwrite - write to part of a file\n"
" - resize2fs-size - resize an ext2/3/4 filesystem (with size)\n"
" - txz-in - unpack compressed tarball to directory (RHBZ#580556)\n"
" - txz-out - pack directory into compressed tarball (RHBZ#580556)\n"
" - vfs-label - get the filesystem label\n"
" - vfs-uuid - get the filesystem UUID\n"
" - vgscan - rescan for LVM physical volumes, volume groups and logical volumes\n"
" - write - create a new file\n"
" - zero-device - write zeroes to an entire device\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3396
#, no-wrap
msgid ""
" - Extend the generator to support testing optional features.\n"
" - Stricter checks on input parameters to many calls (RHBZ#501893 RHBZ#501894)\n"
" - Extend the protocol to support sending arbitrary 8 bit data buffers.\n"
" - Ship 'BUGS' file with releases.  This is a summary of the bugs in\n"
"   the Red Hat Bugzilla database.\n"
" - Ship 'RELEASE-NOTES' file with releases, containing release notes.\n"
" - Unify supermin appliance building into one place, in febootstrap 2.7.\n"
" - Fix the protocol code to handle the case where both ends send cancel\n"
"   messages at the same time.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../guestfs-release-notes.pod:3408
#, no-wrap
msgid ""
" - 612178 guestfish: using -m option in conjunction with --listen option causes appliance to die\n"
" - 610880 libguestfs should set broader read perms on tmpdir, so works in some situations when executed with umask 077\n"
" - 604691 OCaml bindings are not thread safe\n"
" - 603870 Updates to Spanish translation\n"
" - 602592 [RFE] expose guestfs_close in perl bindings\n"
" - 600977 virt-df -h --csv \"Argument .. isn't numeric in printf\"\n"
" - 599464 mkfs-b does not support vfat/ntfs\n"
" - 598807 add_cdrom does not work in RHEL 6\n"
" - 598309 part-list and several other cmd failed on libguestfs on RHEL5\n"
" - 597145 guestfish 'help' command should indicate error in exit status with an unknown command\n"
" - 597135 guestfish write-file cmd does not check \"size\" parameter\n"
" - 597118 A warning should be given in the help of mke2journal-L for the length of label\n"
" - 597112 get-e2uuid should use blkid instead of \"tune2fs -l\" to get filesystem UUID\n"
" - 596776 virt-inspector doesn't discover modprobe aliases on RHEL 3 guests\n"
" - 596763 Updates to Spanish translation\n"
" - 593292 Updates to Spanish translation\n"
" - 592883 can not edit files on  images mounted with guestmount cmd\n"
" - 592360 Updates to Spanish translation\n"
" - 591250 virt-tar prints \"tar_in: tar subcommand failed on directory\" if the archive is compressed or not in the right format\n"
" - 591155 virt-tar prints \"tar_in: tar subcommand failed on directory\" if a disk image is not writable\n"
" - 591142 virt-inspector should give an error for unrecognized disk images\n"
" - 590167 virt-inspector and other virt tools should be able to handle filesystem-on-image VMs\n"
" - 589039 guestfish read-file cmd will cause daemon hang when read large files\n"
" - 588851 guestfs_launch() returns -1, but guestfs_last_error() == NULL\n"
" - 588763 libguestfs should use non-public or link-local addresses for appliance network\n"
" - 588733 Updates to Spanish translation\n"
" - 588651 guestfish 'strings-e' cmd does not give proper error message or hint\n"
" - 587484 lvresize can't reduce size of a volumn\n"
" - 585961 Updates to Spanish translation\n"
" - 585223 ntfsresize should support shrinking filesystems\n"
" - 585222 pvresize should support shrinking PVs\n"
" - 585221 resize2fs should support shrinking filesystems\n"
" - 584038 Updates to Spanish translation\n"
" - 583554 [FEAT] mknod-mode command is needed to set mode explicitly\n"
" - 583242 [RFE] guestfish should print outputs in a suitable base (eg. octal for modes)\n"
" - 582993 guestfish eats words when tab completing case (in)sensitive paths\n"
" - 582953 Misleading help information about lvcreate command\n"
" - 582948 mknod command doesn't make block, character or FIFO devices\n"
" - 582929 mknod doesn't check for invalid mode\n"
" - 582901 guestfish chmod/umask commands do not check invalid mode value\n"
" - 582899 guestfish:sparse is missed from command autocomplete list\n"
" - 582891 [Feature Request] behavior and return value of guestfish umask cmd should be changed\n"
" - 582548 [mknod] umask shouldn't take effect when mode is set explicitly\n"
" - 582484 some guestfish sub commands can not handle special files properly\n"
" - 582252 Updates to Spanish translation\n"
" - 581501 Updates to Spanish translation\n"
" - 580650 virt-inspector warns \"No grub default specified at /usr/lib/perl5/Sys/Guestfs/Lib.pm at [...]\"\n"
" - 580556 request for libguestfs to support .txz tarballs\n"
" - 580246 tar-in command hangs if uploading more than available space\n"
" - 580016 aug-ls in guestfish does not take augeas variable as argument\n"
" - 579664 guestfish doesn't report error when there is not enough space for image allocation\n"
" - 579608 multiple commands in guestfish can not work for symbol links\n"
" - 579155 libguestfs hangs if qemu doesn't start (in null vmchannel mode)\n"
" - 578407 the prefix '-' in sub-command isn't handled by guestfish in remote control mode\n"
" - 576879 libguestfs protocol loses synchronization if you 'upload' before mounting disks\n"
" - 559963 libguestfs Perl programs do set locale, but still localization doesn't work\n"
" - 521674 Perl modules are unversioned, but should carry version numbers\n"
" - 516096 Race condition in test_swapon_label_0: /sbin/blockdev: BLKRRPART: Device or resource busy\n"
" - 507810 guestfish -i / virt-inspector cannot handle spaces in filenames\n"
" - 502533 Updated Polish translation of libguestfs\n"
" - 501894 Some String parameters should be OptString\n"
" - 501893 String parameters should be checked for != NULL\n"
" - 501889 write-file does not support strings containing ASCII NUL\n"
" - 484986 grub-install fails on virtio disk\n"
"\n"
msgstr ""

#. type: =head1
#: ../guestfs-release-notes.pod:3475
msgid "RELEASE NOTES FOR HISTORICAL VERSIONS OF LIBGUESTFS"
msgstr "НОТАТКИ ЩОДО ВИПУСКУ ПОПЕРЕДНІХ ВЕРСІЙ LIBGUESTFS"

#. type: textblock
#: ../guestfs-release-notes.pod:3477
msgid ""
"Before 2010 libguestfs did not have official release notes or a formalized "
"version numbering system.  However these are links to historically "
"significant versions."
msgstr ""

#. type: =item
#: ../guestfs-release-notes.pod:3483
msgid "2009-11-10 (1.0.78)"
msgstr "10 листопада 2009 року (1.0.78)"

#. type: textblock
#: ../guestfs-release-notes.pod:3485
msgid ""
"L<https://www.redhat.com/archives/libguestfs/2009-November/msg00095.html>"
msgstr ""
"L<https://www.redhat.com/archives/libguestfs/2009-November/msg00095.html>"

#. type: =item
#: ../guestfs-release-notes.pod:3487
msgid "2009-09-13 (1.0.67)"
msgstr "13 вересня 2009 року (1.0.67)"

#. type: textblock
#: ../guestfs-release-notes.pod:3489
msgid "L<https://www.redhat.com/archives/libguestfs/2009-August/msg00281.html>"
msgstr ""
"L<https://www.redhat.com/archives/libguestfs/2009-August/msg00281.html>"

#. type: =item
#: ../guestfs-release-notes.pod:3491
msgid "2009-07-23 (1.0.64)"
msgstr "23 липня 2009 року (1.0.64)"

#. type: textblock
#: ../guestfs-release-notes.pod:3493
msgid "L<https://www.redhat.com/archives/libguestfs/2009-July/msg00059.html>"
msgstr "L<https://www.redhat.com/archives/libguestfs/2009-July/msg00059.html>"

#. type: =item
#: ../guestfs-release-notes.pod:3495
msgid "2009-07-14 (1.0.59)"
msgstr "14 липня 2009 року (1.0.59)"

#. type: textblock
#: ../guestfs-release-notes.pod:3497
msgid "L<https://www.redhat.com/archives/libguestfs/2009-July/msg00023.html>"
msgstr "L<https://www.redhat.com/archives/libguestfs/2009-July/msg00023.html>"

#. type: =item
#: ../guestfs-release-notes.pod:3499
msgid "2009-04-01 (the initial announcement)"
msgstr "1 квітня 2009 року (початкове оголошення)"

#. type: textblock
#: ../guestfs-release-notes.pod:3501
msgid ""
"L<http://rwmj.wordpress.com/2009/04/01/libguestfs-access-and-modify-virtual-"
"machine-disk-images/>"
msgstr ""
"L<http://rwmj.wordpress.com/2009/04/01/libguestfs-access-and-modify-virtual-"
"machine-disk-images/>"

#. type: textblock
#: ../guestfs-release-notes.pod:3507
msgid ""
"L<guestfs-examples(1)>, L<guestfs-faq(1)>, L<guestfs-performance(1)>, "
"L<guestfs-recipes(1)>, L<guestfs-testing(1)>, L<guestfs(3)>, "
"L<guestfish(1)>, L<http://libguestfs.org/>"
msgstr ""
"L<guestfs-examples(1)>, L<guestfs-faq(1)>, L<guestfs-performance(1)>, "
"L<guestfs-recipes(1)>, L<guestfs-testing(1)>, L<guestfs(3)>, "
"L<guestfish(1)>, L<http://libguestfs.org/>"

#. type: textblock
#: ../guestfs-release-notes.pod:3518
msgid "Richard W.M. Jones"
msgstr "Richard W.M. Jones"

#. type: textblock
#: ../inspector/virt-inspector.pod:3
msgid ""
"virt-inspector - Display operating system version and other information "
"about a virtual machine"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:7
#, no-wrap
msgid ""
" virt-inspector [--options] -d domname\n"
"\n"
msgstr ""
" virt-inspector [--параметри] -d назва_домену\n"
"\n"

#. type: verbatim
#: ../inspector/virt-inspector.pod:9
#, no-wrap
msgid ""
" virt-inspector [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""
" virt-inspector [--параметри] -a диск.img [-a диск.img ...]\n"
"\n"

#. type: verbatim
#: ../inspector/virt-inspector.pod:13
#, no-wrap
msgid ""
" virt-inspector domname\n"
"\n"
msgstr ""
" virt-inspector назва_домену\n"
"\n"

#. type: verbatim
#: ../inspector/virt-inspector.pod:15 ../inspector/virt-inspector.pod:145
#, no-wrap
msgid ""
" virt-inspector disk.img [disk.img ...]\n"
"\n"
msgstr ""
" virt-inspector диск.img [диск.img ...]\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:19
msgid ""
"B<virt-inspector> examines a virtual machine or disk image and tries to "
"determine the version of the operating system and other information about "
"the virtual machine."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:23
msgid "Virt-inspector produces XML output for feeding into other programs."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:25
msgid ""
"In the normal usage, use C<virt-inspector -d domname> where C<domname> is "
"the libvirt domain (see: C<virsh list --all>)."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:28
msgid ""
"You can also run virt-inspector directly on disk images from a single "
"virtual machine.  Use C<virt-inspector -a disk.img>.  In rare cases a domain "
"has several block devices, in which case you should list several I<-a> "
"options one after another, with the first corresponding to the guest's C</"
"dev/sda>, the second to the guest's C</dev/sdb> and so on."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:35
msgid ""
"You can also run virt-inspector on install disks, live CDs, bootable USB "
"keys and similar."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:38
msgid ""
"Virt-inspector can only inspect and report upon I<one domain at a time>.  To "
"inspect several virtual machines, you have to run virt-inspector several "
"times (for example, from a shell script for-loop)."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:43
msgid ""
"Because virt-inspector needs direct access to guest images, it won't "
"normally work over remote libvirt connections."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:46
msgid ""
"All of the information available from virt-inspector is also available "
"through the core libguestfs inspection API (see L<guestfs(3)/INSPECTION>).  "
"The same information can also be fetched using guestfish or via libguestfs "
"bindings in many programming languages (see L</GETTING INSPECTION DATA FROM "
"THE LIBGUESTFS API>)."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:78
msgid ""
"Libvirt is only used if you specify a C<domname> on the command line.  If "
"you specify guest block devices directly (I<-a>), then libvirt is not used "
"at all."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:91
msgid ""
"When prompting for keys and passphrases, virt-inspector normally turns "
"echoing off so you cannot see what you are typing.  If you are not worried "
"about Tempest attacks and there is no one else in the room you can specify "
"this flag to see what you are typing."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:100 ../tools/virt-list-filesystems:92
#: ../tools/virt-list-partitions:93 ../tools/virt-tar:140
#: ../tools/virt-win-reg:141
msgid ""
"Specify the format of disk images given on the command line.  If this is "
"omitted then the format is autodetected from the content of the disk image."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:104 ../tools/virt-list-filesystems:96
#: ../tools/virt-list-partitions:97 ../tools/virt-tar:144
#: ../tools/virt-win-reg:145
msgid ""
"If disk images are requested from libvirt, then this program asks libvirt "
"for this information.  In this case, the value of the format parameter is "
"ignored."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:108 ../resize/virt-resize.pod:407
#: ../resize/virt-resize.pod:503 ../sparsify/virt-sparsify.pod:199
#: ../tools/virt-list-filesystems:100 ../tools/virt-list-partitions:101
#: ../tools/virt-tar:148 ../tools/virt-win-reg:149
msgid ""
"If working with untrusted raw-format guest disk images, you should ensure "
"the format is always specified."
msgstr ""

#. type: =item
#: ../inspector/virt-inspector.pod:132
msgid "B<--xpath> query"
msgstr "B<--xpath> запит"

#. type: textblock
#: ../inspector/virt-inspector.pod:134
msgid ""
"Perform an XPath query on the XML on stdin, and print the result on stdout.  "
"In this mode virt-inspector simply runs an XPath query; all other inspection "
"functions are disabled.  See L</XPATH QUERIES> below for some examples."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:143
msgid "Previous versions of virt-inspector allowed you to write either:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:149
#, no-wrap
msgid ""
" virt-inspector guestname\n"
"\n"
msgstr ""
" virt-inspector назва_гостьової_системи\n"
"\n"

#. type: =head1
#: ../inspector/virt-inspector.pod:157
msgid "XML FORMAT"
msgstr "ФОРМАТ XML"

#. type: textblock
#: ../inspector/virt-inspector.pod:159
msgid ""
"The virt-inspector XML is described precisely in a RELAX NG schema file "
"C<virt-inspector.rng> which is supplied with libguestfs.  This section is "
"just an overview."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:163
msgid ""
"The top-level element is E<lt>operatingsystemsE<gt>, and it contains one or "
"more E<lt>operatingsystemE<gt> elements.  You would only see more than one "
"E<lt>operatingsystemE<gt> element if the virtual machine is multi-boot, "
"which is vanishingly rare in real world VMs."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:168
msgid "E<lt>operatingsystemE<gt>"
msgstr "E<lt>operatingsystemE<gt>"

#. type: textblock
#: ../inspector/virt-inspector.pod:170
msgid ""
"In the E<lt>operatingsystemE<gt> tag are various optional fields that "
"describe the operating system, its architecture, the descriptive \"product "
"name\" string, the type of OS and so on, as in this example:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:174
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     <root>/dev/sda2</root>\n"
"     <name>windows</name>\n"
"     <arch>i386</arch>\n"
"     <distro>windows</distro>\n"
"     <product_name>Windows 7 Enterprise</product_name>\n"
"     <product_variant>Client</product_variant>\n"
"     <major_version>6</major_version>\n"
"     <minor_version>1</minor_version>\n"
"     <windows_systemroot>/Windows</windows_systemroot>\n"
"     <format>installed</format>\n"
"\n"
msgstr ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     <root>/dev/sda2</root>\n"
"     <name>windows</name>\n"
"     <arch>i386</arch>\n"
"     <distro>windows</distro>\n"
"     <product_name>Windows 7 Enterprise</product_name>\n"
"     <product_variant>Client</product_variant>\n"
"     <major_version>6</major_version>\n"
"     <minor_version>1</minor_version>\n"
"     <windows_systemroot>/Windows</windows_systemroot>\n"
"     <format>installed</format>\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:187
msgid ""
"In brief, E<lt>nameE<gt> is the class of operating system (something like "
"C<linux> or C<windows>), E<lt>distroE<gt> is the distribution (eg. C<fedora> "
"but many other distros are recognized) and E<lt>archE<gt> is the guest "
"architecture.  The other fields are fairly self-explanatory, but because "
"these fields are taken directly from the libguestfs inspection API you can "
"find precise information from L<guestfs(3)/INSPECTION>."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:195
msgid ""
"The E<lt>rootE<gt> element is the root filesystem device, but from the point "
"of view of libguestfs (block devices may have completely different names "
"inside the VM itself)."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:199
msgid "E<lt>mountpointsE<gt>"
msgstr "E<lt>mountpointsE<gt>"

#. type: textblock
#: ../inspector/virt-inspector.pod:201
msgid ""
"Un*x-like guests typically have multiple filesystems which are mounted at "
"various mountpoints, and these are described in the E<lt>mountpointsE<gt> "
"element which looks like this:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:205
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <mountpoints>\n"
"       <mountpoint dev=\"/dev/vg_f13x64/lv_root\">/</mountpoint>\n"
"       <mountpoint dev=\"/dev/sda1\">/boot</mountpoint>\n"
"     </mountpoints>\n"
"\n"
msgstr ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <mountpoints>\n"
"       <mountpoint dev=\"/dev/vg_f13x64/lv_root\">/</mountpoint>\n"
"       <mountpoint dev=\"/dev/sda1\">/boot</mountpoint>\n"
"     </mountpoints>\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:213
msgid ""
"As with E<lt>rootE<gt>, devices are from the point of view of libguestfs, "
"and may have completely different names inside the guest.  Only mountable "
"filesystems appear in this list, not things like swap devices."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:218
msgid "E<lt>filesystemsE<gt>"
msgstr "E<lt>filesystemsE<gt>"

#. type: textblock
#: ../inspector/virt-inspector.pod:220
msgid ""
"E<lt>filesystemsE<gt> is like E<lt>mountpointsE<gt> but covers I<all> "
"filesystems belonging to the guest, including swap and empty partitions.  "
"(In the rare case of a multi-boot guest, it covers filesystems belonging to "
"this OS or shared with this OS and other OSes)."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:226
msgid "You might see something like this:"
msgstr "Ви побачите щось таке:"

#. type: verbatim
#: ../inspector/virt-inspector.pod:228
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <filesystems>\n"
"       <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
"         <type>ext4</type>\n"
"         <label>Fedora-13-x86_64</label>\n"
"         <uuid>e6a4db1e-15c2-477b-ac2a-699181c396aa</uuid>\n"
"       </filesystem>\n"
"\n"
msgstr ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <filesystems>\n"
"       <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
"         <type>ext4</type>\n"
"         <label>Fedora-13-x86_64</label>\n"
"         <uuid>e6a4db1e-15c2-477b-ac2a-699181c396aa</uuid>\n"
"       </filesystem>\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:238
msgid ""
"The optional elements within E<lt>filesystemE<gt> are the filesystem type, "
"the label, and the UUID."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:241
msgid "E<lt>applicationsE<gt>"
msgstr "E<lt>applicationsE<gt>"

#. type: textblock
#: ../inspector/virt-inspector.pod:243
msgid ""
"The related elements E<lt>package_formatE<gt>, E<lt>package_managementE<gt> "
"and E<lt>applicationsE<gt> describe applications installed in the virtual "
"machine."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:247
msgid ""
"E<lt>package_formatE<gt>, if present, describes the packaging system used.  "
"Typical values would be C<rpm> and C<deb>."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:250
msgid ""
"E<lt>package_managementE<gt>, if present, describes the package manager.  "
"Typical values include C<yum>, C<up2date> and C<apt>"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:253
msgid "E<lt>applicationsE<gt> lists the packages or applications installed."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:256
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <applications>\n"
"       <application>\n"
"         <name>coreutils</name>\n"
"         <version>8.5</version>\n"
"         <release>1</release>\n"
"       </application>\n"
"\n"
msgstr ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <applications>\n"
"       <application>\n"
"         <name>coreutils</name>\n"
"         <version>8.5</version>\n"
"         <release>1</release>\n"
"       </application>\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:266
msgid ""
"The version and release fields may not be available for some types guests.  "
"Other fields are possible, see L<guestfs(3)/"
"guestfs_inspect_list_applications>."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:270
msgid "E<lt>drive_mappingsE<gt>"
msgstr "E<lt>drive_mappingsE<gt>"

#. type: textblock
#: ../inspector/virt-inspector.pod:272
msgid ""
"For operating systems like Windows which use drive letters, virt-inspector "
"is able to find out how drive letters map to filesystems."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:276
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <drive_mappings>\n"
"       <drive_mapping name=\"C\">/dev/sda2</drive_mapping>\n"
"       <drive_mapping name=\"E\">/dev/sdb1</drive_mapping>\n"
"     </drive_mappings>\n"
"\n"
msgstr ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <drive_mappings>\n"
"       <drive_mapping name=\"C\">/dev/sda2</drive_mapping>\n"
"       <drive_mapping name=\"E\">/dev/sdb1</drive_mapping>\n"
"     </drive_mappings>\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:284
msgid ""
"In the example above, drive C maps to the filesystem on the second partition "
"on the first disk, and drive E maps to the filesystem on the first partition "
"on the second disk."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:288
msgid ""
"Note that this only covers permanent local filesystem mappings, not things "
"like network shares.  Furthermore NTFS volume mount points may not be listed "
"here."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:292
msgid "E<lt>iconE<gt>"
msgstr "E<lt>iconE<gt>"

#. type: textblock
#: ../inspector/virt-inspector.pod:294
msgid ""
"Virt-inspector is sometimes able to extract an icon or logo for the guest.  "
"The icon is returned as base64-encoded PNG data.  Note that the icon can be "
"very large and high quality."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:298
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <icon>\n"
"       iVBORw0KGgoAAAANSUhEUgAAAGAAAABg[.......]\n"
"       [... many lines of base64 data ...]\n"
"     </icon>\n"
"\n"
msgstr ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <icon>\n"
"       iVBORw0KGgoAAAANSUhEUgAAAGAAAABg[.......]\n"
"       [... багато рядків даних base64 ...]\n"
"     </icon>\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:306
msgid ""
"To display the icon, you have to extract it and convert the base64 data back "
"to a binary file.  Use an XPath query or simply an editor to extract the "
"data, then use the coreutils L<base64(1)> program to do the conversion back "
"to a PNG file:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:311
#, no-wrap
msgid ""
" base64 -i -d < icon.data > icon.png\n"
"\n"
msgstr ""
" base64 -i -d < дані.піктограми > icon.png\n"
"\n"

#. type: =head2
#: ../inspector/virt-inspector.pod:313
msgid "INSPECTING INSTALL DISKS, LIVE CDs"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:315
msgid ""
"Virt-inspector can detect some operating system installers on install disks, "
"live CDs, bootable USB keys and more."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:318
msgid ""
"In this case the E<lt>formatE<gt> tag will contain C<installer> and other "
"fields may be present to indicate a live CD, network installer, or one part "
"of a multipart CD.  For example:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:322
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     <root>/dev/sda</root>\n"
"     <name>linux</name>\n"
"     <arch>i386</arch>\n"
"     <distro>ubuntu</distro>\n"
"     <product_name>Ubuntu 10.10 &quot;Maverick Meerkat&quot;</product_name>\n"
"     <major_version>10</major_version>\n"
"     <minor_version>10</minor_version>\n"
"     <format>installer</format>\n"
"     <live/>\n"
"\n"
msgstr ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     <root>/dev/sda</root>\n"
"     <name>linux</name>\n"
"     <arch>i386</arch>\n"
"     <distro>ubuntu</distro>\n"
"     <product_name>Ubuntu 10.10 &quot;Maverick Meerkat&quot;</product_name>\n"
"     <major_version>10</major_version>\n"
"     <minor_version>10</minor_version>\n"
"     <format>installer</format>\n"
"     <live/>\n"
"\n"

#. type: =head1
#: ../inspector/virt-inspector.pod:334
msgid "XPATH QUERIES"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:336
msgid ""
"Virt-inspector includes built in support for running XPath queries.  The "
"reason for including XPath support directly in virt-inspector is simply that "
"there are no good and widely available command line programs that can do "
"XPath queries.  The only good one is L<xmlstarlet(1)> and that is not "
"available on Red Hat Enterprise Linux."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:343
msgid ""
"To perform an XPath query, use the I<--xpath> option.  Note that in this "
"mode, virt-inspector simply reads XML from stdin and outputs the query "
"result on stdout.  All other inspection features are disabled in this mode."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:350
#, no-wrap
msgid ""
" $ virt-inspector -d Guest | virt-inspector --xpath '//filesystems'\n"
" <filesystems>\n"
"      <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
"        <type>ext4</type>\n"
" [...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:356
#, no-wrap
msgid ""
" $ virt-inspector -d Guest | \\\n"
"     virt-inspector --xpath \"string(//filesystem[@dev='/dev/sda1']/type)\"\n"
" ext4\n"
"\n"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:360
#, no-wrap
msgid ""
" $ virt-inspector -d Guest | \\\n"
"     virt-inspector --xpath 'string(//icon)' | base64 -i -d | display -\n"
" [displays the guest icon, if there is one]\n"
"\n"
msgstr ""

#. type: =head1
#: ../inspector/virt-inspector.pod:364
msgid "GETTING INSPECTION DATA FROM THE LIBGUESTFS API"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:366
msgid ""
"In early versions of libguestfs, virt-inspector was a large Perl script that "
"contained many heuristics for inspecting guests.  This had several problems: "
"in order to do inspection from other tools (like guestfish) we had to call "
"out to this Perl script; and it privileged Perl over other languages that "
"libguestfs supports."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:372
msgid ""
"By libguestfs 1.8 we had rewritten the Perl code in C, and incorporated it "
"all into the core libguestfs API (L<guestfs(3)>).  Now virt-inspector is "
"simply a thin C program over the core C API.  All of the inspection "
"information is available from all programming languages that libguestfs "
"supports, and from guestfish."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:378
msgid ""
"For a description of the C inspection API, read L<guestfs(3)/INSPECTION>."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:381
msgid ""
"For example code using the C inspection API, look for C<inspect-vm.c> which "
"ships with libguestfs."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:384
msgid ""
"C<inspect-vm.c> has also been translated into other languages.  For example, "
"C<inspect_vm.pl> is the Perl translation, and there are other translations "
"for OCaml, Python, etc.  See L<guestfs(3)/USING LIBGUESTFS WITH OTHER "
"PROGRAMMING LANGUAGES> for a list of man pages which contain this example "
"code."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:390
msgid "GETTING INSPECTION DATA FROM GUESTFISH"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:392
msgid ""
"If you use the guestfish I<-i> option, then the main C inspection API "
"L<guestfs(3)/guestfs_inspect_os> is called.  This is equivalent to the "
"guestfish command C<inspect-os>.  You can also call this guestfish command "
"by hand."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:397
msgid ""
"C<inspect-os> performs inspection on the current disk image, returning the "
"list of operating systems found.  Each OS is represented by its root "
"filesystem device.  In the majority of cases, this command prints nothing "
"(no OSes found), or a single root device, but beware that it can print "
"multiple lines if there are multiple OSes or if there is an install CD "
"attached to the guest."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:404
#, no-wrap
msgid ""
" $ guestfish --ro -a F15x32.img\n"
" ><fs> run\n"
" ><fs> inspect-os\n"
" /dev/vg_f15x32/lv_root\n"
"\n"
msgstr ""
" $ guestfish --ro -a F15x32.img\n"
" ><fs> run\n"
" ><fs> inspect-os\n"
" /dev/vg_f15x32/lv_root\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:409
msgid ""
"Using the root device, you can fetch further information about the guest:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:412
#, no-wrap
msgid ""
" ><fs> inspect-get-type /dev/vg_f15x32/lv_root\n"
" linux\n"
" ><fs> inspect-get-distro /dev/vg_f15x32/lv_root\n"
" fedora\n"
" ><fs> inspect-get-major-version /dev/vg_f15x32/lv_root\n"
" 15\n"
" ><fs> inspect-get-product-name /dev/vg_f15x32/lv_root\n"
" Fedora release 15 (Lovelock)\n"
"\n"
msgstr ""
" ><fs> inspect-get-type /dev/vg_f15x32/lv_root\n"
" linux\n"
" ><fs> inspect-get-distro /dev/vg_f15x32/lv_root\n"
" fedora\n"
" ><fs> inspect-get-major-version /dev/vg_f15x32/lv_root\n"
" 15\n"
" ><fs> inspect-get-product-name /dev/vg_f15x32/lv_root\n"
" Fedora release 15 (Lovelock)\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:421
msgid ""
"Limitations of guestfish make it hard to assign the root device to a "
"variable (since guestfish doesn't have variables), so if you want to do this "
"reproducibly you are better off writing a script using one of the other "
"languages that the libguestfs API supports."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:426
msgid "To list applications, you have to first mount up the disks:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:428
#, no-wrap
msgid ""
" ><fs> inspect-get-mountpoints /dev/vg_f15x32/lv_root\n"
" /: /dev/vg_f15x32/lv_root\n"
" /boot: /dev/vda1\n"
" ><fs> mount-ro /dev/vg_f15x32/lv_root /\n"
" ><fs> mount-ro /dev/vda1 /boot\n"
"\n"
msgstr ""
" ><fs> inspect-get-mountpoints /dev/vg_f15x32/lv_root\n"
" /: /dev/vg_f15x32/lv_root\n"
" /boot: /dev/vda1\n"
" ><fs> mount-ro /dev/vg_f15x32/lv_root /\n"
" ><fs> mount-ro /dev/vda1 /boot\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:434
msgid "and then call the inspect-list-applications API:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:436
#, no-wrap
msgid ""
" ><fs> inspect-list-applications /dev/vg_f15x32/lv_root | head -28\n"
" [0] = {\n"
"   app_name: ConsoleKit\n"
"   app_display_name:\n"
"   app_epoch: 0\n"
"   app_version: 0.4.5\n"
"   app_release: 1.fc15\n"
"   app_install_path:\n"
"   app_trans_path:\n"
"   app_publisher:\n"
"   app_url:\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description:\n"
" }\n"
" [1] = {\n"
"   app_name: ConsoleKit-libs\n"
"   app_display_name:\n"
"   app_epoch: 0\n"
"   app_version: 0.4.5\n"
"   app_release: 1.fc15\n"
"   app_install_path:\n"
"   app_trans_path:\n"
"   app_publisher:\n"
"   app_url:\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description:\n"
" }\n"
"\n"
msgstr ""
" ><fs> inspect-list-applications /dev/vg_f15x32/lv_root | head -28\n"
" [0] = {\n"
"   app_name: ConsoleKit\n"
"   app_display_name:\n"
"   app_epoch: 0\n"
"   app_version: 0.4.5\n"
"   app_release: 1.fc15\n"
"   app_install_path:\n"
"   app_trans_path:\n"
"   app_publisher:\n"
"   app_url:\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description:\n"
" }\n"
" [1] = {\n"
"   app_name: ConsoleKit-libs\n"
"   app_display_name:\n"
"   app_epoch: 0\n"
"   app_version: 0.4.5\n"
"   app_release: 1.fc15\n"
"   app_install_path:\n"
"   app_trans_path:\n"
"   app_publisher:\n"
"   app_url:\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description:\n"
" }\n"
"\n"

#. type: textblock
#: ../inspector/virt-inspector.pod:466
msgid ""
"To display an icon for the guest, note that filesystems must also be mounted "
"as above.  You can then do:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:469
#, no-wrap
msgid ""
" ><fs> inspect-get-icon /dev/vg_f15x32/lv_root | display -\n"
"\n"
msgstr ""
" ><fs> inspect-get-icon /dev/vg_f15x32/lv_root | display -\n"
"\n"

#. type: =head1
#: ../inspector/virt-inspector.pod:471
msgid "OLD VERSIONS OF VIRT-INSPECTOR"
msgstr "ПОПЕРЕДНІ ВЕРСІЇ VIRT-INSPECTOR"

#. type: textblock
#: ../inspector/virt-inspector.pod:473
msgid ""
"As described above, early versions of libguestfs shipped with a different "
"virt-inspector program written in Perl (the current version is written in "
"C).  The XML output of the Perl virt-inspector was different and it could "
"also output in other formats like text."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:478
msgid ""
"The old virt-inspector is no longer supported or shipped with libguestfs."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:481
msgid ""
"To confuse matters further, in Red Hat Enterprise Linux 6 we ship two "
"versions of virt-inspector with different names:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:484
#, no-wrap
msgid ""
" virt-inspector     Old Perl version.\n"
" virt-inspector2    New C version.\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:494
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<http://www.w3.org/TR/xpath/>, "
"L<base64(1)>, L<xmlstarlet(1)>, L<http://libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<http://www.w3.org/TR/xpath/>, "
"L<base64(1)>, L<xmlstarlet(1)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../inspector/virt-inspector.pod:511
msgid "Matthew Booth L<mbooth@redhat.com>"
msgstr "Matthew Booth L<mbooth@redhat.com>"

#. type: textblock
#: ../java/examples/guestfs-java.pod:3
msgid "guestfs-java - How to use libguestfs from Java"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:7
#, no-wrap
msgid ""
" import com.redhat.et.libguestfs.*;\n"
" \n"
msgstr ""
" import com.redhat.et.libguestfs.*;\n"
" \n"

#. type: verbatim
#: ../java/examples/guestfs-java.pod:9
#, no-wrap
msgid ""
" GuestFS g = new GuestFS ();\n"
" g.add_drive (\"disk.img\",\n"
"              new HashMap<String,Object>() {\n"
"                {\n"
"                    put (\"readonly\", Boolean.TRUE);\n"
"                    put (\"format\", \"raw\");\n"
"                }\n"
"              });\n"
" g.launch ();\n"
"\n"
msgstr ""
" GuestFS g = new GuestFS ();\n"
" g.add_drive (\"disk.img\",\n"
"              new HashMap<String,Object>() {\n"
"                {\n"
"                    put (\"readonly\", Boolean.TRUE);\n"
"                    put (\"format\", \"raw\");\n"
"                }\n"
"              });\n"
" g.launch ();\n"
"\n"

#. type: textblock
#: ../java/examples/guestfs-java.pod:21
msgid ""
"This manual page documents how to call libguestfs from the Java programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../java/examples/guestfs-java.pod:26 ../ocaml/examples/guestfs-ocaml.pod:51
msgid "CLOSING THE HANDLE"
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:28
msgid ""
"The handle is closed when it is reaped by the garbage collector.  Because "
"libguestfs handles include a lot of state, it is also possible to close (and "
"hence free) them explicitly by calling the C<close> method."
msgstr ""

#. type: =head2
#: ../java/examples/guestfs-java.pod:33 ../ocaml/examples/guestfs-ocaml.pod:58
#: ../python/examples/guestfs-python.pod:30
#: ../ruby/examples/guestfs-ruby.pod:20
msgid "EXCEPTIONS"
msgstr "ВИНЯТКИ"

#. type: textblock
#: ../java/examples/guestfs-java.pod:35
msgid ""
"Errors from libguestfs functions are mapped into the C<LibGuestFSException> "
"exception.  This has a single parameter which is the error message (a "
"C<String>)."
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:39
msgid "Calling any method on a closed handle raises the same exception."
msgstr ""

#. type: =head1
#: ../java/examples/guestfs-java.pod:41 ../lua/examples/guestfs-lua.pod:98
#: ../src/guestfs.pod:2707
msgid "EVENTS"
msgstr "ПОДІЇ"

#. type: textblock
#: ../java/examples/guestfs-java.pod:43
msgid ""
"The L<libguestfs event API|guestfs(3)/EVENTS> is fully supported from Java.  "
"Create a class which implements the C<EventCallback> interface, create an "
"instance of this class, and then call the C<GuestFS#set_event_callback> "
"method to register this instance.  The C<event> method of the class is "
"called when libguestfs generates an event."
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:49
msgid "For example, this will print all trace events:"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:51
#, no-wrap
msgid ""
" GuestFS g = new GuestFS ();\n"
" g.set_trace (true);\n"
" g.set_event_callback (\n"
"   new EventCallback () {\n"
"     public void event (long event, int eh,\n"
"                        String buffer, long[] array) {\n"
"       System.out.println (GuestFS.eventToString (event) +\n"
"                           \": \" + buffer);\n"
"     }\n"
"   },\n"
"   GuestFS.EVENT_TRACE);\n"
" g.add_drive_ro (\"disk.img\");\n"
" // etc.\n"
"\n"
msgstr ""
" GuestFS g = new GuestFS ();\n"
" g.set_trace (true);\n"
" g.set_event_callback (\n"
"   new EventCallback () {\n"
"     public void event (long event, int eh,\n"
"                        String buffer, long[] array) {\n"
"       System.out.println (GuestFS.eventToString (event) +\n"
"                           \": \" + buffer);\n"
"     }\n"
"   },\n"
"   GuestFS.EVENT_TRACE);\n"
" g.add_drive_ro (\"disk.img\");\n"
" // etc.\n"
"\n"

#. type: textblock
#: ../java/examples/guestfs-java.pod:65
msgid "The output looks similar to this:"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:67
#, no-wrap
msgid ""
" EVENT_TRACE: add_drive_ro \"disk.img\"\n"
" EVENT_TRACE: add_drive_ro = 0\n"
" // etc.\n"
"\n"
msgstr ""
" EVENT_TRACE: add_drive_ro \"disk.img\"\n"
" EVENT_TRACE: add_drive_ro = 0\n"
" // тощо\n"
"\n"

#. type: textblock
#: ../java/examples/guestfs-java.pod:73
msgid ""
"Some methods take an optional map of optional parameters.  An example of "
"this is C<g.add_drive> which can be called in one of two ways:"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:76
#, no-wrap
msgid ""
" g.add_drive (\"disk.img\");\n"
"\n"
msgstr ""
" g.add_drive (\"disk.img\");\n"
"\n"

#. type: textblock
#: ../java/examples/guestfs-java.pod:78
msgid "or with optional arguments:"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:80
#, no-wrap
msgid ""
" Map<String, Object> optargs =\n"
"   new HashMap<String, Object>() {\n"
"   {\n"
"     put (\"readonly\", Boolean.TRUE);\n"
"     put (\"format\", \"raw\");\n"
"   }\n"
" };\n"
" g.add_drive (\"disk.img\", optargs);\n"
"\n"
msgstr ""
" Map<String, Object> optargs =\n"
"   new HashMap<String, Object>() {\n"
"   {\n"
"     put (\"readonly\", Boolean.TRUE);\n"
"     put (\"format\", \"raw\");\n"
"   }\n"
" };\n"
" g.add_drive (\"disk.img\", optargs);\n"
"\n"

#. type: textblock
#: ../java/examples/guestfs-java.pod:89
msgid ""
"For more information on this topic, see L<guestfs(3)/CALLS WITH OPTIONAL "
"ARGUMENTS>."
msgstr ""

#. type: =head3
#: ../java/examples/guestfs-java.pod:92
msgid "Optional handle parameters"
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:94
msgid ""
"When creating the handle you can also pass a map of optional parameters:"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:97
#, no-wrap
msgid ""
" Map<String, Object> optargs =\n"
"   new HashMap<String, Object>() {\n"
"   {\n"
"     put (\"close_on_exit\", Boolean.FALSE);\n"
"     put (\"environment\", Boolean.TRUE);\n"
"   }\n"
" };\n"
" GuestFS g = new GuestFS (optargs);\n"
"\n"
msgstr ""
" Map<String, Object> optargs =\n"
"   new HashMap<String, Object>() {\n"
"   {\n"
"     put (\"close_on_exit\", Boolean.FALSE);\n"
"     put (\"environment\", Boolean.TRUE);\n"
"   }\n"
" };\n"
" GuestFS g = new GuestFS (optargs);\n"
"\n"

#. type: textblock
#: ../java/examples/guestfs-java.pod:106
msgid "For more information, see L<guestfs(3)/guestfs_create_flags>."
msgstr ""

#. type: =head1
#: ../java/examples/guestfs-java.pod:108
msgid "COMPILING AND RUNNING"
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:110
msgid ""
"Libguestfs for Java is a Java Native Interface (JNI) extension, supplied in "
"three parts:"
msgstr ""

#. type: =item
#: ../java/examples/guestfs-java.pod:115
msgid "C<libguestfs.jar>"
msgstr "C<libguestfs.jar>"

#. type: =item
#: ../java/examples/guestfs-java.pod:117
msgid "C<libguestfs-I<VERSION>.jar>"
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:119
msgid ""
"The pure Java JAR file which contains several classes, the primary one being "
"C<com.redhat.et.libguestfs.GuestFS>.  Upstream, the JAR file contains a "
"version number in the filename, but some Linux distros may rename it without "
"the version number."
msgstr ""

#. type: =item
#: ../java/examples/guestfs-java.pod:124
msgid "C<libguestfs_jni.so>"
msgstr "C<libguestfs_jni.so>"

#. type: textblock
#: ../java/examples/guestfs-java.pod:126
msgid ""
"The JNI code (written in C).  This contains private native functions that "
"interface between Java code and the regular libguestfs C library.  You "
"should B<not> call these directly."
msgstr ""

#. type: =item
#: ../java/examples/guestfs-java.pod:130
msgid "C<libguestfs.so>"
msgstr "C<libguestfs.so>"

#. type: textblock
#: ../java/examples/guestfs-java.pod:132
msgid "The regular libguestfs C library."
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:136
msgid ""
"To compile your Java program, you need to locate the JAR file and add it to "
"the class path.  For example:"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:139
#, no-wrap
msgid ""
" export CLASSPATH=/usr/share/java/libguestfs.jar\n"
" javac MyProgram.java\n"
"\n"
msgstr ""
" export CLASSPATH=/usr/share/java/libguestfs.jar\n"
" javac MyProgram.java\n"
"\n"

#. type: textblock
#: ../java/examples/guestfs-java.pod:142
msgid ""
"To run your Java program, you also need to ensure that the JAR file is on "
"the class path, as well as the path of your program.  For example:"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:145
#, no-wrap
msgid ""
" export CLASSPATH=.:/usr/share/java/libguestfs.jar\n"
" java MyProgram\n"
"\n"
msgstr ""
" export CLASSPATH=.:/usr/share/java/libguestfs.jar\n"
" java MyProgram\n"
"\n"

#. type: textblock
#: ../java/examples/guestfs-java.pod:158
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"libguestfs.org/>, L<http://caml.inria.fr/>."
msgstr ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"libguestfs.org/>, L<http://caml.inria.fr/>."

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:3
msgid "guestfs-lua - How to use libguestfs from Lua"
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:7
#, no-wrap
msgid ""
" local G = require \"guestfs\"\n"
" g = G.create ()\n"
" g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
" g:launch ()\n"
" devices = g:list_devices ()\n"
" g:close ()\n"
"\n"
msgstr ""
" local G = require \"guestfs\"\n"
" g = G.create ()\n"
" g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
" g:launch ()\n"
" devices = g:list_devices ()\n"
" g:close ()\n"
"\n"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:16
msgid ""
"This manual page documents how to call libguestfs from the Lua programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../lua/examples/guestfs-lua.pod:21
msgid "REQUIRING THE MODULE"
msgstr ""

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:23
msgid ""
"C<require \"guestfs\"> returns the module, so you have to assign it to a "
"local variable.  Typical usage is:"
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:26
#, no-wrap
msgid ""
" local G = require \"guestfs\"\n"
"\n"
msgstr ""
" local G = require \"guestfs\"\n"
"\n"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:28
msgid ""
"(you can use any name you want instead of C<G>, but in the examples in this "
"man page we always use C<G>)."
msgstr ""

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:33
msgid "To create a new handle, call:"
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:35
#, no-wrap
msgid ""
" g = G.create ()\n"
"\n"
msgstr ""
" g = G.create ()\n"
"\n"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:37
msgid "You can also use the optional arguments:"
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:39
#, no-wrap
msgid ""
" g = G.create { environment = 0, close_on_exit = 0 }\n"
"\n"
msgstr ""
" g = G.create { environment = 0, close_on_exit = 0 }\n"
"\n"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:41
msgid ""
"to set the flags C<GUESTFS_CREATE_NO_ENVIRONMENT> and/or "
"C<GUESTFS_CREATE_NO_CLOSE_ON_EXIT>."
msgstr ""

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:44
msgid ""
"The handle will be closed by the garbage collector, but you can also close "
"it explicitly by doing:"
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:47
#, no-wrap
msgid ""
" g:close ()\n"
"\n"
msgstr ""
" g:close ()\n"
"\n"

#. type: =head2
#: ../lua/examples/guestfs-lua.pod:49
msgid "CALLING METHODS"
msgstr "ЯК ВИКЛИКАТИ МЕТОДИ"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:51
msgid ""
"Use the ordinary Lua convention for calling methods on the handle.  For "
"example:"
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:54
#, no-wrap
msgid ""
" g:set_verbose (true)\n"
"\n"
msgstr ""
" g:set_verbose (true)\n"
"\n"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:58
msgid ""
"For functions that take optional arguments, the first arguments are the non-"
"optional ones.  The optional final argument is a table supplying the "
"optional arguments."
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:62
#, no-wrap
msgid ""
" g:add_drive (\"test.img\")\n"
"\n"
msgstr ""
" g:add_drive (\"test.img\")\n"
"\n"

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:66
#, no-wrap
msgid ""
" g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
"\n"
msgstr ""
" g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
"\n"

#. type: =head2
#: ../lua/examples/guestfs-lua.pod:68
msgid "64 BIT VALUES"
msgstr "64-БІТОВІ ЗНАЧЕННЯ"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:70
msgid ""
"Currently 64 bit values must be passed as strings, and are returned as "
"strings.  This is because 32 bit Lua cannot handle 64 bit integers "
"properly.  We hope to come up with a better solution later."
msgstr ""

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:76
msgid ""
"Most (but not all) errors are converted into objects (ie. tables)  "
"containing the following fields:"
msgstr ""

#. type: =item
#: ../lua/examples/guestfs-lua.pod:81
msgid "msg"
msgstr "msg"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:83
msgid "The error message (corresponding to L<guestfs(3)/guestfs_last_error>)."
msgstr ""

#. type: =item
#: ../lua/examples/guestfs-lua.pod:85
msgid "code"
msgstr "code"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:87
msgid "The C<errno> (corresponding to L<guestfs(3)/guestfs_last_errno>)."
msgstr ""

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:91
msgid ""
"These objects also have C<__tostring> functions attached to them so you can "
"use C<tostring> (or implicit conversion) to convert them into printable "
"strings."
msgstr ""

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:95
msgid ""
"Note that the library also throws some errors as plain strings.  You may "
"need to check the type."
msgstr ""

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:100
msgid "Events can be registered by calling C<set_event_callback>:"
msgstr "Реєструвати події можна за допомогою викликів C<set_event_callback>:"

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:102
#, no-wrap
msgid ""
" eh = g:set_event_callback (cb, \"close\")\n"
"\n"
msgstr ""
" eh = g:set_event_callback (cb, \"close\")\n"
"\n"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:104
msgid ""
"or to register a single callback for multiple events make the second "
"argument a list:"
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:107
#, no-wrap
msgid ""
" eh = g:set_event_callback (cb, { \"appliance\", \"library\", \"trace\" })\n"
"\n"
msgstr ""
" eh = g:set_event_callback (cb, { \"appliance\", \"library\", \"trace\" })\n"
"\n"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:109
msgid ""
"A list of all valid event types (strings) is in the global variable C<G."
"event_all>."
msgstr ""

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:112
msgid "The callback (C<cb>) is called with the following parameters:"
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:114
#, no-wrap
msgid ""
" function cb (g, event, eh, flags, buf, array)\n"
"   -- g is the guestfs handle\n"
"   -- event is a string which is the name of the event that fired\n"
"   -- flags is always zero\n"
"   -- buf is the data buffer (eg. log message etc)\n"
"   -- array is the array of 64 bit ints (eg. progress bar status etc)\n"
"   ...\n"
" end\n"
"\n"
msgstr ""

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:123
msgid ""
"You can also remove a callback using the event handle (C<eh>) that was "
"returned when you registered the callback:"
msgstr ""

#. type: verbatim
#: ../lua/examples/guestfs-lua.pod:126
#, no-wrap
msgid ""
" g:delete_event_callback (eh)\n"
"\n"
msgstr ""
" g:delete_event_callback (eh)\n"
"\n"

#. type: textblock
#: ../lua/examples/guestfs-lua.pod:138
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-java(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"www.lua.org/>, L<http://libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-java(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"www.lua.org/>, L<http://libguestfs.org/>."

#. type: textblock
#: ../make-fs/virt-make-fs.pod:3
msgid "virt-make-fs - Make a filesystem from a tar archive or files"
msgstr ""

#. type: verbatim
#: ../make-fs/virt-make-fs.pod:7
#, no-wrap
msgid ""
" virt-make-fs [--options] input.tar output.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../make-fs/virt-make-fs.pod:9
#, no-wrap
msgid ""
" virt-make-fs [--options] input.tar.gz output.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../make-fs/virt-make-fs.pod:11
#, no-wrap
msgid ""
" virt-make-fs [--options] directory output.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:15
msgid ""
"Virt-make-fs is a command line tool for creating a filesystem from a tar "
"archive or some files in a directory.  It is similar to tools like "
"L<mkisofs(1)>, L<genisoimage(1)> and L<mksquashfs(1)>.  Unlike those tools, "
"it can create common filesystem types like ext2/3 or NTFS, which can be "
"useful if you want to attach these filesystems to existing virtual machines "
"(eg. to import large amounts of read-only data to a VM)."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:23
msgid ""
"To create blank disks, use L<virt-format(1)>.  To create complex layouts, "
"use L<guestfish(1)>."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:26
msgid "Basic usage is:"
msgstr ""

#. type: verbatim
#: ../make-fs/virt-make-fs.pod:28
#, no-wrap
msgid ""
" virt-make-fs input output.img\n"
"\n"
msgstr ""
" virt-make-fs вхідні_дані вихідний.образ\n"
"\n"

#. type: textblock
#: ../make-fs/virt-make-fs.pod:30
msgid ""
"where C<input> is either a directory containing files that you want to add, "
"or a tar archive (either uncompressed tar or gzip-compressed tar); and "
"C<output.img> is a disk image.  The input type is detected automatically.  "
"The output disk image defaults to a raw ext2 sparse image unless you specify "
"extra flags (see L</OPTIONS> below)."
msgstr ""

#. type: =head2
#: ../make-fs/virt-make-fs.pod:36
msgid "FILESYSTEM TYPE"
msgstr "ТИП ФАЙЛОВОЇ СИСТЕМИ"

#. type: textblock
#: ../make-fs/virt-make-fs.pod:38
msgid ""
"The default filesystem type is C<ext2>.  Just about any filesystem type that "
"libguestfs supports can be used (but I<not> read-only formats like "
"ISO9660).  Here are some of the more common choices:"
msgstr ""

#. type: =item
#: ../make-fs/virt-make-fs.pod:44
msgid "I<ext3>"
msgstr "I<ext3>"

#. type: textblock
#: ../make-fs/virt-make-fs.pod:46
msgid ""
"Note that ext3 filesystems contain a journal, typically 1-32 MB in size.  If "
"you are not going to use the filesystem in a way that requires the journal, "
"then this is just wasted overhead."
msgstr ""

#. type: =item
#: ../make-fs/virt-make-fs.pod:50
msgid "I<ntfs> or I<vfat>"
msgstr "I<ntfs> або I<vfat>"

#. type: textblock
#: ../make-fs/virt-make-fs.pod:52
msgid "Useful if exporting data to a Windows guest."
msgstr ""

#. type: =item
#: ../make-fs/virt-make-fs.pod:54
msgid "I<minix>"
msgstr "I<minix>"

#. type: textblock
#: ../make-fs/virt-make-fs.pod:56
msgid ""
"Lower overhead than C<ext2>, but certain limitations on filename length and "
"total filesystem size."
msgstr ""

#. type: =head3
#: ../make-fs/virt-make-fs.pod:61 ../make-fs/virt-make-fs.pod:80
#: ../make-fs/virt-make-fs.pod:113
msgid "EXAMPLE"
msgstr "ПРИКЛАД"

#. type: verbatim
#: ../make-fs/virt-make-fs.pod:63
#, no-wrap
msgid ""
" virt-make-fs --type=minix input minixfs.img\n"
"\n"
msgstr ""
" virt-make-fs --type=minix input minixfs.img\n"
"\n"

#. type: =head2
#: ../make-fs/virt-make-fs.pod:65
msgid "TO PARTITION OR NOT TO PARTITION"
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:67
msgid "Optionally virt-make-fs can add a partition table to the output disk."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:69
msgid ""
"Adding a partition can make the disk image more compatible with certain "
"virtualized operating systems which don't expect to see a filesystem "
"directly located on a block device (Linux doesn't care and will happily "
"handle both types)."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:74
msgid ""
"On the other hand, if you have a partition table then the output image is no "
"longer a straight filesystem.  For example you cannot run L<fsck(8)> "
"directly on a partitioned disk image.  (However libguestfs tools such as "
"L<guestfish(1)> and L<virt-resize(1)> can still be used)."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:82
msgid "Add an MBR partition:"
msgstr "Додавання розділу MBR:"

#. type: verbatim
#: ../make-fs/virt-make-fs.pod:84
#, no-wrap
msgid ""
" virt-make-fs --partition -- input disk.img\n"
"\n"
msgstr ""
" virt-make-fs --partition -- input образ.img\n"
"\n"

#. type: textblock
#: ../make-fs/virt-make-fs.pod:86
msgid ""
"If the output disk image could be terabyte-sized or larger, it's better to "
"use an EFI/GPT-compatible partition table:"
msgstr ""

#. type: verbatim
#: ../make-fs/virt-make-fs.pod:89
#, no-wrap
msgid ""
" virt-make-fs --partition=gpt --size=+4T --format=qcow2 input disk.img\n"
"\n"
msgstr ""

#. type: =head2
#: ../make-fs/virt-make-fs.pod:91
msgid "EXTRA SPACE"
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:93
msgid ""
"Unlike formats such as tar and squashfs, a filesystem does not \"just fit\" "
"the files that it contains, but might have extra space.  Depending on how "
"you are going to use the output, you might think this extra space is wasted "
"and want to minimize it, or you might want to leave space so that more files "
"can be added later.  Virt-make-fs defaults to minimizing the extra space, "
"but you can use the I<--size> flag to leave space in the filesystem if you "
"want it."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:101
msgid ""
"An alternative way to leave extra space but not make the output image any "
"bigger is to use an alternative disk image format (instead of the default "
"\"raw\" format).  Using I<--format=qcow2> will use the native qemu/KVM qcow2 "
"image format (check your hypervisor supports this before using it).  This "
"allows you to choose a large I<--size> but the extra space won't actually be "
"allocated in the image until you try to store something in it."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:109
msgid ""
"Don't forget that you can also use local commands including L<resize2fs(8)> "
"and L<virt-resize(1)> to resize existing filesystems, or rerun virt-make-fs "
"to build another image from scratch."
msgstr ""

#. type: verbatim
#: ../make-fs/virt-make-fs.pod:115
#, no-wrap
msgid ""
" virt-make-fs --format=qcow2 --size=+200M input output.img\n"
"\n"
msgstr ""
" virt-make-fs --format=qcow2 --size=+200M input output.img\n"
"\n"

#. type: =item
#: ../make-fs/virt-make-fs.pod:125
msgid "B<--floppy>"
msgstr "B<--floppy>"

#. type: textblock
#: ../make-fs/virt-make-fs.pod:127
msgid "Create a virtual floppy disk."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:129
msgid ""
"Currently this preselects the size (1440K), partition type (MBR) and "
"filesystem type (VFAT).  In future it may also choose the geometry."
msgstr ""

#. type: =item
#: ../make-fs/virt-make-fs.pod:132
msgid "B<--size=E<lt>NE<gt>>"
msgstr "B<--size=E<lt>NE<gt>>"

#. type: =item
#: ../make-fs/virt-make-fs.pod:134
msgid "B<--size=+E<lt>NE<gt>>"
msgstr "B<--size=+E<lt>NE<gt>>"

#. type: =item
#: ../make-fs/virt-make-fs.pod:136
msgid "B<-s E<lt>NE<gt>>"
msgstr "B<-s E<lt>NE<gt>>"

#. type: =item
#: ../make-fs/virt-make-fs.pod:138
msgid "B<-s +E<lt>NE<gt>>"
msgstr "B<-s +E<lt>NE<gt>>"

#. type: textblock
#: ../make-fs/virt-make-fs.pod:140
msgid ""
"Use the I<--size> (or I<-s>) option to choose the size of the output image."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:143
msgid ""
"If this option is I<not> given, then the output image will be just large "
"enough to contain all the files, with not much wasted space."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:146
msgid ""
"To choose a fixed size output disk, specify an absolute number followed by b/"
"K/M/G/T/P/E to mean bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, "
"Petabytes or Exabytes.  This must be large enough to contain all the input "
"files, else you will get an error."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:151
msgid ""
"To leave extra space, specify C<+> (plus sign) and a number followed by b/K/"
"M/G/T/P/E to mean bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, "
"Petabytes or Exabytes.  For example: I<--size=+200M> means enough space for "
"the input files, and (approximately) an extra 200 MB free space."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:157
msgid ""
"Note that virt-make-fs estimates free space, and therefore will not produce "
"filesystems containing precisely the free space requested.  (It is much more "
"expensive and time-consuming to produce a filesystem which has precisely the "
"desired free space)."
msgstr ""

#. type: =item
#: ../make-fs/virt-make-fs.pod:162
msgid "B<--format=E<lt>fmtE<gt>>"
msgstr "B<--format=E<lt>fmtE<gt>>"

#. type: =item
#: ../make-fs/virt-make-fs.pod:164
msgid "B<-F E<lt>fmtE<gt>>"
msgstr "B<-F E<lt>fmtE<gt>>"

#. type: textblock
#: ../make-fs/virt-make-fs.pod:166
msgid "Choose the output disk image format."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:168
msgid "The default is C<raw> (raw sparse disk image)."
msgstr ""

#. type: =item
#: ../make-fs/virt-make-fs.pod:170
msgid "B<--type=E<lt>fsE<gt>>"
msgstr ""

#. type: =item
#: ../make-fs/virt-make-fs.pod:172
msgid "B<-t E<lt>fsE<gt>>"
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:174
msgid "Choose the output filesystem type."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:176
msgid "The default is C<ext2>."
msgstr "Типовим значенням є C<ext2>."

#. type: textblock
#: ../make-fs/virt-make-fs.pod:178
msgid ""
"Any filesystem which is supported read-write by libguestfs can be used here."
msgstr ""

#. type: =item
#: ../make-fs/virt-make-fs.pod:181
msgid "B<--label=E<lt>LABELE<gt>>"
msgstr ""

#. type: =item
#: ../make-fs/virt-make-fs.pod:187
msgid "B<--partition=E<lt>parttypeE<gt>>"
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:189
msgid ""
"If specified, this flag adds an MBR partition table to the output disk image."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:192
msgid ""
"You can change the partition table type, eg. I<--partition=gpt> for large "
"disks."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:195
msgid "For MBR, virt-make-fs sets the partition type byte automatically."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:201
msgid "Enable debugging information."
msgstr "Увімкнути виведення діагностичних даних."

#. type: textblock
#: ../make-fs/virt-make-fs.pod:211
msgid "Enable libguestfs trace."
msgstr ""

#. type: textblock
#: ../make-fs/virt-make-fs.pod:217
msgid ""
"L<guestfish(1)>, L<virt-format(1)>, L<virt-resize(1)>, L<virt-tar-in(1)>, "
"L<mkisofs(1)>, L<genisoimage(1)>, L<mksquashfs(1)>, L<mke2fs(8)>, "
"L<resize2fs(8)>, L<guestfs(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:3
msgid "guestfs-ocaml - How to use libguestfs from OCaml"
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:7
msgid "Module style:"
msgstr "Стиль Module:"

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:9
#, no-wrap
msgid ""
" let g = Guestfs.create () in\n"
" Guestfs.add_drive_opts g ~format:\"raw\" ~readonly:true \"disk.img\";\n"
" Guestfs.launch g;\n"
"\n"
msgstr ""
" let g = Guestfs.create () in\n"
" Guestfs.add_drive_opts g ~format:\"raw\" ~readonly:true \"disk.img\";\n"
" Guestfs.launch g;\n"
"\n"

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:13
msgid "Object-oriented style:"
msgstr "Об’єктно-орієнтований стиль:"

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:15
#, no-wrap
msgid ""
" let g = new Guestfs.guestfs () in\n"
" g#add_drive_opts ~format:\"raw\" ~readonly:true \"disk.img\";\n"
" g#launch ();\n"
"\n"
msgstr ""
" let g = new Guestfs.guestfs () in\n"
" g#add_drive_opts ~format:\"raw\" ~readonly:true \"disk.img\";\n"
" g#launch ();\n"
"\n"

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:19
#, no-wrap
msgid ""
" ocamlfind opt prog.ml -package guestfs -linkpkg -o prog\n"
"or:\n"
" ocamlopt -I +guestfs mlguestfs.cmxa prog.ml -o prog\n"
"\n"
msgstr ""
" ocamlfind opt prog.ml -package guestfs -linkpkg -o prog\n"
"or:\n"
" ocamlopt -I +guestfs mlguestfs.cmxa prog.ml -o prog\n"
"\n"

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:25
msgid ""
"This manual page documents how to call libguestfs from the OCaml programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../ocaml/examples/guestfs-ocaml.pod:30
msgid "PROGRAMMING STYLES"
msgstr "СТИЛІ ПРОГРАМУВАННЯ"

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:32
msgid ""
"There are two different programming styles supported by the OCaml bindings.  "
"You can use a module style, with each C function mapped to an OCaml function:"
msgstr ""

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:36
#, no-wrap
msgid ""
" int guestfs_set_verbose (guestfs_h *g, int flag);\n"
"\n"
msgstr ""
" int guestfs_set_verbose (guestfs_h *g, int flag);\n"
"\n"

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:38
msgid "becomes:"
msgstr "перетворюється на:"

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:40
#, no-wrap
msgid ""
" val Guestfs.set_verbose : Guestfs.t -> bool -> unit\n"
"\n"
msgstr ""
" val Guestfs.set_verbose : Guestfs.t -> bool -> unit\n"
"\n"

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:42
msgid ""
"Alternately you can use an object-oriented style, calling methods on the "
"class C<Guestfs.guestfs>:"
msgstr ""

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:45
#, no-wrap
msgid ""
" method set_verbose : bool -> unit\n"
"\n"
msgstr ""
" method set_verbose : bool -> unit\n"
"\n"

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:47
msgid ""
"The object-oriented style is usually briefer, and the minor performance "
"penalty isn't noticeable in the general overhead of performing libguestfs "
"functions."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:53
msgid ""
"The handle is closed when it is reaped by the garbage collector.  Because "
"libguestfs handles include a lot of state, it is also possible to close (and "
"hence free) them explicitly by calling C<Guestfs.close> or the C<#close> "
"method."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:60
msgid ""
"Errors from libguestfs functions are mapped into the C<Guestfs.Error> "
"exception.  This has a single parameter which is the error message (a "
"string)."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:64
msgid ""
"Calling any function/method on a closed handle raises C<Guestfs."
"Handle_closed>.  The single parameter is the name of the function that you "
"called."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:78
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-java(3)>, L<guestfs-lua(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"libguestfs.org/>, L<http://caml.inria.fr/>."
msgstr ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-java(3)>, L<guestfs-lua(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"libguestfs.org/>, L<http://caml.inria.fr/>."

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:3
msgid "virt-p2v-make-disk - Build the virt-p2v disk using virt-builder"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-disk.pod:7
#, no-wrap
msgid ""
" virt-p2v-make-disk -o /dev/sdX os-version\n"
"\n"
msgstr ""
" virt-p2v-make-disk -o /dev/sdX os-version\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:11 ../p2v/virt-p2v-make-kickstart.pod:11
msgid ""
"L<virt-p2v(1)> converts a physical machine to run virtualized on KVM, "
"managed by libvirt, OpenStack, oVirt, Red Hat Enterprise Virtualisation "
"(RHEV), or one of the other targets supported by L<virt-v2v(1)>."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:16
msgid ""
"virt-p2v-make-disk is a script which creates a bootable disk image or USB "
"key containing virt-p2v.  It uses L<virt-builder(1)> to do this, and is just "
"a small shell script around virt-builder."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:20
msgid "virt-p2v-make-disk has two required parameters:"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:22
msgid ""
"The I<-o> parameter specifies where the output should go, for example to a "
"USB key (eg. C<-o /dev/sdX>) or to a file.  If you pass a device name, then "
"B<the existing contents of the device will be erased>."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:26
msgid ""
"The C<os-version> parameter is the base Linux distro to use for the "
"operating system on the ISO.  To list possible C<os-version> combinations, "
"do:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-disk.pod:30
#, no-wrap
msgid ""
" virt-builder -l\n"
"\n"
msgstr ""
" virt-builder -l\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:34
msgid ""
"Write a virt-p2v bootable USB key on C</dev/sdX> (and existing content is "
"erased), using Fedora 20 as the base distribution:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-disk.pod:37
#, no-wrap
msgid ""
" virt-p2v-make-disk -o /dev/sdX fedora-20\n"
"\n"
msgstr ""
" virt-p2v-make-disk -o /dev/sdX fedora-20\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:39
msgid "Write a virt-p2v bootable virtual disk image, and boot it under qemu:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-disk.pod:41
#, no-wrap
msgid ""
" virt-p2v-make-disk -o /var/tmp/p2v.img fedora-20\n"
" qemu-kvm -m 1024 -boot c \\\n"
"   -drive file=/var/tmp/p2v.img,if=virtio,index=0 \\\n"
"   -drive file=/var/tmp/guest.img,if=virtio,index=1\n"
"\n"
msgstr ""
" virt-p2v-make-disk -o /var/tmp/p2v.img fedora-20\n"
" qemu-kvm -m 1024 -boot c \\\n"
"   -drive file=/var/tmp/p2v.img,if=virtio,index=0 \\\n"
"   -drive file=/var/tmp/guest.img,if=virtio,index=1\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:46
msgid ""
"where C</var/tmp/guest.img> would be the disk image of some guest that you "
"want to convert (for testing only)."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v-make-disk.pod:57 ../p2v/virt-p2v-make-kickstart.pod:141
msgid "B<-o> OUTPUT"
msgstr "B<-o> ВИВЕДЕННЯ"

#. type: =item
#: ../p2v/virt-p2v-make-disk.pod:59 ../p2v/virt-p2v-make-kickstart.pod:143
msgid "B<--output> OUTPUT"
msgstr "B<--output> ВИВЕДЕННЯ"

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:61
msgid ""
"Write output to C<OUTPUT>, which can be a local file or block device.  B<The "
"existing contents of the device will be erased>."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v-make-disk.pod:76
msgid "C<$libexecdir/virt-p2v>"
msgstr "C<$libexecdir/virt-p2v>"

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:78
msgid ""
"The L<virt-p2v(1)> binary which is copied into the bootable disk image.  The "
"location of the binary can be changed by setting the C<VIRT_P2V_DATA_DIR> "
"environment variable."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v-make-disk.pod:82 ../p2v/virt-p2v-make-kickstart.pod:164
msgid "C<$datadir/issue>"
msgstr "C<$datadir/issue>"

#. type: =item
#: ../p2v/virt-p2v-make-disk.pod:84 ../p2v/virt-p2v-make-kickstart.pod:166
msgid "C<$datadir/launch-virt-p2v.in>"
msgstr "C<$datadir/launch-virt-p2v.in>"

#. type: =item
#: ../p2v/virt-p2v-make-disk.pod:86 ../p2v/virt-p2v-make-kickstart.pod:170
msgid "C<$datadir/p2v.service>"
msgstr "C<$datadir/p2v.service>"

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:88
msgid "Various data files that are copied into the bootable disk image."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v-make-disk.pod:96 ../p2v/virt-p2v-make-kickstart.pod:180
msgid "C<VIRT_P2V_DATA_DIR>"
msgstr "C<VIRT_P2V_DATA_DIR>"

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:98
msgid ""
"The directory where virt-p2v-make-disk looks for data files (see L</FILES> "
"above).  If not set, a compiled-in location is used."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-disk.pod:105
msgid ""
"L<virt-p2v(1)>, L<virt-p2v-make-kickstart(1)>, L<virt-v2v(1)>, L<http://"
"libguestfs.org/>."
msgstr ""
"L<virt-p2v(1)>, L<virt-p2v-make-kickstart(1)>, L<virt-v2v(1)>, L<http://"
"libguestfs.org/>."

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:3
msgid "virt-p2v-make-kickstart - Build the virt-p2v kickstart"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-kickstart.pod:7
#, no-wrap
msgid ""
" virt-p2v-make-kickstart [-o p2v.ks] [--proxy=http://...] repo [repo...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:16
msgid ""
"Kickstart is a format used by Red Hat-derived distributions (such as Fedora, "
"Red Hat Enterprise Linux, CentOS, Scientific Linux, and others) to describe "
"how to make live CDs, install the distro, make \"Spins\" and so on.  It is "
"driven by a kickstart file."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:21
msgid ""
"virt-p2v-make-kickstart builds a kickstart file which can be used to build a "
"bootable P2V ISO, live CD, USB key, or PXE image.  This tool only builds the "
"kickstart file, but this manual page describes some of the ways you can use "
"the kickstart file."
msgstr ""

#. type: =head1
#: ../p2v/virt-p2v-make-kickstart.pod:26
msgid "BUILDING THE KICKSTART FILE"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:28
msgid "Using virt-p2v-make-kickstart is very simple:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-kickstart.pod:30
#, no-wrap
msgid ""
" virt-p2v-make-kickstart fedora\n"
"\n"
msgstr ""
" virt-p2v-make-kickstart fedora\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:32
msgid ""
"will build a kickstart file for Fedora.  The kickstart file will be called "
"C<p2v.ks> and located in the current directory."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:35
msgid ""
"The parameters are a list of one or more repositories.  Some built-in "
"repositories are available: C<fedora>, C<rawhide> or C<koji>.  You can also "
"use a URL as a parameter to point to a repository."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:39
msgid ""
"To control the name of the output file, use the I<-o> parameter.  To tell "
"kickstart to use a proxy server or web cache to download files, use the I<--"
"proxy> parameter."
msgstr ""

#. type: =head1
#: ../p2v/virt-p2v-make-kickstart.pod:43
msgid "BUILDING A LIVE CD / ISO"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:45
msgid ""
"Once you have the kickstart file, you can use L<livecd-creator(8)> to make a "
"live CD:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-kickstart.pod:48
#, no-wrap
msgid ""
" sudo livecd-creator p2v.ks\n"
"\n"
msgstr ""
" sudo livecd-creator p2v.ks\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:50
msgid ""
"Before running this note that you should probably run C<livecd-creator> in a "
"disposable virtual machine for these reasons:"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:57
msgid "You have to disable SELinux when running the tool."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:61
msgid "This tool has to be run as root, and has some nasty failure modes."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:65
msgid ""
"You can only create the exact same Live CD distro as the host distro.  Cross-"
"builds will fail in strange ways (eg. RHBZ#1092327)."
msgstr ""

#. type: =head1
#: ../p2v/virt-p2v-make-kickstart.pod:70
msgid "BUILDING A FEDORA SPIN USING KOJI"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:72
msgid ""
"This requires C<spin-livecd> permissions on Koji, which are not given out "
"usually, even to Fedora packagers.  However assuming you have been given "
"these permissions (or have your own Koji instance, I guess), then you can do:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-kickstart.pod:77
#, no-wrap
msgid ""
" koji spin-livecd [--scratch] p2v 1.XX.YY rawhide x86_64 p2v.ks\n"
"\n"
msgstr ""
" koji spin-livecd [--scratch] p2v 1.XX.YY rawhide x86_64 p2v.ks\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:83
msgid ""
"Add the C<--scratch> option to do a scratch build (recommended for testing)."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:88
msgid "C<1.XX.YY> should match the libguestfs version"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:92
msgid "Instead of C<rawhide> you can use any Koji target."
msgstr ""

#. type: =head1
#: ../p2v/virt-p2v-make-kickstart.pod:96
msgid "BUILDING BOOTABLE USB KEY"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:98
msgid ""
"Use the L<livecd-iso-to-disk(8)> program to convert the ISO created above to "
"a USB key:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-kickstart.pod:101
#, no-wrap
msgid ""
" sudo livecd-iso-to-disk livecd-p2v.iso /dev/sdX\n"
"\n"
msgstr ""
" sudo livecd-iso-to-disk livecd-p2v.iso /dev/sdX\n"
"\n"

#. type: =head1
#: ../p2v/virt-p2v-make-kickstart.pod:103
msgid "BUILDING A PXE BOOT IMAGE"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:105
msgid ""
"Use the C<livecd-iso-to-pxeboot> program to convert the ISO created above to "
"a PXE boot image."
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-kickstart.pod:108
#, no-wrap
msgid ""
" sudo livecd-iso-to-pxeboot livecd-p2v.iso\n"
"\n"
msgstr ""
" sudo livecd-iso-to-pxeboot livecd-p2v.iso\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:110
msgid ""
"This creates a C<tftpboot> subdirectory under the current directory "
"containing the files required to PXE boot virt-p2v:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-kickstart.pod:113
#, no-wrap
msgid ""
" $ ls -1R tftpboot/\n"
" tftpboot/:\n"
" initrd0.img\n"
" pxelinux.0\n"
" pxelinux.cfg/\n"
" vmlinuz0\n"
" \n"
msgstr ""
" $ ls -1R tftpboot/\n"
" tftpboot/:\n"
" initrd0.img\n"
" pxelinux.0\n"
" pxelinux.cfg/\n"
" vmlinuz0\n"
" \n"

#. type: verbatim
#: ../p2v/virt-p2v-make-kickstart.pod:120
#, no-wrap
msgid ""
" tftpboot/pxelinux.cfg:\n"
" default\n"
"\n"
msgstr ""
" tftpboot/pxelinux.cfg:\n"
" default\n"
"\n"

#. type: =head1
#: ../p2v/virt-p2v-make-kickstart.pod:123
msgid "TESTING THE P2V ISO USING QEMU"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:125
msgid "You can use qemu to test-boot the P2V ISO:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v-make-kickstart.pod:127
#, no-wrap
msgid ""
" qemu-kvm -m 1024 -hda /tmp/guest.img -cdrom /tmp/livecd-p2v.iso -boot d\n"
"\n"
msgstr ""
" qemu-kvm -m 1024 -hda /tmp/guest.img -cdrom /tmp/livecd-p2v.iso -boot d\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:129
msgid ""
"Note that C<-hda> is the (virtual) system that you want to convert (for test "
"purposes).  It could be any guest type supported by L<virt-v2v(1)>, "
"including Windows or Red Hat Enterprise Linux."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:145
msgid ""
"Write kickstart to C<OUTPUT>.  If not specified, the default is C<p2v.ks> in "
"the current directory."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v-make-kickstart.pod:148
msgid "B<--proxy> URL"
msgstr "B<--proxy> АДРЕСА"

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:150
msgid "Tell the kickstart to use a proxy server or web cache for downloads."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v-make-kickstart.pod:168
msgid "C<$datadir/p2v.ks.in>"
msgstr "C<$datadir/p2v.ks.in>"

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:172
msgid "Various data files that used to make the kickstart."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:182
msgid ""
"The directory where virt-p2v-make-kickstart looks for data files (see L</"
"FILES> above).  If not set, a compiled-in location is used."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v-make-kickstart.pod:189
msgid ""
"L<virt-p2v(1)>, L<virt-p2v-make-disk(1)>, L<virt-v2v(1)>, L<livecd-"
"creator(8)>, L<livecd-iso-to-disk(8)>, L<http://libguestfs.org/>."
msgstr ""
"L<virt-p2v(1)>, L<virt-p2v-make-disk(1)>, L<virt-v2v(1)>, L<livecd-"
"creator(8)>, L<livecd-iso-to-disk(8)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../p2v/virt-p2v.pod:3
msgid "virt-p2v - Convert a physical machine to use KVM"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:7
#, no-wrap
msgid ""
" virt-p2v\n"
"\n"
msgstr ""
" virt-p2v\n"
"\n"

#. type: verbatim
#: ../p2v/virt-p2v.pod:9
#, no-wrap
msgid ""
" virt-p2v.iso\n"
"\n"
msgstr ""
" virt-p2v.iso\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v.pod:13
msgid ""
"Virt-p2v converts a physical machine to run virtualized on KVM, managed by "
"libvirt, OpenStack, oVirt, Red Hat Enterprise Virtualisation (RHEV), or one "
"of the other targets supported by L<virt-v2v(1)>."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:18
msgid ""
"Normally you don't run the virt-p2v program directly.  Instead you have to "
"boot the physical machine using the bootable CD-ROM, ISO or PXE image.  This "
"bootable image contains the virt-p2v binary and runs it automatically."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:23
msgid ""
"This manual page documents running the virt-p2v program.  To create the "
"bootable image you should look at L<virt-p2v-make-disk(1)> or L<virt-p2v-"
"make-kickstart(1)>."
msgstr ""

#. type: =head1
#: ../p2v/virt-p2v.pod:27
msgid "NETWORK SETUP"
msgstr "НАЛАШТОВУВАННЯ МЕРЕЖІ"

#. type: textblock
#: ../p2v/virt-p2v.pod:29
msgid ""
"Virt-p2v runs on the physical machine which you want to convert.  It has to "
"talk to another server called the \"conversion server\" which must have "
"L<virt-v2v(1)> installed on it.  It always talks to the conversion server "
"over SSH:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:34
#, no-wrap
msgid ""
" ┌──────────────┐                  ┌─────────────────┐\n"
" │ virt-p2v     │                  │ virt-v2v        │\n"
" │ (physical    │  ssh connection  │ (conversion     │\n"
" │  server)   ╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍▶ server)       │\n"
" └──────────────┘                  └─────────────────┘\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:40
msgid ""
"The virt-v2v program on the conversion server does the actual conversion "
"(physical to virtual, and virtual to virtual conversions are sufficiently "
"similar that we use the same program to do both)."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:44
msgid ""
"The SSH connection is always initiated from the physical server.  All data "
"is transferred over the SSH connection.  In terms of firewall and network "
"configuration, you only need to ensure that the physical server has access "
"to a port (usually TCP port 22) on the conversion server.  Note that the "
"physical machine may reconnect several times during the conversion process."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:51
msgid ""
"The reverse port forwarding feature of ssh (ie. C<ssh -R>) is required by "
"virt-p2v, and it will not work if this is disabled on the conversion server."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:55
msgid ""
"The conversion server does not need to be a physical machine.  It could be a "
"virtual machine, as long as it has sufficient memory and disk space to do "
"the conversion, and as long as the physical machine can connect directly to "
"its SSH port."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:60
msgid ""
"Because all of the data on the physical server's hard drive(s) has to be "
"copied over the network, the speed of conversion is largely determined by "
"the speed of the network between the two machines."
msgstr ""

#. type: =head1
#: ../p2v/virt-p2v.pod:64
msgid "GUI INTERACTIVE CONFIGURATION"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:66
msgid ""
"When you start virt-p2v, you'll see a graphical configuration dialog that "
"walks you through connection to the conversion server, asks for the "
"password, which local hard disks you want to convert, and other things like "
"the name of the guest to create and the number of virtual CPUs to give it."
msgstr ""

#. type: =head2
#: ../p2v/virt-p2v.pod:72
msgid "SSH CONFIGURATION DIALOG"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:74
msgid "When virt-p2v starts up in GUI mode, the first dialog looks like this:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:76
#, no-wrap
msgid ""
" ┌────────────────────────────────────────────────────────┐\n"
" │                      virt-p2v                          │\n"
" │                                                        │\n"
" │ Conversion server: [_________________________________] │\n"
" │                                                        │\n"
" │          SSH port: [22_______________________________] │\n"
" │                                                        │\n"
" │         User name: [root_____________________________] │\n"
" │                                                        │\n"
" │          Password: [_________________________________] │\n"
" │                                                        │\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:88
msgid ""
"In the fields above, you must enter the hostname, SSH port number, remote "
"user name and password of the conversion server.  The conversion server must "
"have an up to date version of virt-v2v."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:92
msgid ""
"Normally you must log in to the conversion server as root, but if you check "
"the following box:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:95
#, no-wrap
msgid ""
" │                                                        │\n"
" │                    [ ] Use sudo when running virt-v2v  │\n"
" │                                                        │\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:99
msgid ""
"then you can log in as another user, and virt-p2v will use the L<sudo(8)> "
"command to elevate privileges to root.  Note that sudo must not require a "
"password."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:103
msgid ""
"It is also possible to run virt-v2v on the conversion server entirely as non-"
"root, but output modes may be limited.  Consult the L<virt-v2v(1)> manual "
"page for details."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:107
msgid "At the bottom of the dialog are these buttons:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:109
#, no-wrap
msgid ""
" │                                                        │\n"
" │                [ Test connection ]                     │\n"
" │                                                        │\n"
" │                [ About           ]  [ Next           ] │\n"
" │                                                        │\n"
" └────────────────────────────────────────────────────────┘\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:116
msgid ""
"You must press the C<Test connection> button first to test the SSH "
"connection to the conversion server.  If that is successful (ie. you have "
"supplied the correct server name, user name, password, etc., and a suitable "
"version of virt-v2v is available remotely) then press the C<Next> button to "
"move to the next dialog."
msgstr ""

#. type: =head2
#: ../p2v/virt-p2v.pod:122
msgid "DISK AND NETWORK CONFIGURATION DIALOG"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:124
msgid ""
"The second configuration dialog lets you configure the details of "
"conversion, including what to convert and where to send the guest."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:127
msgid ""
"In the left hand column, starting at the top, the target properties let you "
"select the name of the guest (ie. after conversion) and how many virtual "
"CPUs and how much RAM to give it.  The defaults come from the physical "
"machine, and you can usually leave them unchanged:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:132
#, no-wrap
msgid ""
" ┌─────────────────────────────────────── ─ ─ ─ ─\n"
" │ Target properties:\n"
" │\n"
" │        Name: [hostname______________]\n"
" │\n"
" │     # vCPUs: [4_____________________]\n"
" │\n"
" │ Memory (MB): [16384_________________]\n"
" │\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:142
msgid ""
"The second panel on the left controls the virt-v2v output options.  To "
"understand these options it is a really good idea to read the L<virt-v2v(1)> "
"manual page.  You can leave the options at the default to create a guest as "
"a disk image plus libvirt XML file located in C</var/tmp> on the conversion "
"host.  This is a good idea if you are a first-time virt-p2v user."
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:149
#, no-wrap
msgid ""
" │\n"
" │ Virt-v2v output options:\n"
" │\n"
" │          Output to (-o): [local             ▼]\n"
" │\n"
" │      Output conn. (-oc): [___________________]\n"
" │\n"
" │    Output storage (-os): [/var/tmp___________]\n"
" │\n"
" │     Output format (-of): [___________________]\n"
" │\n"
" │ Output allocation (-oa): [sparse            ▼]\n"
" │\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:163
msgid ""
"All output options and paths are relative to the conversion server (I<not> "
"to the physical server)."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:166
msgid ""
"The final option in this panel enables server-side debugging.  This produces "
"a lot of output, but is essential if you are tracking down virt-p2v or virt-"
"v2v problems, and can generally be left enabled:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:170
#, no-wrap
msgid ""
" │\n"
" │ [✔] Enable server-side debugging\n"
" │\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:174
msgid ""
"Finally in the left hand column is an information box giving the version of "
"virt-p2v (on the physical server) and virt-v2v (on the conversion server).  "
"You should supply this information when reporting bugs."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:179
msgid ""
"In the right hand column are three panels which control what hard disks, "
"removable media devices, and network interfaces, will be created in the "
"output guest.  Normally leaving these at the default settings is fine."
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:184
#, no-wrap
msgid ""
" ─ ─ ───────────────────────────────────────┐\n"
"     Fixed hard disks                       │\n"
"                                            │\n"
"     Convert  Device  Size (GB)  Model      │\n"
"     [✔]      sda     1024       HITACHI    │\n"
"     [✔]      sdb     119        HITACHI    │\n"
"                                            │\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:192
msgid ""
"Normally you would want to convert all hard disks.  If you want virt-p2v to "
"completely ignore a local hard disk, uncheck it.  The hard disk that "
"contains the operating system must be selected.  If a hard disk is part of a "
"RAID array or LVM volume group (VG), then either all hard disks in that "
"array/VG must be selected, or none of them."
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:198
#, no-wrap
msgid ""
"                                            │\n"
"     Removable media                        │\n"
"                                            │\n"
"     Convert  Device                        │\n"
"     [✔]      sr0                           │\n"
"                                            │\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:205
msgid ""
"If the physical machine has CD or DVD drives, then you can use the Removable "
"media panel to create corresponding drives on the guest after conversion.  "
"Note that any data CDs/DVDs which are mounted in the drives are I<not> "
"copied over."
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:210
#, no-wrap
msgid ""
"                                            │\n"
"     Network interfaces                     │\n"
"                                            │\n"
"     Convert  Device Connect to ...         |\n"
"     [✔]      em1    [default_____________] │\n"
"     [ ]      wlp3s0 [default_____________] │\n"
"                                            │\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:218
msgid ""
"In the Network interfaces panel, select the network interfaces that should "
"be created in the guest after conversion.  You can also connect these to "
"target hypervisor networks (for further information about this feature, see "
"L<virt-v2v(1)/NETWORKS AND BRIDGES>)."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:223
msgid ""
"When you are ready to begin the conversion, press the C<Start conversion> "
"button:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:226
#, no-wrap
msgid ""
"                                            │\n"
"             [ Back ]  [ Start conversion ] │\n"
"                                            │\n"
" ─ ─ ───────────────────────────────────────┘\n"
"\n"
msgstr ""

#. type: =head2
#: ../p2v/virt-p2v.pod:231
msgid "CONVERSION RUNNING DIALOG"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:233
msgid "When conversion is running you will see this dialog:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:235
#, no-wrap
msgid ""
" ┌────────────────────────────────────────────────────────┐\n"
" │                      virt-p2v                          │\n"
" │                                                        │\n"
" │  ┌──────────────────────────────────────────────────┐  │\n"
" │  │                                                 ▲│  │\n"
" │  │                                                  │  │\n"
" │  │                                                  │  │\n"
" ∼  ∼                                                  ∼  ∼\n"
" │  │                                                  │  │\n"
" │  │                                                  │  │\n"
" │  │                                                 ▼│  │\n"
" │  └──────────────────────────────────────────────────┘  │\n"
" │                                                        │\n"
" │ Log files ... to /tmp/virt-p2v-xxx                     │\n"
" │                                                        │\n"
" │ Doing conversion ...                                   │\n"
" │                                                        │\n"
" │                                 [ Cancel conversion ]  │\n"
" │                                                        │\n"
" └────────────────────────────────────────────────────────┘\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:256
msgid ""
"In the main scrolling area you will see log messages from the virt-v2v "
"process."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:259
msgid ""
"Below the main area, virt-p2v shows you the location of the directory on the "
"conversion server that contains log files and other debugging information.  "
"Below that is the current status and a button for cancelling conversion."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:264
msgid ""
"Once conversion has finished, you should shut down the physical machine.  If "
"conversion is successful, you should never reboot it."
msgstr ""

#. type: =head1
#: ../p2v/virt-p2v.pod:267
msgid "KERNEL COMMAND LINE CONFIGURATION"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:269
msgid ""
"If you don't want to configure things using the graphical UI, an alternative "
"is to configure through the kernel command line.  This is especially "
"convenient if you are converting a lot of physical machines which are booted "
"using PXE."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:274
msgid ""
"Where exactly you set command line arguments depends on your PXE "
"implementation, but for pxelinux you put them in the C<APPEND> field in the "
"C<pxelinux.cfg> file.  For example:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:278
#, no-wrap
msgid ""
" DEFAULT p2v\n"
" TIMEOUT 20\n"
" PROMPT 0\n"
" LABEL p2v\n"
"   KERNEL virt-p2v-vmlinuz\n"
"   APPEND initrd=virt-p2v-initrd p2v.server=conv.example.com p2v.password=secret p2v.o=libvirt\n"
"\n"
msgstr ""
" DEFAULT p2v\n"
" TIMEOUT 20\n"
" PROMPT 0\n"
" LABEL p2v\n"
"   KERNEL virt-p2v-vmlinuz\n"
"   APPEND initrd=virt-p2v-initrd p2v.server=conv.example.com p2v.password=secret p2v.o=libvirt\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v.pod:285
msgid "You have to set some or all of the following command line arguments:"
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:289
msgid "B<p2v.server=SERVER>"
msgstr "B<p2v.server=СЕРВЕР>"

#. type: textblock
#: ../p2v/virt-p2v.pod:291
msgid "The name or IP address of the conversion server."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:293
msgid ""
"This is always required if you are using the kernel configuration method.  "
"If virt-p2v does not find this on the kernel command line then it switches "
"to the GUI (interactive) configuration method."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:297
msgid "B<p2v.port=NN>"
msgstr "B<p2v.port=NN>"

#. type: textblock
#: ../p2v/virt-p2v.pod:299
msgid "The SSH port number on the conversion server (default: C<22>)."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:301
msgid "B<p2v.username=USERNAME>"
msgstr "B<p2v.username=КОРИСТУВАЧ>"

#. type: textblock
#: ../p2v/virt-p2v.pod:303
msgid ""
"The SSH username that we log in as on the conversion server (default: "
"C<root>)."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:306
msgid "B<p2v.password=PASSWORD>"
msgstr "B<p2v.password=ПАРОЛЬ>"

#. type: textblock
#: ../p2v/virt-p2v.pod:308
msgid "The SSH password that we use to log in to the conversion server."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:310
msgid ""
"The default is to try with no password.  If this fails then virt-p2v will "
"ask the user to type the password (probably several times during conversion)."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:314
msgid ""
"Note that virt-p2v does not support authentication using key distribution at "
"this time."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:317
msgid "B<p2v.sudo>"
msgstr "B<p2v.sudo>"

#. type: textblock
#: ../p2v/virt-p2v.pod:319
msgid ""
"Use C<p2v.sudo> to tell virt-p2v to use L<sudo(8)> to gain root privileges "
"on the conversion server after logging in as a non-root user (default: do "
"not use sudo)."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:323
msgid "B<p2v.name=GUESTNAME>"
msgstr "B<p2v.name=НАЗВА_ГОСТЬОВОЇ_СИСТЕМИ>"

#. type: textblock
#: ../p2v/virt-p2v.pod:325
msgid ""
"The name of the guest that is created.  The default is to try to derive a "
"name from the physical machine's hostname (if possible) else use a randomly "
"generated name."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:329
msgid "B<p2v.vcpus=NN>"
msgstr "B<p2v.vcpus=NN>"

#. type: textblock
#: ../p2v/virt-p2v.pod:331
msgid ""
"The number of virtual CPUs to give to the guest.  The default is to use the "
"same as the number of physical CPUs."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:334
msgid "B<p2v.memory=NN(M|G)>"
msgstr "B<p2v.memory=NN(M|G)>"

#. type: textblock
#: ../p2v/virt-p2v.pod:336
msgid ""
"The size of the guest memory.  You can specify this in megabytes or "
"gigabytes by using (eg) C<p2v.memory=1024M> or C<p2v.memory=1G>.  The "
"default is to use the same amount of RAM as on the physical machine."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:340
msgid "B<p2v.debug>"
msgstr "B<p2v.debug>"

#. type: textblock
#: ../p2v/virt-p2v.pod:342
msgid "Use this to enable full debugging of virt-v2v."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:344
msgid ""
"If asked to diagnose a problem with virt-p2v, you should add C<p2v.debug> to "
"the kernel command line, and examine the log file which is left in C</tmp> "
"on the conversion server."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:348
msgid "B<p2v.disks=sdX,sdY,..>"
msgstr "B<p2v.disks=sdX,sdY,..>"

#. type: textblock
#: ../p2v/virt-p2v.pod:350
msgid "A list of physical hard disks to convert, for example:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:352
#, no-wrap
msgid ""
" p2v.disks=sda,sdc\n"
"\n"
msgstr ""
" p2v.disks=sda,sdc\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v.pod:354
msgid "The default is to convert all local hard disks that are found."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:356
msgid "B<p2v.removable=srX,srY,..>"
msgstr "B<p2v.removable=srX,srY,..>"

#. type: textblock
#: ../p2v/virt-p2v.pod:358
msgid ""
"A list of removable media to convert.  The default is to create virtual "
"removable devices for every physical removable device found.  Note that the "
"content of removable media is never copied over."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:362
msgid "B<p2v.interfaces=em1,..>"
msgstr "B<p2v.interfaces=em1,..>"

#. type: textblock
#: ../p2v/virt-p2v.pod:364
msgid ""
"A list of network interfaces to convert.  The default is to create virtual "
"network interfaces for every physical network interface found."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:367
msgid "B<p2v.network=interface:target,...>"
msgstr "B<p2v.network=інтерфейс:призначення,...>"

#. type: textblock
#: ../p2v/virt-p2v.pod:369
msgid ""
"Controls how network interfaces are connected to virtual networks on the "
"target hypervisor.  The default is to connect all network interfaces to the "
"target C<default> network."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:373
msgid ""
"You give a comma-separated list of C<interface:target> pairs, plus "
"optionally a default target.  For example:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:376
#, no-wrap
msgid ""
" p2v.network=em1:rhevm\n"
"\n"
msgstr ""
" p2v.network=em1:rhevm\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v.pod:378
msgid "maps interface C<em1> to target network C<rhevm>."
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:380
#, no-wrap
msgid ""
" p2v.network=em1:rhevm,em2:management,other\n"
"\n"
msgstr ""
" p2v.network=em1:rhevm,em2:management,other\n"
"\n"

#. type: textblock
#: ../p2v/virt-p2v.pod:382
msgid ""
"maps interface C<em1> to C<rhevm>, and C<em2> to C<management>, and any "
"other interface that is found to C<other>."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:385
msgid "B<p2v.o=[libvirt|local|...]>"
msgstr "B<p2v.o=[libvirt|local|...]>"

#. type: textblock
#: ../p2v/virt-p2v.pod:387
msgid ""
"Set the output mode.  This is the same as the virt-v2v I<-o> option.  See "
"L<virt-v2v(1)/OPTIONS>."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:390
msgid ""
"If not specified, the default is C<local>, and the converted guest is "
"written to C</var/tmp>."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:393
msgid "B<p2v.oa=sparse|preallocated>"
msgstr "B<p2v.oa=sparse|preallocated>"

#. type: textblock
#: ../p2v/virt-p2v.pod:395
msgid ""
"Set the output allocation mode.  This is the same as the virt-v2v I<-oa> "
"option.  See L<virt-v2v(1)/OPTIONS>."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:398
msgid "B<p2v.oc=...>"
msgstr "B<p2v.oc=...>"

#. type: textblock
#: ../p2v/virt-p2v.pod:400
msgid ""
"Set the output connection libvirt URI.  This is the same as the virt-v2v I<-"
"oc> option.  See L<virt-v2v(1)/OPTIONS> and L<http://libvirt.org/uri.html>"
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:404
msgid "B<p2v.of=raw|qcow2|...>"
msgstr "B<p2v.of=raw|qcow2|...>"

#. type: textblock
#: ../p2v/virt-p2v.pod:406
msgid ""
"Set the output format.  This is the same as the virt-v2v I<-of> option.  See "
"L<virt-v2v(1)/OPTIONS>."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:409
msgid "B<p2v.os=...>"
msgstr "B<p2v.os=...>"

#. type: textblock
#: ../p2v/virt-p2v.pod:411
msgid ""
"Set the output storage.  This is the same as the virt-v2v I<-os> option.  "
"See L<virt-v2v(1)/OPTIONS>."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:414
msgid ""
"If not specified, the default is C</var/tmp> (on the conversion server)."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:416
msgid "B<ip=dhcp>"
msgstr "B<ip=dhcp>"

#. type: textblock
#: ../p2v/virt-p2v.pod:418
msgid "Use DHCP for configuring the network interface (this is the default)."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:422
msgid "B<ip=ADDR:GATEWAY:NETMASK>"
msgstr "B<ip=АДРЕСА:ШЛЮЗ:МАСКА_МЕРЕЖІ>"

#. type: textblock
#: ../p2v/virt-p2v.pod:424
msgid "Set up a static IPv4 network configuration."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:438
msgid "B<--cmdline=CMDLINE>"
msgstr "B<--cmdline=РЯДОК_КОМАНДИ>"

#. type: textblock
#: ../p2v/virt-p2v.pod:440
msgid ""
"This is used for debugging. Instead of parsing the kernel command line from "
"C</proc/cmdline>, parse the string parameter C<CMDLINE>."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:447
msgid "Enable debugging (on the conversion server)."
msgstr ""

#. type: =head1
#: ../p2v/virt-p2v.pod:457
msgid "HOW VIRT-P2V WORKS"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:459
msgid ""
"B<Note this section is not normative.> We may change how virt-p2v works at "
"any time in the future."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:462
msgid ""
"As described above, virt-p2v runs on a physical machine, interrogates the "
"user or the kernel command line for configuration, and then establishes one "
"or more ssh connections to the virt-v2v conversion server.  The ssh "
"connections are interactive shell sessions to the remote host, but the "
"commands sent are generated entirely by virt-p2v itself, not by the user.  "
"For data transfer, virt-p2v will use the reverse port forward feature of ssh "
"(ie. C<ssh -R>)."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:470
msgid ""
"It will first make one or more test connections, which are used to query the "
"remote version of virt-v2v and its features.  The test connections are "
"closed before conversion begins."
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:474
#, no-wrap
msgid ""
" ┌──────────────┐                      ┌─────────────────┐\n"
" │ virt-p2v     │                      │ virt-v2v        │\n"
" │ (physical    │  control connection  │ (conversion     │\n"
" │  server)   ╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍▶ server)       │\n"
" └──────────────┘                      └─────────────────┘\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:480
msgid ""
"Once virt-p2v is ready to start conversion, it will open a single ssh "
"control connection.  It first sends a mkdir command to create a temporary "
"directory on the conversion server.  The directory name is randomly chosen "
"and is displayed in the GUI.  It has the form:"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:485
#, no-wrap
msgid ""
" /tmp/virt-p2v-YYYYMMDD-XXXXXXXX\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:487
msgid ""
"where C<YYYYMMDD> is the current date, and the X's are random characters."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:490
msgid "Into this directory are written various files which include:"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:496 ../p2v/virt-p2v.pod:502 ../p2v/virt-p2v.pod:521
msgid "I<before conversion>"
msgstr "I<до перетворення>"

#. type: textblock
#: ../p2v/virt-p2v.pod:498
msgid "The name (usually the hostname) of the physical machine."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:500
msgid "C<physical.xml>"
msgstr "C<physical.xml>"

#. type: textblock
#: ../p2v/virt-p2v.pod:504
msgid ""
"Libvirt XML describing the physical machine.  It is used to pass data about "
"the physical source host to L<virt-v2v(1)> via the I<-i libvirtxml> option."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:508
msgid ""
"Note this is not \"real\" libvirt XML (and must B<never> be loaded into "
"libvirt, which would reject it anyhow).  Also it is not the same as the "
"libvirt XML which virt-v2v generates in certain output modes."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:512
msgid "C<status>"
msgstr "C<status>"

#. type: textblock
#: ../p2v/virt-p2v.pod:514
msgid "I<after conversion>"
msgstr "I<після перетворення>"

#. type: textblock
#: ../p2v/virt-p2v.pod:516
msgid ""
"The final status of the conversion.  C<0> if the conversion was successful.  "
"Non-zero if the conversion failed."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:519
msgid "C<time>"
msgstr "C<time>"

#. type: textblock
#: ../p2v/virt-p2v.pod:523
msgid "The start date/time of conversion."
msgstr ""

#. type: =item
#: ../p2v/virt-p2v.pod:525
msgid "C<virt-v2v-conversion-log.txt>"
msgstr "C<virt-v2v-conversion-log.txt>"

#. type: textblock
#: ../p2v/virt-p2v.pod:527
msgid "I<during/after conversion>"
msgstr "I<підчас/після перетворення>"

#. type: textblock
#: ../p2v/virt-p2v.pod:529
msgid ""
"The conversion log.  This is just the output of the virt-v2v command on the "
"conversion server.  If conversion fails, you should examine this log file, "
"and you may be asked to supply the B<complete>, B<unedited> log file in any "
"bug reports or support tickets."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:536
msgid ""
"Before conversion actually begins, virt-p2v then makes one or more further "
"ssh connections to the server for data transfer.  The transfer protocol used "
"currently is NBD (Network Block Device), which is proxied over ssh.  The "
"server is L<qemu-nbd(1)>.  There is one ssh connection per physical hard "
"disk on the source machine (the common case — a single hard disk — is shown "
"below):"
msgstr ""

#. type: verbatim
#: ../p2v/virt-p2v.pod:543
#, no-wrap
msgid ""
" ┌──────────────┐                      ┌─────────────────┐\n"
" │ virt-p2v     │                      │ virt-v2v        │\n"
" │ (physical    │  control connection  │ (conversion     │\n"
" │  server)   ╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍▶ server)       │\n"
" │              │                      │                 │\n"
" │              │  data connection     │                 │\n"
" │            ╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍▶               │\n"
" │qemu-nbd ← ─┘ │                      │└─ ← NBD         │\n"
" │/dev/sda      │                      │     requests    │\n"
" ∼              ∼                      ∼                 ∼\n"
" └──────────────┘                      └─────────────────┘\n"
"\n"
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:555
msgid ""
"Although the ssh data connection is originated from the physical server and "
"terminates on the conversion server, in fact NBD requests flow in the "
"opposite direction.  This is because the reverse port forward feature of ssh "
"(C<ssh -R>) is used to open a port on the loopback interface of the "
"conversion server which is proxied back by ssh to the qemu-nbd server "
"running on the physical machine.  The effect is that virt-v2v via libguestfs "
"can open nbd connections which directly read the hard disk(s) of the "
"physical server."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:564
msgid ""
"Two layers of protection are used to ensure that there are no writes to the "
"hard disks: Firstly, the qemu-nbd I<-r> (readonly) option is used.  Secondly "
"libguestfs creates an overlay on top of the NBD connection which stores "
"writes in a temporary file on the conversion file."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:570
msgid ""
"The final step is to send the S<C<virt-v2v -i libvirtxml physical.xml ...>> "
"command to the conversion server over the control connection.  This "
"references the C<physical.xml> file (see above), which in turn references "
"the NBD listening port(s) of the data connection(s)."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:575
msgid ""
"Output from the virt-v2v command (messages, debugging etc) is saved both in "
"the log file on the conversion server, and sent over the control connection "
"to be displayed in the graphical UI."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:581
msgid ""
"L<virt-p2v-make-disk(1)>, L<virt-p2v-make-kickstart(1)>, L<virt-v2v(1)>, "
"L<qemu-nbd(1)>, L<ssh(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../p2v/virt-p2v.pod:592 ../v2v/virt-v2v.pod:1328
msgid "Matthew Booth"
msgstr ""

#. type: textblock
#: ../perl/examples/guestfs-perl.pod:3
msgid "guestfs-perl - How to use libguestfs from Perl"
msgstr "guestfs-perl — як використовувати libguestfs з Perl"

#. type: verbatim
#: ../perl/examples/guestfs-perl.pod:7
#, no-wrap
msgid ""
" use Sys::Guestfs;\n"
" \n"
msgstr ""
" use Sys::Guestfs;\n"
" \n"

#. type: verbatim
#: ../perl/examples/guestfs-perl.pod:9
#, no-wrap
msgid ""
" my $g = Sys::Guestfs->new ();\n"
" $g->add_drive_opts ('guest.img', format => 'raw');\n"
" $g->launch ();\n"
" $g->mount ('/dev/sda1', '/');\n"
" $g->touch ('/hello');\n"
" $g->shutdown ();\n"
" $g->close ();\n"
"\n"
msgstr ""
" my $g = Sys::Guestfs->new ();\n"
" $g->add_drive_opts ('guest.img', format => 'raw');\n"
" $g->launch ();\n"
" $g->mount ('/dev/sda1', '/');\n"
" $g->touch ('/hello');\n"
" $g->shutdown ();\n"
" $g->close ();\n"
"\n"

#. type: textblock
#: ../perl/examples/guestfs-perl.pod:19
msgid ""
"This manual page documents how to call libguestfs from the Perl programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>.  To read the full Perl API, see L<Sys::Guestfs(3)>."
msgstr ""

#. type: textblock
#: ../perl/examples/guestfs-perl.pod:27
msgid ""
"Errors from libguestfs functions turn into calls to C<croak> (see "
"L<Carp(3)>)."
msgstr ""

#. type: textblock
#: ../perl/examples/guestfs-perl.pod:40
msgid ""
"L<Sys::Guestfs(3)>, L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-"
"erlang(3)>, L<guestfs-golang(3)>, L<guestfs-java(3)>, L<guestfs-lua(3)>, "
"L<guestfs-ocaml(3)>, L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-"
"ruby(3)>, L<http://libguestfs.org/>."
msgstr ""
"L<Sys::Guestfs(3)>, L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-"
"erlang(3)>, L<guestfs-golang(3)>, L<guestfs-java(3)>, L<guestfs-lua(3)>, "
"L<guestfs-ocaml(3)>, L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-"
"ruby(3)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../python/examples/guestfs-python.pod:3
msgid "guestfs-python - How to use libguestfs from Python"
msgstr "guestfs-python — як використовувати libguestfs з Python"

#. type: verbatim
#: ../python/examples/guestfs-python.pod:7
#, no-wrap
msgid ""
" import guestfs\n"
" g = guestfs.GuestFS (python_return_dict=True)\n"
" g.add_drive_opts (\"disk.img\", format=\"raw\", readonly=1)\n"
" g.launch ()\n"
"\n"
msgstr ""
" import guestfs\n"
" g = guestfs.GuestFS (python_return_dict=True)\n"
" g.add_drive_opts (\"disk.img\", format=\"raw\", readonly=1)\n"
" g.launch ()\n"
"\n"

#. type: textblock
#: ../python/examples/guestfs-python.pod:14
msgid ""
"This manual page documents how to call libguestfs from the Python "
"programming language.  This page just documents the differences from the C "
"API and gives some examples.  If you are not familiar with using libguestfs, "
"you also need to read L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../python/examples/guestfs-python.pod:19
msgid "python_return_dict=True"
msgstr "python_return_dict=True"

#. type: textblock
#: ../python/examples/guestfs-python.pod:21
msgid "All new code should construct the handle using:"
msgstr ""

#. type: verbatim
#: ../python/examples/guestfs-python.pod:23
#, no-wrap
msgid ""
" g = guestfs.GuestFS (python_return_dict=True)\n"
"\n"
msgstr ""

#. type: textblock
#: ../python/examples/guestfs-python.pod:25
msgid ""
"This indicates that your program wants to receive Python dicts for methods "
"in the API that return hashtables."
msgstr ""

#. type: textblock
#: ../python/examples/guestfs-python.pod:28
msgid "In a future version of libguestfs, this will become the default."
msgstr ""

#. type: textblock
#: ../python/examples/guestfs-python.pod:32
msgid ""
"Errors from libguestfs functions are mapped into C<RuntimeException> with a "
"single string argument which is the error message."
msgstr ""

#. type: =head2
#: ../python/examples/guestfs-python.pod:35
msgid "MORE DOCUMENTATION"
msgstr "ДОДАТКОВА ДОКУМЕНТАЦІЯ"

#. type: textblock
#: ../python/examples/guestfs-python.pod:37
msgid "Type:"
msgstr "Тип:"

#. type: verbatim
#: ../python/examples/guestfs-python.pod:39
#, no-wrap
msgid ""
" $ python\n"
" >>> import guestfs\n"
" >>> help (guestfs)\n"
"\n"
msgstr ""
" $ python\n"
" >>> import guestfs\n"
" >>> help (guestfs)\n"
"\n"

#. type: textblock
#: ../python/examples/guestfs-python.pod:53
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, "
"L<guestfs-perl(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, "
"L<guestfs-perl(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://"
"libguestfs.org/>."

#. type: textblock
#: ../rescue/virt-rescue.pod:3
msgid "virt-rescue - Run a rescue shell on a virtual machine"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:7
#, no-wrap
msgid ""
" virt-rescue [--options] -d domname\n"
"\n"
msgstr ""
" virt-rescue [--параметри] -d назва_домену\n"
"\n"

#. type: verbatim
#: ../rescue/virt-rescue.pod:9
#, no-wrap
msgid ""
" virt-rescue [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:11
#, no-wrap
msgid ""
" virt-rescue --suggest (-d domname | -a disk.img ...)\n"
"\n"
msgstr ""
" virt-rescue --suggest (-d назва_домену | -a диск.img ...)\n"
"\n"

#. type: verbatim
#: ../rescue/virt-rescue.pod:15
#, no-wrap
msgid ""
" virt-rescue [--options] domname\n"
"\n"
msgstr ""
" virt-rescue [--параметри] назва_домену\n"
"\n"

#. type: verbatim
#: ../rescue/virt-rescue.pod:17
#, no-wrap
msgid ""
" virt-rescue [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:21
msgid ""
"You must I<not> use C<virt-rescue> on live virtual machines.  Doing so will "
"probably result in disk corruption in the VM.  C<virt-rescue> tries to stop "
"you from doing this, but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:25
msgid ""
"However if you use the I<--ro> (read only) option, then you can attach a "
"shell to a live virtual machine.  The results might be strange or "
"inconsistent at times but you won't get disk corruption."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:31
msgid ""
"virt-rescue is like a Rescue CD, but for virtual machines, and without the "
"need for a CD.  virt-rescue gives you a rescue shell and some simple "
"recovery tools which you can use to examine or rescue a virtual machine or "
"disk image."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:36
msgid ""
"You can run virt-rescue on any virtual machine known to libvirt, or directly "
"on disk image(s):"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:39
#, no-wrap
msgid ""
" virt-rescue -d GuestName\n"
"\n"
msgstr ""
" virt-rescue -d Назва_гостьової_системи\n"
"\n"

#. type: verbatim
#: ../rescue/virt-rescue.pod:41
#, no-wrap
msgid ""
" virt-rescue --ro -a /path/to/disk.img\n"
"\n"
msgstr ""
" virt-rescue --ro -a /шлях/до/диск.img\n"
"\n"

#. type: verbatim
#: ../rescue/virt-rescue.pod:43
#, no-wrap
msgid ""
" virt-rescue -a /dev/sdc\n"
"\n"
msgstr ""
" virt-rescue -a /dev/sdc\n"
"\n"

#. type: textblock
#: ../rescue/virt-rescue.pod:45
msgid "For live VMs you I<must> use the --ro option."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:47
msgid ""
"When you run virt-rescue on a virtual machine or disk image, you are placed "
"in an interactive bash shell where you can use many ordinary Linux "
"commands.  What you see in C</> (C</bin>, C</lib> etc) is the rescue "
"appliance.  You must mount the virtual machine's filesystems by hand.  There "
"is an empty directory called C</sysroot> where you can mount filesystems."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:54
msgid ""
"You can get virt-rescue to suggest mount commands for you by using the I<--"
"suggest> option (in another terminal):"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:57
#, no-wrap
msgid ""
" $ virt-rescue --suggest -d Fedora15\n"
" Inspecting the virtual machine or disk image ...\n"
" \n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:60
#, no-wrap
msgid ""
" This disk contains one or more operating systems.  You can use these\n"
" mount commands in virt-rescue (at the ><rescue> prompt) to mount the\n"
" filesystems.\n"
" \n"
msgstr ""
" На цьому диску зберігаються дані однієї або декількох операційних систем.\n"
" Ви можете скористатися цими командами монтування у virt-rescue (у відповідь\n"
" на запит ><rescue>) для монтування файлових систем.\n"
" \n"

#. type: verbatim
#: ../rescue/virt-rescue.pod:64
#, no-wrap
msgid ""
" # /dev/vg_f15x32/lv_root is the root of a linux operating system\n"
" # type: linux, distro: fedora, version: 15.0\n"
" # Fedora release 15 (Lovelock)\n"
" \n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:68
#, no-wrap
msgid ""
" mount /dev/vg_f15x32/lv_root /sysroot/\n"
" mount /dev/vda1 /sysroot/boot\n"
" mount --bind /dev /sysroot/dev\n"
" mount --bind /dev/pts /sysroot/dev/pts\n"
" mount --bind /proc /sysroot/proc\n"
" mount --bind /sys /sysroot/sys\n"
"\n"
msgstr ""
" mount /dev/vg_f15x32/lv_root /sysroot/\n"
" mount /dev/vda1 /sysroot/boot\n"
" mount --bind /dev /sysroot/dev\n"
" mount --bind /dev/pts /sysroot/dev/pts\n"
" mount --bind /proc /sysroot/proc\n"
" mount --bind /sys /sysroot/sys\n"
"\n"

#. type: textblock
#: ../rescue/virt-rescue.pod:75
msgid ""
"Another way is to list the logical volumes (with L<lvs(8)>) and partitions "
"(with L<parted(8)>) and mount them by hand:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:78
#, no-wrap
msgid ""
" ><rescue> lvs\n"
" LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert\n"
" lv_root vg_f15x32 -wi-a-   8.83G\n"
" lv_swap vg_f15x32 -wi-a- 992.00M\n"
" ><rescue> mount /dev/vg_f15x32/lv_root /sysroot\n"
" ><rescue> mount /dev/vda1 /sysroot/boot\n"
" ><rescue> ls /sysroot\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:86
msgid ""
"Another command to list available filesystems is L<virt-filesystems(1)>."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:89
msgid ""
"To run commands in a Linux guest (for example, grub), you should chroot into "
"the /sysroot directory first:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:92
#, no-wrap
msgid ""
" ><rescue> chroot /sysroot\n"
"\n"
msgstr ""
" ><rescue> chroot /sysroot\n"
"\n"

#. type: textblock
#: ../rescue/virt-rescue.pod:96
msgid ""
"Virt-rescue can be used on I<any> disk image file or device, not just a "
"virtual machine.  For example you can use it on a blank file if you want to "
"partition that file (although we would recommend using L<guestfish(1)> "
"instead as it is more suitable for this purpose).  You can even use virt-"
"rescue on things like SD cards."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:102
msgid ""
"You can get virt-rescue to give you scratch disk(s) to play with.  This is "
"useful for testing out Linux utilities (see I<--scratch>)."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:105
msgid ""
"Virt-rescue does not require root.  You only need to run it as root if you "
"need root to open the disk image."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:108
msgid ""
"This tool is just designed for quick interactive hacking on a virtual "
"machine.  For more structured access to a virtual machine disk image, you "
"should use L<guestfs(3)>.  To get a structured shell that you can use to "
"make scripted changes to guests, use L<guestfish(1)>."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:138
msgid "B<--append kernelopts>"
msgstr "B<--append параметри_ядра>"

#. type: textblock
#: ../rescue/virt-rescue.pod:140
msgid "Pass additional options to the rescue kernel."
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:170
#, no-wrap
msgid ""
" virt-rescue --format=raw -a disk.img\n"
"\n"
msgstr ""
" virt-rescue --format=raw -a диск.img\n"
"\n"

#. type: verbatim
#: ../rescue/virt-rescue.pod:174
#, no-wrap
msgid ""
" virt-rescue --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""
" virt-rescue --format=raw -a диск.img --format -a інший.img\n"
"\n"

#. type: =item
#: ../rescue/virt-rescue.pod:183
msgid "B<-m MB>"
msgstr "B<-m МБ>"

#. type: =item
#: ../rescue/virt-rescue.pod:185
msgid "B<--memsize MB>"
msgstr "B<--memsize МБ>"

#. type: textblock
#: ../rescue/virt-rescue.pod:187
msgid ""
"Change the amount of memory allocated to the rescue system.  The default is "
"set by libguestfs and is small but adequate for running system tools.  The "
"occasional program might need more memory.  The parameter is specified in "
"megabytes."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:194
msgid "Enable QEMU user networking in the guest.  See L</NETWORK>."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:200
msgid "Open the image read-only."
msgstr "Відкрити образ у режимі лише читання."

#. type: =item
#: ../rescue/virt-rescue.pod:208
msgid "B<--scratch>"
msgstr "B<--scratch>"

#. type: =item
#: ../rescue/virt-rescue.pod:210
msgid "B<--scratch=N>"
msgstr "B<--scratch=N>"

#. type: textblock
#: ../rescue/virt-rescue.pod:212
msgid ""
"The I<--scratch> option adds a large scratch disk to the rescue appliance.  "
"I<--scratch=N> adds C<N> scratch disks.  The scratch disk(s) are deleted "
"automatically when virt-rescue exits."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:216
msgid ""
"You can also mix I<-a>, I<-d> and I<--scratch> options.  The scratch disk(s) "
"are added to the appliance in the order they appear on the command line."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:222
msgid ""
"Enable SELinux in the rescue appliance.  You should read L<guestfs(3)/"
"SELINUX> before using this option."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:227
msgid "Enable N E<ge> 2 virtual CPUs in the rescue appliance."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:229
msgid "B<--suggest>"
msgstr "B<--suggest>"

#. type: textblock
#: ../rescue/virt-rescue.pod:231
msgid ""
"Inspect the disk image and suggest what mount commands should be used to "
"mount the disks.  You should use the I<--suggest> option in a second "
"terminal, then paste the commands into another virt-rescue."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:235
msgid ""
"This option implies I<--ro> and is safe to use even if the guest is up or if "
"another virt-rescue is running."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:254
msgid ""
"This changes the I<-a> and I<-d> options so that disks are added and mounts "
"are done read-write."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:267
msgid "Previous versions of virt-rescue allowed you to write either:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:269
#, no-wrap
msgid ""
" virt-rescue disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:273
#, no-wrap
msgid ""
" virt-rescue guestname\n"
"\n"
msgstr ""
" virt-rescue назва_гостьової_системи\n"
"\n"

#. type: =head1
#: ../rescue/virt-rescue.pod:281
msgid "NETWORK"
msgstr "МЕРЕЖА"

#. type: textblock
#: ../rescue/virt-rescue.pod:283
msgid ""
"Adding the I<--network> option enables QEMU user networking in the rescue "
"appliance.  There are some differences between user networking and ordinary "
"networking:"
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:289
msgid "ping does not work"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:291
msgid ""
"Because the ICMP ECHO_REQUEST protocol generally requires root in order to "
"send the ping packets, and because virt-rescue must be able to run as non-"
"root, QEMU user networking is not able to emulate the L<ping(8)> command.  "
"The ping command will appear to resolve addresses but will not be able to "
"send or receive any packets.  This does not mean that the network is not "
"working."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:298
msgid "cannot receive connections"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:300
msgid "QEMU user networking cannot receive incoming connections."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:302
msgid "making TCP connections"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:304
msgid ""
"The virt-rescue appliance needs to be small and so does not include many "
"network tools.  In particular there is no L<telnet(1)> command.  You can "
"make TCP connections from the shell using the magical C</dev/tcp/"
"E<lt>hostnameE<gt>/E<lt>portE<gt>> syntax:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:309
#, no-wrap
msgid ""
" exec 3<>/dev/tcp/redhat.com/80\n"
" echo \"GET /\" >&3\n"
" cat <&3\n"
"\n"
msgstr ""
" exec 3<>/dev/tcp/redhat.com/80\n"
" echo \"GET /\" >&3\n"
" cat <&3\n"
"\n"

#. type: textblock
#: ../rescue/virt-rescue.pod:313
msgid "See L<bash(1)> for more details."
msgstr ""

#. type: =head1
#: ../rescue/virt-rescue.pod:317
msgid "CAPTURING CORE DUMPS"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:319
msgid ""
"If you are testing a tool inside virt-rescue and the tool (B<not> virt-"
"rescue) segfaults, it can be tricky to capture the core dump outside virt-"
"rescue for later analysis.  This section describes one way to do this."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:328
msgid "Create a scratch disk for core dumps:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:330
#, no-wrap
msgid ""
" truncate -s 4G /tmp/corefiles\n"
" virt-format --partition=mbr --filesystem=ext2 -a /tmp/corefiles\n"
" virt-filesystems -a /tmp/corefiles --all --long -h\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:336
msgid "When starting virt-rescue, attach the core files disk last:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:338
#, no-wrap
msgid ""
" virt-rescue --rw [-a ...] -a /tmp/corefiles\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:340
msgid ""
"B<NB.> If you use the I<--ro> option, then virt-rescue will silently not "
"write any core files to C</tmp/corefiles>."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:345
msgid ""
"Inside virt-rescue, mount the core files disk.  Note replace C</dev/sdb1> "
"with the last disk index.  For example if the core files disk is the last of "
"four disks, you would use C</dev/sdd1>."
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:349
#, no-wrap
msgid ""
" ><rescue> mkdir /tmp/mnt\n"
" ><rescue> mount /dev/sdb1 /tmp/mnt\n"
"\n"
msgstr ""
" ><rescue> mkdir /tmp/mnt\n"
" ><rescue> mount /dev/sdb1 /tmp/mnt\n"
"\n"

#. type: textblock
#: ../rescue/virt-rescue.pod:354
msgid "Enable core dumps in the rescue kernel:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:356
#, no-wrap
msgid ""
" ><rescue> echo '/tmp/mnt/core.%p' > /proc/sys/kernel/core_pattern\n"
" ><rescue> ulimit -Hc unlimited\n"
" ><rescue> ulimit -Sc unlimited\n"
"\n"
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:360
msgid "5."
msgstr "5."

#. type: textblock
#: ../rescue/virt-rescue.pod:362
msgid ""
"Run the tool that caused the core dump.  The core dump will be written to C</"
"tmp/mnt/core.I<PID>>."
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:365
#, no-wrap
msgid ""
" ><rescue> ls -l /tmp/mnt\n"
" total 1628\n"
" -rw------- 1 root root 1941504 Dec  7 13:13 core.130\n"
" drwx------ 2 root root   16384 Dec  7 13:00 lost+found\n"
"\n"
msgstr ""
" ><rescue> ls -l /tmp/mnt\n"
" total 1628\n"
" -rw------- 1 root root 1941504 Dec  7 13:13 core.130\n"
" drwx------ 2 root root   16384 Dec  7 13:00 lost+found\n"
"\n"

#. type: =item
#: ../rescue/virt-rescue.pod:370
msgid "6."
msgstr "6."

#. type: textblock
#: ../rescue/virt-rescue.pod:372
msgid "Before exiting virt-rescue, unmount (or at least sync) the disks:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:374
#, no-wrap
msgid ""
" ><rescue> umount /tmp/mnt\n"
" ><rescue> exit\n"
"\n"
msgstr ""
" ><rescue> umount /tmp/mnt\n"
" ><rescue> exit\n"
"\n"

#. type: =item
#: ../rescue/virt-rescue.pod:377
msgid "7."
msgstr "7."

#. type: textblock
#: ../rescue/virt-rescue.pod:379
msgid ""
"Outside virt-rescue, the core dump(s) can be removed from the disk using "
"L<guestfish(1)>.  For example:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:382
#, no-wrap
msgid ""
" guestfish --ro -a /tmp/corefiles -m /dev/sda1\n"
" ><fs> ll /\n"
" ><fs> download /core.NNN /tmp/core.NNN\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:390
msgid ""
"Several environment variables affect virt-rescue.  See L<guestfs(3)/"
"ENVIRONMENT VARIABLES> for the complete list."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:414
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-edit(1)>, L<virt-"
"filesystems(1)>, L<libguestfs-tools.conf(5)>, L<http://libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-edit(1)>, L<virt-"
"filesystems(1)>, L<libguestfs-tools.conf(5)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../resize/virt-resize.pod:3
msgid "virt-resize - Resize a virtual machine disk"
msgstr "virt-resize — програма для зміни розмірів дисків віртуальної машини"

#. type: verbatim
#: ../resize/virt-resize.pod:7
#, no-wrap
msgid ""
" virt-resize [--resize /dev/sdaN=[+/-]<size>[%]]\n"
"   [--expand /dev/sdaN] [--shrink /dev/sdaN]\n"
"   [--ignore /dev/sdaN] [--delete /dev/sdaN] [...] indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:13
msgid ""
"Virt-resize is a tool which can resize a virtual machine disk, making it "
"larger or smaller overall, and resizing or deleting any partitions contained "
"within."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:17
msgid ""
"Virt-resize B<cannot> resize disk images in-place.  Virt-resize B<should "
"not> be used on live virtual machines - for consistent results, shut the "
"virtual machine down before resizing it."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:21
msgid ""
"If you are not familiar with the associated tools: L<virt-filesystems(1)> "
"and L<virt-df(1)>, we recommend you go and read those manual pages first."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:31
msgid ""
"Copy C<olddisk> to C<newdisk>, extending one of the guest's partitions to "
"fill the extra 5GB of space."
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:34
#, no-wrap
msgid ""
" virt-filesystems --long -h --all -a olddisk\n"
" \n"
msgstr ""
" virt-filesystems --long -h --all -a olddisk\n"
" \n"

#. type: verbatim
#: ../resize/virt-resize.pod:36
#, no-wrap
msgid ""
" truncate -r olddisk newdisk\n"
" truncate -s +5G newdisk\n"
" \n"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:39
#, no-wrap
msgid ""
" # Note \"/dev/sda2\" is a partition inside the \"olddisk\" file.\n"
" virt-resize --expand /dev/sda2 olddisk newdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:44
msgid ""
"As above, but make the /boot partition 200MB bigger, while giving the "
"remaining space to /dev/sda2:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:47
#, no-wrap
msgid ""
" virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
"   olddisk newdisk\n"
"\n"
msgstr ""
" virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
"   olddisk newdisk\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:52
msgid ""
"As in the first example, but expand a logical volume as the final step.  "
"This is what you would typically use for Linux guests that use LVM:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:56
#, no-wrap
msgid ""
" virt-resize --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root \\\n"
"   olddisk newdisk\n"
"\n"
msgstr ""
" virt-resize --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root \\\n"
"   olddisk newdisk\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:61
msgid ""
"As in the first example, but the output format will be qcow2 instead of a "
"raw disk:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:64
#, no-wrap
msgid ""
" qemu-img create -f qcow2 -o preallocation=metadata newdisk.qcow2 15G\n"
" virt-resize --expand /dev/sda2 olddisk newdisk.qcow2\n"
"\n"
msgstr ""
" qemu-img create -f qcow2 -o preallocation=metadata newdisk.qcow2 15G\n"
" virt-resize --expand /dev/sda2 olddisk newdisk.qcow2\n"
"\n"

#. type: =head1
#: ../resize/virt-resize.pod:69
msgid "DETAILED USAGE"
msgstr "ДОКЛАДНІШЕ ЩОДО ВИКОРИСТАННЯ"

#. type: =head2
#: ../resize/virt-resize.pod:71
msgid "EXPANDING A VIRTUAL MACHINE DISK"
msgstr "РОЗШИРЕННЯ ДИСКА ВІРТУАЛЬНОЇ МАШИНИ"

#. type: =item
#: ../resize/virt-resize.pod:75
msgid "1. Shut down the virtual machine"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:77
msgid "2. Locate input disk image"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:79
msgid ""
"Locate the input disk image (ie. the file or device on the host containing "
"the guest's disk).  If the guest is managed by libvirt, you can use C<virsh "
"dumpxml> like this to find the disk image name:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:83
#, no-wrap
msgid ""
" # virsh dumpxml guestname | xpath /domain/devices/disk/source\n"
" Found 1 nodes:\n"
" -- NODE --\n"
" <source dev=\"/dev/vg/lv_guest\" />\n"
"\n"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:88
msgid "3. Look at current sizing"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:90
msgid "Use L<virt-filesystems(1)> to display the current partitions and sizes:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:93
#, no-wrap
msgid ""
" # virt-filesystems --long --parts --blkdevs -h -a /dev/vg/lv_guest\n"
" Name       Type       Size  Parent\n"
" /dev/sda1  partition  101M  /dev/sda\n"
" /dev/sda2  partition  7.9G  /dev/sda\n"
" /dev/sda   device     8.0G  -\n"
"\n"
msgstr ""
" # virt-filesystems --long --parts --blkdevs -h -a /dev/vg/lv_guest\n"
" Name       Type       Size  Parent\n"
" /dev/sda1  partition  101M  /dev/sda\n"
" /dev/sda2  partition  7.9G  /dev/sda\n"
" /dev/sda   device     8.0G  -\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:99
msgid ""
"(This example is a virtual machine with an 8 GB disk which we would like to "
"expand up to 10 GB)."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:102
msgid "4. Create output disk"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:104
msgid ""
"Virt-resize cannot do in-place disk modifications.  You have to have space "
"to store the resized output disk."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:107
msgid ""
"To store the resized disk image in a file, create a file of a suitable size:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:110
#, no-wrap
msgid ""
" # rm -f outdisk\n"
" # truncate -s 10G outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:113
msgid "Or use L<lvcreate(1)> to create a logical volume:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:115
#, no-wrap
msgid ""
" # lvcreate -L 10G -n lv_name vg_name\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:117
msgid "Or use L<virsh(1)> vol-create-as to create a libvirt storage volume:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:119
#, no-wrap
msgid ""
" # virsh pool-list\n"
" # virsh vol-create-as poolname newvol 10G\n"
"\n"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:122
msgid "5. Resize"
msgstr "5. Зміна розміру"

#. type: textblock
#: ../resize/virt-resize.pod:124
msgid ""
"virt-resize takes two mandatory parameters, the input disk (eg. device, "
"file, or a URI to a remote disk) and the output disk.  The output disk is "
"the one created in the previous step."
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:128
#, no-wrap
msgid ""
" # virt-resize indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:130
msgid ""
"This command just copies disk image C<indisk> to disk image C<outdisk> "
"I<without> resizing or changing any existing partitions.  If C<outdisk> is "
"larger, then an extra, empty partition is created at the end of the disk "
"covering the extra space.  If C<outdisk> is smaller, then it will give an "
"error."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:136
msgid ""
"More realistically you'd want to expand existing partitions in the disk "
"image by passing extra options (for the full list see the L</OPTIONS> "
"section below)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:140
msgid ""
"L</--expand> is the most useful option.  It expands the named partition "
"within the disk to fill any extra space:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:143
#, no-wrap
msgid ""
" # virt-resize --expand /dev/sda2 indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:145
msgid ""
"(In this case, an extra partition is I<not> created at the end of the disk, "
"because there will be no unused space)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:148
msgid ""
"L</--resize> is the other commonly used option.  The following would "
"increase the size of /dev/sda1 by 200M, and expand /dev/sda2 to fill the "
"rest of the available space:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:152
#, no-wrap
msgid ""
" # virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
"     indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:155
msgid ""
"If the expanded partition in the image contains a filesystem or LVM PV, then "
"if virt-resize knows how, it will resize the contents, the equivalent of "
"calling a command such as L<pvresize(8)>, L<resize2fs(8)>, L<ntfsresize(8)>, "
"L<btrfs(8)> or L<xfs_growfs(8)>.  However virt-resize does not know how to "
"resize some filesystems, so you would have to online resize them after "
"booting the guest."
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:162
#, no-wrap
msgid ""
" # virt-resize --expand /dev/sda2 nbd://example.com outdisk\n"
"\n"
msgstr ""
" # virt-resize --expand /dev/sda2 nbd://example.com outdisk\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:164
msgid ""
"The input disk can be a URI, in order to use a remote disk as the source.  "
"The URI format is compatible with guestfish.  See L<guestfish(1)/ADDING "
"REMOTE STORAGE>."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:168
msgid "Other options are covered below."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:170
msgid "6. Test"
msgstr "6. Перевірка"

#. type: textblock
#: ../resize/virt-resize.pod:172
msgid "Thoroughly test the new disk image I<before> discarding the old one."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:174
msgid "If you are using libvirt, edit the XML to point at the new disk:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:176
#, no-wrap
msgid ""
" # virsh edit guestname\n"
"\n"
msgstr ""
" # virsh edit назва_гостьової_системи\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:178
msgid ""
"Change E<lt>source ...E<gt>, see L<http://libvirt.org/formatdomain."
"html#elementsDisks>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:181
msgid "Then start up the domain with the new, resized disk:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:183
#, no-wrap
msgid ""
" # virsh start guestname\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:185
msgid ""
"and check that it still works.  See also the L</NOTES> section below for "
"additional information."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:188
msgid "7. Resize LVs etc inside the guest"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:190
msgid "(This can also be done offline using L<guestfish(1)>)"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:192
msgid ""
"Once the guest has booted you should see the new space available, at least "
"for filesystems that virt-resize knows how to resize, and for PVs.  The user "
"may need to resize LVs inside PVs, and also resize filesystem types that "
"virt-resize does not know how to expand."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:199
msgid "SHRINKING A VIRTUAL MACHINE DISK"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:201
msgid ""
"Shrinking is somewhat more complex than expanding, and only an overview is "
"given here."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:204
msgid ""
"Firstly virt-resize will not attempt to shrink any partition content (PVs, "
"filesystems).  The user has to shrink content before passing the disk image "
"to virt-resize, and virt-resize will check that the content has been shrunk "
"properly."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:209
msgid "(Shrinking can also be done offline using L<guestfish(1)>)"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:211
msgid ""
"After shrinking PVs and filesystems, shut down the guest, and proceed with "
"steps 3 and 4 above to allocate a new disk image."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:214
msgid ""
"Then run virt-resize with any of the I<--shrink> and/or I<--resize> options."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:217
msgid "IGNORING OR DELETING PARTITIONS"
msgstr "ІГНОРУВАННЯ І ВИЛУЧЕННЯ РОЗДІЛІВ"

#. type: textblock
#: ../resize/virt-resize.pod:219
msgid ""
"virt-resize also gives a convenient way to ignore or delete partitions when "
"copying from the input disk to the output disk.  Ignoring a partition speeds "
"up the copy where you don't care about the existing contents of a "
"partition.  Deleting a partition removes it completely, but note that it "
"also renumbers any partitions after the one which is deleted, which can "
"leave some guests unbootable."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:226
msgid "QCOW2 AND NON-SPARSE RAW FORMATS"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:228
msgid ""
"If the input disk is in qcow2 format, then you may prefer that the output is "
"in qcow2 format as well.  Alternately, virt-resize can convert the format on "
"the fly.  The output format is simply determined by the format of the empty "
"output container that you provide.  Thus to create qcow2 output, use:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:234
#, no-wrap
msgid ""
" qemu-img create -f qcow2 -o preallocation=metadata outdisk [size]\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:236
msgid "instead of the truncate command."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:238
msgid "Similarly, to get non-sparse raw output use:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:240
#, no-wrap
msgid ""
" fallocate -l size outdisk\n"
"\n"
msgstr ""
" fallocate -l розмір вихідний_диск\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:242
msgid ""
"(on older systems that don't have the L<fallocate(1)> command use C<dd if=/"
"dev/zero of=outdisk bs=1M count=..>)"
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:245
msgid "LOGICAL PARTITIONS"
msgstr "ЛОГІЧНІ РОЗДІЛИ"

#. type: textblock
#: ../resize/virt-resize.pod:247
msgid ""
"Logical partitions (a.k.a. C</dev/sda5+> on disks using DOS partition "
"tables) cannot be resized."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:250
msgid ""
"To understand what is going on, firstly one of the four partitions C</dev/"
"sda1-4> will have MBR partition type C<05> or C<0f>.  This is called the "
"B<extended partition>.  Use L<virt-filesystems(1)> to see the MBR partition "
"type."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:255
msgid "Logical partitions live inside the extended partition."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:257
msgid ""
"The extended partition can be expanded, but not shrunk (unless you force it, "
"which is not advisable).  When the extended partition is copied across, all "
"the logical partitions contained inside are copied over implicitly.  Virt-"
"resize does not look inside the extended partition, so it copies the logical "
"partitions blindly."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:263
msgid ""
"You cannot specify a logical partition (C</dev/sda5+>) at all on the command "
"line.  Doing so will give an error."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:274
msgid "B<--align-first auto>"
msgstr "B<--align-first auto>"

#. type: =item
#: ../resize/virt-resize.pod:276
msgid "B<--align-first never>"
msgstr "B<--align-first never>"

#. type: =item
#: ../resize/virt-resize.pod:278
msgid "B<--align-first always>"
msgstr "B<--align-first always>"

#. type: textblock
#: ../resize/virt-resize.pod:280
msgid ""
"Align the first partition for improved performance (see also the I<--"
"alignment> option)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:283
msgid ""
"The default is I<--align-first auto> which only aligns the first partition "
"if it is safe to do so.  That is, only when we know how to fix the "
"bootloader automatically, and at the moment that can only be done for "
"Windows guests."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:288
msgid ""
"I<--align-first never> means we never move the first partition.  This is the "
"safest option.  Try this if the guest does not boot after resizing."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:292
msgid ""
"I<--align-first always> means we always align the first partition (if it "
"needs to be aligned).  For some guests this will break the bootloader, "
"making the guest unbootable."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:296
msgid "B<--alignment N>"
msgstr "B<--alignment N>"

#. type: textblock
#: ../resize/virt-resize.pod:298
msgid ""
"Set the alignment of partitions to C<N> sectors.  The default in virt-resize "
"E<lt> 1.13.19 was 64 sectors, and after that is 128 sectors."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:302
msgid ""
"Assuming 512 byte sector size inside the guest, here are some suitable "
"values for this:"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:307
msgid "I<--alignment 1> (512 bytes)"
msgstr "I<--alignment 1> (512 байтів)"

#. type: textblock
#: ../resize/virt-resize.pod:309
msgid ""
"The partitions would be packed together as closely as possible, but would be "
"completely unaligned.  In some cases this can cause very poor performance.  "
"See L<virt-alignment-scan(1)> for further details."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:313
msgid "I<--alignment 8> (4K)"
msgstr "I<--alignment 8> (4K)"

#. type: textblock
#: ../resize/virt-resize.pod:315
msgid ""
"This would be the minimum acceptable alignment for reasonable performance on "
"modern hosts."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:318
msgid "I<--alignment 128> (64K)"
msgstr "I<--alignment 128> (64K)"

#. type: textblock
#: ../resize/virt-resize.pod:320
msgid ""
"This alignment provides good performance when the host is using high end "
"network storage."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:323
msgid "I<--alignment 2048> (1M)"
msgstr "I<--alignment 2048> (1M)"

#. type: textblock
#: ../resize/virt-resize.pod:325
msgid ""
"This is the standard alignment used by all newly installed guests since "
"around 2008."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:330
msgid "B<-d>"
msgstr "B<-d>"

#. type: =item
#: ../resize/virt-resize.pod:332 ../tools/virt-win-reg:117
msgid "B<--debug>"
msgstr "B<--debug>"

#. type: textblock
#: ../resize/virt-resize.pod:334
msgid "(Deprecated: use I<-v> option instead)"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:336 ../resize/virt-resize.pod:585
#: ../tools/virt-win-reg:119
msgid "Enable debugging messages."
msgstr "Увімкнути показ діагностичних повідомлень."

#. type: =item
#: ../resize/virt-resize.pod:338 ../sparsify/virt-sparsify.pod:186
#: ../v2v/virt-v2v.pod:161
msgid "B<--debug-gc>"
msgstr "B<--debug-gc>"

#. type: textblock
#: ../resize/virt-resize.pod:340
msgid ""
"Debug garbage collection and memory allocation.  This is only useful when "
"debugging memory problems in virt-resize or the OCaml libguestfs bindings."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:344
msgid "B<--delete part>"
msgstr "B<--delete розділ>"

#. type: textblock
#: ../resize/virt-resize.pod:346
msgid ""
"Delete the named partition.  It would be more accurate to describe this as "
"\"don't copy it over\", since virt-resize doesn't do in-place changes and "
"the original disk image is left intact."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:350
msgid ""
"Note that when you delete a partition, then anything contained in the "
"partition is also deleted.  Furthermore, this causes any partitions that "
"come after to be I<renumbered>, which can easily make your guest unbootable."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:355 ../resize/virt-resize.pod:420
#: ../resize/virt-resize.pod:551 ../sparsify/virt-sparsify.pod:216
msgid "You can give this option multiple times."
msgstr "Цей параметр можна вказувати декілька разів."

#. type: =item
#: ../resize/virt-resize.pod:357
msgid "B<--expand part>"
msgstr "B<--expand розділ>"

#. type: textblock
#: ../resize/virt-resize.pod:359
msgid ""
"Expand the named partition so it uses up all extra space (space left over "
"after any other resize changes that you request have been done)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:362
msgid ""
"If virt-resize knows how, it will expand the direct content of the "
"partition.  For example, if the partition is an LVM PV, it will expand the "
"PV to fit (like calling L<pvresize(8)>).  Virt-resize leaves any other "
"content it doesn't know about alone."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:367
msgid "Currently virt-resize can resize:"
msgstr ""
"У поточній версії virt-resize може змінювати розміри таких файлових систем:"

#. type: textblock
#: ../resize/virt-resize.pod:373
msgid "ext2, ext3 and ext4 filesystems."
msgstr "Файлових систем ext2, ext3 і ext4."

#. type: textblock
#: ../resize/virt-resize.pod:377
msgid "NTFS filesystems, if libguestfs was compiled with support for NTFS."
msgstr "Файлових систем NTFS, якщо libguestfs було зібрано з підтримкою NTFS."

#. type: textblock
#: ../resize/virt-resize.pod:379
msgid ""
"The filesystem must have been shut down consistently last time it was used.  "
"Additionally, L<ntfsresize(8)> marks the resized filesystem as requiring a "
"consistency check, so at the first boot after resizing Windows will check "
"the disk."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:386
msgid ""
"LVM PVs (physical volumes).  virt-resize does not usually resize anything "
"inside the PV, but see the I<--LV-expand> option.  The user could also "
"resize LVs as desired after boot."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:392
msgid "Btrfs filesystems, if libguestfs was compiled with support for btrfs."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:396
msgid "XFS filesystems, if libguestfs was compiled with support for XFS."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:400 ../resize/virt-resize.pod:579
msgid "Note that you cannot use I<--expand> and I<--shrink> together."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:404 ../sparsify/virt-sparsify.pod:196
msgid ""
"Specify the format of the input disk image.  If this flag is not given then "
"it is auto-detected from the image itself."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:410
msgid ""
"Note that this option I<does not> affect the output format.  See L</QCOW2 "
"AND NON-SPARSE RAW FORMATS>."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:413
msgid "B<--ignore part>"
msgstr "B<--ignore розділ>"

#. type: textblock
#: ../resize/virt-resize.pod:415
msgid ""
"Ignore the named partition.  Effectively this means the partition is "
"allocated on the destination disk, but the content is not copied across from "
"the source disk.  The content of the partition will be blank (all zero "
"bytes)."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:422
msgid "B<--LV-expand logvol>"
msgstr "B<--LV-expand логічний_том>"

#. type: textblock
#: ../resize/virt-resize.pod:424
msgid ""
"This takes the logical volume and, as a final step, expands it to fill all "
"the space available in its volume group.  A typical usage, assuming a Linux "
"guest with a single PV C</dev/sda2> and a root device called C</dev/vg_guest/"
"lv_root> would be:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:429
#, no-wrap
msgid ""
" virt-resize indisk outdisk \\\n"
"   --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:432
msgid ""
"This would first expand the partition (and PV), and then expand the root "
"device to fill the extra space in the PV."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:435
msgid ""
"The contents of the LV are also resized if virt-resize knows how to do "
"that.  You can stop virt-resize from trying to expand the content by using "
"the option I<--no-expand-content>."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:439
msgid "Use L<virt-filesystems(1)> to list the filesystems in the guest."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:441
msgid ""
"You can give this option multiple times, I<but> it doesn't make sense to do "
"this unless the logical volumes you specify are all in different volume "
"groups."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:453
msgid "B<--dryrun>"
msgstr "B<--dryrun>"

#. type: textblock
#: ../resize/virt-resize.pod:455
msgid "Print a summary of what would be done, but don't do anything."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:457
msgid "B<--no-copy-boot-loader>"
msgstr "B<--no-copy-boot-loader>"

#. type: textblock
#: ../resize/virt-resize.pod:459
msgid ""
"By default, virt-resize copies over some sectors at the start of the disk "
"(up to the beginning of the first partition).  Commonly these sectors "
"contain the Master Boot Record (MBR) and the boot loader, and are required "
"in order for the guest to boot correctly."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:464
msgid ""
"If you specify this flag, then this initial copy is not done.  You may need "
"to reinstall the boot loader in this case."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:467
msgid "B<--no-extra-partition>"
msgstr "B<--no-extra-partition>"

#. type: textblock
#: ../resize/virt-resize.pod:469
msgid ""
"By default, virt-resize creates an extra partition if there is any extra, "
"unused space after all resizing has happened.  Use this option to prevent "
"the extra partition from being created.  If you do this then the extra space "
"will be inaccessible until you run fdisk, parted, or some other partitioning "
"tool in the guest."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:475
msgid ""
"Note that if the surplus space is smaller than 10 MB, no extra partition "
"will be created."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:478
msgid "B<--no-expand-content>"
msgstr "B<--no-expand-content>"

#. type: textblock
#: ../resize/virt-resize.pod:480
msgid ""
"By default, virt-resize will try to expand the direct contents of "
"partitions, if it knows how (see I<--expand> option above)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:483
msgid ""
"If you give the I<--no-expand-content> option then virt-resize will not "
"attempt this."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:486
msgid "B<--no-sparse>"
msgstr "B<--no-sparse>"

#. type: textblock
#: ../resize/virt-resize.pod:488
msgid "Turn off sparse copying.  See L</SPARSE COPYING> below."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:490
msgid "B<--ntfsresize-force>"
msgstr "B<--ntfsresize-force>"

#. type: textblock
#: ../resize/virt-resize.pod:492
msgid ""
"Pass the I<--force> option to L<ntfsresize(8)>, allowing resizing even if "
"the NTFS disk is marked as needing a consistency check.  You have to use "
"this option if you want to resize a Windows guest multiple times without "
"booting into Windows between each resize."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:498
msgid "B<--output-format> raw"
msgstr "B<--output-format> raw"

#. type: textblock
#: ../resize/virt-resize.pod:500
msgid ""
"Specify the format of the output disk image.  If this flag is not given then "
"it is auto-detected from the image itself."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:506
msgid ""
"Note that this option I<does not create> the output format.  This option "
"just tells libguestfs what it is so it doesn't try to guess it.  You still "
"need to create the output disk with the right format.  See L</QCOW2 AND NON-"
"SPARSE RAW FORMATS>."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:515
msgid "Don't print the summary."
msgstr "Не виводити даних резюме."

#. type: =item
#: ../resize/virt-resize.pod:517
msgid "B<--resize part=size>"
msgstr "B<--resize розділ=розмір>"

#. type: textblock
#: ../resize/virt-resize.pod:519
msgid ""
"Resize the named partition (expanding or shrinking it) so that it has the "
"given size."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:522
msgid ""
"C<size> can be expressed as an absolute number followed by b/K/M/G to mean "
"bytes, Kilobytes, Megabytes, or Gigabytes; or as a percentage of the current "
"size; or as a relative number or percentage.  For example:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:528
#, no-wrap
msgid ""
" --resize /dev/sda2=10G\n"
"\n"
msgstr ""
" --resize /dev/sda2=10G\n"
"\n"

#. type: verbatim
#: ../resize/virt-resize.pod:530
#, no-wrap
msgid ""
" --resize /dev/sda4=90%\n"
"\n"
msgstr ""
" --resize /dev/sda4=90%\n"
"\n"

#. type: verbatim
#: ../resize/virt-resize.pod:532
#, no-wrap
msgid ""
" --resize /dev/sda2=+1G\n"
"\n"
msgstr ""
" --resize /dev/sda2=+1G\n"
"\n"

#. type: verbatim
#: ../resize/virt-resize.pod:534
#, no-wrap
msgid ""
" --resize /dev/sda2=-200M\n"
"\n"
msgstr ""
" --resize /dev/sda2=-200M\n"
"\n"

#. type: verbatim
#: ../resize/virt-resize.pod:536
#, no-wrap
msgid ""
" --resize /dev/sda1=+128K\n"
"\n"
msgstr ""
" --resize /dev/sda1=+128K\n"
"\n"

#. type: verbatim
#: ../resize/virt-resize.pod:538
#, no-wrap
msgid ""
" --resize /dev/sda1=+10%\n"
"\n"
msgstr ""
" --resize /dev/sda1=+10%\n"
"\n"

#. type: verbatim
#: ../resize/virt-resize.pod:540
#, no-wrap
msgid ""
" --resize /dev/sda1=-10%\n"
"\n"
msgstr ""
" --resize /dev/sda1=-10%\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:542
msgid ""
"You can increase the size of any partition.  Virt-resize will expand the "
"direct content of the partition if it knows how (see I<--expand> above)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:546
msgid ""
"You can only I<decrease> the size of partitions that contain filesystems or "
"PVs which have already been shrunk.  Virt-resize will check this has been "
"done before proceeding, or else will print an error (see also I<--resize-"
"force>)."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:553
msgid "B<--resize-force part=size>"
msgstr "B<--resize-force розділ=розмір>"

#. type: textblock
#: ../resize/virt-resize.pod:555
msgid ""
"This is the same as I<--resize> except that it will let you decrease the "
"size of any partition.  Generally this means you will lose any data which "
"was at the end of the partition you shrink, but you may not care about that "
"(eg. if shrinking an unused partition, or if you can easily recreate it such "
"as a swap partition)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:561
msgid "See also the I<--ignore> option."
msgstr "Див. також опис параметра I<--ignore>."

#. type: =item
#: ../resize/virt-resize.pod:563
msgid "B<--shrink part>"
msgstr "B<--shrink розділ>"

#. type: textblock
#: ../resize/virt-resize.pod:565
msgid ""
"Shrink the named partition until the overall disk image fits in the "
"destination.  The named partition B<must> contain a filesystem or PV which "
"has already been shrunk using another tool (eg. L<guestfish(1)> or other "
"online tools).  Virt-resize will check this and give an error if it has not "
"been done."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:571
msgid ""
"The amount by which the overall disk must be shrunk (after carrying out all "
"other operations requested by the user) is called the \"deficit\".  For "
"example, a straight copy (assume no other operations)  from a 5GB disk image "
"to a 4GB disk image results in a 1GB deficit.  In this case, virt-resize "
"would give an error unless the user specified a partition to shrink and that "
"partition had more than a gigabyte of free space."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:601
msgid ""
"The I<--machine-readable> option can be used to make the output more machine "
"friendly, which is useful when calling virt-resize from other programs, GUIs "
"etc."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:605 ../sparsify/virt-sparsify.pod:346
#: ../v2v/virt-v2v.pod:1192
msgid "There are two ways to use this option."
msgstr "Існує два способи використання цього параметра."

#. type: textblock
#: ../resize/virt-resize.pod:607
msgid ""
"Firstly use the option on its own to query the capabilities of the virt-"
"resize binary.  Typical output looks like this:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:610
#, no-wrap
msgid ""
" $ virt-resize --machine-readable\n"
" virt-resize\n"
" ntfsresize-force\n"
" 32bitok\n"
" ntfs\n"
" btrfs\n"
"\n"
msgstr ""
" $ virt-resize --machine-readable\n"
" virt-resize\n"
" ntfsresize-force\n"
" 32bitok\n"
" ntfs\n"
" btrfs\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:620 ../sparsify/virt-sparsify.pod:359
#: ../v2v/virt-v2v.pod:1214
msgid ""
"Secondly use the option in conjunction with other options to make the "
"regular program output more machine friendly."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:623 ../sparsify/virt-sparsify.pod:362
#: ../v2v/virt-v2v.pod:1217
msgid "At the moment this means:"
msgstr "У поточній версії це означає таке:"

#. type: textblock
#: ../resize/virt-resize.pod:629 ../sparsify/virt-sparsify.pod:368
#: ../v2v/virt-v2v.pod:1223
msgid ""
"Progress bar messages can be parsed from stdout by looking for this regular "
"expression:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:632 ../sparsify/virt-sparsify.pod:371
#: ../v2v/virt-v2v.pod:1226
#, no-wrap
msgid ""
" ^[0-9]+/[0-9]+$\n"
"\n"
msgstr ""
" ^[0-9]+/[0-9]+$\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:636 ../sparsify/virt-sparsify.pod:375
#: ../v2v/virt-v2v.pod:1230
msgid ""
"The calling program should treat messages sent to stdout (except for "
"progress bar messages) as status messages.  They can be logged and/or "
"displayed to the user."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:642
msgid ""
"The calling program should treat messages sent to stderr as error messages.  "
"In addition, virt-resize exits with a non-zero status code if there was a "
"fatal error."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:648
msgid ""
"Versions of the program prior to 1.13.9 did not support the I<--machine-"
"readable> option and will return an error."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:653
msgid "\"Partition 1 does not end on cylinder boundary.\""
msgstr "«Розділ 1 не закінчується на межі циліндра.»"

#. type: textblock
#: ../resize/virt-resize.pod:655
msgid ""
"Virt-resize aligns partitions to multiples of 128 sectors (see the I<--"
"alignment> parameter).  Usually this means the partitions will not be "
"aligned to the ancient CHS geometry.  However CHS geometry is meaningless "
"for disks manufactured since the early 1990s, and doubly so for virtual hard "
"drives.  Alignment of partitions to cylinders is not required by any modern "
"operating system."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:662
msgid "GUEST BOOT STUCK AT \"GRUB\""
msgstr "ЗАВАНТАЖЕННЯ ГОСТЬОВОЇ СИСТЕМИ ЗУПИНЯЄТЬСЯ НА «GRUB»"

#. type: textblock
#: ../resize/virt-resize.pod:664
msgid ""
"If a Linux guest does not boot after resizing, and the boot is stuck after "
"printing C<GRUB> on the console, try reinstalling grub."
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:667
#, no-wrap
msgid ""
" guestfish -i -a newdisk\n"
" ><fs> cat /boot/grub/device.map\n"
" # check the contents of this file are sensible or\n"
" # edit the file if necessary\n"
" ><fs> grub-install / /dev/vda\n"
" ><fs> exit\n"
"\n"
msgstr ""
" guestfish -i -a newdisk\n"
" ><fs> cat /boot/grub/device.map\n"
" # check the contents of this file are sensible or\n"
" # edit the file if necessary\n"
" ><fs> grub-install / /dev/vda\n"
" ><fs> exit\n"
"\n"

#. type: textblock
#: ../resize/virt-resize.pod:674
msgid ""
"For more flexible guest reconfiguration, including if you need to specify "
"other parameters to grub-install, use L<virt-rescue(1)>."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:677
msgid "RESIZING WINDOWS BOOT PARTITIONS"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:679
msgid ""
"In Windows Vista and later versions, Microsoft switched to using a separate "
"boot partition.  In these VMs, typically C</dev/sda1> is the boot partition "
"and C</dev/sda2> is the main (C:) drive.  Resizing the first (boot) "
"partition causes the bootloader to fail with C<0xC0000225> error.  Resizing "
"the second partition (ie. C: drive)  should work."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:686
msgid "WINDOWS CHKDSK"
msgstr "WINDOWS CHKDSK"

#. type: textblock
#: ../resize/virt-resize.pod:688
msgid ""
"Windows disks which use NTFS must be consistent before virt-resize can be "
"used.  If the ntfsresize operation fails, try booting the original VM and "
"running C<chkdsk /f> on all NTFS partitions, then shut down the VM cleanly.  "
"For further information see: L<https://bugzilla.redhat.com/show_bug.cgi?"
"id=975753>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:694
msgid ""
"I<After resize> Windows may initiate a lengthy \"chkdsk\" on first boot if "
"NTFS partitions have been expanded.  This is just a safety check and (unless "
"it find errors) is nothing to worry about."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:698
msgid "WINDOWS UNMOUNTABLE_BOOT_VOLUME BSOD"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:700
msgid ""
"After sysprepping a Windows guest and then resizing it with virt-resize, you "
"may see the guest fail to boot with an C<UNMOUNTABLE_BOOT_VOLUME> BSOD.  "
"This error is caused by having C<ExtendOemPartition=1> in the sysprep.inf "
"file.  Removing this line before sysprepping should fix the problem."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:708
msgid ""
"Windows 8 \"fast startup\" can prevent virt-resize from resizing NTFS "
"partitions.  See L<guestfs(3)/WINDOWS HIBERNATION AND WINDOWS 8 FAST "
"STARTUP>."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:712
msgid "SPARSE COPYING"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:714
msgid ""
"You should create a fresh, zeroed target disk image for virt-resize to use."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:717
msgid ""
"Virt-resize by default performs sparse copying.  This means that it does not "
"copy blocks from the source disk which are all zeroes.  This improves speed "
"and efficiency, but will produce incorrect results if the target disk image "
"contains unzeroed data."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:722
msgid ""
"The main time this can be a problem is if the target is a host partition "
"(eg. S<C<virt-resize source.img /dev/sda4>>) because the usual partitioning "
"tools tend to leave whatever data happened to be on the disk before."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:727
msgid ""
"If you have to reuse a target which contains data already, you should use "
"the I<--no-sparse> option.  Note this can be much slower."
msgstr ""

#. type: =head1
#: ../resize/virt-resize.pod:730
msgid "ALTERNATIVE TOOLS"
msgstr "АЛЬТЕРНАТИВНІ ІНСТРУМЕНТИ"

#. type: textblock
#: ../resize/virt-resize.pod:732
msgid ""
"There are several proprietary tools for resizing partitions.  We won't "
"mention any here."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:735
msgid ""
"L<parted(8)> and its graphical shell gparted can do some types of resizing "
"operations on disk images.  They can resize and move partitions, but I don't "
"think they can do anything with the contents, and they certainly don't "
"understand LVM."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:740
msgid ""
"L<guestfish(1)> can do everything that virt-resize can do and a lot more, "
"but at a much lower level.  You will probably end up hand-calculating sector "
"offsets, which is something that virt-resize was designed to avoid.  If you "
"want to see the guestfish-equivalent commands that virt-resize runs, use the "
"I<--debug> flag."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:746
msgid ""
"L<dracut(8)> includes a module called C<dracut-modules-growroot> which can "
"be used to grow the root partition when the guest first boots up.  There is "
"documentation for this module in an associated README file."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:757
msgid ""
"L<virt-filesystems(1)>, L<virt-df(1)>, L<guestfs(3)>, L<guestfish(1)>, "
"L<lvm(8)>, L<pvresize(8)>, L<lvresize(8)>, L<resize2fs(8)>, "
"L<ntfsresize(8)>, L<btrfs(8)>, L<xfs_growfs(8)>, L<virsh(1)>, L<parted(8)>, "
"L<truncate(1)>, L<fallocate(1)>, L<grub(8)>, L<grub-install(8)>, L<virt-"
"rescue(1)>, L<virt-sparsify(1)>, L<virt-alignment-scan(1)>, L<http://"
"libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../ruby/examples/guestfs-ruby.pod:3
msgid "guestfs-ruby - How to use libguestfs from Ruby"
msgstr ""

#. type: verbatim
#: ../ruby/examples/guestfs-ruby.pod:7
#, no-wrap
msgid ""
" require 'guestfs'\n"
" g = Guestfs::Guestfs.new()\n"
" g.add_drive_opts(\"disk.img\",\n"
"                  :readonly => 1, :format => \"raw\")\n"
" g.launch()\n"
"\n"
msgstr ""
" require 'guestfs'\n"
" g = Guestfs::Guestfs.new()\n"
" g.add_drive_opts(\"disk.img\",\n"
"                  :readonly => 1, :format => \"raw\")\n"
" g.launch()\n"
"\n"

#. type: textblock
#: ../ruby/examples/guestfs-ruby.pod:15
msgid ""
"This manual page documents how to call libguestfs from the Ruby programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>."
msgstr ""

#. type: textblock
#: ../ruby/examples/guestfs-ruby.pod:22
msgid ""
"Errors from libguestfs functions are mapped into the C<Error> exception.  "
"This has a single parameter which is the error message (a string)."
msgstr ""

#. type: textblock
#: ../ruby/examples/guestfs-ruby.pod:36
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, "
"L<guestfs-perl(3)>, L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<http://"
"libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-"
"golang(3)>, L<guestfs-java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, "
"L<guestfs-perl(3)>, L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<http://"
"libguestfs.org/>."

#. type: textblock
#: ../sparsify/virt-sparsify.pod:3
msgid "virt-sparsify - Make a virtual machine disk sparse"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:7
#, no-wrap
msgid ""
" virt-sparsify [--options] indisk outdisk\n"
"\n"
msgstr ""
" virt-sparsify [--параметри] вхідний_диск вихідний_диск\n"
"\n"

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:9
#, no-wrap
msgid ""
" virt-sparsify [--options] --in-place disk\n"
"\n"
msgstr ""
" virt-sparsify [--параметри] --in-place диск\n"
"\n"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:13
msgid ""
"Virt-sparsify is a tool which can make a virtual machine disk (or any disk "
"image) sparse a.k.a. thin-provisioned.  This means that free space within "
"the disk image can be converted back to free space on the host."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:18
msgid ""
"Virt-sparsify can locate and sparsify free space in most filesystems (eg. "
"ext2/3/4, btrfs, NTFS, etc.), and also in LVM physical volumes."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:21
msgid ""
"Virt-sparsify can also convert between some disk formats, for example "
"converting a raw disk image to a thin-provisioned qcow2 image."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:24
msgid ""
"Virt-sparsify can operate on any disk image, not just ones from virtual "
"machines.  However if a virtual machine has multiple disks and uses volume "
"management, then virt-sparsify will work but not be very effective (L<http://"
"bugzilla.redhat.com/887826>)."
msgstr ""

#. type: =head2
#: ../sparsify/virt-sparsify.pod:29
msgid "IMPORTANT NOTE ABOUT SPARSE OUTPUT IMAGES"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:31
msgid ""
"If the input is raw, then the default output is raw sparse.  B<You must "
"check the output size using a tool that understands sparseness> such as C<du "
"-sh>.  It can make a huge difference:"
msgstr ""

#. type: =head2
#: ../sparsify/virt-sparsify.pod:42
msgid "IMPORTANT LIMITATIONS"
msgstr "ВАЖЛИВІ ОБМЕЖЕННЯ"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:48
msgid "The virtual machine I<must be shut down> before using this tool."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:52
msgid ""
"Virt-sparsify may require up to 2x the virtual size of the source disk image "
"(1 temporary copy + 1 destination image).  This is in the worst case and "
"usually much less space is required."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:56 ../sparsify/virt-sparsify.pod:421
msgid ""
"If you are using the I<--in-place> option, then large amounts of temporary "
"space are B<not> required."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:61
msgid ""
"Virt-sparsify cannot resize disk images.  To do that, use L<virt-resize(1)>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:66
msgid ""
"Virt-sparsify cannot handle encrypted disks.  Libguestfs supports encrypted "
"disks, but encrypted disks themselves cannot be sparsified."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:71
msgid ""
"Virt-sparsify cannot yet sparsify the space between partitions.  Note that "
"this space is often used for critical items like bootloaders so it's not "
"really unused."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:77
msgid ""
"In copy mode, qcow2 internal snapshots are not copied over to the "
"destination image."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:82
msgid ""
"You may also want to read the manual pages for the associated tools L<virt-"
"filesystems(1)> and L<virt-df(1)> before starting."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:87
msgid "Typical usage is:"
msgstr "Типовий приклад використання:"

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:89
#, no-wrap
msgid ""
" virt-sparsify indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:91
msgid ""
"which copies C<indisk> to C<outdisk>, making the output sparse.  C<outdisk> "
"is created, or overwritten if it already exists.  The format of the input "
"disk is detected (eg. qcow2) and the same format is used for the output disk."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:96
msgid "To convert between formats, use the I<--convert> option:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:98
#, no-wrap
msgid ""
" virt-sparsify disk.raw --convert qcow2 disk.qcow2\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:100
msgid ""
"Virt-sparsify tries to zero and sparsify free space on every filesystem it "
"can find within the source disk image.  You can get it to ignore (don't zero "
"free space on) certain filesystems by doing:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:104
#, no-wrap
msgid ""
" virt-sparsify --ignore /dev/sda1 indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:106
msgid ""
"See L<virt-filesystems(1)> to get a list of filesystems within a disk image."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:109
msgid ""
"Since virt-sparsify E<ge> 1.26, you can now sparsify a disk image in place "
"by doing:"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:122
msgid "B<--check-tmpdir ignore>"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:124
msgid "B<--check-tmpdir continue>"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:126
msgid "B<--check-tmpdir warn>"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:128
msgid "B<--check-tmpdir fail>"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:130
msgid ""
"Check if L</TMPDIR> or I<--tmp> directory has enough space to complete the "
"operation.  This is just an estimate."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:133
msgid "If the check indicates a problem, then you can either:"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:139
msgid "B<ignore> it,"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:143
msgid "print a warning and B<continue>,"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:147
msgid ""
"B<warn> and wait for the user to press the Return key (this is the default), "
"or:"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:152
msgid "B<fail> and exit."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:156 ../sparsify/virt-sparsify.pod:163
#: ../sparsify/virt-sparsify.pod:184 ../sparsify/virt-sparsify.pod:241
#: ../sparsify/virt-sparsify.pod:263
msgid "You cannot use this option and I<--in-place> together."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:158
msgid "B<--compress>"
msgstr "B<--compress>"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:160
msgid ""
"Compress the output file.  This I<only> works if the output format is "
"C<qcow2>."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:165
msgid "B<--convert> raw"
msgstr "B<--convert> raw"

#. type: =item
#: ../sparsify/virt-sparsify.pod:167
msgid "B<--convert> qcow2"
msgstr "B<--convert> qcow2"

#. type: =item
#: ../sparsify/virt-sparsify.pod:169
msgid "B<--convert> [other formats]"
msgstr "B<--convert> [інші формати]"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:171
msgid ""
"Use C<output-format> as the format for the destination image.  If this is "
"not specified, then the input format is used."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:174
msgid ""
"Supported and known-working output formats are: C<raw>, C<qcow2>, C<vdi>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:176
msgid ""
"You can also use any format supported by the L<qemu-img(1)> program, eg. "
"C<vmdk>, but support for other formats is reliant on qemu."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:179
msgid ""
"Specifying the I<--convert> option is usually a good idea, because then virt-"
"sparsify doesn't need to try to guess the input format."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:182
msgid "For fine-tuning the output format, see: I<--compress>, I<-o>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:188
msgid ""
"Debug garbage collection and memory allocation.  This is only useful when "
"debugging memory problems in virt-sparsify or the OCaml libguestfs bindings."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:202
msgid "B<--ignore> filesystem"
msgstr "B<--ignore> файлова_система"

#. type: =item
#: ../sparsify/virt-sparsify.pod:204
msgid "B<--ignore> volgroup"
msgstr "B<--ignore> група_томів"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:206
msgid "Ignore the named filesystem."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:208
msgid ""
"When not using I<--in-place>: Free space on the filesystem will not be "
"zeroed, but existing blocks of zeroes will still be sparsified."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:211
msgid "When using I<--in-place>, the filesystem is ignored completely."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:213
msgid ""
"In the second form, this ignores the named volume group.  Use the volume "
"group name without the C</dev/> prefix, eg. I<--ignore vg_foo>"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:218
msgid "B<--in-place>"
msgstr "B<--in-place>"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:220
msgid ""
"Do in-place sparsification instead of copying sparsification.  See L</IN-"
"PLACE SPARSIFICATION> below."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:229
msgid "B<-o> option[,option,...]"
msgstr "B<-o> параметр[,параметр,...]"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:231
msgid ""
"Pass I<-o> option(s) to the L<qemu-img(1)> command to fine-tune the output "
"format.  Options available depend on the output format (see I<--convert>) "
"and the installed version of the qemu-img program."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:235
msgid ""
"You should use I<-o> at most once.  To pass multiple options, separate them "
"with commas, eg:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:238
#, no-wrap
msgid ""
" virt-sparsify --convert qcow2 \\\n"
"   -o cluster_size=512,preallocation=metadata ...\n"
"\n"
msgstr ""
" virt-sparsify --convert qcow2 \\\n"
"   -o cluster_size=512,preallocation=metadata ...\n"
"\n"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:247 ../v2v/virt-v2v.pod:441
msgid "This disables progress bars and other unnecessary output."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:249
msgid "B<--tmp> block_device"
msgstr "B<--tmp> блоковий_пристрій"

#. type: =item
#: ../sparsify/virt-sparsify.pod:251
msgid "B<--tmp> dir"
msgstr "B<--tmp> каталог"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:253
msgid ""
"In copying mode only, use the named device or directory as the location of "
"the temporary overlay (see also L</TMPDIR> below)."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:256
msgid ""
"If the parameter given is a block device, then the block device is written "
"to directly.  B<Note this erases the existing contents of the block device>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:260
msgid ""
"If the parameter is a directory, then this is the same as setting the L</"
"TMPDIR> environment variable."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:265
msgid "B<--tmp> prebuilt:file"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:267
msgid ""
"In copying mode only, the specialized option I<--tmp prebuilt:file> (where "
"C<prebuilt:> is a literal string) causes virt-sparsify to use the qcow2 "
"C<file> as temporary space."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:275
msgid ""
"The file B<must> be freshly formatted as qcow2, with indisk as the backing "
"file."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:280
msgid ""
"If you rerun virt-sparsify, you B<must> recreate the file before each run."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:285
msgid "Virt-sparsify does not delete the file."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:289
msgid ""
"This option is used by oVirt which requires a specially formatted temporary "
"file."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:308
msgid "B<--zero> partition"
msgstr "B<--zero> розділ"

#. type: =item
#: ../sparsify/virt-sparsify.pod:310
msgid "B<--zero> logvol"
msgstr "B<--zero> логічний_том"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:312
msgid ""
"Zero the contents of the named partition or logical volume in the guest.  "
"All data on the device is lost, but sparsification is excellent! You can "
"give this option multiple times."
msgstr ""

#. type: =head1
#: ../sparsify/virt-sparsify.pod:318
msgid "IN-PLACE SPARSIFICATION"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:320
msgid ""
"Since virt-sparsify E<ge> 1.26, the tool is able to do in-place "
"sparsification (instead of copying from an input disk to an output disk).  "
"This is more efficient.  However it requires special support in libguestfs, "
"the kernel and qemu, and it is not able to recover quite as much space as "
"copying sparsification.  So in-place sparsification is considered to be "
"experimental at this time."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:327
msgid "To use this mode, specify a disk image which will be modified in place:"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:332
msgid ""
"Some options are not compatible with this mode: I<--convert>, I<--compress> "
"and I<-o> because they require wholesale disk format changes; I<--check-"
"tmpdir> because large amounts of temporary space are not required."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:337
msgid ""
"In-place sparsification works using discard (a.k.a trim or unmap)  support."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:342
msgid ""
"The I<--machine-readable> option can be used to make the output more machine "
"friendly, which is useful when calling virt-sparsify from other programs, "
"GUIs etc."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:348
msgid ""
"Firstly use the option on its own to query the capabilities of the virt-"
"sparsify binary.  Typical output looks like this:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:351
#, no-wrap
msgid ""
" $ virt-sparsify --machine-readable\n"
" virt-sparsify\n"
" ntfs\n"
" btrfs\n"
"\n"
msgstr ""
" $ virt-sparsify --machine-readable\n"
" virt-sparsify\n"
" ntfs\n"
" btrfs\n"
"\n"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:381
msgid ""
"The calling program should treat messages sent to stderr as error messages.  "
"In addition, virt-sparsify exits with a non-zero status code if there was a "
"fatal error."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:387
msgid ""
"All versions of virt-sparsify have supported the I<--machine-readable> "
"option."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:392
msgid ""
"Windows 8 \"fast startup\" can prevent virt-sparsify from working.  See "
"L<guestfs(3)/WINDOWS HIBERNATION AND WINDOWS 8 FAST STARTUP>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:401 ../v2v/virt-v2v.pod:1265
msgid ""
"Location of the temporary directory used for the potentially large temporary "
"overlay file."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:404
msgid ""
"In virt-sparsify E<ge> 1.28, you can override this environment variable "
"using the I<--tmp> option."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:407
msgid ""
"You should ensure there is enough free space in the worst case for a full "
"copy of the source disk (I<virtual> size), or else set C<$TMPDIR> to point "
"to another directory that has enough space."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:411
msgid "This defaults to C</tmp>."
msgstr "Типовим значенням є C</tmp>."

#. type: textblock
#: ../sparsify/virt-sparsify.pod:413
msgid ""
"Note that if C<$TMPDIR> is a tmpfs (eg. if C</tmp> is on tmpfs, or if you "
"use C<TMPDIR=/dev/shm>), tmpfs defaults to a maximum size of I<half> of "
"physical RAM.  If virt-sparsify exceeds this, it will hang.  The solution is "
"either to use a real disk, or to increase the maximum size of the tmpfs "
"mountpoint, eg:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:419
#, no-wrap
msgid ""
" mount -o remount,size=10G /tmp\n"
"\n"
msgstr ""
" mount -o remount,size=10G /tmp\n"
"\n"

#. type: textblock
#: ../sparsify/virt-sparsify.pod:430
msgid ""
"This program returns 0 if the operation completed without errors.  (This "
"doesn't necessarily mean that space could be freed up.)"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:433
msgid "A non-zero exit code indicates an error."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:435
msgid ""
"If the exit code is C<3> and the I<--in-place> option was used, that "
"indicates that discard support is not available in libguestfs, so copying "
"mode must be used instead."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:441
msgid ""
"L<virt-df(1)>, L<virt-filesystems(1)>, L<virt-resize(1)>, L<virt-rescue(1)>, "
"L<guestfs(3)>, L<guestfish(1)>, L<truncate(1)>, L<fallocate(1)>, L<qemu-"
"img(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:26
msgid "guestfs_acl_delete_def_file"
msgstr "guestfs_acl_delete_def_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:28
#, no-wrap
msgid ""
" int\n"
" guestfs_acl_delete_def_file (guestfs_h *g,\n"
"                              const char *dir);\n"
"\n"
msgstr ""
" int\n"
" guestfs_acl_delete_def_file (guestfs_h *g,\n"
"                              const char *dir);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:35 ../src/guestfs-actions.pod:114
#: ../src/guestfs-actions.pod:136 ../src/guestfs-actions.pod:563
#: ../src/guestfs-actions.pod:600 ../src/guestfs-actions.pod:621
#: ../src/guestfs-actions.pod:648 ../src/guestfs-actions.pod:691
#: ../src/guestfs-actions.pod:704 ../src/guestfs-actions.pod:718
#: ../src/guestfs-actions.pod:838 ../src/guestfs-actions.pod:858
#: ../src/guestfs-actions.pod:887 ../src/guestfs-actions.pod:932
#: ../src/guestfs-actions.pod:960 ../src/guestfs-actions.pod:978
#: ../src/guestfs-actions.pod:1073 ../src/guestfs-actions.pod:1107
#: ../src/guestfs-actions.pod:1121 ../src/guestfs-actions.pod:1140
#: ../src/guestfs-actions.pod:1213 ../src/guestfs-actions.pod:1315
#: ../src/guestfs-actions.pod:1339 ../src/guestfs-actions.pod:1353
#: ../src/guestfs-actions.pod:1367 ../src/guestfs-actions.pod:1381
#: ../src/guestfs-actions.pod:1395 ../src/guestfs-actions.pod:1408
#: ../src/guestfs-actions.pod:1445 ../src/guestfs-actions.pod:1479
#: ../src/guestfs-actions.pod:1501 ../src/guestfs-actions.pod:1537
#: ../src/guestfs-actions.pod:1550 ../src/guestfs-actions.pod:1562
#: ../src/guestfs-actions.pod:1592 ../src/guestfs-actions.pod:1607
#: ../src/guestfs-actions.pod:1673 ../src/guestfs-actions.pod:1850
#: ../src/guestfs-actions.pod:1870 ../src/guestfs-actions.pod:1888
#: ../src/guestfs-actions.pod:1997 ../src/guestfs-actions.pod:2056
#: ../src/guestfs-actions.pod:2102 ../src/guestfs-actions.pod:2156
#: ../src/guestfs-actions.pod:2227 ../src/guestfs-actions.pod:2281
#: ../src/guestfs-actions.pod:2335 ../src/guestfs-actions.pod:2394
#: ../src/guestfs-actions.pod:2448 ../src/guestfs-actions.pod:2467
#: ../src/guestfs-actions.pod:2481 ../src/guestfs-actions.pod:2500
#: ../src/guestfs-actions.pod:2540 ../src/guestfs-actions.pod:2592
#: ../src/guestfs-actions.pod:2713 ../src/guestfs-actions.pod:2828
#: ../src/guestfs-actions.pod:2859 ../src/guestfs-actions.pod:2884
#: ../src/guestfs-actions.pod:2950 ../src/guestfs-actions.pod:2993
#: ../src/guestfs-actions.pod:3125 ../src/guestfs-actions.pod:3151
#: ../src/guestfs-actions.pod:3178 ../src/guestfs-actions.pod:3456
#: ../src/guestfs-actions.pod:3477 ../src/guestfs-actions.pod:3494
#: ../src/guestfs-actions.pod:3571 ../src/guestfs-actions.pod:3682
#: ../src/guestfs-actions.pod:4557 ../src/guestfs-actions.pod:4629
#: ../src/guestfs-actions.pod:4648 ../src/guestfs-actions.pod:4693
#: ../src/guestfs-actions.pod:4774 ../src/guestfs-actions.pod:4816
#: ../src/guestfs-actions.pod:5005 ../src/guestfs-actions.pod:5064
#: ../src/guestfs-actions.pod:5099 ../src/guestfs-actions.pod:6653
#: ../src/guestfs-actions.pod:6744 ../src/guestfs-actions.pod:6761
#: ../src/guestfs-actions.pod:6799 ../src/guestfs-actions.pod:6816
#: ../src/guestfs-actions.pod:6841 ../src/guestfs-actions.pod:6862
#: ../src/guestfs-actions.pod:6922 ../src/guestfs-actions.pod:7285
#: ../src/guestfs-actions.pod:7299 ../src/guestfs-actions.pod:7312
#: ../src/guestfs-actions.pod:7326 ../src/guestfs-actions.pod:7341
#: ../src/guestfs-actions.pod:7376 ../src/guestfs-actions.pod:7393
#: ../src/guestfs-actions.pod:7523 ../src/guestfs-actions.pod:7543
#: ../src/guestfs-actions.pod:7560 ../src/guestfs-actions.pod:7580
#: ../src/guestfs-actions.pod:7600 ../src/guestfs-actions.pod:7635
#: ../src/guestfs-actions.pod:7654 ../src/guestfs-actions.pod:7673
#: ../src/guestfs-actions.pod:7690 ../src/guestfs-actions.pod:7725
#: ../src/guestfs-actions.pod:7737 ../src/guestfs-actions.pod:7770
#: ../src/guestfs-actions.pod:7786 ../src/guestfs-actions.pod:7799
#: ../src/guestfs-actions.pod:7814 ../src/guestfs-actions.pod:7831
#: ../src/guestfs-actions.pod:8004 ../src/guestfs-actions.pod:8140
#: ../src/guestfs-actions.pod:8152 ../src/guestfs-actions.pod:8172
#: ../src/guestfs-actions.pod:8185 ../src/guestfs-actions.pod:8278
#: ../src/guestfs-actions.pod:8328 ../src/guestfs-actions.pod:8353
#: ../src/guestfs-actions.pod:8378 ../src/guestfs-actions.pod:8401
#: ../src/guestfs-actions.pod:8422 ../src/guestfs-actions.pod:8443
#: ../src/guestfs-actions.pod:8460 ../src/guestfs-actions.pod:8537
#: ../src/guestfs-actions.pod:8588 ../src/guestfs-actions.pod:8621
#: ../src/guestfs-actions.pod:8657 ../src/guestfs-actions.pod:8706
#: ../src/guestfs-actions.pod:8737 ../src/guestfs-actions.pod:8756
#: ../src/guestfs-actions.pod:8775 ../src/guestfs-actions.pod:8812
#: ../src/guestfs-actions.pod:8858 ../src/guestfs-actions.pod:8878
#: ../src/guestfs-actions.pod:8893 ../src/guestfs-actions.pod:8971
#: ../src/guestfs-actions.pod:9004 ../src/guestfs-actions.pod:9030
#: ../src/guestfs-actions.pod:9099 ../src/guestfs-actions.pod:9147
#: ../src/guestfs-actions.pod:9162 ../src/guestfs-actions.pod:9182
#: ../src/guestfs-actions.pod:9196 ../src/guestfs-actions.pod:9213
#: ../src/guestfs-actions.pod:9264 ../src/guestfs-actions.pod:9318
#: ../src/guestfs-actions.pod:9356 ../src/guestfs-actions.pod:9408
#: ../src/guestfs-actions.pod:9490 ../src/guestfs-actions.pod:9533
#: ../src/guestfs-actions.pod:9554 ../src/guestfs-actions.pod:9573
#: ../src/guestfs-actions.pod:9601 ../src/guestfs-actions.pod:9618
#: ../src/guestfs-actions.pod:9636 ../src/guestfs-actions.pod:9807
#: ../src/guestfs-actions.pod:9864 ../src/guestfs-actions.pod:9883
#: ../src/guestfs-actions.pod:9905 ../src/guestfs-actions.pod:9923
#: ../src/guestfs-actions.pod:9975 ../src/guestfs-actions.pod:10039
#: ../src/guestfs-actions.pod:10050 ../src/guestfs-actions.pod:10064
#: ../src/guestfs-actions.pod:10081 ../src/guestfs-actions.pod:10094
#: ../src/guestfs-actions.pod:10108 ../src/guestfs-actions.pod:10400
#: ../src/guestfs-actions.pod:10445 ../src/guestfs-actions.pod:10461
#: ../src/guestfs-actions.pod:10476 ../src/guestfs-actions.pod:10491
#: ../src/guestfs-actions.pod:10512 ../src/guestfs-actions.pod:10528
#: ../src/guestfs-actions.pod:10540 ../src/guestfs-actions.pod:10559
#: ../src/guestfs-actions.pod:10573 ../src/guestfs-actions.pod:10585
#: ../src/guestfs-actions.pod:10599 ../src/guestfs-actions.pod:10642
#: ../src/guestfs-actions.pod:10704 ../src/guestfs-actions.pod:10773
#: ../src/guestfs-actions.pod:10813 ../src/guestfs-actions.pod:10831
#: ../src/guestfs-actions.pod:10850 ../src/guestfs-actions.pod:10869
#: ../src/guestfs-actions.pod:10891 ../src/guestfs-actions.pod:10909
#: ../src/guestfs-actions.pod:10926 ../src/guestfs-actions.pod:10943
#: ../src/guestfs-actions.pod:10970 ../src/guestfs-actions.pod:10990
#: ../src/guestfs-actions.pod:11013 ../src/guestfs-actions.pod:11052
#: ../src/guestfs-actions.pod:11091 ../src/guestfs-actions.pod:11116
#: ../src/guestfs-actions.pod:11142 ../src/guestfs-actions.pod:11171
#: ../src/guestfs-actions.pod:11213 ../src/guestfs-actions.pod:11230
#: ../src/guestfs-actions.pod:11273 ../src/guestfs-actions.pod:11294
#: ../src/guestfs-actions.pod:11313 ../src/guestfs-actions.pod:11330
#: ../src/guestfs-actions.pod:11351 ../src/guestfs-actions.pod:11368
#: ../src/guestfs-actions.pod:11403 ../src/guestfs-actions.pod:11427
#: ../src/guestfs-actions.pod:11446 ../src/guestfs-actions.pod:11462
#: ../src/guestfs-actions.pod:11479 ../src/guestfs-actions.pod:11503
#: ../src/guestfs-actions.pod:11520 ../src/guestfs-actions.pod:11539
#: ../src/guestfs-actions.pod:11554 ../src/guestfs-actions.pod:11573
#: ../src/guestfs-actions.pod:11617 ../src/guestfs-actions.pod:11644
#: ../src/guestfs-actions.pod:11674 ../src/guestfs-actions.pod:11799
#: ../src/guestfs-actions.pod:11811 ../src/guestfs-actions.pod:11955
#: ../src/guestfs-actions.pod:11967 ../src/guestfs-actions.pod:11980
#: ../src/guestfs-actions.pod:11993 ../src/guestfs-actions.pod:12015
#: ../src/guestfs-actions.pod:12028 ../src/guestfs-actions.pod:12041
#: ../src/guestfs-actions.pod:12054 ../src/guestfs-actions.pod:12069
#: ../src/guestfs-actions.pod:12117 ../src/guestfs-actions.pod:12223
#: ../src/guestfs-actions.pod:12308 ../src/guestfs-actions.pod:12353
#: ../src/guestfs-actions.pod:12374 ../src/guestfs-actions.pod:12391
#: ../src/guestfs-actions.pod:12404 ../src/guestfs-actions.pod:12424
#: ../src/guestfs-actions.pod:12524 ../src/guestfs-actions.pod:12589
#: ../src/guestfs-actions.pod:12610 ../src/guestfs-actions.pod:12673
#: ../src/guestfs-actions.pod:12708 ../src/guestfs-actions.pod:12730
#: ../src/guestfs-actions.pod:12768 ../src/guestfs-actions.pod:12802
#: ../src/guestfs-actions.pod:12843 ../src/guestfs-actions.pod:12874
#: ../src/guestfs-actions.pod:13003 ../src/guestfs-actions.pod:13018
#: ../src/guestfs-actions.pod:13030 ../src/guestfs-actions.pod:13041
#: ../src/guestfs-actions.pod:13055 ../src/guestfs-actions.pod:13129
#: ../src/guestfs-actions.pod:13142 ../src/guestfs-actions.pod:13187
#: ../src/guestfs-actions.pod:13227 ../src/guestfs-actions.pod:13285
#: ../src/guestfs-actions.pod:13302 ../src/guestfs-actions.pod:13319
#: ../src/guestfs-actions.pod:13349 ../src/guestfs-actions.pod:13386
#: ../src/guestfs-actions.pod:13439 ../src/guestfs-actions.pod:13618
#: ../src/guestfs-actions.pod:13641 ../src/guestfs-actions.pod:13666
#: ../src/guestfs-actions.pod:13692
msgid "This function returns 0 on success or -1 on error."
msgstr "Ця функція повертає 0 у разі успіху і -1 у разі помилки."

#. type: textblock
#: ../src/guestfs-actions.pod:37 ../src/guestfs-actions.pod:68
#: ../src/guestfs-actions.pod:116 ../src/guestfs-actions.pod:1660
#: ../src/guestfs-actions.pod:1675
msgid "(Added in 1.19.63)"
msgstr "(Додано у 1.19.63)"

#. type: =head2
#: ../src/guestfs-actions.pod:39
msgid "guestfs_acl_get_file"
msgstr "guestfs_acl_get_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:41
#, no-wrap
msgid ""
" char *\n"
" guestfs_acl_get_file (guestfs_h *g,\n"
"                       const char *path,\n"
"                       const char *acltype);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_acl_get_file (guestfs_h *g,\n"
"                       const char *path,\n"
"                       const char *acltype);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:65 ../src/guestfs-actions.pod:774
#: ../src/guestfs-actions.pod:872 ../src/guestfs-actions.pod:1641
#: ../src/guestfs-actions.pod:1657 ../src/guestfs-actions.pod:1734
#: ../src/guestfs-actions.pod:1752 ../src/guestfs-actions.pod:1809
#: ../src/guestfs-actions.pod:1825 ../src/guestfs-actions.pod:1947
#: ../src/guestfs-actions.pod:2625 ../src/guestfs-actions.pod:2642
#: ../src/guestfs-actions.pod:2758 ../src/guestfs-actions.pod:2809
#: ../src/guestfs-actions.pod:3010 ../src/guestfs-actions.pod:3272
#: ../src/guestfs-actions.pod:3392 ../src/guestfs-actions.pod:3587
#: ../src/guestfs-actions.pod:3604 ../src/guestfs-actions.pod:3740
#: ../src/guestfs-actions.pod:3767 ../src/guestfs-actions.pod:3789
#: ../src/guestfs-actions.pod:3819 ../src/guestfs-actions.pod:3949
#: ../src/guestfs-actions.pod:3990 ../src/guestfs-actions.pod:4011
#: ../src/guestfs-actions.pod:4026 ../src/guestfs-actions.pod:4043
#: ../src/guestfs-actions.pod:4060 ../src/guestfs-actions.pod:4077
#: ../src/guestfs-actions.pod:4264 ../src/guestfs-actions.pod:4313
#: ../src/guestfs-actions.pod:4612 ../src/guestfs-actions.pod:4740
#: ../src/guestfs-actions.pod:4865 ../src/guestfs-actions.pod:4900
#: ../src/guestfs-actions.pod:5118 ../src/guestfs-actions.pod:5248
#: ../src/guestfs-actions.pod:5352 ../src/guestfs-actions.pod:5371
#: ../src/guestfs-actions.pod:5586 ../src/guestfs-actions.pod:5614
#: ../src/guestfs-actions.pod:5635 ../src/guestfs-actions.pod:5669
#: ../src/guestfs-actions.pod:5748 ../src/guestfs-actions.pod:5768
#: ../src/guestfs-actions.pod:5788 ../src/guestfs-actions.pod:6892
#: ../src/guestfs-actions.pod:6975 ../src/guestfs-actions.pod:7010
#: ../src/guestfs-actions.pod:7255 ../src/guestfs-actions.pod:7271
#: ../src/guestfs-actions.pod:7709 ../src/guestfs-actions.pod:7876
#: ../src/guestfs-actions.pod:8214 ../src/guestfs-actions.pod:8933
#: ../src/guestfs-actions.pod:9667 ../src/guestfs-actions.pod:9703
#: ../src/guestfs-actions.pod:9722 ../src/guestfs-actions.pod:9942
#: ../src/guestfs-actions.pod:10153 ../src/guestfs-actions.pod:10329
#: ../src/guestfs-actions.pod:10374 ../src/guestfs-actions.pod:11692
#: ../src/guestfs-actions.pod:11708 ../src/guestfs-actions.pod:11732
#: ../src/guestfs-actions.pod:11756 ../src/guestfs-actions.pod:12947
#: ../src/guestfs-actions.pod:12966 ../src/guestfs-actions.pod:12983
#: ../src/guestfs-actions.pod:13199 ../src/guestfs-actions.pod:13770
msgid ""
"This function returns a string, or NULL on error.  I<The caller must free "
"the returned string after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:70
msgid "guestfs_acl_set_file"
msgstr "guestfs_acl_set_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:72
#, no-wrap
msgid ""
" int\n"
" guestfs_acl_set_file (guestfs_h *g,\n"
"                       const char *path,\n"
"                       const char *acltype,\n"
"                       const char *acl);\n"
"\n"
msgstr ""
" int\n"
" guestfs_acl_set_file (guestfs_h *g,\n"
"                       const char *path,\n"
"                       const char *acltype,\n"
"                       const char *acl);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:110
msgid ""
"You should use numeric UIDs and GIDs.  To map usernames and groupnames to "
"the correct numeric ID in the context of the guest, use the Augeas functions "
"(see C<guestfs_aug_init>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:118
msgid "guestfs_add_cdrom"
msgstr "guestfs_add_cdrom"

#. type: verbatim
#: ../src/guestfs-actions.pod:120
#, no-wrap
msgid ""
" int\n"
" guestfs_add_cdrom (guestfs_h *g,\n"
"                    const char *filename);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_cdrom (guestfs_h *g,\n"
"                    const char *filename);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:124
msgid ""
"I<This function is deprecated.> In new code, use the L</"
"guestfs_add_drive_ro> call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:133
msgid ""
"The image is added as read-only drive, so this function is equivalent of "
"C<guestfs_add_drive_ro>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:138 ../src/guestfs-actions.pod:282
#: ../src/guestfs-actions.pod:2104 ../src/guestfs-actions.pod:3754
#: ../src/guestfs-actions.pod:4145 ../src/guestfs-actions.pod:4301
#: ../src/guestfs-actions.pod:6801 ../src/guestfs-actions.pod:6823
#: ../src/guestfs-actions.pod:9006 ../src/guestfs-actions.pod:10911
#: ../src/guestfs-actions.pod:11332 ../src/guestfs-actions.pod:11541
#: ../src/guestfs-actions.pod:12071 ../src/guestfs-actions.pod:12393
#: ../src/guestfs-actions.pod:13229
msgid "(Added in 0.3)"
msgstr "(Додано у 0.3)"

#. type: =head2
#: ../src/guestfs-actions.pod:140
msgid "guestfs_add_domain"
msgstr "guestfs_add_domain"

#. type: verbatim
#: ../src/guestfs-actions.pod:142
#, no-wrap
msgid ""
" int\n"
" guestfs_add_domain (guestfs_h *g,\n"
"                     const char *dom,\n"
"                     ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_domain (guestfs_h *g,\n"
"                     const char *dom,\n"
"                     ...);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:147 ../src/guestfs-actions.pod:292
#: ../src/guestfs-actions.pod:632 ../src/guestfs-actions.pod:1419
#: ../src/guestfs-actions.pod:1490 ../src/guestfs-actions.pod:1984
#: ../src/guestfs-actions.pod:2036 ../src/guestfs-actions.pod:2114
#: ../src/guestfs-actions.pod:2192 ../src/guestfs-actions.pod:2268
#: ../src/guestfs-actions.pod:2322 ../src/guestfs-actions.pod:2376
#: ../src/guestfs-actions.pod:2512 ../src/guestfs-actions.pod:2656
#: ../src/guestfs-actions.pod:2920 ../src/guestfs-actions.pod:3655
#: ../src/guestfs-actions.pod:4417 ../src/guestfs-actions.pod:4801
#: ../src/guestfs-actions.pod:5384 ../src/guestfs-actions.pod:6127
#: ../src/guestfs-actions.pod:6203 ../src/guestfs-actions.pod:6279
#: ../src/guestfs-actions.pod:6342 ../src/guestfs-actions.pod:6404
#: ../src/guestfs-actions.pod:6508 ../src/guestfs-actions.pod:7939
#: ../src/guestfs-actions.pod:8226 ../src/guestfs-actions.pod:8486
#: ../src/guestfs-actions.pod:8599 ../src/guestfs-actions.pod:8799
#: ../src/guestfs-actions.pod:8904 ../src/guestfs-actions.pod:9016
#: ../src/guestfs-actions.pod:9065 ../src/guestfs-actions.pod:9330
#: ../src/guestfs-actions.pod:9391 ../src/guestfs-actions.pod:9454
#: ../src/guestfs-actions.pod:10386 ../src/guestfs-actions.pod:10611
#: ../src/guestfs-actions.pod:10678 ../src/guestfs-actions.pod:10740
#: ../src/guestfs-actions.pod:11025 ../src/guestfs-actions.pod:12080
#: ../src/guestfs-actions.pod:12207 ../src/guestfs-actions.pod:12273
#: ../src/guestfs-actions.pod:12435 ../src/guestfs-actions.pod:12661
#: ../src/guestfs-actions.pod:12718 ../src/guestfs-actions.pod:13363
#: ../src/guestfs-actions.pod:13419 ../src/guestfs-actions.pod:13491
msgid ""
"You may supply a list of optional arguments to this call.  Use zero or more "
"of the following pairs of parameters, and terminate the list with C<-1> on "
"its own.  See L</CALLS WITH OPTIONAL ARGUMENTS>."
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:152
#, no-wrap
msgid ""
" GUESTFS_ADD_DOMAIN_LIBVIRTURI, const char *libvirturi,\n"
" GUESTFS_ADD_DOMAIN_READONLY, int readonly,\n"
" GUESTFS_ADD_DOMAIN_IFACE, const char *iface,\n"
" GUESTFS_ADD_DOMAIN_LIVE, int live,\n"
" GUESTFS_ADD_DOMAIN_ALLOWUUID, int allowuuid,\n"
" GUESTFS_ADD_DOMAIN_READONLYDISK, const char *readonlydisk,\n"
" GUESTFS_ADD_DOMAIN_CACHEMODE, const char *cachemode,\n"
" GUESTFS_ADD_DOMAIN_DISCARD, const char *discard,\n"
" GUESTFS_ADD_DOMAIN_COPYONREAD, int copyonread,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:162
msgid ""
"This function adds the disk(s) attached to the named libvirt domain C<dom>.  "
"It works by connecting to libvirt, requesting the domain and domain XML from "
"libvirt, parsing it for disks, and calling C<guestfs_add_drive_opts> on each "
"one."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:243
msgid ""
"The other optional parameters are passed directly through to "
"C<guestfs_add_drive_opts>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:246 ../src/guestfs-actions.pod:761
#: ../src/guestfs-actions.pod:946 ../src/guestfs-actions.pod:998
#: ../src/guestfs-actions.pod:1233 ../src/guestfs-actions.pod:1264
#: ../src/guestfs-actions.pod:1282 ../src/guestfs-actions.pod:1301
#: ../src/guestfs-actions.pod:1907 ../src/guestfs-actions.pod:2610
#: ../src/guestfs-actions.pod:2791 ../src/guestfs-actions.pod:2904
#: ../src/guestfs-actions.pod:3409 ../src/guestfs-actions.pod:3644
#: ../src/guestfs-actions.pod:3970 ../src/guestfs-actions.pod:4117
#: ../src/guestfs-actions.pod:4168 ../src/guestfs-actions.pod:4239
#: ../src/guestfs-actions.pod:4253 ../src/guestfs-actions.pod:4288
#: ../src/guestfs-actions.pod:4663 ../src/guestfs-actions.pod:4709
#: ../src/guestfs-actions.pod:4726 ../src/guestfs-actions.pod:4755
#: ../src/guestfs-actions.pod:4851 ../src/guestfs-actions.pod:4880
#: ../src/guestfs-actions.pod:4992 ../src/guestfs-actions.pod:5502
#: ../src/guestfs-actions.pod:5520 ../src/guestfs-actions.pod:6696
#: ../src/guestfs-actions.pod:6707 ../src/guestfs-actions.pod:6779
#: ../src/guestfs-actions.pod:7927 ../src/guestfs-actions.pod:9280
#: ../src/guestfs-actions.pod:9303 ../src/guestfs-actions.pod:9686
#: ../src/guestfs-actions.pod:9961 ../src/guestfs-actions.pod:10178
#: ../src/guestfs-actions.pod:10204 ../src/guestfs-actions.pod:12637
#: ../src/guestfs-actions.pod:13240 ../src/guestfs-actions.pod:13253
#: ../src/guestfs-actions.pod:13266 ../src/guestfs-actions.pod:13521
msgid "On error this function returns -1."
msgstr "У разі помилки цією функцією буде повернуто -1."

#. type: textblock
#: ../src/guestfs-actions.pod:248
msgid "(Added in 1.7.4)"
msgstr "(Додано у 1.7.4)"

#. type: =head2
#: ../src/guestfs-actions.pod:250
msgid "guestfs_add_domain_va"
msgstr "guestfs_add_domain_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:252
#, no-wrap
msgid ""
" int\n"
" guestfs_add_domain_va (guestfs_h *g,\n"
"                        const char *dom,\n"
"                        va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_domain_va (guestfs_h *g,\n"
"                        const char *dom,\n"
"                        va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:257
msgid "This is the \"va_list variant\" of L</guestfs_add_domain>."
msgstr "Це «варіант з va_list» L</guestfs_add_domain>."

#. type: textblock
#: ../src/guestfs-actions.pod:259 ../src/guestfs-actions.pod:270
#: ../src/guestfs-actions.pod:576 ../src/guestfs-actions.pod:587
#: ../src/guestfs-actions.pod:661 ../src/guestfs-actions.pod:672
#: ../src/guestfs-actions.pod:1458 ../src/guestfs-actions.pod:1469
#: ../src/guestfs-actions.pod:1514 ../src/guestfs-actions.pod:1525
#: ../src/guestfs-actions.pod:2012 ../src/guestfs-actions.pod:2025
#: ../src/guestfs-actions.pod:2071 ../src/guestfs-actions.pod:2084
#: ../src/guestfs-actions.pod:2170 ../src/guestfs-actions.pod:2182
#: ../src/guestfs-actions.pod:2246 ../src/guestfs-actions.pod:2258
#: ../src/guestfs-actions.pod:2300 ../src/guestfs-actions.pod:2312
#: ../src/guestfs-actions.pod:2354 ../src/guestfs-actions.pod:2366
#: ../src/guestfs-actions.pod:2413 ../src/guestfs-actions.pod:2425
#: ../src/guestfs-actions.pod:2554 ../src/guestfs-actions.pod:2566
#: ../src/guestfs-actions.pod:2728 ../src/guestfs-actions.pod:2741
#: ../src/guestfs-actions.pod:2963 ../src/guestfs-actions.pod:2974
#: ../src/guestfs-actions.pod:3695 ../src/guestfs-actions.pod:3706
#: ../src/guestfs-actions.pod:4474 ../src/guestfs-actions.pod:4486
#: ../src/guestfs-actions.pod:4829 ../src/guestfs-actions.pod:4840
#: ../src/guestfs-actions.pod:5468 ../src/guestfs-actions.pod:5480
#: ../src/guestfs-actions.pod:6156 ../src/guestfs-actions.pod:6167
#: ../src/guestfs-actions.pod:6232 ../src/guestfs-actions.pod:6243
#: ../src/guestfs-actions.pod:6309 ../src/guestfs-actions.pod:6320
#: ../src/guestfs-actions.pod:6371 ../src/guestfs-actions.pod:6382
#: ../src/guestfs-actions.pod:6434 ../src/guestfs-actions.pod:6445
#: ../src/guestfs-actions.pod:6537 ../src/guestfs-actions.pod:6548
#: ../src/guestfs-actions.pod:8018 ../src/guestfs-actions.pod:8030
#: ../src/guestfs-actions.pod:8291 ../src/guestfs-actions.pod:8302
#: ../src/guestfs-actions.pod:8551 ../src/guestfs-actions.pod:8563
#: ../src/guestfs-actions.pod:8634 ../src/guestfs-actions.pod:8645
#: ../src/guestfs-actions.pod:8825 ../src/guestfs-actions.pod:8836
#: ../src/guestfs-actions.pod:8947 ../src/guestfs-actions.pod:8958
#: ../src/guestfs-actions.pod:9044 ../src/guestfs-actions.pod:9056
#: ../src/guestfs-actions.pod:9112 ../src/guestfs-actions.pod:9123
#: ../src/guestfs-actions.pod:9370 ../src/guestfs-actions.pod:9382
#: ../src/guestfs-actions.pod:9421 ../src/guestfs-actions.pod:9432
#: ../src/guestfs-actions.pod:9503 ../src/guestfs-actions.pod:9514
#: ../src/guestfs-actions.pod:10413 ../src/guestfs-actions.pod:10424
#: ../src/guestfs-actions.pod:10656 ../src/guestfs-actions.pod:10668
#: ../src/guestfs-actions.pod:10718 ../src/guestfs-actions.pod:10730
#: ../src/guestfs-actions.pod:10787 ../src/guestfs-actions.pod:10799
#: ../src/guestfs-actions.pod:11066 ../src/guestfs-actions.pod:11078
#: ../src/guestfs-actions.pod:12130 ../src/guestfs-actions.pod:12141
#: ../src/guestfs-actions.pod:12237 ../src/guestfs-actions.pod:12249
#: ../src/guestfs-actions.pod:12322 ../src/guestfs-actions.pod:12334
#: ../src/guestfs-actions.pod:12537 ../src/guestfs-actions.pod:12548
#: ../src/guestfs-actions.pod:12686 ../src/guestfs-actions.pod:12697
#: ../src/guestfs-actions.pod:12742 ../src/guestfs-actions.pod:12752
#: ../src/guestfs-actions.pod:13399 ../src/guestfs-actions.pod:13410
#: ../src/guestfs-actions.pod:13452 ../src/guestfs-actions.pod:13463
#: ../src/guestfs-actions.pod:13534 ../src/guestfs-actions.pod:13545
msgid "See L</CALLS WITH OPTIONAL ARGUMENTS>."
msgstr "Див. L</CALLS WITH OPTIONAL ARGUMENTS>."

#. type: =head2
#: ../src/guestfs-actions.pod:261
msgid "guestfs_add_domain_argv"
msgstr "guestfs_add_domain_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:263
#, no-wrap
msgid ""
" int\n"
" guestfs_add_domain_argv (guestfs_h *g,\n"
"                          const char *dom,\n"
"                          const struct guestfs_add_domain_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_domain_argv (guestfs_h *g,\n"
"                          const char *dom,\n"
"                          const struct guestfs_add_domain_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:268
msgid "This is the \"argv variant\" of L</guestfs_add_domain>."
msgstr "Це «варіант з argv» L</guestfs_add_domain>."

#. type: =head2
#: ../src/guestfs-actions.pod:272
msgid "guestfs_add_drive"
msgstr "guestfs_add_drive"

#. type: verbatim
#: ../src/guestfs-actions.pod:274
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive (guestfs_h *g,\n"
"                    const char *filename);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive (guestfs_h *g,\n"
"                    const char *filename);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:278
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_add_drive_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:285
msgid "guestfs_add_drive_opts"
msgstr "guestfs_add_drive_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:287
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_opts (guestfs_h *g,\n"
"                         const char *filename,\n"
"                         ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive_opts (guestfs_h *g,\n"
"                         const char *filename,\n"
"                         ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:297
#, no-wrap
msgid ""
" GUESTFS_ADD_DRIVE_OPTS_READONLY, int readonly,\n"
" GUESTFS_ADD_DRIVE_OPTS_FORMAT, const char *format,\n"
" GUESTFS_ADD_DRIVE_OPTS_IFACE, const char *iface,\n"
" GUESTFS_ADD_DRIVE_OPTS_NAME, const char *name,\n"
" GUESTFS_ADD_DRIVE_OPTS_LABEL, const char *label,\n"
" GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, const char *protocol,\n"
" GUESTFS_ADD_DRIVE_OPTS_SERVER, char *const *server,\n"
" GUESTFS_ADD_DRIVE_OPTS_USERNAME, const char *username,\n"
" GUESTFS_ADD_DRIVE_OPTS_SECRET, const char *secret,\n"
" GUESTFS_ADD_DRIVE_OPTS_CACHEMODE, const char *cachemode,\n"
" GUESTFS_ADD_DRIVE_OPTS_DISCARD, const char *discard,\n"
" GUESTFS_ADD_DRIVE_OPTS_COPYONREAD, int copyonread,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:313
msgid ""
"When this function is called before C<guestfs_launch> (the usual case) then "
"the first time you call this function, the disk appears in the API as C</dev/"
"sda>, the second time as C</dev/sdb>, and so on."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:347
msgid ""
"This forces the image format.  If you omit this (or use C<guestfs_add_drive> "
"or C<guestfs_add_drive_ro>) then the format is automatically detected.  "
"Possible formats include C<raw> and C<qcow2>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:358
msgid ""
"This rarely-used option lets you emulate the behaviour of the deprecated "
"C<guestfs_add_drive_with_if> call (q.v.)"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:524
msgid ""
"Enable or disable discard (a.k.a. trim or unmap) support on this drive.  If "
"enabled, operations such as C<guestfs_fstrim> will be able to discard / make "
"thin / punch holes in the underlying host file or device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:565
msgid "(Added in 1.5.23)"
msgstr "(Додано у 1.5.23)"

#. type: =head2
#: ../src/guestfs-actions.pod:567
msgid "guestfs_add_drive_opts_va"
msgstr "guestfs_add_drive_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:569
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_opts_va (guestfs_h *g,\n"
"                            const char *filename,\n"
"                            va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive_opts_va (guestfs_h *g,\n"
"                            const char *filename,\n"
"                            va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:574
msgid "This is the \"va_list variant\" of L</guestfs_add_drive_opts>."
msgstr "Це «варіант з va_list» L</guestfs_add_drive_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:578
msgid "guestfs_add_drive_opts_argv"
msgstr "guestfs_add_drive_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:580
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_opts_argv (guestfs_h *g,\n"
"                              const char *filename,\n"
"                              const struct guestfs_add_drive_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive_opts_argv (guestfs_h *g,\n"
"                              const char *filename,\n"
"                              const struct guestfs_add_drive_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:585
msgid "This is the \"argv variant\" of L</guestfs_add_drive_opts>."
msgstr "Це «варіант з argv» L</guestfs_add_drive_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:589
msgid "guestfs_add_drive_ro"
msgstr "guestfs_add_drive_ro"

#. type: verbatim
#: ../src/guestfs-actions.pod:591
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_ro (guestfs_h *g,\n"
"                       const char *filename);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive_ro (guestfs_h *g,\n"
"                       const char *filename);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:595
msgid ""
"This function is the equivalent of calling C<guestfs_add_drive_opts> with "
"the optional parameter C<GUESTFS_ADD_DRIVE_OPTS_READONLY> set to 1, so the "
"disk is added read-only, with the format being detected automatically."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:602
msgid "(Added in 1.0.38)"
msgstr "(Додано у 1.0.38)"

#. type: =head2
#: ../src/guestfs-actions.pod:604
msgid "guestfs_add_drive_ro_with_if"
msgstr "guestfs_add_drive_ro_with_if"

#. type: verbatim
#: ../src/guestfs-actions.pod:606
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_ro_with_if (guestfs_h *g,\n"
"                               const char *filename,\n"
"                               const char *iface);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive_ro_with_if (guestfs_h *g,\n"
"                               const char *filename,\n"
"                               const char *iface);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:611 ../src/guestfs-actions.pod:681
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_add_drive> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:618
msgid ""
"This is the same as C<guestfs_add_drive_ro> but it allows you to specify the "
"QEMU interface emulation to use at run time."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:623 ../src/guestfs-actions.pod:693
#: ../src/guestfs-actions.pod:4951
msgid "(Added in 1.0.84)"
msgstr "(Додано у 1.0.84)"

#. type: =head2
#: ../src/guestfs-actions.pod:625
msgid "guestfs_add_drive_scratch"
msgstr "guestfs_add_drive_scratch"

#. type: verbatim
#: ../src/guestfs-actions.pod:627
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_scratch (guestfs_h *g,\n"
"                            int64_t size,\n"
"                            ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive_scratch (guestfs_h *g,\n"
"                            int64_t size,\n"
"                            ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:637
#, no-wrap
msgid ""
" GUESTFS_ADD_DRIVE_SCRATCH_NAME, const char *name,\n"
" GUESTFS_ADD_DRIVE_SCRATCH_LABEL, const char *label,\n"
"\n"
msgstr ""
" GUESTFS_ADD_DRIVE_SCRATCH_NAME, const char *name,\n"
" GUESTFS_ADD_DRIVE_SCRATCH_LABEL, const char *label,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:645
msgid ""
"The optional arguments C<name> and C<label> are passed through to "
"C<guestfs_add_drive>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:650 ../src/guestfs-actions.pod:11522
msgid "(Added in 1.23.10)"
msgstr "(Додано у 1.23.10)"

#. type: =head2
#: ../src/guestfs-actions.pod:652
msgid "guestfs_add_drive_scratch_va"
msgstr "guestfs_add_drive_scratch_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:654
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_scratch_va (guestfs_h *g,\n"
"                               int64_t size,\n"
"                               va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive_scratch_va (guestfs_h *g,\n"
"                               int64_t size,\n"
"                               va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:659
msgid "This is the \"va_list variant\" of L</guestfs_add_drive_scratch>."
msgstr "Це «варіант з va_list» L</guestfs_add_drive_scratch>"

#. type: =head2
#: ../src/guestfs-actions.pod:663
msgid "guestfs_add_drive_scratch_argv"
msgstr "guestfs_add_drive_scratch_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:665
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_scratch_argv (guestfs_h *g,\n"
"                                 int64_t size,\n"
"                                 const struct guestfs_add_drive_scratch_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive_scratch_argv (guestfs_h *g,\n"
"                                 int64_t size,\n"
"                                 const struct guestfs_add_drive_scratch_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:670
msgid "This is the \"argv variant\" of L</guestfs_add_drive_scratch>."
msgstr "Це «варіант з argv» L</guestfs_add_drive_scratch>."

#. type: =head2
#: ../src/guestfs-actions.pod:674
msgid "guestfs_add_drive_with_if"
msgstr "guestfs_add_drive_with_if"

#. type: verbatim
#: ../src/guestfs-actions.pod:676
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_with_if (guestfs_h *g,\n"
"                            const char *filename,\n"
"                            const char *iface);\n"
"\n"
msgstr ""
" int\n"
" guestfs_add_drive_with_if (guestfs_h *g,\n"
"                            const char *filename,\n"
"                            const char *iface);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:688
msgid ""
"This is the same as C<guestfs_add_drive> but it allows you to specify the "
"QEMU interface emulation to use at run time."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:695
msgid "guestfs_aug_clear"
msgstr "guestfs_aug_clear"

#. type: verbatim
#: ../src/guestfs-actions.pod:697
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_clear (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_clear (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:706 ../src/guestfs-actions.pod:4290
msgid "(Added in 1.3.4)"
msgstr "(Додано у 1.3.4)"

#. type: =head2
#: ../src/guestfs-actions.pod:708
msgid "guestfs_aug_close"
msgstr "guestfs_aug_close"

#. type: verbatim
#: ../src/guestfs-actions.pod:710
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_close (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_close (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:713
msgid ""
"Close the current Augeas handle and free up any resources used by it.  After "
"calling this, you have to call C<guestfs_aug_init> again before you can use "
"any other Augeas functions."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:720 ../src/guestfs-actions.pod:745
#: ../src/guestfs-actions.pod:763 ../src/guestfs-actions.pod:777
#: ../src/guestfs-actions.pod:840 ../src/guestfs-actions.pod:860
#: ../src/guestfs-actions.pod:889 ../src/guestfs-actions.pod:920
#: ../src/guestfs-actions.pod:934 ../src/guestfs-actions.pod:948
#: ../src/guestfs-actions.pod:962 ../src/guestfs-actions.pod:980
#: ../src/guestfs-actions.pod:10250
msgid "(Added in 0.7)"
msgstr "(Додано у 0.7)"

#. type: =head2
#: ../src/guestfs-actions.pod:722
msgid "guestfs_aug_defnode"
msgstr "guestfs_aug_defnode"

#. type: verbatim
#: ../src/guestfs-actions.pod:724
#, no-wrap
msgid ""
" struct guestfs_int_bool *\n"
" guestfs_aug_defnode (guestfs_h *g,\n"
"                      const char *name,\n"
"                      const char *expr,\n"
"                      const char *val);\n"
"\n"
msgstr ""
" struct guestfs_int_bool *\n"
" guestfs_aug_defnode (guestfs_h *g,\n"
"                      const char *name,\n"
"                      const char *expr,\n"
"                      const char *val);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:733
msgid ""
"If C<expr> evaluates to an empty nodeset, a node is created, equivalent to "
"calling C<guestfs_aug_set> C<expr>, C<value>.  C<name> will be the nodeset "
"containing that single node."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:741
msgid ""
"This function returns a C<struct guestfs_int_bool *>, or NULL if there was "
"an error.  I<The caller must call C<guestfs_free_int_bool> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:747
msgid "guestfs_aug_defvar"
msgstr "guestfs_aug_defvar"

#. type: verbatim
#: ../src/guestfs-actions.pod:749
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_defvar (guestfs_h *g,\n"
"                     const char *name,\n"
"                     const char *expr);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_defvar (guestfs_h *g,\n"
"                     const char *name,\n"
"                     const char *expr);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:765
msgid "guestfs_aug_get"
msgstr "guestfs_aug_get"

#. type: verbatim
#: ../src/guestfs-actions.pod:767
#, no-wrap
msgid ""
" char *\n"
" guestfs_aug_get (guestfs_h *g,\n"
"                  const char *augpath);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_aug_get (guestfs_h *g,\n"
"                  const char *augpath);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:779
msgid "guestfs_aug_init"
msgstr "guestfs_aug_init"

#. type: verbatim
#: ../src/guestfs-actions.pod:781
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_init (guestfs_h *g,\n"
"                   const char *root,\n"
"                   int flags);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_init (guestfs_h *g,\n"
"                   const char *root,\n"
"                   int flags);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:790
msgid "You must call this before using any other C<guestfs_aug_*> commands."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:815
msgid ""
"This option is only useful when debugging Augeas lenses.  Use of this option "
"may require additional memory for the libguestfs appliance.  You may need to "
"set the C<LIBGUESTFS_MEMSIZE> environment variable or call "
"C<guestfs_set_memsize>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:830
msgid "Do not load the tree in C<guestfs_aug_init>."
msgstr "Не завантажувати ієрархію у C<guestfs_aug_init>."

#. type: textblock
#: ../src/guestfs-actions.pod:834
msgid "To close the handle, you can call C<guestfs_aug_close>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:842
msgid "guestfs_aug_insert"
msgstr "guestfs_aug_insert"

#. type: verbatim
#: ../src/guestfs-actions.pod:844
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_insert (guestfs_h *g,\n"
"                     const char *augpath,\n"
"                     const char *label,\n"
"                     int before);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_insert (guestfs_h *g,\n"
"                     const char *augpath,\n"
"                     const char *label,\n"
"                     int before);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:862
msgid "guestfs_aug_label"
msgstr "guestfs_aug_label"

#. type: verbatim
#: ../src/guestfs-actions.pod:864
#, no-wrap
msgid ""
" char *\n"
" guestfs_aug_label (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_aug_label (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:875 ../src/guestfs-actions.pod:1000
msgid "(Added in 1.23.14)"
msgstr "(Додано у 1.23.14)"

#. type: =head2
#: ../src/guestfs-actions.pod:877
msgid "guestfs_aug_load"
msgstr "guestfs_aug_load"

#. type: verbatim
#: ../src/guestfs-actions.pod:879
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_load (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_load (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:891
msgid "guestfs_aug_ls"
msgstr "guestfs_aug_ls"

#. type: verbatim
#: ../src/guestfs-actions.pod:893
#, no-wrap
msgid ""
" char **\n"
" guestfs_aug_ls (guestfs_h *g,\n"
"                 const char *augpath);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_aug_ls (guestfs_h *g,\n"
"                 const char *augpath);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:897
msgid ""
"This is just a shortcut for listing C<guestfs_aug_match> C<path/*> and "
"sorting the resulting nodes into alphabetical order."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:900 ../src/guestfs-actions.pod:916
#: ../src/guestfs-actions.pod:1091 ../src/guestfs-actions.pod:1966
#: ../src/guestfs-actions.pod:3032 ../src/guestfs-actions.pod:3058
#: ../src/guestfs-actions.pod:3214 ../src/guestfs-actions.pod:3240
#: ../src/guestfs-actions.pod:3534 ../src/guestfs-actions.pod:3806
#: ../src/guestfs-actions.pod:4096 ../src/guestfs-actions.pod:4389
#: ../src/guestfs-actions.pod:4455 ../src/guestfs-actions.pod:4505
#: ../src/guestfs-actions.pod:4570 ../src/guestfs-actions.pod:4594
#: ../src/guestfs-actions.pod:4969 ../src/guestfs-actions.pod:5018
#: ../src/guestfs-actions.pod:5313 ../src/guestfs-actions.pod:5688
#: ../src/guestfs-actions.pod:6101 ../src/guestfs-actions.pod:6876
#: ../src/guestfs-actions.pod:6907 ../src/guestfs-actions.pod:6938
#: ../src/guestfs-actions.pod:6957 ../src/guestfs-actions.pod:6990
#: ../src/guestfs-actions.pod:7069 ../src/guestfs-actions.pod:7086
#: ../src/guestfs-actions.pod:7129 ../src/guestfs-actions.pod:7189
#: ../src/guestfs-actions.pod:7204 ../src/guestfs-actions.pod:7217
#: ../src/guestfs-actions.pod:7237 ../src/guestfs-actions.pod:7355
#: ../src/guestfs-actions.pod:7848 ../src/guestfs-actions.pod:9246
#: ../src/guestfs-actions.pod:10125 ../src/guestfs-actions.pod:10246
#: ../src/guestfs-actions.pod:10359 ../src/guestfs-actions.pod:11772
#: ../src/guestfs-actions.pod:11881 ../src/guestfs-actions.pod:11936
#: ../src/guestfs-actions.pod:12152 ../src/guestfs-actions.pod:12176
#: ../src/guestfs-actions.pod:13073 ../src/guestfs-actions.pod:13112
#: ../src/guestfs-actions.pod:13159 ../src/guestfs-actions.pod:13564
#: ../src/guestfs-actions.pod:13590 ../src/guestfs-actions.pod:13713
#: ../src/guestfs-actions.pod:13739 ../src/guestfs-actions.pod:13792
#: ../src/guestfs-actions.pod:13818
msgid ""
"This function returns a NULL-terminated array of strings (like "
"L<environ(3)>), or NULL if there was an error.  I<The caller must free the "
"strings and the array after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:904 ../src/guestfs-actions.pod:1872
#: ../src/guestfs-actions.pod:1890 ../src/guestfs-actions.pod:3096
#: ../src/guestfs-actions.pod:6269 ../src/guestfs-actions.pod:6394
#: ../src/guestfs-actions.pod:7675 ../src/guestfs-actions.pod:7739
#: ../src/guestfs-actions.pod:8154 ../src/guestfs-actions.pod:8187
#: ../src/guestfs-actions.pod:8475 ../src/guestfs-actions.pod:9250
#: ../src/guestfs-actions.pod:10066 ../src/guestfs-actions.pod:10542
#: ../src/guestfs-actions.pod:10575 ../src/guestfs-actions.pod:10587
#: ../src/guestfs-actions.pod:11619 ../src/guestfs-actions.pod:12651
#: ../src/guestfs-actions.pod:12710 ../src/guestfs-actions.pod:13057
#: ../src/guestfs-actions.pod:13354
msgid "(Added in 0.8)"
msgstr "(Додано у 0.8)"

#. type: =head2
#: ../src/guestfs-actions.pod:906
msgid "guestfs_aug_match"
msgstr "guestfs_aug_match"

#. type: verbatim
#: ../src/guestfs-actions.pod:908
#, no-wrap
msgid ""
" char **\n"
" guestfs_aug_match (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_aug_match (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:922
msgid "guestfs_aug_mv"
msgstr "guestfs_aug_mv"

#. type: verbatim
#: ../src/guestfs-actions.pod:924
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_mv (guestfs_h *g,\n"
"                 const char *src,\n"
"                 const char *dest);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_mv (guestfs_h *g,\n"
"                 const char *src,\n"
"                 const char *dest);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:936
msgid "guestfs_aug_rm"
msgstr "guestfs_aug_rm"

#. type: verbatim
#: ../src/guestfs-actions.pod:938
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_rm (guestfs_h *g,\n"
"                 const char *augpath);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_rm (guestfs_h *g,\n"
"                 const char *augpath);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:950
msgid "guestfs_aug_save"
msgstr "guestfs_aug_save"

#. type: verbatim
#: ../src/guestfs-actions.pod:952
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_save (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_save (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:957
msgid ""
"The flags which were passed to C<guestfs_aug_init> affect exactly how files "
"are saved."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:964
msgid "guestfs_aug_set"
msgstr "guestfs_aug_set"

#. type: verbatim
#: ../src/guestfs-actions.pod:966
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_set (guestfs_h *g,\n"
"                  const char *augpath,\n"
"                  const char *val);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_set (guestfs_h *g,\n"
"                  const char *augpath,\n"
"                  const char *val);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:973
msgid ""
"In the Augeas API, it is possible to clear a node by setting the value to "
"NULL.  Due to an oversight in the libguestfs API you cannot do that with "
"this call.  Instead you must use the C<guestfs_aug_clear> call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:982
msgid "guestfs_aug_setm"
msgstr "guestfs_aug_setm"

#. type: verbatim
#: ../src/guestfs-actions.pod:984
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_setm (guestfs_h *g,\n"
"                   const char *base,\n"
"                   const char *sub,\n"
"                   const char *val);\n"
"\n"
msgstr ""
" int\n"
" guestfs_aug_setm (guestfs_h *g,\n"
"                   const char *base,\n"
"                   const char *sub,\n"
"                   const char *val);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1002
msgid "guestfs_available"
msgstr "guestfs_available"

#. type: verbatim
#: ../src/guestfs-actions.pod:1004
#, no-wrap
msgid ""
" int\n"
" guestfs_available (guestfs_h *g,\n"
"                    char *const *groups);\n"
"\n"
msgstr ""
" int\n"
" guestfs_available (guestfs_h *g,\n"
"                    char *const *groups);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1012
msgid ""
"The libguestfs groups, and the functions that those groups correspond to, "
"are listed in L<guestfs(3)/AVAILABILITY>.  You can also fetch this list at "
"runtime by calling C<guestfs_available_all_groups>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1036
msgid ""
"C<guestfs_feature_available> is the same as this call, but with a slightly "
"simpler to use API: that call returns a boolean true/false instead of "
"throwing an error."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1042
msgid "You must call C<guestfs_launch> before calling this function."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1064
msgid ""
"This call was added in version C<1.0.80>.  In previous versions of "
"libguestfs all you could do would be to speculatively execute a command to "
"find out if the daemon implemented it.  See also C<guestfs_version>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1071
msgid "See also C<guestfs_filesystem_available>."
msgstr "Див. також C<guestfs_filesystem_available>."

#. type: textblock
#: ../src/guestfs-actions.pod:1075 ../src/guestfs-actions.pod:2594
msgid "(Added in 1.0.80)"
msgstr "(Додано у 1.0.80)"

#. type: =head2
#: ../src/guestfs-actions.pod:1077
msgid "guestfs_available_all_groups"
msgstr "guestfs_available_all_groups"

#. type: verbatim
#: ../src/guestfs-actions.pod:1079
#, no-wrap
msgid ""
" char **\n"
" guestfs_available_all_groups (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_available_all_groups (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1082
msgid ""
"This command returns a list of all optional groups that this daemon knows "
"about.  Note this returns both supported and unsupported groups.  To find "
"out which ones the daemon can actually support you have to call "
"C<guestfs_available> / C<guestfs_feature_available> on each member of the "
"returned list."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1088
msgid ""
"See also C<guestfs_available>, C<guestfs_feature_available> and L<guestfs(3)/"
"AVAILABILITY>."
msgstr ""
"Див. також C<guestfs_available>, C<guestfs_feature_available> і L<guestfs(3)/"
"AVAILABILITY>."

#. type: textblock
#: ../src/guestfs-actions.pod:1095
msgid "(Added in 1.3.15)"
msgstr "(Додано у 1.3.15)"

#. type: =head2
#: ../src/guestfs-actions.pod:1097
msgid "guestfs_base64_in"
msgstr "guestfs_base64_in"

#. type: verbatim
#: ../src/guestfs-actions.pod:1099
#, no-wrap
msgid ""
" int\n"
" guestfs_base64_in (guestfs_h *g,\n"
"                    const char *base64file,\n"
"                    const char *filename);\n"
"\n"
msgstr ""
" int\n"
" guestfs_base64_in (guestfs_h *g,\n"
"                    const char *base64file,\n"
"                    const char *filename);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1109 ../src/guestfs-actions.pod:1123
msgid "(Added in 1.3.5)"
msgstr "(Додано у 1.3.5)"

#. type: =head2
#: ../src/guestfs-actions.pod:1111
msgid "guestfs_base64_out"
msgstr "guestfs_base64_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:1113
#, no-wrap
msgid ""
" int\n"
" guestfs_base64_out (guestfs_h *g,\n"
"                     const char *filename,\n"
"                     const char *base64file);\n"
"\n"
msgstr ""
" int\n"
" guestfs_base64_out (guestfs_h *g,\n"
"                     const char *filename,\n"
"                     const char *base64file);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1125
msgid "guestfs_blkdiscard"
msgstr "guestfs_blkdiscard"

#. type: verbatim
#: ../src/guestfs-actions.pod:1127
#, no-wrap
msgid ""
" int\n"
" guestfs_blkdiscard (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blkdiscard (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1134
msgid ""
"This operation requires support in libguestfs, the host filesystem, qemu and "
"the host kernel.  If this support isn't present it may give an error or even "
"appear to run but do nothing.  You must also set the C<discard> attribute on "
"the underlying drive (see C<guestfs_add_drive_opts>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1142 ../src/guestfs-actions.pod:1159
msgid "(Added in 1.25.44)"
msgstr "(Додано у 1.25.44)"

#. type: =head2
#: ../src/guestfs-actions.pod:1144
msgid "guestfs_blkdiscardzeroes"
msgstr "guestfs_blkdiscardzeroes"

#. type: verbatim
#: ../src/guestfs-actions.pod:1146
#, no-wrap
msgid ""
" int\n"
" guestfs_blkdiscardzeroes (guestfs_h *g,\n"
"                           const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blkdiscardzeroes (guestfs_h *g,\n"
"                           const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1150
msgid ""
"This call returns true if blocks on C<device> that have been discarded by a "
"call to C<guestfs_blkdiscard> are returned as blocks of zero bytes when read "
"the next time."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1157 ../src/guestfs-actions.pod:1248
#: ../src/guestfs-actions.pod:2775 ../src/guestfs-actions.pod:3079
#: ../src/guestfs-actions.pod:3094 ../src/guestfs-actions.pod:3193
#: ../src/guestfs-actions.pod:3435 ../src/guestfs-actions.pod:3752
#: ../src/guestfs-actions.pod:3831 ../src/guestfs-actions.pod:4128
#: ../src/guestfs-actions.pod:4154 ../src/guestfs-actions.pod:4213
#: ../src/guestfs-actions.pod:4228 ../src/guestfs-actions.pod:4276
#: ../src/guestfs-actions.pod:4299 ../src/guestfs-actions.pod:5805
#: ../src/guestfs-actions.pod:5821 ../src/guestfs-actions.pod:5839
#: ../src/guestfs-actions.pod:6143 ../src/guestfs-actions.pod:6179
#: ../src/guestfs-actions.pod:6219 ../src/guestfs-actions.pod:6255
#: ../src/guestfs-actions.pod:6296 ../src/guestfs-actions.pod:6358
#: ../src/guestfs-actions.pod:6421 ../src/guestfs-actions.pod:6457
#: ../src/guestfs-actions.pod:6470 ../src/guestfs-actions.pod:6484
#: ../src/guestfs-actions.pod:6524 ../src/guestfs-actions.pod:6561
#: ../src/guestfs-actions.pod:6574 ../src/guestfs-actions.pod:6587
#: ../src/guestfs-actions.pod:6601 ../src/guestfs-actions.pod:6725
#: ../src/guestfs-actions.pod:9652
msgid "This function returns a C truth value on success or -1 on error."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1161
msgid "guestfs_blkid"
msgstr "guestfs_blkid"

#. type: verbatim
#: ../src/guestfs-actions.pod:1163
#, no-wrap
msgid ""
" char **\n"
" guestfs_blkid (guestfs_h *g,\n"
"                const char *device);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_blkid (guestfs_h *g,\n"
"                const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1194 ../src/guestfs-actions.pod:5288
#: ../src/guestfs-actions.pod:5556 ../src/guestfs-actions.pod:7107
#: ../src/guestfs-actions.pod:7172 ../src/guestfs-actions.pod:8066
#: ../src/guestfs-actions.pod:9226 ../src/guestfs-actions.pod:12564
msgid ""
"This function returns a NULL-terminated array of strings, or NULL if there "
"was an error.  The array of strings will always have length C<2n+1>, where "
"C<n> keys and values alternate, followed by the trailing NULL entry.  I<The "
"caller must free the strings and the array after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1200
msgid "(Added in 1.15.9)"
msgstr "(Додано у 1.15.9)"

#. type: =head2
#: ../src/guestfs-actions.pod:1202
msgid "guestfs_blockdev_flushbufs"
msgstr "guestfs_blockdev_flushbufs"

#. type: verbatim
#: ../src/guestfs-actions.pod:1204
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_flushbufs (guestfs_h *g,\n"
"                             const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blockdev_flushbufs (guestfs_h *g,\n"
"                             const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1215 ../src/guestfs-actions.pod:1235
#: ../src/guestfs-actions.pod:1250 ../src/guestfs-actions.pod:1266
#: ../src/guestfs-actions.pod:1284 ../src/guestfs-actions.pod:1303
#: ../src/guestfs-actions.pod:1317 ../src/guestfs-actions.pod:1341
#: ../src/guestfs-actions.pod:1355 ../src/guestfs-actions.pod:1369
msgid "(Added in 0.9.3)"
msgstr "(Додано у 0.9.3)"

#. type: =head2
#: ../src/guestfs-actions.pod:1217
msgid "guestfs_blockdev_getbsz"
msgstr "guestfs_blockdev_getbsz"

#. type: verbatim
#: ../src/guestfs-actions.pod:1219
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_getbsz (guestfs_h *g,\n"
"                          const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blockdev_getbsz (guestfs_h *g,\n"
"                          const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1237
msgid "guestfs_blockdev_getro"
msgstr "guestfs_blockdev_getro"

#. type: verbatim
#: ../src/guestfs-actions.pod:1239
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_getro (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blockdev_getro (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1252
msgid "guestfs_blockdev_getsize64"
msgstr "guestfs_blockdev_getsize64"

#. type: verbatim
#: ../src/guestfs-actions.pod:1254
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_blockdev_getsize64 (guestfs_h *g,\n"
"                             const char *device);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_blockdev_getsize64 (guestfs_h *g,\n"
"                             const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1260
msgid "See also C<guestfs_blockdev_getsz>."
msgstr "Див. також C<guestfs_blockdev_getsz>."

#. type: =head2
#: ../src/guestfs-actions.pod:1268
msgid "guestfs_blockdev_getss"
msgstr "guestfs_blockdev_getss"

#. type: verbatim
#: ../src/guestfs-actions.pod:1270
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_getss (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blockdev_getss (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1277
msgid ""
"(Note, this is not the size in sectors, use C<guestfs_blockdev_getsz> for "
"that)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1286
msgid "guestfs_blockdev_getsz"
msgstr "guestfs_blockdev_getsz"

#. type: verbatim
#: ../src/guestfs-actions.pod:1288
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_blockdev_getsz (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_blockdev_getsz (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1295
msgid ""
"See also C<guestfs_blockdev_getss> for the real sector size of the device, "
"and C<guestfs_blockdev_getsize64> for the more useful I<size in bytes>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1305
msgid "guestfs_blockdev_rereadpt"
msgstr "guestfs_blockdev_rereadpt"

#. type: verbatim
#: ../src/guestfs-actions.pod:1307
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_rereadpt (guestfs_h *g,\n"
"                            const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blockdev_rereadpt (guestfs_h *g,\n"
"                            const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1319
msgid "guestfs_blockdev_setbsz"
msgstr "guestfs_blockdev_setbsz"

#. type: verbatim
#: ../src/guestfs-actions.pod:1321
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_setbsz (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int blocksize);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blockdev_setbsz (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int blocksize);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1326 ../src/guestfs-actions.pod:8573
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_mkfs> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1336
msgid ""
"If you need to set the filesystem block size, use the C<blocksize> option of "
"C<guestfs_mkfs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1343
msgid "guestfs_blockdev_setro"
msgstr "guestfs_blockdev_setro"

#. type: verbatim
#: ../src/guestfs-actions.pod:1345
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_setro (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blockdev_setro (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1357
msgid "guestfs_blockdev_setrw"
msgstr "guestfs_blockdev_setrw"

#. type: verbatim
#: ../src/guestfs-actions.pod:1359
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_setrw (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_blockdev_setrw (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1371
msgid "guestfs_btrfs_device_add"
msgstr "guestfs_btrfs_device_add"

#. type: verbatim
#: ../src/guestfs-actions.pod:1373
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_device_add (guestfs_h *g,\n"
"                           char *const *devices,\n"
"                           const char *fs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_device_add (guestfs_h *g,\n"
"                           char *const *devices,\n"
"                           const char *fs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1383 ../src/guestfs-actions.pod:1397
#: ../src/guestfs-actions.pod:1410 ../src/guestfs-actions.pod:1481
#: ../src/guestfs-actions.pod:1552 ../src/guestfs-actions.pod:1564
#: ../src/guestfs-actions.pod:1579 ../src/guestfs-actions.pod:1594
#: ../src/guestfs-actions.pod:1609
msgid "(Added in 1.17.35)"
msgstr "(Додано у 1.17.35)"

#. type: =head2
#: ../src/guestfs-actions.pod:1385
msgid "guestfs_btrfs_device_delete"
msgstr "guestfs_btrfs_device_delete"

#. type: verbatim
#: ../src/guestfs-actions.pod:1387
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_device_delete (guestfs_h *g,\n"
"                              char *const *devices,\n"
"                              const char *fs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_device_delete (guestfs_h *g,\n"
"                              char *const *devices,\n"
"                              const char *fs);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1399
msgid "guestfs_btrfs_filesystem_balance"
msgstr "guestfs_btrfs_filesystem_balance"

#. type: verbatim
#: ../src/guestfs-actions.pod:1401
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_balance (guestfs_h *g,\n"
"                                   const char *fs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_filesystem_balance (guestfs_h *g,\n"
"                                   const char *fs);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1412
msgid "guestfs_btrfs_filesystem_resize"
msgstr "guestfs_btrfs_filesystem_resize"

#. type: verbatim
#: ../src/guestfs-actions.pod:1414
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_resize (guestfs_h *g,\n"
"                                  const char *mountpoint,\n"
"                                  ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_filesystem_resize (guestfs_h *g,\n"
"                                  const char *mountpoint,\n"
"                                  ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:1424
#, no-wrap
msgid ""
" GUESTFS_BTRFS_FILESYSTEM_RESIZE_SIZE, int64_t size,\n"
"\n"
msgstr ""
" GUESTFS_BTRFS_FILESYSTEM_RESIZE_SIZE, int64_t size,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1447
msgid "(Added in 1.11.17)"
msgstr "(Додано у 1.11.17)"

#. type: =head2
#: ../src/guestfs-actions.pod:1449
msgid "guestfs_btrfs_filesystem_resize_va"
msgstr "guestfs_btrfs_filesystem_resize_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:1451
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_resize_va (guestfs_h *g,\n"
"                                     const char *mountpoint,\n"
"                                     va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_filesystem_resize_va (guestfs_h *g,\n"
"                                     const char *mountpoint,\n"
"                                     va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1456
msgid "This is the \"va_list variant\" of L</guestfs_btrfs_filesystem_resize>."
msgstr "Це «варіант з va_list» L</guestfs_btrfs_filesystem_resize>."

#. type: =head2
#: ../src/guestfs-actions.pod:1460
msgid "guestfs_btrfs_filesystem_resize_argv"
msgstr "guestfs_btrfs_filesystem_resize_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:1462
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_resize_argv (guestfs_h *g,\n"
"                                       const char *mountpoint,\n"
"                                       const struct guestfs_btrfs_filesystem_resize_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_filesystem_resize_argv (guestfs_h *g,\n"
"                                       const char *mountpoint,\n"
"                                       const struct guestfs_btrfs_filesystem_resize_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1467
msgid "This is the \"argv variant\" of L</guestfs_btrfs_filesystem_resize>."
msgstr "Це «варіант з argv» L</guestfs_btrfs_filesystem_resize>."

#. type: =head2
#: ../src/guestfs-actions.pod:1471
msgid "guestfs_btrfs_filesystem_sync"
msgstr "guestfs_btrfs_filesystem_sync"

#. type: verbatim
#: ../src/guestfs-actions.pod:1473
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
"                                const char *fs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
"                                const char *fs);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1483
msgid "guestfs_btrfs_fsck"
msgstr "guestfs_btrfs_fsck"

#. type: verbatim
#: ../src/guestfs-actions.pod:1485
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_fsck (guestfs_h *g,\n"
"                     const char *device,\n"
"                     ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_fsck (guestfs_h *g,\n"
"                     const char *device,\n"
"                     ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:1495
#, no-wrap
msgid ""
" GUESTFS_BTRFS_FSCK_SUPERBLOCK, int64_t superblock,\n"
" GUESTFS_BTRFS_FSCK_REPAIR, int repair,\n"
"\n"
msgstr ""
" GUESTFS_BTRFS_FSCK_SUPERBLOCK, int64_t superblock,\n"
" GUESTFS_BTRFS_FSCK_REPAIR, int repair,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1503 ../src/guestfs-actions.pod:1539
msgid "(Added in 1.17.43)"
msgstr "(Додано у 1.17.43)"

#. type: =head2
#: ../src/guestfs-actions.pod:1505
msgid "guestfs_btrfs_fsck_va"
msgstr "guestfs_btrfs_fsck_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:1507
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_fsck_va (guestfs_h *g,\n"
"                        const char *device,\n"
"                        va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_fsck_va (guestfs_h *g,\n"
"                        const char *device,\n"
"                        va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1512
msgid "This is the \"va_list variant\" of L</guestfs_btrfs_fsck>."
msgstr "Це «варіант з va_list» L</guestfs_btrfs_fsck>."

#. type: =head2
#: ../src/guestfs-actions.pod:1516
msgid "guestfs_btrfs_fsck_argv"
msgstr "guestfs_btrfs_fsck_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:1518
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_fsck_argv (guestfs_h *g,\n"
"                          const char *device,\n"
"                          const struct guestfs_btrfs_fsck_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_fsck_argv (guestfs_h *g,\n"
"                          const char *device,\n"
"                          const struct guestfs_btrfs_fsck_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1523
msgid "This is the \"argv variant\" of L</guestfs_btrfs_fsck>."
msgstr "Це «варіант з argv» L</guestfs_btrfs_fsck>."

#. type: =head2
#: ../src/guestfs-actions.pod:1527
msgid "guestfs_btrfs_set_seeding"
msgstr "guestfs_btrfs_set_seeding"

#. type: verbatim
#: ../src/guestfs-actions.pod:1529
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_set_seeding (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int seeding);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_set_seeding (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int seeding);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1541
msgid "guestfs_btrfs_subvolume_create"
msgstr "guestfs_btrfs_subvolume_create"

#. type: verbatim
#: ../src/guestfs-actions.pod:1543
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
"                                 const char *dest);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
"                                 const char *dest);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1554
msgid "guestfs_btrfs_subvolume_delete"
msgstr "guestfs_btrfs_subvolume_delete"

#. type: verbatim
#: ../src/guestfs-actions.pod:1556
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_subvolume_delete (guestfs_h *g,\n"
"                                 const char *subvolume);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_subvolume_delete (guestfs_h *g,\n"
"                                 const char *subvolume);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1566
msgid "guestfs_btrfs_subvolume_list"
msgstr "guestfs_btrfs_subvolume_list"

#. type: verbatim
#: ../src/guestfs-actions.pod:1568
#, no-wrap
msgid ""
" struct guestfs_btrfssubvolume_list *\n"
" guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
"                               const char *fs);\n"
"\n"
msgstr ""
" struct guestfs_btrfssubvolume_list *\n"
" guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
"                               const char *fs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1575
msgid ""
"This function returns a C<struct guestfs_btrfssubvolume_list *>, or NULL if "
"there was an error.  I<The caller must call "
"C<guestfs_free_btrfssubvolume_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1581
msgid "guestfs_btrfs_subvolume_set_default"
msgstr "guestfs_btrfs_subvolume_set_default"

#. type: verbatim
#: ../src/guestfs-actions.pod:1583
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_subvolume_set_default (guestfs_h *g,\n"
"                                      int64_t id,\n"
"                                      const char *fs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_subvolume_set_default (guestfs_h *g,\n"
"                                      int64_t id,\n"
"                                      const char *fs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1588
msgid ""
"Set the subvolume of the btrfs filesystem C<fs> which will be mounted by "
"default.  See C<guestfs_btrfs_subvolume_list> to get a list of subvolumes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1596
msgid "guestfs_btrfs_subvolume_snapshot"
msgstr "guestfs_btrfs_subvolume_snapshot"

#. type: verbatim
#: ../src/guestfs-actions.pod:1598
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
"                                   const char *source,\n"
"                                   const char *dest);\n"
"\n"
msgstr ""
" int\n"
" guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
"                                   const char *source,\n"
"                                   const char *dest);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1611
msgid "guestfs_canonical_device_name"
msgstr "guestfs_canonical_device_name"

#. type: verbatim
#: ../src/guestfs-actions.pod:1613
#, no-wrap
msgid ""
" char *\n"
" guestfs_canonical_device_name (guestfs_h *g,\n"
"                                const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_canonical_device_name (guestfs_h *g,\n"
"                                const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1635
msgid ""
"Converted to C</dev/VG/LV> form using C<guestfs_lvm_canonical_lvm_name>."
msgstr ""
"Перетворено у форму C</dev/VG/LV> за допомогою "
"C<guestfs_lvm_canonical_lvm_name>."

#. type: textblock
#: ../src/guestfs-actions.pod:1644 ../src/guestfs-actions.pod:2612
#: ../src/guestfs-actions.pod:7929
msgid "(Added in 1.19.7)"
msgstr "(Додано у 1.19.7)"

#. type: =head2
#: ../src/guestfs-actions.pod:1646
msgid "guestfs_cap_get_file"
msgstr "guestfs_cap_get_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:1648
#, no-wrap
msgid ""
" char *\n"
" guestfs_cap_get_file (guestfs_h *g,\n"
"                       const char *path);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_cap_get_file (guestfs_h *g,\n"
"                       const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1662
msgid "guestfs_cap_set_file"
msgstr "guestfs_cap_set_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:1664
#, no-wrap
msgid ""
" int\n"
" guestfs_cap_set_file (guestfs_h *g,\n"
"                       const char *path,\n"
"                       const char *cap);\n"
"\n"
msgstr ""
" int\n"
" guestfs_cap_set_file (guestfs_h *g,\n"
"                       const char *path,\n"
"                       const char *cap);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1677
msgid "guestfs_case_sensitive_path"
msgstr "guestfs_case_sensitive_path"

#. type: verbatim
#: ../src/guestfs-actions.pod:1679
#, no-wrap
msgid ""
" char *\n"
" guestfs_case_sensitive_path (guestfs_h *g,\n"
"                              const char *path);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_case_sensitive_path (guestfs_h *g,\n"
"                              const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1702
msgid ""
"C<guestfs_case_sensitive_path> attempts to resolve the true case of each "
"element in the path. It will return a resolved path if either the full path "
"or its parent directory exists. If the parent directory exists but the full "
"path does not, the case of the parent directory will be correctly resolved, "
"and the remainder appended unmodified. For example, if the file C<\"/Windows/"
"System32/netkvm.sys\"> exists:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:1711
msgid "C<guestfs_case_sensitive_path> (\"/windows/system32/netkvm.sys\")"
msgstr "C<guestfs_case_sensitive_path> (\"/windows/system32/netkvm.sys\")"

#. type: =item
#: ../src/guestfs-actions.pod:1715
msgid "C<guestfs_case_sensitive_path> (\"/windows/system32/NoSuchFile\")"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:1719
msgid "C<guestfs_case_sensitive_path> (\"/windows/system33/netkvm.sys\")"
msgstr "C<guestfs_case_sensitive_path> (\"/windows/system33/netkvm.sys\")"

#. type: textblock
#: ../src/guestfs-actions.pod:1725
msgid ""
"I<Note>: Because of the above behaviour, C<guestfs_case_sensitive_path> "
"cannot be used to check for the existence of a file."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1732
msgid "See also C<guestfs_realpath>."
msgstr "Див. також C<guestfs_realpath>."

#. type: textblock
#: ../src/guestfs-actions.pod:1737 ../src/guestfs-actions.pod:12969
msgid "(Added in 1.0.75)"
msgstr "(Додано у 1.0.75)"

#. type: =head2
#: ../src/guestfs-actions.pod:1739
msgid "guestfs_cat"
msgstr "guestfs_cat"

#. type: verbatim
#: ../src/guestfs-actions.pod:1741
#, no-wrap
msgid ""
" char *\n"
" guestfs_cat (guestfs_h *g,\n"
"              const char *path);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_cat (guestfs_h *g,\n"
"              const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1747
msgid ""
"Because, in C, this function returns a C<char *>, there is no way to "
"differentiate between a C<\\0> character in a file and end of string.  To "
"handle binary files, use the C<guestfs_read_file> or C<guestfs_download> "
"functions."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1755 ../src/guestfs-actions.pod:7090
#: ../src/guestfs-actions.pod:7241 ../src/guestfs-actions.pod:7258
#: ../src/guestfs-actions.pod:7359 ../src/guestfs-actions.pod:7852
#: ../src/guestfs-actions.pod:7866 ../src/guestfs-actions.pod:10129
#: ../src/guestfs-actions.pod:10143 ../src/guestfs-actions.pod:13163
#: ../src/guestfs-actions.pod:13177
msgid "(Added in 0.4)"
msgstr "(Додано у 0.4)"

#. type: =head2
#: ../src/guestfs-actions.pod:1757
msgid "guestfs_checksum"
msgstr "guestfs_checksum"

#. type: verbatim
#: ../src/guestfs-actions.pod:1759
#, no-wrap
msgid ""
" char *\n"
" guestfs_checksum (guestfs_h *g,\n"
"                   const char *csumtype,\n"
"                   const char *path);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_checksum (guestfs_h *g,\n"
"                   const char *csumtype,\n"
"                   const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1805
msgid "To get the checksum for a device, use C<guestfs_checksum_device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1807
msgid "To get the checksums for many files, use C<guestfs_checksums_out>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1812 ../src/guestfs-actions.pod:2835
#: ../src/guestfs-actions.pod:4255 ../src/guestfs-actions.pod:6181
#: ../src/guestfs-actions.pod:6257 ../src/guestfs-actions.pod:6459
#: ../src/guestfs-actions.pod:6486 ../src/guestfs-actions.pod:12775
msgid "(Added in 1.0.2)"
msgstr "(Додано у 1.0.2)"

#. type: =head2
#: ../src/guestfs-actions.pod:1814
msgid "guestfs_checksum_device"
msgstr "guestfs_checksum_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:1816
#, no-wrap
msgid ""
" char *\n"
" guestfs_checksum_device (guestfs_h *g,\n"
"                          const char *csumtype,\n"
"                          const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_checksum_device (guestfs_h *g,\n"
"                          const char *csumtype,\n"
"                          const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1821
msgid ""
"This call computes the MD5, SHAx or CRC checksum of the contents of the "
"device named C<device>.  For the types of checksums supported see the "
"C<guestfs_checksum> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1828 ../src/guestfs-actions.pod:9444
#: ../src/guestfs-actions.pod:9620 ../src/guestfs-actions.pod:9654
#: ../src/guestfs-actions.pod:9688 ../src/guestfs-actions.pod:9907
#: ../src/guestfs-actions.pod:12591 ../src/guestfs-actions.pod:12612
#: ../src/guestfs-actions.pod:13189
msgid "(Added in 1.3.2)"
msgstr "(Додано у 1.3.2)"

#. type: =head2
#: ../src/guestfs-actions.pod:1830
msgid "guestfs_checksums_out"
msgstr "guestfs_checksums_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:1832
#, no-wrap
msgid ""
" int\n"
" guestfs_checksums_out (guestfs_h *g,\n"
"                        const char *csumtype,\n"
"                        const char *directory,\n"
"                        const char *sumsfile);\n"
"\n"
msgstr ""
" int\n"
" guestfs_checksums_out (guestfs_h *g,\n"
"                        const char *csumtype,\n"
"                        const char *directory,\n"
"                        const char *sumsfile);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1852
msgid "(Added in 1.3.7)"
msgstr "(Додано у 1.3.7)"

#. type: =head2
#: ../src/guestfs-actions.pod:1854
msgid "guestfs_chmod"
msgstr "guestfs_chmod"

#. type: verbatim
#: ../src/guestfs-actions.pod:1856
#, no-wrap
msgid ""
" int\n"
" guestfs_chmod (guestfs_h *g,\n"
"                int mode,\n"
"                const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_chmod (guestfs_h *g,\n"
"                int mode,\n"
"                const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1874
msgid "guestfs_chown"
msgstr "guestfs_chown"

#. type: verbatim
#: ../src/guestfs-actions.pod:1876
#, no-wrap
msgid ""
" int\n"
" guestfs_chown (guestfs_h *g,\n"
"                int owner,\n"
"                int group,\n"
"                const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_chown (guestfs_h *g,\n"
"                int owner,\n"
"                int group,\n"
"                const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:1892
msgid "guestfs_clear_backend_setting"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1894
#, no-wrap
msgid ""
" int\n"
" guestfs_clear_backend_setting (guestfs_h *g,\n"
"                                const char *name);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1909 ../src/guestfs-actions.pod:3792
#: ../src/guestfs-actions.pod:10945
msgid "(Added in 1.27.2)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1911
msgid "guestfs_command"
msgstr "guestfs_command"

#. type: verbatim
#: ../src/guestfs-actions.pod:1913
#, no-wrap
msgid ""
" char *\n"
" guestfs_command (guestfs_h *g,\n"
"                  char *const *arguments);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_command (guestfs_h *g,\n"
"                  char *const *arguments);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1922
msgid ""
"The single parameter is an argv-style list of arguments.  The first element "
"is the name of the program to run.  Subsequent elements are parameters.  The "
"list must be non-empty (ie. must contain a program name).  Note that the "
"command runs directly, and is I<not> invoked via the shell (see "
"C<guestfs_sh>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1953 ../src/guestfs-actions.pod:1973
#: ../src/guestfs-actions.pod:3275
msgid "(Added in 0.9.1)"
msgstr "(Додано у 0.9.1)"

#. type: =head2
#: ../src/guestfs-actions.pod:1955
msgid "guestfs_command_lines"
msgstr "guestfs_command_lines"

#. type: verbatim
#: ../src/guestfs-actions.pod:1957
#, no-wrap
msgid ""
" char **\n"
" guestfs_command_lines (guestfs_h *g,\n"
"                        char *const *arguments);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_command_lines (guestfs_h *g,\n"
"                        char *const *arguments);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1961
msgid ""
"This is the same as C<guestfs_command>, but splits the result into a list of "
"lines."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1964
msgid "See also: C<guestfs_sh_lines>"
msgstr "Див. також C<guestfs_sh_lines>"

#. type: =head2
#: ../src/guestfs-actions.pod:1975
msgid "guestfs_compress_device_out"
msgstr "guestfs_compress_device_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:1977
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_device_out (guestfs_h *g,\n"
"                              const char *ctype,\n"
"                              const char *device,\n"
"                              const char *zdevice,\n"
"                              ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_compress_device_out (guestfs_h *g,\n"
"                              const char *ctype,\n"
"                              const char *device,\n"
"                              const char *zdevice,\n"
"                              ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:1989
#, no-wrap
msgid ""
" GUESTFS_COMPRESS_DEVICE_OUT_LEVEL, int level,\n"
"\n"
msgstr ""
" GUESTFS_COMPRESS_DEVICE_OUT_LEVEL, int level,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:1994
msgid ""
"The C<ctype> and optional C<level> parameters have the same meaning as in "
"C<guestfs_compress_out>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1999 ../src/guestfs-actions.pod:2058
#: ../src/guestfs-actions.pod:4241 ../src/guestfs-actions.pod:11464
msgid "(Added in 1.13.15)"
msgstr "(Додано у 1.13.15)"

#. type: =head2
#: ../src/guestfs-actions.pod:2001
msgid "guestfs_compress_device_out_va"
msgstr "guestfs_compress_device_out_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2003
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_device_out_va (guestfs_h *g,\n"
"                                 const char *ctype,\n"
"                                 const char *device,\n"
"                                 const char *zdevice,\n"
"                                 va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_compress_device_out_va (guestfs_h *g,\n"
"                                 const char *ctype,\n"
"                                 const char *device,\n"
"                                 const char *zdevice,\n"
"                                 va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2010
msgid "This is the \"va_list variant\" of L</guestfs_compress_device_out>."
msgstr "Це «варіант з va_list» L</guestfs_compress_device_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:2014
msgid "guestfs_compress_device_out_argv"
msgstr "guestfs_compress_device_out_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2016
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_device_out_argv (guestfs_h *g,\n"
"                                   const char *ctype,\n"
"                                   const char *device,\n"
"                                   const char *zdevice,\n"
"                                   const struct guestfs_compress_device_out_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_compress_device_out_argv (guestfs_h *g,\n"
"                                   const char *ctype,\n"
"                                   const char *device,\n"
"                                   const char *zdevice,\n"
"                                   const struct guestfs_compress_device_out_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2023
msgid "This is the \"argv variant\" of L</guestfs_compress_device_out>."
msgstr "Це «варіант з argv» L</guestfs_compress_device_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:2027
msgid "guestfs_compress_out"
msgstr "guestfs_compress_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:2029
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_out (guestfs_h *g,\n"
"                       const char *ctype,\n"
"                       const char *file,\n"
"                       const char *zfile,\n"
"                       ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_compress_out (guestfs_h *g,\n"
"                       const char *ctype,\n"
"                       const char *file,\n"
"                       const char *zfile,\n"
"                       ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:2041
#, no-wrap
msgid ""
" GUESTFS_COMPRESS_OUT_LEVEL, int level,\n"
"\n"
msgstr ""
" GUESTFS_COMPRESS_OUT_LEVEL, int level,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:2060
msgid "guestfs_compress_out_va"
msgstr "guestfs_compress_out_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2062
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_out_va (guestfs_h *g,\n"
"                          const char *ctype,\n"
"                          const char *file,\n"
"                          const char *zfile,\n"
"                          va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_compress_out_va (guestfs_h *g,\n"
"                          const char *ctype,\n"
"                          const char *file,\n"
"                          const char *zfile,\n"
"                          va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2069
msgid "This is the \"va_list variant\" of L</guestfs_compress_out>."
msgstr "Це «варіант з va_list» L</guestfs_compress_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:2073
msgid "guestfs_compress_out_argv"
msgstr "guestfs_compress_out_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2075
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_out_argv (guestfs_h *g,\n"
"                            const char *ctype,\n"
"                            const char *file,\n"
"                            const char *zfile,\n"
"                            const struct guestfs_compress_out_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_compress_out_argv (guestfs_h *g,\n"
"                            const char *ctype,\n"
"                            const char *file,\n"
"                            const char *zfile,\n"
"                            const struct guestfs_compress_out_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2082
msgid "This is the \"argv variant\" of L</guestfs_compress_out>."
msgstr "Це «варіант з argv» L</guestfs_compress_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:2086
msgid "guestfs_config"
msgstr "guestfs_config"

#. type: verbatim
#: ../src/guestfs-actions.pod:2088
#, no-wrap
msgid ""
" int\n"
" guestfs_config (guestfs_h *g,\n"
"                 const char *hvparam,\n"
"                 const char *hvvalue);\n"
"\n"
msgstr ""
" int\n"
" guestfs_config (guestfs_h *g,\n"
"                 const char *hvparam,\n"
"                 const char *hvvalue);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:2106
msgid "guestfs_copy_attributes"
msgstr "guestfs_copy_attributes"

#. type: verbatim
#: ../src/guestfs-actions.pod:2108
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_attributes (guestfs_h *g,\n"
"                          const char *src,\n"
"                          const char *dest,\n"
"                          ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_attributes (guestfs_h *g,\n"
"                          const char *src,\n"
"                          const char *dest,\n"
"                          ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:2119
#, no-wrap
msgid ""
" GUESTFS_COPY_ATTRIBUTES_ALL, int all,\n"
" GUESTFS_COPY_ATTRIBUTES_MODE, int mode,\n"
" GUESTFS_COPY_ATTRIBUTES_XATTRIBUTES, int xattributes,\n"
" GUESTFS_COPY_ATTRIBUTES_OWNERSHIP, int ownership,\n"
"\n"
msgstr ""
" GUESTFS_COPY_ATTRIBUTES_ALL, int all,\n"
" GUESTFS_COPY_ATTRIBUTES_MODE, int mode,\n"
" GUESTFS_COPY_ATTRIBUTES_XATTRIBUTES, int xattributes,\n"
" GUESTFS_COPY_ATTRIBUTES_OWNERSHIP, int ownership,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2141
msgid ""
"Copy the Linux extended attributes (xattrs) from C<source> to "
"C<destination>.  This flag does nothing if the I<linuxxattrs> feature is not "
"available (see C<guestfs_feature_available>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2158
msgid "(Added in 1.25.21)"
msgstr "(Додано у 1.25.21)"

#. type: =head2
#: ../src/guestfs-actions.pod:2160
msgid "guestfs_copy_attributes_va"
msgstr "guestfs_copy_attributes_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2162
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_attributes_va (guestfs_h *g,\n"
"                             const char *src,\n"
"                             const char *dest,\n"
"                             va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_attributes_va (guestfs_h *g,\n"
"                             const char *src,\n"
"                             const char *dest,\n"
"                             va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2168
msgid "This is the \"va_list variant\" of L</guestfs_copy_attributes>."
msgstr "Це «варіант з va_list» L</guestfs_copy_attributes>."

#. type: =head2
#: ../src/guestfs-actions.pod:2172
msgid "guestfs_copy_attributes_argv"
msgstr "guestfs_copy_attributes_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2174
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_attributes_argv (guestfs_h *g,\n"
"                               const char *src,\n"
"                               const char *dest,\n"
"                               const struct guestfs_copy_attributes_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_attributes_argv (guestfs_h *g,\n"
"                               const char *src,\n"
"                               const char *dest,\n"
"                               const struct guestfs_copy_attributes_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2180
msgid "This is the \"argv variant\" of L</guestfs_copy_attributes>."
msgstr "Це «варіант з argv» L</guestfs_copy_attributes>."

#. type: =head2
#: ../src/guestfs-actions.pod:2184
msgid "guestfs_copy_device_to_device"
msgstr "guestfs_copy_device_to_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:2186
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_device (guestfs_h *g,\n"
"                                const char *src,\n"
"                                const char *dest,\n"
"                                ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_device_to_device (guestfs_h *g,\n"
"                                const char *src,\n"
"                                const char *dest,\n"
"                                ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:2197
#, no-wrap
msgid ""
" GUESTFS_COPY_DEVICE_TO_DEVICE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_DEVICE_TO_DEVICE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, int64_t size,\n"
" GUESTFS_COPY_DEVICE_TO_DEVICE_SPARSE, int sparse,\n"
"\n"
msgstr ""
" GUESTFS_COPY_DEVICE_TO_DEVICE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_DEVICE_TO_DEVICE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, int64_t size,\n"
" GUESTFS_COPY_DEVICE_TO_DEVICE_SPARSE, int sparse,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2202
msgid ""
"The four calls C<guestfs_copy_device_to_device>, "
"C<guestfs_copy_device_to_file>, C<guestfs_copy_file_to_device>, and "
"C<guestfs_copy_file_to_file> let you copy from a source (device|file) to a "
"destination (device|file)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2229 ../src/guestfs-actions.pod:2283
#: ../src/guestfs-actions.pod:2337 ../src/guestfs-actions.pod:2396
#: ../src/guestfs-actions.pod:2450 ../src/guestfs-actions.pod:2830
#: ../src/guestfs-actions.pod:2861 ../src/guestfs-actions.pod:2906
#: ../src/guestfs-actions.pod:3458 ../src/guestfs-actions.pod:3496
#: ../src/guestfs-actions.pod:6818 ../src/guestfs-actions.pod:12770
#: ../src/guestfs-actions.pod:12804 ../src/guestfs-actions.pod:13620
#: ../src/guestfs-actions.pod:13643 ../src/guestfs-actions.pod:13668
msgid ""
"This long-running command can generate progress notification messages so "
"that the caller can display a progress bar or indicator.  To receive these "
"messages, the caller must register a progress event callback.  See "
"L<guestfs(3)/GUESTFS_EVENT_PROGRESS>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2234 ../src/guestfs-actions.pod:2288
#: ../src/guestfs-actions.pod:2342 ../src/guestfs-actions.pod:2401
#: ../src/guestfs-actions.pod:9963
msgid "(Added in 1.13.25)"
msgstr "(Додано у 1.13.25)"

#. type: =head2
#: ../src/guestfs-actions.pod:2236
msgid "guestfs_copy_device_to_device_va"
msgstr "guestfs_copy_device_to_device_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2238
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_device_va (guestfs_h *g,\n"
"                                   const char *src,\n"
"                                   const char *dest,\n"
"                                   va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_device_to_device_va (guestfs_h *g,\n"
"                                   const char *src,\n"
"                                   const char *dest,\n"
"                                   va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2244
msgid "This is the \"va_list variant\" of L</guestfs_copy_device_to_device>."
msgstr "Це «варіант з va_list» L</guestfs_copy_device_to_device>."

#. type: =head2
#: ../src/guestfs-actions.pod:2248
msgid "guestfs_copy_device_to_device_argv"
msgstr "guestfs_copy_device_to_device_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2250
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_device_argv (guestfs_h *g,\n"
"                                     const char *src,\n"
"                                     const char *dest,\n"
"                                     const struct guestfs_copy_device_to_device_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_device_to_device_argv (guestfs_h *g,\n"
"                                     const char *src,\n"
"                                     const char *dest,\n"
"                                     const struct guestfs_copy_device_to_device_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2256
msgid "This is the \"argv variant\" of L</guestfs_copy_device_to_device>."
msgstr "Це «варіант з argv» L</guestfs_copy_device_to_device>."

#. type: =head2
#: ../src/guestfs-actions.pod:2260
msgid "guestfs_copy_device_to_file"
msgstr "guestfs_copy_device_to_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:2262
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_file (guestfs_h *g,\n"
"                              const char *src,\n"
"                              const char *dest,\n"
"                              ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_device_to_file (guestfs_h *g,\n"
"                              const char *src,\n"
"                              const char *dest,\n"
"                              ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:2273
#, no-wrap
msgid ""
" GUESTFS_COPY_DEVICE_TO_FILE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_DEVICE_TO_FILE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_DEVICE_TO_FILE_SIZE, int64_t size,\n"
" GUESTFS_COPY_DEVICE_TO_FILE_SPARSE, int sparse,\n"
"\n"
msgstr ""
" GUESTFS_COPY_DEVICE_TO_FILE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_DEVICE_TO_FILE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_DEVICE_TO_FILE_SIZE, int64_t size,\n"
" GUESTFS_COPY_DEVICE_TO_FILE_SPARSE, int sparse,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2278 ../src/guestfs-actions.pod:2332
#: ../src/guestfs-actions.pod:2386
msgid ""
"See C<guestfs_copy_device_to_device> for a general overview of this call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2290
msgid "guestfs_copy_device_to_file_va"
msgstr "guestfs_copy_device_to_file_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2292
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_file_va (guestfs_h *g,\n"
"                                 const char *src,\n"
"                                 const char *dest,\n"
"                                 va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_device_to_file_va (guestfs_h *g,\n"
"                                 const char *src,\n"
"                                 const char *dest,\n"
"                                 va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2298
msgid "This is the \"va_list variant\" of L</guestfs_copy_device_to_file>."
msgstr "Це «варіант з va_list» L</guestfs_copy_device_to_file>."

#. type: =head2
#: ../src/guestfs-actions.pod:2302
msgid "guestfs_copy_device_to_file_argv"
msgstr "guestfs_copy_device_to_file_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2304
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_file_argv (guestfs_h *g,\n"
"                                   const char *src,\n"
"                                   const char *dest,\n"
"                                   const struct guestfs_copy_device_to_file_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_device_to_file_argv (guestfs_h *g,\n"
"                                   const char *src,\n"
"                                   const char *dest,\n"
"                                   const struct guestfs_copy_device_to_file_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2310
msgid "This is the \"argv variant\" of L</guestfs_copy_device_to_file>."
msgstr "Це «варіант з argv» L</guestfs_copy_device_to_file>."

#. type: =head2
#: ../src/guestfs-actions.pod:2314
msgid "guestfs_copy_file_to_device"
msgstr "guestfs_copy_file_to_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:2316
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_device (guestfs_h *g,\n"
"                              const char *src,\n"
"                              const char *dest,\n"
"                              ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_file_to_device (guestfs_h *g,\n"
"                              const char *src,\n"
"                              const char *dest,\n"
"                              ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:2327
#, no-wrap
msgid ""
" GUESTFS_COPY_FILE_TO_DEVICE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_FILE_TO_DEVICE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_FILE_TO_DEVICE_SIZE, int64_t size,\n"
" GUESTFS_COPY_FILE_TO_DEVICE_SPARSE, int sparse,\n"
"\n"
msgstr ""
" GUESTFS_COPY_FILE_TO_DEVICE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_FILE_TO_DEVICE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_FILE_TO_DEVICE_SIZE, int64_t size,\n"
" GUESTFS_COPY_FILE_TO_DEVICE_SPARSE, int sparse,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:2344
msgid "guestfs_copy_file_to_device_va"
msgstr "guestfs_copy_file_to_device_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2346
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_device_va (guestfs_h *g,\n"
"                                 const char *src,\n"
"                                 const char *dest,\n"
"                                 va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_file_to_device_va (guestfs_h *g,\n"
"                                 const char *src,\n"
"                                 const char *dest,\n"
"                                 va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2352
msgid "This is the \"va_list variant\" of L</guestfs_copy_file_to_device>."
msgstr "Це «варіант з va_list» L</guestfs_copy_file_to_device>."

#. type: =head2
#: ../src/guestfs-actions.pod:2356
msgid "guestfs_copy_file_to_device_argv"
msgstr "guestfs_copy_file_to_device_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2358
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_device_argv (guestfs_h *g,\n"
"                                   const char *src,\n"
"                                   const char *dest,\n"
"                                   const struct guestfs_copy_file_to_device_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_file_to_device_argv (guestfs_h *g,\n"
"                                   const char *src,\n"
"                                   const char *dest,\n"
"                                   const struct guestfs_copy_file_to_device_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2364
msgid "This is the \"argv variant\" of L</guestfs_copy_file_to_device>."
msgstr "Це «варіант з argv» L</guestfs_copy_file_to_device>."

#. type: =head2
#: ../src/guestfs-actions.pod:2368
msgid "guestfs_copy_file_to_file"
msgstr "guestfs_copy_file_to_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:2370
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_file (guestfs_h *g,\n"
"                            const char *src,\n"
"                            const char *dest,\n"
"                            ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_file_to_file (guestfs_h *g,\n"
"                            const char *src,\n"
"                            const char *dest,\n"
"                            ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:2381
#, no-wrap
msgid ""
" GUESTFS_COPY_FILE_TO_FILE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_FILE_TO_FILE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_FILE_TO_FILE_SIZE, int64_t size,\n"
" GUESTFS_COPY_FILE_TO_FILE_SPARSE, int sparse,\n"
"\n"
msgstr ""
" GUESTFS_COPY_FILE_TO_FILE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_FILE_TO_FILE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_FILE_TO_FILE_SIZE, int64_t size,\n"
" GUESTFS_COPY_FILE_TO_FILE_SPARSE, int sparse,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2389
msgid ""
"This is B<not> the function you want for copying files.  This is for copying "
"blocks within existing files.  See C<guestfs_cp>, C<guestfs_cp_a> and "
"C<guestfs_mv> for general file copying and moving functions."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2403
msgid "guestfs_copy_file_to_file_va"
msgstr "guestfs_copy_file_to_file_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2405
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_file_va (guestfs_h *g,\n"
"                               const char *src,\n"
"                               const char *dest,\n"
"                               va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_file_to_file_va (guestfs_h *g,\n"
"                               const char *src,\n"
"                               const char *dest,\n"
"                               va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2411
msgid "This is the \"va_list variant\" of L</guestfs_copy_file_to_file>."
msgstr "Це «варіант з va_list» L</guestfs_copy_file_to_file>."

#. type: =head2
#: ../src/guestfs-actions.pod:2415
msgid "guestfs_copy_file_to_file_argv"
msgstr "guestfs_copy_file_to_file_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2417
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_file_argv (guestfs_h *g,\n"
"                                 const char *src,\n"
"                                 const char *dest,\n"
"                                 const struct guestfs_copy_file_to_file_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_file_to_file_argv (guestfs_h *g,\n"
"                                 const char *src,\n"
"                                 const char *dest,\n"
"                                 const struct guestfs_copy_file_to_file_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2423
msgid "This is the \"argv variant\" of L</guestfs_copy_file_to_file>."
msgstr "Це «варіант з argv» L</guestfs_copy_file_to_file>."

#. type: =head2
#: ../src/guestfs-actions.pod:2427
msgid "guestfs_copy_size"
msgstr "guestfs_copy_size"

#. type: verbatim
#: ../src/guestfs-actions.pod:2429
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_size (guestfs_h *g,\n"
"                    const char *src,\n"
"                    const char *dest,\n"
"                    int64_t size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_copy_size (guestfs_h *g,\n"
"                    const char *src,\n"
"                    const char *dest,\n"
"                    int64_t size);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2435 ../src/guestfs-actions.pod:2575
msgid ""
"I<This function is deprecated.> In new code, use the L</"
"guestfs_copy_device_to_device> call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2455 ../src/guestfs-actions.pod:7879
#: ../src/guestfs-actions.pod:10156 ../src/guestfs-actions.pod:13077
#: ../src/guestfs-actions.pod:13116 ../src/guestfs-actions.pod:13202
msgid "(Added in 1.0.87)"
msgstr "(Додано у 1.0.87)"

#. type: =head2
#: ../src/guestfs-actions.pod:2457
msgid "guestfs_cp"
msgstr "guestfs_cp"

#. type: verbatim
#: ../src/guestfs-actions.pod:2459
#, no-wrap
msgid ""
" int\n"
" guestfs_cp (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"
msgstr ""
" int\n"
" guestfs_cp (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2469 ../src/guestfs-actions.pod:2483
#: ../src/guestfs-actions.pod:2812 ../src/guestfs-actions.pod:2886
#: ../src/guestfs-actions.pod:3081 ../src/guestfs-actions.pod:9266
#: ../src/guestfs-actions.pod:9977
msgid "(Added in 1.0.18)"
msgstr "(Додано у 1.0.18)"

#. type: =head2
#: ../src/guestfs-actions.pod:2471
msgid "guestfs_cp_a"
msgstr "guestfs_cp_a"

#. type: verbatim
#: ../src/guestfs-actions.pod:2473
#, no-wrap
msgid ""
" int\n"
" guestfs_cp_a (guestfs_h *g,\n"
"               const char *src,\n"
"               const char *dest);\n"
"\n"
msgstr ""
" int\n"
" guestfs_cp_a (guestfs_h *g,\n"
"               const char *src,\n"
"               const char *dest);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:2485
msgid "guestfs_cp_r"
msgstr "guestfs_cp_r"

#. type: verbatim
#: ../src/guestfs-actions.pod:2487
#, no-wrap
msgid ""
" int\n"
" guestfs_cp_r (guestfs_h *g,\n"
"               const char *src,\n"
"               const char *dest);\n"
"\n"
msgstr ""
" int\n"
" guestfs_cp_r (guestfs_h *g,\n"
"               const char *src,\n"
"               const char *dest);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2495
msgid ""
"Most users should use C<guestfs_cp_a> instead.  This command is useful when "
"you don't want to preserve permissions, because the target filesystem does "
"not support it (primarily when writing to DOS FAT filesystems)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2502
msgid "(Added in 1.21.38)"
msgstr "(Додано у 1.21.38)"

#. type: =head2
#: ../src/guestfs-actions.pod:2504
msgid "guestfs_cpio_out"
msgstr "guestfs_cpio_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:2506
#, no-wrap
msgid ""
" int\n"
" guestfs_cpio_out (guestfs_h *g,\n"
"                   const char *directory,\n"
"                   const char *cpiofile,\n"
"                   ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_cpio_out (guestfs_h *g,\n"
"                   const char *directory,\n"
"                   const char *cpiofile,\n"
"                   ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:2517
#, no-wrap
msgid ""
" GUESTFS_CPIO_OUT_FORMAT, const char *format,\n"
"\n"
msgstr ""
" GUESTFS_CPIO_OUT_FORMAT, const char *format,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2542
msgid "(Added in 1.27.9)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2544
msgid "guestfs_cpio_out_va"
msgstr "guestfs_cpio_out_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2546
#, no-wrap
msgid ""
" int\n"
" guestfs_cpio_out_va (guestfs_h *g,\n"
"                      const char *directory,\n"
"                      const char *cpiofile,\n"
"                      va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_cpio_out_va (guestfs_h *g,\n"
"                      const char *directory,\n"
"                      const char *cpiofile,\n"
"                      va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2552
msgid "This is the \"va_list variant\" of L</guestfs_cpio_out>."
msgstr "Це «варіант з va_list» L</guestfs_cpio_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:2556
msgid "guestfs_cpio_out_argv"
msgstr "guestfs_cpio_out_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2558
#, no-wrap
msgid ""
" int\n"
" guestfs_cpio_out_argv (guestfs_h *g,\n"
"                        const char *directory,\n"
"                        const char *cpiofile,\n"
"                        const struct guestfs_cpio_out_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_cpio_out_argv (guestfs_h *g,\n"
"                        const char *directory,\n"
"                        const char *cpiofile,\n"
"                        const struct guestfs_cpio_out_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2564
msgid "This is the \"argv variant\" of L</guestfs_cpio_out>."
msgstr "Це «варіант з argv» L</guestfs_cpio_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:2568
msgid "guestfs_dd"
msgstr "guestfs_dd"

#. type: verbatim
#: ../src/guestfs-actions.pod:2570
#, no-wrap
msgid ""
" int\n"
" guestfs_dd (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"
msgstr ""
" int\n"
" guestfs_dd (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2587
msgid ""
"If the destination is a device, it must be as large or larger than the "
"source file or device, otherwise the copy will fail.  This command cannot do "
"partial copies (see C<guestfs_copy_device_to_device>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2596
msgid "guestfs_device_index"
msgstr "guestfs_device_index"

#. type: verbatim
#: ../src/guestfs-actions.pod:2598
#, no-wrap
msgid ""
" int\n"
" guestfs_device_index (guestfs_h *g,\n"
"                       const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_device_index (guestfs_h *g,\n"
"                       const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2605
msgid ""
"Index numbers start from 0.  The named device must exist, for example as a "
"string returned from C<guestfs_list_devices>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2608
msgid "See also C<guestfs_list_devices>, C<guestfs_part_to_dev>."
msgstr "Див. також C<guestfs_list_devices>, C<guestfs_part_to_dev>."

#. type: =head2
#: ../src/guestfs-actions.pod:2614
msgid "guestfs_df"
msgstr "guestfs_df"

#. type: verbatim
#: ../src/guestfs-actions.pod:2616
#, no-wrap
msgid ""
" char *\n"
" guestfs_df (guestfs_h *g);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_df (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2621 ../src/guestfs-actions.pod:2638
msgid ""
"This command is mostly useful for interactive sessions.  It is I<not> "
"intended that you try to parse the output string.  Use C<guestfs_statvfs> "
"from programs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2628 ../src/guestfs-actions.pod:2645
#: ../src/guestfs-actions.pod:2911 ../src/guestfs-actions.pod:4577
#: ../src/guestfs-actions.pod:4601 ../src/guestfs-actions.pod:4973
#: ../src/guestfs-actions.pod:8217 ../src/guestfs-actions.pod:9164
#: ../src/guestfs-actions.pod:12159 ../src/guestfs-actions.pod:12183
#: ../src/guestfs-actions.pod:13242 ../src/guestfs-actions.pod:13255
#: ../src/guestfs-actions.pod:13268
msgid "(Added in 1.0.54)"
msgstr "(Додано у 1.0.54)"

#. type: =head2
#: ../src/guestfs-actions.pod:2630
msgid "guestfs_df_h"
msgstr "guestfs_df_h"

#. type: verbatim
#: ../src/guestfs-actions.pod:2632
#, no-wrap
msgid ""
" char *\n"
" guestfs_df_h (guestfs_h *g);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_df_h (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:2647
msgid "guestfs_disk_create"
msgstr "guestfs_disk_create"

#. type: verbatim
#: ../src/guestfs-actions.pod:2649
#, no-wrap
msgid ""
" int\n"
" guestfs_disk_create (guestfs_h *g,\n"
"                      const char *filename,\n"
"                      const char *format,\n"
"                      int64_t size,\n"
"                      ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_disk_create (guestfs_h *g,\n"
"                      const char *filename,\n"
"                      const char *format,\n"
"                      int64_t size,\n"
"                      ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:2661
#, no-wrap
msgid ""
" GUESTFS_DISK_CREATE_BACKINGFILE, const char *backingfile,\n"
" GUESTFS_DISK_CREATE_BACKINGFORMAT, const char *backingformat,\n"
" GUESTFS_DISK_CREATE_PREALLOCATION, const char *preallocation,\n"
" GUESTFS_DISK_CREATE_COMPAT, const char *compat,\n"
" GUESTFS_DISK_CREATE_CLUSTERSIZE, int clustersize,\n"
"\n"
msgstr ""
" GUESTFS_DISK_CREATE_BACKINGFILE, const char *backingfile,\n"
" GUESTFS_DISK_CREATE_BACKINGFORMAT, const char *backingformat,\n"
" GUESTFS_DISK_CREATE_PREALLOCATION, const char *preallocation,\n"
" GUESTFS_DISK_CREATE_COMPAT, const char *compat,\n"
" GUESTFS_DISK_CREATE_CLUSTERSIZE, int clustersize,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2710
msgid ""
"Note that this call does not add the new disk to the handle.  You may need "
"to call C<guestfs_add_drive_opts> separately."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2715
msgid "(Added in 1.25.31)"
msgstr "(Додано у 1.25.31)"

#. type: =head2
#: ../src/guestfs-actions.pod:2717
msgid "guestfs_disk_create_va"
msgstr "guestfs_disk_create_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2719
#, no-wrap
msgid ""
" int\n"
" guestfs_disk_create_va (guestfs_h *g,\n"
"                         const char *filename,\n"
"                         const char *format,\n"
"                         int64_t size,\n"
"                         va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_disk_create_va (guestfs_h *g,\n"
"                         const char *filename,\n"
"                         const char *format,\n"
"                         int64_t size,\n"
"                         va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2726
msgid "This is the \"va_list variant\" of L</guestfs_disk_create>."
msgstr "Це «варіант з va_list» L</guestfs_disk_create>."

#. type: =head2
#: ../src/guestfs-actions.pod:2730
msgid "guestfs_disk_create_argv"
msgstr "guestfs_disk_create_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2732
#, no-wrap
msgid ""
" int\n"
" guestfs_disk_create_argv (guestfs_h *g,\n"
"                           const char *filename,\n"
"                           const char *format,\n"
"                           int64_t size,\n"
"                           const struct guestfs_disk_create_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_disk_create_argv (guestfs_h *g,\n"
"                           const char *filename,\n"
"                           const char *format,\n"
"                           int64_t size,\n"
"                           const struct guestfs_disk_create_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2739
msgid "This is the \"argv variant\" of L</guestfs_disk_create>."
msgstr "Це «варіант з argv» L</guestfs_disk_create>."

#. type: =head2
#: ../src/guestfs-actions.pod:2743
msgid "guestfs_disk_format"
msgstr "guestfs_disk_format"

#. type: verbatim
#: ../src/guestfs-actions.pod:2745
#, no-wrap
msgid ""
" char *\n"
" guestfs_disk_format (guestfs_h *g,\n"
"                      const char *filename);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_disk_format (guestfs_h *g,\n"
"                      const char *filename);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2761
msgid "(Added in 1.19.38)"
msgstr "(Додано у 1.19.38)"

#. type: =head2
#: ../src/guestfs-actions.pod:2763
msgid "guestfs_disk_has_backing_file"
msgstr "guestfs_disk_has_backing_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:2765
#, no-wrap
msgid ""
" int\n"
" guestfs_disk_has_backing_file (guestfs_h *g,\n"
"                                const char *filename);\n"
"\n"
msgstr ""
" int\n"
" guestfs_disk_has_backing_file (guestfs_h *g,\n"
"                                const char *filename);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2777 ../src/guestfs-actions.pod:2793
msgid "(Added in 1.19.39)"
msgstr "(Додано у 1.19.39)"

#. type: =head2
#: ../src/guestfs-actions.pod:2779
msgid "guestfs_disk_virtual_size"
msgstr "guestfs_disk_virtual_size"

#. type: verbatim
#: ../src/guestfs-actions.pod:2781
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_disk_virtual_size (guestfs_h *g,\n"
"                            const char *filename);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_disk_virtual_size (guestfs_h *g,\n"
"                            const char *filename);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:2795
msgid "guestfs_dmesg"
msgstr "guestfs_dmesg"

#. type: verbatim
#: ../src/guestfs-actions.pod:2797
#, no-wrap
msgid ""
" char *\n"
" guestfs_dmesg (guestfs_h *g);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_dmesg (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2804
msgid ""
"Another way to get the same information is to enable verbose messages with "
"C<guestfs_set_verbose> or by setting the environment variable "
"C<LIBGUESTFS_DEBUG=1> before running the program."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2814
msgid "guestfs_download"
msgstr "guestfs_download"

#. type: verbatim
#: ../src/guestfs-actions.pod:2816
#, no-wrap
msgid ""
" int\n"
" guestfs_download (guestfs_h *g,\n"
"                   const char *remotefilename,\n"
"                   const char *filename);\n"
"\n"
msgstr ""
" int\n"
" guestfs_download (guestfs_h *g,\n"
"                   const char *remotefilename,\n"
"                   const char *filename);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2826
msgid "See also C<guestfs_upload>, C<guestfs_cat>."
msgstr "Див. також C<guestfs_upload>, C<guestfs_cat>."

#. type: =head2
#: ../src/guestfs-actions.pod:2837
msgid "guestfs_download_offset"
msgstr "guestfs_download_offset"

#. type: verbatim
#: ../src/guestfs-actions.pod:2839
#, no-wrap
msgid ""
" int\n"
" guestfs_download_offset (guestfs_h *g,\n"
"                          const char *remotefilename,\n"
"                          const char *filename,\n"
"                          int64_t offset,\n"
"                          int64_t size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_download_offset (guestfs_h *g,\n"
"                          const char *remotefilename,\n"
"                          const char *filename,\n"
"                          int64_t offset,\n"
"                          int64_t size);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2852
msgid ""
"Note that there is no limit on the amount of data that can be downloaded "
"with this call, unlike with C<guestfs_pread>, and this call always reads the "
"full amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2857
msgid "See also C<guestfs_download>, C<guestfs_pread>."
msgstr "Див. також C<guestfs_download>, C<guestfs_pread>."

#. type: textblock
#: ../src/guestfs-actions.pod:2866 ../src/guestfs-actions.pod:12809
msgid "(Added in 1.5.17)"
msgstr "(Додано у 1.5.17)"

#. type: =head2
#: ../src/guestfs-actions.pod:2868
msgid "guestfs_drop_caches"
msgstr "guestfs_drop_caches"

#. type: verbatim
#: ../src/guestfs-actions.pod:2870
#, no-wrap
msgid ""
" int\n"
" guestfs_drop_caches (guestfs_h *g,\n"
"                      int whattodrop);\n"
"\n"
msgstr ""
" int\n"
" guestfs_drop_caches (guestfs_h *g,\n"
"                      int whattodrop);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:2888
msgid "guestfs_du"
msgstr "guestfs_du"

#. type: verbatim
#: ../src/guestfs-actions.pod:2890
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_du (guestfs_h *g,\n"
"             const char *path);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_du (guestfs_h *g,\n"
"             const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:2913
msgid "guestfs_e2fsck"
msgstr "guestfs_e2fsck"

#. type: verbatim
#: ../src/guestfs-actions.pod:2915
#, no-wrap
msgid ""
" int\n"
" guestfs_e2fsck (guestfs_h *g,\n"
"                 const char *device,\n"
"                 ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_e2fsck (guestfs_h *g,\n"
"                 const char *device,\n"
"                 ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:2925
#, no-wrap
msgid ""
" GUESTFS_E2FSCK_CORRECT, int correct,\n"
" GUESTFS_E2FSCK_FORCEALL, int forceall,\n"
"\n"
msgstr ""
" GUESTFS_E2FSCK_CORRECT, int correct,\n"
" GUESTFS_E2FSCK_FORCEALL, int forceall,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2952
msgid "(Added in 1.15.17)"
msgstr "(Додано у 1.15.17)"

#. type: =head2
#: ../src/guestfs-actions.pod:2954
msgid "guestfs_e2fsck_va"
msgstr "guestfs_e2fsck_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:2956
#, no-wrap
msgid ""
" int\n"
" guestfs_e2fsck_va (guestfs_h *g,\n"
"                    const char *device,\n"
"                    va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_e2fsck_va (guestfs_h *g,\n"
"                    const char *device,\n"
"                    va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2961
msgid "This is the \"va_list variant\" of L</guestfs_e2fsck>."
msgstr "Це «варіант з va_list» L</guestfs_e2fsck>."

#. type: =head2
#: ../src/guestfs-actions.pod:2965
msgid "guestfs_e2fsck_argv"
msgstr "guestfs_e2fsck_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:2967
#, no-wrap
msgid ""
" int\n"
" guestfs_e2fsck_argv (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const struct guestfs_e2fsck_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_e2fsck_argv (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const struct guestfs_e2fsck_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2972
msgid "This is the \"argv variant\" of L</guestfs_e2fsck>."
msgstr "Це «варіант з argv» L</guestfs_e2fsck>."

#. type: =head2
#: ../src/guestfs-actions.pod:2976
msgid "guestfs_e2fsck_f"
msgstr "guestfs_e2fsck_f"

#. type: verbatim
#: ../src/guestfs-actions.pod:2978
#, no-wrap
msgid ""
" int\n"
" guestfs_e2fsck_f (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_e2fsck_f (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:2982
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_e2fsck> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2995
msgid "(Added in 1.0.29)"
msgstr "(Додано у 1.0.29)"

#. type: =head2
#: ../src/guestfs-actions.pod:2997
msgid "guestfs_echo_daemon"
msgstr "guestfs_echo_daemon"

#. type: verbatim
#: ../src/guestfs-actions.pod:2999
#, no-wrap
msgid ""
" char *\n"
" guestfs_echo_daemon (guestfs_h *g,\n"
"                      char *const *words);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_echo_daemon (guestfs_h *g,\n"
"                      char *const *words);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3008
msgid "See also C<guestfs_ping_daemon>."
msgstr "Див. також C<guestfs_ping_daemon>."

#. type: textblock
#: ../src/guestfs-actions.pod:3013 ../src/guestfs-actions.pod:4278
#: ../src/guestfs-actions.pod:11505
msgid "(Added in 1.0.69)"
msgstr "(Додано у 1.0.69)"

#. type: =head2
#: ../src/guestfs-actions.pod:3015
msgid "guestfs_egrep"
msgstr "guestfs_egrep"

#. type: verbatim
#: ../src/guestfs-actions.pod:3017
#, no-wrap
msgid ""
" char **\n"
" guestfs_egrep (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_egrep (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3022 ../src/guestfs-actions.pod:3048
#: ../src/guestfs-actions.pod:3204 ../src/guestfs-actions.pod:3230
#: ../src/guestfs-actions.pod:4495 ../src/guestfs-actions.pod:13554
#: ../src/guestfs-actions.pod:13580 ../src/guestfs-actions.pod:13703
#: ../src/guestfs-actions.pod:13729 ../src/guestfs-actions.pod:13782
#: ../src/guestfs-actions.pod:13808
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_grep> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3039 ../src/guestfs-actions.pod:3065
#: ../src/guestfs-actions.pod:3153 ../src/guestfs-actions.pod:3221
#: ../src/guestfs-actions.pod:3247 ../src/guestfs-actions.pod:4406
#: ../src/guestfs-actions.pod:4512 ../src/guestfs-actions.pod:4994
#: ../src/guestfs-actions.pod:5007 ../src/guestfs-actions.pod:5022
#: ../src/guestfs-actions.pod:5066 ../src/guestfs-actions.pod:5088
#: ../src/guestfs-actions.pod:5101 ../src/guestfs-actions.pod:7287
#: ../src/guestfs-actions.pod:7301 ../src/guestfs-actions.pod:7314
#: ../src/guestfs-actions.pod:7328 ../src/guestfs-actions.pod:8895
#: ../src/guestfs-actions.pod:10332 ../src/guestfs-actions.pod:10377
#: ../src/guestfs-actions.pod:11957 ../src/guestfs-actions.pod:11969
#: ../src/guestfs-actions.pod:11982 ../src/guestfs-actions.pod:11995
#: ../src/guestfs-actions.pod:12017 ../src/guestfs-actions.pod:12030
#: ../src/guestfs-actions.pod:12043 ../src/guestfs-actions.pod:12056
#: ../src/guestfs-actions.pod:13571 ../src/guestfs-actions.pod:13597
#: ../src/guestfs-actions.pod:13720 ../src/guestfs-actions.pod:13746
#: ../src/guestfs-actions.pod:13799 ../src/guestfs-actions.pod:13825
msgid "(Added in 1.0.66)"
msgstr "(Додано у 1.0.66)"

#. type: =head2
#: ../src/guestfs-actions.pod:3041
msgid "guestfs_egrepi"
msgstr "guestfs_egrepi"

#. type: verbatim
#: ../src/guestfs-actions.pod:3043
#, no-wrap
msgid ""
" char **\n"
" guestfs_egrepi (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_egrepi (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:3067
msgid "guestfs_equal"
msgstr "guestfs_equal"

#. type: verbatim
#: ../src/guestfs-actions.pod:3069
#, no-wrap
msgid ""
" int\n"
" guestfs_equal (guestfs_h *g,\n"
"                const char *file1,\n"
"                const char *file2);\n"
"\n"
msgstr ""
" int\n"
" guestfs_equal (guestfs_h *g,\n"
"                const char *file1,\n"
"                const char *file2);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:3083
msgid "guestfs_exists"
msgstr "guestfs_exists"

#. type: verbatim
#: ../src/guestfs-actions.pod:3085
#, no-wrap
msgid ""
" int\n"
" guestfs_exists (guestfs_h *g,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_exists (guestfs_h *g,\n"
"                 const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3092
msgid "See also C<guestfs_is_file>, C<guestfs_is_dir>, C<guestfs_stat>."
msgstr "Див. також C<guestfs_is_file>, C<guestfs_is_dir>, C<guestfs_stat>."

#. type: =head2
#: ../src/guestfs-actions.pod:3098
msgid "guestfs_extlinux"
msgstr "guestfs_extlinux"

#. type: verbatim
#: ../src/guestfs-actions.pod:3100
#, no-wrap
msgid ""
" int\n"
" guestfs_extlinux (guestfs_h *g,\n"
"                   const char *directory);\n"
"\n"
msgstr ""
" int\n"
" guestfs_extlinux (guestfs_h *g,\n"
"                   const char *directory);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3104
msgid ""
"Install the SYSLINUX bootloader on the device mounted at C<directory>.  "
"Unlike C<guestfs_syslinux> which requires a FAT filesystem, this can be used "
"on an ext2/3/4 or btrfs filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3111
msgid ""
"You also have to mark the partition as \"active"
"\" (C<guestfs_part_set_bootable>) and a Master Boot Record must be installed "
"(eg. using C<guestfs_pwrite_device>) on the first sector of the whole disk.  "
"The SYSLINUX package comes with some suitable Master Boot Records.  See the "
"L<extlinux(1)> man page for further information."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3123
msgid "See also C<guestfs_syslinux>."
msgstr "Див. також C<guestfs_syslinux>."

#. type: textblock
#: ../src/guestfs-actions.pod:3127 ../src/guestfs-actions.pod:12119
msgid "(Added in 1.21.27)"
msgstr "(Додано у 1.21.27)"

#. type: =head2
#: ../src/guestfs-actions.pod:3129
msgid "guestfs_fallocate"
msgstr "guestfs_fallocate"

#. type: verbatim
#: ../src/guestfs-actions.pod:3131
#, no-wrap
msgid ""
" int\n"
" guestfs_fallocate (guestfs_h *g,\n"
"                    const char *path,\n"
"                    int len);\n"
"\n"
msgstr ""
" int\n"
" guestfs_fallocate (guestfs_h *g,\n"
"                    const char *path,\n"
"                    int len);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3136
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_fallocate64> "
"call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3155
msgid "guestfs_fallocate64"
msgstr "guestfs_fallocate64"

#. type: verbatim
#: ../src/guestfs-actions.pod:3157
#, no-wrap
msgid ""
" int\n"
" guestfs_fallocate64 (guestfs_h *g,\n"
"                      const char *path,\n"
"                      int64_t len);\n"
"\n"
msgstr ""
" int\n"
" guestfs_fallocate64 (guestfs_h *g,\n"
"                      const char *path,\n"
"                      int64_t len);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3166
msgid ""
"Note that this call allocates disk blocks for the file.  To create a sparse "
"file use C<guestfs_truncate_size> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3169
msgid ""
"The deprecated call C<guestfs_fallocate> does the same, but owing to an "
"oversight it only allowed 30 bit lengths to be specified, effectively "
"limiting the maximum size of files created through that call to 1GB."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3180
msgid "(Added in 1.3.17)"
msgstr "(Додано у 1.3.17)"

#. type: =head2
#: ../src/guestfs-actions.pod:3182
msgid "guestfs_feature_available"
msgstr "guestfs_feature_available"

#. type: verbatim
#: ../src/guestfs-actions.pod:3184
#, no-wrap
msgid ""
" int\n"
" guestfs_feature_available (guestfs_h *g,\n"
"                            char *const *groups);\n"
"\n"
msgstr ""
" int\n"
" guestfs_feature_available (guestfs_h *g,\n"
"                            char *const *groups);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3188
msgid ""
"This is the same as C<guestfs_available>, but unlike that call it returns a "
"simple true/false boolean result, instead of throwing an exception if a "
"feature is not found.  For other documentation see C<guestfs_available>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3195 ../src/guestfs-actions.pod:3770
#: ../src/guestfs-actions.pod:10928
msgid "(Added in 1.21.26)"
msgstr "(Додано у 1.21.26)"

#. type: =head2
#: ../src/guestfs-actions.pod:3197
msgid "guestfs_fgrep"
msgstr "guestfs_fgrep"

#. type: verbatim
#: ../src/guestfs-actions.pod:3199
#, no-wrap
msgid ""
" char **\n"
" guestfs_fgrep (guestfs_h *g,\n"
"                const char *pattern,\n"
"                const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_fgrep (guestfs_h *g,\n"
"                const char *pattern,\n"
"                const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:3223
msgid "guestfs_fgrepi"
msgstr "guestfs_fgrepi"

#. type: verbatim
#: ../src/guestfs-actions.pod:3225
#, no-wrap
msgid ""
" char **\n"
" guestfs_fgrepi (guestfs_h *g,\n"
"                 const char *pattern,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_fgrepi (guestfs_h *g,\n"
"                 const char *pattern,\n"
"                 const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:3249
msgid "guestfs_file"
msgstr "guestfs_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:3251
#, no-wrap
msgid ""
" char *\n"
" guestfs_file (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_file (guestfs_h *g,\n"
"               const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3269
msgid ""
"See also: L<file(1)>, C<guestfs_vfs_type>, C<guestfs_lstat>, "
"C<guestfs_is_file>, C<guestfs_is_blockdev> (etc), C<guestfs_is_zero>."
msgstr ""
"Див. також: L<file(1)>, C<guestfs_vfs_type>, C<guestfs_lstat>, "
"C<guestfs_is_file>, C<guestfs_is_blockdev> (тощо), C<guestfs_is_zero>."

#. type: =head2
#: ../src/guestfs-actions.pod:3277
msgid "guestfs_file_architecture"
msgstr "guestfs_file_architecture"

#. type: verbatim
#: ../src/guestfs-actions.pod:3279
#, no-wrap
msgid ""
" char *\n"
" guestfs_file_architecture (guestfs_h *g,\n"
"                            const char *filename);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_file_architecture (guestfs_h *g,\n"
"                            const char *filename);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3395 ../src/guestfs-actions.pod:3590
#: ../src/guestfs-actions.pod:3607 ../src/guestfs-actions.pod:5121
#: ../src/guestfs-actions.pod:5251 ../src/guestfs-actions.pod:5317
#: ../src/guestfs-actions.pod:5504 ../src/guestfs-actions.pod:5522
#: ../src/guestfs-actions.pod:5562 ../src/guestfs-actions.pod:5638
#: ../src/guestfs-actions.pod:5751 ../src/guestfs-actions.pod:6105
#: ../src/guestfs-actions.pod:6472
msgid "(Added in 1.5.3)"
msgstr "(Додано у 1.5.3)"

#. type: =head2
#: ../src/guestfs-actions.pod:3397
msgid "guestfs_filesize"
msgstr "guestfs_filesize"

#. type: verbatim
#: ../src/guestfs-actions.pod:3399
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_filesize (guestfs_h *g,\n"
"                   const char *file);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_filesize (guestfs_h *g,\n"
"                   const char *file);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3405
msgid ""
"To get other stats about a file, use C<guestfs_stat>, C<guestfs_lstat>, "
"C<guestfs_is_dir>, C<guestfs_is_file> etc.  To get the size of block "
"devices, use C<guestfs_blockdev_getsize64>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3411
msgid "(Added in 1.0.82)"
msgstr "(Додано у 1.0.82)"

#. type: =head2
#: ../src/guestfs-actions.pod:3413
msgid "guestfs_filesystem_available"
msgstr "guestfs_filesystem_available"

#. type: verbatim
#: ../src/guestfs-actions.pod:3415
#, no-wrap
msgid ""
" int\n"
" guestfs_filesystem_available (guestfs_h *g,\n"
"                               const char *filesystem);\n"
"\n"
msgstr ""
" int\n"
" guestfs_filesystem_available (guestfs_h *g,\n"
"                               const char *filesystem);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3423
msgid "You must call C<guestfs_launch> before using this command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3432
msgid ""
"See also C<guestfs_available>, C<guestfs_feature_available>, L<guestfs(3)/"
"AVAILABILITY>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3437
msgid "(Added in 1.19.5)"
msgstr "(Додано у 1.19.5)"

#. type: =head2
#: ../src/guestfs-actions.pod:3439
msgid "guestfs_fill"
msgstr "guestfs_fill"

#. type: verbatim
#: ../src/guestfs-actions.pod:3441
#, no-wrap
msgid ""
" int\n"
" guestfs_fill (guestfs_h *g,\n"
"               int c,\n"
"               int len,\n"
"               const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_fill (guestfs_h *g,\n"
"               int c,\n"
"               int len,\n"
"               const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3451
msgid ""
"To fill a file with zero bytes (sparsely), it is much more efficient to use "
"C<guestfs_truncate_size>.  To create a file with a pattern of repeating "
"bytes use C<guestfs_fill_pattern>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3463
msgid "(Added in 1.0.79)"
msgstr "(Додано у 1.0.79)"

#. type: =head2
#: ../src/guestfs-actions.pod:3465
msgid "guestfs_fill_dir"
msgstr "guestfs_fill_dir"

#. type: verbatim
#: ../src/guestfs-actions.pod:3467
#, no-wrap
msgid ""
" int\n"
" guestfs_fill_dir (guestfs_h *g,\n"
"                   const char *dir,\n"
"                   int nr);\n"
"\n"
msgstr ""
" int\n"
" guestfs_fill_dir (guestfs_h *g,\n"
"                   const char *dir,\n"
"                   int nr);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3479 ../src/guestfs-actions.pod:7378
msgid "(Added in 1.19.32)"
msgstr "(Додано у 1.19.32)"

#. type: =head2
#: ../src/guestfs-actions.pod:3481
msgid "guestfs_fill_pattern"
msgstr "guestfs_fill_pattern"

#. type: verbatim
#: ../src/guestfs-actions.pod:3483
#, no-wrap
msgid ""
" int\n"
" guestfs_fill_pattern (guestfs_h *g,\n"
"                       const char *pattern,\n"
"                       int len,\n"
"                       const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_fill_pattern (guestfs_h *g,\n"
"                       const char *pattern,\n"
"                       int len,\n"
"                       const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3489
msgid ""
"This function is like C<guestfs_fill> except that it creates a new file of "
"length C<len> containing the repeating pattern of bytes in C<pattern>.  The "
"pattern is truncated if necessary to ensure the length of the file is "
"exactly C<len> bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3501
msgid "(Added in 1.3.12)"
msgstr "(Додано у 1.3.12)"

#. type: =head2
#: ../src/guestfs-actions.pod:3503
msgid "guestfs_find"
msgstr "guestfs_find"

#. type: verbatim
#: ../src/guestfs-actions.pod:3505
#, no-wrap
msgid ""
" char **\n"
" guestfs_find (guestfs_h *g,\n"
"               const char *directory);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_find (guestfs_h *g,\n"
"               const char *directory);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3521
msgid ""
"then the returned list from C<guestfs_find> C</tmp> would be 4 elements:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3538 ../src/guestfs-actions.pod:7816
#: ../src/guestfs-actions.pod:10493
msgid "(Added in 1.0.27)"
msgstr "(Додано у 1.0.27)"

#. type: =head2
#: ../src/guestfs-actions.pod:3540
msgid "guestfs_find0"
msgstr "guestfs_find0"

#. type: verbatim
#: ../src/guestfs-actions.pod:3542
#, no-wrap
msgid ""
" int\n"
" guestfs_find0 (guestfs_h *g,\n"
"                const char *directory,\n"
"                const char *files);\n"
"\n"
msgstr ""
" int\n"
" guestfs_find0 (guestfs_h *g,\n"
"                const char *directory,\n"
"                const char *files);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3551
msgid ""
"This command works the same way as C<guestfs_find> with the following "
"exceptions:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3573
msgid "(Added in 1.0.74)"
msgstr "(Додано у 1.0.74)"

#. type: =head2
#: ../src/guestfs-actions.pod:3575
msgid "guestfs_findfs_label"
msgstr "guestfs_findfs_label"

#. type: verbatim
#: ../src/guestfs-actions.pod:3577
#, no-wrap
msgid ""
" char *\n"
" guestfs_findfs_label (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_findfs_label (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3585
msgid "To find the label of a filesystem, use C<guestfs_vfs_label>."
msgstr ""
"Щоб визначити мітку файлової системи, скористайтеся C<guestfs_vfs_label>."

#. type: =head2
#: ../src/guestfs-actions.pod:3592
msgid "guestfs_findfs_uuid"
msgstr "guestfs_findfs_uuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:3594
#, no-wrap
msgid ""
" char *\n"
" guestfs_findfs_uuid (guestfs_h *g,\n"
"                      const char *uuid);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_findfs_uuid (guestfs_h *g,\n"
"                      const char *uuid);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3602
msgid "To find the UUID of a filesystem, use C<guestfs_vfs_uuid>."
msgstr ""
"Щоб визначити UUID файлової системи, скористайтеся C<guestfs_vfs_uuid>."

#. type: =head2
#: ../src/guestfs-actions.pod:3609
msgid "guestfs_fsck"
msgstr "guestfs_fsck"

#. type: verbatim
#: ../src/guestfs-actions.pod:3611
#, no-wrap
msgid ""
" int\n"
" guestfs_fsck (guestfs_h *g,\n"
"               const char *fstype,\n"
"               const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_fsck (guestfs_h *g,\n"
"               const char *fstype,\n"
"               const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3646 ../src/guestfs-actions.pod:13625
msgid "(Added in 1.0.16)"
msgstr "(Додано у 1.0.16)"

#. type: =head2
#: ../src/guestfs-actions.pod:3648
msgid "guestfs_fstrim"
msgstr "guestfs_fstrim"

#. type: verbatim
#: ../src/guestfs-actions.pod:3650
#, no-wrap
msgid ""
" int\n"
" guestfs_fstrim (guestfs_h *g,\n"
"                 const char *mountpoint,\n"
"                 ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_fstrim (guestfs_h *g,\n"
"                 const char *mountpoint,\n"
"                 ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:3660
#, no-wrap
msgid ""
" GUESTFS_FSTRIM_OFFSET, int64_t offset,\n"
" GUESTFS_FSTRIM_LENGTH, int64_t length,\n"
" GUESTFS_FSTRIM_MINIMUMFREEEXTENT, int64_t minimumfreeextent,\n"
"\n"
msgstr ""
" GUESTFS_FSTRIM_OFFSET, int64_t offset,\n"
" GUESTFS_FSTRIM_LENGTH, int64_t length,\n"
" GUESTFS_FSTRIM_MINIMUMFREEEXTENT, int64_t minimumfreeextent,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3677
msgid ""
"See also C<guestfs_zero_free_space>.  That is a slightly different operation "
"that turns free space in the filesystem into zeroes.  It is valid to call "
"C<guestfs_fstrim> either instead of, or after calling "
"C<guestfs_zero_free_space>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3684
msgid "(Added in 1.19.6)"
msgstr "(Додано у 1.19.6)"

#. type: =head2
#: ../src/guestfs-actions.pod:3686
msgid "guestfs_fstrim_va"
msgstr "guestfs_fstrim_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:3688
#, no-wrap
msgid ""
" int\n"
" guestfs_fstrim_va (guestfs_h *g,\n"
"                    const char *mountpoint,\n"
"                    va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_fstrim_va (guestfs_h *g,\n"
"                    const char *mountpoint,\n"
"                    va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3693
msgid "This is the \"va_list variant\" of L</guestfs_fstrim>."
msgstr "Це «варіант з va_list» L</guestfs_fstrim>."

#. type: =head2
#: ../src/guestfs-actions.pod:3697
msgid "guestfs_fstrim_argv"
msgstr "guestfs_fstrim_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:3699
#, no-wrap
msgid ""
" int\n"
" guestfs_fstrim_argv (guestfs_h *g,\n"
"                      const char *mountpoint,\n"
"                      const struct guestfs_fstrim_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_fstrim_argv (guestfs_h *g,\n"
"                      const char *mountpoint,\n"
"                      const struct guestfs_fstrim_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3704
msgid "This is the \"argv variant\" of L</guestfs_fstrim>."
msgstr "Це «варіант з argv» L</guestfs_fstrim>."

#. type: =head2
#: ../src/guestfs-actions.pod:3708
msgid "guestfs_get_append"
msgstr "guestfs_get_append"

#. type: verbatim
#: ../src/guestfs-actions.pod:3710
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_append (guestfs_h *g);\n"
"\n"
msgstr ""
" const char *\n"
" guestfs_get_append (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3718
msgid ""
"This function returns a string which may be NULL.  There is no way to return "
"an error from this function.  The string is owned by the guest handle and "
"must I<not> be freed."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3722 ../src/guestfs-actions.pod:10096
#: ../src/guestfs-actions.pod:10871 ../src/guestfs-actions.pod:11676
#: ../src/guestfs-actions.pod:11695 ../src/guestfs-actions.pod:11711
#: ../src/guestfs-actions.pod:11735 ../src/guestfs-actions.pod:13005
#: ../src/guestfs-actions.pod:13020 ../src/guestfs-actions.pod:13694
msgid "(Added in 1.0.26)"
msgstr "(Додано у 1.0.26)"

#. type: =head2
#: ../src/guestfs-actions.pod:3724
msgid "guestfs_get_attach_method"
msgstr "guestfs_get_attach_method"

#. type: verbatim
#: ../src/guestfs-actions.pod:3726
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_attach_method (guestfs_h *g);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_attach_method (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3729
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_get_backend> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3738 ../src/guestfs-actions.pod:3765
msgid "See C<guestfs_set_backend> and L<guestfs(3)/BACKEND>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3743 ../src/guestfs-actions.pod:10893
msgid "(Added in 1.9.8)"
msgstr "(Додано у 1.9.8)"

#. type: =head2
#: ../src/guestfs-actions.pod:3745
msgid "guestfs_get_autosync"
msgstr "guestfs_get_autosync"

#. type: verbatim
#: ../src/guestfs-actions.pod:3747
#, no-wrap
msgid ""
" int\n"
" guestfs_get_autosync (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_autosync (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:3756
msgid "guestfs_get_backend"
msgstr "guestfs_get_backend"

#. type: verbatim
#: ../src/guestfs-actions.pod:3758
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_backend (guestfs_h *g);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_backend (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:3772
msgid "guestfs_get_backend_setting"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3774
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_backend_setting (guestfs_h *g,\n"
"                              const char *name);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3783
msgid ""
"If no such setting is found, this function throws an error.  The errno (see "
"C<guestfs_last_errno>) will be C<ESRCH> in this case."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3794
msgid "guestfs_get_backend_settings"
msgstr "guestfs_get_backend_settings"

#. type: verbatim
#: ../src/guestfs-actions.pod:3796
#, no-wrap
msgid ""
" char **\n"
" guestfs_get_backend_settings (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_get_backend_settings (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3801
msgid ""
"This call returns all backend settings strings.  If you want to find a "
"single backend setting, see C<guestfs_get_backend_setting>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3810 ../src/guestfs-actions.pod:10972
msgid "(Added in 1.25.24)"
msgstr "(Додано у 1.25.24)"

#. type: =head2
#: ../src/guestfs-actions.pod:3812
msgid "guestfs_get_cachedir"
msgstr "guestfs_get_cachedir"

#. type: verbatim
#: ../src/guestfs-actions.pod:3814
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_cachedir (guestfs_h *g);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_cachedir (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3822 ../src/guestfs-actions.pod:4267
#: ../src/guestfs-actions.pod:10992 ../src/guestfs-actions.pod:11481
msgid "(Added in 1.19.58)"
msgstr "(Додано у 1.19.58)"

#. type: =head2
#: ../src/guestfs-actions.pod:3824
msgid "guestfs_get_direct"
msgstr "guestfs_get_direct"

#. type: verbatim
#: ../src/guestfs-actions.pod:3826
#, no-wrap
msgid ""
" int\n"
" guestfs_get_direct (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_direct (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3833 ../src/guestfs-actions.pod:11015
msgid "(Added in 1.0.72)"
msgstr "(Додано у 1.0.72)"

#. type: =head2
#: ../src/guestfs-actions.pod:3835
msgid "guestfs_get_e2attrs"
msgstr "guestfs_get_e2attrs"

#. type: verbatim
#: ../src/guestfs-actions.pod:3837
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_e2attrs (guestfs_h *g,\n"
"                      const char *file);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_e2attrs (guestfs_h *g,\n"
"                      const char *file);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3944
msgid "See also C<guestfs_set_e2attrs>."
msgstr "Див. також C<guestfs_set_e2attrs>."

#. type: textblock
#: ../src/guestfs-actions.pod:3946
msgid ""
"Don't confuse these attributes with extended attributes (see "
"C<guestfs_getxattr>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3952 ../src/guestfs-actions.pod:3972
#: ../src/guestfs-actions.pod:11054 ../src/guestfs-actions.pod:11093
msgid "(Added in 1.17.31)"
msgstr "(Додано у 1.17.31)"

#. type: =head2
#: ../src/guestfs-actions.pod:3954
msgid "guestfs_get_e2generation"
msgstr "guestfs_get_e2generation"

#. type: verbatim
#: ../src/guestfs-actions.pod:3956
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_get_e2generation (guestfs_h *g,\n"
"                           const char *file);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_get_e2generation (guestfs_h *g,\n"
"                           const char *file);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3968
msgid "See C<guestfs_set_e2generation>."
msgstr "Див. C<guestfs_set_e2generation>."

#. type: =head2
#: ../src/guestfs-actions.pod:3974
msgid "guestfs_get_e2label"
msgstr "guestfs_get_e2label"

#. type: verbatim
#: ../src/guestfs-actions.pod:3976
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_e2label (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_e2label (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:3980
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_vfs_label> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3993 ../src/guestfs-actions.pod:4014
#: ../src/guestfs-actions.pod:11118 ../src/guestfs-actions.pod:11144
msgid "(Added in 1.0.15)"
msgstr "(Додано у 1.0.15)"

#. type: =head2
#: ../src/guestfs-actions.pod:3995
msgid "guestfs_get_e2uuid"
msgstr "guestfs_get_e2uuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:3997
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_e2uuid (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_e2uuid (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4001
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_vfs_uuid> "
"call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4016
msgid "guestfs_get_hv"
msgstr "guestfs_get_hv"

#. type: verbatim
#: ../src/guestfs-actions.pod:4018
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_hv (guestfs_h *g);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_hv (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4029 ../src/guestfs-actions.pod:11173
msgid "(Added in 1.23.17)"
msgstr "(Додано у 1.23.17)"

#. type: =head2
#: ../src/guestfs-actions.pod:4031
msgid "guestfs_get_libvirt_requested_credential_challenge"
msgstr "guestfs_get_libvirt_requested_credential_challenge"

#. type: verbatim
#: ../src/guestfs-actions.pod:4033
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_libvirt_requested_credential_challenge (guestfs_h *g,\n"
"                                                     int index);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_libvirt_requested_credential_challenge (guestfs_h *g,\n"
"                                                     int index);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4046 ../src/guestfs-actions.pod:4063
#: ../src/guestfs-actions.pod:4080 ../src/guestfs-actions.pod:4100
#: ../src/guestfs-actions.pod:11232 ../src/guestfs-actions.pod:11275
msgid "(Added in 1.19.52)"
msgstr "(Додано у 1.19.52)"

#. type: =head2
#: ../src/guestfs-actions.pod:4048
msgid "guestfs_get_libvirt_requested_credential_defresult"
msgstr "guestfs_get_libvirt_requested_credential_defresult"

#. type: verbatim
#: ../src/guestfs-actions.pod:4050
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_libvirt_requested_credential_defresult (guestfs_h *g,\n"
"                                                     int index);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_libvirt_requested_credential_defresult (guestfs_h *g,\n"
"                                                     int index);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4065
msgid "guestfs_get_libvirt_requested_credential_prompt"
msgstr "guestfs_get_libvirt_requested_credential_prompt"

#. type: verbatim
#: ../src/guestfs-actions.pod:4067
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_libvirt_requested_credential_prompt (guestfs_h *g,\n"
"                                                  int index);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_libvirt_requested_credential_prompt (guestfs_h *g,\n"
"                                                  int index);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4082
msgid "guestfs_get_libvirt_requested_credentials"
msgstr "guestfs_get_libvirt_requested_credentials"

#. type: verbatim
#: ../src/guestfs-actions.pod:4084
#, no-wrap
msgid ""
" char **\n"
" guestfs_get_libvirt_requested_credentials (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_get_libvirt_requested_credentials (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4090
msgid ""
"Return the list of credentials requested by libvirt.  Possible values are a "
"subset of the strings provided when you called "
"C<guestfs_set_libvirt_supported_credentials>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4102
msgid "guestfs_get_memsize"
msgstr "guestfs_get_memsize"

#. type: verbatim
#: ../src/guestfs-actions.pod:4104
#, no-wrap
msgid ""
" int\n"
" guestfs_get_memsize (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_memsize (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4110
msgid ""
"If C<guestfs_set_memsize> was not called on this handle, and if "
"C<LIBGUESTFS_MEMSIZE> was not set, then this returns the compiled-in default "
"value for memsize."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4119 ../src/guestfs-actions.pod:8462
#: ../src/guestfs-actions.pod:8739 ../src/guestfs-actions.pod:8758
#: ../src/guestfs-actions.pod:8777 ../src/guestfs-actions.pod:8789
#: ../src/guestfs-actions.pod:8860 ../src/guestfs-actions.pod:8880
#: ../src/guestfs-actions.pod:10319 ../src/guestfs-actions.pod:11296
#: ../src/guestfs-actions.pod:11646 ../src/guestfs-actions.pod:12639
msgid "(Added in 1.0.55)"
msgstr "(Додано у 1.0.55)"

#. type: =head2
#: ../src/guestfs-actions.pod:4121
msgid "guestfs_get_network"
msgstr "guestfs_get_network"

#. type: verbatim
#: ../src/guestfs-actions.pod:4123
#, no-wrap
msgid ""
" int\n"
" guestfs_get_network (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_network (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4130 ../src/guestfs-actions.pod:11315
msgid "(Added in 1.5.4)"
msgstr "(Додано у 1.5.4)"

#. type: =head2
#: ../src/guestfs-actions.pod:4132
msgid "guestfs_get_path"
msgstr "guestfs_get_path"

#. type: verbatim
#: ../src/guestfs-actions.pod:4134
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_path (guestfs_h *g);\n"
"\n"
msgstr ""
" const char *\n"
" guestfs_get_path (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4142 ../src/guestfs-actions.pod:4179
#: ../src/guestfs-actions.pod:4201
msgid ""
"This function returns a string, or NULL on error.  The string is owned by "
"the guest handle and must I<not> be freed."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4147
msgid "guestfs_get_pgroup"
msgstr "guestfs_get_pgroup"

#. type: verbatim
#: ../src/guestfs-actions.pod:4149
#, no-wrap
msgid ""
" int\n"
" guestfs_get_pgroup (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_pgroup (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4156 ../src/guestfs-actions.pod:11353
#: ../src/guestfs-actions.pod:12845 ../src/guestfs-actions.pod:13321
msgid "(Added in 1.11.18)"
msgstr "(Додано у 1.11.18)"

#. type: =head2
#: ../src/guestfs-actions.pod:4158
msgid "guestfs_get_pid"
msgstr "guestfs_get_pid"

#. type: verbatim
#: ../src/guestfs-actions.pod:4160
#, no-wrap
msgid ""
" int\n"
" guestfs_get_pid (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_pid (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4170
msgid "(Added in 1.0.56)"
msgstr "(Додано у 1.0.56)"

#. type: =head2
#: ../src/guestfs-actions.pod:4172
msgid "guestfs_get_program"
msgstr "guestfs_get_program"

#. type: verbatim
#: ../src/guestfs-actions.pod:4174
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_program (guestfs_h *g);\n"
"\n"
msgstr ""
" const char *\n"
" guestfs_get_program (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4177
msgid "Get the program name.  See C<guestfs_set_program>."
msgstr "Отримати назву програми. Див. C<guestfs_set_program>."

#. type: textblock
#: ../src/guestfs-actions.pod:4182 ../src/guestfs-actions.pod:11370
msgid "(Added in 1.21.29)"
msgstr "(Додано у 1.21.29)"

#. type: =head2
#: ../src/guestfs-actions.pod:4184
msgid "guestfs_get_qemu"
msgstr "guestfs_get_qemu"

#. type: verbatim
#: ../src/guestfs-actions.pod:4186
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_qemu (guestfs_h *g);\n"
"\n"
msgstr ""
" const char *\n"
" guestfs_get_qemu (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4189
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_get_hv> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4204 ../src/guestfs-actions.pod:11405
msgid "(Added in 1.0.6)"
msgstr "(Додано у 1.0.6)"

#. type: =head2
#: ../src/guestfs-actions.pod:4206
msgid "guestfs_get_recovery_proc"
msgstr "guestfs_get_recovery_proc"

#. type: verbatim
#: ../src/guestfs-actions.pod:4208
#, no-wrap
msgid ""
" int\n"
" guestfs_get_recovery_proc (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_recovery_proc (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4215 ../src/guestfs-actions.pod:6843
#: ../src/guestfs-actions.pod:7456 ../src/guestfs-actions.pod:7911
#: ../src/guestfs-actions.pod:8174 ../src/guestfs-actions.pod:10003
#: ../src/guestfs-actions.pod:10363 ../src/guestfs-actions.pod:11429
#: ../src/guestfs-actions.pod:12406 ../src/guestfs-actions.pod:12426
#: ../src/guestfs-actions.pod:12876
msgid "(Added in 1.0.77)"
msgstr "(Додано у 1.0.77)"

#. type: =head2
#: ../src/guestfs-actions.pod:4217
msgid "guestfs_get_selinux"
msgstr "guestfs_get_selinux"

#. type: verbatim
#: ../src/guestfs-actions.pod:4219
#, no-wrap
msgid ""
" int\n"
" guestfs_get_selinux (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_selinux (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4222
msgid ""
"This returns the current setting of the selinux flag which is passed to the "
"appliance at boot time.  See C<guestfs_set_selinux>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4230 ../src/guestfs-actions.pod:4316
#: ../src/guestfs-actions.pod:11448 ../src/guestfs-actions.pod:11556
msgid "(Added in 1.0.67)"
msgstr "(Додано у 1.0.67)"

#. type: =head2
#: ../src/guestfs-actions.pod:4232
msgid "guestfs_get_smp"
msgstr "guestfs_get_smp"

#. type: verbatim
#: ../src/guestfs-actions.pod:4234
#, no-wrap
msgid ""
" int\n"
" guestfs_get_smp (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_smp (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4243
msgid "guestfs_get_state"
msgstr "guestfs_get_state"

#. type: verbatim
#: ../src/guestfs-actions.pod:4245
#, no-wrap
msgid ""
" int\n"
" guestfs_get_state (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_state (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4248
msgid ""
"This returns the current state as an opaque integer.  This is only useful "
"for printing debug and internal error messages."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4257
msgid "guestfs_get_tmpdir"
msgstr "guestfs_get_tmpdir"

#. type: verbatim
#: ../src/guestfs-actions.pod:4259
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_tmpdir (guestfs_h *g);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_get_tmpdir (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4269
msgid "guestfs_get_trace"
msgstr "guestfs_get_trace"

#. type: verbatim
#: ../src/guestfs-actions.pod:4271
#, no-wrap
msgid ""
" int\n"
" guestfs_get_trace (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_trace (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4280
msgid "guestfs_get_umask"
msgstr "guestfs_get_umask"

#. type: verbatim
#: ../src/guestfs-actions.pod:4282
#, no-wrap
msgid ""
" int\n"
" guestfs_get_umask (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_umask (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4285
msgid ""
"Return the current umask.  By default the umask is C<022> unless it has been "
"set by calling C<guestfs_umask>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4292
msgid "guestfs_get_verbose"
msgstr "guestfs_get_verbose"

#. type: verbatim
#: ../src/guestfs-actions.pod:4294
#, no-wrap
msgid ""
" int\n"
" guestfs_get_verbose (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_get_verbose (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4303
msgid "guestfs_getcon"
msgstr "guestfs_getcon"

#. type: verbatim
#: ../src/guestfs-actions.pod:4305
#, no-wrap
msgid ""
" char *\n"
" guestfs_getcon (guestfs_h *g);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_getcon (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4310
msgid ""
"See the documentation about SELINUX in L<guestfs(3)>, and C<guestfs_setcon>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4318
msgid "guestfs_getxattr"
msgstr "guestfs_getxattr"

#. type: verbatim
#: ../src/guestfs-actions.pod:4320
#, no-wrap
msgid ""
" char *\n"
" guestfs_getxattr (guestfs_h *g,\n"
"                   const char *path,\n"
"                   const char *name,\n"
"                   size_t *size_r);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_getxattr (guestfs_h *g,\n"
"                   const char *path,\n"
"                   const char *name,\n"
"                   size_t *size_r);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4326
msgid ""
"Get a single extended attribute from file C<path> named C<name>.  This call "
"follows symlinks.  If you want to lookup an extended attribute for the "
"symlink itself, use C<guestfs_lgetxattr>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4330 ../src/guestfs-actions.pod:7027
msgid ""
"Normally it is better to get all extended attributes from a file in one go "
"by calling C<guestfs_getxattrs>.  However some Linux filesystem "
"implementations are buggy and do not provide a way to list out attributes.  "
"For these filesystems (notably ntfs-3g)  you have to know the names of the "
"extended attributes you want in advance and call this function."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4340
msgid "See also: C<guestfs_getxattrs>, C<guestfs_lgetxattr>, L<attr(5)>."
msgstr "Див. також C<guestfs_getxattrs>, C<guestfs_lgetxattr>, L<attr(5)>."

#. type: textblock
#: ../src/guestfs-actions.pod:4342 ../src/guestfs-actions.pod:4918
#: ../src/guestfs-actions.pod:4944 ../src/guestfs-actions.pod:5452
#: ../src/guestfs-actions.pod:7039 ../src/guestfs-actions.pod:9996
#: ../src/guestfs-actions.pod:10022 ../src/guestfs-actions.pod:10224
#: ../src/guestfs-actions.pod:13092
msgid ""
"This function returns a buffer, or NULL on error.  The size of the returned "
"buffer is written to C<*size_r>.  I<The caller must free the returned buffer "
"after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4346 ../src/guestfs-actions.pod:7043
msgid "(Added in 1.7.24)"
msgstr "(Додано у 1.7.24)"

#. type: =head2
#: ../src/guestfs-actions.pod:4348
msgid "guestfs_getxattrs"
msgstr "guestfs_getxattrs"

#. type: verbatim
#: ../src/guestfs-actions.pod:4350
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_getxattrs (guestfs_h *g,\n"
"                    const char *path);\n"
"\n"
msgstr ""
" struct guestfs_xattr_list *\n"
" guestfs_getxattrs (guestfs_h *g,\n"
"                    const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4360
msgid "See also: C<guestfs_lgetxattrs>, L<attr(5)>."
msgstr "Див. також C<guestfs_lgetxattrs>, L<attr(5)>."

#. type: textblock
#: ../src/guestfs-actions.pod:4362 ../src/guestfs-actions.pod:6678
#: ../src/guestfs-actions.pod:7055 ../src/guestfs-actions.pod:7907
msgid ""
"This function returns a C<struct guestfs_xattr_list *>, or NULL if there was "
"an error.  I<The caller must call C<guestfs_free_xattr_list> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4366 ../src/guestfs-actions.pod:7059
#: ../src/guestfs-actions.pod:7343 ../src/guestfs-actions.pod:7395
#: ../src/guestfs-actions.pod:10463 ../src/guestfs-actions.pod:11575
#: ../src/guestfs-actions.pod:13773
msgid "(Added in 1.0.59)"
msgstr "(Додано у 1.0.59)"

#. type: =head2
#: ../src/guestfs-actions.pod:4368
msgid "guestfs_glob_expand"
msgstr "guestfs_glob_expand"

#. type: verbatim
#: ../src/guestfs-actions.pod:4370
#, no-wrap
msgid ""
" char **\n"
" guestfs_glob_expand (guestfs_h *g,\n"
"                      const char *pattern);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_glob_expand (guestfs_h *g,\n"
"                      const char *pattern);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4385
msgid ""
"Notice that there is no equivalent command for expanding a device name (eg. "
"C</dev/sd*>).  Use C<guestfs_list_devices>, C<guestfs_list_partitions> etc "
"functions instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4393 ../src/guestfs-actions.pod:11759
#: ../src/guestfs-actions.pod:11776
msgid "(Added in 1.0.50)"
msgstr "(Додано у 1.0.50)"

#. type: =head2
#: ../src/guestfs-actions.pod:4395
msgid "guestfs_grep"
msgstr "guestfs_grep"

#. type: verbatim
#: ../src/guestfs-actions.pod:4397
#, no-wrap
msgid ""
" char **\n"
" guestfs_grep (guestfs_h *g,\n"
"               const char *regex,\n"
"               const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_grep (guestfs_h *g,\n"
"               const char *regex,\n"
"               const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4402
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_grep_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4409
msgid "guestfs_grep_opts"
msgstr "guestfs_grep_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:4411
#, no-wrap
msgid ""
" char **\n"
" guestfs_grep_opts (guestfs_h *g,\n"
"                    const char *regex,\n"
"                    const char *path,\n"
"                    ...);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_grep_opts (guestfs_h *g,\n"
"                    const char *regex,\n"
"                    const char *path,\n"
"                    ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:4422
#, no-wrap
msgid ""
" GUESTFS_GREP_OPTS_EXTENDED, int extended,\n"
" GUESTFS_GREP_OPTS_FIXED, int fixed,\n"
" GUESTFS_GREP_OPTS_INSENSITIVE, int insensitive,\n"
" GUESTFS_GREP_OPTS_COMPRESSED, int compressed,\n"
"\n"
msgstr ""
" GUESTFS_GREP_OPTS_EXTENDED, int extended,\n"
" GUESTFS_GREP_OPTS_FIXED, int fixed,\n"
" GUESTFS_GREP_OPTS_INSENSITIVE, int insensitive,\n"
" GUESTFS_GREP_OPTS_COMPRESSED, int compressed,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4462 ../src/guestfs-actions.pod:13441
msgid "(Added in 1.19.28)"
msgstr "(Додано у 1.19.28)"

#. type: =head2
#: ../src/guestfs-actions.pod:4464
msgid "guestfs_grep_opts_va"
msgstr "guestfs_grep_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:4466
#, no-wrap
msgid ""
" char **\n"
" guestfs_grep_opts_va (guestfs_h *g,\n"
"                       const char *regex,\n"
"                       const char *path,\n"
"                       va_list args);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_grep_opts_va (guestfs_h *g,\n"
"                       const char *regex,\n"
"                       const char *path,\n"
"                       va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4472
msgid "This is the \"va_list variant\" of L</guestfs_grep_opts>."
msgstr "Це «варіант з va_list» L</guestfs_grep_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:4476
msgid "guestfs_grep_opts_argv"
msgstr "guestfs_grep_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:4478
#, no-wrap
msgid ""
" char **\n"
" guestfs_grep_opts_argv (guestfs_h *g,\n"
"                         const char *regex,\n"
"                         const char *path,\n"
"                         const struct guestfs_grep_opts_argv *optargs);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_grep_opts_argv (guestfs_h *g,\n"
"                         const char *regex,\n"
"                         const char *path,\n"
"                         const struct guestfs_grep_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4484
msgid "This is the \"argv variant\" of L</guestfs_grep_opts>."
msgstr "Це «варіант з argv» L</guestfs_grep_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:4488
msgid "guestfs_grepi"
msgstr "guestfs_grepi"

#. type: verbatim
#: ../src/guestfs-actions.pod:4490
#, no-wrap
msgid ""
" char **\n"
" guestfs_grepi (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_grepi (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4514
msgid "guestfs_grub_install"
msgstr "guestfs_grub_install"

#. type: verbatim
#: ../src/guestfs-actions.pod:4516
#, no-wrap
msgid ""
" int\n"
" guestfs_grub_install (guestfs_h *g,\n"
"                       const char *root,\n"
"                       const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_grub_install (guestfs_h *g,\n"
"                       const char *root,\n"
"                       const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4559
msgid "(Added in 1.0.17)"
msgstr "(Додано у 1.0.17)"

#. type: =head2
#: ../src/guestfs-actions.pod:4561
msgid "guestfs_head"
msgstr "guestfs_head"

#. type: verbatim
#: ../src/guestfs-actions.pod:4563
#, no-wrap
msgid ""
" char **\n"
" guestfs_head (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_head (guestfs_h *g,\n"
"               const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4579
msgid "guestfs_head_n"
msgstr "guestfs_head_n"

#. type: verbatim
#: ../src/guestfs-actions.pod:4581
#, no-wrap
msgid ""
" char **\n"
" guestfs_head_n (guestfs_h *g,\n"
"                 int nrlines,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_head_n (guestfs_h *g,\n"
"                 int nrlines,\n"
"                 const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4603
msgid "guestfs_hexdump"
msgstr "guestfs_hexdump"

#. type: verbatim
#: ../src/guestfs-actions.pod:4605
#, no-wrap
msgid ""
" char *\n"
" guestfs_hexdump (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_hexdump (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4618 ../src/guestfs-actions.pod:11888
#: ../src/guestfs-actions.pod:11943
msgid "(Added in 1.0.22)"
msgstr "(Додано у 1.0.22)"

#. type: =head2
#: ../src/guestfs-actions.pod:4620
msgid "guestfs_hivex_close"
msgstr "guestfs_hivex_close"

#. type: verbatim
#: ../src/guestfs-actions.pod:4622
#, no-wrap
msgid ""
" int\n"
" guestfs_hivex_close (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_hivex_close (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4631 ../src/guestfs-actions.pod:4650
#: ../src/guestfs-actions.pod:4665 ../src/guestfs-actions.pod:4681
#: ../src/guestfs-actions.pod:4695 ../src/guestfs-actions.pod:4711
#: ../src/guestfs-actions.pod:4728 ../src/guestfs-actions.pod:4743
#: ../src/guestfs-actions.pod:4757 ../src/guestfs-actions.pod:4776
#: ../src/guestfs-actions.pod:4792 ../src/guestfs-actions.pod:4818
#: ../src/guestfs-actions.pod:4853 ../src/guestfs-actions.pod:4868
#: ../src/guestfs-actions.pod:4882 ../src/guestfs-actions.pod:4903
#: ../src/guestfs-actions.pod:4922
msgid "(Added in 1.19.35)"
msgstr "(Додано у 1.19.35)"

#. type: =head2
#: ../src/guestfs-actions.pod:4633
msgid "guestfs_hivex_commit"
msgstr "guestfs_hivex_commit"

#. type: verbatim
#: ../src/guestfs-actions.pod:4635
#, no-wrap
msgid ""
" int\n"
" guestfs_hivex_commit (guestfs_h *g,\n"
"                       const char *filename);\n"
"\n"
msgstr ""
" int\n"
" guestfs_hivex_commit (guestfs_h *g,\n"
"                       const char *filename);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4652
msgid "guestfs_hivex_node_add_child"
msgstr "guestfs_hivex_node_add_child"

#. type: verbatim
#: ../src/guestfs-actions.pod:4654
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_hivex_node_add_child (guestfs_h *g,\n"
"                               int64_t parent,\n"
"                               const char *name);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_hivex_node_add_child (guestfs_h *g,\n"
"                               int64_t parent,\n"
"                               const char *name);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4667
msgid "guestfs_hivex_node_children"
msgstr "guestfs_hivex_node_children"

#. type: verbatim
#: ../src/guestfs-actions.pod:4669
#, no-wrap
msgid ""
" struct guestfs_hivex_node_list *\n"
" guestfs_hivex_node_children (guestfs_h *g,\n"
"                              int64_t nodeh);\n"
"\n"
msgstr ""
" struct guestfs_hivex_node_list *\n"
" guestfs_hivex_node_children (guestfs_h *g,\n"
"                              int64_t nodeh);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4677
msgid ""
"This function returns a C<struct guestfs_hivex_node_list *>, or NULL if "
"there was an error.  I<The caller must call C<guestfs_free_hivex_node_list> "
"after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4683
msgid "guestfs_hivex_node_delete_child"
msgstr "guestfs_hivex_node_delete_child"

#. type: verbatim
#: ../src/guestfs-actions.pod:4685
#, no-wrap
msgid ""
" int\n"
" guestfs_hivex_node_delete_child (guestfs_h *g,\n"
"                                  int64_t nodeh);\n"
"\n"
msgstr ""
" int\n"
" guestfs_hivex_node_delete_child (guestfs_h *g,\n"
"                                  int64_t nodeh);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4697
msgid "guestfs_hivex_node_get_child"
msgstr "guestfs_hivex_node_get_child"

#. type: verbatim
#: ../src/guestfs-actions.pod:4699
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_hivex_node_get_child (guestfs_h *g,\n"
"                               int64_t nodeh,\n"
"                               const char *name);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_hivex_node_get_child (guestfs_h *g,\n"
"                               int64_t nodeh,\n"
"                               const char *name);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4713
msgid "guestfs_hivex_node_get_value"
msgstr "guestfs_hivex_node_get_value"

#. type: verbatim
#: ../src/guestfs-actions.pod:4715
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_hivex_node_get_value (guestfs_h *g,\n"
"                               int64_t nodeh,\n"
"                               const char *key);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_hivex_node_get_value (guestfs_h *g,\n"
"                               int64_t nodeh,\n"
"                               const char *key);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4730
msgid "guestfs_hivex_node_name"
msgstr "guestfs_hivex_node_name"

#. type: verbatim
#: ../src/guestfs-actions.pod:4732
#, no-wrap
msgid ""
" char *\n"
" guestfs_hivex_node_name (guestfs_h *g,\n"
"                          int64_t nodeh);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_hivex_node_name (guestfs_h *g,\n"
"                          int64_t nodeh);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4745
msgid "guestfs_hivex_node_parent"
msgstr "guestfs_hivex_node_parent"

#. type: verbatim
#: ../src/guestfs-actions.pod:4747
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_hivex_node_parent (guestfs_h *g,\n"
"                            int64_t nodeh);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_hivex_node_parent (guestfs_h *g,\n"
"                            int64_t nodeh);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4759
msgid "guestfs_hivex_node_set_value"
msgstr "guestfs_hivex_node_set_value"

#. type: verbatim
#: ../src/guestfs-actions.pod:4761
#, no-wrap
msgid ""
" int\n"
" guestfs_hivex_node_set_value (guestfs_h *g,\n"
"                               int64_t nodeh,\n"
"                               const char *key,\n"
"                               int64_t t,\n"
"                               const char *val,\n"
"                               size_t val_size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_hivex_node_set_value (guestfs_h *g,\n"
"                               int64_t nodeh,\n"
"                               const char *key,\n"
"                               int64_t t,\n"
"                               const char *val,\n"
"                               size_t val_size);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4778
msgid "guestfs_hivex_node_values"
msgstr "guestfs_hivex_node_values"

#. type: verbatim
#: ../src/guestfs-actions.pod:4780
#, no-wrap
msgid ""
" struct guestfs_hivex_value_list *\n"
" guestfs_hivex_node_values (guestfs_h *g,\n"
"                            int64_t nodeh);\n"
"\n"
msgstr ""
" struct guestfs_hivex_value_list *\n"
" guestfs_hivex_node_values (guestfs_h *g,\n"
"                            int64_t nodeh);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4788
msgid ""
"This function returns a C<struct guestfs_hivex_value_list *>, or NULL if "
"there was an error.  I<The caller must call C<guestfs_free_hivex_value_list> "
"after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4794
msgid "guestfs_hivex_open"
msgstr "guestfs_hivex_open"

#. type: verbatim
#: ../src/guestfs-actions.pod:4796
#, no-wrap
msgid ""
" int\n"
" guestfs_hivex_open (guestfs_h *g,\n"
"                     const char *filename,\n"
"                     ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_hivex_open (guestfs_h *g,\n"
"                     const char *filename,\n"
"                     ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:4806
#, no-wrap
msgid ""
" GUESTFS_HIVEX_OPEN_VERBOSE, int verbose,\n"
" GUESTFS_HIVEX_OPEN_DEBUG, int debug,\n"
" GUESTFS_HIVEX_OPEN_WRITE, int write,\n"
"\n"
msgstr ""
" GUESTFS_HIVEX_OPEN_VERBOSE, int verbose,\n"
" GUESTFS_HIVEX_OPEN_DEBUG, int debug,\n"
" GUESTFS_HIVEX_OPEN_WRITE, int write,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4820
msgid "guestfs_hivex_open_va"
msgstr "guestfs_hivex_open_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:4822
#, no-wrap
msgid ""
" int\n"
" guestfs_hivex_open_va (guestfs_h *g,\n"
"                        const char *filename,\n"
"                        va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_hivex_open_va (guestfs_h *g,\n"
"                        const char *filename,\n"
"                        va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4827
msgid "This is the \"va_list variant\" of L</guestfs_hivex_open>."
msgstr "Це «варіант з va_list» L</guestfs_hivex_open>."

#. type: =head2
#: ../src/guestfs-actions.pod:4831
msgid "guestfs_hivex_open_argv"
msgstr "guestfs_hivex_open_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:4833
#, no-wrap
msgid ""
" int\n"
" guestfs_hivex_open_argv (guestfs_h *g,\n"
"                          const char *filename,\n"
"                          const struct guestfs_hivex_open_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_hivex_open_argv (guestfs_h *g,\n"
"                          const char *filename,\n"
"                          const struct guestfs_hivex_open_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4838
msgid "This is the \"argv variant\" of L</guestfs_hivex_open>."
msgstr "Це «варіант з argv» L</guestfs_hivex_open>."

#. type: =head2
#: ../src/guestfs-actions.pod:4842
msgid "guestfs_hivex_root"
msgstr "guestfs_hivex_root"

#. type: verbatim
#: ../src/guestfs-actions.pod:4844
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_hivex_root (guestfs_h *g);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_hivex_root (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4855
msgid "guestfs_hivex_value_key"
msgstr "guestfs_hivex_value_key"

#. type: verbatim
#: ../src/guestfs-actions.pod:4857
#, no-wrap
msgid ""
" char *\n"
" guestfs_hivex_value_key (guestfs_h *g,\n"
"                          int64_t valueh);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_hivex_value_key (guestfs_h *g,\n"
"                          int64_t valueh);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4870
msgid "guestfs_hivex_value_type"
msgstr "guestfs_hivex_value_type"

#. type: verbatim
#: ../src/guestfs-actions.pod:4872
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_hivex_value_type (guestfs_h *g,\n"
"                           int64_t valueh);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_hivex_value_type (guestfs_h *g,\n"
"                           int64_t valueh);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4884
msgid "guestfs_hivex_value_utf8"
msgstr "guestfs_hivex_value_utf8"

#. type: verbatim
#: ../src/guestfs-actions.pod:4886
#, no-wrap
msgid ""
" char *\n"
" guestfs_hivex_value_utf8 (guestfs_h *g,\n"
"                           int64_t valueh);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_hivex_value_utf8 (guestfs_h *g,\n"
"                           int64_t valueh);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4890
msgid ""
"This calls C<guestfs_hivex_value_value> (which returns the data field from a "
"hivex value tuple).  It then assumes that the field is a UTF-16LE string and "
"converts the result to UTF-8 (or if this is not possible, it returns an "
"error)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4905
msgid "guestfs_hivex_value_value"
msgstr "guestfs_hivex_value_value"

#. type: verbatim
#: ../src/guestfs-actions.pod:4907
#, no-wrap
msgid ""
" char *\n"
" guestfs_hivex_value_value (guestfs_h *g,\n"
"                            int64_t valueh,\n"
"                            size_t *size_r);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_hivex_value_value (guestfs_h *g,\n"
"                            int64_t valueh,\n"
"                            size_t *size_r);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4916
msgid "See also: C<guestfs_hivex_value_utf8>."
msgstr "Див. також C<guestfs_hivex_value_utf8>."

#. type: =head2
#: ../src/guestfs-actions.pod:4924
msgid "guestfs_initrd_cat"
msgstr "guestfs_initrd_cat"

#. type: verbatim
#: ../src/guestfs-actions.pod:4926
#, no-wrap
msgid ""
" char *\n"
" guestfs_initrd_cat (guestfs_h *g,\n"
"                     const char *initrdpath,\n"
"                     const char *filename,\n"
"                     size_t *size_r);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_initrd_cat (guestfs_h *g,\n"
"                     const char *initrdpath,\n"
"                     const char *filename,\n"
"                     size_t *size_r);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:4942
msgid "See also C<guestfs_initrd_list>."
msgstr "Див. також C<guestfs_initrd_list>."

#. type: =head2
#: ../src/guestfs-actions.pod:4953
msgid "guestfs_initrd_list"
msgstr "guestfs_initrd_list"

#. type: verbatim
#: ../src/guestfs-actions.pod:4955
#, no-wrap
msgid ""
" char **\n"
" guestfs_initrd_list (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_initrd_list (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4975
msgid "guestfs_inotify_add_watch"
msgstr "guestfs_inotify_add_watch"

#. type: verbatim
#: ../src/guestfs-actions.pod:4977
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_inotify_add_watch (guestfs_h *g,\n"
"                            const char *path,\n"
"                            int mask);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_inotify_add_watch (guestfs_h *g,\n"
"                            const char *path,\n"
"                            int mask);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:4996
msgid "guestfs_inotify_close"
msgstr "guestfs_inotify_close"

#. type: verbatim
#: ../src/guestfs-actions.pod:4998
#, no-wrap
msgid ""
" int\n"
" guestfs_inotify_close (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_inotify_close (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:5009
msgid "guestfs_inotify_files"
msgstr "guestfs_inotify_files"

#. type: verbatim
#: ../src/guestfs-actions.pod:5011
#, no-wrap
msgid ""
" char **\n"
" guestfs_inotify_files (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_inotify_files (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5014
msgid ""
"This function is a helpful wrapper around C<guestfs_inotify_read> which just "
"returns a list of pathnames of objects that were touched.  The returned "
"pathnames are sorted and deduplicated."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5024
msgid "guestfs_inotify_init"
msgstr "guestfs_inotify_init"

#. type: verbatim
#: ../src/guestfs-actions.pod:5026
#, no-wrap
msgid ""
" int\n"
" guestfs_inotify_init (guestfs_h *g,\n"
"                       int maxevents);\n"
"\n"
msgstr ""
" int\n"
" guestfs_inotify_init (guestfs_h *g,\n"
"                       int maxevents);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5034
msgid ""
"C<maxevents> is the maximum number of events which will be queued up between "
"calls to C<guestfs_inotify_read> or C<guestfs_inotify_files>.  If this is "
"passed as C<0>, then the kernel (or previously set)  default is used.  For "
"Linux 2.6.29 the default was 16384 events.  Beyond this limit, the kernel "
"throws away events, but records the fact that it threw them away by setting "
"a flag C<IN_Q_OVERFLOW> in the returned structure list (see "
"C<guestfs_inotify_read>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5044
msgid ""
"Before any events are generated, you have to add some watches to the "
"internal watch list.  See: C<guestfs_inotify_add_watch> and "
"C<guestfs_inotify_rm_watch>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5048
msgid ""
"Queued up events should be read periodically by calling "
"C<guestfs_inotify_read> (or C<guestfs_inotify_files> which is just a helpful "
"wrapper around C<guestfs_inotify_read>).  If you don't read the events out "
"often enough then you risk the internal queue overflowing."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5055
msgid ""
"The handle should be closed after use by calling C<guestfs_inotify_close>.  "
"This also removes any watches automatically."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5068
msgid "guestfs_inotify_read"
msgstr "guestfs_inotify_read"

#. type: verbatim
#: ../src/guestfs-actions.pod:5070
#, no-wrap
msgid ""
" struct guestfs_inotify_event_list *\n"
" guestfs_inotify_read (guestfs_h *g);\n"
"\n"
msgstr ""
" struct guestfs_inotify_event_list *\n"
" guestfs_inotify_read (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5084
msgid ""
"This function returns a C<struct guestfs_inotify_event_list *>, or NULL if "
"there was an error.  I<The caller must call "
"C<guestfs_free_inotify_event_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5090
msgid "guestfs_inotify_rm_watch"
msgstr "guestfs_inotify_rm_watch"

#. type: verbatim
#: ../src/guestfs-actions.pod:5092
#, no-wrap
msgid ""
" int\n"
" guestfs_inotify_rm_watch (guestfs_h *g,\n"
"                           int wd);\n"
"\n"
msgstr ""
" int\n"
" guestfs_inotify_rm_watch (guestfs_h *g,\n"
"                           int wd);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5096
msgid ""
"Remove a previously defined inotify watch.  See C<guestfs_inotify_add_watch>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5103
msgid "guestfs_inspect_get_arch"
msgstr "guestfs_inspect_get_arch"

#. type: verbatim
#: ../src/guestfs-actions.pod:5105
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_arch (guestfs_h *g,\n"
"                           const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_arch (guestfs_h *g,\n"
"                           const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5109
msgid ""
"This returns the architecture of the inspected operating system.  The "
"possible return values are listed under C<guestfs_file_architecture>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5123
msgid "guestfs_inspect_get_distro"
msgstr "guestfs_inspect_get_distro"

#. type: verbatim
#: ../src/guestfs-actions.pod:5125
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_distro (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_distro (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:5253
msgid "guestfs_inspect_get_drive_mappings"
msgstr "guestfs_inspect_get_drive_mappings"

#. type: verbatim
#: ../src/guestfs-actions.pod:5255
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_drive_mappings (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_inspect_get_drive_mappings (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5284
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_mountpoints>, C<guestfs_inspect_get_filesystems>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5294 ../src/guestfs-actions.pod:5771
msgid "(Added in 1.9.17)"
msgstr "(Додано у 1.9.17)"

#. type: =head2
#: ../src/guestfs-actions.pod:5296
msgid "guestfs_inspect_get_filesystems"
msgstr "guestfs_inspect_get_filesystems"

#. type: verbatim
#: ../src/guestfs-actions.pod:5298
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_filesystems (guestfs_h *g,\n"
"                                  const char *root);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_inspect_get_filesystems (guestfs_h *g,\n"
"                                  const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5310
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_mountpoints>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5319
msgid "guestfs_inspect_get_format"
msgstr "guestfs_inspect_get_format"

#. type: verbatim
#: ../src/guestfs-actions.pod:5321
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_format (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_format (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5355 ../src/guestfs-actions.pod:5807
#: ../src/guestfs-actions.pod:5823 ../src/guestfs-actions.pod:5841
#: ../src/guestfs-actions.pod:10514
msgid "(Added in 1.9.4)"
msgstr "(Додано у 1.9.4)"

#. type: =head2
#: ../src/guestfs-actions.pod:5357
msgid "guestfs_inspect_get_hostname"
msgstr "guestfs_inspect_get_hostname"

#. type: verbatim
#: ../src/guestfs-actions.pod:5359
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_hostname (guestfs_h *g,\n"
"                               const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_hostname (guestfs_h *g,\n"
"                               const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5374
msgid "(Added in 1.7.9)"
msgstr "(Додано у 1.7.9)"

#. type: =head2
#: ../src/guestfs-actions.pod:5376
msgid "guestfs_inspect_get_icon"
msgstr "guestfs_inspect_get_icon"

#. type: verbatim
#: ../src/guestfs-actions.pod:5378
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_icon (guestfs_h *g,\n"
"                           const char *root,\n"
"                           size_t *size_r,\n"
"                           ...);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_icon (guestfs_h *g,\n"
"                           const char *root,\n"
"                           size_t *size_r,\n"
"                           ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:5389
#, no-wrap
msgid ""
" GUESTFS_INSPECT_GET_ICON_FAVICON, int favicon,\n"
" GUESTFS_INSPECT_GET_ICON_HIGHQUALITY, int highquality,\n"
"\n"
msgstr ""
" GUESTFS_INSPECT_GET_ICON_FAVICON, int favicon,\n"
" GUESTFS_INSPECT_GET_ICON_HIGHQUALITY, int highquality,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5456 ../src/guestfs-actions.pod:7073
#: ../src/guestfs-actions.pod:9032
msgid "(Added in 1.11.12)"
msgstr "(Додано у 1.11.12)"

#. type: =head2
#: ../src/guestfs-actions.pod:5458
msgid "guestfs_inspect_get_icon_va"
msgstr "guestfs_inspect_get_icon_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:5460
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_icon_va (guestfs_h *g,\n"
"                              const char *root,\n"
"                              size_t *size_r,\n"
"                              va_list args);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_icon_va (guestfs_h *g,\n"
"                              const char *root,\n"
"                              size_t *size_r,\n"
"                              va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5466
msgid "This is the \"va_list variant\" of L</guestfs_inspect_get_icon>."
msgstr "Це «варіант з va_list» L</guestfs_inspect_get_icon>."

#. type: =head2
#: ../src/guestfs-actions.pod:5470
msgid "guestfs_inspect_get_icon_argv"
msgstr "guestfs_inspect_get_icon_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:5472
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_icon_argv (guestfs_h *g,\n"
"                                const char *root,\n"
"                                size_t *size_r,\n"
"                                const struct guestfs_inspect_get_icon_argv *optargs);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_icon_argv (guestfs_h *g,\n"
"                                const char *root,\n"
"                                size_t *size_r,\n"
"                                const struct guestfs_inspect_get_icon_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5478
msgid "This is the \"argv variant\" of L</guestfs_inspect_get_icon>."
msgstr "Це «варіант з argv» L</guestfs_inspect_get_icon>."

#. type: =head2
#: ../src/guestfs-actions.pod:5482
msgid "guestfs_inspect_get_major_version"
msgstr "guestfs_inspect_get_major_version"

#. type: verbatim
#: ../src/guestfs-actions.pod:5484
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_get_major_version (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"
msgstr ""
" int\n"
" guestfs_inspect_get_major_version (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:5506
msgid "guestfs_inspect_get_minor_version"
msgstr "guestfs_inspect_get_minor_version"

#. type: verbatim
#: ../src/guestfs-actions.pod:5508
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_get_minor_version (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"
msgstr ""
" int\n"
" guestfs_inspect_get_minor_version (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5517
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_major_version>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5524
msgid "guestfs_inspect_get_mountpoints"
msgstr "guestfs_inspect_get_mountpoints"

#. type: verbatim
#: ../src/guestfs-actions.pod:5526
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_mountpoints (guestfs_h *g,\n"
"                                  const char *root);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_inspect_get_mountpoints (guestfs_h *g,\n"
"                                  const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5547
msgid ""
"For operating systems like Windows which still use drive letters, this call "
"will only return an entry for the first drive \"mounted on\" C</>.  For "
"information about the mapping of drive letters to partitions, see "
"C<guestfs_inspect_get_drive_mappings>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5553
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_filesystems>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5564
msgid "guestfs_inspect_get_package_format"
msgstr "guestfs_inspect_get_package_format"

#. type: verbatim
#: ../src/guestfs-actions.pod:5566
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_package_format (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_package_format (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5570
msgid ""
"This function and C<guestfs_inspect_get_package_management> return the "
"package format and package management tool used by the inspected operating "
"system.  For example for Fedora these functions would return C<rpm> (package "
"format) and C<yum> (package management)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5589 ../src/guestfs-actions.pod:5617
msgid "(Added in 1.7.5)"
msgstr "(Додано у 1.7.5)"

#. type: =head2
#: ../src/guestfs-actions.pod:5591
msgid "guestfs_inspect_get_package_management"
msgstr "guestfs_inspect_get_package_management"

#. type: verbatim
#: ../src/guestfs-actions.pod:5593
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_package_management (guestfs_h *g,\n"
"                                         const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_package_management (guestfs_h *g,\n"
"                                         const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5597
msgid ""
"C<guestfs_inspect_get_package_format> and this function return the package "
"format and package management tool used by the inspected operating system.  "
"For example for Fedora these functions would return C<rpm> (package format) "
"and C<yum> (package management)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5619
msgid "guestfs_inspect_get_product_name"
msgstr "guestfs_inspect_get_product_name"

#. type: verbatim
#: ../src/guestfs-actions.pod:5621
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_product_name (guestfs_h *g,\n"
"                                   const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_product_name (guestfs_h *g,\n"
"                                   const char *root);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:5640
msgid "guestfs_inspect_get_product_variant"
msgstr "guestfs_inspect_get_product_variant"

#. type: verbatim
#: ../src/guestfs-actions.pod:5642
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_product_variant (guestfs_h *g,\n"
"                                      const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_product_variant (guestfs_h *g,\n"
"                                      const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5665
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_product_name>, C<guestfs_inspect_get_major_version>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5672
msgid "(Added in 1.9.13)"
msgstr "(Додано у 1.9.13)"

#. type: =head2
#: ../src/guestfs-actions.pod:5674
msgid "guestfs_inspect_get_roots"
msgstr "guestfs_inspect_get_roots"

#. type: verbatim
#: ../src/guestfs-actions.pod:5676
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_roots (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_inspect_get_roots (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5679
msgid ""
"This function is a convenient way to get the list of root devices, as "
"returned from a previous call to C<guestfs_inspect_os>, but without redoing "
"the whole inspection process."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5683
msgid ""
"This returns an empty list if either no root devices were found or the "
"caller has not called C<guestfs_inspect_os>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5692
msgid "(Added in 1.7.3)"
msgstr "(Додано у 1.7.3)"

#. type: =head2
#: ../src/guestfs-actions.pod:5694
msgid "guestfs_inspect_get_type"
msgstr "guestfs_inspect_get_type"

#. type: verbatim
#: ../src/guestfs-actions.pod:5696
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_type (guestfs_h *g,\n"
"                           const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_type (guestfs_h *g,\n"
"                           const char *root);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:5753
msgid "guestfs_inspect_get_windows_current_control_set"
msgstr "guestfs_inspect_get_windows_current_control_set"

#. type: verbatim
#: ../src/guestfs-actions.pod:5755
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_windows_current_control_set (guestfs_h *g,\n"
"                                                  const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_windows_current_control_set (guestfs_h *g,\n"
"                                                  const char *root);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:5773
msgid "guestfs_inspect_get_windows_systemroot"
msgstr "guestfs_inspect_get_windows_systemroot"

#. type: verbatim
#: ../src/guestfs-actions.pod:5775
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_windows_systemroot (guestfs_h *g,\n"
"                                         const char *root);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_inspect_get_windows_systemroot (guestfs_h *g,\n"
"                                         const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5791
msgid "(Added in 1.5.25)"
msgstr "(Додано у 1.5.25)"

#. type: =head2
#: ../src/guestfs-actions.pod:5793
msgid "guestfs_inspect_is_live"
msgstr "guestfs_inspect_is_live"

#. type: verbatim
#: ../src/guestfs-actions.pod:5795
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_is_live (guestfs_h *g,\n"
"                          const char *root);\n"
"\n"
msgstr ""
" int\n"
" guestfs_inspect_is_live (guestfs_h *g,\n"
"                          const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5799
msgid ""
"If C<guestfs_inspect_get_format> returns C<installer> (this is an install "
"disk), then this returns true if a live image was detected on the disk."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5809
msgid "guestfs_inspect_is_multipart"
msgstr "guestfs_inspect_is_multipart"

#. type: verbatim
#: ../src/guestfs-actions.pod:5811
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_is_multipart (guestfs_h *g,\n"
"                               const char *root);\n"
"\n"
msgstr ""
" int\n"
" guestfs_inspect_is_multipart (guestfs_h *g,\n"
"                               const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5815
msgid ""
"If C<guestfs_inspect_get_format> returns C<installer> (this is an install "
"disk), then this returns true if the disk is part of a set."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5825
msgid "guestfs_inspect_is_netinst"
msgstr "guestfs_inspect_is_netinst"

#. type: verbatim
#: ../src/guestfs-actions.pod:5827
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_is_netinst (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"
msgstr ""
" int\n"
" guestfs_inspect_is_netinst (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5831
msgid ""
"If C<guestfs_inspect_get_format> returns C<installer> (this is an install "
"disk), then this returns true if the disk is a network installer, ie. not a "
"self-contained install CD but one which is likely to require network access "
"to complete the install."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5843
msgid "guestfs_inspect_list_applications"
msgstr "guestfs_inspect_list_applications"

#. type: verbatim
#: ../src/guestfs-actions.pod:5845
#, no-wrap
msgid ""
" struct guestfs_application_list *\n"
" guestfs_inspect_list_applications (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"
msgstr ""
" struct guestfs_application_list *\n"
" guestfs_inspect_list_applications (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:5849
msgid ""
"I<This function is deprecated.> In new code, use the L</"
"guestfs_inspect_list_applications2> call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5858 ../src/guestfs-actions.pod:5962
msgid ""
"I<Note:> This call works differently from other parts of the inspection "
"API.  You have to call C<guestfs_inspect_os>, then "
"C<guestfs_inspect_get_mountpoints>, then mount up the disks, before calling "
"this.  Listing applications is a significantly more difficult operation "
"which requires access to the full filesystem.  Also note that unlike the "
"other C<guestfs_inspect_get_*> calls which are just returning data cached in "
"the libguestfs handle, this call actually reads parts of the mounted "
"filesystems during the call."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5948
msgid ""
"This function returns a C<struct guestfs_application_list *>, or NULL if "
"there was an error.  I<The caller must call C<guestfs_free_application_list> "
"after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5952
msgid "(Added in 1.7.8)"
msgstr "(Додано у 1.7.8)"

#. type: =head2
#: ../src/guestfs-actions.pod:5954
msgid "guestfs_inspect_list_applications2"
msgstr "guestfs_inspect_list_applications2"

#. type: verbatim
#: ../src/guestfs-actions.pod:5956
#, no-wrap
msgid ""
" struct guestfs_application2_list *\n"
" guestfs_inspect_list_applications2 (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"
msgstr ""
" struct guestfs_application2_list *\n"
" guestfs_inspect_list_applications2 (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6058
msgid ""
"This function returns a C<struct guestfs_application2_list *>, or NULL if "
"there was an error.  I<The caller must call "
"C<guestfs_free_application2_list> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6062 ../src/guestfs-actions.pod:8659
msgid "(Added in 1.19.56)"
msgstr "(Додано у 1.19.56)"

#. type: =head2
#: ../src/guestfs-actions.pod:6064
msgid "guestfs_inspect_os"
msgstr "guestfs_inspect_os"

#. type: verbatim
#: ../src/guestfs-actions.pod:6066
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_os (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_inspect_os (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6082
msgid ""
"You can pass the root string(s) returned to other C<guestfs_inspect_get_*> "
"functions in order to query further information about each operating system, "
"such as the name and version."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6087
msgid ""
"This function uses other libguestfs features such as C<guestfs_mount_ro> and "
"C<guestfs_umount_all> in order to mount and unmount filesystems and look at "
"the contents.  This should be called with no disks currently mounted.  The "
"function may also use Augeas, so any existing Augeas handle will be closed."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6099 ../src/guestfs-actions.pod:7084
#: ../src/guestfs-actions.pod:7235
msgid "See also C<guestfs_list_filesystems>."
msgstr "Див. також C<guestfs_list_filesystems>."

#. type: =head2
#: ../src/guestfs-actions.pod:6107
msgid "guestfs_is_blockdev"
msgstr "guestfs_is_blockdev"

#. type: verbatim
#: ../src/guestfs-actions.pod:6109
#, no-wrap
msgid ""
" int\n"
" guestfs_is_blockdev (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_blockdev (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6113
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_is_blockdev_opts> with no "
"optional arguments."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6117 ../src/guestfs-actions.pod:6193
#: ../src/guestfs-actions.pod:6332 ../src/guestfs-actions.pod:6498
#: ../src/guestfs-actions.pod:6563
msgid "(Added in 1.5.10)"
msgstr "(Додано у 1.5.10)"

#. type: =head2
#: ../src/guestfs-actions.pod:6120
msgid "guestfs_is_blockdev_opts"
msgstr "guestfs_is_blockdev_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:6122
#, no-wrap
msgid ""
" int\n"
" guestfs_is_blockdev_opts (guestfs_h *g,\n"
"                           const char *path,\n"
"                           ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_blockdev_opts (guestfs_h *g,\n"
"                           const char *path,\n"
"                           ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:6132
#, no-wrap
msgid ""
" GUESTFS_IS_BLOCKDEV_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"
msgstr ""
" GUESTFS_IS_BLOCKDEV_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6141 ../src/guestfs-actions.pod:6217
#: ../src/guestfs-actions.pod:6294 ../src/guestfs-actions.pod:6356
#: ../src/guestfs-actions.pod:6419 ../src/guestfs-actions.pod:6522
#: ../src/guestfs-actions.pod:6559
msgid "See also C<guestfs_stat>."
msgstr "Див. також C<guestfs_stat>."

#. type: textblock
#: ../src/guestfs-actions.pod:6145 ../src/guestfs-actions.pod:6221
#: ../src/guestfs-actions.pod:6298 ../src/guestfs-actions.pod:6360
#: ../src/guestfs-actions.pod:6423 ../src/guestfs-actions.pod:6526
msgid "(Added in 1.23.4)"
msgstr "(Додано у 1.23.4)"

#. type: =head2
#: ../src/guestfs-actions.pod:6147
msgid "guestfs_is_blockdev_opts_va"
msgstr "guestfs_is_blockdev_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:6149
#, no-wrap
msgid ""
" int\n"
" guestfs_is_blockdev_opts_va (guestfs_h *g,\n"
"                              const char *path,\n"
"                              va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_blockdev_opts_va (guestfs_h *g,\n"
"                              const char *path,\n"
"                              va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6154
msgid "This is the \"va_list variant\" of L</guestfs_is_blockdev_opts>."
msgstr "Це «варіант з va_list» L</guestfs_is_blockdev_opts>"

#. type: =head2
#: ../src/guestfs-actions.pod:6158
msgid "guestfs_is_blockdev_opts_argv"
msgstr "guestfs_is_blockdev_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:6160
#, no-wrap
msgid ""
" int\n"
" guestfs_is_blockdev_opts_argv (guestfs_h *g,\n"
"                                const char *path,\n"
"                                const struct guestfs_is_blockdev_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_blockdev_opts_argv (guestfs_h *g,\n"
"                                const char *path,\n"
"                                const struct guestfs_is_blockdev_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6165
msgid "This is the \"argv variant\" of L</guestfs_is_blockdev_opts>."
msgstr "Це «варіант з argv» L</guestfs_is_blockdev_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6169
msgid "guestfs_is_busy"
msgstr "guestfs_is_busy"

#. type: verbatim
#: ../src/guestfs-actions.pod:6171
#, no-wrap
msgid ""
" int\n"
" guestfs_is_busy (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_busy (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6174
msgid ""
"This always returns false.  This function is deprecated with no "
"replacement.  Do not use this function."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6183
msgid "guestfs_is_chardev"
msgstr "guestfs_is_chardev"

#. type: verbatim
#: ../src/guestfs-actions.pod:6185
#, no-wrap
msgid ""
" int\n"
" guestfs_is_chardev (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_chardev (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6189
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_is_chardev_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6196
msgid "guestfs_is_chardev_opts"
msgstr "guestfs_is_chardev_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:6198
#, no-wrap
msgid ""
" int\n"
" guestfs_is_chardev_opts (guestfs_h *g,\n"
"                          const char *path,\n"
"                          ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_chardev_opts (guestfs_h *g,\n"
"                          const char *path,\n"
"                          ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:6208
#, no-wrap
msgid ""
" GUESTFS_IS_CHARDEV_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"
msgstr ""
" GUESTFS_IS_CHARDEV_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6223
msgid "guestfs_is_chardev_opts_va"
msgstr "guestfs_is_chardev_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:6225
#, no-wrap
msgid ""
" int\n"
" guestfs_is_chardev_opts_va (guestfs_h *g,\n"
"                             const char *path,\n"
"                             va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_chardev_opts_va (guestfs_h *g,\n"
"                             const char *path,\n"
"                             va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6230
msgid "This is the \"va_list variant\" of L</guestfs_is_chardev_opts>."
msgstr "Це «варіант з va_list» L</guestfs_is_chardev_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6234
msgid "guestfs_is_chardev_opts_argv"
msgstr "guestfs_is_chardev_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:6236
#, no-wrap
msgid ""
" int\n"
" guestfs_is_chardev_opts_argv (guestfs_h *g,\n"
"                               const char *path,\n"
"                               const struct guestfs_is_chardev_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_chardev_opts_argv (guestfs_h *g,\n"
"                               const char *path,\n"
"                               const struct guestfs_is_chardev_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6241
msgid "This is the \"argv variant\" of L</guestfs_is_chardev_opts>."
msgstr "Це «варіант з argv» L</guestfs_is_chardev_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6245
msgid "guestfs_is_config"
msgstr "guestfs_is_config"

#. type: verbatim
#: ../src/guestfs-actions.pod:6247
#, no-wrap
msgid ""
" int\n"
" guestfs_is_config (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_config (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6259
msgid "guestfs_is_dir"
msgstr "guestfs_is_dir"

#. type: verbatim
#: ../src/guestfs-actions.pod:6261
#, no-wrap
msgid ""
" int\n"
" guestfs_is_dir (guestfs_h *g,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_dir (guestfs_h *g,\n"
"                 const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6265
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_is_dir_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6272
msgid "guestfs_is_dir_opts"
msgstr "guestfs_is_dir_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:6274
#, no-wrap
msgid ""
" int\n"
" guestfs_is_dir_opts (guestfs_h *g,\n"
"                      const char *path,\n"
"                      ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_dir_opts (guestfs_h *g,\n"
"                      const char *path,\n"
"                      ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:6284
#, no-wrap
msgid ""
" GUESTFS_IS_DIR_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"
msgstr ""
" GUESTFS_IS_DIR_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6300
msgid "guestfs_is_dir_opts_va"
msgstr "guestfs_is_dir_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:6302
#, no-wrap
msgid ""
" int\n"
" guestfs_is_dir_opts_va (guestfs_h *g,\n"
"                         const char *path,\n"
"                         va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_dir_opts_va (guestfs_h *g,\n"
"                         const char *path,\n"
"                         va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6307
msgid "This is the \"va_list variant\" of L</guestfs_is_dir_opts>."
msgstr "Це «варіант з va_list» L</guestfs_is_dir_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6311
msgid "guestfs_is_dir_opts_argv"
msgstr "guestfs_is_dir_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:6313
#, no-wrap
msgid ""
" int\n"
" guestfs_is_dir_opts_argv (guestfs_h *g,\n"
"                           const char *path,\n"
"                           const struct guestfs_is_dir_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_dir_opts_argv (guestfs_h *g,\n"
"                           const char *path,\n"
"                           const struct guestfs_is_dir_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6318
msgid "This is the \"argv variant\" of L</guestfs_is_dir_opts>."
msgstr "Це «варіант з argv» L</guestfs_is_dir_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6322
msgid "guestfs_is_fifo"
msgstr "guestfs_is_fifo"

#. type: verbatim
#: ../src/guestfs-actions.pod:6324
#, no-wrap
msgid ""
" int\n"
" guestfs_is_fifo (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_fifo (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6328
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_is_fifo_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6335
msgid "guestfs_is_fifo_opts"
msgstr "guestfs_is_fifo_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:6337
#, no-wrap
msgid ""
" int\n"
" guestfs_is_fifo_opts (guestfs_h *g,\n"
"                       const char *path,\n"
"                       ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_fifo_opts (guestfs_h *g,\n"
"                       const char *path,\n"
"                       ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:6347
#, no-wrap
msgid ""
" GUESTFS_IS_FIFO_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"
msgstr ""
" GUESTFS_IS_FIFO_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6362
msgid "guestfs_is_fifo_opts_va"
msgstr "guestfs_is_fifo_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:6364
#, no-wrap
msgid ""
" int\n"
" guestfs_is_fifo_opts_va (guestfs_h *g,\n"
"                          const char *path,\n"
"                          va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_fifo_opts_va (guestfs_h *g,\n"
"                          const char *path,\n"
"                          va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6369
msgid "This is the \"va_list variant\" of L</guestfs_is_fifo_opts>."
msgstr "Це «варіант з va_list» L</guestfs_is_fifo_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6373
msgid "guestfs_is_fifo_opts_argv"
msgstr "guestfs_is_fifo_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:6375
#, no-wrap
msgid ""
" int\n"
" guestfs_is_fifo_opts_argv (guestfs_h *g,\n"
"                            const char *path,\n"
"                            const struct guestfs_is_fifo_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_fifo_opts_argv (guestfs_h *g,\n"
"                            const char *path,\n"
"                            const struct guestfs_is_fifo_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6380
msgid "This is the \"argv variant\" of L</guestfs_is_fifo_opts>."
msgstr "Це «варіант з argv» L</guestfs_is_fifo_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6384
msgid "guestfs_is_file"
msgstr "guestfs_is_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:6386
#, no-wrap
msgid ""
" int\n"
" guestfs_is_file (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_file (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6390
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_is_file_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6397
msgid "guestfs_is_file_opts"
msgstr "guestfs_is_file_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:6399
#, no-wrap
msgid ""
" int\n"
" guestfs_is_file_opts (guestfs_h *g,\n"
"                       const char *path,\n"
"                       ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_file_opts (guestfs_h *g,\n"
"                       const char *path,\n"
"                       ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:6409
#, no-wrap
msgid ""
" GUESTFS_IS_FILE_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"
msgstr ""
" GUESTFS_IS_FILE_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6425
msgid "guestfs_is_file_opts_va"
msgstr "guestfs_is_file_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:6427
#, no-wrap
msgid ""
" int\n"
" guestfs_is_file_opts_va (guestfs_h *g,\n"
"                          const char *path,\n"
"                          va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_file_opts_va (guestfs_h *g,\n"
"                          const char *path,\n"
"                          va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6432
msgid "This is the \"va_list variant\" of L</guestfs_is_file_opts>."
msgstr "Це «варіант з va_list» L</guestfs_is_file_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6436
msgid "guestfs_is_file_opts_argv"
msgstr "guestfs_is_file_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:6438
#, no-wrap
msgid ""
" int\n"
" guestfs_is_file_opts_argv (guestfs_h *g,\n"
"                            const char *path,\n"
"                            const struct guestfs_is_file_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_file_opts_argv (guestfs_h *g,\n"
"                            const char *path,\n"
"                            const struct guestfs_is_file_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6443
msgid "This is the \"argv variant\" of L</guestfs_is_file_opts>."
msgstr "Це «варіант з argv» L</guestfs_is_file_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6447
msgid "guestfs_is_launching"
msgstr "guestfs_is_launching"

#. type: verbatim
#: ../src/guestfs-actions.pod:6449
#, no-wrap
msgid ""
" int\n"
" guestfs_is_launching (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_launching (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6452
msgid ""
"This returns true iff this handle is launching the subprocess (in the "
"C<LAUNCHING> state)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6461
msgid "guestfs_is_lv"
msgstr "guestfs_is_lv"

#. type: verbatim
#: ../src/guestfs-actions.pod:6463
#, no-wrap
msgid ""
" int\n"
" guestfs_is_lv (guestfs_h *g,\n"
"                const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_lv (guestfs_h *g,\n"
"                const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6474
msgid "guestfs_is_ready"
msgstr "guestfs_is_ready"

#. type: verbatim
#: ../src/guestfs-actions.pod:6476
#, no-wrap
msgid ""
" int\n"
" guestfs_is_ready (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_ready (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6479
msgid ""
"This returns true iff this handle is ready to accept commands (in the "
"C<READY> state)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6488
msgid "guestfs_is_socket"
msgstr "guestfs_is_socket"

#. type: verbatim
#: ../src/guestfs-actions.pod:6490
#, no-wrap
msgid ""
" int\n"
" guestfs_is_socket (guestfs_h *g,\n"
"                    const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_socket (guestfs_h *g,\n"
"                    const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6494
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_is_socket_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6501
msgid "guestfs_is_socket_opts"
msgstr "guestfs_is_socket_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:6503
#, no-wrap
msgid ""
" int\n"
" guestfs_is_socket_opts (guestfs_h *g,\n"
"                         const char *path,\n"
"                         ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_socket_opts (guestfs_h *g,\n"
"                         const char *path,\n"
"                         ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:6513
#, no-wrap
msgid ""
" GUESTFS_IS_SOCKET_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"
msgstr ""
" GUESTFS_IS_SOCKET_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6528
msgid "guestfs_is_socket_opts_va"
msgstr "guestfs_is_socket_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:6530
#, no-wrap
msgid ""
" int\n"
" guestfs_is_socket_opts_va (guestfs_h *g,\n"
"                            const char *path,\n"
"                            va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_socket_opts_va (guestfs_h *g,\n"
"                            const char *path,\n"
"                            va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6535
msgid "This is the \"va_list variant\" of L</guestfs_is_socket_opts>."
msgstr "Це «варіант з va_list» L</guestfs_is_socket_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6539
msgid "guestfs_is_socket_opts_argv"
msgstr "guestfs_is_socket_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:6541
#, no-wrap
msgid ""
" int\n"
" guestfs_is_socket_opts_argv (guestfs_h *g,\n"
"                              const char *path,\n"
"                              const struct guestfs_is_socket_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_socket_opts_argv (guestfs_h *g,\n"
"                              const char *path,\n"
"                              const struct guestfs_is_socket_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6546
msgid "This is the \"argv variant\" of L</guestfs_is_socket_opts>."
msgstr "Це «варіант з argv» L</guestfs_is_socket_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:6550
msgid "guestfs_is_symlink"
msgstr "guestfs_is_symlink"

#. type: verbatim
#: ../src/guestfs-actions.pod:6552
#, no-wrap
msgid ""
" int\n"
" guestfs_is_symlink (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_symlink (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6565
msgid "guestfs_is_whole_device"
msgstr "guestfs_is_whole_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:6567
#, no-wrap
msgid ""
" int\n"
" guestfs_is_whole_device (guestfs_h *g,\n"
"                          const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_whole_device (guestfs_h *g,\n"
"                          const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6576
msgid "(Added in 1.21.9)"
msgstr "(Додано у 1.21.9)"

#. type: =head2
#: ../src/guestfs-actions.pod:6578
msgid "guestfs_is_zero"
msgstr "guestfs_is_zero"

#. type: verbatim
#: ../src/guestfs-actions.pod:6580
#, no-wrap
msgid ""
" int\n"
" guestfs_is_zero (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_zero (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6589 ../src/guestfs-actions.pod:6603
msgid "(Added in 1.11.8)"
msgstr "(Додано у 1.11.8)"

#. type: =head2
#: ../src/guestfs-actions.pod:6591
msgid "guestfs_is_zero_device"
msgstr "guestfs_is_zero_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:6593
#, no-wrap
msgid ""
" int\n"
" guestfs_is_zero_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_is_zero_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6605 ../src/guestfs-structs.pod:442
msgid "guestfs_isoinfo"
msgstr "guestfs_isoinfo"

#. type: verbatim
#: ../src/guestfs-actions.pod:6607
#, no-wrap
msgid ""
" struct guestfs_isoinfo *\n"
" guestfs_isoinfo (guestfs_h *g,\n"
"                  const char *isofile);\n"
"\n"
msgstr ""
" struct guestfs_isoinfo *\n"
" guestfs_isoinfo (guestfs_h *g,\n"
"                  const char *isofile);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6611
msgid ""
"This is the same as C<guestfs_isoinfo_device> except that it works for an "
"ISO file located inside some other mounted filesystem.  Note that in the "
"common case where you have added an ISO file as a libguestfs device, you "
"would I<not> call this.  Instead you would call C<guestfs_isoinfo_device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6617 ../src/guestfs-actions.pod:6640
msgid ""
"This function returns a C<struct guestfs_isoinfo *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_isoinfo> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6621 ../src/guestfs-actions.pod:6644
msgid "(Added in 1.17.19)"
msgstr "(Додано у 1.17.19)"

#. type: =head2
#: ../src/guestfs-actions.pod:6623
msgid "guestfs_isoinfo_device"
msgstr "guestfs_isoinfo_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:6625
#, no-wrap
msgid ""
" struct guestfs_isoinfo *\n"
" guestfs_isoinfo_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""
" struct guestfs_isoinfo *\n"
" guestfs_isoinfo_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6646
msgid "guestfs_journal_close"
msgstr "guestfs_journal_close"

#. type: verbatim
#: ../src/guestfs-actions.pod:6648
#, no-wrap
msgid ""
" int\n"
" guestfs_journal_close (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_journal_close (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6655 ../src/guestfs-actions.pod:6682
#: ../src/guestfs-actions.pod:6698 ../src/guestfs-actions.pod:6727
#: ../src/guestfs-actions.pod:6746 ../src/guestfs-actions.pod:6763
#: ../src/guestfs-actions.pod:6781
msgid "(Added in 1.23.11)"
msgstr "(Додано у 1.23.11)"

#. type: =head2
#: ../src/guestfs-actions.pod:6657
msgid "guestfs_journal_get"
msgstr "guestfs_journal_get"

#. type: verbatim
#: ../src/guestfs-actions.pod:6659
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_journal_get (guestfs_h *g);\n"
"\n"
msgstr ""
" struct guestfs_xattr_list *\n"
" guestfs_journal_get (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6670
msgid ""
"The length of data may be truncated to the data threshold (see: "
"C<guestfs_journal_set_data_threshold>, "
"C<guestfs_journal_get_data_threshold>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6684
msgid "guestfs_journal_get_data_threshold"
msgstr "guestfs_journal_get_data_threshold"

#. type: verbatim
#: ../src/guestfs-actions.pod:6686
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_journal_get_data_threshold (guestfs_h *g);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_journal_get_data_threshold (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6694
msgid "See also C<guestfs_journal_set_data_threshold>."
msgstr "Див. також C<guestfs_journal_set_data_threshold>"

#. type: =head2
#: ../src/guestfs-actions.pod:6700
msgid "guestfs_journal_get_realtime_usec"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6702
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_journal_get_realtime_usec (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6709
msgid "(Added in 1.27.18)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6711
msgid "guestfs_journal_next"
msgstr "guestfs_journal_next"

#. type: verbatim
#: ../src/guestfs-actions.pod:6713
#, no-wrap
msgid ""
" int\n"
" guestfs_journal_next (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_journal_next (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6720
msgid ""
"The returned boolean tells you if there are any more journal records to "
"read.  C<true> means you can read the next record (eg. using "
"C<guestfs_journal_get_data>), and C<false> means you have reached the end of "
"the journal."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6729
msgid "guestfs_journal_open"
msgstr "guestfs_journal_open"

#. type: verbatim
#: ../src/guestfs-actions.pod:6731
#, no-wrap
msgid ""
" int\n"
" guestfs_journal_open (guestfs_h *g,\n"
"                       const char *directory);\n"
"\n"
msgstr ""
" int\n"
" guestfs_journal_open (guestfs_h *g,\n"
"                       const char *directory);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6738
msgid ""
"The contents of the journal can be read using C<guestfs_journal_next> and "
"C<guestfs_journal_get>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6741
msgid ""
"After you have finished using the journal, you should close the handle by "
"calling C<guestfs_journal_close>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6748
msgid "guestfs_journal_set_data_threshold"
msgstr "guestfs_journal_set_data_threshold"

#. type: verbatim
#: ../src/guestfs-actions.pod:6750
#, no-wrap
msgid ""
" int\n"
" guestfs_journal_set_data_threshold (guestfs_h *g,\n"
"                                     int64_t threshold);\n"
"\n"
msgstr ""
" int\n"
" guestfs_journal_set_data_threshold (guestfs_h *g,\n"
"                                     int64_t threshold);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6759
msgid "See also C<guestfs_journal_get_data_threshold>."
msgstr "Див. також C<guestfs_journal_get_data_threshold>."

#. type: =head2
#: ../src/guestfs-actions.pod:6765
msgid "guestfs_journal_skip"
msgstr "guestfs_journal_skip"

#. type: verbatim
#: ../src/guestfs-actions.pod:6767
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_journal_skip (guestfs_h *g,\n"
"                       int64_t skip);\n"
"\n"
msgstr ""
" int64_t\n"
" guestfs_journal_skip (guestfs_h *g,\n"
"                       int64_t skip);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6783
msgid "guestfs_kill_subprocess"
msgstr "guestfs_kill_subprocess"

#. type: verbatim
#: ../src/guestfs-actions.pod:6785
#, no-wrap
msgid ""
" int\n"
" guestfs_kill_subprocess (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_kill_subprocess (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6788
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_shutdown> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6797
msgid "Do not call this.  See: C<guestfs_shutdown> instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6803
msgid "guestfs_launch"
msgstr "guestfs_launch"

#. type: verbatim
#: ../src/guestfs-actions.pod:6805
#, no-wrap
msgid ""
" int\n"
" guestfs_launch (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_launch (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6811
msgid ""
"Do not call C<guestfs_launch> twice on the same handle.  Although it will "
"not give an error (for historical reasons), the precise behaviour when you "
"do this is not well defined.  Handles are very cheap to create, so create a "
"new one for each launch."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6825
msgid "guestfs_lchown"
msgstr "guestfs_lchown"

#. type: verbatim
#: ../src/guestfs-actions.pod:6827
#, no-wrap
msgid ""
" int\n"
" guestfs_lchown (guestfs_h *g,\n"
"                 int owner,\n"
"                 int group,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lchown (guestfs_h *g,\n"
"                 int owner,\n"
"                 int group,\n"
"                 const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6833
msgid ""
"Change the file owner to C<owner> and group to C<group>.  This is like "
"C<guestfs_chown> but if C<path> is a symlink then the link itself is "
"changed, not the target."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6845
msgid "guestfs_ldmtool_create_all"
msgstr "guestfs_ldmtool_create_all"

#. type: verbatim
#: ../src/guestfs-actions.pod:6847
#, no-wrap
msgid ""
" int\n"
" guestfs_ldmtool_create_all (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ldmtool_create_all (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6854
msgid ""
"Call C<guestfs_list_ldm_volumes> and C<guestfs_list_ldm_partitions> to "
"return all devices."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6857
msgid ""
"Note that you B<don't> normally need to call this explicitly, since it is "
"done automatically at C<guestfs_launch> time.  However you might want to "
"call this function if you have hotplugged disks or have just created a "
"Windows dynamic disk."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6864 ../src/guestfs-actions.pod:6880
#: ../src/guestfs-actions.pod:6895 ../src/guestfs-actions.pod:6911
#: ../src/guestfs-actions.pod:6924 ../src/guestfs-actions.pod:6942
#: ../src/guestfs-actions.pod:6961 ../src/guestfs-actions.pod:6978
#: ../src/guestfs-actions.pod:6994 ../src/guestfs-actions.pod:7013
#: ../src/guestfs-actions.pod:7193 ../src/guestfs-actions.pod:7208
msgid "(Added in 1.20.0)"
msgstr "(Додано у 1.20.0)"

#. type: =head2
#: ../src/guestfs-actions.pod:6866
msgid "guestfs_ldmtool_diskgroup_disks"
msgstr "guestfs_ldmtool_diskgroup_disks"

#. type: verbatim
#: ../src/guestfs-actions.pod:6868
#, no-wrap
msgid ""
" char **\n"
" guestfs_ldmtool_diskgroup_disks (guestfs_h *g,\n"
"                                  const char *diskgroup);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_ldmtool_diskgroup_disks (guestfs_h *g,\n"
"                                  const char *diskgroup);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6872
msgid ""
"Return the disks in a Windows dynamic disk group.  The C<diskgroup> "
"parameter should be the GUID of a disk group, one element from the list "
"returned by C<guestfs_ldmtool_scan>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6882
msgid "guestfs_ldmtool_diskgroup_name"
msgstr "guestfs_ldmtool_diskgroup_name"

#. type: verbatim
#: ../src/guestfs-actions.pod:6884
#, no-wrap
msgid ""
" char *\n"
" guestfs_ldmtool_diskgroup_name (guestfs_h *g,\n"
"                                 const char *diskgroup);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_ldmtool_diskgroup_name (guestfs_h *g,\n"
"                                 const char *diskgroup);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6888
msgid ""
"Return the name of a Windows dynamic disk group.  The C<diskgroup> parameter "
"should be the GUID of a disk group, one element from the list returned by "
"C<guestfs_ldmtool_scan>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6897
msgid "guestfs_ldmtool_diskgroup_volumes"
msgstr "guestfs_ldmtool_diskgroup_volumes"

#. type: verbatim
#: ../src/guestfs-actions.pod:6899
#, no-wrap
msgid ""
" char **\n"
" guestfs_ldmtool_diskgroup_volumes (guestfs_h *g,\n"
"                                    const char *diskgroup);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_ldmtool_diskgroup_volumes (guestfs_h *g,\n"
"                                    const char *diskgroup);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6903
msgid ""
"Return the volumes in a Windows dynamic disk group.  The C<diskgroup> "
"parameter should be the GUID of a disk group, one element from the list "
"returned by C<guestfs_ldmtool_scan>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6913
msgid "guestfs_ldmtool_remove_all"
msgstr "guestfs_ldmtool_remove_all"

#. type: verbatim
#: ../src/guestfs-actions.pod:6915
#, no-wrap
msgid ""
" int\n"
" guestfs_ldmtool_remove_all (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ldmtool_remove_all (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6918
msgid ""
"This is essentially the opposite of C<guestfs_ldmtool_create_all>.  It "
"removes the device mapper mappings for all Windows dynamic disk volumes"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6926
msgid "guestfs_ldmtool_scan"
msgstr "guestfs_ldmtool_scan"

#. type: verbatim
#: ../src/guestfs-actions.pod:6928
#, no-wrap
msgid ""
" char **\n"
" guestfs_ldmtool_scan (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_ldmtool_scan (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:6931 ../src/guestfs-actions.pod:6950
msgid ""
"This function scans for Windows dynamic disks.  It returns a list of "
"identifiers (GUIDs) for all disk groups that were found.  These identifiers "
"can be passed to other C<guestfs_ldmtool_*> functions."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6935
msgid ""
"This function scans all block devices.  To scan a subset of block devices, "
"call C<guestfs_ldmtool_scan_devices> instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6944
msgid "guestfs_ldmtool_scan_devices"
msgstr "guestfs_ldmtool_scan_devices"

#. type: verbatim
#: ../src/guestfs-actions.pod:6946
#, no-wrap
msgid ""
" char **\n"
" guestfs_ldmtool_scan_devices (guestfs_h *g,\n"
"                               char *const *devices);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_ldmtool_scan_devices (guestfs_h *g,\n"
"                               char *const *devices);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6963
msgid "guestfs_ldmtool_volume_hint"
msgstr "guestfs_ldmtool_volume_hint"

#. type: verbatim
#: ../src/guestfs-actions.pod:6965
#, no-wrap
msgid ""
" char *\n"
" guestfs_ldmtool_volume_hint (guestfs_h *g,\n"
"                              const char *diskgroup,\n"
"                              const char *volume);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_ldmtool_volume_hint (guestfs_h *g,\n"
"                              const char *diskgroup,\n"
"                              const char *volume);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6980
msgid "guestfs_ldmtool_volume_partitions"
msgstr "guestfs_ldmtool_volume_partitions"

#. type: verbatim
#: ../src/guestfs-actions.pod:6982
#, no-wrap
msgid ""
" char **\n"
" guestfs_ldmtool_volume_partitions (guestfs_h *g,\n"
"                                    const char *diskgroup,\n"
"                                    const char *volume);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_ldmtool_volume_partitions (guestfs_h *g,\n"
"                                    const char *diskgroup,\n"
"                                    const char *volume);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:6996
msgid "guestfs_ldmtool_volume_type"
msgstr "guestfs_ldmtool_volume_type"

#. type: verbatim
#: ../src/guestfs-actions.pod:6998
#, no-wrap
msgid ""
" char *\n"
" guestfs_ldmtool_volume_type (guestfs_h *g,\n"
"                              const char *diskgroup,\n"
"                              const char *volume);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_ldmtool_volume_type (guestfs_h *g,\n"
"                              const char *diskgroup,\n"
"                              const char *volume);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7015
msgid "guestfs_lgetxattr"
msgstr "guestfs_lgetxattr"

#. type: verbatim
#: ../src/guestfs-actions.pod:7017
#, no-wrap
msgid ""
" char *\n"
" guestfs_lgetxattr (guestfs_h *g,\n"
"                    const char *path,\n"
"                    const char *name,\n"
"                    size_t *size_r);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_lgetxattr (guestfs_h *g,\n"
"                    const char *path,\n"
"                    const char *name,\n"
"                    size_t *size_r);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7037
msgid "See also: C<guestfs_lgetxattrs>, C<guestfs_getxattr>, L<attr(5)>."
msgstr "Див. також C<guestfs_lgetxattrs>, C<guestfs_getxattr>, L<attr(5)>."

#. type: =head2
#: ../src/guestfs-actions.pod:7045
msgid "guestfs_lgetxattrs"
msgstr "guestfs_lgetxattrs"

#. type: verbatim
#: ../src/guestfs-actions.pod:7047
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_lgetxattrs (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""
" struct guestfs_xattr_list *\n"
" guestfs_lgetxattrs (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7051
msgid ""
"This is the same as C<guestfs_getxattrs>, but if C<path> is a symbolic link, "
"then it returns the extended attributes of the link itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7061
msgid "guestfs_list_9p"
msgstr "guestfs_list_9p"

#. type: verbatim
#: ../src/guestfs-actions.pod:7063
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_9p (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_list_9p (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7075
msgid "guestfs_list_devices"
msgstr "guestfs_list_devices"

#. type: verbatim
#: ../src/guestfs-actions.pod:7077
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_devices (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_list_devices (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7092
msgid "guestfs_list_disk_labels"
msgstr "guestfs_list_disk_labels"

#. type: verbatim
#: ../src/guestfs-actions.pod:7094
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_disk_labels (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_list_disk_labels (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7097
msgid ""
"If you add drives using the optional C<label> parameter of "
"C<guestfs_add_drive_opts>, you can use this call to map between disk labels, "
"and raw block device and partition names (like C</dev/sda> and C</dev/sda1>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7113 ../src/guestfs-actions.pod:10447
msgid "(Added in 1.19.49)"
msgstr "(Додано у 1.19.49)"

#. type: =head2
#: ../src/guestfs-actions.pod:7115
msgid "guestfs_list_dm_devices"
msgstr "guestfs_list_dm_devices"

#. type: verbatim
#: ../src/guestfs-actions.pod:7117
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_dm_devices (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_list_dm_devices (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7122
msgid ""
"The returned list contains C</dev/mapper/*> devices, eg. ones created by a "
"previous call to C<guestfs_luks_open>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7125
msgid ""
"Device mapper devices which correspond to logical volumes are I<not> "
"returned in this list.  Call C<guestfs_lvs> if you want to list logical "
"volumes."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7133 ../src/guestfs-actions.pod:9492
msgid "(Added in 1.11.15)"
msgstr "(Додано у 1.11.15)"

#. type: =head2
#: ../src/guestfs-actions.pod:7135
msgid "guestfs_list_filesystems"
msgstr "guestfs_list_filesystems"

#. type: verbatim
#: ../src/guestfs-actions.pod:7137
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_filesystems (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_list_filesystems (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7153
msgid ""
"The key is not necessarily a block device. It may also be an opaque "
"'mountable' string which can be passed to C<guestfs_mount>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7160
msgid ""
"This command runs other libguestfs commands, which might include "
"C<guestfs_mount> and C<guestfs_umount>, and therefore you should use this "
"soon after launch and only when nothing is mounted."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7164
msgid ""
"Not all of the filesystems returned will be mountable.  In particular, swap "
"partitions are returned in the list.  Also this command does not check that "
"each filesystem found is valid and mountable, and some filesystems might be "
"mountable but require special options.  Filesystems may not all belong to a "
"single logical operating system (use C<guestfs_inspect_os> to look for OSes)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7178 ../src/guestfs-actions.pod:9945
msgid "(Added in 1.5.15)"
msgstr "(Додано у 1.5.15)"

#. type: =head2
#: ../src/guestfs-actions.pod:7180
msgid "guestfs_list_ldm_partitions"
msgstr "guestfs_list_ldm_partitions"

#. type: verbatim
#: ../src/guestfs-actions.pod:7182
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_ldm_partitions (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_list_ldm_partitions (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7195
msgid "guestfs_list_ldm_volumes"
msgstr "guestfs_list_ldm_volumes"

#. type: verbatim
#: ../src/guestfs-actions.pod:7197
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_ldm_volumes (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_list_ldm_volumes (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7210
msgid "guestfs_list_md_devices"
msgstr "guestfs_list_md_devices"

#. type: verbatim
#: ../src/guestfs-actions.pod:7212
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_md_devices (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_list_md_devices (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7221 ../src/guestfs-actions.pod:12526
msgid "(Added in 1.15.4)"
msgstr "(Додано у 1.15.4)"

#. type: =head2
#: ../src/guestfs-actions.pod:7223
msgid "guestfs_list_partitions"
msgstr "guestfs_list_partitions"

#. type: verbatim
#: ../src/guestfs-actions.pod:7225
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_partitions (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_list_partitions (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7232
msgid ""
"This does not return logical volumes.  For that you will need to call "
"C<guestfs_lvs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7243
msgid "guestfs_ll"
msgstr "guestfs_ll"

#. type: verbatim
#: ../src/guestfs-actions.pod:7245
#, no-wrap
msgid ""
" char *\n"
" guestfs_ll (guestfs_h *g,\n"
"             const char *directory);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_ll (guestfs_h *g,\n"
"             const char *directory);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7260
msgid "guestfs_llz"
msgstr "guestfs_llz"

#. type: verbatim
#: ../src/guestfs-actions.pod:7262
#, no-wrap
msgid ""
" char *\n"
" guestfs_llz (guestfs_h *g,\n"
"              const char *directory);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_llz (guestfs_h *g,\n"
"              const char *directory);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7274 ../src/guestfs-actions.pod:13287
msgid "(Added in 1.17.6)"
msgstr "(Додано у 1.17.6)"

#. type: =head2
#: ../src/guestfs-actions.pod:7276
msgid "guestfs_ln"
msgstr "guestfs_ln"

#. type: verbatim
#: ../src/guestfs-actions.pod:7278
#, no-wrap
msgid ""
" int\n"
" guestfs_ln (guestfs_h *g,\n"
"             const char *target,\n"
"             const char *linkname);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ln (guestfs_h *g,\n"
"             const char *target,\n"
"             const char *linkname);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7289
msgid "guestfs_ln_f"
msgstr "guestfs_ln_f"

#. type: verbatim
#: ../src/guestfs-actions.pod:7291
#, no-wrap
msgid ""
" int\n"
" guestfs_ln_f (guestfs_h *g,\n"
"               const char *target,\n"
"               const char *linkname);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ln_f (guestfs_h *g,\n"
"               const char *target,\n"
"               const char *linkname);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7303
msgid "guestfs_ln_s"
msgstr "guestfs_ln_s"

#. type: verbatim
#: ../src/guestfs-actions.pod:7305
#, no-wrap
msgid ""
" int\n"
" guestfs_ln_s (guestfs_h *g,\n"
"               const char *target,\n"
"               const char *linkname);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ln_s (guestfs_h *g,\n"
"               const char *target,\n"
"               const char *linkname);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7316
msgid "guestfs_ln_sf"
msgstr "guestfs_ln_sf"

#. type: verbatim
#: ../src/guestfs-actions.pod:7318
#, no-wrap
msgid ""
" int\n"
" guestfs_ln_sf (guestfs_h *g,\n"
"                const char *target,\n"
"                const char *linkname);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ln_sf (guestfs_h *g,\n"
"                const char *target,\n"
"                const char *linkname);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7330
msgid "guestfs_lremovexattr"
msgstr "guestfs_lremovexattr"

#. type: verbatim
#: ../src/guestfs-actions.pod:7332
#, no-wrap
msgid ""
" int\n"
" guestfs_lremovexattr (guestfs_h *g,\n"
"                       const char *xattr,\n"
"                       const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lremovexattr (guestfs_h *g,\n"
"                       const char *xattr,\n"
"                       const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7337
msgid ""
"This is the same as C<guestfs_removexattr>, but if C<path> is a symbolic "
"link, then it removes an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7345
msgid "guestfs_ls"
msgstr "guestfs_ls"

#. type: verbatim
#: ../src/guestfs-actions.pod:7347
#, no-wrap
msgid ""
" char **\n"
" guestfs_ls (guestfs_h *g,\n"
"             const char *directory);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_ls (guestfs_h *g,\n"
"             const char *directory);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7361
msgid "guestfs_ls0"
msgstr "guestfs_ls0"

#. type: verbatim
#: ../src/guestfs-actions.pod:7363
#, no-wrap
msgid ""
" int\n"
" guestfs_ls0 (guestfs_h *g,\n"
"              const char *dir,\n"
"              const char *filenames);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ls0 (guestfs_h *g,\n"
"              const char *dir,\n"
"              const char *filenames);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7380
msgid "guestfs_lsetxattr"
msgstr "guestfs_lsetxattr"

#. type: verbatim
#: ../src/guestfs-actions.pod:7382
#, no-wrap
msgid ""
" int\n"
" guestfs_lsetxattr (guestfs_h *g,\n"
"                    const char *xattr,\n"
"                    const char *val,\n"
"                    int vallen,\n"
"                    const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lsetxattr (guestfs_h *g,\n"
"                    const char *xattr,\n"
"                    const char *val,\n"
"                    int vallen,\n"
"                    const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7389
msgid ""
"This is the same as C<guestfs_setxattr>, but if C<path> is a symbolic link, "
"then it sets an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7397
msgid "guestfs_lstat"
msgstr "guestfs_lstat"

#. type: verbatim
#: ../src/guestfs-actions.pod:7399
#, no-wrap
msgid ""
" struct guestfs_stat *\n"
" guestfs_lstat (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""
" struct guestfs_stat *\n"
" guestfs_lstat (guestfs_h *g,\n"
"                const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7403
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_lstatns> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7412
msgid ""
"This is the same as C<guestfs_stat> except that if C<path> is a symbolic "
"link, then the link is stat-ed, not the file it refers to."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7418 ../src/guestfs-actions.pod:11832
msgid ""
"This function returns a C<struct guestfs_stat *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_stat> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7422 ../src/guestfs-actions.pod:11836
#: ../src/guestfs-actions.pod:11870 ../src/guestfs-actions.pod:12570
msgid "(Added in 0.9.2)"
msgstr "(Додано у 0.9.2)"

#. type: =head2
#: ../src/guestfs-actions.pod:7424
msgid "guestfs_lstatlist"
msgstr "guestfs_lstatlist"

#. type: verbatim
#: ../src/guestfs-actions.pod:7426
#, no-wrap
msgid ""
" struct guestfs_stat_list *\n"
" guestfs_lstatlist (guestfs_h *g,\n"
"                    const char *path,\n"
"                    char *const *names);\n"
"\n"
msgstr ""
" struct guestfs_stat_list *\n"
" guestfs_lstatlist (guestfs_h *g,\n"
"                    const char *path,\n"
"                    char *const *names);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7431
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_lstatnslist> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7438
msgid ""
"This call allows you to perform the C<guestfs_lstat> operation on multiple "
"files, where all files are in the directory C<path>.  C<names> is the list "
"of files from this directory."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7447 ../src/guestfs-actions.pod:7494
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also C<guestfs_lxattrlist> "
"for a similarly efficient call for getting extended attributes."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7452
msgid ""
"This function returns a C<struct guestfs_stat_list *>, or NULL if there was "
"an error.  I<The caller must call C<guestfs_free_stat_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7458
msgid "guestfs_lstatns"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7460
#, no-wrap
msgid ""
" struct guestfs_statns *\n"
" guestfs_lstatns (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7466
msgid ""
"This is the same as C<guestfs_statns> except that if C<path> is a symbolic "
"link, then the link is stat-ed, not the file it refers to."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7472 ../src/guestfs-actions.pod:11848
msgid ""
"This function returns a C<struct guestfs_statns *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_statns> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7476 ../src/guestfs-actions.pod:7503
#: ../src/guestfs-actions.pod:11852
msgid "(Added in 1.27.53)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7478
msgid "guestfs_lstatnslist"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7480
#, no-wrap
msgid ""
" struct guestfs_statns_list *\n"
" guestfs_lstatnslist (guestfs_h *g,\n"
"                      const char *path,\n"
"                      char *const *names);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7485
msgid ""
"This call allows you to perform the C<guestfs_lstatns> operation on multiple "
"files, where all files are in the directory C<path>.  C<names> is the list "
"of files from this directory."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7499
msgid ""
"This function returns a C<struct guestfs_statns_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_statns_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7505
msgid "guestfs_luks_add_key"
msgstr "guestfs_luks_add_key"

#. type: verbatim
#: ../src/guestfs-actions.pod:7507
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_add_key (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const char *key,\n"
"                       const char *newkey,\n"
"                       int keyslot);\n"
"\n"
msgstr ""
" int\n"
" guestfs_luks_add_key (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const char *key,\n"
"                       const char *newkey,\n"
"                       int keyslot);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7519
msgid ""
"Note that if C<keyslot> already contains a key, then this command will "
"fail.  You have to use C<guestfs_luks_kill_slot> first to remove that key."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7525 ../src/guestfs-actions.pod:7562
#: ../src/guestfs-actions.pod:7582 ../src/guestfs-actions.pod:7602
#: ../src/guestfs-actions.pod:7637 ../src/guestfs-actions.pod:7656
msgid ""
"This function takes a key or passphrase parameter which could contain "
"sensitive material.  Read the section L</KEYS AND PASSPHRASES> for more "
"information."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7529 ../src/guestfs-actions.pod:7566
#: ../src/guestfs-actions.pod:7586 ../src/guestfs-actions.pod:7606
msgid "(Added in 1.5.2)"
msgstr "(Додано у 1.5.2)"

#. type: =head2
#: ../src/guestfs-actions.pod:7531
msgid "guestfs_luks_close"
msgstr "guestfs_luks_close"

#. type: verbatim
#: ../src/guestfs-actions.pod:7533
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_close (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_luks_close (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7537
msgid ""
"This closes a LUKS device that was created earlier by C<guestfs_luks_open> "
"or C<guestfs_luks_open_ro>.  The C<device> parameter must be the name of the "
"LUKS mapping device (ie. C</dev/mapper/mapname>) and I<not> the name of the "
"underlying block device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7545 ../src/guestfs-actions.pod:7641
#: ../src/guestfs-actions.pod:7660 ../src/guestfs-actions.pod:7727
#: ../src/guestfs-actions.pod:7772
msgid "(Added in 1.5.1)"
msgstr "(Додано у 1.5.1)"

#. type: =head2
#: ../src/guestfs-actions.pod:7547
msgid "guestfs_luks_format"
msgstr "guestfs_luks_format"

#. type: verbatim
#: ../src/guestfs-actions.pod:7549
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_format (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const char *key,\n"
"                      int keyslot);\n"
"\n"
msgstr ""
" int\n"
" guestfs_luks_format (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const char *key,\n"
"                      int keyslot);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7568
msgid "guestfs_luks_format_cipher"
msgstr "guestfs_luks_format_cipher"

#. type: verbatim
#: ../src/guestfs-actions.pod:7570
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_format_cipher (guestfs_h *g,\n"
"                             const char *device,\n"
"                             const char *key,\n"
"                             int keyslot,\n"
"                             const char *cipher);\n"
"\n"
msgstr ""
" int\n"
" guestfs_luks_format_cipher (guestfs_h *g,\n"
"                             const char *device,\n"
"                             const char *key,\n"
"                             int keyslot,\n"
"                             const char *cipher);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7577
msgid ""
"This command is the same as C<guestfs_luks_format> but it also allows you to "
"set the C<cipher> used."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7588
msgid "guestfs_luks_kill_slot"
msgstr "guestfs_luks_kill_slot"

#. type: verbatim
#: ../src/guestfs-actions.pod:7590
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_kill_slot (guestfs_h *g,\n"
"                         const char *device,\n"
"                         const char *key,\n"
"                         int keyslot);\n"
"\n"
msgstr ""
" int\n"
" guestfs_luks_kill_slot (guestfs_h *g,\n"
"                         const char *device,\n"
"                         const char *key,\n"
"                         int keyslot);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7608
msgid "guestfs_luks_open"
msgstr "guestfs_luks_open"

#. type: verbatim
#: ../src/guestfs-actions.pod:7610
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_open (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *key,\n"
"                    const char *mapname);\n"
"\n"
msgstr ""
" int\n"
" guestfs_luks_open (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *key,\n"
"                    const char *mapname);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7628
msgid ""
"If this block device contains LVM volume groups, then calling "
"C<guestfs_vgscan> followed by C<guestfs_vg_activate_all> will make them "
"visible."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7632
msgid "Use C<guestfs_list_dm_devices> to list all device mapper devices."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7643
msgid "guestfs_luks_open_ro"
msgstr "guestfs_luks_open_ro"

#. type: verbatim
#: ../src/guestfs-actions.pod:7645
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_open_ro (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const char *key,\n"
"                       const char *mapname);\n"
"\n"
msgstr ""
" int\n"
" guestfs_luks_open_ro (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const char *key,\n"
"                       const char *mapname);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7651
msgid ""
"This is the same as C<guestfs_luks_open> except that a read-only mapping is "
"created."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7662
msgid "guestfs_lvcreate"
msgstr "guestfs_lvcreate"

#. type: verbatim
#: ../src/guestfs-actions.pod:7664
#, no-wrap
msgid ""
" int\n"
" guestfs_lvcreate (guestfs_h *g,\n"
"                   const char *logvol,\n"
"                   const char *volgroup,\n"
"                   int mbytes);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lvcreate (guestfs_h *g,\n"
"                   const char *logvol,\n"
"                   const char *volgroup,\n"
"                   int mbytes);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7677
msgid "guestfs_lvcreate_free"
msgstr "guestfs_lvcreate_free"

#. type: verbatim
#: ../src/guestfs-actions.pod:7679
#, no-wrap
msgid ""
" int\n"
" guestfs_lvcreate_free (guestfs_h *g,\n"
"                        const char *logvol,\n"
"                        const char *volgroup,\n"
"                        int percent);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lvcreate_free (guestfs_h *g,\n"
"                        const char *logvol,\n"
"                        const char *volgroup,\n"
"                        int percent);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7692 ../src/guestfs-actions.pod:13673
msgid "(Added in 1.17.18)"
msgstr "(Додано у 1.17.18)"

#. type: =head2
#: ../src/guestfs-actions.pod:7694
msgid "guestfs_lvm_canonical_lv_name"
msgstr "guestfs_lvm_canonical_lv_name"

#. type: verbatim
#: ../src/guestfs-actions.pod:7696
#, no-wrap
msgid ""
" char *\n"
" guestfs_lvm_canonical_lv_name (guestfs_h *g,\n"
"                                const char *lvname);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_lvm_canonical_lv_name (guestfs_h *g,\n"
"                                const char *lvname);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7707
msgid "See also C<guestfs_is_lv>, C<guestfs_canonical_device_name>."
msgstr "Див. також C<guestfs_is_lv>, C<guestfs_canonical_device_name>."

#. type: textblock
#: ../src/guestfs-actions.pod:7712
msgid "(Added in 1.5.24)"
msgstr "(Додано у 1.5.24)"

#. type: =head2
#: ../src/guestfs-actions.pod:7714
msgid "guestfs_lvm_clear_filter"
msgstr "guestfs_lvm_clear_filter"

#. type: verbatim
#: ../src/guestfs-actions.pod:7716
#, no-wrap
msgid ""
" int\n"
" guestfs_lvm_clear_filter (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lvm_clear_filter (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7719
msgid ""
"This undoes the effect of C<guestfs_lvm_set_filter>.  LVM will be able to "
"see every block device."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7729
msgid "guestfs_lvm_remove_all"
msgstr "guestfs_lvm_remove_all"

#. type: verbatim
#: ../src/guestfs-actions.pod:7731
#, no-wrap
msgid ""
" int\n"
" guestfs_lvm_remove_all (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lvm_remove_all (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7741
msgid "guestfs_lvm_set_filter"
msgstr "guestfs_lvm_set_filter"

#. type: verbatim
#: ../src/guestfs-actions.pod:7743
#, no-wrap
msgid ""
" int\n"
" guestfs_lvm_set_filter (guestfs_h *g,\n"
"                         char *const *devices);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lvm_set_filter (guestfs_h *g,\n"
"                         char *const *devices);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7774
msgid "guestfs_lvremove"
msgstr "guestfs_lvremove"

#. type: verbatim
#: ../src/guestfs-actions.pod:7776
#, no-wrap
msgid ""
" int\n"
" guestfs_lvremove (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lvremove (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7788 ../src/guestfs-actions.pod:10083
#: ../src/guestfs-actions.pod:13131
msgid "(Added in 1.0.13)"
msgstr "(Додано у 1.0.13)"

#. type: =head2
#: ../src/guestfs-actions.pod:7790
msgid "guestfs_lvrename"
msgstr "guestfs_lvrename"

#. type: verbatim
#: ../src/guestfs-actions.pod:7792
#, no-wrap
msgid ""
" int\n"
" guestfs_lvrename (guestfs_h *g,\n"
"                   const char *logvol,\n"
"                   const char *newlogvol);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lvrename (guestfs_h *g,\n"
"                   const char *logvol,\n"
"                   const char *newlogvol);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7801 ../src/guestfs-actions.pod:13144
msgid "(Added in 1.0.83)"
msgstr "(Додано у 1.0.83)"

#. type: =head2
#: ../src/guestfs-actions.pod:7803
msgid "guestfs_lvresize"
msgstr "guestfs_lvresize"

#. type: verbatim
#: ../src/guestfs-actions.pod:7805
#, no-wrap
msgid ""
" int\n"
" guestfs_lvresize (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int mbytes);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lvresize (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int mbytes);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7818
msgid "guestfs_lvresize_free"
msgstr "guestfs_lvresize_free"

#. type: verbatim
#: ../src/guestfs-actions.pod:7820
#, no-wrap
msgid ""
" int\n"
" guestfs_lvresize_free (guestfs_h *g,\n"
"                        const char *lv,\n"
"                        int percent);\n"
"\n"
msgstr ""
" int\n"
" guestfs_lvresize_free (guestfs_h *g,\n"
"                        const char *lv,\n"
"                        int percent);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7833
msgid "(Added in 1.3.3)"
msgstr "(Додано у 1.3.3)"

#. type: =head2
#: ../src/guestfs-actions.pod:7835
msgid "guestfs_lvs"
msgstr "guestfs_lvs"

#. type: verbatim
#: ../src/guestfs-actions.pod:7837
#, no-wrap
msgid ""
" char **\n"
" guestfs_lvs (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_lvs (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7846
msgid "See also C<guestfs_lvs_full>, C<guestfs_list_filesystems>."
msgstr "Див. також C<guestfs_lvs_full>, C<guestfs_list_filesystems>."

#. type: =head2
#: ../src/guestfs-actions.pod:7854
msgid "guestfs_lvs_full"
msgstr "guestfs_lvs_full"

#. type: verbatim
#: ../src/guestfs-actions.pod:7856
#, no-wrap
msgid ""
" struct guestfs_lvm_lv_list *\n"
" guestfs_lvs_full (guestfs_h *g);\n"
"\n"
msgstr ""
" struct guestfs_lvm_lv_list *\n"
" guestfs_lvs_full (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7862
msgid ""
"This function returns a C<struct guestfs_lvm_lv_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_lvm_lv_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7868
msgid "guestfs_lvuuid"
msgstr "guestfs_lvuuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:7870
#, no-wrap
msgid ""
" char *\n"
" guestfs_lvuuid (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_lvuuid (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:7881
msgid "guestfs_lxattrlist"
msgstr "guestfs_lxattrlist"

#. type: verbatim
#: ../src/guestfs-actions.pod:7883
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_lxattrlist (guestfs_h *g,\n"
"                     const char *path,\n"
"                     char *const *names);\n"
"\n"
msgstr ""
" struct guestfs_xattr_list *\n"
" guestfs_lxattrlist (guestfs_h *g,\n"
"                     const char *path,\n"
"                     char *const *names);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7902
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also C<guestfs_lstatlist> for "
"a similarly efficient call for getting standard stats."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7913
msgid "guestfs_max_disks"
msgstr "guestfs_max_disks"

#. type: verbatim
#: ../src/guestfs-actions.pod:7915
#, no-wrap
msgid ""
" int\n"
" guestfs_max_disks (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_max_disks (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:7918
msgid ""
"Return the maximum number of disks that may be added to a handle (eg. by "
"C<guestfs_add_drive_opts> and similar calls)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7931
msgid "guestfs_md_create"
msgstr "guestfs_md_create"

#. type: verbatim
#: ../src/guestfs-actions.pod:7933
#, no-wrap
msgid ""
" int\n"
" guestfs_md_create (guestfs_h *g,\n"
"                    const char *name,\n"
"                    char *const *devices,\n"
"                    ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_md_create (guestfs_h *g,\n"
"                    const char *name,\n"
"                    char *const *devices,\n"
"                    ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:7944
#, no-wrap
msgid ""
" GUESTFS_MD_CREATE_MISSINGBITMAP, int64_t missingbitmap,\n"
" GUESTFS_MD_CREATE_NRDEVICES, int nrdevices,\n"
" GUESTFS_MD_CREATE_SPARE, int spare,\n"
" GUESTFS_MD_CREATE_CHUNK, int64_t chunk,\n"
" GUESTFS_MD_CREATE_LEVEL, const char *level,\n"
"\n"
msgstr ""
" GUESTFS_MD_CREATE_MISSINGBITMAP, int64_t missingbitmap,\n"
" GUESTFS_MD_CREATE_NRDEVICES, int nrdevices,\n"
" GUESTFS_MD_CREATE_SPARE, int spare,\n"
" GUESTFS_MD_CREATE_CHUNK, int64_t chunk,\n"
" GUESTFS_MD_CREATE_LEVEL, const char *level,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8006 ../src/guestfs-actions.pod:8072
#: ../src/guestfs-actions.pod:8142
msgid "(Added in 1.15.6)"
msgstr "(Додано у 1.15.6)"

#. type: =head2
#: ../src/guestfs-actions.pod:8008
msgid "guestfs_md_create_va"
msgstr "guestfs_md_create_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:8010
#, no-wrap
msgid ""
" int\n"
" guestfs_md_create_va (guestfs_h *g,\n"
"                       const char *name,\n"
"                       char *const *devices,\n"
"                       va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_md_create_va (guestfs_h *g,\n"
"                       const char *name,\n"
"                       char *const *devices,\n"
"                       va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8016
msgid "This is the \"va_list variant\" of L</guestfs_md_create>."
msgstr "Це «варіант з va_list» L</guestfs_md_create>."

#. type: =head2
#: ../src/guestfs-actions.pod:8020
msgid "guestfs_md_create_argv"
msgstr "guestfs_md_create_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:8022
#, no-wrap
msgid ""
" int\n"
" guestfs_md_create_argv (guestfs_h *g,\n"
"                         const char *name,\n"
"                         char *const *devices,\n"
"                         const struct guestfs_md_create_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_md_create_argv (guestfs_h *g,\n"
"                         const char *name,\n"
"                         char *const *devices,\n"
"                         const struct guestfs_md_create_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8028
msgid "This is the \"argv variant\" of L</guestfs_md_create>."
msgstr "Це «варіант з argv» L</guestfs_md_create>."

#. type: =head2
#: ../src/guestfs-actions.pod:8032
msgid "guestfs_md_detail"
msgstr "guestfs_md_detail"

#. type: verbatim
#: ../src/guestfs-actions.pod:8034
#, no-wrap
msgid ""
" char **\n"
" guestfs_md_detail (guestfs_h *g,\n"
"                    const char *md);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_md_detail (guestfs_h *g,\n"
"                    const char *md);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8074
msgid "guestfs_md_stat"
msgstr "guestfs_md_stat"

#. type: verbatim
#: ../src/guestfs-actions.pod:8076
#, no-wrap
msgid ""
" struct guestfs_mdstat_list *\n"
" guestfs_md_stat (guestfs_h *g,\n"
"                  const char *md);\n"
"\n"
msgstr ""
" struct guestfs_mdstat_list *\n"
" guestfs_md_stat (guestfs_h *g,\n"
"                  const char *md);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8083
msgid ""
"To get a list of software RAID devices, call C<guestfs_list_md_devices>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8125
msgid ""
"This function returns a C<struct guestfs_mdstat_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_mdstat_list> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8129
msgid "(Added in 1.17.21)"
msgstr "(Додано у 1.17.21)"

#. type: =head2
#: ../src/guestfs-actions.pod:8131
msgid "guestfs_md_stop"
msgstr "guestfs_md_stop"

#. type: verbatim
#: ../src/guestfs-actions.pod:8133
#, no-wrap
msgid ""
" int\n"
" guestfs_md_stop (guestfs_h *g,\n"
"                  const char *md);\n"
"\n"
msgstr ""
" int\n"
" guestfs_md_stop (guestfs_h *g,\n"
"                  const char *md);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8144
msgid "guestfs_mkdir"
msgstr "guestfs_mkdir"

#. type: verbatim
#: ../src/guestfs-actions.pod:8146
#, no-wrap
msgid ""
" int\n"
" guestfs_mkdir (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkdir (guestfs_h *g,\n"
"                const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8156
msgid "guestfs_mkdir_mode"
msgstr "guestfs_mkdir_mode"

#. type: verbatim
#: ../src/guestfs-actions.pod:8158
#, no-wrap
msgid ""
" int\n"
" guestfs_mkdir_mode (guestfs_h *g,\n"
"                     const char *path,\n"
"                     int mode);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkdir_mode (guestfs_h *g,\n"
"                     const char *path,\n"
"                     int mode);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8170
msgid "See also C<guestfs_mkdir>, C<guestfs_umask>"
msgstr "Див. також C<guestfs_mkdir>, C<guestfs_umask>"

#. type: =head2
#: ../src/guestfs-actions.pod:8176
msgid "guestfs_mkdir_p"
msgstr "guestfs_mkdir_p"

#. type: verbatim
#: ../src/guestfs-actions.pod:8178
#, no-wrap
msgid ""
" int\n"
" guestfs_mkdir_p (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkdir_p (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8189
msgid "guestfs_mkdtemp"
msgstr "guestfs_mkdtemp"

#. type: verbatim
#: ../src/guestfs-actions.pod:8191
#, no-wrap
msgid ""
" char *\n"
" guestfs_mkdtemp (guestfs_h *g,\n"
"                  const char *tmpl);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_mkdtemp (guestfs_h *g,\n"
"                  const char *tmpl);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8219
msgid "guestfs_mke2fs"
msgstr "guestfs_mke2fs"

#. type: verbatim
#: ../src/guestfs-actions.pod:8221
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs (guestfs_h *g,\n"
"                 const char *device,\n"
"                 ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mke2fs (guestfs_h *g,\n"
"                 const char *device,\n"
"                 ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:8231
#, no-wrap
msgid ""
" GUESTFS_MKE2FS_BLOCKSCOUNT, int64_t blockscount,\n"
" GUESTFS_MKE2FS_BLOCKSIZE, int64_t blocksize,\n"
" GUESTFS_MKE2FS_FRAGSIZE, int64_t fragsize,\n"
" GUESTFS_MKE2FS_BLOCKSPERGROUP, int64_t blockspergroup,\n"
" GUESTFS_MKE2FS_NUMBEROFGROUPS, int64_t numberofgroups,\n"
" GUESTFS_MKE2FS_BYTESPERINODE, int64_t bytesperinode,\n"
" GUESTFS_MKE2FS_INODESIZE, int64_t inodesize,\n"
" GUESTFS_MKE2FS_JOURNALSIZE, int64_t journalsize,\n"
" GUESTFS_MKE2FS_NUMBEROFINODES, int64_t numberofinodes,\n"
" GUESTFS_MKE2FS_STRIDESIZE, int64_t stridesize,\n"
" GUESTFS_MKE2FS_STRIPEWIDTH, int64_t stripewidth,\n"
" GUESTFS_MKE2FS_MAXONLINERESIZE, int64_t maxonlineresize,\n"
" GUESTFS_MKE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
" GUESTFS_MKE2FS_MMPUPDATEINTERVAL, int mmpupdateinterval,\n"
" GUESTFS_MKE2FS_JOURNALDEVICE, const char *journaldevice,\n"
" GUESTFS_MKE2FS_LABEL, const char *label,\n"
" GUESTFS_MKE2FS_LASTMOUNTEDDIR, const char *lastmounteddir,\n"
" GUESTFS_MKE2FS_CREATOROS, const char *creatoros,\n"
" GUESTFS_MKE2FS_FSTYPE, const char *fstype,\n"
" GUESTFS_MKE2FS_USAGETYPE, const char *usagetype,\n"
" GUESTFS_MKE2FS_UUID, const char *uuid,\n"
" GUESTFS_MKE2FS_FORCECREATE, int forcecreate,\n"
" GUESTFS_MKE2FS_WRITESBANDGROUPONLY, int writesbandgrouponly,\n"
" GUESTFS_MKE2FS_LAZYITABLEINIT, int lazyitableinit,\n"
" GUESTFS_MKE2FS_LAZYJOURNALINIT, int lazyjournalinit,\n"
" GUESTFS_MKE2FS_TESTFS, int testfs,\n"
" GUESTFS_MKE2FS_DISCARD, int discard,\n"
" GUESTFS_MKE2FS_QUOTATYPE, int quotatype,\n"
" GUESTFS_MKE2FS_EXTENT, int extent,\n"
" GUESTFS_MKE2FS_FILETYPE, int filetype,\n"
" GUESTFS_MKE2FS_FLEXBG, int flexbg,\n"
" GUESTFS_MKE2FS_HASJOURNAL, int hasjournal,\n"
" GUESTFS_MKE2FS_JOURNALDEV, int journaldev,\n"
" GUESTFS_MKE2FS_LARGEFILE, int largefile,\n"
" GUESTFS_MKE2FS_QUOTA, int quota,\n"
" GUESTFS_MKE2FS_RESIZEINODE, int resizeinode,\n"
" GUESTFS_MKE2FS_SPARSESUPER, int sparsesuper,\n"
" GUESTFS_MKE2FS_UNINITBG, int uninitbg,\n"
"\n"
msgstr ""
" GUESTFS_MKE2FS_BLOCKSCOUNT, int64_t blockscount,\n"
" GUESTFS_MKE2FS_BLOCKSIZE, int64_t blocksize,\n"
" GUESTFS_MKE2FS_FRAGSIZE, int64_t fragsize,\n"
" GUESTFS_MKE2FS_BLOCKSPERGROUP, int64_t blockspergroup,\n"
" GUESTFS_MKE2FS_NUMBEROFGROUPS, int64_t numberofgroups,\n"
" GUESTFS_MKE2FS_BYTESPERINODE, int64_t bytesperinode,\n"
" GUESTFS_MKE2FS_INODESIZE, int64_t inodesize,\n"
" GUESTFS_MKE2FS_JOURNALSIZE, int64_t journalsize,\n"
" GUESTFS_MKE2FS_NUMBEROFINODES, int64_t numberofinodes,\n"
" GUESTFS_MKE2FS_STRIDESIZE, int64_t stridesize,\n"
" GUESTFS_MKE2FS_STRIPEWIDTH, int64_t stripewidth,\n"
" GUESTFS_MKE2FS_MAXONLINERESIZE, int64_t maxonlineresize,\n"
" GUESTFS_MKE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
" GUESTFS_MKE2FS_MMPUPDATEINTERVAL, int mmpupdateinterval,\n"
" GUESTFS_MKE2FS_JOURNALDEVICE, const char *journaldevice,\n"
" GUESTFS_MKE2FS_LABEL, const char *label,\n"
" GUESTFS_MKE2FS_LASTMOUNTEDDIR, const char *lastmounteddir,\n"
" GUESTFS_MKE2FS_CREATOROS, const char *creatoros,\n"
" GUESTFS_MKE2FS_FSTYPE, const char *fstype,\n"
" GUESTFS_MKE2FS_USAGETYPE, const char *usagetype,\n"
" GUESTFS_MKE2FS_UUID, const char *uuid,\n"
" GUESTFS_MKE2FS_FORCECREATE, int forcecreate,\n"
" GUESTFS_MKE2FS_WRITESBANDGROUPONLY, int writesbandgrouponly,\n"
" GUESTFS_MKE2FS_LAZYITABLEINIT, int lazyitableinit,\n"
" GUESTFS_MKE2FS_LAZYJOURNALINIT, int lazyjournalinit,\n"
" GUESTFS_MKE2FS_TESTFS, int testfs,\n"
" GUESTFS_MKE2FS_DISCARD, int discard,\n"
" GUESTFS_MKE2FS_QUOTATYPE, int quotatype,\n"
" GUESTFS_MKE2FS_EXTENT, int extent,\n"
" GUESTFS_MKE2FS_FILETYPE, int filetype,\n"
" GUESTFS_MKE2FS_FLEXBG, int flexbg,\n"
" GUESTFS_MKE2FS_HASJOURNAL, int hasjournal,\n"
" GUESTFS_MKE2FS_JOURNALDEV, int journaldev,\n"
" GUESTFS_MKE2FS_LARGEFILE, int largefile,\n"
" GUESTFS_MKE2FS_QUOTA, int quota,\n"
" GUESTFS_MKE2FS_RESIZEINODE, int resizeinode,\n"
" GUESTFS_MKE2FS_SPARSESUPER, int sparsesuper,\n"
" GUESTFS_MKE2FS_UNINITBG, int uninitbg,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8280
msgid "(Added in 1.19.44)"
msgstr "(Додано у 1.19.44)"

#. type: =head2
#: ../src/guestfs-actions.pod:8282
msgid "guestfs_mke2fs_va"
msgstr "guestfs_mke2fs_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:8284
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_va (guestfs_h *g,\n"
"                    const char *device,\n"
"                    va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mke2fs_va (guestfs_h *g,\n"
"                    const char *device,\n"
"                    va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8289
msgid "This is the \"va_list variant\" of L</guestfs_mke2fs>."
msgstr "Це «варіант з va_list» L</guestfs_mke2fs>."

#. type: =head2
#: ../src/guestfs-actions.pod:8293
msgid "guestfs_mke2fs_argv"
msgstr "guestfs_mke2fs_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:8295
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_argv (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const struct guestfs_mke2fs_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mke2fs_argv (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const struct guestfs_mke2fs_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8300
msgid "This is the \"argv variant\" of L</guestfs_mke2fs>."
msgstr "Це «варіант з argv» L</guestfs_mke2fs>."

#. type: =head2
#: ../src/guestfs-actions.pod:8304
msgid "guestfs_mke2fs_J"
msgstr "guestfs_mke2fs_J"

#. type: verbatim
#: ../src/guestfs-actions.pod:8306
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_J (guestfs_h *g,\n"
"                   const char *fstype,\n"
"                   int blocksize,\n"
"                   const char *device,\n"
"                   const char *journal);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mke2fs_J (guestfs_h *g,\n"
"                   const char *fstype,\n"
"                   int blocksize,\n"
"                   const char *device,\n"
"                   const char *journal);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8313 ../src/guestfs-actions.pod:8341
#: ../src/guestfs-actions.pod:8366 ../src/guestfs-actions.pod:8389
#: ../src/guestfs-actions.pod:8413 ../src/guestfs-actions.pod:8434
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_mke2fs> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8326
msgid "See also C<guestfs_mke2journal>."
msgstr "Див. також C<guestfs_mke2journal>."

#. type: textblock
#: ../src/guestfs-actions.pod:8330 ../src/guestfs-actions.pod:8355
#: ../src/guestfs-actions.pod:8380 ../src/guestfs-actions.pod:8403
#: ../src/guestfs-actions.pod:8424 ../src/guestfs-actions.pod:8445
#: ../src/guestfs-actions.pod:8590 ../src/guestfs-actions.pod:8973
msgid "(Added in 1.0.68)"
msgstr "(Додано у 1.0.68)"

#. type: =head2
#: ../src/guestfs-actions.pod:8332
msgid "guestfs_mke2fs_JL"
msgstr "guestfs_mke2fs_JL"

#. type: verbatim
#: ../src/guestfs-actions.pod:8334
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_JL (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    int blocksize,\n"
"                    const char *device,\n"
"                    const char *label);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mke2fs_JL (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    int blocksize,\n"
"                    const char *device,\n"
"                    const char *label);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8351
msgid "See also C<guestfs_mke2journal_L>."
msgstr "Див. також C<guestfs_mke2journal_L>."

#. type: =head2
#: ../src/guestfs-actions.pod:8357
msgid "guestfs_mke2fs_JU"
msgstr "guestfs_mke2fs_JU"

#. type: verbatim
#: ../src/guestfs-actions.pod:8359
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_JU (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    int blocksize,\n"
"                    const char *device,\n"
"                    const char *uuid);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mke2fs_JU (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    int blocksize,\n"
"                    const char *device,\n"
"                    const char *uuid);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8376
msgid "See also C<guestfs_mke2journal_U>."
msgstr "Див. також C<guestfs_mke2journal_U>."

#. type: =head2
#: ../src/guestfs-actions.pod:8382
msgid "guestfs_mke2journal"
msgstr "guestfs_mke2journal"

#. type: verbatim
#: ../src/guestfs-actions.pod:8384
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2journal (guestfs_h *g,\n"
"                      int blocksize,\n"
"                      const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mke2journal (guestfs_h *g,\n"
"                      int blocksize,\n"
"                      const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8405
msgid "guestfs_mke2journal_L"
msgstr "guestfs_mke2journal_L"

#. type: verbatim
#: ../src/guestfs-actions.pod:8407
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2journal_L (guestfs_h *g,\n"
"                        int blocksize,\n"
"                        const char *label,\n"
"                        const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mke2journal_L (guestfs_h *g,\n"
"                        int blocksize,\n"
"                        const char *label,\n"
"                        const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8426
msgid "guestfs_mke2journal_U"
msgstr "guestfs_mke2journal_U"

#. type: verbatim
#: ../src/guestfs-actions.pod:8428
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2journal_U (guestfs_h *g,\n"
"                        int blocksize,\n"
"                        const char *uuid,\n"
"                        const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mke2journal_U (guestfs_h *g,\n"
"                        int blocksize,\n"
"                        const char *uuid,\n"
"                        const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8447
msgid "guestfs_mkfifo"
msgstr "guestfs_mkfifo"

#. type: verbatim
#: ../src/guestfs-actions.pod:8449
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfifo (guestfs_h *g,\n"
"                 int mode,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkfifo (guestfs_h *g,\n"
"                 int mode,\n"
"                 const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8454
msgid ""
"This call creates a FIFO (named pipe) called C<path> with mode C<mode>.  It "
"is just a convenient wrapper around C<guestfs_mknod>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8464
msgid "guestfs_mkfs"
msgstr "guestfs_mkfs"

#. type: verbatim
#: ../src/guestfs-actions.pod:8466
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs (guestfs_h *g,\n"
"               const char *fstype,\n"
"               const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkfs (guestfs_h *g,\n"
"               const char *fstype,\n"
"               const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8471
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_mkfs_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8478
msgid "guestfs_mkfs_opts"
msgstr "guestfs_mkfs_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:8480
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_opts (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    const char *device,\n"
"                    ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkfs_opts (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    const char *device,\n"
"                    ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:8491
#, no-wrap
msgid ""
" GUESTFS_MKFS_OPTS_BLOCKSIZE, int blocksize,\n"
" GUESTFS_MKFS_OPTS_FEATURES, const char *features,\n"
" GUESTFS_MKFS_OPTS_INODE, int inode,\n"
" GUESTFS_MKFS_OPTS_SECTORSIZE, int sectorsize,\n"
"\n"
msgstr ""
" GUESTFS_MKFS_OPTS_BLOCKSIZE, int blocksize,\n"
" GUESTFS_MKFS_OPTS_FEATURES, const char *features,\n"
" GUESTFS_MKFS_OPTS_INODE, int inode,\n"
" GUESTFS_MKFS_OPTS_SECTORSIZE, int sectorsize,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8539
msgid "(Added in 1.7.19)"
msgstr "(Додано у 1.7.19)"

#. type: =head2
#: ../src/guestfs-actions.pod:8541
msgid "guestfs_mkfs_opts_va"
msgstr "guestfs_mkfs_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:8543
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_opts_va (guestfs_h *g,\n"
"                       const char *fstype,\n"
"                       const char *device,\n"
"                       va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkfs_opts_va (guestfs_h *g,\n"
"                       const char *fstype,\n"
"                       const char *device,\n"
"                       va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8549
msgid "This is the \"va_list variant\" of L</guestfs_mkfs_opts>."
msgstr "Це «варіант з va_list» L</guestfs_mkfs_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:8553
msgid "guestfs_mkfs_opts_argv"
msgstr "guestfs_mkfs_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:8555
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_opts_argv (guestfs_h *g,\n"
"                         const char *fstype,\n"
"                         const char *device,\n"
"                         const struct guestfs_mkfs_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkfs_opts_argv (guestfs_h *g,\n"
"                         const char *fstype,\n"
"                         const char *device,\n"
"                         const struct guestfs_mkfs_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8561
msgid "This is the \"argv variant\" of L</guestfs_mkfs_opts>."
msgstr "Це «варіант з argv» L</guestfs_mkfs_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:8565
msgid "guestfs_mkfs_b"
msgstr "guestfs_mkfs_b"

#. type: verbatim
#: ../src/guestfs-actions.pod:8567
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_b (guestfs_h *g,\n"
"                 const char *fstype,\n"
"                 int blocksize,\n"
"                 const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkfs_b (guestfs_h *g,\n"
"                 const char *fstype,\n"
"                 int blocksize,\n"
"                 const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8580
msgid ""
"This call is similar to C<guestfs_mkfs>, but it allows you to control the "
"block size of the resulting filesystem.  Supported block sizes depend on the "
"filesystem type, but typically they are C<1024>, C<2048> or C<4096> only."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8592
msgid "guestfs_mkfs_btrfs"
msgstr "guestfs_mkfs_btrfs"

#. type: verbatim
#: ../src/guestfs-actions.pod:8594
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_btrfs (guestfs_h *g,\n"
"                     char *const *devices,\n"
"                     ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkfs_btrfs (guestfs_h *g,\n"
"                     char *const *devices,\n"
"                     ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:8604
#, no-wrap
msgid ""
" GUESTFS_MKFS_BTRFS_ALLOCSTART, int64_t allocstart,\n"
" GUESTFS_MKFS_BTRFS_BYTECOUNT, int64_t bytecount,\n"
" GUESTFS_MKFS_BTRFS_DATATYPE, const char *datatype,\n"
" GUESTFS_MKFS_BTRFS_LEAFSIZE, int leafsize,\n"
" GUESTFS_MKFS_BTRFS_LABEL, const char *label,\n"
" GUESTFS_MKFS_BTRFS_METADATA, const char *metadata,\n"
" GUESTFS_MKFS_BTRFS_NODESIZE, int nodesize,\n"
" GUESTFS_MKFS_BTRFS_SECTORSIZE, int sectorsize,\n"
"\n"
msgstr ""
" GUESTFS_MKFS_BTRFS_ALLOCSTART, int64_t allocstart,\n"
" GUESTFS_MKFS_BTRFS_BYTECOUNT, int64_t bytecount,\n"
" GUESTFS_MKFS_BTRFS_DATATYPE, const char *datatype,\n"
" GUESTFS_MKFS_BTRFS_LEAFSIZE, int leafsize,\n"
" GUESTFS_MKFS_BTRFS_LABEL, const char *label,\n"
" GUESTFS_MKFS_BTRFS_METADATA, const char *metadata,\n"
" GUESTFS_MKFS_BTRFS_NODESIZE, int nodesize,\n"
" GUESTFS_MKFS_BTRFS_SECTORSIZE, int sectorsize,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8619
msgid "To create general filesystems, use C<guestfs_mkfs>."
msgstr "Для створення файлових систем скористайтеся C<guestfs_mkfs>."

#. type: textblock
#: ../src/guestfs-actions.pod:8623
msgid "(Added in 1.17.25)"
msgstr "(Додано у 1.17.25)"

#. type: =head2
#: ../src/guestfs-actions.pod:8625
msgid "guestfs_mkfs_btrfs_va"
msgstr "guestfs_mkfs_btrfs_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:8627
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_btrfs_va (guestfs_h *g,\n"
"                        char *const *devices,\n"
"                        va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkfs_btrfs_va (guestfs_h *g,\n"
"                        char *const *devices,\n"
"                        va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8632
msgid "This is the \"va_list variant\" of L</guestfs_mkfs_btrfs>."
msgstr "Це «варіант з va_list» L</guestfs_mkfs_btrfs>."

#. type: =head2
#: ../src/guestfs-actions.pod:8636
msgid "guestfs_mkfs_btrfs_argv"
msgstr "guestfs_mkfs_btrfs_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:8638
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_btrfs_argv (guestfs_h *g,\n"
"                          char *const *devices,\n"
"                          const struct guestfs_mkfs_btrfs_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkfs_btrfs_argv (guestfs_h *g,\n"
"                          char *const *devices,\n"
"                          const struct guestfs_mkfs_btrfs_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8643
msgid "This is the \"argv variant\" of L</guestfs_mkfs_btrfs>."
msgstr "Це «варіант з argv» L</guestfs_mkfs_btrfs>."

#. type: =head2
#: ../src/guestfs-actions.pod:8647
msgid "guestfs_mklost_and_found"
msgstr "guestfs_mklost_and_found"

#. type: verbatim
#: ../src/guestfs-actions.pod:8649
#, no-wrap
msgid ""
" int\n"
" guestfs_mklost_and_found (guestfs_h *g,\n"
"                           const char *mountpoint);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mklost_and_found (guestfs_h *g,\n"
"                           const char *mountpoint);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8661
msgid "guestfs_mkmountpoint"
msgstr "guestfs_mkmountpoint"

#. type: verbatim
#: ../src/guestfs-actions.pod:8663
#, no-wrap
msgid ""
" int\n"
" guestfs_mkmountpoint (guestfs_h *g,\n"
"                       const char *exemptpath);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkmountpoint (guestfs_h *g,\n"
"                       const char *exemptpath);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8667
msgid ""
"C<guestfs_mkmountpoint> and C<guestfs_rmmountpoint> are specialized calls "
"that can be used to create extra mountpoints before mounting the first "
"filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8691
msgid ""
"C<guestfs_mkmountpoint> is not compatible with C<guestfs_umount_all>.  You "
"may get unexpected errors if you try to mix these calls.  It is safest to "
"manually unmount filesystems and remove mountpoints after use."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8695
msgid ""
"C<guestfs_umount_all> unmounts filesystems by sorting the paths longest "
"first, so for this to work for manual mountpoints, you must ensure that the "
"innermost mountpoints have the longest pathnames, as in the example code "
"above."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8702
msgid ""
"Autosync [see C<guestfs_set_autosync>, this is set by default on handles] "
"can cause C<guestfs_umount_all> to be called when the handle is closed which "
"can also trigger these issues."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8708 ../src/guestfs-actions.pod:9232
#: ../src/guestfs-actions.pod:10601
msgid "(Added in 1.0.62)"
msgstr "(Додано у 1.0.62)"

#. type: =head2
#: ../src/guestfs-actions.pod:8710
msgid "guestfs_mknod"
msgstr "guestfs_mknod"

#. type: verbatim
#: ../src/guestfs-actions.pod:8712
#, no-wrap
msgid ""
" int\n"
" guestfs_mknod (guestfs_h *g,\n"
"                int mode,\n"
"                int devmajor,\n"
"                int devminor,\n"
"                const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mknod (guestfs_h *g,\n"
"                int mode,\n"
"                int devmajor,\n"
"                int devminor,\n"
"                const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8727
msgid ""
"Note that, just like L<mknod(2)>, the mode must be bitwise OR'd with "
"S_IFBLK, S_IFCHR, S_IFIFO or S_IFSOCK (otherwise this call just creates a "
"regular file).  These constants are available in the standard Linux header "
"files, or you can use C<guestfs_mknod_b>, C<guestfs_mknod_c> or "
"C<guestfs_mkfifo> which are wrappers around this command which bitwise OR in "
"the appropriate constant for you."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8741
msgid "guestfs_mknod_b"
msgstr "guestfs_mknod_b"

#. type: verbatim
#: ../src/guestfs-actions.pod:8743
#, no-wrap
msgid ""
" int\n"
" guestfs_mknod_b (guestfs_h *g,\n"
"                  int mode,\n"
"                  int devmajor,\n"
"                  int devminor,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mknod_b (guestfs_h *g,\n"
"                  int mode,\n"
"                  int devmajor,\n"
"                  int devminor,\n"
"                  const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8750
msgid ""
"This call creates a block device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around C<guestfs_mknod>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8760
msgid "guestfs_mknod_c"
msgstr "guestfs_mknod_c"

#. type: verbatim
#: ../src/guestfs-actions.pod:8762
#, no-wrap
msgid ""
" int\n"
" guestfs_mknod_c (guestfs_h *g,\n"
"                  int mode,\n"
"                  int devmajor,\n"
"                  int devminor,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mknod_c (guestfs_h *g,\n"
"                  int mode,\n"
"                  int devmajor,\n"
"                  int devminor,\n"
"                  const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8769
msgid ""
"This call creates a char device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around C<guestfs_mknod>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8779
msgid "guestfs_mkswap"
msgstr "guestfs_mkswap"

#. type: verbatim
#: ../src/guestfs-actions.pod:8781
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkswap (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8785
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_mkswap_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8792
msgid "guestfs_mkswap_opts"
msgstr "guestfs_mkswap_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:8794
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_opts (guestfs_h *g,\n"
"                      const char *device,\n"
"                      ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkswap_opts (guestfs_h *g,\n"
"                      const char *device,\n"
"                      ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:8804
#, no-wrap
msgid ""
" GUESTFS_MKSWAP_OPTS_LABEL, const char *label,\n"
" GUESTFS_MKSWAP_OPTS_UUID, const char *uuid,\n"
"\n"
msgstr ""
" GUESTFS_MKSWAP_OPTS_LABEL, const char *label,\n"
" GUESTFS_MKSWAP_OPTS_UUID, const char *uuid,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8814
msgid "(Added in 1.19.34)"
msgstr "(Додано у 1.19.34)"

#. type: =head2
#: ../src/guestfs-actions.pod:8816
msgid "guestfs_mkswap_opts_va"
msgstr "guestfs_mkswap_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:8818
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_opts_va (guestfs_h *g,\n"
"                         const char *device,\n"
"                         va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkswap_opts_va (guestfs_h *g,\n"
"                         const char *device,\n"
"                         va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8823
msgid "This is the \"va_list variant\" of L</guestfs_mkswap_opts>."
msgstr "Це «варіант з va_list» L</guestfs_mkswap_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:8827
msgid "guestfs_mkswap_opts_argv"
msgstr "guestfs_mkswap_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:8829
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_opts_argv (guestfs_h *g,\n"
"                           const char *device,\n"
"                           const struct guestfs_mkswap_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkswap_opts_argv (guestfs_h *g,\n"
"                           const char *device,\n"
"                           const struct guestfs_mkswap_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8834
msgid "This is the \"argv variant\" of L</guestfs_mkswap_opts>."
msgstr "Це «варіант з argv» L</guestfs_mkswap_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:8838
msgid "guestfs_mkswap_L"
msgstr "guestfs_mkswap_L"

#. type: verbatim
#: ../src/guestfs-actions.pod:8840
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_L (guestfs_h *g,\n"
"                   const char *label,\n"
"                   const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkswap_L (guestfs_h *g,\n"
"                   const char *label,\n"
"                   const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8845 ../src/guestfs-actions.pod:8869
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_mkswap> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8862
msgid "guestfs_mkswap_U"
msgstr "guestfs_mkswap_U"

#. type: verbatim
#: ../src/guestfs-actions.pod:8864
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_U (guestfs_h *g,\n"
"                   const char *uuid,\n"
"                   const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkswap_U (guestfs_h *g,\n"
"                   const char *uuid,\n"
"                   const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8882
msgid "guestfs_mkswap_file"
msgstr "guestfs_mkswap_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:8884
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_file (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mkswap_file (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8890
msgid ""
"This command just writes a swap file signature to an existing file.  To "
"create the file itself, use something like C<guestfs_fallocate>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8897
msgid "guestfs_mktemp"
msgstr "guestfs_mktemp"

#. type: verbatim
#: ../src/guestfs-actions.pod:8899
#, no-wrap
msgid ""
" char *\n"
" guestfs_mktemp (guestfs_h *g,\n"
"                 const char *tmpl,\n"
"                 ...);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_mktemp (guestfs_h *g,\n"
"                 const char *tmpl,\n"
"                 ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:8909
#, no-wrap
msgid ""
" GUESTFS_MKTEMP_SUFFIX, const char *suffix,\n"
"\n"
msgstr ""
" GUESTFS_MKTEMP_SUFFIX, const char *suffix,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8931
msgid "See also: C<guestfs_mkdtemp>."
msgstr "Див. також C<guestfs_mkdtemp>."

#. type: textblock
#: ../src/guestfs-actions.pod:8936 ../src/guestfs-actions.pod:9556
#: ../src/guestfs-actions.pod:9575
msgid "(Added in 1.19.53)"
msgstr "(Додано у 1.19.53)"

#. type: =head2
#: ../src/guestfs-actions.pod:8938
msgid "guestfs_mktemp_va"
msgstr "guestfs_mktemp_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:8940
#, no-wrap
msgid ""
" char *\n"
" guestfs_mktemp_va (guestfs_h *g,\n"
"                    const char *tmpl,\n"
"                    va_list args);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_mktemp_va (guestfs_h *g,\n"
"                    const char *tmpl,\n"
"                    va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8945
msgid "This is the \"va_list variant\" of L</guestfs_mktemp>."
msgstr "Це «варіант з va_list» L</guestfs_mktemp>."

#. type: =head2
#: ../src/guestfs-actions.pod:8949
msgid "guestfs_mktemp_argv"
msgstr "guestfs_mktemp_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:8951
#, no-wrap
msgid ""
" char *\n"
" guestfs_mktemp_argv (guestfs_h *g,\n"
"                      const char *tmpl,\n"
"                      const struct guestfs_mktemp_argv *optargs);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_mktemp_argv (guestfs_h *g,\n"
"                      const char *tmpl,\n"
"                      const struct guestfs_mktemp_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8956
msgid "This is the \"argv variant\" of L</guestfs_mktemp>."
msgstr "Це «варіант з argv» L</guestfs_mktemp>."

#. type: =head2
#: ../src/guestfs-actions.pod:8960
msgid "guestfs_modprobe"
msgstr "guestfs_modprobe"

#. type: verbatim
#: ../src/guestfs-actions.pod:8962
#, no-wrap
msgid ""
" int\n"
" guestfs_modprobe (guestfs_h *g,\n"
"                   const char *modulename);\n"
"\n"
msgstr ""
" int\n"
" guestfs_modprobe (guestfs_h *g,\n"
"                   const char *modulename);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:8975
msgid "guestfs_mount"
msgstr "guestfs_mount"

#. type: verbatim
#: ../src/guestfs-actions.pod:8977
#, no-wrap
msgid ""
" int\n"
" guestfs_mount (guestfs_h *g,\n"
"                const char *mountable,\n"
"                const char *mountpoint);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount (guestfs_h *g,\n"
"                const char *mountable,\n"
"                const char *mountpoint);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:8982
msgid ""
"Mount a guest disk at a position in the filesystem.  Block devices are named "
"C</dev/sda>, C</dev/sdb> and so on, as they were added to the guest.  If "
"those block devices contain partitions, they will have the usual names (eg. "
"C</dev/sda1>).  Also LVM C</dev/VG/LV>-style names can be used, or "
"'mountable' strings returned by C<guestfs_list_filesystems> or "
"C<guestfs_inspect_get_mountpoints>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8997
msgid ""
"Before libguestfs 1.13.16, this call implicitly added the options C<sync> "
"and C<noatime>.  The C<sync> option greatly slowed writes and caused many "
"problems for users.  If your program might need to work with older versions "
"of libguestfs, use C<guestfs_mount_options> instead (using an empty string "
"for the first parameter if you don't want any options)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9008
msgid "guestfs_mount_9p"
msgstr "guestfs_mount_9p"

#. type: verbatim
#: ../src/guestfs-actions.pod:9010
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_9p (guestfs_h *g,\n"
"                   const char *mounttag,\n"
"                   const char *mountpoint,\n"
"                   ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_9p (guestfs_h *g,\n"
"                   const char *mounttag,\n"
"                   const char *mountpoint,\n"
"                   ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:9021
#, no-wrap
msgid ""
" GUESTFS_MOUNT_9P_OPTIONS, const char *options,\n"
"\n"
msgstr ""
" GUESTFS_MOUNT_9P_OPTIONS, const char *options,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:9034
msgid "guestfs_mount_9p_va"
msgstr "guestfs_mount_9p_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:9036
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_9p_va (guestfs_h *g,\n"
"                      const char *mounttag,\n"
"                      const char *mountpoint,\n"
"                      va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_9p_va (guestfs_h *g,\n"
"                      const char *mounttag,\n"
"                      const char *mountpoint,\n"
"                      va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9042
msgid "This is the \"va_list variant\" of L</guestfs_mount_9p>."
msgstr "Це «варіант з va_list» L</guestfs_mount_9p>."

#. type: =head2
#: ../src/guestfs-actions.pod:9046
msgid "guestfs_mount_9p_argv"
msgstr "guestfs_mount_9p_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:9048
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_9p_argv (guestfs_h *g,\n"
"                        const char *mounttag,\n"
"                        const char *mountpoint,\n"
"                        const struct guestfs_mount_9p_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_9p_argv (guestfs_h *g,\n"
"                        const char *mounttag,\n"
"                        const char *mountpoint,\n"
"                        const struct guestfs_mount_9p_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9054
msgid "This is the \"argv variant\" of L</guestfs_mount_9p>."
msgstr "Це «варіант з argv» L</guestfs_mount_9p>."

#. type: =head2
#: ../src/guestfs-actions.pod:9058
msgid "guestfs_mount_local"
msgstr "guestfs_mount_local"

#. type: verbatim
#: ../src/guestfs-actions.pod:9060
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_local (guestfs_h *g,\n"
"                      const char *localmountpoint,\n"
"                      ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_local (guestfs_h *g,\n"
"                      const char *localmountpoint,\n"
"                      ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:9070
#, no-wrap
msgid ""
" GUESTFS_MOUNT_LOCAL_READONLY, int readonly,\n"
" GUESTFS_MOUNT_LOCAL_OPTIONS, const char *options,\n"
" GUESTFS_MOUNT_LOCAL_CACHETIMEOUT, int cachetimeout,\n"
" GUESTFS_MOUNT_LOCAL_DEBUGCALLS, int debugcalls,\n"
"\n"
msgstr ""
" GUESTFS_MOUNT_LOCAL_READONLY, int readonly,\n"
" GUESTFS_MOUNT_LOCAL_OPTIONS, const char *options,\n"
" GUESTFS_MOUNT_LOCAL_CACHETIMEOUT, int cachetimeout,\n"
" GUESTFS_MOUNT_LOCAL_DEBUGCALLS, int debugcalls,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9093
msgid ""
"When C<guestfs_mount_local> returns, the filesystem is ready, but is not "
"processing requests (access to it will block).  You have to call "
"C<guestfs_mount_local_run> to run the main loop."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9101 ../src/guestfs-actions.pod:9149
#: ../src/guestfs-actions.pod:12732
msgid "(Added in 1.17.22)"
msgstr "(Додано у 1.17.22)"

#. type: =head2
#: ../src/guestfs-actions.pod:9103
msgid "guestfs_mount_local_va"
msgstr "guestfs_mount_local_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:9105
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_local_va (guestfs_h *g,\n"
"                         const char *localmountpoint,\n"
"                         va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_local_va (guestfs_h *g,\n"
"                         const char *localmountpoint,\n"
"                         va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9110
msgid "This is the \"va_list variant\" of L</guestfs_mount_local>."
msgstr "Це «варіант з va_list» L</guestfs_mount_local>."

#. type: =head2
#: ../src/guestfs-actions.pod:9114
msgid "guestfs_mount_local_argv"
msgstr "guestfs_mount_local_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:9116
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_local_argv (guestfs_h *g,\n"
"                           const char *localmountpoint,\n"
"                           const struct guestfs_mount_local_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_local_argv (guestfs_h *g,\n"
"                           const char *localmountpoint,\n"
"                           const struct guestfs_mount_local_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9121
msgid "This is the \"argv variant\" of L</guestfs_mount_local>."
msgstr "Це «варіант з argv» L</guestfs_mount_local>."

#. type: =head2
#: ../src/guestfs-actions.pod:9125
msgid "guestfs_mount_local_run"
msgstr "guestfs_mount_local_run"

#. type: verbatim
#: ../src/guestfs-actions.pod:9127
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_local_run (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_local_run (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9133
msgid ""
"This should only be called after C<guestfs_mount_local> returns "
"successfully.  The call will not return until the filesystem is unmounted."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9140
msgid ""
"You may call this from a different thread than the one which called "
"C<guestfs_mount_local>, subject to the usual rules for threads and "
"libguestfs (see L<guestfs(3)/MULTIPLE HANDLES AND MULTIPLE THREADS>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9151
msgid "guestfs_mount_loop"
msgstr "guestfs_mount_loop"

#. type: verbatim
#: ../src/guestfs-actions.pod:9153
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_loop (guestfs_h *g,\n"
"                     const char *file,\n"
"                     const char *mountpoint);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_loop (guestfs_h *g,\n"
"                     const char *file,\n"
"                     const char *mountpoint);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:9166
msgid "guestfs_mount_options"
msgstr "guestfs_mount_options"

#. type: verbatim
#: ../src/guestfs-actions.pod:9168
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_options (guestfs_h *g,\n"
"                        const char *options,\n"
"                        const char *mountable,\n"
"                        const char *mountpoint);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_options (guestfs_h *g,\n"
"                        const char *options,\n"
"                        const char *mountable,\n"
"                        const char *mountpoint);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9174
msgid ""
"This is the same as the C<guestfs_mount> command, but it allows you to set "
"the mount options as for the L<mount(8)> I<-o> flag."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9184 ../src/guestfs-actions.pod:9198
#: ../src/guestfs-actions.pod:9215
msgid "(Added in 1.0.10)"
msgstr "(Додано у 1.0.10)"

#. type: =head2
#: ../src/guestfs-actions.pod:9186
msgid "guestfs_mount_ro"
msgstr "guestfs_mount_ro"

#. type: verbatim
#: ../src/guestfs-actions.pod:9188
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_ro (guestfs_h *g,\n"
"                   const char *mountable,\n"
"                   const char *mountpoint);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_ro (guestfs_h *g,\n"
"                   const char *mountable,\n"
"                   const char *mountpoint);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9193
msgid ""
"This is the same as the C<guestfs_mount> command, but it mounts the "
"filesystem with the read-only (I<-o ro>) flag."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9200
msgid "guestfs_mount_vfs"
msgstr "guestfs_mount_vfs"

#. type: verbatim
#: ../src/guestfs-actions.pod:9202
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_vfs (guestfs_h *g,\n"
"                    const char *options,\n"
"                    const char *vfstype,\n"
"                    const char *mountable,\n"
"                    const char *mountpoint);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mount_vfs (guestfs_h *g,\n"
"                    const char *options,\n"
"                    const char *vfstype,\n"
"                    const char *mountable,\n"
"                    const char *mountpoint);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9209
msgid ""
"This is the same as the C<guestfs_mount> command, but it allows you to set "
"both the mount options and the vfstype as for the L<mount(8)> I<-o> and I<-"
"t> flags."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9217
msgid "guestfs_mountpoints"
msgstr "guestfs_mountpoints"

#. type: verbatim
#: ../src/guestfs-actions.pod:9219
#, no-wrap
msgid ""
" char **\n"
" guestfs_mountpoints (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_mountpoints (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9222
msgid ""
"This call is similar to C<guestfs_mounts>.  That call returns a list of "
"devices.  This one returns a hash table (map) of device name to directory "
"where the device is mounted."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9234
msgid "guestfs_mounts"
msgstr "guestfs_mounts"

#. type: verbatim
#: ../src/guestfs-actions.pod:9236
#, no-wrap
msgid ""
" char **\n"
" guestfs_mounts (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_mounts (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9244
msgid "See also: C<guestfs_mountpoints>"
msgstr "Див. також C<guestfs_mountpoints>"

#. type: =head2
#: ../src/guestfs-actions.pod:9252
msgid "guestfs_mv"
msgstr "guestfs_mv"

#. type: verbatim
#: ../src/guestfs-actions.pod:9254
#, no-wrap
msgid ""
" int\n"
" guestfs_mv (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"
msgstr ""
" int\n"
" guestfs_mv (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9262
msgid "See also: C<guestfs_rename>."
msgstr "Див. також C<guestfs_rename>."

#. type: =head2
#: ../src/guestfs-actions.pod:9268
msgid "guestfs_nr_devices"
msgstr "guestfs_nr_devices"

#. type: verbatim
#: ../src/guestfs-actions.pod:9270
#, no-wrap
msgid ""
" int\n"
" guestfs_nr_devices (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_nr_devices (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9273
msgid ""
"This returns the number of whole block devices that were added.  This is the "
"same as the number of devices that would be returned if you called "
"C<guestfs_list_devices>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9277
msgid ""
"To find out the maximum number of devices that could be added, call "
"C<guestfs_max_disks>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9282
msgid "(Added in 1.19.15)"
msgstr "(Додано у 1.19.15)"

#. type: =head2
#: ../src/guestfs-actions.pod:9284
msgid "guestfs_ntfs_3g_probe"
msgstr "guestfs_ntfs_3g_probe"

#. type: verbatim
#: ../src/guestfs-actions.pod:9286
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfs_3g_probe (guestfs_h *g,\n"
"                        int rw,\n"
"                        const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfs_3g_probe (guestfs_h *g,\n"
"                        int rw,\n"
"                        const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9305
msgid "(Added in 1.0.43)"
msgstr "(Додано у 1.0.43)"

#. type: =head2
#: ../src/guestfs-actions.pod:9307
msgid "guestfs_ntfsclone_in"
msgstr "guestfs_ntfsclone_in"

#. type: verbatim
#: ../src/guestfs-actions.pod:9309
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsclone_in (guestfs_h *g,\n"
"                       const char *backupfile,\n"
"                       const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsclone_in (guestfs_h *g,\n"
"                       const char *backupfile,\n"
"                       const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9314
msgid ""
"Restore the C<backupfile> (from a previous call to C<guestfs_ntfsclone_out>) "
"to C<device>, overwriting any existing contents of this device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9320 ../src/guestfs-actions.pod:9358
#: ../src/guestfs-actions.pod:9410 ../src/guestfs-actions.pod:11215
msgid "(Added in 1.17.9)"
msgstr "(Додано у 1.17.9)"

#. type: =head2
#: ../src/guestfs-actions.pod:9322
msgid "guestfs_ntfsclone_out"
msgstr "guestfs_ntfsclone_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:9324
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsclone_out (guestfs_h *g,\n"
"                        const char *device,\n"
"                        const char *backupfile,\n"
"                        ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsclone_out (guestfs_h *g,\n"
"                        const char *device,\n"
"                        const char *backupfile,\n"
"                        ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:9335
#, no-wrap
msgid ""
" GUESTFS_NTFSCLONE_OUT_METADATAONLY, int metadataonly,\n"
" GUESTFS_NTFSCLONE_OUT_RESCUE, int rescue,\n"
" GUESTFS_NTFSCLONE_OUT_IGNOREFSCHECK, int ignorefscheck,\n"
" GUESTFS_NTFSCLONE_OUT_PRESERVETIMESTAMPS, int preservetimestamps,\n"
" GUESTFS_NTFSCLONE_OUT_FORCE, int force,\n"
"\n"
msgstr ""
" GUESTFS_NTFSCLONE_OUT_METADATAONLY, int metadataonly,\n"
" GUESTFS_NTFSCLONE_OUT_RESCUE, int rescue,\n"
" GUESTFS_NTFSCLONE_OUT_IGNOREFSCHECK, int ignorefscheck,\n"
" GUESTFS_NTFSCLONE_OUT_PRESERVETIMESTAMPS, int preservetimestamps,\n"
" GUESTFS_NTFSCLONE_OUT_FORCE, int force,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9353
msgid ""
"Use C<guestfs_ntfsclone_in> to restore the file back to a libguestfs device."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9360
msgid "guestfs_ntfsclone_out_va"
msgstr "guestfs_ntfsclone_out_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:9362
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsclone_out_va (guestfs_h *g,\n"
"                           const char *device,\n"
"                           const char *backupfile,\n"
"                           va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsclone_out_va (guestfs_h *g,\n"
"                           const char *device,\n"
"                           const char *backupfile,\n"
"                           va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9368
msgid "This is the \"va_list variant\" of L</guestfs_ntfsclone_out>."
msgstr "Це «варіант з va_list» L</guestfs_ntfsclone_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:9372
msgid "guestfs_ntfsclone_out_argv"
msgstr "guestfs_ntfsclone_out_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:9374
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsclone_out_argv (guestfs_h *g,\n"
"                             const char *device,\n"
"                             const char *backupfile,\n"
"                             const struct guestfs_ntfsclone_out_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsclone_out_argv (guestfs_h *g,\n"
"                             const char *device,\n"
"                             const char *backupfile,\n"
"                             const struct guestfs_ntfsclone_out_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9380
msgid "This is the \"argv variant\" of L</guestfs_ntfsclone_out>."
msgstr "Це «варіант з argv» L</guestfs_ntfsclone_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:9384
msgid "guestfs_ntfsfix"
msgstr "guestfs_ntfsfix"

#. type: verbatim
#: ../src/guestfs-actions.pod:9386
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsfix (guestfs_h *g,\n"
"                  const char *device,\n"
"                  ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsfix (guestfs_h *g,\n"
"                  const char *device,\n"
"                  ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:9396
#, no-wrap
msgid ""
" GUESTFS_NTFSFIX_CLEARBADSECTORS, int clearbadsectors,\n"
"\n"
msgstr ""
" GUESTFS_NTFSFIX_CLEARBADSECTORS, int clearbadsectors,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:9412
msgid "guestfs_ntfsfix_va"
msgstr "guestfs_ntfsfix_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:9414
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsfix_va (guestfs_h *g,\n"
"                     const char *device,\n"
"                     va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsfix_va (guestfs_h *g,\n"
"                     const char *device,\n"
"                     va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9419
msgid "This is the \"va_list variant\" of L</guestfs_ntfsfix>."
msgstr "Це «варіант з va_list» L</guestfs_ntfsfix>."

#. type: =head2
#: ../src/guestfs-actions.pod:9423
msgid "guestfs_ntfsfix_argv"
msgstr "guestfs_ntfsfix_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:9425
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsfix_argv (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const struct guestfs_ntfsfix_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsfix_argv (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const struct guestfs_ntfsfix_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9430
msgid "This is the \"argv variant\" of L</guestfs_ntfsfix>."
msgstr "Це «варіант з argv» L</guestfs_ntfsfix>."

#. type: =head2
#: ../src/guestfs-actions.pod:9434
msgid "guestfs_ntfsresize"
msgstr "guestfs_ntfsresize"

#. type: verbatim
#: ../src/guestfs-actions.pod:9436
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsresize (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9440
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_ntfsresize_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9447
msgid "guestfs_ntfsresize_opts"
msgstr "guestfs_ntfsresize_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:9449
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize_opts (guestfs_h *g,\n"
"                          const char *device,\n"
"                          ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsresize_opts (guestfs_h *g,\n"
"                          const char *device,\n"
"                          ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:9459
#, no-wrap
msgid ""
" GUESTFS_NTFSRESIZE_OPTS_SIZE, int64_t size,\n"
" GUESTFS_NTFSRESIZE_OPTS_FORCE, int force,\n"
"\n"
msgstr ""
" GUESTFS_NTFSRESIZE_OPTS_SIZE, int64_t size,\n"
" GUESTFS_NTFSRESIZE_OPTS_FORCE, int force,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9479
msgid ""
"After the resize operation, the filesystem is always marked as requiring a "
"consistency check (for safety).  You have to boot into Windows to perform "
"this check and clear this condition.  If you I<don't> set the C<force> "
"option then it is not possible to call C<guestfs_ntfsresize> multiple times "
"on a single filesystem without booting into Windows between each resize."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9494
msgid "guestfs_ntfsresize_opts_va"
msgstr "guestfs_ntfsresize_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:9496
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize_opts_va (guestfs_h *g,\n"
"                             const char *device,\n"
"                             va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsresize_opts_va (guestfs_h *g,\n"
"                             const char *device,\n"
"                             va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9501
msgid "This is the \"va_list variant\" of L</guestfs_ntfsresize_opts>."
msgstr "Це «варіант з va_list» L</guestfs_ntfsresize_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:9505
msgid "guestfs_ntfsresize_opts_argv"
msgstr "guestfs_ntfsresize_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:9507
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize_opts_argv (guestfs_h *g,\n"
"                               const char *device,\n"
"                               const struct guestfs_ntfsresize_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsresize_opts_argv (guestfs_h *g,\n"
"                               const char *device,\n"
"                               const struct guestfs_ntfsresize_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9512
msgid "This is the \"argv variant\" of L</guestfs_ntfsresize_opts>."
msgstr "Це «варіант з argv» L</guestfs_ntfsresize_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:9516
msgid "guestfs_ntfsresize_size"
msgstr "guestfs_ntfsresize_size"

#. type: verbatim
#: ../src/guestfs-actions.pod:9518
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize_size (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int64_t size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ntfsresize_size (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int64_t size);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9523
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_ntfsresize> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9530
msgid ""
"This command is the same as C<guestfs_ntfsresize> except that it allows you "
"to specify the new size (in bytes) explicitly."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9535 ../src/guestfs-actions.pod:10110
#: ../src/guestfs-actions.pod:10183 ../src/guestfs-actions.pod:10530
#: ../src/guestfs-actions.pod:13304
msgid "(Added in 1.3.14)"
msgstr "(Додано у 1.3.14)"

#. type: =head2
#: ../src/guestfs-actions.pod:9537
msgid "guestfs_parse_environment"
msgstr "guestfs_parse_environment"

#. type: verbatim
#: ../src/guestfs-actions.pod:9539
#, no-wrap
msgid ""
" int\n"
" guestfs_parse_environment (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_parse_environment (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9546
msgid ""
"I<Most programs do not need to call this>.  It is done implicitly when you "
"call C<guestfs_create>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9549
msgid ""
"See L<guestfs(3)/ENVIRONMENT VARIABLES> for a list of environment variables "
"that can affect libguestfs handles.  See also L<guestfs(3)/"
"guestfs_create_flags>, and C<guestfs_parse_environment_list>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9558
msgid "guestfs_parse_environment_list"
msgstr "guestfs_parse_environment_list"

#. type: verbatim
#: ../src/guestfs-actions.pod:9560
#, no-wrap
msgid ""
" int\n"
" guestfs_parse_environment_list (guestfs_h *g,\n"
"                                 char *const *environment);\n"
"\n"
msgstr ""
" int\n"
" guestfs_parse_environment_list (guestfs_h *g,\n"
"                                 char *const *environment);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9569
msgid ""
"This is the same as C<guestfs_parse_environment> except that it parses an "
"explicit list of strings instead of the program's environment."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9577
msgid "guestfs_part_add"
msgstr "guestfs_part_add"

#. type: verbatim
#: ../src/guestfs-actions.pod:9579
#, no-wrap
msgid ""
" int\n"
" guestfs_part_add (guestfs_h *g,\n"
"                   const char *device,\n"
"                   const char *prlogex,\n"
"                   int64_t startsect,\n"
"                   int64_t endsect);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_add (guestfs_h *g,\n"
"                   const char *device,\n"
"                   const char *prlogex,\n"
"                   int64_t startsect,\n"
"                   int64_t endsect);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9586
msgid ""
"This command adds a partition to C<device>.  If there is no partition table "
"on the device, call C<guestfs_part_init> first."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9598
msgid ""
"Creating a partition which covers the whole disk is not so easy.  Use "
"C<guestfs_part_disk> to do that."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9603 ../src/guestfs-actions.pod:9638
#: ../src/guestfs-actions.pod:9725 ../src/guestfs-actions.pod:9809
#: ../src/guestfs-actions.pod:9847 ../src/guestfs-actions.pod:9866
#: ../src/guestfs-actions.pod:9925
msgid "(Added in 1.0.78)"
msgstr "(Додано у 1.0.78)"

#. type: =head2
#: ../src/guestfs-actions.pod:9605
msgid "guestfs_part_del"
msgstr "guestfs_part_del"

#. type: verbatim
#: ../src/guestfs-actions.pod:9607
#, no-wrap
msgid ""
" int\n"
" guestfs_part_del (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int partnum);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_del (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int partnum);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:9622
msgid "guestfs_part_disk"
msgstr "guestfs_part_disk"

#. type: verbatim
#: ../src/guestfs-actions.pod:9624
#, no-wrap
msgid ""
" int\n"
" guestfs_part_disk (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *parttype);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_disk (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *parttype);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9629
msgid ""
"This command is simply a combination of C<guestfs_part_init> followed by "
"C<guestfs_part_add> to create a single primary partition covering the whole "
"disk."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9633
msgid ""
"C<parttype> is the partition table type, usually C<mbr> or C<gpt>, but other "
"possible values are described in C<guestfs_part_init>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9640
msgid "guestfs_part_get_bootable"
msgstr "guestfs_part_get_bootable"

#. type: verbatim
#: ../src/guestfs-actions.pod:9642
#, no-wrap
msgid ""
" int\n"
" guestfs_part_get_bootable (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_get_bootable (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9650
msgid "See also C<guestfs_part_set_bootable>."
msgstr "Див. також C<guestfs_part_set_bootable>."

#. type: =head2
#: ../src/guestfs-actions.pod:9656
msgid "guestfs_part_get_gpt_type"
msgstr "guestfs_part_get_gpt_type"

#. type: verbatim
#: ../src/guestfs-actions.pod:9658
#, no-wrap
msgid ""
" char *\n"
" guestfs_part_get_gpt_type (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_part_get_gpt_type (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9670 ../src/guestfs-actions.pod:9885
msgid "(Added in 1.21.1)"
msgstr "(Додано у 1.21.1)"

#. type: =head2
#: ../src/guestfs-actions.pod:9672
msgid "guestfs_part_get_mbr_id"
msgstr "guestfs_part_get_mbr_id"

#. type: verbatim
#: ../src/guestfs-actions.pod:9674
#, no-wrap
msgid ""
" int\n"
" guestfs_part_get_mbr_id (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int partnum);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_get_mbr_id (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int partnum);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9682 ../src/guestfs-actions.pod:9901
msgid ""
"Note that only MBR (old DOS-style) partitions have type bytes.  You will get "
"undefined results for other partition table types (see "
"C<guestfs_part_get_parttype>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9690
msgid "guestfs_part_get_name"
msgstr "guestfs_part_get_name"

#. type: verbatim
#: ../src/guestfs-actions.pod:9692
#, no-wrap
msgid ""
" char *\n"
" guestfs_part_get_name (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int partnum);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_part_get_name (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int partnum);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9706
msgid "(Added in 1.25.33)"
msgstr "(Додано у 1.25.33)"

#. type: =head2
#: ../src/guestfs-actions.pod:9708
msgid "guestfs_part_get_parttype"
msgstr "guestfs_part_get_parttype"

#. type: verbatim
#: ../src/guestfs-actions.pod:9710
#, no-wrap
msgid ""
" char *\n"
" guestfs_part_get_parttype (guestfs_h *g,\n"
"                            const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_part_get_parttype (guestfs_h *g,\n"
"                            const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9717
msgid ""
"Common return values include: C<msdos> (a DOS/Windows style MBR partition "
"table), C<gpt> (a GPT/EFI-style partition table).  Other values are "
"possible, although unusual.  See C<guestfs_part_init> for a full list."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9727
msgid "guestfs_part_init"
msgstr "guestfs_part_init"

#. type: verbatim
#: ../src/guestfs-actions.pod:9729
#, no-wrap
msgid ""
" int\n"
" guestfs_part_init (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *parttype);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_init (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *parttype);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9738
msgid ""
"Initially there are no partitions.  Following this, you should call "
"C<guestfs_part_add> for each partition required."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9811
msgid "guestfs_part_list"
msgstr "guestfs_part_list"

#. type: verbatim
#: ../src/guestfs-actions.pod:9813
#, no-wrap
msgid ""
" struct guestfs_partition_list *\n"
" guestfs_part_list (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""
" struct guestfs_partition_list *\n"
" guestfs_part_list (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9830
msgid ""
"Start of the partition I<in bytes>.  To get sectors you have to divide by "
"the device's sector size, see C<guestfs_blockdev_getss>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9843
msgid ""
"This function returns a C<struct guestfs_partition_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_partition_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9849
msgid "guestfs_part_set_bootable"
msgstr "guestfs_part_set_bootable"

#. type: verbatim
#: ../src/guestfs-actions.pod:9851
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_bootable (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum,\n"
"                            int bootable);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_set_bootable (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum,\n"
"                            int bootable);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:9868
msgid "guestfs_part_set_gpt_type"
msgstr "guestfs_part_set_gpt_type"

#. type: verbatim
#: ../src/guestfs-actions.pod:9870
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_gpt_type (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum,\n"
"                            const char *guid);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_set_gpt_type (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum,\n"
"                            const char *guid);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:9887
msgid "guestfs_part_set_mbr_id"
msgstr "guestfs_part_set_mbr_id"

#. type: verbatim
#: ../src/guestfs-actions.pod:9889
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_mbr_id (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int partnum,\n"
"                          int idbyte);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_set_mbr_id (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int partnum,\n"
"                          int idbyte);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:9909
msgid "guestfs_part_set_name"
msgstr "guestfs_part_set_name"

#. type: verbatim
#: ../src/guestfs-actions.pod:9911
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_name (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int partnum,\n"
"                        const char *name);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_set_name (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int partnum,\n"
"                        const char *name);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:9927
msgid "guestfs_part_to_dev"
msgstr "guestfs_part_to_dev"

#. type: verbatim
#: ../src/guestfs-actions.pod:9929
#, no-wrap
msgid ""
" char *\n"
" guestfs_part_to_dev (guestfs_h *g,\n"
"                      const char *partition);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_part_to_dev (guestfs_h *g,\n"
"                      const char *partition);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9937 ../src/guestfs-actions.pod:9956
msgid ""
"The named partition must exist, for example as a string returned from "
"C<guestfs_list_partitions>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9940
msgid "See also C<guestfs_part_to_partnum>, C<guestfs_device_index>."
msgstr "Див. також C<guestfs_part_to_partnum>, C<guestfs_device_index>."

#. type: =head2
#: ../src/guestfs-actions.pod:9947
msgid "guestfs_part_to_partnum"
msgstr "guestfs_part_to_partnum"

#. type: verbatim
#: ../src/guestfs-actions.pod:9949
#, no-wrap
msgid ""
" int\n"
" guestfs_part_to_partnum (guestfs_h *g,\n"
"                          const char *partition);\n"
"\n"
msgstr ""
" int\n"
" guestfs_part_to_partnum (guestfs_h *g,\n"
"                          const char *partition);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9959
msgid "See also C<guestfs_part_to_dev>."
msgstr "Див. також C<guestfs_part_to_dev>."

#. type: =head2
#: ../src/guestfs-actions.pod:9965
msgid "guestfs_ping_daemon"
msgstr "guestfs_ping_daemon"

#. type: verbatim
#: ../src/guestfs-actions.pod:9967
#, no-wrap
msgid ""
" int\n"
" guestfs_ping_daemon (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_ping_daemon (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:9979
msgid "guestfs_pread"
msgstr "guestfs_pread"

#. type: verbatim
#: ../src/guestfs-actions.pod:9981
#, no-wrap
msgid ""
" char *\n"
" guestfs_pread (guestfs_h *g,\n"
"                const char *path,\n"
"                int count,\n"
"                int64_t offset,\n"
"                size_t *size_r);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_pread (guestfs_h *g,\n"
"                const char *path,\n"
"                int count,\n"
"                int64_t offset,\n"
"                size_t *size_r);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:9994
msgid "See also C<guestfs_pwrite>, C<guestfs_pread_device>."
msgstr "Див. також C<guestfs_pwrite>, C<guestfs_pread_device>."

#. type: =head2
#: ../src/guestfs-actions.pod:10005
msgid "guestfs_pread_device"
msgstr "guestfs_pread_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:10007
#, no-wrap
msgid ""
" char *\n"
" guestfs_pread_device (guestfs_h *g,\n"
"                       const char *device,\n"
"                       int count,\n"
"                       int64_t offset,\n"
"                       size_t *size_r);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_pread_device (guestfs_h *g,\n"
"                       const char *device,\n"
"                       int count,\n"
"                       int64_t offset,\n"
"                       size_t *size_r);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10020
msgid "See also C<guestfs_pread>."
msgstr "Див. також C<guestfs_pread>."

#. type: textblock
#: ../src/guestfs-actions.pod:10029
msgid "(Added in 1.5.21)"
msgstr "(Додано у 1.5.21)"

#. type: =head2
#: ../src/guestfs-actions.pod:10031
msgid "guestfs_pvchange_uuid"
msgstr "guestfs_pvchange_uuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:10033
#, no-wrap
msgid ""
" int\n"
" guestfs_pvchange_uuid (guestfs_h *g,\n"
"                        const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_pvchange_uuid (guestfs_h *g,\n"
"                        const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10041 ../src/guestfs-actions.pod:10052
#: ../src/guestfs-actions.pod:13032 ../src/guestfs-actions.pod:13043
msgid "(Added in 1.19.26)"
msgstr "(Додано у 1.19.26)"

#. type: =head2
#: ../src/guestfs-actions.pod:10043
msgid "guestfs_pvchange_uuid_all"
msgstr "guestfs_pvchange_uuid_all"

#. type: verbatim
#: ../src/guestfs-actions.pod:10045
#, no-wrap
msgid ""
" int\n"
" guestfs_pvchange_uuid_all (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_pvchange_uuid_all (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10054
msgid "guestfs_pvcreate"
msgstr "guestfs_pvcreate"

#. type: verbatim
#: ../src/guestfs-actions.pod:10056
#, no-wrap
msgid ""
" int\n"
" guestfs_pvcreate (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_pvcreate (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10068
msgid "guestfs_pvremove"
msgstr "guestfs_pvremove"

#. type: verbatim
#: ../src/guestfs-actions.pod:10070
#, no-wrap
msgid ""
" int\n"
" guestfs_pvremove (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_pvremove (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10085
msgid "guestfs_pvresize"
msgstr "guestfs_pvresize"

#. type: verbatim
#: ../src/guestfs-actions.pod:10087
#, no-wrap
msgid ""
" int\n"
" guestfs_pvresize (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_pvresize (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10098
msgid "guestfs_pvresize_size"
msgstr "guestfs_pvresize_size"

#. type: verbatim
#: ../src/guestfs-actions.pod:10100
#, no-wrap
msgid ""
" int\n"
" guestfs_pvresize_size (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int64_t size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_pvresize_size (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int64_t size);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10105
msgid ""
"This command is the same as C<guestfs_pvresize> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10112
msgid "guestfs_pvs"
msgstr "guestfs_pvs"

#. type: verbatim
#: ../src/guestfs-actions.pod:10114
#, no-wrap
msgid ""
" char **\n"
" guestfs_pvs (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_pvs (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10123
msgid "See also C<guestfs_pvs_full>."
msgstr "Див. також C<guestfs_pvs_full>."

#. type: =head2
#: ../src/guestfs-actions.pod:10131
msgid "guestfs_pvs_full"
msgstr "guestfs_pvs_full"

#. type: verbatim
#: ../src/guestfs-actions.pod:10133
#, no-wrap
msgid ""
" struct guestfs_lvm_pv_list *\n"
" guestfs_pvs_full (guestfs_h *g);\n"
"\n"
msgstr ""
" struct guestfs_lvm_pv_list *\n"
" guestfs_pvs_full (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10139
msgid ""
"This function returns a C<struct guestfs_lvm_pv_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_lvm_pv_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10145
msgid "guestfs_pvuuid"
msgstr "guestfs_pvuuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:10147
#, no-wrap
msgid ""
" char *\n"
" guestfs_pvuuid (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_pvuuid (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10158
msgid "guestfs_pwrite"
msgstr "guestfs_pwrite"

#. type: verbatim
#: ../src/guestfs-actions.pod:10160
#, no-wrap
msgid ""
" int\n"
" guestfs_pwrite (guestfs_h *g,\n"
"                 const char *path,\n"
"                 const char *content,\n"
"                 size_t content_size,\n"
"                 int64_t offset);\n"
"\n"
msgstr ""
" int\n"
" guestfs_pwrite (guestfs_h *g,\n"
"                 const char *path,\n"
"                 const char *content,\n"
"                 size_t content_size,\n"
"                 int64_t offset);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10176
msgid "See also C<guestfs_pread>, C<guestfs_pwrite_device>."
msgstr "Див. також C<guestfs_pread>, C<guestfs_pwrite_device>."

#. type: =head2
#: ../src/guestfs-actions.pod:10185
msgid "guestfs_pwrite_device"
msgstr "guestfs_pwrite_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:10187
#, no-wrap
msgid ""
" int\n"
" guestfs_pwrite_device (guestfs_h *g,\n"
"                        const char *device,\n"
"                        const char *content,\n"
"                        size_t content_size,\n"
"                        int64_t offset);\n"
"\n"
msgstr ""
" int\n"
" guestfs_pwrite_device (guestfs_h *g,\n"
"                        const char *device,\n"
"                        const char *content,\n"
"                        size_t content_size,\n"
"                        int64_t offset);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10202
msgid "See also C<guestfs_pwrite>."
msgstr "Див. також C<guestfs_pwrite>."

#. type: textblock
#: ../src/guestfs-actions.pod:10209
msgid "(Added in 1.5.20)"
msgstr "(Додано у 1.5.20)"

#. type: =head2
#: ../src/guestfs-actions.pod:10211
msgid "guestfs_read_file"
msgstr "guestfs_read_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:10213
#, no-wrap
msgid ""
" char *\n"
" guestfs_read_file (guestfs_h *g,\n"
"                    const char *path,\n"
"                    size_t *size_r);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_read_file (guestfs_h *g,\n"
"                    const char *path,\n"
"                    size_t *size_r);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10221
msgid ""
"Unlike C<guestfs_cat>, this function can correctly handle files that contain "
"embedded ASCII NUL characters."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:10228
msgid "(Added in 1.0.63)"
msgstr "(Додано у 1.0.63)"

#. type: =head2
#: ../src/guestfs-actions.pod:10230
msgid "guestfs_read_lines"
msgstr "guestfs_read_lines"

#. type: verbatim
#: ../src/guestfs-actions.pod:10232
#, no-wrap
msgid ""
" char **\n"
" guestfs_read_lines (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_read_lines (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10241
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of string).  For "
"those you need to use the C<guestfs_read_file> function and split the buffer "
"into lines yourself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10252
msgid "guestfs_readdir"
msgstr "guestfs_readdir"

#. type: verbatim
#: ../src/guestfs-actions.pod:10254
#, no-wrap
msgid ""
" struct guestfs_dirent_list *\n"
" guestfs_readdir (guestfs_h *g,\n"
"                  const char *dir);\n"
"\n"
msgstr ""
" struct guestfs_dirent_list *\n"
" guestfs_readdir (guestfs_h *g,\n"
"                  const char *dir);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10308
msgid ""
"This function is primarily intended for use by programs.  To get a simple "
"list of names, use C<guestfs_ls>.  To get a printable directory for human "
"consumption, use C<guestfs_ll>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:10312
msgid ""
"This function returns a C<struct guestfs_dirent_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_dirent_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10321
msgid "guestfs_readlink"
msgstr "guestfs_readlink"

#. type: verbatim
#: ../src/guestfs-actions.pod:10323
#, no-wrap
msgid ""
" char *\n"
" guestfs_readlink (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_readlink (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10334
msgid "guestfs_readlinklist"
msgstr "guestfs_readlinklist"

#. type: verbatim
#: ../src/guestfs-actions.pod:10336
#, no-wrap
msgid ""
" char **\n"
" guestfs_readlinklist (guestfs_h *g,\n"
"                       const char *path,\n"
"                       char *const *names);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_readlinklist (guestfs_h *g,\n"
"                       const char *path,\n"
"                       char *const *names);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10365
msgid "guestfs_realpath"
msgstr "guestfs_realpath"

#. type: verbatim
#: ../src/guestfs-actions.pod:10367
#, no-wrap
msgid ""
" char *\n"
" guestfs_realpath (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_realpath (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10379
msgid "guestfs_remount"
msgstr "guestfs_remount"

#. type: verbatim
#: ../src/guestfs-actions.pod:10381
#, no-wrap
msgid ""
" int\n"
" guestfs_remount (guestfs_h *g,\n"
"                  const char *mountpoint,\n"
"                  ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_remount (guestfs_h *g,\n"
"                  const char *mountpoint,\n"
"                  ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:10391
#, no-wrap
msgid ""
" GUESTFS_REMOUNT_RW, int rw,\n"
"\n"
msgstr ""
" GUESTFS_REMOUNT_RW, int rw,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10402
msgid "(Added in 1.23.2)"
msgstr "(Додано у 1.23.2)"

#. type: =head2
#: ../src/guestfs-actions.pod:10404
msgid "guestfs_remount_va"
msgstr "guestfs_remount_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:10406
#, no-wrap
msgid ""
" int\n"
" guestfs_remount_va (guestfs_h *g,\n"
"                     const char *mountpoint,\n"
"                     va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_remount_va (guestfs_h *g,\n"
"                     const char *mountpoint,\n"
"                     va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10411
msgid "This is the \"va_list variant\" of L</guestfs_remount>."
msgstr "Це «варіант з va_list» L</guestfs_remount>."

#. type: =head2
#: ../src/guestfs-actions.pod:10415
msgid "guestfs_remount_argv"
msgstr "guestfs_remount_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:10417
#, no-wrap
msgid ""
" int\n"
" guestfs_remount_argv (guestfs_h *g,\n"
"                       const char *mountpoint,\n"
"                       const struct guestfs_remount_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_remount_argv (guestfs_h *g,\n"
"                       const char *mountpoint,\n"
"                       const struct guestfs_remount_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10422
msgid "This is the \"argv variant\" of L</guestfs_remount>."
msgstr "Це «варіант з argv» L</guestfs_remount>."

#. type: =head2
#: ../src/guestfs-actions.pod:10426
msgid "guestfs_remove_drive"
msgstr "guestfs_remove_drive"

#. type: verbatim
#: ../src/guestfs-actions.pod:10428
#, no-wrap
msgid ""
" int\n"
" guestfs_remove_drive (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"
msgstr ""
" int\n"
" guestfs_remove_drive (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10432
msgid ""
"This function is conceptually the opposite of C<guestfs_add_drive_opts>.  It "
"removes the drive that was previously added with label C<label>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:10435
msgid ""
"Note that in order to remove drives, you have to add them with labels (see "
"the optional C<label> argument to C<guestfs_add_drive_opts>).  If you didn't "
"use a label, then they cannot be removed."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10449
msgid "guestfs_removexattr"
msgstr "guestfs_removexattr"

#. type: verbatim
#: ../src/guestfs-actions.pod:10451
#, no-wrap
msgid ""
" int\n"
" guestfs_removexattr (guestfs_h *g,\n"
"                      const char *xattr,\n"
"                      const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_removexattr (guestfs_h *g,\n"
"                      const char *xattr,\n"
"                      const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10459
msgid "See also: C<guestfs_lremovexattr>, L<attr(5)>."
msgstr "Див. також C<guestfs_lremovexattr>, L<attr(5)>."

#. type: =head2
#: ../src/guestfs-actions.pod:10465
msgid "guestfs_rename"
msgstr "guestfs_rename"

#. type: verbatim
#: ../src/guestfs-actions.pod:10467
#, no-wrap
msgid ""
" int\n"
" guestfs_rename (guestfs_h *g,\n"
"                 const char *oldpath,\n"
"                 const char *newpath);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rename (guestfs_h *g,\n"
"                 const char *oldpath,\n"
"                 const char *newpath);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10472
msgid ""
"Rename a file to a new place on the same filesystem.  This is the same as "
"the Linux L<rename(2)> system call.  In most cases you are better to use "
"C<guestfs_mv> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:10478
msgid "(Added in 1.21.5)"
msgstr "(Додано у 1.21.5)"

#. type: =head2
#: ../src/guestfs-actions.pod:10480
msgid "guestfs_resize2fs"
msgstr "guestfs_resize2fs"

#. type: verbatim
#: ../src/guestfs-actions.pod:10482
#, no-wrap
msgid ""
" int\n"
" guestfs_resize2fs (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_resize2fs (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10495
msgid "guestfs_resize2fs_M"
msgstr "guestfs_resize2fs_M"

#. type: verbatim
#: ../src/guestfs-actions.pod:10497
#, no-wrap
msgid ""
" int\n"
" guestfs_resize2fs_M (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_resize2fs_M (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10501
msgid ""
"This command is the same as C<guestfs_resize2fs>, but the filesystem is "
"resized to its minimum size.  This works like the I<-M> option to the "
"C<resize2fs> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:10505
msgid ""
"To get the resulting size of the filesystem you should call "
"C<guestfs_tune2fs_l> and read the C<Block size> and C<Block count> values.  "
"These two numbers, multiplied together, give the resulting size of the "
"minimal filesystem in bytes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10516
msgid "guestfs_resize2fs_size"
msgstr "guestfs_resize2fs_size"

#. type: verbatim
#: ../src/guestfs-actions.pod:10518
#, no-wrap
msgid ""
" int\n"
" guestfs_resize2fs_size (guestfs_h *g,\n"
"                         const char *device,\n"
"                         int64_t size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_resize2fs_size (guestfs_h *g,\n"
"                         const char *device,\n"
"                         int64_t size);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10523
msgid ""
"This command is the same as C<guestfs_resize2fs> except that it allows you "
"to specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10532
msgid "guestfs_rm"
msgstr "guestfs_rm"

#. type: verbatim
#: ../src/guestfs-actions.pod:10534
#, no-wrap
msgid ""
" int\n"
" guestfs_rm (guestfs_h *g,\n"
"             const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rm (guestfs_h *g,\n"
"             const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10544
msgid "guestfs_rm_f"
msgstr "guestfs_rm_f"

#. type: verbatim
#: ../src/guestfs-actions.pod:10546
#, no-wrap
msgid ""
" int\n"
" guestfs_rm_f (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rm_f (guestfs_h *g,\n"
"               const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10555
msgid ""
"This call cannot remove directories.  Use C<guestfs_rmdir> to remove an "
"empty directory, or C<guestfs_rm_rf> to remove directories recursively."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:10561
msgid "(Added in 1.19.42)"
msgstr "(Додано у 1.19.42)"

#. type: =head2
#: ../src/guestfs-actions.pod:10563
msgid "guestfs_rm_rf"
msgstr "guestfs_rm_rf"

#. type: verbatim
#: ../src/guestfs-actions.pod:10565
#, no-wrap
msgid ""
" int\n"
" guestfs_rm_rf (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rm_rf (guestfs_h *g,\n"
"                const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10577
msgid "guestfs_rmdir"
msgstr "guestfs_rmdir"

#. type: verbatim
#: ../src/guestfs-actions.pod:10579
#, no-wrap
msgid ""
" int\n"
" guestfs_rmdir (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rmdir (guestfs_h *g,\n"
"                const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10589
msgid "guestfs_rmmountpoint"
msgstr "guestfs_rmmountpoint"

#. type: verbatim
#: ../src/guestfs-actions.pod:10591
#, no-wrap
msgid ""
" int\n"
" guestfs_rmmountpoint (guestfs_h *g,\n"
"                       const char *exemptpath);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rmmountpoint (guestfs_h *g,\n"
"                       const char *exemptpath);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10595
msgid ""
"This calls removes a mountpoint that was previously created with "
"C<guestfs_mkmountpoint>.  See C<guestfs_mkmountpoint> for full details."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10603
msgid "guestfs_rsync"
msgstr "guestfs_rsync"

#. type: verbatim
#: ../src/guestfs-actions.pod:10605
#, no-wrap
msgid ""
" int\n"
" guestfs_rsync (guestfs_h *g,\n"
"                const char *src,\n"
"                const char *dest,\n"
"                ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rsync (guestfs_h *g,\n"
"                const char *src,\n"
"                const char *dest,\n"
"                ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:10616
#, no-wrap
msgid ""
" GUESTFS_RSYNC_ARCHIVE, int archive,\n"
" GUESTFS_RSYNC_DELETEDEST, int deletedest,\n"
"\n"
msgstr ""
" GUESTFS_RSYNC_ARCHIVE, int archive,\n"
" GUESTFS_RSYNC_DELETEDEST, int deletedest,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10644 ../src/guestfs-actions.pod:10706
#: ../src/guestfs-actions.pod:10775
msgid "(Added in 1.19.29)"
msgstr "(Додано у 1.19.29)"

#. type: =head2
#: ../src/guestfs-actions.pod:10646
msgid "guestfs_rsync_va"
msgstr "guestfs_rsync_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:10648
#, no-wrap
msgid ""
" int\n"
" guestfs_rsync_va (guestfs_h *g,\n"
"                   const char *src,\n"
"                   const char *dest,\n"
"                   va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rsync_va (guestfs_h *g,\n"
"                   const char *src,\n"
"                   const char *dest,\n"
"                   va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10654
msgid "This is the \"va_list variant\" of L</guestfs_rsync>."
msgstr "Це «варіант з va_list» L</guestfs_rsync>."

#. type: =head2
#: ../src/guestfs-actions.pod:10658
msgid "guestfs_rsync_argv"
msgstr "guestfs_rsync_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:10660
#, no-wrap
msgid ""
" int\n"
" guestfs_rsync_argv (guestfs_h *g,\n"
"                     const char *src,\n"
"                     const char *dest,\n"
"                     const struct guestfs_rsync_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rsync_argv (guestfs_h *g,\n"
"                     const char *src,\n"
"                     const char *dest,\n"
"                     const struct guestfs_rsync_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10666
msgid "This is the \"argv variant\" of L</guestfs_rsync>."
msgstr "Це «варіант з argv» L</guestfs_rsync>."

#. type: =head2
#: ../src/guestfs-actions.pod:10670
msgid "guestfs_rsync_in"
msgstr "guestfs_rsync_in"

#. type: verbatim
#: ../src/guestfs-actions.pod:10672
#, no-wrap
msgid ""
" int\n"
" guestfs_rsync_in (guestfs_h *g,\n"
"                   const char *remote,\n"
"                   const char *dest,\n"
"                   ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rsync_in (guestfs_h *g,\n"
"                   const char *remote,\n"
"                   const char *dest,\n"
"                   ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:10683
#, no-wrap
msgid ""
" GUESTFS_RSYNC_IN_ARCHIVE, int archive,\n"
" GUESTFS_RSYNC_IN_DELETEDEST, int deletedest,\n"
"\n"
msgstr ""
" GUESTFS_RSYNC_IN_ARCHIVE, int archive,\n"
" GUESTFS_RSYNC_IN_DELETEDEST, int deletedest,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10691 ../src/guestfs-actions.pod:10753
msgid ""
"This call only works if the network is enabled.  See C<guestfs_set_network> "
"or the I<--network> option to various tools like L<guestfish(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:10702 ../src/guestfs-actions.pod:10764
msgid "The optional arguments are the same as those of C<guestfs_rsync>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10708
msgid "guestfs_rsync_in_va"
msgstr "guestfs_rsync_in_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:10710
#, no-wrap
msgid ""
" int\n"
" guestfs_rsync_in_va (guestfs_h *g,\n"
"                      const char *remote,\n"
"                      const char *dest,\n"
"                      va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rsync_in_va (guestfs_h *g,\n"
"                      const char *remote,\n"
"                      const char *dest,\n"
"                      va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10716
msgid "This is the \"va_list variant\" of L</guestfs_rsync_in>."
msgstr "Це «варіант з va_list» L</guestfs_rsync_in>."

#. type: =head2
#: ../src/guestfs-actions.pod:10720
msgid "guestfs_rsync_in_argv"
msgstr "guestfs_rsync_in_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:10722
#, no-wrap
msgid ""
" int\n"
" guestfs_rsync_in_argv (guestfs_h *g,\n"
"                        const char *remote,\n"
"                        const char *dest,\n"
"                        const struct guestfs_rsync_in_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rsync_in_argv (guestfs_h *g,\n"
"                        const char *remote,\n"
"                        const char *dest,\n"
"                        const struct guestfs_rsync_in_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10728
msgid "This is the \"argv variant\" of L</guestfs_rsync_in>."
msgstr "Це «варіант з argv» L</guestfs_rsync_in>."

#. type: =head2
#: ../src/guestfs-actions.pod:10732
msgid "guestfs_rsync_out"
msgstr "guestfs_rsync_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:10734
#, no-wrap
msgid ""
" int\n"
" guestfs_rsync_out (guestfs_h *g,\n"
"                    const char *src,\n"
"                    const char *remote,\n"
"                    ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rsync_out (guestfs_h *g,\n"
"                    const char *src,\n"
"                    const char *remote,\n"
"                    ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:10745
#, no-wrap
msgid ""
" GUESTFS_RSYNC_OUT_ARCHIVE, int archive,\n"
" GUESTFS_RSYNC_OUT_DELETEDEST, int deletedest,\n"
"\n"
msgstr ""
" GUESTFS_RSYNC_OUT_ARCHIVE, int archive,\n"
" GUESTFS_RSYNC_OUT_DELETEDEST, int deletedest,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10766
msgid ""
"Globbing does not happen on the C<src> parameter.  In programs which use the "
"API directly you have to expand wildcards yourself (see "
"C<guestfs_glob_expand>).  In guestfish you can use the C<glob> command (see "
"L<guestfish(1)/glob>), for example:"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10777
msgid "guestfs_rsync_out_va"
msgstr "guestfs_rsync_out_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:10779
#, no-wrap
msgid ""
" int\n"
" guestfs_rsync_out_va (guestfs_h *g,\n"
"                       const char *src,\n"
"                       const char *remote,\n"
"                       va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rsync_out_va (guestfs_h *g,\n"
"                       const char *src,\n"
"                       const char *remote,\n"
"                       va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10785
msgid "This is the \"va_list variant\" of L</guestfs_rsync_out>."
msgstr "Це «варіант з va_list» L</guestfs_rsync_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:10789
msgid "guestfs_rsync_out_argv"
msgstr "guestfs_rsync_out_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:10791
#, no-wrap
msgid ""
" int\n"
" guestfs_rsync_out_argv (guestfs_h *g,\n"
"                         const char *src,\n"
"                         const char *remote,\n"
"                         const struct guestfs_rsync_out_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_rsync_out_argv (guestfs_h *g,\n"
"                         const char *src,\n"
"                         const char *remote,\n"
"                         const struct guestfs_rsync_out_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10797
msgid "This is the \"argv variant\" of L</guestfs_rsync_out>."
msgstr "Це «варіант з argv» L</guestfs_rsync_out>."

#. type: =head2
#: ../src/guestfs-actions.pod:10801
msgid "guestfs_scrub_device"
msgstr "guestfs_scrub_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:10803
#, no-wrap
msgid ""
" int\n"
" guestfs_scrub_device (guestfs_h *g,\n"
"                       const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_scrub_device (guestfs_h *g,\n"
"                       const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10815 ../src/guestfs-actions.pod:10833
#: ../src/guestfs-actions.pod:10852
msgid "(Added in 1.0.52)"
msgstr "(Додано у 1.0.52)"

#. type: =head2
#: ../src/guestfs-actions.pod:10817
msgid "guestfs_scrub_file"
msgstr "guestfs_scrub_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:10819
#, no-wrap
msgid ""
" int\n"
" guestfs_scrub_file (guestfs_h *g,\n"
"                     const char *file);\n"
"\n"
msgstr ""
" int\n"
" guestfs_scrub_file (guestfs_h *g,\n"
"                     const char *file);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10835
msgid "guestfs_scrub_freespace"
msgstr "guestfs_scrub_freespace"

#. type: verbatim
#: ../src/guestfs-actions.pod:10837
#, no-wrap
msgid ""
" int\n"
" guestfs_scrub_freespace (guestfs_h *g,\n"
"                          const char *dir);\n"
"\n"
msgstr ""
" int\n"
" guestfs_scrub_freespace (guestfs_h *g,\n"
"                          const char *dir);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10841
msgid ""
"This command creates the directory C<dir> and then fills it with files until "
"the filesystem is full, and scrubs the files as for C<guestfs_scrub_file>, "
"and deletes them.  The intention is to scrub any free space on the partition "
"containing C<dir>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10854
msgid "guestfs_set_append"
msgstr "guestfs_set_append"

#. type: verbatim
#: ../src/guestfs-actions.pod:10856
#, no-wrap
msgid ""
" int\n"
" guestfs_set_append (guestfs_h *g,\n"
"                     const char *append);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_append (guestfs_h *g,\n"
"                     const char *append);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10873
msgid "guestfs_set_attach_method"
msgstr "guestfs_set_attach_method"

#. type: verbatim
#: ../src/guestfs-actions.pod:10875
#, no-wrap
msgid ""
" int\n"
" guestfs_set_attach_method (guestfs_h *g,\n"
"                            const char *backend);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_attach_method (guestfs_h *g,\n"
"                            const char *backend);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10879
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_set_backend> "
"call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10895
msgid "guestfs_set_autosync"
msgstr "guestfs_set_autosync"

#. type: verbatim
#: ../src/guestfs-actions.pod:10897
#, no-wrap
msgid ""
" int\n"
" guestfs_set_autosync (guestfs_h *g,\n"
"                       int autosync);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_autosync (guestfs_h *g,\n"
"                       int autosync);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10913
msgid "guestfs_set_backend"
msgstr "guestfs_set_backend"

#. type: verbatim
#: ../src/guestfs-actions.pod:10915
#, no-wrap
msgid ""
" int\n"
" guestfs_set_backend (guestfs_h *g,\n"
"                      const char *backend);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_backend (guestfs_h *g,\n"
"                      const char *backend);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10930
msgid "guestfs_set_backend_setting"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:10932
#, no-wrap
msgid ""
" int\n"
" guestfs_set_backend_setting (guestfs_h *g,\n"
"                              const char *name,\n"
"                              const char *val);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10947
msgid "guestfs_set_backend_settings"
msgstr "guestfs_set_backend_settings"

#. type: verbatim
#: ../src/guestfs-actions.pod:10949
#, no-wrap
msgid ""
" int\n"
" guestfs_set_backend_settings (guestfs_h *g,\n"
"                               char *const *settings);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_backend_settings (guestfs_h *g,\n"
"                               char *const *settings);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:10963
msgid ""
"This call replaces all backend settings.  If you want to replace a single "
"backend setting, see C<guestfs_set_backend_setting>.  If you want to clear a "
"single backend setting, see C<guestfs_clear_backend_setting>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:10974
msgid "guestfs_set_cachedir"
msgstr "guestfs_set_cachedir"

#. type: verbatim
#: ../src/guestfs-actions.pod:10976
#, no-wrap
msgid ""
" int\n"
" guestfs_set_cachedir (guestfs_h *g,\n"
"                       const char *cachedir);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_cachedir (guestfs_h *g,\n"
"                       const char *cachedir);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:10994
msgid "guestfs_set_direct"
msgstr "guestfs_set_direct"

#. type: verbatim
#: ../src/guestfs-actions.pod:10996
#, no-wrap
msgid ""
" int\n"
" guestfs_set_direct (guestfs_h *g,\n"
"                     int direct);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_direct (guestfs_h *g,\n"
"                     int direct);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11004
msgid ""
"One consequence of this is that log messages aren't caught by the library "
"and handled by C<guestfs_set_log_message_callback>, but go straight to "
"stdout."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11017
msgid "guestfs_set_e2attrs"
msgstr "guestfs_set_e2attrs"

#. type: verbatim
#: ../src/guestfs-actions.pod:11019
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2attrs (guestfs_h *g,\n"
"                      const char *file,\n"
"                      const char *attrs,\n"
"                      ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_e2attrs (guestfs_h *g,\n"
"                      const char *file,\n"
"                      const char *attrs,\n"
"                      ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:11030
#, no-wrap
msgid ""
" GUESTFS_SET_E2ATTRS_CLEAR, int clear,\n"
"\n"
msgstr ""
" GUESTFS_SET_E2ATTRS_CLEAR, int clear,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11035
msgid ""
"C<attrs> is a string of characters representing file attributes.  See "
"C<guestfs_get_e2attrs> for a list of possible attributes.  Not all "
"attributes can be changed."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11056
msgid "guestfs_set_e2attrs_va"
msgstr "guestfs_set_e2attrs_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:11058
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2attrs_va (guestfs_h *g,\n"
"                         const char *file,\n"
"                         const char *attrs,\n"
"                         va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_e2attrs_va (guestfs_h *g,\n"
"                         const char *file,\n"
"                         const char *attrs,\n"
"                         va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11064
msgid "This is the \"va_list variant\" of L</guestfs_set_e2attrs>."
msgstr "Це «варіант з va_list» L</guestfs_set_e2attrs>."

#. type: =head2
#: ../src/guestfs-actions.pod:11068
msgid "guestfs_set_e2attrs_argv"
msgstr "guestfs_set_e2attrs_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:11070
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2attrs_argv (guestfs_h *g,\n"
"                           const char *file,\n"
"                           const char *attrs,\n"
"                           const struct guestfs_set_e2attrs_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_e2attrs_argv (guestfs_h *g,\n"
"                           const char *file,\n"
"                           const char *attrs,\n"
"                           const struct guestfs_set_e2attrs_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11076
msgid "This is the \"argv variant\" of L</guestfs_set_e2attrs>."
msgstr "Це «варіант з argv» L</guestfs_set_e2attrs>."

#. type: =head2
#: ../src/guestfs-actions.pod:11080
msgid "guestfs_set_e2generation"
msgstr "guestfs_set_e2generation"

#. type: verbatim
#: ../src/guestfs-actions.pod:11082
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2generation (guestfs_h *g,\n"
"                           const char *file,\n"
"                           int64_t generation);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_e2generation (guestfs_h *g,\n"
"                           const char *file,\n"
"                           int64_t generation);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11089
msgid "See C<guestfs_get_e2generation>."
msgstr "Див. C<guestfs_get_e2generation>."

#. type: =head2
#: ../src/guestfs-actions.pod:11095
msgid "guestfs_set_e2label"
msgstr "guestfs_set_e2label"

#. type: verbatim
#: ../src/guestfs-actions.pod:11097
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2label (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const char *label);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_e2label (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const char *label);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11102
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_set_label> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11113
msgid ""
"You can use either C<guestfs_tune2fs_l> or C<guestfs_get_e2label> to return "
"the existing label on a filesystem."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11120
msgid "guestfs_set_e2uuid"
msgstr "guestfs_set_e2uuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:11122
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2uuid (guestfs_h *g,\n"
"                     const char *device,\n"
"                     const char *uuid);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_e2uuid (guestfs_h *g,\n"
"                     const char *device,\n"
"                     const char *uuid);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11127
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_set_uuid> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11139
msgid ""
"You can use C<guestfs_vfs_uuid> to return the existing UUID of a filesystem."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11146
msgid "guestfs_set_hv"
msgstr "guestfs_set_hv"

#. type: verbatim
#: ../src/guestfs-actions.pod:11148
#, no-wrap
msgid ""
" int\n"
" guestfs_set_hv (guestfs_h *g,\n"
"                 const char *hv);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_hv (guestfs_h *g,\n"
"                 const char *hv);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11175
msgid "guestfs_set_label"
msgstr "guestfs_set_label"

#. type: verbatim
#: ../src/guestfs-actions.pod:11177
#, no-wrap
msgid ""
" int\n"
" guestfs_set_label (guestfs_h *g,\n"
"                    const char *mountable,\n"
"                    const char *label);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_label (guestfs_h *g,\n"
"                    const char *mountable,\n"
"                    const char *label);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11211
msgid "To read the label on a filesystem, call C<guestfs_vfs_label>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11217
msgid "guestfs_set_libvirt_requested_credential"
msgstr "guestfs_set_libvirt_requested_credential"

#. type: verbatim
#: ../src/guestfs-actions.pod:11219
#, no-wrap
msgid ""
" int\n"
" guestfs_set_libvirt_requested_credential (guestfs_h *g,\n"
"                                           int index,\n"
"                                           const char *cred,\n"
"                                           size_t cred_size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_libvirt_requested_credential (guestfs_h *g,\n"
"                                           int index,\n"
"                                           const char *cred,\n"
"                                           size_t cred_size);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11234
msgid "guestfs_set_libvirt_supported_credentials"
msgstr "guestfs_set_libvirt_supported_credentials"

#. type: verbatim
#: ../src/guestfs-actions.pod:11236
#, no-wrap
msgid ""
" int\n"
" guestfs_set_libvirt_supported_credentials (guestfs_h *g,\n"
"                                            char *const *creds);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_libvirt_supported_credentials (guestfs_h *g,\n"
"                                            char *const *creds);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11277
msgid "guestfs_set_memsize"
msgstr "guestfs_set_memsize"

#. type: verbatim
#: ../src/guestfs-actions.pod:11279
#, no-wrap
msgid ""
" int\n"
" guestfs_set_memsize (guestfs_h *g,\n"
"                      int memsize);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_memsize (guestfs_h *g,\n"
"                      int memsize);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11283
msgid ""
"This sets the memory size in megabytes allocated to the hypervisor.  This "
"only has any effect if called before C<guestfs_launch>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11298
msgid "guestfs_set_network"
msgstr "guestfs_set_network"

#. type: verbatim
#: ../src/guestfs-actions.pod:11300
#, no-wrap
msgid ""
" int\n"
" guestfs_set_network (guestfs_h *g,\n"
"                      int network);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_network (guestfs_h *g,\n"
"                      int network);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11310
msgid ""
"You must call this before calling C<guestfs_launch>, otherwise it has no "
"effect."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11317
msgid "guestfs_set_path"
msgstr "guestfs_set_path"

#. type: verbatim
#: ../src/guestfs-actions.pod:11319
#, no-wrap
msgid ""
" int\n"
" guestfs_set_path (guestfs_h *g,\n"
"                   const char *searchpath);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_path (guestfs_h *g,\n"
"                   const char *searchpath);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11334
msgid "guestfs_set_pgroup"
msgstr "guestfs_set_pgroup"

#. type: verbatim
#: ../src/guestfs-actions.pod:11336
#, no-wrap
msgid ""
" int\n"
" guestfs_set_pgroup (guestfs_h *g,\n"
"                     int pgroup);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_pgroup (guestfs_h *g,\n"
"                     int pgroup);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11346
msgid ""
"The default for this flag is false, because usually you want C<^C> to kill "
"the subprocess.  Guestfish sets this flag to true when used interactively, "
"so that C<^C> can cancel long-running commands gracefully (see "
"C<guestfs_user_cancel>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11355
msgid "guestfs_set_program"
msgstr "guestfs_set_program"

#. type: verbatim
#: ../src/guestfs-actions.pod:11357
#, no-wrap
msgid ""
" int\n"
" guestfs_set_program (guestfs_h *g,\n"
"                      const char *program);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_program (guestfs_h *g,\n"
"                      const char *program);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11372
msgid "guestfs_set_qemu"
msgstr "guestfs_set_qemu"

#. type: verbatim
#: ../src/guestfs-actions.pod:11374
#, no-wrap
msgid ""
" int\n"
" guestfs_set_qemu (guestfs_h *g,\n"
"                   const char *hv);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11378
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_set_hv> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11407
msgid "guestfs_set_recovery_proc"
msgstr "guestfs_set_recovery_proc"

#. type: verbatim
#: ../src/guestfs-actions.pod:11409
#, no-wrap
msgid ""
" int\n"
" guestfs_set_recovery_proc (guestfs_h *g,\n"
"                            int recoveryproc);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_recovery_proc (guestfs_h *g,\n"
"                            int recoveryproc);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11413
msgid ""
"If this is called with the parameter C<false> then C<guestfs_launch> does "
"not create a recovery process.  The purpose of the recovery process is to "
"stop runaway hypervisor processes in the case where the main program aborts "
"abruptly."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11418
msgid ""
"This only has any effect if called before C<guestfs_launch>, and the default "
"is true."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11431
msgid "guestfs_set_selinux"
msgstr "guestfs_set_selinux"

#. type: verbatim
#: ../src/guestfs-actions.pod:11433
#, no-wrap
msgid ""
" int\n"
" guestfs_set_selinux (guestfs_h *g,\n"
"                      int selinux);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_selinux (guestfs_h *g,\n"
"                      int selinux);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11450
msgid "guestfs_set_smp"
msgstr "guestfs_set_smp"

#. type: verbatim
#: ../src/guestfs-actions.pod:11452
#, no-wrap
msgid ""
" int\n"
" guestfs_set_smp (guestfs_h *g,\n"
"                  int smp);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_smp (guestfs_h *g,\n"
"                  int smp);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11460
msgid "This function must be called before C<guestfs_launch>."
msgstr "У попередніх версіях ця функція викликалася C<guestfs_launch>."

#. type: =head2
#: ../src/guestfs-actions.pod:11466
msgid "guestfs_set_tmpdir"
msgstr "guestfs_set_tmpdir"

#. type: verbatim
#: ../src/guestfs-actions.pod:11468
#, no-wrap
msgid ""
" int\n"
" guestfs_set_tmpdir (guestfs_h *g,\n"
"                     const char *tmpdir);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_tmpdir (guestfs_h *g,\n"
"                     const char *tmpdir);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11483
msgid "guestfs_set_trace"
msgstr "guestfs_set_trace"

#. type: verbatim
#: ../src/guestfs-actions.pod:11485
#, no-wrap
msgid ""
" int\n"
" guestfs_set_trace (guestfs_h *g,\n"
"                    int trace);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_trace (guestfs_h *g,\n"
"                    int trace);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11499
msgid ""
"Trace messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see C<guestfs_set_event_callback>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11507
msgid "guestfs_set_uuid"
msgstr "guestfs_set_uuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:11509
#, no-wrap
msgid ""
" int\n"
" guestfs_set_uuid (guestfs_h *g,\n"
"                   const char *device,\n"
"                   const char *uuid);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_uuid (guestfs_h *g,\n"
"                   const char *device,\n"
"                   const char *uuid);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11518
msgid "To read the UUID on a filesystem, call C<guestfs_vfs_uuid>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11524
msgid "guestfs_set_verbose"
msgstr "guestfs_set_verbose"

#. type: verbatim
#: ../src/guestfs-actions.pod:11526
#, no-wrap
msgid ""
" int\n"
" guestfs_set_verbose (guestfs_h *g,\n"
"                      int verbose);\n"
"\n"
msgstr ""
" int\n"
" guestfs_set_verbose (guestfs_h *g,\n"
"                      int verbose);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11535
msgid ""
"Verbose messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see C<guestfs_set_event_callback>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11543
msgid "guestfs_setcon"
msgstr "guestfs_setcon"

#. type: verbatim
#: ../src/guestfs-actions.pod:11545
#, no-wrap
msgid ""
" int\n"
" guestfs_setcon (guestfs_h *g,\n"
"                 const char *context);\n"
"\n"
msgstr ""
" int\n"
" guestfs_setcon (guestfs_h *g,\n"
"                 const char *context);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11558
msgid "guestfs_setxattr"
msgstr "guestfs_setxattr"

#. type: verbatim
#: ../src/guestfs-actions.pod:11560
#, no-wrap
msgid ""
" int\n"
" guestfs_setxattr (guestfs_h *g,\n"
"                   const char *xattr,\n"
"                   const char *val,\n"
"                   int vallen,\n"
"                   const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_setxattr (guestfs_h *g,\n"
"                   const char *xattr,\n"
"                   const char *val,\n"
"                   int vallen,\n"
"                   const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11571
msgid "See also: C<guestfs_lsetxattr>, L<attr(5)>."
msgstr "Див. також C<guestfs_lsetxattr>, L<attr(5)>."

#. type: =head2
#: ../src/guestfs-actions.pod:11577
msgid "guestfs_sfdisk"
msgstr "guestfs_sfdisk"

#. type: verbatim
#: ../src/guestfs-actions.pod:11579
#, no-wrap
msgid ""
" int\n"
" guestfs_sfdisk (guestfs_h *g,\n"
"                 const char *device,\n"
"                 int cyls,\n"
"                 int heads,\n"
"                 int sectors,\n"
"                 char *const *lines);\n"
"\n"
msgstr ""
" int\n"
" guestfs_sfdisk (guestfs_h *g,\n"
"                 const char *device,\n"
"                 int cyls,\n"
"                 int heads,\n"
"                 int sectors,\n"
"                 char *const *lines);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11587 ../src/guestfs-actions.pod:11628
#: ../src/guestfs-actions.pod:11659
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_part_add> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11614
msgid ""
"See also: C<guestfs_sfdisk_l>, C<guestfs_sfdisk_N>, C<guestfs_part_init>"
msgstr ""
"Див. також C<guestfs_sfdisk_l>, C<guestfs_sfdisk_N>, C<guestfs_part_init>"

#. type: =head2
#: ../src/guestfs-actions.pod:11621
msgid "guestfs_sfdiskM"
msgstr "guestfs_sfdiskM"

#. type: verbatim
#: ../src/guestfs-actions.pod:11623
#, no-wrap
msgid ""
" int\n"
" guestfs_sfdiskM (guestfs_h *g,\n"
"                  const char *device,\n"
"                  char *const *lines);\n"
"\n"
msgstr ""
" int\n"
" guestfs_sfdiskM (guestfs_h *g,\n"
"                  const char *device,\n"
"                  char *const *lines);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11635
msgid ""
"This is a simplified interface to the C<guestfs_sfdisk> command, where "
"partition sizes are specified in megabytes only (rounded to the nearest "
"cylinder) and you don't need to specify the cyls, heads and sectors "
"parameters which were rarely if ever used anyway."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11641
msgid ""
"See also: C<guestfs_sfdisk>, the L<sfdisk(8)> manpage and "
"C<guestfs_part_disk>"
msgstr ""
"Див. також C<guestfs_sfdisk>, сторінку man L<sfdisk(8)> та "
"C<guestfs_part_disk>"

#. type: =head2
#: ../src/guestfs-actions.pod:11648
msgid "guestfs_sfdisk_N"
msgstr "guestfs_sfdisk_N"

#. type: verbatim
#: ../src/guestfs-actions.pod:11650
#, no-wrap
msgid ""
" int\n"
" guestfs_sfdisk_N (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int partnum,\n"
"                   int cyls,\n"
"                   int heads,\n"
"                   int sectors,\n"
"                   const char *line);\n"
"\n"
msgstr ""
" int\n"
" guestfs_sfdisk_N (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int partnum,\n"
"                   int cyls,\n"
"                   int heads,\n"
"                   int sectors,\n"
"                   const char *line);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11669
msgid ""
"For other parameters, see C<guestfs_sfdisk>.  You should usually pass C<0> "
"for the cyls/heads/sectors parameters."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11672
msgid "See also: C<guestfs_part_add>"
msgstr "Див. також C<guestfs_part_add>"

#. type: =head2
#: ../src/guestfs-actions.pod:11678
msgid "guestfs_sfdisk_disk_geometry"
msgstr "guestfs_sfdisk_disk_geometry"

#. type: verbatim
#: ../src/guestfs-actions.pod:11680
#, no-wrap
msgid ""
" char *\n"
" guestfs_sfdisk_disk_geometry (guestfs_h *g,\n"
"                               const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_sfdisk_disk_geometry (guestfs_h *g,\n"
"                               const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11684
msgid ""
"This displays the disk geometry of C<device> read from the partition table.  "
"Especially in the case where the underlying block device has been resized, "
"this can be different from the kernel's idea of the geometry (see "
"C<guestfs_sfdisk_kernel_geometry>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11697
msgid "guestfs_sfdisk_kernel_geometry"
msgstr "guestfs_sfdisk_kernel_geometry"

#. type: verbatim
#: ../src/guestfs-actions.pod:11699
#, no-wrap
msgid ""
" char *\n"
" guestfs_sfdisk_kernel_geometry (guestfs_h *g,\n"
"                                 const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_sfdisk_kernel_geometry (guestfs_h *g,\n"
"                                 const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11713
msgid "guestfs_sfdisk_l"
msgstr "guestfs_sfdisk_l"

#. type: verbatim
#: ../src/guestfs-actions.pod:11715
#, no-wrap
msgid ""
" char *\n"
" guestfs_sfdisk_l (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_sfdisk_l (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11719
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_part_list> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11730
msgid "See also: C<guestfs_part_list>"
msgstr "Див. також C<guestfs_part_list>"

#. type: =head2
#: ../src/guestfs-actions.pod:11737
msgid "guestfs_sh"
msgstr "guestfs_sh"

#. type: verbatim
#: ../src/guestfs-actions.pod:11739
#, no-wrap
msgid ""
" char *\n"
" guestfs_sh (guestfs_h *g,\n"
"             const char *command);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_sh (guestfs_h *g,\n"
"             const char *command);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11746
msgid "This is like C<guestfs_command>, but passes the command to:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11754
msgid "All the provisos about C<guestfs_command> apply to this call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11761
msgid "guestfs_sh_lines"
msgstr "guestfs_sh_lines"

#. type: verbatim
#: ../src/guestfs-actions.pod:11763
#, no-wrap
msgid ""
" char **\n"
" guestfs_sh_lines (guestfs_h *g,\n"
"                   const char *command);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_sh_lines (guestfs_h *g,\n"
"                   const char *command);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11767
msgid ""
"This is the same as C<guestfs_sh>, but splits the result into a list of "
"lines."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11770
msgid "See also: C<guestfs_command_lines>"
msgstr "Див. також C<guestfs_command_lines>"

#. type: =head2
#: ../src/guestfs-actions.pod:11778
msgid "guestfs_shutdown"
msgstr "guestfs_shutdown"

#. type: verbatim
#: ../src/guestfs-actions.pod:11780
#, no-wrap
msgid ""
" int\n"
" guestfs_shutdown (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_shutdown (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11783
msgid ""
"This is the opposite of C<guestfs_launch>.  It performs an orderly shutdown "
"of the backend process(es).  If the autosync flag is set (which is the "
"default) then the disk image is synchronized."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11793
msgid ""
"This call does I<not> close or free up the handle.  You still need to call "
"C<guestfs_close> afterwards."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11796
msgid ""
"C<guestfs_close> will call this if you don't do it explicitly, but note that "
"any errors are ignored in that case."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11801
msgid "(Added in 1.19.16)"
msgstr "(Додано у 1.19.16)"

#. type: =head2
#: ../src/guestfs-actions.pod:11803
msgid "guestfs_sleep"
msgstr "guestfs_sleep"

#. type: verbatim
#: ../src/guestfs-actions.pod:11805
#, no-wrap
msgid ""
" int\n"
" guestfs_sleep (guestfs_h *g,\n"
"                int secs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_sleep (guestfs_h *g,\n"
"                int secs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11813
msgid "(Added in 1.0.41)"
msgstr "(Додано у 1.0.41)"

#. type: =head2
#: ../src/guestfs-actions.pod:11815 ../src/guestfs-structs.pod:158
msgid "guestfs_stat"
msgstr "guestfs_stat"

#. type: verbatim
#: ../src/guestfs-actions.pod:11817
#, no-wrap
msgid ""
" struct guestfs_stat *\n"
" guestfs_stat (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""
" struct guestfs_stat *\n"
" guestfs_stat (guestfs_h *g,\n"
"               const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11821
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_statns> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11838 ../src/guestfs-structs.pod:190
msgid "guestfs_statns"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:11840
#, no-wrap
msgid ""
" struct guestfs_statns *\n"
" guestfs_statns (guestfs_h *g,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11854 ../src/guestfs-structs.pod:231
msgid "guestfs_statvfs"
msgstr "guestfs_statvfs"

#. type: verbatim
#: ../src/guestfs-actions.pod:11856
#, no-wrap
msgid ""
" struct guestfs_statvfs *\n"
" guestfs_statvfs (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" struct guestfs_statvfs *\n"
" guestfs_statvfs (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11866
msgid ""
"This function returns a C<struct guestfs_statvfs *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_statvfs> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11872
msgid "guestfs_strings"
msgstr "guestfs_strings"

#. type: verbatim
#: ../src/guestfs-actions.pod:11874
#, no-wrap
msgid ""
" char **\n"
" guestfs_strings (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_strings (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11890
msgid "guestfs_strings_e"
msgstr "guestfs_strings_e"

#. type: verbatim
#: ../src/guestfs-actions.pod:11892
#, no-wrap
msgid ""
" char **\n"
" guestfs_strings_e (guestfs_h *g,\n"
"                    const char *encoding,\n"
"                    const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_strings_e (guestfs_h *g,\n"
"                    const char *encoding,\n"
"                    const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11897
msgid ""
"This is like the C<guestfs_strings> command, but allows you to specify the "
"encoding of strings that are looked for in the source file C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:11907
msgid ""
"Single 7-bit-byte characters like ASCII and the ASCII-compatible parts of "
"ISO-8859-X (this is what C<guestfs_strings> uses)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11945
msgid "guestfs_swapoff_device"
msgstr "guestfs_swapoff_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:11947
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_swapoff_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:11951
msgid ""
"This command disables the libguestfs appliance swap device or partition "
"named C<device>.  See C<guestfs_swapon_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:11959
msgid "guestfs_swapoff_file"
msgstr "guestfs_swapoff_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:11961
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_file (guestfs_h *g,\n"
"                       const char *file);\n"
"\n"
msgstr ""
" int\n"
" guestfs_swapoff_file (guestfs_h *g,\n"
"                       const char *file);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11971
msgid "guestfs_swapoff_label"
msgstr "guestfs_swapoff_label"

#. type: verbatim
#: ../src/guestfs-actions.pod:11973
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_label (guestfs_h *g,\n"
"                        const char *label);\n"
"\n"
msgstr ""
" int\n"
" guestfs_swapoff_label (guestfs_h *g,\n"
"                        const char *label);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11984
msgid "guestfs_swapoff_uuid"
msgstr "guestfs_swapoff_uuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:11986
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_uuid (guestfs_h *g,\n"
"                       const char *uuid);\n"
"\n"
msgstr ""
" int\n"
" guestfs_swapoff_uuid (guestfs_h *g,\n"
"                       const char *uuid);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:11997
msgid "guestfs_swapon_device"
msgstr "guestfs_swapon_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:11999
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_device (guestfs_h *g,\n"
"                        const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_swapon_device (guestfs_h *g,\n"
"                        const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12003
msgid ""
"This command enables the libguestfs appliance to use the swap device or "
"partition named C<device>.  The increased memory is made available for all "
"commands, for example those run using C<guestfs_command> or C<guestfs_sh>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12019
msgid "guestfs_swapon_file"
msgstr "guestfs_swapon_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:12021
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_file (guestfs_h *g,\n"
"                      const char *file);\n"
"\n"
msgstr ""
" int\n"
" guestfs_swapon_file (guestfs_h *g,\n"
"                      const char *file);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12025
msgid ""
"This command enables swap to a file.  See C<guestfs_swapon_device> for other "
"notes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12032
msgid "guestfs_swapon_label"
msgstr "guestfs_swapon_label"

#. type: verbatim
#: ../src/guestfs-actions.pod:12034
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_label (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"
msgstr ""
" int\n"
" guestfs_swapon_label (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12038
msgid ""
"This command enables swap to a labeled swap partition.  See "
"C<guestfs_swapon_device> for other notes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12045
msgid "guestfs_swapon_uuid"
msgstr "guestfs_swapon_uuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:12047
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_uuid (guestfs_h *g,\n"
"                      const char *uuid);\n"
"\n"
msgstr ""
" int\n"
" guestfs_swapon_uuid (guestfs_h *g,\n"
"                      const char *uuid);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12051
msgid ""
"This command enables swap to a swap partition with the given UUID.  See "
"C<guestfs_swapon_device> for other notes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12058
msgid "guestfs_sync"
msgstr "guestfs_sync"

#. type: verbatim
#: ../src/guestfs-actions.pod:12060
#, no-wrap
msgid ""
" int\n"
" guestfs_sync (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_sync (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12073
msgid "guestfs_syslinux"
msgstr "guestfs_syslinux"

#. type: verbatim
#: ../src/guestfs-actions.pod:12075
#, no-wrap
msgid ""
" int\n"
" guestfs_syslinux (guestfs_h *g,\n"
"                   const char *device,\n"
"                   ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_syslinux (guestfs_h *g,\n"
"                   const char *device,\n"
"                   ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:12085
#, no-wrap
msgid ""
" GUESTFS_SYSLINUX_DIRECTORY, const char *directory,\n"
"\n"
msgstr ""
" GUESTFS_SYSLINUX_DIRECTORY, const char *directory,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12089
msgid ""
"The device parameter must be either a whole disk formatted as a FAT "
"filesystem, or a partition formatted as a FAT filesystem.  In the latter "
"case, the partition should be marked as \"active"
"\" (C<guestfs_part_set_bootable>) and a Master Boot Record must be installed "
"(eg. using C<guestfs_pwrite_device>) on the first sector of the whole disk.  "
"The SYSLINUX package comes with some suitable Master Boot Records.  See the "
"L<syslinux(1)> man page for further information."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:12115
msgid "See also C<guestfs_extlinux>."
msgstr "Див. також C<guestfs_extlinux>."

#. type: =head2
#: ../src/guestfs-actions.pod:12121
msgid "guestfs_syslinux_va"
msgstr "guestfs_syslinux_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:12123
#, no-wrap
msgid ""
" int\n"
" guestfs_syslinux_va (guestfs_h *g,\n"
"                      const char *device,\n"
"                      va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_syslinux_va (guestfs_h *g,\n"
"                      const char *device,\n"
"                      va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12128
msgid "This is the \"va_list variant\" of L</guestfs_syslinux>."
msgstr "Це «варіант з va_list» L</guestfs_syslinux>."

#. type: =head2
#: ../src/guestfs-actions.pod:12132
msgid "guestfs_syslinux_argv"
msgstr "guestfs_syslinux_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:12134
#, no-wrap
msgid ""
" int\n"
" guestfs_syslinux_argv (guestfs_h *g,\n"
"                        const char *device,\n"
"                        const struct guestfs_syslinux_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_syslinux_argv (guestfs_h *g,\n"
"                        const char *device,\n"
"                        const struct guestfs_syslinux_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12139
msgid "This is the \"argv variant\" of L</guestfs_syslinux>."
msgstr "Це «варіант з argv» L</guestfs_syslinux>."

#. type: =head2
#: ../src/guestfs-actions.pod:12143
msgid "guestfs_tail"
msgstr "guestfs_tail"

#. type: verbatim
#: ../src/guestfs-actions.pod:12145
#, no-wrap
msgid ""
" char **\n"
" guestfs_tail (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_tail (guestfs_h *g,\n"
"               const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12161
msgid "guestfs_tail_n"
msgstr "guestfs_tail_n"

#. type: verbatim
#: ../src/guestfs-actions.pod:12163
#, no-wrap
msgid ""
" char **\n"
" guestfs_tail_n (guestfs_h *g,\n"
"                 int nrlines,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_tail_n (guestfs_h *g,\n"
"                 int nrlines,\n"
"                 const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12185
msgid "guestfs_tar_in"
msgstr "guestfs_tar_in"

#. type: verbatim
#: ../src/guestfs-actions.pod:12187
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_in (guestfs_h *g,\n"
"                 const char *tarfile,\n"
"                 const char *directory);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tar_in (guestfs_h *g,\n"
"                 const char *tarfile,\n"
"                 const char *directory);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12192
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_tar_in_opts> with no optional "
"arguments."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:12196 ../src/guestfs-actions.pod:12262
#: ../src/guestfs-actions.pod:12355 ../src/guestfs-actions.pod:12376
msgid "(Added in 1.0.3)"
msgstr "(Додано у 1.0.3)"

#. type: =head2
#: ../src/guestfs-actions.pod:12199
msgid "guestfs_tar_in_opts"
msgstr "guestfs_tar_in_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:12201
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_in_opts (guestfs_h *g,\n"
"                      const char *tarfile,\n"
"                      const char *directory,\n"
"                      ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tar_in_opts (guestfs_h *g,\n"
"                      const char *tarfile,\n"
"                      const char *directory,\n"
"                      ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:12212
#, no-wrap
msgid ""
" GUESTFS_TAR_IN_OPTS_COMPRESS, const char *compress,\n"
"\n"
msgstr ""
" GUESTFS_TAR_IN_OPTS_COMPRESS, const char *compress,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12225 ../src/guestfs-actions.pod:12310
msgid "(Added in 1.19.30)"
msgstr "(Додано у 1.19.30)"

#. type: =head2
#: ../src/guestfs-actions.pod:12227
msgid "guestfs_tar_in_opts_va"
msgstr "guestfs_tar_in_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:12229
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_in_opts_va (guestfs_h *g,\n"
"                         const char *tarfile,\n"
"                         const char *directory,\n"
"                         va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tar_in_opts_va (guestfs_h *g,\n"
"                         const char *tarfile,\n"
"                         const char *directory,\n"
"                         va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12235
msgid "This is the \"va_list variant\" of L</guestfs_tar_in_opts>."
msgstr "Це «варіант з va_list» L</guestfs_tar_in_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:12239
msgid "guestfs_tar_in_opts_argv"
msgstr "guestfs_tar_in_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:12241
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_in_opts_argv (guestfs_h *g,\n"
"                           const char *tarfile,\n"
"                           const char *directory,\n"
"                           const struct guestfs_tar_in_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tar_in_opts_argv (guestfs_h *g,\n"
"                           const char *tarfile,\n"
"                           const char *directory,\n"
"                           const struct guestfs_tar_in_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12247
msgid "This is the \"argv variant\" of L</guestfs_tar_in_opts>."
msgstr "Це «варіант з argv» L</guestfs_tar_in_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:12251
msgid "guestfs_tar_out"
msgstr "guestfs_tar_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:12253
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarfile);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tar_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarfile);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12258
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_tar_out_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12265
msgid "guestfs_tar_out_opts"
msgstr "guestfs_tar_out_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:12267
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_out_opts (guestfs_h *g,\n"
"                       const char *directory,\n"
"                       const char *tarfile,\n"
"                       ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tar_out_opts (guestfs_h *g,\n"
"                       const char *directory,\n"
"                       const char *tarfile,\n"
"                       ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:12278
#, no-wrap
msgid ""
" GUESTFS_TAR_OUT_OPTS_COMPRESS, const char *compress,\n"
" GUESTFS_TAR_OUT_OPTS_NUMERICOWNER, int numericowner,\n"
" GUESTFS_TAR_OUT_OPTS_EXCLUDES, char *const *excludes,\n"
"\n"
msgstr ""
" GUESTFS_TAR_OUT_OPTS_COMPRESS, const char *compress,\n"
" GUESTFS_TAR_OUT_OPTS_NUMERICOWNER, int numericowner,\n"
" GUESTFS_TAR_OUT_OPTS_EXCLUDES, char *const *excludes,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12312
msgid "guestfs_tar_out_opts_va"
msgstr "guestfs_tar_out_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:12314
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_out_opts_va (guestfs_h *g,\n"
"                          const char *directory,\n"
"                          const char *tarfile,\n"
"                          va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tar_out_opts_va (guestfs_h *g,\n"
"                          const char *directory,\n"
"                          const char *tarfile,\n"
"                          va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12320
msgid "This is the \"va_list variant\" of L</guestfs_tar_out_opts>."
msgstr "Це «варіант з va_list» L</guestfs_tar_out_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:12324
msgid "guestfs_tar_out_opts_argv"
msgstr "guestfs_tar_out_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:12326
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_out_opts_argv (guestfs_h *g,\n"
"                            const char *directory,\n"
"                            const char *tarfile,\n"
"                            const struct guestfs_tar_out_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tar_out_opts_argv (guestfs_h *g,\n"
"                            const char *directory,\n"
"                            const char *tarfile,\n"
"                            const struct guestfs_tar_out_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12332
msgid "This is the \"argv variant\" of L</guestfs_tar_out_opts>."
msgstr "Це «варіант з argv» L</guestfs_tar_out_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:12336
msgid "guestfs_tgz_in"
msgstr "guestfs_tgz_in"

#. type: verbatim
#: ../src/guestfs-actions.pod:12338
#, no-wrap
msgid ""
" int\n"
" guestfs_tgz_in (guestfs_h *g,\n"
"                 const char *tarball,\n"
"                 const char *directory);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tgz_in (guestfs_h *g,\n"
"                 const char *tarball,\n"
"                 const char *directory);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12343 ../src/guestfs-actions.pod:12579
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_tar_in> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12357
msgid "guestfs_tgz_out"
msgstr "guestfs_tgz_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:12359
#, no-wrap
msgid ""
" int\n"
" guestfs_tgz_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarball);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tgz_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarball);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12364 ../src/guestfs-actions.pod:12600
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_tar_out> "
"call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12378
msgid "guestfs_touch"
msgstr "guestfs_touch"

#. type: verbatim
#: ../src/guestfs-actions.pod:12380
#, no-wrap
msgid ""
" int\n"
" guestfs_touch (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_touch (guestfs_h *g,\n"
"                const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12395
msgid "guestfs_truncate"
msgstr "guestfs_truncate"

#. type: verbatim
#: ../src/guestfs-actions.pod:12397
#, no-wrap
msgid ""
" int\n"
" guestfs_truncate (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_truncate (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12408
msgid "guestfs_truncate_size"
msgstr "guestfs_truncate_size"

#. type: verbatim
#: ../src/guestfs-actions.pod:12410
#, no-wrap
msgid ""
" int\n"
" guestfs_truncate_size (guestfs_h *g,\n"
"                        const char *path,\n"
"                        int64_t size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_truncate_size (guestfs_h *g,\n"
"                        const char *path,\n"
"                        int64_t size);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12418
msgid ""
"If the current file size is less than C<size> then the file is extended to "
"the required size with zero bytes.  This creates a sparse file (ie. disk "
"blocks are not allocated for the file until you write to it).  To create a "
"non-sparse file of zeroes, use C<guestfs_fallocate64> instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12428
msgid "guestfs_tune2fs"
msgstr "guestfs_tune2fs"

#. type: verbatim
#: ../src/guestfs-actions.pod:12430
#, no-wrap
msgid ""
" int\n"
" guestfs_tune2fs (guestfs_h *g,\n"
"                  const char *device,\n"
"                  ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tune2fs (guestfs_h *g,\n"
"                  const char *device,\n"
"                  ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:12440
#, no-wrap
msgid ""
" GUESTFS_TUNE2FS_FORCE, int force,\n"
" GUESTFS_TUNE2FS_MAXMOUNTCOUNT, int maxmountcount,\n"
" GUESTFS_TUNE2FS_MOUNTCOUNT, int mountcount,\n"
" GUESTFS_TUNE2FS_ERRORBEHAVIOR, const char *errorbehavior,\n"
" GUESTFS_TUNE2FS_GROUP, int64_t group,\n"
" GUESTFS_TUNE2FS_INTERVALBETWEENCHECKS, int intervalbetweenchecks,\n"
" GUESTFS_TUNE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
" GUESTFS_TUNE2FS_LASTMOUNTEDDIRECTORY, const char *lastmounteddirectory,\n"
" GUESTFS_TUNE2FS_RESERVEDBLOCKSCOUNT, int64_t reservedblockscount,\n"
" GUESTFS_TUNE2FS_USER, int64_t user,\n"
"\n"
msgstr ""
" GUESTFS_TUNE2FS_FORCE, int force,\n"
" GUESTFS_TUNE2FS_MAXMOUNTCOUNT, int maxmountcount,\n"
" GUESTFS_TUNE2FS_MOUNTCOUNT, int mountcount,\n"
" GUESTFS_TUNE2FS_ERRORBEHAVIOR, const char *errorbehavior,\n"
" GUESTFS_TUNE2FS_GROUP, int64_t group,\n"
" GUESTFS_TUNE2FS_INTERVALBETWEENCHECKS, int intervalbetweenchecks,\n"
" GUESTFS_TUNE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
" GUESTFS_TUNE2FS_LASTMOUNTEDDIRECTORY, const char *lastmounteddirectory,\n"
" GUESTFS_TUNE2FS_RESERVEDBLOCKSCOUNT, int64_t reservedblockscount,\n"
" GUESTFS_TUNE2FS_USER, int64_t user,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12520
msgid ""
"To get the current values of filesystem parameters, see "
"C<guestfs_tune2fs_l>.  For precise details of how tune2fs works, see the "
"L<tune2fs(8)> man page."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12528
msgid "guestfs_tune2fs_va"
msgstr "guestfs_tune2fs_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:12530
#, no-wrap
msgid ""
" int\n"
" guestfs_tune2fs_va (guestfs_h *g,\n"
"                     const char *device,\n"
"                     va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tune2fs_va (guestfs_h *g,\n"
"                     const char *device,\n"
"                     va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12535
msgid "This is the \"va_list variant\" of L</guestfs_tune2fs>."
msgstr "Це «варіант з va_list» L</guestfs_tune2fs>."

#. type: =head2
#: ../src/guestfs-actions.pod:12539
msgid "guestfs_tune2fs_argv"
msgstr "guestfs_tune2fs_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:12541
#, no-wrap
msgid ""
" int\n"
" guestfs_tune2fs_argv (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const struct guestfs_tune2fs_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_tune2fs_argv (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const struct guestfs_tune2fs_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12546
msgid "This is the \"argv variant\" of L</guestfs_tune2fs>."
msgstr "Це «варіант з argv» L</guestfs_tune2fs>."

#. type: =head2
#: ../src/guestfs-actions.pod:12550
msgid "guestfs_tune2fs_l"
msgstr "guestfs_tune2fs_l"

#. type: verbatim
#: ../src/guestfs-actions.pod:12552
#, no-wrap
msgid ""
" char **\n"
" guestfs_tune2fs_l (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_tune2fs_l (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12572
msgid "guestfs_txz_in"
msgstr "guestfs_txz_in"

#. type: verbatim
#: ../src/guestfs-actions.pod:12574
#, no-wrap
msgid ""
" int\n"
" guestfs_txz_in (guestfs_h *g,\n"
"                 const char *tarball,\n"
"                 const char *directory);\n"
"\n"
msgstr ""
" int\n"
" guestfs_txz_in (guestfs_h *g,\n"
"                 const char *tarball,\n"
"                 const char *directory);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12593
msgid "guestfs_txz_out"
msgstr "guestfs_txz_out"

#. type: verbatim
#: ../src/guestfs-actions.pod:12595
#, no-wrap
msgid ""
" int\n"
" guestfs_txz_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarball);\n"
"\n"
msgstr ""
" int\n"
" guestfs_txz_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarball);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12614
msgid "guestfs_umask"
msgstr "guestfs_umask"

#. type: verbatim
#: ../src/guestfs-actions.pod:12616
#, no-wrap
msgid ""
" int\n"
" guestfs_umask (guestfs_h *g,\n"
"                int mask);\n"
"\n"
msgstr ""
" int\n"
" guestfs_umask (guestfs_h *g,\n"
"                int mask);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12632
msgid ""
"See also C<guestfs_get_umask>, L<umask(2)>, C<guestfs_mknod>, "
"C<guestfs_mkdir>."
msgstr ""
"Див. також C<guestfs_get_umask>, L<umask(2)>, C<guestfs_mknod>, "
"C<guestfs_mkdir>."

#. type: =head2
#: ../src/guestfs-actions.pod:12641
msgid "guestfs_umount"
msgstr "guestfs_umount"

#. type: verbatim
#: ../src/guestfs-actions.pod:12643
#, no-wrap
msgid ""
" int\n"
" guestfs_umount (guestfs_h *g,\n"
"                 const char *pathordevice);\n"
"\n"
msgstr ""
" int\n"
" guestfs_umount (guestfs_h *g,\n"
"                 const char *pathordevice);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12647
msgid ""
"This function is provided for backwards compatibility with earlier versions "
"of libguestfs.  It simply calls L</guestfs_umount_opts> with no optional "
"arguments."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12654
msgid "guestfs_umount_opts"
msgstr "guestfs_umount_opts"

#. type: verbatim
#: ../src/guestfs-actions.pod:12656
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_opts (guestfs_h *g,\n"
"                      const char *pathordevice,\n"
"                      ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_umount_opts (guestfs_h *g,\n"
"                      const char *pathordevice,\n"
"                      ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:12666
#, no-wrap
msgid ""
" GUESTFS_UMOUNT_OPTS_FORCE, int force,\n"
" GUESTFS_UMOUNT_OPTS_LAZYUNMOUNT, int lazyunmount,\n"
"\n"
msgstr ""
" GUESTFS_UMOUNT_OPTS_FORCE, int force,\n"
" GUESTFS_UMOUNT_OPTS_LAZYUNMOUNT, int lazyunmount,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12675
msgid "(Added in 1.19.25)"
msgstr "(Додано у 1.19.25)"

#. type: =head2
#: ../src/guestfs-actions.pod:12677
msgid "guestfs_umount_opts_va"
msgstr "guestfs_umount_opts_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:12679
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_opts_va (guestfs_h *g,\n"
"                         const char *pathordevice,\n"
"                         va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_umount_opts_va (guestfs_h *g,\n"
"                         const char *pathordevice,\n"
"                         va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12684
msgid "This is the \"va_list variant\" of L</guestfs_umount_opts>."
msgstr "Це «варіант з va_list» L</guestfs_umount_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:12688
msgid "guestfs_umount_opts_argv"
msgstr "guestfs_umount_opts_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:12690
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_opts_argv (guestfs_h *g,\n"
"                           const char *pathordevice,\n"
"                           const struct guestfs_umount_opts_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_umount_opts_argv (guestfs_h *g,\n"
"                           const char *pathordevice,\n"
"                           const struct guestfs_umount_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12695
msgid "This is the \"argv variant\" of L</guestfs_umount_opts>."
msgstr "Це «варіант з argv» L</guestfs_umount_opts>."

#. type: =head2
#: ../src/guestfs-actions.pod:12699
msgid "guestfs_umount_all"
msgstr "guestfs_umount_all"

#. type: verbatim
#: ../src/guestfs-actions.pod:12701
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_all (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_umount_all (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12712
msgid "guestfs_umount_local"
msgstr "guestfs_umount_local"

#. type: verbatim
#: ../src/guestfs-actions.pod:12714
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_local (guestfs_h *g,\n"
"                       ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_umount_local (guestfs_h *g,\n"
"                       ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:12723
#, no-wrap
msgid ""
" GUESTFS_UMOUNT_LOCAL_RETRY, int retry,\n"
"\n"
msgstr ""
" GUESTFS_UMOUNT_LOCAL_RETRY, int retry,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12734
msgid "guestfs_umount_local_va"
msgstr "guestfs_umount_local_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:12736
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_local_va (guestfs_h *g,\n"
"                          va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_umount_local_va (guestfs_h *g,\n"
"                          va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12740
msgid "This is the \"va_list variant\" of L</guestfs_umount_local>."
msgstr "Це «варіант з va_list» L</guestfs_umount_local>."

#. type: =head2
#: ../src/guestfs-actions.pod:12744
msgid "guestfs_umount_local_argv"
msgstr "guestfs_umount_local_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:12746
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_local_argv (guestfs_h *g,\n"
"                            const struct guestfs_umount_local_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_umount_local_argv (guestfs_h *g,\n"
"                            const struct guestfs_umount_local_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12750
msgid "This is the \"argv variant\" of L</guestfs_umount_local>."
msgstr "Це «варіант з argv» L</guestfs_umount_local>."

#. type: =head2
#: ../src/guestfs-actions.pod:12754
msgid "guestfs_upload"
msgstr "guestfs_upload"

#. type: verbatim
#: ../src/guestfs-actions.pod:12756
#, no-wrap
msgid ""
" int\n"
" guestfs_upload (guestfs_h *g,\n"
"                 const char *filename,\n"
"                 const char *remotefilename);\n"
"\n"
msgstr ""
" int\n"
" guestfs_upload (guestfs_h *g,\n"
"                 const char *filename,\n"
"                 const char *remotefilename);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12766
msgid "See also C<guestfs_download>."
msgstr "Див. також C<guestfs_download>."

#. type: =head2
#: ../src/guestfs-actions.pod:12777
msgid "guestfs_upload_offset"
msgstr "guestfs_upload_offset"

#. type: verbatim
#: ../src/guestfs-actions.pod:12779
#, no-wrap
msgid ""
" int\n"
" guestfs_upload_offset (guestfs_h *g,\n"
"                        const char *filename,\n"
"                        const char *remotefilename,\n"
"                        int64_t offset);\n"
"\n"
msgstr ""
" int\n"
" guestfs_upload_offset (guestfs_h *g,\n"
"                        const char *filename,\n"
"                        const char *remotefilename,\n"
"                        int64_t offset);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12795
msgid ""
"Note that there is no limit on the amount of data that can be uploaded with "
"this call, unlike with C<guestfs_pwrite>, and this call always writes the "
"full amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:12800
msgid "See also C<guestfs_upload>, C<guestfs_pwrite>."
msgstr "Див. також C<guestfs_upload>, C<guestfs_pwrite>."

#. type: =head2
#: ../src/guestfs-actions.pod:12811
msgid "guestfs_user_cancel"
msgstr "guestfs_user_cancel"

#. type: verbatim
#: ../src/guestfs-actions.pod:12813
#, no-wrap
msgid ""
" int\n"
" guestfs_user_cancel (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_user_cancel (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12832
msgid "There are two common places that you might call C<guestfs_user_cancel>:"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:12847
msgid "guestfs_utimens"
msgstr "guestfs_utimens"

#. type: verbatim
#: ../src/guestfs-actions.pod:12849
#, no-wrap
msgid ""
" int\n"
" guestfs_utimens (guestfs_h *g,\n"
"                  const char *path,\n"
"                  int64_t atsecs,\n"
"                  int64_t atnsecs,\n"
"                  int64_t mtsecs,\n"
"                  int64_t mtnsecs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_utimens (guestfs_h *g,\n"
"                  const char *path,\n"
"                  int64_t atsecs,\n"
"                  int64_t atnsecs,\n"
"                  int64_t mtsecs,\n"
"                  int64_t mtnsecs);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12878 ../src/guestfs-structs.pod:566
msgid "guestfs_utsname"
msgstr "guestfs_utsname"

#. type: verbatim
#: ../src/guestfs-actions.pod:12880
#, no-wrap
msgid ""
" struct guestfs_utsname *\n"
" guestfs_utsname (guestfs_h *g);\n"
"\n"
msgstr ""
" struct guestfs_utsname *\n"
" guestfs_utsname (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12887
msgid ""
"This function returns a C<struct guestfs_utsname *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_utsname> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:12891
msgid "(Added in 1.19.27)"
msgstr "(Додано у 1.19.27)"

#. type: =head2
#: ../src/guestfs-actions.pod:12893 ../src/guestfs-structs.pod:283
msgid "guestfs_version"
msgstr "guestfs_version"

#. type: verbatim
#: ../src/guestfs-actions.pod:12895
#, no-wrap
msgid ""
" struct guestfs_version *\n"
" guestfs_version (guestfs_h *g);\n"
"\n"
msgstr ""
" struct guestfs_version *\n"
" guestfs_version (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12923
msgid ""
"I<Note:> Don't use this call to test for availability of features.  In "
"enterprise distributions we backport features from later versions into "
"earlier versions, making this an unreliable way to test for features.  Use "
"C<guestfs_available> or C<guestfs_feature_available> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:12929
msgid ""
"This function returns a C<struct guestfs_version *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_version> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:12933
msgid "(Added in 1.0.58)"
msgstr "(Додано у 1.0.58)"

#. type: =head2
#: ../src/guestfs-actions.pod:12935
msgid "guestfs_vfs_label"
msgstr "guestfs_vfs_label"

#. type: verbatim
#: ../src/guestfs-actions.pod:12937
#, no-wrap
msgid ""
" char *\n"
" guestfs_vfs_label (guestfs_h *g,\n"
"                    const char *mountable);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_vfs_label (guestfs_h *g,\n"
"                    const char *mountable);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12945
msgid "To find a filesystem from the label, use C<guestfs_findfs_label>."
msgstr ""
"Пошук файлової системи за міткою можна здійснити за допомогою "
"C<guestfs_findfs_label>."

#. type: textblock
#: ../src/guestfs-actions.pod:12950 ../src/guestfs-actions.pod:12986
msgid "(Added in 1.3.18)"
msgstr "(Додано у 1.3.18)"

#. type: =head2
#: ../src/guestfs-actions.pod:12952
msgid "guestfs_vfs_type"
msgstr "guestfs_vfs_type"

#. type: verbatim
#: ../src/guestfs-actions.pod:12954
#, no-wrap
msgid ""
" char *\n"
" guestfs_vfs_type (guestfs_h *g,\n"
"                   const char *mountable);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_vfs_type (guestfs_h *g,\n"
"                   const char *mountable);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:12971
msgid "guestfs_vfs_uuid"
msgstr "guestfs_vfs_uuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:12973
#, no-wrap
msgid ""
" char *\n"
" guestfs_vfs_uuid (guestfs_h *g,\n"
"                   const char *mountable);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_vfs_uuid (guestfs_h *g,\n"
"                   const char *mountable);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:12981
msgid "To find a filesystem from the UUID, use C<guestfs_findfs_uuid>."
msgstr ""
"Пошук файлової системи за UUID можна здійснити за допомогою "
"C<guestfs_findfs_uuid>."

#. type: =head2
#: ../src/guestfs-actions.pod:12988
msgid "guestfs_vg_activate"
msgstr "guestfs_vg_activate"

#. type: verbatim
#: ../src/guestfs-actions.pod:12990
#, no-wrap
msgid ""
" int\n"
" guestfs_vg_activate (guestfs_h *g,\n"
"                      int activate,\n"
"                      char *const *volgroups);\n"
"\n"
msgstr ""
" int\n"
" guestfs_vg_activate (guestfs_h *g,\n"
"                      int activate,\n"
"                      char *const *volgroups);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13007
msgid "guestfs_vg_activate_all"
msgstr "guestfs_vg_activate_all"

#. type: verbatim
#: ../src/guestfs-actions.pod:13009
#, no-wrap
msgid ""
" int\n"
" guestfs_vg_activate_all (guestfs_h *g,\n"
"                          int activate);\n"
"\n"
msgstr ""
" int\n"
" guestfs_vg_activate_all (guestfs_h *g,\n"
"                          int activate);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13022
msgid "guestfs_vgchange_uuid"
msgstr "guestfs_vgchange_uuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:13024
#, no-wrap
msgid ""
" int\n"
" guestfs_vgchange_uuid (guestfs_h *g,\n"
"                        const char *vg);\n"
"\n"
msgstr ""
" int\n"
" guestfs_vgchange_uuid (guestfs_h *g,\n"
"                        const char *vg);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13034
msgid "guestfs_vgchange_uuid_all"
msgstr "guestfs_vgchange_uuid_all"

#. type: verbatim
#: ../src/guestfs-actions.pod:13036
#, no-wrap
msgid ""
" int\n"
" guestfs_vgchange_uuid_all (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_vgchange_uuid_all (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13045
msgid "guestfs_vgcreate"
msgstr "guestfs_vgcreate"

#. type: verbatim
#: ../src/guestfs-actions.pod:13047
#, no-wrap
msgid ""
" int\n"
" guestfs_vgcreate (guestfs_h *g,\n"
"                   const char *volgroup,\n"
"                   char *const *physvols);\n"
"\n"
msgstr ""
" int\n"
" guestfs_vgcreate (guestfs_h *g,\n"
"                   const char *volgroup,\n"
"                   char *const *physvols);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13059
msgid "guestfs_vglvuuids"
msgstr "guestfs_vglvuuids"

#. type: verbatim
#: ../src/guestfs-actions.pod:13061
#, no-wrap
msgid ""
" char **\n"
" guestfs_vglvuuids (guestfs_h *g,\n"
"                    const char *vgname);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_vglvuuids (guestfs_h *g,\n"
"                    const char *vgname);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13068
msgid ""
"You can use this along with C<guestfs_lvs> and C<guestfs_lvuuid> calls to "
"associate logical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:13071
msgid "See also C<guestfs_vgpvuuids>."
msgstr "Див. також C<guestfs_vgpvuuids>."

#. type: =head2
#: ../src/guestfs-actions.pod:13079
msgid "guestfs_vgmeta"
msgstr "guestfs_vgmeta"

#. type: verbatim
#: ../src/guestfs-actions.pod:13081
#, no-wrap
msgid ""
" char *\n"
" guestfs_vgmeta (guestfs_h *g,\n"
"                 const char *vgname,\n"
"                 size_t *size_r);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_vgmeta (guestfs_h *g,\n"
"                 const char *vgname,\n"
"                 size_t *size_r);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13096
msgid "(Added in 1.17.20)"
msgstr "(Додано у 1.17.20)"

#. type: =head2
#: ../src/guestfs-actions.pod:13098
msgid "guestfs_vgpvuuids"
msgstr "guestfs_vgpvuuids"

#. type: verbatim
#: ../src/guestfs-actions.pod:13100
#, no-wrap
msgid ""
" char **\n"
" guestfs_vgpvuuids (guestfs_h *g,\n"
"                    const char *vgname);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_vgpvuuids (guestfs_h *g,\n"
"                    const char *vgname);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13107
msgid ""
"You can use this along with C<guestfs_pvs> and C<guestfs_pvuuid> calls to "
"associate physical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:13110
msgid "See also C<guestfs_vglvuuids>."
msgstr "Див. також C<guestfs_vglvuuids>."

#. type: =head2
#: ../src/guestfs-actions.pod:13118
msgid "guestfs_vgremove"
msgstr "guestfs_vgremove"

#. type: verbatim
#: ../src/guestfs-actions.pod:13120
#, no-wrap
msgid ""
" int\n"
" guestfs_vgremove (guestfs_h *g,\n"
"                   const char *vgname);\n"
"\n"
msgstr ""
" int\n"
" guestfs_vgremove (guestfs_h *g,\n"
"                   const char *vgname);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13133
msgid "guestfs_vgrename"
msgstr "guestfs_vgrename"

#. type: verbatim
#: ../src/guestfs-actions.pod:13135
#, no-wrap
msgid ""
" int\n"
" guestfs_vgrename (guestfs_h *g,\n"
"                   const char *volgroup,\n"
"                   const char *newvolgroup);\n"
"\n"
msgstr ""
" int\n"
" guestfs_vgrename (guestfs_h *g,\n"
"                   const char *volgroup,\n"
"                   const char *newvolgroup);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13146
msgid "guestfs_vgs"
msgstr "guestfs_vgs"

#. type: verbatim
#: ../src/guestfs-actions.pod:13148
#, no-wrap
msgid ""
" char **\n"
" guestfs_vgs (guestfs_h *g);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_vgs (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13157
msgid "See also C<guestfs_vgs_full>."
msgstr "Див. також C<guestfs_vgs_full>."

#. type: =head2
#: ../src/guestfs-actions.pod:13165
msgid "guestfs_vgs_full"
msgstr "guestfs_vgs_full"

#. type: verbatim
#: ../src/guestfs-actions.pod:13167
#, no-wrap
msgid ""
" struct guestfs_lvm_vg_list *\n"
" guestfs_vgs_full (guestfs_h *g);\n"
"\n"
msgstr ""
" struct guestfs_lvm_vg_list *\n"
" guestfs_vgs_full (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13173
msgid ""
"This function returns a C<struct guestfs_lvm_vg_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_lvm_vg_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:13179
msgid "guestfs_vgscan"
msgstr "guestfs_vgscan"

#. type: verbatim
#: ../src/guestfs-actions.pod:13181
#, no-wrap
msgid ""
" int\n"
" guestfs_vgscan (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_vgscan (guestfs_h *g);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13191
msgid "guestfs_vguuid"
msgstr "guestfs_vguuid"

#. type: verbatim
#: ../src/guestfs-actions.pod:13193
#, no-wrap
msgid ""
" char *\n"
" guestfs_vguuid (guestfs_h *g,\n"
"                 const char *vgname);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_vguuid (guestfs_h *g,\n"
"                 const char *vgname);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13204
msgid "guestfs_wait_ready"
msgstr "guestfs_wait_ready"

#. type: verbatim
#: ../src/guestfs-actions.pod:13206
#, no-wrap
msgid ""
" int\n"
" guestfs_wait_ready (guestfs_h *g);\n"
"\n"
msgstr ""
" int\n"
" guestfs_wait_ready (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13209
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_launch> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:13216
msgid "This function is a no op."
msgstr "Ця функція не виконує ніяких дій."

#. type: textblock
#: ../src/guestfs-actions.pod:13218
msgid ""
"In versions of the API E<lt> 1.0.71 you had to call this function just after "
"calling C<guestfs_launch> to wait for the launch to complete.  However this "
"is no longer necessary because C<guestfs_launch> now does the waiting."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:13223
msgid ""
"If you see any calls to this function in code then you can just remove them, "
"unless you want to retain compatibility with older versions of the API."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:13231
msgid "guestfs_wc_c"
msgstr "guestfs_wc_c"

#. type: verbatim
#: ../src/guestfs-actions.pod:13233
#, no-wrap
msgid ""
" int\n"
" guestfs_wc_c (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_wc_c (guestfs_h *g,\n"
"               const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13244
msgid "guestfs_wc_l"
msgstr "guestfs_wc_l"

#. type: verbatim
#: ../src/guestfs-actions.pod:13246
#, no-wrap
msgid ""
" int\n"
" guestfs_wc_l (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_wc_l (guestfs_h *g,\n"
"               const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13257
msgid "guestfs_wc_w"
msgstr "guestfs_wc_w"

#. type: verbatim
#: ../src/guestfs-actions.pod:13259
#, no-wrap
msgid ""
" int\n"
" guestfs_wc_w (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""
" int\n"
" guestfs_wc_w (guestfs_h *g,\n"
"               const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13270
msgid "guestfs_wipefs"
msgstr "guestfs_wipefs"

#. type: verbatim
#: ../src/guestfs-actions.pod:13272
#, no-wrap
msgid ""
" int\n"
" guestfs_wipefs (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_wipefs (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13282
msgid ""
"Compare with C<guestfs_zero> which zeroes the first few blocks of a device."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:13289
msgid "guestfs_write"
msgstr "guestfs_write"

#. type: verbatim
#: ../src/guestfs-actions.pod:13291
#, no-wrap
msgid ""
" int\n"
" guestfs_write (guestfs_h *g,\n"
"                const char *path,\n"
"                const char *content,\n"
"                size_t content_size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_write (guestfs_h *g,\n"
"                const char *path,\n"
"                const char *content,\n"
"                size_t content_size);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13300
msgid "See also C<guestfs_write_append>."
msgstr "Див. також C<guestfs_write_append>."

#. type: =head2
#: ../src/guestfs-actions.pod:13306
msgid "guestfs_write_append"
msgstr "guestfs_write_append"

#. type: verbatim
#: ../src/guestfs-actions.pod:13308
#, no-wrap
msgid ""
" int\n"
" guestfs_write_append (guestfs_h *g,\n"
"                       const char *path,\n"
"                       const char *content,\n"
"                       size_t content_size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_write_append (guestfs_h *g,\n"
"                       const char *path,\n"
"                       const char *content,\n"
"                       size_t content_size);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13317
msgid "See also C<guestfs_write>."
msgstr "Див. також C<guestfs_write>."

#. type: =head2
#: ../src/guestfs-actions.pod:13323
msgid "guestfs_write_file"
msgstr "guestfs_write_file"

#. type: verbatim
#: ../src/guestfs-actions.pod:13325
#, no-wrap
msgid ""
" int\n"
" guestfs_write_file (guestfs_h *g,\n"
"                     const char *path,\n"
"                     const char *content,\n"
"                     int size);\n"
"\n"
msgstr ""
" int\n"
" guestfs_write_file (guestfs_h *g,\n"
"                     const char *path,\n"
"                     const char *content,\n"
"                     int size);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13331
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_write> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:13356
msgid "guestfs_xfs_admin"
msgstr "guestfs_xfs_admin"

#. type: verbatim
#: ../src/guestfs-actions.pod:13358
#, no-wrap
msgid ""
" int\n"
" guestfs_xfs_admin (guestfs_h *g,\n"
"                    const char *device,\n"
"                    ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_xfs_admin (guestfs_h *g,\n"
"                    const char *device,\n"
"                    ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:13368
#, no-wrap
msgid ""
" GUESTFS_XFS_ADMIN_EXTUNWRITTEN, int extunwritten,\n"
" GUESTFS_XFS_ADMIN_IMGFILE, int imgfile,\n"
" GUESTFS_XFS_ADMIN_V2LOG, int v2log,\n"
" GUESTFS_XFS_ADMIN_PROJID32BIT, int projid32bit,\n"
" GUESTFS_XFS_ADMIN_LAZYCOUNTER, int lazycounter,\n"
" GUESTFS_XFS_ADMIN_LABEL, const char *label,\n"
" GUESTFS_XFS_ADMIN_UUID, const char *uuid,\n"
"\n"
msgstr ""
" GUESTFS_XFS_ADMIN_EXTUNWRITTEN, int extunwritten,\n"
" GUESTFS_XFS_ADMIN_IMGFILE, int imgfile,\n"
" GUESTFS_XFS_ADMIN_V2LOG, int v2log,\n"
" GUESTFS_XFS_ADMIN_PROJID32BIT, int projid32bit,\n"
" GUESTFS_XFS_ADMIN_LAZYCOUNTER, int lazycounter,\n"
" GUESTFS_XFS_ADMIN_LABEL, const char *label,\n"
" GUESTFS_XFS_ADMIN_UUID, const char *uuid,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13382
msgid ""
"Some of the parameters of a mounted filesystem can be examined and modified "
"using the C<guestfs_xfs_info> and C<guestfs_xfs_growfs> calls."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:13388
msgid "(Added in 1.19.33)"
msgstr "(Додано у 1.19.33)"

#. type: =head2
#: ../src/guestfs-actions.pod:13390
msgid "guestfs_xfs_admin_va"
msgstr "guestfs_xfs_admin_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:13392
#, no-wrap
msgid ""
" int\n"
" guestfs_xfs_admin_va (guestfs_h *g,\n"
"                       const char *device,\n"
"                       va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_xfs_admin_va (guestfs_h *g,\n"
"                       const char *device,\n"
"                       va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13397
msgid "This is the \"va_list variant\" of L</guestfs_xfs_admin>."
msgstr "Це «варіант з va_list» L</guestfs_xfs_admin>."

#. type: =head2
#: ../src/guestfs-actions.pod:13401
msgid "guestfs_xfs_admin_argv"
msgstr "guestfs_xfs_admin_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:13403
#, no-wrap
msgid ""
" int\n"
" guestfs_xfs_admin_argv (guestfs_h *g,\n"
"                         const char *device,\n"
"                         const struct guestfs_xfs_admin_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_xfs_admin_argv (guestfs_h *g,\n"
"                         const char *device,\n"
"                         const struct guestfs_xfs_admin_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13408
msgid "This is the \"argv variant\" of L</guestfs_xfs_admin>."
msgstr "Це «варіант з argv» L</guestfs_xfs_admin>."

#. type: =head2
#: ../src/guestfs-actions.pod:13412
msgid "guestfs_xfs_growfs"
msgstr "guestfs_xfs_growfs"

#. type: verbatim
#: ../src/guestfs-actions.pod:13414
#, no-wrap
msgid ""
" int\n"
" guestfs_xfs_growfs (guestfs_h *g,\n"
"                     const char *path,\n"
"                     ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_xfs_growfs (guestfs_h *g,\n"
"                     const char *path,\n"
"                     ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:13424
#, no-wrap
msgid ""
" GUESTFS_XFS_GROWFS_DATASEC, int datasec,\n"
" GUESTFS_XFS_GROWFS_LOGSEC, int logsec,\n"
" GUESTFS_XFS_GROWFS_RTSEC, int rtsec,\n"
" GUESTFS_XFS_GROWFS_DATASIZE, int64_t datasize,\n"
" GUESTFS_XFS_GROWFS_LOGSIZE, int64_t logsize,\n"
" GUESTFS_XFS_GROWFS_RTSIZE, int64_t rtsize,\n"
" GUESTFS_XFS_GROWFS_RTEXTSIZE, int64_t rtextsize,\n"
" GUESTFS_XFS_GROWFS_MAXPCT, int maxpct,\n"
"\n"
msgstr ""
" GUESTFS_XFS_GROWFS_DATASEC, int datasec,\n"
" GUESTFS_XFS_GROWFS_LOGSEC, int logsec,\n"
" GUESTFS_XFS_GROWFS_RTSEC, int rtsec,\n"
" GUESTFS_XFS_GROWFS_DATASIZE, int64_t datasize,\n"
" GUESTFS_XFS_GROWFS_LOGSIZE, int64_t logsize,\n"
" GUESTFS_XFS_GROWFS_RTSIZE, int64_t rtsize,\n"
" GUESTFS_XFS_GROWFS_RTEXTSIZE, int64_t rtextsize,\n"
" GUESTFS_XFS_GROWFS_MAXPCT, int maxpct,\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13443
msgid "guestfs_xfs_growfs_va"
msgstr "guestfs_xfs_growfs_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:13445
#, no-wrap
msgid ""
" int\n"
" guestfs_xfs_growfs_va (guestfs_h *g,\n"
"                        const char *path,\n"
"                        va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_xfs_growfs_va (guestfs_h *g,\n"
"                        const char *path,\n"
"                        va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13450
msgid "This is the \"va_list variant\" of L</guestfs_xfs_growfs>."
msgstr "Це «варіант з va_list» L</guestfs_xfs_growfs>."

#. type: =head2
#: ../src/guestfs-actions.pod:13454
msgid "guestfs_xfs_growfs_argv"
msgstr "guestfs_xfs_growfs_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:13456
#, no-wrap
msgid ""
" int\n"
" guestfs_xfs_growfs_argv (guestfs_h *g,\n"
"                          const char *path,\n"
"                          const struct guestfs_xfs_growfs_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_xfs_growfs_argv (guestfs_h *g,\n"
"                          const char *path,\n"
"                          const struct guestfs_xfs_growfs_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13461
msgid "This is the \"argv variant\" of L</guestfs_xfs_growfs>."
msgstr "Це «варіант з argv» L</guestfs_xfs_growfs>."

#. type: =head2
#: ../src/guestfs-actions.pod:13465
msgid "guestfs_xfs_info"
msgstr "guestfs_xfs_info"

#. type: verbatim
#: ../src/guestfs-actions.pod:13467
#, no-wrap
msgid ""
" struct guestfs_xfsinfo *\n"
" guestfs_xfs_info (guestfs_h *g,\n"
"                   const char *pathordevice);\n"
"\n"
msgstr ""
" struct guestfs_xfsinfo *\n"
" guestfs_xfs_info (guestfs_h *g,\n"
"                   const char *pathordevice);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13478
msgid ""
"This function returns a C<struct guestfs_xfsinfo *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_xfsinfo> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:13482
msgid "(Added in 1.19.21)"
msgstr "(Додано у 1.19.21)"

#. type: =head2
#: ../src/guestfs-actions.pod:13484
msgid "guestfs_xfs_repair"
msgstr "guestfs_xfs_repair"

#. type: verbatim
#: ../src/guestfs-actions.pod:13486
#, no-wrap
msgid ""
" int\n"
" guestfs_xfs_repair (guestfs_h *g,\n"
"                     const char *device,\n"
"                     ...);\n"
"\n"
msgstr ""
" int\n"
" guestfs_xfs_repair (guestfs_h *g,\n"
"                     const char *device,\n"
"                     ...);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-actions.pod:13496
#, no-wrap
msgid ""
" GUESTFS_XFS_REPAIR_FORCELOGZERO, int forcelogzero,\n"
" GUESTFS_XFS_REPAIR_NOMODIFY, int nomodify,\n"
" GUESTFS_XFS_REPAIR_NOPREFETCH, int noprefetch,\n"
" GUESTFS_XFS_REPAIR_FORCEGEOMETRY, int forcegeometry,\n"
" GUESTFS_XFS_REPAIR_MAXMEM, int64_t maxmem,\n"
" GUESTFS_XFS_REPAIR_IHASHSIZE, int64_t ihashsize,\n"
" GUESTFS_XFS_REPAIR_BHASHSIZE, int64_t bhashsize,\n"
" GUESTFS_XFS_REPAIR_AGSTRIDE, int64_t agstride,\n"
" GUESTFS_XFS_REPAIR_LOGDEV, const char *logdev,\n"
" GUESTFS_XFS_REPAIR_RTDEV, const char *rtdev,\n"
"\n"
msgstr ""
" GUESTFS_XFS_REPAIR_FORCELOGZERO, int forcelogzero,\n"
" GUESTFS_XFS_REPAIR_NOMODIFY, int nomodify,\n"
" GUESTFS_XFS_REPAIR_NOPREFETCH, int noprefetch,\n"
" GUESTFS_XFS_REPAIR_FORCEGEOMETRY, int forcegeometry,\n"
" GUESTFS_XFS_REPAIR_MAXMEM, int64_t maxmem,\n"
" GUESTFS_XFS_REPAIR_IHASHSIZE, int64_t ihashsize,\n"
" GUESTFS_XFS_REPAIR_BHASHSIZE, int64_t bhashsize,\n"
" GUESTFS_XFS_REPAIR_AGSTRIDE, int64_t agstride,\n"
" GUESTFS_XFS_REPAIR_LOGDEV, const char *logdev,\n"
" GUESTFS_XFS_REPAIR_RTDEV, const char *rtdev,\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13523
msgid "(Added in 1.19.36)"
msgstr "(Додано у 1.19.36)"

#. type: =head2
#: ../src/guestfs-actions.pod:13525
msgid "guestfs_xfs_repair_va"
msgstr "guestfs_xfs_repair_va"

#. type: verbatim
#: ../src/guestfs-actions.pod:13527
#, no-wrap
msgid ""
" int\n"
" guestfs_xfs_repair_va (guestfs_h *g,\n"
"                        const char *device,\n"
"                        va_list args);\n"
"\n"
msgstr ""
" int\n"
" guestfs_xfs_repair_va (guestfs_h *g,\n"
"                        const char *device,\n"
"                        va_list args);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13532
msgid "This is the \"va_list variant\" of L</guestfs_xfs_repair>."
msgstr "Це «варіант з va_list» L</guestfs_xfs_repair>"

#. type: =head2
#: ../src/guestfs-actions.pod:13536
msgid "guestfs_xfs_repair_argv"
msgstr "guestfs_xfs_repair_argv"

#. type: verbatim
#: ../src/guestfs-actions.pod:13538
#, no-wrap
msgid ""
" int\n"
" guestfs_xfs_repair_argv (guestfs_h *g,\n"
"                          const char *device,\n"
"                          const struct guestfs_xfs_repair_argv *optargs);\n"
"\n"
msgstr ""
" int\n"
" guestfs_xfs_repair_argv (guestfs_h *g,\n"
"                          const char *device,\n"
"                          const struct guestfs_xfs_repair_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13543
msgid "This is the \"argv variant\" of L</guestfs_xfs_repair>."
msgstr "Це «варіант з argv» L</guestfs_xfs_repair>."

#. type: =head2
#: ../src/guestfs-actions.pod:13547
msgid "guestfs_zegrep"
msgstr "guestfs_zegrep"

#. type: verbatim
#: ../src/guestfs-actions.pod:13549
#, no-wrap
msgid ""
" char **\n"
" guestfs_zegrep (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_zegrep (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13573
msgid "guestfs_zegrepi"
msgstr "guestfs_zegrepi"

#. type: verbatim
#: ../src/guestfs-actions.pod:13575
#, no-wrap
msgid ""
" char **\n"
" guestfs_zegrepi (guestfs_h *g,\n"
"                  const char *regex,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_zegrepi (guestfs_h *g,\n"
"                  const char *regex,\n"
"                  const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13599
msgid "guestfs_zero"
msgstr "guestfs_zero"

#. type: verbatim
#: ../src/guestfs-actions.pod:13601
#, no-wrap
msgid ""
" int\n"
" guestfs_zero (guestfs_h *g,\n"
"               const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_zero (guestfs_h *g,\n"
"               const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13615
msgid ""
"See also: C<guestfs_zero_device>, C<guestfs_scrub_device>, "
"C<guestfs_is_zero_device>"
msgstr ""
"Див. також C<guestfs_zero_device>, C<guestfs_scrub_device>, "
"C<guestfs_is_zero_device>"

#. type: =head2
#: ../src/guestfs-actions.pod:13627
msgid "guestfs_zero_device"
msgstr "guestfs_zero_device"

#. type: verbatim
#: ../src/guestfs-actions.pod:13629
#, no-wrap
msgid ""
" int\n"
" guestfs_zero_device (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_zero_device (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13633
msgid ""
"This command writes zeroes over the entire C<device>.  Compare with "
"C<guestfs_zero> which just zeroes the first few blocks of a device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:13648
msgid "(Added in 1.3.1)"
msgstr "(Додано у 1.3.1)"

#. type: =head2
#: ../src/guestfs-actions.pod:13650
msgid "guestfs_zero_free_space"
msgstr "guestfs_zero_free_space"

#. type: verbatim
#: ../src/guestfs-actions.pod:13652
#, no-wrap
msgid ""
" int\n"
" guestfs_zero_free_space (guestfs_h *g,\n"
"                          const char *directory);\n"
"\n"
msgstr ""
" int\n"
" guestfs_zero_free_space (guestfs_h *g,\n"
"                          const char *directory);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13662
msgid ""
"Free space is not \"trimmed\".  You may want to call C<guestfs_fstrim> "
"either as an alternative to this, or after calling this, depending on your "
"requirements."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:13675
msgid "guestfs_zerofree"
msgstr "guestfs_zerofree"

#. type: verbatim
#: ../src/guestfs-actions.pod:13677
#, no-wrap
msgid ""
" int\n"
" guestfs_zerofree (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""
" int\n"
" guestfs_zerofree (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13696
msgid "guestfs_zfgrep"
msgstr "guestfs_zfgrep"

#. type: verbatim
#: ../src/guestfs-actions.pod:13698
#, no-wrap
msgid ""
" char **\n"
" guestfs_zfgrep (guestfs_h *g,\n"
"                 const char *pattern,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_zfgrep (guestfs_h *g,\n"
"                 const char *pattern,\n"
"                 const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13722
msgid "guestfs_zfgrepi"
msgstr "guestfs_zfgrepi"

#. type: verbatim
#: ../src/guestfs-actions.pod:13724
#, no-wrap
msgid ""
" char **\n"
" guestfs_zfgrepi (guestfs_h *g,\n"
"                  const char *pattern,\n"
"                  const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_zfgrepi (guestfs_h *g,\n"
"                  const char *pattern,\n"
"                  const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13748
msgid "guestfs_zfile"
msgstr "guestfs_zfile"

#. type: verbatim
#: ../src/guestfs-actions.pod:13750
#, no-wrap
msgid ""
" char *\n"
" guestfs_zfile (guestfs_h *g,\n"
"                const char *meth,\n"
"                const char *path);\n"
"\n"
msgstr ""
" char *\n"
" guestfs_zfile (guestfs_h *g,\n"
"                const char *meth,\n"
"                const char *path);\n"
"\n"

#. type: textblock
#: ../src/guestfs-actions.pod:13755
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_file> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:13767
msgid ""
"Since 1.0.63, use C<guestfs_file> instead which can now process compressed "
"files."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:13775
msgid "guestfs_zgrep"
msgstr "guestfs_zgrep"

#. type: verbatim
#: ../src/guestfs-actions.pod:13777
#, no-wrap
msgid ""
" char **\n"
" guestfs_zgrep (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_zgrep (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"

#. type: =head2
#: ../src/guestfs-actions.pod:13801
msgid "guestfs_zgrepi"
msgstr "guestfs_zgrepi"

#. type: verbatim
#: ../src/guestfs-actions.pod:13803
#, no-wrap
msgid ""
" char **\n"
" guestfs_zgrepi (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"
msgstr ""
" char **\n"
" guestfs_zgrepi (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"

#. type: =item
#: ../src/guestfs-availability.pod:28
msgid "B<acl>"
msgstr "B<acl>"

#. type: textblock
#: ../src/guestfs-availability.pod:30
msgid ""
"The following functions: L</guestfs_acl_delete_def_file> L</"
"guestfs_acl_get_file> L</guestfs_acl_set_file>"
msgstr ""
"Такі функції: L</guestfs_acl_delete_def_file> L</guestfs_acl_get_file> L</"
"guestfs_acl_set_file>"

#. type: =item
#: ../src/guestfs-availability.pod:35
msgid "B<blkdiscard>"
msgstr "B<blkdiscard>"

#. type: textblock
#: ../src/guestfs-availability.pod:37
msgid "The following functions: L</guestfs_blkdiscard>"
msgstr "Такі функції: L</guestfs_blkdiscard>"

#. type: =item
#: ../src/guestfs-availability.pod:40
msgid "B<blkdiscardzeroes>"
msgstr "B<blkdiscardzeroes>"

#. type: textblock
#: ../src/guestfs-availability.pod:42
msgid "The following functions: L</guestfs_blkdiscardzeroes>"
msgstr "Такі функції: L</guestfs_blkdiscardzeroes>"

#. type: =item
#: ../src/guestfs-availability.pod:45
msgid "B<btrfs>"
msgstr "B<btrfs>"

#. type: textblock
#: ../src/guestfs-availability.pod:47
msgid ""
"The following functions: L</guestfs_btrfs_device_add> L</"
"guestfs_btrfs_device_delete> L</guestfs_btrfs_filesystem_balance> L</"
"guestfs_btrfs_filesystem_resize> L</guestfs_btrfs_filesystem_sync> L</"
"guestfs_btrfs_fsck> L</guestfs_btrfs_set_seeding> L</"
"guestfs_btrfs_subvolume_create> L</guestfs_btrfs_subvolume_delete> L</"
"guestfs_btrfs_subvolume_list> L</guestfs_btrfs_subvolume_set_default> L</"
"guestfs_btrfs_subvolume_snapshot> L</guestfs_mkfs_btrfs>"
msgstr ""
"Такі функції: L</guestfs_btrfs_device_add> L</guestfs_btrfs_device_delete> "
"L</guestfs_btrfs_filesystem_balance> L</guestfs_btrfs_filesystem_resize> L</"
"guestfs_btrfs_filesystem_sync> L</guestfs_btrfs_fsck> L</"
"guestfs_btrfs_set_seeding> L</guestfs_btrfs_subvolume_create> L</"
"guestfs_btrfs_subvolume_delete> L</guestfs_btrfs_subvolume_list> L</"
"guestfs_btrfs_subvolume_set_default> L</guestfs_btrfs_subvolume_snapshot> L</"
"guestfs_mkfs_btrfs>"

#. type: =item
#: ../src/guestfs-availability.pod:62
msgid "B<extlinux>"
msgstr "B<extlinux>"

#. type: textblock
#: ../src/guestfs-availability.pod:64
msgid "The following functions: L</guestfs_extlinux>"
msgstr "Такі функції: L</guestfs_extlinux>"

#. type: =item
#: ../src/guestfs-availability.pod:67
msgid "B<fstrim>"
msgstr "B<fstrim>"

#. type: textblock
#: ../src/guestfs-availability.pod:69
msgid "The following functions: L</guestfs_fstrim>"
msgstr "Такі функції: L</guestfs_fstrim>"

#. type: =item
#: ../src/guestfs-availability.pod:72
msgid "B<gdisk>"
msgstr "B<gdisk>"

#. type: textblock
#: ../src/guestfs-availability.pod:74
msgid ""
"The following functions: L</guestfs_part_get_gpt_type> L</"
"guestfs_part_set_gpt_type>"
msgstr ""
"Такі функції: L</guestfs_part_get_gpt_type> L</guestfs_part_set_gpt_type>"

#. type: =item
#: ../src/guestfs-availability.pod:78
msgid "B<grub>"
msgstr "B<grub>"

#. type: textblock
#: ../src/guestfs-availability.pod:80
msgid "The following functions: L</guestfs_grub_install>"
msgstr "Такі функції: L</guestfs_grub_install>"

#. type: =item
#: ../src/guestfs-availability.pod:83
msgid "B<hivex>"
msgstr "B<hivex>"

#. type: textblock
#: ../src/guestfs-availability.pod:85
msgid ""
"The following functions: L</guestfs_hivex_close> L</guestfs_hivex_commit> L</"
"guestfs_hivex_node_add_child> L</guestfs_hivex_node_children> L</"
"guestfs_hivex_node_delete_child> L</guestfs_hivex_node_get_child> L</"
"guestfs_hivex_node_get_value> L</guestfs_hivex_node_name> L</"
"guestfs_hivex_node_parent> L</guestfs_hivex_node_set_value> L</"
"guestfs_hivex_node_values> L</guestfs_hivex_open> L</guestfs_hivex_root> L</"
"guestfs_hivex_value_key> L</guestfs_hivex_value_type> L</"
"guestfs_hivex_value_value>"
msgstr ""
"Такі функції: L</guestfs_hivex_close> L</guestfs_hivex_commit> L</"
"guestfs_hivex_node_add_child> L</guestfs_hivex_node_children> L</"
"guestfs_hivex_node_delete_child> L</guestfs_hivex_node_get_child> L</"
"guestfs_hivex_node_get_value> L</guestfs_hivex_node_name> L</"
"guestfs_hivex_node_parent> L</guestfs_hivex_node_set_value> L</"
"guestfs_hivex_node_values> L</guestfs_hivex_open> L</guestfs_hivex_root> L</"
"guestfs_hivex_value_key> L</guestfs_hivex_value_type> L</"
"guestfs_hivex_value_value>"

#. type: =item
#: ../src/guestfs-availability.pod:103
msgid "B<inotify>"
msgstr "B<inotify>"

#. type: textblock
#: ../src/guestfs-availability.pod:105
msgid ""
"The following functions: L</guestfs_inotify_add_watch> L</"
"guestfs_inotify_close> L</guestfs_inotify_files> L</guestfs_inotify_init> L</"
"guestfs_inotify_read> L</guestfs_inotify_rm_watch>"
msgstr ""
"Такі функції: L</guestfs_inotify_add_watch> L</guestfs_inotify_close> L</"
"guestfs_inotify_files> L</guestfs_inotify_init> L</guestfs_inotify_read> L</"
"guestfs_inotify_rm_watch>"

#. type: =item
#: ../src/guestfs-availability.pod:113
msgid "B<journal>"
msgstr "B<journal>"

#. type: textblock
#: ../src/guestfs-availability.pod:115
msgid ""
"The following functions: L</guestfs_internal_journal_get> L</"
"guestfs_journal_close> L</guestfs_journal_get_data_threshold> L</"
"guestfs_journal_get_realtime_usec> L</guestfs_journal_next> L</"
"guestfs_journal_open> L</guestfs_journal_set_data_threshold> L</"
"guestfs_journal_skip>"
msgstr ""
"Такі функції: L</guestfs_internal_journal_get> L</guestfs_journal_close> L</"
"guestfs_journal_get_data_threshold> L</guestfs_journal_get_realtime_usec> L</"
"guestfs_journal_next> L</guestfs_journal_open> L</"
"guestfs_journal_set_data_threshold> L</guestfs_journal_skip>"

#. type: =item
#: ../src/guestfs-availability.pod:125
msgid "B<ldm>"
msgstr "B<ldm>"

#. type: textblock
#: ../src/guestfs-availability.pod:127
msgid ""
"The following functions: L</guestfs_ldmtool_create_all> L</"
"guestfs_ldmtool_diskgroup_disks> L</guestfs_ldmtool_diskgroup_name> L</"
"guestfs_ldmtool_diskgroup_volumes> L</guestfs_ldmtool_remove_all> L</"
"guestfs_ldmtool_scan> L</guestfs_ldmtool_scan_devices> L</"
"guestfs_ldmtool_volume_hint> L</guestfs_ldmtool_volume_partitions> L</"
"guestfs_ldmtool_volume_type> L</guestfs_list_ldm_partitions> L</"
"guestfs_list_ldm_volumes>"
msgstr ""
"Такі функції: L</guestfs_ldmtool_create_all> L</"
"guestfs_ldmtool_diskgroup_disks> L</guestfs_ldmtool_diskgroup_name> L</"
"guestfs_ldmtool_diskgroup_volumes> L</guestfs_ldmtool_remove_all> L</"
"guestfs_ldmtool_scan> L</guestfs_ldmtool_scan_devices> L</"
"guestfs_ldmtool_volume_hint> L</guestfs_ldmtool_volume_partitions> L</"
"guestfs_ldmtool_volume_type> L</guestfs_list_ldm_partitions> L</"
"guestfs_list_ldm_volumes>"

#. type: =item
#: ../src/guestfs-availability.pod:141
msgid "B<linuxcaps>"
msgstr "B<linuxcaps>"

#. type: textblock
#: ../src/guestfs-availability.pod:143
msgid ""
"The following functions: L</guestfs_cap_get_file> L</guestfs_cap_set_file>"
msgstr "Такі функції: L</guestfs_cap_get_file> L</guestfs_cap_set_file>"

#. type: =item
#: ../src/guestfs-availability.pod:147
msgid "B<linuxfsuuid>"
msgstr "B<linuxfsuuid>"

#. type: textblock
#: ../src/guestfs-availability.pod:149
msgid ""
"The following functions: L</guestfs_mke2fs_JU> L</guestfs_mke2journal_U> L</"
"guestfs_mkswap_U> L</guestfs_swapoff_uuid> L</guestfs_swapon_uuid>"
msgstr ""
"Такі функції: L</guestfs_mke2fs_JU> L</guestfs_mke2journal_U> L</"
"guestfs_mkswap_U> L</guestfs_swapoff_uuid> L</guestfs_swapon_uuid>"

#. type: =item
#: ../src/guestfs-availability.pod:156
msgid "B<linuxmodules>"
msgstr "B<linuxmodules>"

#. type: textblock
#: ../src/guestfs-availability.pod:158
msgid "The following functions: L</guestfs_modprobe>"
msgstr "Такі функції: L</guestfs_modprobe>"

#. type: =item
#: ../src/guestfs-availability.pod:161
msgid "B<linuxxattrs>"
msgstr "B<linuxxattrs>"

#. type: textblock
#: ../src/guestfs-availability.pod:163
msgid ""
"The following functions: L</guestfs_getxattr> L</guestfs_getxattrs> L</"
"guestfs_internal_lxattrlist> L</guestfs_lgetxattr> L</guestfs_lgetxattrs> L</"
"guestfs_lremovexattr> L</guestfs_lsetxattr> L</guestfs_removexattr> L</"
"guestfs_setxattr>"
msgstr ""
"Такі функції: L</guestfs_getxattr> L</guestfs_getxattrs> L</"
"guestfs_internal_lxattrlist> L</guestfs_lgetxattr> L</guestfs_lgetxattrs> L</"
"guestfs_lremovexattr> L</guestfs_lsetxattr> L</guestfs_removexattr> L</"
"guestfs_setxattr>"

#. type: =item
#: ../src/guestfs-availability.pod:174
msgid "B<luks>"
msgstr "B<luks>"

#. type: textblock
#: ../src/guestfs-availability.pod:176
msgid ""
"The following functions: L</guestfs_luks_add_key> L</guestfs_luks_close> L</"
"guestfs_luks_format> L</guestfs_luks_format_cipher> L</"
"guestfs_luks_kill_slot> L</guestfs_luks_open> L</guestfs_luks_open_ro>"
msgstr ""
"Такі функції: L</guestfs_luks_add_key> L</guestfs_luks_close> L</"
"guestfs_luks_format> L</guestfs_luks_format_cipher> L</"
"guestfs_luks_kill_slot> L</guestfs_luks_open> L</guestfs_luks_open_ro>"

#. type: =item
#: ../src/guestfs-availability.pod:185
msgid "B<lvm2>"
msgstr "B<lvm2>"

#. type: textblock
#: ../src/guestfs-availability.pod:187
msgid ""
"The following functions: L</guestfs_lvcreate> L</guestfs_lvcreate_free> L</"
"guestfs_lvm_remove_all> L</guestfs_lvm_set_filter> L</guestfs_lvremove> L</"
"guestfs_lvresize> L</guestfs_lvresize_free> L</guestfs_lvs> L</"
"guestfs_lvs_full> L</guestfs_pvchange_uuid> L</guestfs_pvchange_uuid_all> L</"
"guestfs_pvcreate> L</guestfs_pvremove> L</guestfs_pvresize> L</"
"guestfs_pvresize_size> L</guestfs_pvs> L</guestfs_pvs_full> L</"
"guestfs_vg_activate> L</guestfs_vg_activate_all> L</guestfs_vgchange_uuid> "
"L</guestfs_vgchange_uuid_all> L</guestfs_vgcreate> L</guestfs_vgmeta> L</"
"guestfs_vgremove> L</guestfs_vgs> L</guestfs_vgs_full>"
msgstr ""
"Такі функції: L</guestfs_lvcreate> L</guestfs_lvcreate_free> L</"
"guestfs_lvm_remove_all> L</guestfs_lvm_set_filter> L</guestfs_lvremove> L</"
"guestfs_lvresize> L</guestfs_lvresize_free> L</guestfs_lvs> L</"
"guestfs_lvs_full> L</guestfs_pvchange_uuid> L</guestfs_pvchange_uuid_all> L</"
"guestfs_pvcreate> L</guestfs_pvremove> L</guestfs_pvresize> L</"
"guestfs_pvresize_size> L</guestfs_pvs> L</guestfs_pvs_full> L</"
"guestfs_vg_activate> L</guestfs_vg_activate_all> L</guestfs_vgchange_uuid> "
"L</guestfs_vgchange_uuid_all> L</guestfs_vgcreate> L</guestfs_vgmeta> L</"
"guestfs_vgremove> L</guestfs_vgs> L</guestfs_vgs_full>"

#. type: =item
#: ../src/guestfs-availability.pod:215
msgid "B<mdadm>"
msgstr "B<mdadm>"

#. type: textblock
#: ../src/guestfs-availability.pod:217
msgid ""
"The following functions: L</guestfs_md_create> L</guestfs_md_detail> L</"
"guestfs_md_stat> L</guestfs_md_stop>"
msgstr ""
"Такі функції: L</guestfs_md_create> L</guestfs_md_detail> L</"
"guestfs_md_stat> L</guestfs_md_stop>"

#. type: =item
#: ../src/guestfs-availability.pod:223
msgid "B<mknod>"
msgstr "B<mknod>"

#. type: textblock
#: ../src/guestfs-availability.pod:225
msgid ""
"The following functions: L</guestfs_mkfifo> L</guestfs_mknod> L</"
"guestfs_mknod_b> L</guestfs_mknod_c>"
msgstr ""
"Такі функції: L</guestfs_mkfifo> L</guestfs_mknod> L</guestfs_mknod_b> L</"
"guestfs_mknod_c>"

#. type: =item
#: ../src/guestfs-availability.pod:231
msgid "B<ntfs3g>"
msgstr "B<ntfs3g>"

#. type: textblock
#: ../src/guestfs-availability.pod:233
msgid ""
"The following functions: L</guestfs_ntfs_3g_probe> L</guestfs_ntfsclone_in> "
"L</guestfs_ntfsclone_out> L</guestfs_ntfsfix>"
msgstr ""
"Такі функції: L</guestfs_ntfs_3g_probe> L</guestfs_ntfsclone_in> L</"
"guestfs_ntfsclone_out> L</guestfs_ntfsfix>"

#. type: =item
#: ../src/guestfs-availability.pod:239
msgid "B<ntfsprogs>"
msgstr "B<ntfsprogs>"

#. type: textblock
#: ../src/guestfs-availability.pod:241
msgid ""
"The following functions: L</guestfs_ntfsresize> L</guestfs_ntfsresize_size>"
msgstr "Такі функції: L</guestfs_ntfsresize> L</guestfs_ntfsresize_size>"

#. type: =item
#: ../src/guestfs-availability.pod:245
msgid "B<rsync>"
msgstr "B<rsync>"

#. type: textblock
#: ../src/guestfs-availability.pod:247
msgid ""
"The following functions: L</guestfs_rsync> L</guestfs_rsync_in> L</"
"guestfs_rsync_out>"
msgstr ""
"Такі функції: L</guestfs_rsync> L</guestfs_rsync_in> L</guestfs_rsync_out>"

#. type: =item
#: ../src/guestfs-availability.pod:252
msgid "B<scrub>"
msgstr "B<scrub>"

#. type: textblock
#: ../src/guestfs-availability.pod:254
msgid ""
"The following functions: L</guestfs_scrub_device> L</guestfs_scrub_file> L</"
"guestfs_scrub_freespace>"
msgstr ""
"Такі функції: L</guestfs_scrub_device> L</guestfs_scrub_file> L</"
"guestfs_scrub_freespace>"

#. type: =item
#: ../src/guestfs-availability.pod:259
msgid "B<selinux>"
msgstr "B<selinux>"

#. type: textblock
#: ../src/guestfs-availability.pod:261
msgid "The following functions: L</guestfs_getcon> L</guestfs_setcon>"
msgstr "Такі функції: L</guestfs_getcon> L</guestfs_setcon>"

#. type: =item
#: ../src/guestfs-availability.pod:265
msgid "B<syslinux>"
msgstr "B<syslinux>"

#. type: textblock
#: ../src/guestfs-availability.pod:267
msgid "The following functions: L</guestfs_syslinux>"
msgstr "Такі функції: L</guestfs_syslinux>"

#. type: =item
#: ../src/guestfs-availability.pod:270
msgid "B<wipefs>"
msgstr "B<wipefs>"

#. type: textblock
#: ../src/guestfs-availability.pod:272
msgid "The following functions: L</guestfs_wipefs>"
msgstr "Такі функції: L</guestfs_wipefs>"

#. type: =item
#: ../src/guestfs-availability.pod:275
msgid "B<xfs>"
msgstr "B<xfs>"

#. type: textblock
#: ../src/guestfs-availability.pod:277
msgid ""
"The following functions: L</guestfs_xfs_admin> L</guestfs_xfs_growfs> L</"
"guestfs_xfs_info> L</guestfs_xfs_repair>"
msgstr ""
"Такі функції: L</guestfs_xfs_admin> L</guestfs_xfs_growfs> L</"
"guestfs_xfs_info> L</guestfs_xfs_repair>"

#. type: =item
#: ../src/guestfs-availability.pod:283
msgid "B<xz>"
msgstr "B<xz>"

#. type: textblock
#: ../src/guestfs-availability.pod:285
msgid "The following functions: L</guestfs_txz_in> L</guestfs_txz_out>"
msgstr "Такі функції: L</guestfs_txz_in> L</guestfs_txz_out>"

#. type: =item
#: ../src/guestfs-availability.pod:289
msgid "B<zerofree>"
msgstr "B<zerofree>"

#. type: textblock
#: ../src/guestfs-availability.pod:291
msgid "The following functions: L</guestfs_zerofree>"
msgstr "Такі функції: L</guestfs_zerofree>"

#. type: =head2
#: ../src/guestfs-structs.pod:26
msgid "guestfs_int_bool"
msgstr "guestfs_int_bool"

#. type: verbatim
#: ../src/guestfs-structs.pod:28
#, no-wrap
msgid ""
" struct guestfs_int_bool {\n"
"   int32_t i;\n"
"   int32_t b;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_int_bool {\n"
"   int32_t i;\n"
"   int32_t b;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:33
#, no-wrap
msgid ""
" struct guestfs_int_bool_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_int_bool *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_int_bool_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_int_bool *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:38
#, no-wrap
msgid ""
" int guestfs_compare_int_bool (const struct guestfs_int_bool *, const struct guestfs_int_bool *);\n"
" int guestfs_compare_int_bool_list (const struct guestfs_int_bool_list *, const struct guestfs_int_bool_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_int_bool (const struct guestfs_int_bool *, const struct guestfs_int_bool *);\n"
" int guestfs_compare_int_bool_list (const struct guestfs_int_bool_list *, const struct guestfs_int_bool_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:41
#, no-wrap
msgid ""
" struct guestfs_int_bool *guestfs_copy_int_bool (const struct guestfs_int_bool *);\n"
" struct guestfs_int_bool_list *guestfs_copy_int_bool_list (const struct guestfs_int_bool_list *);\n"
" \n"
msgstr ""
" struct guestfs_int_bool *guestfs_copy_int_bool (const struct guestfs_int_bool *);\n"
" struct guestfs_int_bool_list *guestfs_copy_int_bool_list (const struct guestfs_int_bool_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:44
#, no-wrap
msgid ""
" void guestfs_free_int_bool (struct guestfs_int_bool *);\n"
" void guestfs_free_int_bool_list (struct guestfs_int_bool_list *);\n"
"\n"
msgstr ""
" void guestfs_free_int_bool (struct guestfs_int_bool *);\n"
" void guestfs_free_int_bool_list (struct guestfs_int_bool_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:47
msgid "guestfs_lvm_pv"
msgstr "guestfs_lvm_pv"

#. type: verbatim
#: ../src/guestfs-structs.pod:49
#, no-wrap
msgid ""
" struct guestfs_lvm_pv {\n"
"   char *pv_name;\n"
"   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
"   char pv_uuid[32];\n"
"   char *pv_fmt;\n"
"   uint64_t pv_size;\n"
"   uint64_t dev_size;\n"
"   uint64_t pv_free;\n"
"   uint64_t pv_used;\n"
"   char *pv_attr;\n"
"   int64_t pv_pe_count;\n"
"   int64_t pv_pe_alloc_count;\n"
"   char *pv_tags;\n"
"   uint64_t pe_start;\n"
"   int64_t pv_mda_count;\n"
"   uint64_t pv_mda_free;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_lvm_pv {\n"
"   char *pv_name;\n"
"   /* Наступне поле не завершується нульовим байтом, будьте обережні під час виведення цього поля: */\n"
"   char pv_uuid[32];\n"
"   char *pv_fmt;\n"
"   uint64_t pv_size;\n"
"   uint64_t dev_size;\n"
"   uint64_t pv_free;\n"
"   uint64_t pv_used;\n"
"   char *pv_attr;\n"
"   int64_t pv_pe_count;\n"
"   int64_t pv_pe_alloc_count;\n"
"   char *pv_tags;\n"
"   uint64_t pe_start;\n"
"   int64_t pv_mda_count;\n"
"   uint64_t pv_mda_free;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:67
#, no-wrap
msgid ""
" struct guestfs_lvm_pv_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_lvm_pv *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_lvm_pv_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_lvm_pv *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:72
#, no-wrap
msgid ""
" int guestfs_compare_lvm_pv (const struct guestfs_lvm_pv *, const struct guestfs_lvm_pv *);\n"
" int guestfs_compare_lvm_pv_list (const struct guestfs_lvm_pv_list *, const struct guestfs_lvm_pv_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_lvm_pv (const struct guestfs_lvm_pv *, const struct guestfs_lvm_pv *);\n"
" int guestfs_compare_lvm_pv_list (const struct guestfs_lvm_pv_list *, const struct guestfs_lvm_pv_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:75
#, no-wrap
msgid ""
" struct guestfs_lvm_pv *guestfs_copy_lvm_pv (const struct guestfs_lvm_pv *);\n"
" struct guestfs_lvm_pv_list *guestfs_copy_lvm_pv_list (const struct guestfs_lvm_pv_list *);\n"
" \n"
msgstr ""
" struct guestfs_lvm_pv *guestfs_copy_lvm_pv (const struct guestfs_lvm_pv *);\n"
" struct guestfs_lvm_pv_list *guestfs_copy_lvm_pv_list (const struct guestfs_lvm_pv_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:78
#, no-wrap
msgid ""
" void guestfs_free_lvm_pv (struct guestfs_lvm_pv *);\n"
" void guestfs_free_lvm_pv_list (struct guestfs_lvm_pv_list *);\n"
"\n"
msgstr ""
" void guestfs_free_lvm_pv (struct guestfs_lvm_pv *);\n"
" void guestfs_free_lvm_pv_list (struct guestfs_lvm_pv_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:81
msgid "guestfs_lvm_vg"
msgstr "guestfs_lvm_vg"

#. type: verbatim
#: ../src/guestfs-structs.pod:83
#, no-wrap
msgid ""
" struct guestfs_lvm_vg {\n"
"   char *vg_name;\n"
"   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
"   char vg_uuid[32];\n"
"   char *vg_fmt;\n"
"   char *vg_attr;\n"
"   uint64_t vg_size;\n"
"   uint64_t vg_free;\n"
"   char *vg_sysid;\n"
"   uint64_t vg_extent_size;\n"
"   int64_t vg_extent_count;\n"
"   int64_t vg_free_count;\n"
"   int64_t max_lv;\n"
"   int64_t max_pv;\n"
"   int64_t pv_count;\n"
"   int64_t lv_count;\n"
"   int64_t snap_count;\n"
"   int64_t vg_seqno;\n"
"   char *vg_tags;\n"
"   int64_t vg_mda_count;\n"
"   uint64_t vg_mda_free;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_lvm_vg {\n"
"   char *vg_name;\n"
"   /* Текстове поле НЕ завершується нульовим байтом: будьте обережні з його виведенням: */\n"
"   char vg_uuid[32];\n"
"   char *vg_fmt;\n"
"   char *vg_attr;\n"
"   uint64_t vg_size;\n"
"   uint64_t vg_free;\n"
"   char *vg_sysid;\n"
"   uint64_t vg_extent_size;\n"
"   int64_t vg_extent_count;\n"
"   int64_t vg_free_count;\n"
"   int64_t max_lv;\n"
"   int64_t max_pv;\n"
"   int64_t pv_count;\n"
"   int64_t lv_count;\n"
"   int64_t snap_count;\n"
"   int64_t vg_seqno;\n"
"   char *vg_tags;\n"
"   int64_t vg_mda_count;\n"
"   uint64_t vg_mda_free;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:106
#, no-wrap
msgid ""
" struct guestfs_lvm_vg_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_lvm_vg *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_lvm_vg_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_lvm_vg *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:111
#, no-wrap
msgid ""
" int guestfs_compare_lvm_vg (const struct guestfs_lvm_vg *, const struct guestfs_lvm_vg *);\n"
" int guestfs_compare_lvm_vg_list (const struct guestfs_lvm_vg_list *, const struct guestfs_lvm_vg_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_lvm_vg (const struct guestfs_lvm_vg *, const struct guestfs_lvm_vg *);\n"
" int guestfs_compare_lvm_vg_list (const struct guestfs_lvm_vg_list *, const struct guestfs_lvm_vg_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:114
#, no-wrap
msgid ""
" struct guestfs_lvm_vg *guestfs_copy_lvm_vg (const struct guestfs_lvm_vg *);\n"
" struct guestfs_lvm_vg_list *guestfs_copy_lvm_vg_list (const struct guestfs_lvm_vg_list *);\n"
" \n"
msgstr ""
" struct guestfs_lvm_vg *guestfs_copy_lvm_vg (const struct guestfs_lvm_vg *);\n"
" struct guestfs_lvm_vg_list *guestfs_copy_lvm_vg_list (const struct guestfs_lvm_vg_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:117
#, no-wrap
msgid ""
" void guestfs_free_lvm_vg (struct guestfs_lvm_vg *);\n"
" void guestfs_free_lvm_vg_list (struct guestfs_lvm_vg_list *);\n"
"\n"
msgstr ""
" void guestfs_free_lvm_vg (struct guestfs_lvm_vg *);\n"
" void guestfs_free_lvm_vg_list (struct guestfs_lvm_vg_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:120
msgid "guestfs_lvm_lv"
msgstr "guestfs_lvm_lv"

#. type: verbatim
#: ../src/guestfs-structs.pod:122
#, no-wrap
msgid ""
" struct guestfs_lvm_lv {\n"
"   char *lv_name;\n"
"   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
"   char lv_uuid[32];\n"
"   char *lv_attr;\n"
"   int64_t lv_major;\n"
"   int64_t lv_minor;\n"
"   int64_t lv_kernel_major;\n"
"   int64_t lv_kernel_minor;\n"
"   uint64_t lv_size;\n"
"   int64_t seg_count;\n"
"   char *origin;\n"
"   /* The next field is [0..100] or -1 meaning 'not present': */\n"
"   float snap_percent;\n"
"   /* The next field is [0..100] or -1 meaning 'not present': */\n"
"   float copy_percent;\n"
"   char *move_pv;\n"
"   char *lv_tags;\n"
"   char *mirror_log;\n"
"   char *modules;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:144
#, no-wrap
msgid ""
" struct guestfs_lvm_lv_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_lvm_lv *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_lvm_lv_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_lvm_lv *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:149
#, no-wrap
msgid ""
" int guestfs_compare_lvm_lv (const struct guestfs_lvm_lv *, const struct guestfs_lvm_lv *);\n"
" int guestfs_compare_lvm_lv_list (const struct guestfs_lvm_lv_list *, const struct guestfs_lvm_lv_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_lvm_lv (const struct guestfs_lvm_lv *, const struct guestfs_lvm_lv *);\n"
" int guestfs_compare_lvm_lv_list (const struct guestfs_lvm_lv_list *, const struct guestfs_lvm_lv_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:152
#, no-wrap
msgid ""
" struct guestfs_lvm_lv *guestfs_copy_lvm_lv (const struct guestfs_lvm_lv *);\n"
" struct guestfs_lvm_lv_list *guestfs_copy_lvm_lv_list (const struct guestfs_lvm_lv_list *);\n"
" \n"
msgstr ""
" struct guestfs_lvm_lv *guestfs_copy_lvm_lv (const struct guestfs_lvm_lv *);\n"
" struct guestfs_lvm_lv_list *guestfs_copy_lvm_lv_list (const struct guestfs_lvm_lv_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:155
#, no-wrap
msgid ""
" void guestfs_free_lvm_lv (struct guestfs_lvm_lv *);\n"
" void guestfs_free_lvm_lv_list (struct guestfs_lvm_lv_list *);\n"
"\n"
msgstr ""
" void guestfs_free_lvm_lv (struct guestfs_lvm_lv *);\n"
" void guestfs_free_lvm_lv_list (struct guestfs_lvm_lv_list *);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:160
#, no-wrap
msgid ""
" struct guestfs_stat {\n"
"   int64_t dev;\n"
"   int64_t ino;\n"
"   int64_t mode;\n"
"   int64_t nlink;\n"
"   int64_t uid;\n"
"   int64_t gid;\n"
"   int64_t rdev;\n"
"   int64_t size;\n"
"   int64_t blksize;\n"
"   int64_t blocks;\n"
"   int64_t atime;\n"
"   int64_t mtime;\n"
"   int64_t ctime;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_stat {\n"
"   int64_t dev;\n"
"   int64_t ino;\n"
"   int64_t mode;\n"
"   int64_t nlink;\n"
"   int64_t uid;\n"
"   int64_t gid;\n"
"   int64_t rdev;\n"
"   int64_t size;\n"
"   int64_t blksize;\n"
"   int64_t blocks;\n"
"   int64_t atime;\n"
"   int64_t mtime;\n"
"   int64_t ctime;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:176
#, no-wrap
msgid ""
" struct guestfs_stat_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_stat *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_stat_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_stat *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:181
#, no-wrap
msgid ""
" int guestfs_compare_stat (const struct guestfs_stat *, const struct guestfs_stat *);\n"
" int guestfs_compare_stat_list (const struct guestfs_stat_list *, const struct guestfs_stat_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_stat (const struct guestfs_stat *, const struct guestfs_stat *);\n"
" int guestfs_compare_stat_list (const struct guestfs_stat_list *, const struct guestfs_stat_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:184
#, no-wrap
msgid ""
" struct guestfs_stat *guestfs_copy_stat (const struct guestfs_stat *);\n"
" struct guestfs_stat_list *guestfs_copy_stat_list (const struct guestfs_stat_list *);\n"
" \n"
msgstr ""
" struct guestfs_stat *guestfs_copy_stat (const struct guestfs_stat *);\n"
" struct guestfs_stat_list *guestfs_copy_stat_list (const struct guestfs_stat_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:187
#, no-wrap
msgid ""
" void guestfs_free_stat (struct guestfs_stat *);\n"
" void guestfs_free_stat_list (struct guestfs_stat_list *);\n"
"\n"
msgstr ""
" void guestfs_free_stat (struct guestfs_stat *);\n"
" void guestfs_free_stat_list (struct guestfs_stat_list *);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:192
#, no-wrap
msgid ""
" struct guestfs_statns {\n"
"   int64_t st_dev;\n"
"   int64_t st_ino;\n"
"   int64_t st_mode;\n"
"   int64_t st_nlink;\n"
"   int64_t st_uid;\n"
"   int64_t st_gid;\n"
"   int64_t st_rdev;\n"
"   int64_t st_size;\n"
"   int64_t st_blksize;\n"
"   int64_t st_blocks;\n"
"   int64_t st_atime_sec;\n"
"   int64_t st_atime_nsec;\n"
"   int64_t st_mtime_sec;\n"
"   int64_t st_mtime_nsec;\n"
"   int64_t st_ctime_sec;\n"
"   int64_t st_ctime_nsec;\n"
"   int64_t st_spare1;\n"
"   int64_t st_spare2;\n"
"   int64_t st_spare3;\n"
"   int64_t st_spare4;\n"
"   int64_t st_spare5;\n"
"   int64_t st_spare6;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:217
#, no-wrap
msgid ""
" struct guestfs_statns_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_statns *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:222
#, no-wrap
msgid ""
" int guestfs_compare_statns (const struct guestfs_statns *, const struct guestfs_statns *);\n"
" int guestfs_compare_statns_list (const struct guestfs_statns_list *, const struct guestfs_statns_list *);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:225
#, no-wrap
msgid ""
" struct guestfs_statns *guestfs_copy_statns (const struct guestfs_statns *);\n"
" struct guestfs_statns_list *guestfs_copy_statns_list (const struct guestfs_statns_list *);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:228
#, no-wrap
msgid ""
" void guestfs_free_statns (struct guestfs_statns *);\n"
" void guestfs_free_statns_list (struct guestfs_statns_list *);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:233
#, no-wrap
msgid ""
" struct guestfs_statvfs {\n"
"   int64_t bsize;\n"
"   int64_t frsize;\n"
"   int64_t blocks;\n"
"   int64_t bfree;\n"
"   int64_t bavail;\n"
"   int64_t files;\n"
"   int64_t ffree;\n"
"   int64_t favail;\n"
"   int64_t fsid;\n"
"   int64_t flag;\n"
"   int64_t namemax;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_statvfs {\n"
"   int64_t bsize;\n"
"   int64_t frsize;\n"
"   int64_t blocks;\n"
"   int64_t bfree;\n"
"   int64_t bavail;\n"
"   int64_t files;\n"
"   int64_t ffree;\n"
"   int64_t favail;\n"
"   int64_t fsid;\n"
"   int64_t flag;\n"
"   int64_t namemax;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:247
#, no-wrap
msgid ""
" struct guestfs_statvfs_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_statvfs *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_statvfs_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_statvfs *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:252
#, no-wrap
msgid ""
" int guestfs_compare_statvfs (const struct guestfs_statvfs *, const struct guestfs_statvfs *);\n"
" int guestfs_compare_statvfs_list (const struct guestfs_statvfs_list *, const struct guestfs_statvfs_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_statvfs (const struct guestfs_statvfs *, const struct guestfs_statvfs *);\n"
" int guestfs_compare_statvfs_list (const struct guestfs_statvfs_list *, const struct guestfs_statvfs_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:255
#, no-wrap
msgid ""
" struct guestfs_statvfs *guestfs_copy_statvfs (const struct guestfs_statvfs *);\n"
" struct guestfs_statvfs_list *guestfs_copy_statvfs_list (const struct guestfs_statvfs_list *);\n"
" \n"
msgstr ""
" struct guestfs_statvfs *guestfs_copy_statvfs (const struct guestfs_statvfs *);\n"
" struct guestfs_statvfs_list *guestfs_copy_statvfs_list (const struct guestfs_statvfs_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:258
#, no-wrap
msgid ""
" void guestfs_free_statvfs (struct guestfs_statvfs *);\n"
" void guestfs_free_statvfs_list (struct guestfs_statvfs_list *);\n"
"\n"
msgstr ""
" void guestfs_free_statvfs (struct guestfs_statvfs *);\n"
" void guestfs_free_statvfs_list (struct guestfs_statvfs_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:261
msgid "guestfs_dirent"
msgstr "guestfs_dirent"

#. type: verbatim
#: ../src/guestfs-structs.pod:263
#, no-wrap
msgid ""
" struct guestfs_dirent {\n"
"   int64_t ino;\n"
"   char ftyp;\n"
"   char *name;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_dirent {\n"
"   int64_t ino;\n"
"   char ftyp;\n"
"   char *name;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:269
#, no-wrap
msgid ""
" struct guestfs_dirent_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_dirent *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_dirent_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_dirent *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:274
#, no-wrap
msgid ""
" int guestfs_compare_dirent (const struct guestfs_dirent *, const struct guestfs_dirent *);\n"
" int guestfs_compare_dirent_list (const struct guestfs_dirent_list *, const struct guestfs_dirent_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_dirent (const struct guestfs_dirent *, const struct guestfs_dirent *);\n"
" int guestfs_compare_dirent_list (const struct guestfs_dirent_list *, const struct guestfs_dirent_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:277
#, no-wrap
msgid ""
" struct guestfs_dirent *guestfs_copy_dirent (const struct guestfs_dirent *);\n"
" struct guestfs_dirent_list *guestfs_copy_dirent_list (const struct guestfs_dirent_list *);\n"
" \n"
msgstr ""
" struct guestfs_dirent *guestfs_copy_dirent (const struct guestfs_dirent *);\n"
" struct guestfs_dirent_list *guestfs_copy_dirent_list (const struct guestfs_dirent_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:280
#, no-wrap
msgid ""
" void guestfs_free_dirent (struct guestfs_dirent *);\n"
" void guestfs_free_dirent_list (struct guestfs_dirent_list *);\n"
"\n"
msgstr ""
" void guestfs_free_dirent (struct guestfs_dirent *);\n"
" void guestfs_free_dirent_list (struct guestfs_dirent_list *);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:285
#, no-wrap
msgid ""
" struct guestfs_version {\n"
"   int64_t major;\n"
"   int64_t minor;\n"
"   int64_t release;\n"
"   char *extra;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_version {\n"
"   int64_t major;\n"
"   int64_t minor;\n"
"   int64_t release;\n"
"   char *extra;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:292
#, no-wrap
msgid ""
" struct guestfs_version_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_version *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_version_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_version *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:297
#, no-wrap
msgid ""
" int guestfs_compare_version (const struct guestfs_version *, const struct guestfs_version *);\n"
" int guestfs_compare_version_list (const struct guestfs_version_list *, const struct guestfs_version_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_version (const struct guestfs_version *, const struct guestfs_version *);\n"
" int guestfs_compare_version_list (const struct guestfs_version_list *, const struct guestfs_version_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:300
#, no-wrap
msgid ""
" struct guestfs_version *guestfs_copy_version (const struct guestfs_version *);\n"
" struct guestfs_version_list *guestfs_copy_version_list (const struct guestfs_version_list *);\n"
" \n"
msgstr ""
" struct guestfs_version *guestfs_copy_version (const struct guestfs_version *);\n"
" struct guestfs_version_list *guestfs_copy_version_list (const struct guestfs_version_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:303
#, no-wrap
msgid ""
" void guestfs_free_version (struct guestfs_version *);\n"
" void guestfs_free_version_list (struct guestfs_version_list *);\n"
"\n"
msgstr ""
" void guestfs_free_version (struct guestfs_version *);\n"
" void guestfs_free_version_list (struct guestfs_version_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:306
msgid "guestfs_xattr"
msgstr "guestfs_xattr"

#. type: verbatim
#: ../src/guestfs-structs.pod:308
#, no-wrap
msgid ""
" struct guestfs_xattr {\n"
"   char *attrname;\n"
"   /* The next two fields describe a byte array. */\n"
"   uint32_t attrval_len;\n"
"   char *attrval;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_xattr {\n"
"   char *attrname;\n"
"   /* Наступні два поля описують масив байтів. */\n"
"   uint32_t attrval_len;\n"
"   char *attrval;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:315
#, no-wrap
msgid ""
" struct guestfs_xattr_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_xattr *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_xattr_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_xattr *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:320
#, no-wrap
msgid ""
" int guestfs_compare_xattr (const struct guestfs_xattr *, const struct guestfs_xattr *);\n"
" int guestfs_compare_xattr_list (const struct guestfs_xattr_list *, const struct guestfs_xattr_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_xattr (const struct guestfs_xattr *, const struct guestfs_xattr *);\n"
" int guestfs_compare_xattr_list (const struct guestfs_xattr_list *, const struct guestfs_xattr_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:323
#, no-wrap
msgid ""
" struct guestfs_xattr *guestfs_copy_xattr (const struct guestfs_xattr *);\n"
" struct guestfs_xattr_list *guestfs_copy_xattr_list (const struct guestfs_xattr_list *);\n"
" \n"
msgstr ""
" struct guestfs_xattr *guestfs_copy_xattr (const struct guestfs_xattr *);\n"
" struct guestfs_xattr_list *guestfs_copy_xattr_list (const struct guestfs_xattr_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:326
#, no-wrap
msgid ""
" void guestfs_free_xattr (struct guestfs_xattr *);\n"
" void guestfs_free_xattr_list (struct guestfs_xattr_list *);\n"
"\n"
msgstr ""
" void guestfs_free_xattr (struct guestfs_xattr *);\n"
" void guestfs_free_xattr_list (struct guestfs_xattr_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:329
msgid "guestfs_inotify_event"
msgstr "guestfs_inotify_event"

#. type: verbatim
#: ../src/guestfs-structs.pod:331
#, no-wrap
msgid ""
" struct guestfs_inotify_event {\n"
"   int64_t in_wd;\n"
"   uint32_t in_mask;\n"
"   uint32_t in_cookie;\n"
"   char *in_name;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_inotify_event {\n"
"   int64_t in_wd;\n"
"   uint32_t in_mask;\n"
"   uint32_t in_cookie;\n"
"   char *in_name;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:338
#, no-wrap
msgid ""
" struct guestfs_inotify_event_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_inotify_event *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_inotify_event_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_inotify_event *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:343
#, no-wrap
msgid ""
" int guestfs_compare_inotify_event (const struct guestfs_inotify_event *, const struct guestfs_inotify_event *);\n"
" int guestfs_compare_inotify_event_list (const struct guestfs_inotify_event_list *, const struct guestfs_inotify_event_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_inotify_event (const struct guestfs_inotify_event *, const struct guestfs_inotify_event *);\n"
" int guestfs_compare_inotify_event_list (const struct guestfs_inotify_event_list *, const struct guestfs_inotify_event_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:346
#, no-wrap
msgid ""
" struct guestfs_inotify_event *guestfs_copy_inotify_event (const struct guestfs_inotify_event *);\n"
" struct guestfs_inotify_event_list *guestfs_copy_inotify_event_list (const struct guestfs_inotify_event_list *);\n"
" \n"
msgstr ""
" struct guestfs_inotify_event *guestfs_copy_inotify_event (const struct guestfs_inotify_event *);\n"
" struct guestfs_inotify_event_list *guestfs_copy_inotify_event_list (const struct guestfs_inotify_event_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:349
#, no-wrap
msgid ""
" void guestfs_free_inotify_event (struct guestfs_inotify_event *);\n"
" void guestfs_free_inotify_event_list (struct guestfs_inotify_event_list *);\n"
"\n"
msgstr ""
" void guestfs_free_inotify_event (struct guestfs_inotify_event *);\n"
" void guestfs_free_inotify_event_list (struct guestfs_inotify_event_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:352
msgid "guestfs_partition"
msgstr "guestfs_partition"

#. type: verbatim
#: ../src/guestfs-structs.pod:354
#, no-wrap
msgid ""
" struct guestfs_partition {\n"
"   int32_t part_num;\n"
"   uint64_t part_start;\n"
"   uint64_t part_end;\n"
"   uint64_t part_size;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_partition {\n"
"   int32_t part_num;\n"
"   uint64_t part_start;\n"
"   uint64_t part_end;\n"
"   uint64_t part_size;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:361
#, no-wrap
msgid ""
" struct guestfs_partition_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_partition *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_partition_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_partition *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:366
#, no-wrap
msgid ""
" int guestfs_compare_partition (const struct guestfs_partition *, const struct guestfs_partition *);\n"
" int guestfs_compare_partition_list (const struct guestfs_partition_list *, const struct guestfs_partition_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_partition (const struct guestfs_partition *, const struct guestfs_partition *);\n"
" int guestfs_compare_partition_list (const struct guestfs_partition_list *, const struct guestfs_partition_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:369
#, no-wrap
msgid ""
" struct guestfs_partition *guestfs_copy_partition (const struct guestfs_partition *);\n"
" struct guestfs_partition_list *guestfs_copy_partition_list (const struct guestfs_partition_list *);\n"
" \n"
msgstr ""
" struct guestfs_partition *guestfs_copy_partition (const struct guestfs_partition *);\n"
" struct guestfs_partition_list *guestfs_copy_partition_list (const struct guestfs_partition_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:372
#, no-wrap
msgid ""
" void guestfs_free_partition (struct guestfs_partition *);\n"
" void guestfs_free_partition_list (struct guestfs_partition_list *);\n"
"\n"
msgstr ""
" void guestfs_free_partition (struct guestfs_partition *);\n"
" void guestfs_free_partition_list (struct guestfs_partition_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:375
msgid "guestfs_application"
msgstr "guestfs_application"

#. type: verbatim
#: ../src/guestfs-structs.pod:377
#, no-wrap
msgid ""
" struct guestfs_application {\n"
"   char *app_name;\n"
"   char *app_display_name;\n"
"   int32_t app_epoch;\n"
"   char *app_version;\n"
"   char *app_release;\n"
"   char *app_install_path;\n"
"   char *app_trans_path;\n"
"   char *app_publisher;\n"
"   char *app_url;\n"
"   char *app_source_package;\n"
"   char *app_summary;\n"
"   char *app_description;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_application {\n"
"   char *app_name;\n"
"   char *app_display_name;\n"
"   int32_t app_epoch;\n"
"   char *app_version;\n"
"   char *app_release;\n"
"   char *app_install_path;\n"
"   char *app_trans_path;\n"
"   char *app_publisher;\n"
"   char *app_url;\n"
"   char *app_source_package;\n"
"   char *app_summary;\n"
"   char *app_description;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:392
#, no-wrap
msgid ""
" struct guestfs_application_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_application *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_application_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_application *val; /* Елементи. */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:397
#, no-wrap
msgid ""
" int guestfs_compare_application (const struct guestfs_application *, const struct guestfs_application *);\n"
" int guestfs_compare_application_list (const struct guestfs_application_list *, const struct guestfs_application_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_application (const struct guestfs_application *, const struct guestfs_application *);\n"
" int guestfs_compare_application_list (const struct guestfs_application_list *, const struct guestfs_application_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:400
#, no-wrap
msgid ""
" struct guestfs_application *guestfs_copy_application (const struct guestfs_application *);\n"
" struct guestfs_application_list *guestfs_copy_application_list (const struct guestfs_application_list *);\n"
" \n"
msgstr ""
" struct guestfs_application *guestfs_copy_application (const struct guestfs_application *);\n"
" struct guestfs_application_list *guestfs_copy_application_list (const struct guestfs_application_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:403
#, no-wrap
msgid ""
" void guestfs_free_application (struct guestfs_application *);\n"
" void guestfs_free_application_list (struct guestfs_application_list *);\n"
"\n"
msgstr ""
" void guestfs_free_application (struct guestfs_application *);\n"
" void guestfs_free_application_list (struct guestfs_application_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:406
msgid "guestfs_application2"
msgstr "guestfs_application2"

#. type: verbatim
#: ../src/guestfs-structs.pod:408
#, no-wrap
msgid ""
" struct guestfs_application2 {\n"
"   char *app2_name;\n"
"   char *app2_display_name;\n"
"   int32_t app2_epoch;\n"
"   char *app2_version;\n"
"   char *app2_release;\n"
"   char *app2_arch;\n"
"   char *app2_install_path;\n"
"   char *app2_trans_path;\n"
"   char *app2_publisher;\n"
"   char *app2_url;\n"
"   char *app2_source_package;\n"
"   char *app2_summary;\n"
"   char *app2_description;\n"
"   char *app2_spare1;\n"
"   char *app2_spare2;\n"
"   char *app2_spare3;\n"
"   char *app2_spare4;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_application2 {\n"
"   char *app2_name;\n"
"   char *app2_display_name;\n"
"   int32_t app2_epoch;\n"
"   char *app2_version;\n"
"   char *app2_release;\n"
"   char *app2_arch;\n"
"   char *app2_install_path;\n"
"   char *app2_trans_path;\n"
"   char *app2_publisher;\n"
"   char *app2_url;\n"
"   char *app2_source_package;\n"
"   char *app2_summary;\n"
"   char *app2_description;\n"
"   char *app2_spare1;\n"
"   char *app2_spare2;\n"
"   char *app2_spare3;\n"
"   char *app2_spare4;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:428
#, no-wrap
msgid ""
" struct guestfs_application2_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_application2 *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_application2_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_application2 *val; /* Елементи.  */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:433
#, no-wrap
msgid ""
" int guestfs_compare_application2 (const struct guestfs_application2 *, const struct guestfs_application2 *);\n"
" int guestfs_compare_application2_list (const struct guestfs_application2_list *, const struct guestfs_application2_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_application2 (const struct guestfs_application2 *, const struct guestfs_application2 *);\n"
" int guestfs_compare_application2_list (const struct guestfs_application2_list *, const struct guestfs_application2_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:436
#, no-wrap
msgid ""
" struct guestfs_application2 *guestfs_copy_application2 (const struct guestfs_application2 *);\n"
" struct guestfs_application2_list *guestfs_copy_application2_list (const struct guestfs_application2_list *);\n"
" \n"
msgstr ""
" struct guestfs_application2 *guestfs_copy_application2 (const struct guestfs_application2 *);\n"
" struct guestfs_application2_list *guestfs_copy_application2_list (const struct guestfs_application2_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:439
#, no-wrap
msgid ""
" void guestfs_free_application2 (struct guestfs_application2 *);\n"
" void guestfs_free_application2_list (struct guestfs_application2_list *);\n"
"\n"
msgstr ""
" void guestfs_free_application2 (struct guestfs_application2 *);\n"
" void guestfs_free_application2_list (struct guestfs_application2_list *);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:444
#, no-wrap
msgid ""
" struct guestfs_isoinfo {\n"
"   char *iso_system_id;\n"
"   char *iso_volume_id;\n"
"   uint32_t iso_volume_space_size;\n"
"   uint32_t iso_volume_set_size;\n"
"   uint32_t iso_volume_sequence_number;\n"
"   uint32_t iso_logical_block_size;\n"
"   char *iso_volume_set_id;\n"
"   char *iso_publisher_id;\n"
"   char *iso_data_preparer_id;\n"
"   char *iso_application_id;\n"
"   char *iso_copyright_file_id;\n"
"   char *iso_abstract_file_id;\n"
"   char *iso_bibliographic_file_id;\n"
"   int64_t iso_volume_creation_t;\n"
"   int64_t iso_volume_modification_t;\n"
"   int64_t iso_volume_expiration_t;\n"
"   int64_t iso_volume_effective_t;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_isoinfo {\n"
"   char *iso_system_id;\n"
"   char *iso_volume_id;\n"
"   uint32_t iso_volume_space_size;\n"
"   uint32_t iso_volume_set_size;\n"
"   uint32_t iso_volume_sequence_number;\n"
"   uint32_t iso_logical_block_size;\n"
"   char *iso_volume_set_id;\n"
"   char *iso_publisher_id;\n"
"   char *iso_data_preparer_id;\n"
"   char *iso_application_id;\n"
"   char *iso_copyright_file_id;\n"
"   char *iso_abstract_file_id;\n"
"   char *iso_bibliographic_file_id;\n"
"   int64_t iso_volume_creation_t;\n"
"   int64_t iso_volume_modification_t;\n"
"   int64_t iso_volume_expiration_t;\n"
"   int64_t iso_volume_effective_t;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:464
#, no-wrap
msgid ""
" struct guestfs_isoinfo_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_isoinfo *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_isoinfo_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_isoinfo *val; /* Елементи. */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:469
#, no-wrap
msgid ""
" int guestfs_compare_isoinfo (const struct guestfs_isoinfo *, const struct guestfs_isoinfo *);\n"
" int guestfs_compare_isoinfo_list (const struct guestfs_isoinfo_list *, const struct guestfs_isoinfo_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_isoinfo (const struct guestfs_isoinfo *, const struct guestfs_isoinfo *);\n"
" int guestfs_compare_isoinfo_list (const struct guestfs_isoinfo_list *, const struct guestfs_isoinfo_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:472
#, no-wrap
msgid ""
" struct guestfs_isoinfo *guestfs_copy_isoinfo (const struct guestfs_isoinfo *);\n"
" struct guestfs_isoinfo_list *guestfs_copy_isoinfo_list (const struct guestfs_isoinfo_list *);\n"
" \n"
msgstr ""
" struct guestfs_isoinfo *guestfs_copy_isoinfo (const struct guestfs_isoinfo *);\n"
" struct guestfs_isoinfo_list *guestfs_copy_isoinfo_list (const struct guestfs_isoinfo_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:475
#, no-wrap
msgid ""
" void guestfs_free_isoinfo (struct guestfs_isoinfo *);\n"
" void guestfs_free_isoinfo_list (struct guestfs_isoinfo_list *);\n"
"\n"
msgstr ""
" void guestfs_free_isoinfo (struct guestfs_isoinfo *);\n"
" void guestfs_free_isoinfo_list (struct guestfs_isoinfo_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:478
msgid "guestfs_mdstat"
msgstr "guestfs_mdstat"

#. type: verbatim
#: ../src/guestfs-structs.pod:480
#, no-wrap
msgid ""
" struct guestfs_mdstat {\n"
"   char *mdstat_device;\n"
"   int32_t mdstat_index;\n"
"   char *mdstat_flags;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_mdstat {\n"
"   char *mdstat_device;\n"
"   int32_t mdstat_index;\n"
"   char *mdstat_flags;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:486
#, no-wrap
msgid ""
" struct guestfs_mdstat_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_mdstat *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_mdstat_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_mdstat *val; /* Елементи. */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:491
#, no-wrap
msgid ""
" int guestfs_compare_mdstat (const struct guestfs_mdstat *, const struct guestfs_mdstat *);\n"
" int guestfs_compare_mdstat_list (const struct guestfs_mdstat_list *, const struct guestfs_mdstat_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_mdstat (const struct guestfs_mdstat *, const struct guestfs_mdstat *);\n"
" int guestfs_compare_mdstat_list (const struct guestfs_mdstat_list *, const struct guestfs_mdstat_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:494
#, no-wrap
msgid ""
" struct guestfs_mdstat *guestfs_copy_mdstat (const struct guestfs_mdstat *);\n"
" struct guestfs_mdstat_list *guestfs_copy_mdstat_list (const struct guestfs_mdstat_list *);\n"
" \n"
msgstr ""
" struct guestfs_mdstat *guestfs_copy_mdstat (const struct guestfs_mdstat *);\n"
" struct guestfs_mdstat_list *guestfs_copy_mdstat_list (const struct guestfs_mdstat_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:497
#, no-wrap
msgid ""
" void guestfs_free_mdstat (struct guestfs_mdstat *);\n"
" void guestfs_free_mdstat_list (struct guestfs_mdstat_list *);\n"
"\n"
msgstr ""
" void guestfs_free_mdstat (struct guestfs_mdstat *);\n"
" void guestfs_free_mdstat_list (struct guestfs_mdstat_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:500
msgid "guestfs_btrfssubvolume"
msgstr "guestfs_btrfssubvolume"

#. type: verbatim
#: ../src/guestfs-structs.pod:502
#, no-wrap
msgid ""
" struct guestfs_btrfssubvolume {\n"
"   uint64_t btrfssubvolume_id;\n"
"   uint64_t btrfssubvolume_top_level_id;\n"
"   char *btrfssubvolume_path;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_btrfssubvolume {\n"
"   uint64_t btrfssubvolume_id;\n"
"   uint64_t btrfssubvolume_top_level_id;\n"
"   char *btrfssubvolume_path;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:508
#, no-wrap
msgid ""
" struct guestfs_btrfssubvolume_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_btrfssubvolume *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_btrfssubvolume_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_btrfssubvolume *val; /* Елементи. */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:513
#, no-wrap
msgid ""
" int guestfs_compare_btrfssubvolume (const struct guestfs_btrfssubvolume *, const struct guestfs_btrfssubvolume *);\n"
" int guestfs_compare_btrfssubvolume_list (const struct guestfs_btrfssubvolume_list *, const struct guestfs_btrfssubvolume_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_btrfssubvolume (const struct guestfs_btrfssubvolume *, const struct guestfs_btrfssubvolume *);\n"
" int guestfs_compare_btrfssubvolume_list (const struct guestfs_btrfssubvolume_list *, const struct guestfs_btrfssubvolume_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:516
#, no-wrap
msgid ""
" struct guestfs_btrfssubvolume *guestfs_copy_btrfssubvolume (const struct guestfs_btrfssubvolume *);\n"
" struct guestfs_btrfssubvolume_list *guestfs_copy_btrfssubvolume_list (const struct guestfs_btrfssubvolume_list *);\n"
" \n"
msgstr ""
" struct guestfs_btrfssubvolume *guestfs_copy_btrfssubvolume (const struct guestfs_btrfssubvolume *);\n"
" struct guestfs_btrfssubvolume_list *guestfs_copy_btrfssubvolume_list (const struct guestfs_btrfssubvolume_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:519
#, no-wrap
msgid ""
" void guestfs_free_btrfssubvolume (struct guestfs_btrfssubvolume *);\n"
" void guestfs_free_btrfssubvolume_list (struct guestfs_btrfssubvolume_list *);\n"
"\n"
msgstr ""
" void guestfs_free_btrfssubvolume (struct guestfs_btrfssubvolume *);\n"
" void guestfs_free_btrfssubvolume_list (struct guestfs_btrfssubvolume_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:522
msgid "guestfs_xfsinfo"
msgstr "guestfs_xfsinfo"

#. type: verbatim
#: ../src/guestfs-structs.pod:524
#, no-wrap
msgid ""
" struct guestfs_xfsinfo {\n"
"   char *xfs_mntpoint;\n"
"   uint32_t xfs_inodesize;\n"
"   uint32_t xfs_agcount;\n"
"   uint32_t xfs_agsize;\n"
"   uint32_t xfs_sectsize;\n"
"   uint32_t xfs_attr;\n"
"   uint32_t xfs_blocksize;\n"
"   uint64_t xfs_datablocks;\n"
"   uint32_t xfs_imaxpct;\n"
"   uint32_t xfs_sunit;\n"
"   uint32_t xfs_swidth;\n"
"   uint32_t xfs_dirversion;\n"
"   uint32_t xfs_dirblocksize;\n"
"   uint32_t xfs_cimode;\n"
"   char *xfs_logname;\n"
"   uint32_t xfs_logblocksize;\n"
"   uint32_t xfs_logblocks;\n"
"   uint32_t xfs_logversion;\n"
"   uint32_t xfs_logsectsize;\n"
"   uint32_t xfs_logsunit;\n"
"   uint32_t xfs_lazycount;\n"
"   char *xfs_rtname;\n"
"   uint32_t xfs_rtextsize;\n"
"   uint64_t xfs_rtblocks;\n"
"   uint64_t xfs_rtextents;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_xfsinfo {\n"
"   char *xfs_mntpoint;\n"
"   uint32_t xfs_inodesize;\n"
"   uint32_t xfs_agcount;\n"
"   uint32_t xfs_agsize;\n"
"   uint32_t xfs_sectsize;\n"
"   uint32_t xfs_attr;\n"
"   uint32_t xfs_blocksize;\n"
"   uint64_t xfs_datablocks;\n"
"   uint32_t xfs_imaxpct;\n"
"   uint32_t xfs_sunit;\n"
"   uint32_t xfs_swidth;\n"
"   uint32_t xfs_dirversion;\n"
"   uint32_t xfs_dirblocksize;\n"
"   uint32_t xfs_cimode;\n"
"   char *xfs_logname;\n"
"   uint32_t xfs_logblocksize;\n"
"   uint32_t xfs_logblocks;\n"
"   uint32_t xfs_logversion;\n"
"   uint32_t xfs_logsectsize;\n"
"   uint32_t xfs_logsunit;\n"
"   uint32_t xfs_lazycount;\n"
"   char *xfs_rtname;\n"
"   uint32_t xfs_rtextsize;\n"
"   uint64_t xfs_rtblocks;\n"
"   uint64_t xfs_rtextents;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:552
#, no-wrap
msgid ""
" struct guestfs_xfsinfo_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_xfsinfo *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_xfsinfo_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_xfsinfo *val; /* Елементи. */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:557
#, no-wrap
msgid ""
" int guestfs_compare_xfsinfo (const struct guestfs_xfsinfo *, const struct guestfs_xfsinfo *);\n"
" int guestfs_compare_xfsinfo_list (const struct guestfs_xfsinfo_list *, const struct guestfs_xfsinfo_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_xfsinfo (const struct guestfs_xfsinfo *, const struct guestfs_xfsinfo *);\n"
" int guestfs_compare_xfsinfo_list (const struct guestfs_xfsinfo_list *, const struct guestfs_xfsinfo_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:560
#, no-wrap
msgid ""
" struct guestfs_xfsinfo *guestfs_copy_xfsinfo (const struct guestfs_xfsinfo *);\n"
" struct guestfs_xfsinfo_list *guestfs_copy_xfsinfo_list (const struct guestfs_xfsinfo_list *);\n"
" \n"
msgstr ""
" struct guestfs_xfsinfo *guestfs_copy_xfsinfo (const struct guestfs_xfsinfo *);\n"
" struct guestfs_xfsinfo_list *guestfs_copy_xfsinfo_list (const struct guestfs_xfsinfo_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:563
#, no-wrap
msgid ""
" void guestfs_free_xfsinfo (struct guestfs_xfsinfo *);\n"
" void guestfs_free_xfsinfo_list (struct guestfs_xfsinfo_list *);\n"
"\n"
msgstr ""
" void guestfs_free_xfsinfo (struct guestfs_xfsinfo *);\n"
" void guestfs_free_xfsinfo_list (struct guestfs_xfsinfo_list *);\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:568
#, no-wrap
msgid ""
" struct guestfs_utsname {\n"
"   char *uts_sysname;\n"
"   char *uts_release;\n"
"   char *uts_version;\n"
"   char *uts_machine;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_utsname {\n"
"   char *uts_sysname;\n"
"   char *uts_release;\n"
"   char *uts_version;\n"
"   char *uts_machine;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:575
#, no-wrap
msgid ""
" struct guestfs_utsname_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_utsname *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_utsname_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_utsname *val; /* Елементи. */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:580
#, no-wrap
msgid ""
" int guestfs_compare_utsname (const struct guestfs_utsname *, const struct guestfs_utsname *);\n"
" int guestfs_compare_utsname_list (const struct guestfs_utsname_list *, const struct guestfs_utsname_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_utsname (const struct guestfs_utsname *, const struct guestfs_utsname *);\n"
" int guestfs_compare_utsname_list (const struct guestfs_utsname_list *, const struct guestfs_utsname_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:583
#, no-wrap
msgid ""
" struct guestfs_utsname *guestfs_copy_utsname (const struct guestfs_utsname *);\n"
" struct guestfs_utsname_list *guestfs_copy_utsname_list (const struct guestfs_utsname_list *);\n"
" \n"
msgstr ""
" struct guestfs_utsname *guestfs_copy_utsname (const struct guestfs_utsname *);\n"
" struct guestfs_utsname_list *guestfs_copy_utsname_list (const struct guestfs_utsname_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:586
#, no-wrap
msgid ""
" void guestfs_free_utsname (struct guestfs_utsname *);\n"
" void guestfs_free_utsname_list (struct guestfs_utsname_list *);\n"
"\n"
msgstr ""
" void guestfs_free_utsname (struct guestfs_utsname *);\n"
" void guestfs_free_utsname_list (struct guestfs_utsname_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:589
msgid "guestfs_hivex_node"
msgstr "guestfs_hivex_node"

#. type: verbatim
#: ../src/guestfs-structs.pod:591
#, no-wrap
msgid ""
" struct guestfs_hivex_node {\n"
"   int64_t hivex_node_h;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_hivex_node {\n"
"   int64_t hivex_node_h;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:595
#, no-wrap
msgid ""
" struct guestfs_hivex_node_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_hivex_node *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_hivex_node_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_hivex_node *val; /* Елементи. */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:600
#, no-wrap
msgid ""
" int guestfs_compare_hivex_node (const struct guestfs_hivex_node *, const struct guestfs_hivex_node *);\n"
" int guestfs_compare_hivex_node_list (const struct guestfs_hivex_node_list *, const struct guestfs_hivex_node_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_hivex_node (const struct guestfs_hivex_node *, const struct guestfs_hivex_node *);\n"
" int guestfs_compare_hivex_node_list (const struct guestfs_hivex_node_list *, const struct guestfs_hivex_node_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:603
#, no-wrap
msgid ""
" struct guestfs_hivex_node *guestfs_copy_hivex_node (const struct guestfs_hivex_node *);\n"
" struct guestfs_hivex_node_list *guestfs_copy_hivex_node_list (const struct guestfs_hivex_node_list *);\n"
" \n"
msgstr ""
" struct guestfs_hivex_node *guestfs_copy_hivex_node (const struct guestfs_hivex_node *);\n"
" struct guestfs_hivex_node_list *guestfs_copy_hivex_node_list (const struct guestfs_hivex_node_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:606
#, no-wrap
msgid ""
" void guestfs_free_hivex_node (struct guestfs_hivex_node *);\n"
" void guestfs_free_hivex_node_list (struct guestfs_hivex_node_list *);\n"
"\n"
msgstr ""
" void guestfs_free_hivex_node (struct guestfs_hivex_node *);\n"
" void guestfs_free_hivex_node_list (struct guestfs_hivex_node_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:609
msgid "guestfs_hivex_value"
msgstr "guestfs_hivex_value"

#. type: verbatim
#: ../src/guestfs-structs.pod:611
#, no-wrap
msgid ""
" struct guestfs_hivex_value {\n"
"   int64_t hivex_value_h;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_hivex_value {\n"
"   int64_t hivex_value_h;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:615
#, no-wrap
msgid ""
" struct guestfs_hivex_value_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_hivex_value *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_hivex_value_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_hivex_value *val; /* Елементи. */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:620
#, no-wrap
msgid ""
" int guestfs_compare_hivex_value (const struct guestfs_hivex_value *, const struct guestfs_hivex_value *);\n"
" int guestfs_compare_hivex_value_list (const struct guestfs_hivex_value_list *, const struct guestfs_hivex_value_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_hivex_value (const struct guestfs_hivex_value *, const struct guestfs_hivex_value *);\n"
" int guestfs_compare_hivex_value_list (const struct guestfs_hivex_value_list *, const struct guestfs_hivex_value_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:623
#, no-wrap
msgid ""
" struct guestfs_hivex_value *guestfs_copy_hivex_value (const struct guestfs_hivex_value *);\n"
" struct guestfs_hivex_value_list *guestfs_copy_hivex_value_list (const struct guestfs_hivex_value_list *);\n"
" \n"
msgstr ""
" struct guestfs_hivex_value *guestfs_copy_hivex_value (const struct guestfs_hivex_value *);\n"
" struct guestfs_hivex_value_list *guestfs_copy_hivex_value_list (const struct guestfs_hivex_value_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:626
#, no-wrap
msgid ""
" void guestfs_free_hivex_value (struct guestfs_hivex_value *);\n"
" void guestfs_free_hivex_value_list (struct guestfs_hivex_value_list *);\n"
"\n"
msgstr ""
" void guestfs_free_hivex_value (struct guestfs_hivex_value *);\n"
" void guestfs_free_hivex_value_list (struct guestfs_hivex_value_list *);\n"
"\n"

#. type: =head2
#: ../src/guestfs-structs.pod:629
msgid "guestfs_internal_mountable"
msgstr "guestfs_internal_mountable"

#. type: verbatim
#: ../src/guestfs-structs.pod:631
#, no-wrap
msgid ""
" struct guestfs_internal_mountable {\n"
"   int32_t im_type;\n"
"   char *im_device;\n"
"   char *im_volume;\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_internal_mountable {\n"
"   int32_t im_type;\n"
"   char *im_device;\n"
"   char *im_volume;\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:637
#, no-wrap
msgid ""
" struct guestfs_internal_mountable_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_internal_mountable *val; /* Elements. */\n"
" };\n"
"\n"
msgstr ""
" struct guestfs_internal_mountable_list {\n"
"   uint32_t len; /* Кількість елементів у списку. */\n"
"   struct guestfs_internal_mountable *val; /* Елементи. */\n"
" };\n"
"\n"

#. type: verbatim
#: ../src/guestfs-structs.pod:642
#, no-wrap
msgid ""
" int guestfs_compare_internal_mountable (const struct guestfs_internal_mountable *, const struct guestfs_internal_mountable *);\n"
" int guestfs_compare_internal_mountable_list (const struct guestfs_internal_mountable_list *, const struct guestfs_internal_mountable_list *);\n"
" \n"
msgstr ""
" int guestfs_compare_internal_mountable (const struct guestfs_internal_mountable *, const struct guestfs_internal_mountable *);\n"
" int guestfs_compare_internal_mountable_list (const struct guestfs_internal_mountable_list *, const struct guestfs_internal_mountable_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:645
#, no-wrap
msgid ""
" struct guestfs_internal_mountable *guestfs_copy_internal_mountable (const struct guestfs_internal_mountable *);\n"
" struct guestfs_internal_mountable_list *guestfs_copy_internal_mountable_list (const struct guestfs_internal_mountable_list *);\n"
" \n"
msgstr ""
" struct guestfs_internal_mountable *guestfs_copy_internal_mountable (const struct guestfs_internal_mountable *);\n"
" struct guestfs_internal_mountable_list *guestfs_copy_internal_mountable_list (const struct guestfs_internal_mountable_list *);\n"
" \n"

#. type: verbatim
#: ../src/guestfs-structs.pod:648
#, no-wrap
msgid ""
" void guestfs_free_internal_mountable (struct guestfs_internal_mountable *);\n"
" void guestfs_free_internal_mountable_list (struct guestfs_internal_mountable_list *);\n"
"\n"
msgstr ""
" void guestfs_free_internal_mountable (struct guestfs_internal_mountable *);\n"
" void guestfs_free_internal_mountable_list (struct guestfs_internal_mountable_list *);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3
msgid "guestfs - Library for accessing and modifying virtual machine images"
msgstr ""
"guestfs — бібліотека для доступу та внесення змін до образів віртуальних "
"машин"

#. type: verbatim
#: ../src/guestfs.pod:9
#, no-wrap
msgid ""
" guestfs_h *g = guestfs_create ();\n"
" guestfs_add_drive (g, \"guest.img\");\n"
" guestfs_launch (g);\n"
" guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
" guestfs_touch (g, \"/hello\");\n"
" guestfs_umount (g, \"/\");\n"
" guestfs_shutdown (g);\n"
" guestfs_close (g);\n"
"\n"
msgstr ""
" guestfs_h *g = guestfs_create ();\n"
" guestfs_add_drive (g, \"guest.img\");\n"
" guestfs_launch (g);\n"
" guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
" guestfs_touch (g, \"/hello\");\n"
" guestfs_umount (g, \"/\");\n"
" guestfs_shutdown (g);\n"
" guestfs_close (g);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:24
msgid ""
"Libguestfs is a library for accessing and modifying disk images and virtual "
"machines.  This manual page documents the C API."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:27
msgid ""
"If you are looking for an introduction to libguestfs, see the web site: "
"L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:30
msgid ""
"Each virt tool has its own man page (for a full list, go to L</SEE ALSO> at "
"the end of this file)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:33
msgid "The libguestfs FAQ contains many useful answers: L<guestfs-faq(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:35
msgid ""
"For examples of using the API from C, see L<guestfs-examples(3)>.  For "
"examples in other languages, see L</USING LIBGUESTFS WITH OTHER PROGRAMMING "
"LANGUAGES> below."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:39
msgid "For tips and recipes, see L<guestfs-recipes(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:41
msgid ""
"If you are having performance problems, read L<guestfs-performance(1)>.  To "
"help test libguestfs, read L<libguestfs-test-tool(1)> and L<guestfs-"
"testing(1)>."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:45
msgid "API OVERVIEW"
msgstr "ОГЛЯД API"

#. type: textblock
#: ../src/guestfs.pod:47
msgid ""
"This section provides a gentler overview of the libguestfs API.  We also try "
"to group API calls together, where that may not be obvious from reading "
"about the individual calls in the main section of this manual."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:52
msgid "HANDLES"
msgstr "ОБРОБНИКИ"

#. type: textblock
#: ../src/guestfs.pod:54
msgid ""
"Before you can use libguestfs calls, you have to create a handle.  Then you "
"must add at least one disk image to the handle, followed by launching the "
"handle, then performing whatever operations you want, and finally closing "
"the handle.  By convention we use the single letter C<g> for the name of the "
"handle variable, although of course you can use any name you want."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:61
msgid "The general structure of all libguestfs-using programs looks like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:64
#, no-wrap
msgid ""
" guestfs_h *g = guestfs_create ();\n"
" \n"
msgstr ""
" guestfs_h *g = guestfs_create ();\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:66
#, no-wrap
msgid ""
" /* Call guestfs_add_drive additional times if there are\n"
"  * multiple disk images.\n"
"  */\n"
" guestfs_add_drive (g, \"guest.img\");\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:71
#, no-wrap
msgid ""
" /* Most manipulation calls won't work until you've launched\n"
"  * the handle 'g'.  You have to do this _after_ adding drives\n"
"  * and _before_ other commands.\n"
"  */\n"
" guestfs_launch (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:77
#, no-wrap
msgid ""
" /* Either: examine what partitions, LVs etc are available: */\n"
" char **partitions = guestfs_list_partitions (g);\n"
" char **logvols = guestfs_lvs (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:81
#, no-wrap
msgid ""
" /* Or: ask libguestfs to find filesystems for you: */\n"
" char **filesystems = guestfs_list_filesystems (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:84
#, no-wrap
msgid ""
" /* Or: use inspection (see INSPECTION section below). */\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:86
#, no-wrap
msgid ""
" /* To access a filesystem in the image, you must mount it. */\n"
" guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:89
#, no-wrap
msgid ""
" /* Now you can perform filesystem actions on the guest\n"
"  * disk image.\n"
"  */\n"
" guestfs_touch (g, \"/hello\");\n"
" \n"
msgstr ""
" /* Тепер ви можете виконувати дії з файловою системою на\n"
"  * образі диска операційної системи.\n"
"  */\n"
" guestfs_touch (g, \"/hello\");\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:94
#, no-wrap
msgid ""
" /* Synchronize the disk.  This is the opposite of guestfs_launch. */\n"
" guestfs_shutdown (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:97
#, no-wrap
msgid ""
" /* Close and free the handle 'g'. */\n"
" guestfs_close (g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:100
msgid ""
"The code above doesn't include any error checking.  In real code you should "
"check return values carefully for errors.  In general all functions that "
"return integers return C<-1> on error, and all functions that return "
"pointers return C<NULL> on error.  See section L</ERROR HANDLING> below for "
"how to handle errors, and consult the documentation for each function call "
"below to see precisely how they return error indications.  See L<guestfs-"
"examples(3)> for fully worked examples."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:109
msgid "DISK IMAGES"
msgstr "ОБРАЗИ ДИСКІВ"

#. type: textblock
#: ../src/guestfs.pod:111
msgid ""
"The image filename (C<\"guest.img\"> in the example above) could be a disk "
"image from a virtual machine, a L<dd(1)> copy of a physical hard disk, an "
"actual block device, or simply an empty file of zeroes that you have created "
"through L<posix_fallocate(3)>.  Libguestfs lets you do useful things to all "
"of these."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:117
msgid ""
"The call you should use in modern code for adding drives is L</"
"guestfs_add_drive_opts>.  To add a disk image, allowing writes, and "
"specifying that the format is raw, do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:121
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         -1);\n"
"\n"
msgstr ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:125
msgid "You can add a disk read-only using:"
msgstr "Ви можете додати диск у режимі лише читання:"

#. type: verbatim
#: ../src/guestfs.pod:127
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
"                         -1);\n"
"\n"
msgstr ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:132
msgid ""
"or by calling the older function L</guestfs_add_drive_ro>.  If you use the "
"readonly flag, libguestfs won't modify the file.  (See also L</DISK IMAGE "
"FORMATS> below)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:136
msgid ""
"Be extremely cautious if the disk image is in use, eg. if it is being used "
"by a virtual machine.  Adding it read-write will almost certainly cause disk "
"corruption, but adding it read-only is safe."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:140
msgid ""
"You should usually add at least one disk image, and you may add multiple "
"disk images.  If adding multiple disk images, they usually have to be "
"\"related\", ie. from the same guest.  In the API, the disk images are "
"usually referred to as C</dev/sda> (for the first one you added), C</dev/"
"sdb> (for the second one you added), etc."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:146
msgid ""
"Once L</guestfs_launch> has been called you cannot add any more images.  You "
"can call L</guestfs_list_devices> to get a list of the device names, in the "
"order that you added them.  See also L</BLOCK DEVICE NAMING> below."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:151
msgid ""
"There are slightly different rules when hotplugging disks (in libguestfs "
"E<ge> 1.20).  See L</HOTPLUGGING> below."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:154
msgid "MOUNTING"
msgstr "МОНТУВАННЯ"

#. type: textblock
#: ../src/guestfs.pod:156
msgid ""
"Before you can read or write files, create directories and so on in a disk "
"image that contains filesystems, you have to mount those filesystems using "
"L</guestfs_mount> or L</guestfs_mount_ro>.  If you already know that a disk "
"image contains (for example) one partition with a filesystem on that "
"partition, then you can mount it directly:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:163
#, no-wrap
msgid ""
" guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
"\n"
msgstr ""
" guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:165
msgid ""
"where C</dev/sda1> means literally the first partition (C<1>) of the first "
"disk image that we added (C</dev/sda>).  If the disk contains Linux LVM2 "
"logical volumes you could refer to those instead (eg. C</dev/VG/LV>).  Note "
"that these are libguestfs virtual devices, and are nothing to do with host "
"devices."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:171
msgid ""
"If you are given a disk image and you don't know what it contains then you "
"have to find out.  Libguestfs can do that too: use L</"
"guestfs_list_partitions> and L</guestfs_lvs> to list possible partitions and "
"LVs, and either try mounting each to see what is mountable, or else examine "
"them with L</guestfs_vfs_type> or L</guestfs_file>.  To list just "
"filesystems, use L</guestfs_list_filesystems>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:179
msgid ""
"Libguestfs also has a set of APIs for inspection of unknown disk images (see "
"L</INSPECTION> below).  You might also want to look at higher level programs "
"built on top of libguestfs, in particular L<virt-inspector(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:184
msgid ""
"To mount a filesystem read-only, use L</guestfs_mount_ro>.  There are "
"several other variations of the C<guestfs_mount_*> call."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:187
msgid "FILESYSTEM ACCESS AND MODIFICATION"
msgstr "ДОСТУП ТА ВНЕСЕННЯ ЗМІН ДО ФАЙЛОВИХ СИСТЕМ"

#. type: textblock
#: ../src/guestfs.pod:189
msgid ""
"The majority of the libguestfs API consists of fairly low-level calls for "
"accessing and modifying the files, directories, symlinks etc on mounted "
"filesystems.  There are over a hundred such calls which you can find listed "
"in detail below in this man page, and we don't even pretend to cover them "
"all in this overview."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:195
msgid ""
"Specify filenames as full paths, starting with C<\"/\"> and including the "
"mount point."
msgstr ""
"Вказуйте адреси і назви файлів повністю, починаючи з C<\"/\">, разом з "
"точкою монтування."

#. type: textblock
#: ../src/guestfs.pod:198
msgid ""
"For example, if you mounted a filesystem at C<\"/\"> and you want to read "
"the file called C<\"etc/passwd\"> then you could do:"
msgstr ""
"Наприклад, якщо вами змонтовано файлову систему до C<\"/\">, і ви бажаєте "
"виконати читання файла з назвою C<\"etc/passwd\">, ви можете скористатися "
"таким кодом:"

#. type: verbatim
#: ../src/guestfs.pod:201
#, no-wrap
msgid ""
" char *data = guestfs_cat (g, \"/etc/passwd\");\n"
"\n"
msgstr ""
" char *data = guestfs_cat (g, \"/etc/passwd\");\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:203
msgid ""
"This would return C<data> as a newly allocated buffer containing the full "
"content of that file (with some conditions: see also L</DOWNLOADING> below), "
"or C<NULL> if there was an error."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:207
msgid ""
"As another example, to create a top-level directory on that filesystem "
"called C<\"var\"> you would do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:210
#, no-wrap
msgid ""
" guestfs_mkdir (g, \"/var\");\n"
"\n"
msgstr ""
" guestfs_mkdir (g, \"/var\");\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:212
msgid "To create a symlink you could do:"
msgstr "Щоб створити символічне посилання, ви можете скористатися таким кодом:"

#. type: verbatim
#: ../src/guestfs.pod:214
#, no-wrap
msgid ""
" guestfs_ln_s (g, \"/etc/init.d/portmap\",\n"
"               \"/etc/rc3.d/S30portmap\");\n"
"\n"
msgstr ""
" guestfs_ln_s (g, \"/etc/init.d/portmap\",\n"
"               \"/etc/rc3.d/S30portmap\");\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:217
msgid ""
"Libguestfs will reject attempts to use relative paths and there is no "
"concept of a current working directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:220
msgid ""
"Libguestfs can return errors in many situations: for example if the "
"filesystem isn't writable, or if a file or directory that you requested "
"doesn't exist.  If you are using the C API (documented here)  you have to "
"check for those error conditions after each call.  (Other language bindings "
"turn these errors into exceptions)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:226
msgid ""
"File writes are affected by the per-handle umask, set by calling L</"
"guestfs_umask> and defaulting to 022.  See L</UMASK>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:229
msgid ""
"Since libguestfs 1.18, it is possible to mount the libguestfs filesystem on "
"a local directory, subject to some restrictions.  See L</MOUNT LOCAL> below."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:233
msgid "PARTITIONING"
msgstr "ПОДІЛ НА РОЗДІЛИ"

#. type: textblock
#: ../src/guestfs.pod:235
msgid ""
"Libguestfs contains API calls to read, create and modify partition tables on "
"disk images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:238
msgid ""
"In the common case where you want to create a single partition covering the "
"whole disk, you should use the L</guestfs_part_disk> call:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:242
#, no-wrap
msgid ""
" const char *parttype = \"mbr\";\n"
" if (disk_is_larger_than_2TB)\n"
"   parttype = \"gpt\";\n"
" guestfs_part_disk (g, \"/dev/sda\", parttype);\n"
"\n"
msgstr ""
" const char *parttype = \"mbr\";\n"
" if (disk_is_larger_than_2TB)\n"
"   parttype = \"gpt\";\n"
" guestfs_part_disk (g, \"/dev/sda\", parttype);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:247
msgid ""
"Obviously this effectively wipes anything that was on that disk image before."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:250
msgid "LVM2"
msgstr "LVM2"

#. type: textblock
#: ../src/guestfs.pod:252
msgid ""
"Libguestfs provides access to a large part of the LVM2 API, such as L</"
"guestfs_lvcreate> and L</guestfs_vgremove>.  It won't make much sense unless "
"you familiarize yourself with the concepts of physical volumes, volume "
"groups and logical volumes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:257
msgid ""
"This author strongly recommends reading the LVM HOWTO, online at L<http://"
"tldp.org/HOWTO/LVM-HOWTO/>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:260
msgid "DOWNLOADING"
msgstr "ОТРИМАННЯ ДАНИХ"

#. type: textblock
#: ../src/guestfs.pod:262
msgid ""
"Use L</guestfs_cat> to download small, text only files.  This call cannot "
"handle files containing any ASCII NUL (C<\\0>) characters.  However the API "
"is very simple to use."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:266
msgid ""
"L</guestfs_read_file> can be used to read files which contain arbitrary 8 "
"bit data, since it returns a (pointer, size) pair."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:269
msgid ""
"L</guestfs_download> can be used to download any file, with no limits on "
"content or size."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:272
msgid ""
"To download multiple files, see L</guestfs_tar_out> and L</guestfs_tgz_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:275
msgid "UPLOADING"
msgstr "ВИВАНТАЖЕННЯ"

#. type: textblock
#: ../src/guestfs.pod:277
msgid ""
"To write a small file with fixed content, use L</guestfs_write>.  To create "
"a file of all zeroes, use L</guestfs_truncate_size> (sparse) or L</"
"guestfs_fallocate64> (with all disk blocks allocated).  There are a variety "
"of other functions for creating test files, for example L</guestfs_fill> and "
"L</guestfs_fill_pattern>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:283
msgid ""
"To upload a single file, use L</guestfs_upload>.  This call has no limits on "
"file content or size."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:286
msgid ""
"To upload multiple files, see L</guestfs_tar_in> and L</guestfs_tgz_in>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:288
msgid ""
"However the fastest way to upload I<large numbers of arbitrary files> is to "
"turn them into a squashfs or CD ISO (see L<mksquashfs(8)> and "
"L<mkisofs(8)>), then attach this using L</guestfs_add_drive_ro>.  If you add "
"the drive in a predictable way (eg. adding it last after all other drives) "
"then you can get the device name from L</guestfs_list_devices> and mount it "
"directly using L</guestfs_mount_ro>.  Note that squashfs images are "
"sometimes non-portable between kernel versions, and they don't support "
"labels or UUIDs.  If you want to pre-build an image or you need to mount it "
"using a label or UUID, use an ISO image instead."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:299
msgid "COPYING"
msgstr "КОПІЮВАННЯ"

#. type: textblock
#: ../src/guestfs.pod:301
msgid ""
"There are various different commands for copying between files and devices "
"and in and out of the guest filesystem.  These are summarised in the table "
"below."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:307
msgid "B<file> to B<file>"
msgstr "B<файл> у B<файл>"

#. type: textblock
#: ../src/guestfs.pod:309
msgid ""
"Use L</guestfs_cp> to copy a single file, or L</guestfs_cp_a> to copy "
"directories recursively."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:312
msgid ""
"To copy part of a file (offset and size) use L</guestfs_copy_file_to_file>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:315
msgid "B<file> to B<device>"
msgstr "B<файл> на B<пристрій>"

#. type: =item
#: ../src/guestfs.pod:317
msgid "B<device> to B<file>"
msgstr "B<пристрій> до B<файла>"

#. type: =item
#: ../src/guestfs.pod:319
msgid "B<device> to B<device>"
msgstr "B<пристрій> на B<пристрій>"

#. type: textblock
#: ../src/guestfs.pod:321
msgid ""
"Use L</guestfs_copy_file_to_device>, L</guestfs_copy_device_to_file>, or L</"
"guestfs_copy_device_to_device>."
msgstr ""
"Скористайтеся L</guestfs_copy_file_to_device>, L</"
"guestfs_copy_device_to_file> або L</guestfs_copy_device_to_device>."

#. type: textblock
#: ../src/guestfs.pod:324
msgid "Example: duplicate the contents of an LV:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:326
#, no-wrap
msgid ""
" guestfs_copy_device_to_device (g,\n"
"         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
"         /* -1 marks the end of the list of optional parameters */\n"
"         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:331
msgid ""
"The destination (C</dev/VG/Copy>) must be at least as large as the source "
"(C</dev/VG/Original>).  To copy less than the whole source device, use the "
"optional C<size> parameter:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:335
#, no-wrap
msgid ""
" guestfs_copy_device_to_device (g,\n"
"         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
"         GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, 10000,\n"
"         -1);\n"
"\n"
msgstr ""
" guestfs_copy_device_to_device (g,\n"
"         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
"         GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, 10000,\n"
"         -1);\n"
"\n"

#. type: =item
#: ../src/guestfs.pod:340
msgid "B<file on the host> to B<file or device>"
msgstr "B<файл на вузлі> на B<файл або пристрій>"

#. type: textblock
#: ../src/guestfs.pod:342
msgid "Use L</guestfs_upload>.  See L</UPLOADING> above."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:344
msgid "B<file or device> to B<file on the host>"
msgstr "B<файл або пристрій> у B<файл на вузлі>"

#. type: textblock
#: ../src/guestfs.pod:346
msgid "Use L</guestfs_download>.  See L</DOWNLOADING> above."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:350
msgid "UPLOADING AND DOWNLOADING TO PIPES AND FILE DESCRIPTORS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:352
msgid ""
"Calls like L</guestfs_upload>, L</guestfs_download>, L</guestfs_tar_in>, L</"
"guestfs_tar_out> etc appear to only take filenames as arguments, so it "
"appears you can only upload and download to files.  However many Un*x-like "
"hosts let you use the special device files C</dev/stdin>, C</dev/stdout>, C</"
"dev/stderr> and C</dev/fd/N> to read and write from stdin, stdout, stderr, "
"and arbitrary file descriptor N."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:360
msgid "For example, L<virt-cat(1)> writes its output to stdout by doing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:363
#, no-wrap
msgid ""
" guestfs_download (g, filename, \"/dev/stdout\");\n"
"\n"
msgstr ""
" guestfs_download (g, filename, \"/dev/stdout\");\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:365
msgid "and you can write tar output to a file descriptor C<fd> by doing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:367
#, no-wrap
msgid ""
" char devfd[64];\n"
" snprintf (devfd, sizeof devfd, \"/dev/fd/%d\", fd);\n"
" guestfs_tar_out (g, \"/\", devfd);\n"
"\n"
msgstr ""
" char devfd[64];\n"
" snprintf (devfd, sizeof devfd, \"/dev/fd/%d\", fd);\n"
" guestfs_tar_out (g, \"/\", devfd);\n"
"\n"

#. type: =head2
#: ../src/guestfs.pod:371
msgid "LISTING FILES"
msgstr "СПИСКИ ФАЙЛІВ"

#. type: textblock
#: ../src/guestfs.pod:373
msgid ""
"L</guestfs_ll> is just designed for humans to read (mainly when using the "
"L<guestfish(1)>-equivalent command C<ll>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:376
msgid ""
"L</guestfs_ls> is a quick way to get a list of files in a directory from "
"programs, as a flat list of strings."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:379
msgid ""
"L</guestfs_readdir> is a programmatic way to get a list of files in a "
"directory, plus additional information about each one.  It is more "
"equivalent to using the L<readdir(3)> call on a local filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:383
msgid ""
"L</guestfs_find> and L</guestfs_find0> can be used to recursively list files."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:386
msgid "RUNNING COMMANDS"
msgstr "ВИКОНАННЯ КОМАНД"

#. type: textblock
#: ../src/guestfs.pod:388
msgid ""
"Although libguestfs is primarily an API for manipulating files inside guest "
"images, we also provide some limited facilities for running commands inside "
"guests."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:392
msgid "There are many limitations to this:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:398
msgid ""
"The kernel version that the command runs under will be different from what "
"it expects."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:403
msgid ""
"If the command needs to communicate with daemons, then most likely they "
"won't be running."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:408
msgid "The command will be running in limited memory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:412
msgid ""
"The network may not be available unless you enable it (see L</"
"guestfs_set_network>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:417
msgid "Only supports Linux guests (not Windows, BSD, etc)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:421
msgid ""
"Architecture limitations (eg. won't work for a PPC guest on an X86 host)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:426
msgid ""
"For SELinux guests, you may need to enable SELinux and load policy first.  "
"See L</SELINUX> in this manpage."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:431
msgid ""
"I<Security:> It is not safe to run commands from untrusted, possibly "
"malicious guests.  These commands may attempt to exploit your program by "
"sending unexpected output.  They could also try to exploit the Linux kernel "
"or qemu provided by the libguestfs appliance.  They could use the network "
"provided by the libguestfs appliance to bypass ordinary network partitions "
"and firewalls.  They could use the elevated privileges or different SELinux "
"context of your program to their advantage."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:440
msgid ""
"A secure alternative is to use libguestfs to install a \"firstboot\" script "
"(a script which runs when the guest next boots normally), and to have this "
"script run the commands you want in the normal context of the running guest, "
"network security and so on.  For information about other security issues, "
"see L</SECURITY>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:448
msgid ""
"The two main API calls to run commands are L</guestfs_command> and L</"
"guestfs_sh> (there are also variations)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:451
msgid ""
"The difference is that L</guestfs_sh> runs commands using the shell, so any "
"shell globs, redirections, etc will work."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:454
msgid "CONFIGURATION FILES"
msgstr "ФАЙЛИ НАЛАШТУВАННЯ"

#. type: textblock
#: ../src/guestfs.pod:456
msgid ""
"To read and write configuration files in Linux guest filesystems, we "
"strongly recommend using Augeas.  For example, Augeas understands how to "
"read and write, say, a Linux shadow password file or X.org configuration "
"file, and so avoids you having to write that code."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:461
msgid ""
"The main Augeas calls are bound through the C<guestfs_aug_*> APIs.  We don't "
"document Augeas itself here because there is excellent documentation on the "
"L<http://augeas.net/> website."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:465
msgid ""
"If you don't want to use Augeas (you fool!) then try calling L</"
"guestfs_read_lines> to get the file as a list of lines which you can iterate "
"over."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:469
msgid "SYSTEMD JOURNAL FILES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:471
msgid ""
"To read the systemd journal from a Linux guest, use the C<guestfs_journal_*> "
"APIs starting with L</guestfs_journal_open>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:474
msgid ""
"Consult the journal documentation here: L<sd-journal(3)>, "
"L<sd_journal_open(3)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:479
msgid ""
"We support SELinux guests.  To ensure that labeling happens correctly in "
"SELinux guests, you need to enable SELinux and load the guest's policy:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:487
msgid "Before launching, do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:489
#, no-wrap
msgid ""
" guestfs_set_selinux (g, 1);\n"
"\n"
msgstr ""
" guestfs_set_selinux (g, 1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:493
msgid ""
"After mounting the guest's filesystem(s), load the policy.  This is best "
"done by running the L<load_policy(8)> command in the guest itself:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:497
#, no-wrap
msgid ""
" guestfs_sh (g, \"/usr/sbin/load_policy\");\n"
"\n"
msgstr ""
" guestfs_sh (g, \"/usr/sbin/load_policy\");\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:499
msgid ""
"(Older versions of C<load_policy> require you to specify the name of the "
"policy file)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:504
msgid ""
"Optionally, set the security context for the API.  The correct security "
"context to use can only be known by inspecting the guest.  As an example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:508
#, no-wrap
msgid ""
" guestfs_setcon (g, \"unconfined_u:unconfined_r:unconfined_t:s0\");\n"
"\n"
msgstr ""
" guestfs_setcon (g, \"unconfined_u:unconfined_r:unconfined_t:s0\");\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:512
msgid "This will work for running commands and editing existing files."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:514
msgid ""
"When new files are created, you may need to label them explicitly, for "
"example by running the external command C<restorecon pathname>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:518
msgid "UMASK"
msgstr "UMASK"

#. type: textblock
#: ../src/guestfs.pod:520
msgid ""
"Certain calls are affected by the current file mode creation mask (the "
"\"umask\").  In particular ones which create files or directories, such as "
"L</guestfs_touch>, L</guestfs_mknod> or L</guestfs_mkdir>.  This affects "
"either the default mode that the file is created with or modifies the mode "
"that you supply."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:526
msgid ""
"The default umask is C<022>, so files are created with modes such as C<0644> "
"and directories with C<0755>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:529
msgid ""
"There are two ways to avoid being affected by umask.  Either set umask to 0 "
"(call C<guestfs_umask (g, 0)> early after launching).  Or call L</"
"guestfs_chmod> after creating each file or directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:533
msgid "For more information about umask, see L<umask(2)>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:535
msgid "LABELS AND UUIDS"
msgstr "МІТКИ І UUID"

#. type: textblock
#: ../src/guestfs.pod:537
msgid ""
"Many filesystems, devices and logical volumes support either labels (short "
"strings like \"BOOT\" which might not be unique) and/or UUIDs (globally "
"unique IDs)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:541
msgid ""
"For filesystems, use L</guestfs_vfs_label> or L</guestfs_vfs_uuid> to read "
"the label or UUID.  Some filesystems let you call L</guestfs_set_label> or "
"L</guestfs_set_uuid> to change the label or UUID."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:546
msgid ""
"You can locate a filesystem by its label or UUID using L</"
"guestfs_findfs_label> or L</guestfs_findfs_uuid>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:549
msgid ""
"For LVM2 (which supports only UUIDs), there is a rich set of APIs for "
"fetching UUIDs, fetching UUIDs of the contained objects, and changing "
"UUIDs.  See: L</guestfs_lvuuid>, L</guestfs_vguuid>, L</guestfs_pvuuid>, L</"
"guestfs_vglvuuids>, L</guestfs_vgpvuuids>, L</guestfs_vgchange_uuid>, L</"
"guestfs_vgchange_uuid_all>, L</guestfs_pvchange_uuid>, L</"
"guestfs_pvchange_uuid_all>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:560
msgid ""
"Note when cloning a filesystem, device or whole guest, it is a good idea to "
"set new randomly generated UUIDs on the copy."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:565
msgid ""
"Libguestfs allows you to access Linux guests which have been encrypted using "
"whole disk encryption that conforms to the Linux Unified Key Setup (LUKS) "
"standard.  This includes nearly all whole disk encryption systems used by "
"modern Linux guests."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:571
msgid ""
"Use L</guestfs_vfs_type> to identify LUKS-encrypted block devices (it "
"returns the string C<crypto_LUKS>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:574
msgid ""
"Then open these devices by calling L</guestfs_luks_open>.  Obviously you "
"will require the passphrase!"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:577
msgid ""
"Opening a LUKS device creates a new device mapper device called C</dev/"
"mapper/mapname> (where C<mapname> is the string you supply to L</"
"guestfs_luks_open>).  Reads and writes to this mapper device are decrypted "
"from and encrypted to the underlying block device respectively."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:583
msgid ""
"LVM volume groups on the device can be made visible by calling L</"
"guestfs_vgscan> followed by L</guestfs_vg_activate_all>.  The logical "
"volume(s) can now be mounted in the usual way."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:587
msgid ""
"Use the reverse process to close a LUKS device.  Unmount any logical volumes "
"on it, deactivate the volume groups by caling C<guestfs_vg_activate (g, 0, "
"[\"/dev/VG\"])>.  Then close the mapper device by calling L</"
"guestfs_luks_close> on the C</dev/mapper/mapname> device (I<not> the "
"underlying encrypted block device)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:594
msgid "MOUNT LOCAL"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:596
msgid ""
"In libguestfs E<ge> 1.18, it is possible to mount the libguestfs filesystem "
"on a local directory and access it using ordinary POSIX calls and programs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:600
msgid ""
"Availability of this is subject to a number of restrictions: it requires "
"FUSE (the Filesystem in USErspace), and libfuse must also have been "
"available when libguestfs was compiled.  FUSE may require that a kernel "
"module is loaded, and it may be necessary to add the current user to a "
"special C<fuse> group.  See the documentation for your distribution and "
"L<http://fuse.sf.net> for further information."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:607
msgid ""
"The call to mount the libguestfs filesystem on a local directory is L</"
"guestfs_mount_local> (q.v.) followed by L</guestfs_mount_local_run>.  The "
"latter does not return until you unmount the filesystem.  The reason is that "
"the call enters the FUSE main loop and processes kernel requests, turning "
"them into libguestfs calls.  An alternative design would have been to create "
"a background thread to do this, but libguestfs doesn't require pthreads.  "
"This way is also more flexible: for example the user can create another "
"thread for L</guestfs_mount_local_run>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:617
msgid ""
"L</guestfs_mount_local> needs a certain amount of time to set up the "
"mountpoint.  The mountpoint is not ready to use until the call returns.  At "
"this point, accesses to the filesystem will block until the main loop is "
"entered (ie. L</guestfs_mount_local_run>).  So if you need to start another "
"process to access the filesystem, put the fork between L</"
"guestfs_mount_local> and L</guestfs_mount_local_run>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:625
msgid "MOUNT LOCAL COMPATIBILITY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:627
msgid ""
"Since local mounting was only added in libguestfs 1.18, and may not be "
"available even in these builds, you should consider writing code so that it "
"doesn't depend on this feature, and can fall back to using libguestfs file "
"system calls."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:632
msgid ""
"If libguestfs was compiled without support for L</guestfs_mount_local> then "
"calling it will return an error with errno set to C<ENOTSUP> (see L</"
"guestfs_last_errno>)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:636
msgid "MOUNT LOCAL PERFORMANCE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:638
msgid ""
"Libguestfs on top of FUSE performs quite poorly.  For best performance do "
"not use it.  Use ordinary libguestfs filesystem calls, upload, download etc. "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:642
msgid "HOTPLUGGING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:644
msgid ""
"In libguestfs E<ge> 1.20, you may add drives and remove after calling L</"
"guestfs_launch>.  There are some restrictions, see below.  This is called "
"I<hotplugging>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:648
msgid ""
"Only a subset of the backends support hotplugging (currently only the "
"libvirt backend has support).  It also requires that you use libvirt E<ge> "
"0.10.3 and qemu E<ge> 1.2."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:652
msgid ""
"To hot-add a disk, simply call L</guestfs_add_drive_opts> after L</"
"guestfs_launch>.  It is mandatory to specify the C<label> parameter so that "
"the newly added disk has a predictable name.  For example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:656
#, no-wrap
msgid ""
" if (guestfs_launch (g) == -1)\n"
"   error (\"launch failed\");\n"
" \n"
msgstr ""
" if (guestfs_launch (g) == -1)\n"
"   error (\"launch failed\");\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:659
#, no-wrap
msgid ""
" if (guestfs_add_drive_opts (g, filename,\n"
"                             GUESTFS_ADD_DRIVE_OPTS_LABEL, \"newdisk\",\n"
"                             -1) == -1)\n"
"   error (\"hot-add of disk failed\");\n"
" \n"
msgstr ""
" if (guestfs_add_drive_opts (g, filename,\n"
"                             GUESTFS_ADD_DRIVE_OPTS_LABEL, \"newdisk\",\n"
"                             -1) == -1)\n"
"   error (\"hot-add of disk failed\");\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:664
#, no-wrap
msgid ""
" if (guestfs_part_disk (\"/dev/disk/guestfs/newdisk\", \"mbr\") == -1)\n"
"   error (\"partitioning of hot-added disk failed\");\n"
"\n"
msgstr ""
" if (guestfs_part_disk (\"/dev/disk/guestfs/newdisk\", \"mbr\") == -1)\n"
"   error (\"partitioning of hot-added disk failed\");\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:667
msgid ""
"To hot-remove a disk, call L</guestfs_remove_drive>.  You can call this "
"before or after L</guestfs_launch>.  You can only remove disks that were "
"previously added with a label."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:671
msgid ""
"Backends that support hotplugging do not require that you add E<ge> 1 disk "
"before calling launch.  When hotplugging is supported you don't need to add "
"any disks."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:675
msgid "REMOTE STORAGE"
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:677
msgid "CEPH"
msgstr "CEPH"

#. type: textblock
#: ../src/guestfs.pod:679
msgid "Libguestfs can access Ceph (librbd/RBD) disks."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:681 ../src/guestfs.pod:703 ../src/guestfs.pod:725
#: ../src/guestfs.pod:766 ../src/guestfs.pod:828
msgid ""
"To do this, set the optional C<protocol> and C<server> parameters of L</"
"guestfs_add_drive_opts> like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:684
#, no-wrap
msgid ""
" char **servers = { \"ceph1.example.org:3000\", /* ... */, NULL };\n"
" guestfs_add_drive_opts (g, \"pool/image\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"rbd\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_USERNAME, \"rbduser\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SECRET, \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n"
"                         -1);\n"
"\n"
msgstr ""
" char **servers = { \"ceph1.example.org:3000\", /* ... */, NULL };\n"
" guestfs_add_drive_opts (g, \"pool/image\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"rbd\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_USERNAME, \"rbduser\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SECRET, \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:693
msgid ""
"C<servers> (the C<server> parameter) is a list of one or more Ceph servers.  "
"The server string is documented in L</guestfs_add_drive_opts>. The "
"C<username> and C<secret> parameters are also optional, and if not given, "
"then no authentication will be used."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:698
msgid "FTP, HTTP AND TFTP"
msgstr "FTP, HTTP ТА TFTP"

#. type: textblock
#: ../src/guestfs.pod:700
msgid ""
"Libguestfs can access remote disks over FTP, FTPS, HTTP, HTTPS or TFTP "
"protocols."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:706
#, no-wrap
msgid ""
" char **servers = { \"www.example.org\", NULL };\n"
" guestfs_add_drive_opts (g, \"/disk.img\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"http\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
"                         -1);\n"
"\n"
msgstr ""
" char **servers = { \"www.example.org\", NULL };\n"
" guestfs_add_drive_opts (g, \"/disk.img\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"http\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:713
msgid ""
"The C<protocol> can be one of C<\"ftp\">, C<\"ftps\">, C<\"http\">, C<\"https"
"\"> or C<\"tftp\">."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:716
msgid ""
"C<servers> (the C<server> parameter) is a list which must have a single "
"element.  The single element is a string defining the web, FTP or TFTP "
"server.  The format of this string is documented in L</"
"guestfs_add_drive_opts>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:721
msgid "GLUSTER"
msgstr "GLUSTER"

#. type: textblock
#: ../src/guestfs.pod:723
msgid "Libguestfs can access Gluster disks."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:728
#, no-wrap
msgid ""
" char **servers = { \"gluster.example.org:24007\", NULL };\n"
" guestfs_add_drive_opts (g, \"volname/image\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"gluster\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
"                         -1);\n"
"\n"
msgstr ""
" char **servers = { \"gluster.example.org:24007\", NULL };\n"
" guestfs_add_drive_opts (g, \"volname/image\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"gluster\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:735
msgid ""
"C<servers> (the C<server> parameter) is a list which must have a single "
"element.  The single element is a string defining the Gluster server.  The "
"format of this string is documented in L</guestfs_add_drive_opts>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:740
msgid ""
"Note that gluster usually requires the client process (ie. libguestfs)  to "
"run as B<root> and will give unfathomable errors if it is not (eg. \"No data "
"available\")."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:744
msgid "ISCSI"
msgstr "ISCSI"

#. type: textblock
#: ../src/guestfs.pod:746
msgid "Libguestfs can access iSCSI disks remotely."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:748
msgid ""
"To do this, set the optional C<protocol> and C<server> parameters like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:751
#, no-wrap
msgid ""
" char **server = { \"iscsi.example.org:3000\", NULL };\n"
" guestfs_add_drive_opts (g, \"target-iqn-name/lun\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"iscsi\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
"                         -1);\n"
"\n"
msgstr ""
" char **server = { \"iscsi.example.org:3000\", NULL };\n"
" guestfs_add_drive_opts (g, \"target-iqn-name/lun\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"iscsi\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:758
msgid ""
"The C<server> parameter is a list which must have a single element.  The "
"single element is a string defining the iSCSI server.  The format of this "
"string is documented in L</guestfs_add_drive_opts>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:762
msgid "NETWORK BLOCK DEVICE"
msgstr "NETWORK BLOCK DEVICE"

#. type: textblock
#: ../src/guestfs.pod:764
msgid "Libguestfs can access Network Block Device (NBD) disks remotely."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:769
#, no-wrap
msgid ""
" char **server = { \"nbd.example.org:3000\", NULL };\n"
" guestfs_add_drive_opts (g, \"\" /* export name - see below */,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"nbd\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
"                         -1);\n"
"\n"
msgstr ""
" char **server = { \"nbd.example.org:3000\", NULL };\n"
" guestfs_add_drive_opts (g, \"\" /* export name - see below */,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"nbd\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:782
msgid ""
"C<server> is in fact a list of servers.  For NBD you must always supply a "
"list with a single element.  (Other remote protocols require zero or more "
"than one server, hence the requirement for this parameter to be a list)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:789
msgid ""
"The C<server> string is documented in L</guestfs_add_drive_opts>.  To "
"connect to a local qemu-nbd instance over a Unix domain socket, use C<"
"\"unix:/path/to/socket\">."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:795
msgid ""
"The C<filename> parameter is the NBD export name.  Use an empty string to "
"mean the default export.  Many NBD servers, including qemu-nbd, do not "
"support export names."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:801
msgid ""
"If using qemu-nbd as your server, you should always specify the C<-t> "
"option.  The reason is that libguestfs may open several connections to the "
"server."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:807
msgid ""
"The libvirt backend requires that you set the C<format> parameter of L</"
"guestfs_add_drive_opts> accurately when you use writable NBD disks."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:812
msgid ""
"The libvirt backend has a bug that stops Unix domain socket connections from "
"working: L<https://bugzilla.redhat.com/show_bug.cgi?id=922888>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:818
msgid ""
"The direct backend does not support readonly connections because of a bug in "
"qemu: L<https://bugs.launchpad.net/qemu/+bug/1155677>"
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:824
msgid "SHEEPDOG"
msgstr "SHEEPDOG"

#. type: textblock
#: ../src/guestfs.pod:826
msgid "Libguestfs can access Sheepdog disks."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:831
#, no-wrap
msgid ""
" char **servers = { /* optional servers ... */ NULL };\n"
" guestfs_add_drive_opts (g, \"volume\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"sheepdog\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
"                         -1);\n"
"\n"
msgstr ""
" char **servers = { /* optional servers ... */ NULL };\n"
" guestfs_add_drive_opts (g, \"volume\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"sheepdog\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:838
msgid ""
"The optional list of C<servers> may be zero or more server addresses (C<"
"\"hostname:port\">).  The format of the server strings is documented in L</"
"guestfs_add_drive_opts>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:842
msgid "SSH"
msgstr "SSH"

#. type: textblock
#: ../src/guestfs.pod:844
msgid "Libguestfs can access disks over a Secure Shell (SSH) connection."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:846
msgid ""
"To do this, set the C<protocol> and C<server> and (optionally)  C<username> "
"parameters of L</guestfs_add_drive_opts> like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:849
#, no-wrap
msgid ""
" char **server = { \"remote.example.com\", NULL };\n"
" guestfs_add_drive_opts (g, \"/path/to/disk.img\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"ssh\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_USERNAME, \"remoteuser\",\n"
"                         -1);\n"
"\n"
msgstr ""
" char **server = { \"remote.example.com\", NULL };\n"
" guestfs_add_drive_opts (g, \"/path/to/disk.img\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"ssh\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_USERNAME, \"remoteuser\",\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:857
msgid ""
"The format of the server string is documented in L</guestfs_add_drive_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:860
msgid "INSPECTION"
msgstr "ПЕРЕВІРКА"

#. type: textblock
#: ../src/guestfs.pod:862
msgid ""
"Libguestfs has APIs for inspecting an unknown disk image to find out if it "
"contains operating systems, an install CD or a live CD."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:865
msgid ""
"Add all disks belonging to the unknown virtual machine and call L</"
"guestfs_launch> in the usual way."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:868
msgid ""
"Then call L</guestfs_inspect_os>.  This function uses other libguestfs calls "
"and certain heuristics, and returns a list of operating systems that were "
"found.  An empty list means none were found.  A single element is the root "
"filesystem of the operating system.  For dual- or multi-boot guests, "
"multiple roots can be returned, each one corresponding to a separate "
"operating system.  (Multi-boot virtual machines are extremely rare in the "
"world of virtualization, but since this scenario can happen, we have built "
"libguestfs to deal with it.)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:877
msgid ""
"For each root, you can then call various C<guestfs_inspect_get_*> functions "
"to get additional details about that operating system.  For example, call L</"
"guestfs_inspect_get_type> to return the string C<windows> or C<linux> for "
"Windows and Linux-based operating systems respectively."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:883
msgid ""
"Un*x-like and Linux-based operating systems usually consist of several "
"filesystems which are mounted at boot time (for example, a separate boot "
"partition mounted on C</boot>).  The inspection rules are able to detect how "
"filesystems correspond to mount points.  Call "
"C<guestfs_inspect_get_mountpoints> to get this mapping.  It might return a "
"hash table like this example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:890
#, no-wrap
msgid ""
" /boot => /dev/sda1\n"
" /     => /dev/vg_guest/lv_root\n"
" /usr  => /dev/vg_guest/lv_usr\n"
"\n"
msgstr ""
" /boot => /dev/sda1\n"
" /     => /dev/vg_guest/lv_root\n"
" /usr  => /dev/vg_guest/lv_usr\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:894
msgid ""
"The caller can then make calls to L</guestfs_mount> to mount the filesystems "
"as suggested."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:897
msgid ""
"Be careful to mount filesystems in the right order (eg. C</> before C</"
"usr>).  Sorting the keys of the hash by length, shortest first, should work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:901
msgid ""
"Inspection currently only works for some common operating systems.  "
"Contributors are welcome to send patches for other operating systems that we "
"currently cannot detect."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:905
msgid ""
"Encrypted disks must be opened before inspection.  See L</ENCRYPTED DISKS> "
"for more details.  The L</guestfs_inspect_os> function just ignores any "
"encrypted devices."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:909
msgid ""
"A note on the implementation: The call L</guestfs_inspect_os> performs "
"inspection and caches the results in the guest handle.  Subsequent calls to "
"C<guestfs_inspect_get_*> return this cached information, but I<do not> re-"
"read the disks.  If you change the content of the guest disks, you can redo "
"inspection by calling L</guestfs_inspect_os> again.  (L</"
"guestfs_inspect_list_applications2> works a little differently from the "
"other calls and does read the disks.  See documentation for that function "
"for details)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:918
msgid "INSPECTING INSTALL DISKS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:920
msgid ""
"Libguestfs (since 1.9.4) can detect some install disks, install CDs, live "
"CDs and more."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:923
msgid ""
"Call L</guestfs_inspect_get_format> to return the format of the operating "
"system, which currently can be C<installed> (a regular operating system) or "
"C<installer> (some sort of install disk)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:927
msgid ""
"Further information is available about the operating system that can be "
"installed using the regular inspection APIs like L</"
"guestfs_inspect_get_product_name>, L</guestfs_inspect_get_major_version> etc."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:932
msgid ""
"Some additional information specific to installer disks is also available "
"from the L</guestfs_inspect_is_live>, L</guestfs_inspect_is_netinst> and L</"
"guestfs_inspect_is_multipart> calls."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:937
msgid "SPECIAL CONSIDERATIONS FOR WINDOWS GUESTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:939
msgid ""
"Libguestfs can mount NTFS partitions.  It does this using the L<http://www."
"ntfs-3g.org/> driver."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:942
msgid "DRIVE LETTERS AND PATHS"
msgstr "ЛІТЕРИ ДИСКІВ ТА ШЛЯХИ"

#. type: textblock
#: ../src/guestfs.pod:944
msgid ""
"DOS and Windows still use drive letters, and the filesystems are always "
"treated as case insensitive by Windows itself, and therefore you might find "
"a Windows configuration file referring to a path like C<c:\\windows"
"\\system32>.  When the filesystem is mounted in libguestfs, that directory "
"might be referred to as C</WINDOWS/System32>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:950
msgid ""
"Drive letter mappings can be found using inspection (see L</INSPECTION> and "
"L</guestfs_inspect_get_drive_mappings>)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:953
msgid ""
"Dealing with separator characters (backslash vs forward slash) is outside "
"the scope of libguestfs, but usually a simple character replacement will "
"work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:957
msgid ""
"To resolve the case insensitivity of paths, call L</"
"guestfs_case_sensitive_path>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:960
msgid "LONG FILENAMES ON NTFS"
msgstr "ДОВГІ НАЗВИ ФАЙЛІВ У NTFS"

#. type: textblock
#: ../src/guestfs.pod:962
msgid ""
"NTFS supports filenames up to 255 characters long.  \"Character\" means a 2 "
"byte UTF-16 codepoint which can encode the most common Unicode codepoints."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:966
msgid ""
"Most Linux filesystems support filenames up to 255 I<bytes>.  This means you "
"may get an error:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:969
#, no-wrap
msgid ""
" File name too long\n"
"\n"
msgstr ""
" File name too long\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:971
msgid ""
"when you copy a file from NTFS to a Linux filesystem if the name, when "
"reencoded as UTF-8, would exceed 255 bytes in length."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:974
msgid ""
"This will most often happen when using non-ASCII names that are longer than "
"~127 characters (eg. Greek, Cyrillic) or longer than ~85 characters (Asian "
"languages)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:978
msgid ""
"A workaround is not to try to store such long filenames on Linux native "
"filesystems.  Since the L<tar(1)> format can store unlimited length "
"filenames, keep the files in a tarball."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:982
msgid "ACCESSING THE WINDOWS REGISTRY"
msgstr "ДОСТУП ДО РЕГІСТРУ WINDOWS"

#. type: textblock
#: ../src/guestfs.pod:984
msgid ""
"Libguestfs also provides some help for decoding Windows Registry \"hive\" "
"files, through a separate C library called L<hivex(3)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:987
msgid ""
"Before libguestfs 1.19.35 you had to download the hive file, operate on it "
"locally using hivex, and upload it again.  Since this version, we have "
"included the major hivex APIs directly in the libguestfs API (see L</"
"guestfs_hivex_open>).  This means that if you have opened a Windows guest, "
"you can read and write the registry directly."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:993
msgid "See also L<virt-win-reg(1)>."
msgstr "Див. також L<virt-win-reg(1)>."

#. type: =head3
#: ../src/guestfs.pod:995
msgid "SYMLINKS ON NTFS-3G FILESYSTEMS"
msgstr "СИМВОЛІЧНІ ПОСИЛАННЯ У ФАЙЛОВИХ СИСТЕМАХ NTFS-3G"

#. type: textblock
#: ../src/guestfs.pod:997
msgid ""
"Ntfs-3g tries to rewrite \"Junction Points\" and NTFS \"symbolic links\" to "
"provide something which looks like a Linux symlink.  The way it tries to do "
"the rewriting is described here:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1001
msgid ""
"L<http://www.tuxera.com/community/ntfs-3g-advanced/junction-points-and-"
"symbolic-links/>"
msgstr ""
"L<http://www.tuxera.com/community/ntfs-3g-advanced/junction-points-and-"
"symbolic-links/>"

#. type: textblock
#: ../src/guestfs.pod:1003
msgid ""
"The essential problem is that ntfs-3g simply does not have enough "
"information to do a correct job.  NTFS links can contain drive letters and "
"references to external device GUIDs that ntfs-3g has no way of resolving.  "
"It is almost certainly the case that libguestfs callers should ignore what "
"ntfs-3g does (ie. don't use L</guestfs_readlink> on NTFS volumes)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1010
msgid ""
"Instead if you encounter a symbolic link on an ntfs-3g filesystem, use L</"
"guestfs_lgetxattr> to read the C<system.ntfs_reparse_data> extended "
"attribute, and read the raw reparse data from that (you can find the format "
"documented in various places around the web)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1015
msgid "EXTENDED ATTRIBUTES ON NTFS-3G FILESYSTEMS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1017
msgid ""
"There are other useful extended attributes that can be read from ntfs-3g "
"filesystems (using L</guestfs_getxattr>).  See:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1020
msgid ""
"L<http://www.tuxera.com/community/ntfs-3g-advanced/extended-attributes/>"
msgstr ""
"L<http://www.tuxera.com/community/ntfs-3g-advanced/extended-attributes/>"

#. type: =head3
#: ../src/guestfs.pod:1022
msgid "WINDOWS HIBERNATION AND WINDOWS 8 FAST STARTUP"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1024
msgid ""
"Windows guests which have been hibernated (instead of fully shut down)  "
"cannot be mounted.  This is a limitation of ntfs-3g.  You will see an error "
"like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1028
#, no-wrap
msgid ""
" The disk contains an unclean file system (0, 0).\n"
" Metadata kept in Windows cache, refused to mount.\n"
" Failed to mount '/dev/sda2': Operation not permitted\n"
" The NTFS partition is in an unsafe state. Please resume\n"
" and shutdown Windows fully (no hibernation or fast\n"
" restarting), or mount the volume read-only with the\n"
" 'ro' mount option.\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1036
msgid ""
"In Windows 8, the shutdown button does not shut down the guest at all.  "
"Instead it usually hibernates the guest.  This is known as \"fast startup\"."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1040
msgid "Some suggested workarounds are:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1046
msgid "Mount read-only (eg. L</guestfs_mount_ro>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1050
msgid ""
"On Windows 8, turn off fast startup.  It is in the Control Panel → Power "
"Options → Choose what the power buttons do → Change settings that are "
"currently unavailable → Turn on fast startup."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1056
msgid ""
"On Windows 7 and earlier, shut the guest off properly instead of hibernating "
"it."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1061
msgid "RESIZE2FS ERRORS"
msgstr "ПОМИЛКИ RESIZE2FS"

#. type: textblock
#: ../src/guestfs.pod:1063
msgid ""
"The L</guestfs_resize2fs>, L</guestfs_resize2fs_size> and L</"
"guestfs_resize2fs_M> calls are used to resize ext2/3/4 filesystems."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1066
msgid ""
"The underlying program (L<resize2fs(8)>) requires that the filesystem is "
"clean and recently fsck'd before you can resize it.  Also, if the resize "
"operation fails for some reason, then you had to call fsck the filesystem "
"again to fix it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1071
msgid ""
"In libguestfs C<lt> 1.17.14, you usually had to call L</guestfs_e2fsck_f> "
"before the resize.  However, in C<ge> 1.17.14, L<e2fsck(8)> is called "
"automatically before the resize, so you no longer need to do this."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1076
msgid ""
"The L<resize2fs(8)> program can still fail, in which case it prints an error "
"message similar to:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1079
#, no-wrap
msgid ""
" Please run 'e2fsck -fy <device>' to fix the filesystem\n"
" after the aborted resize operation.\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1082
msgid ""
"You can do this by calling L</guestfs_e2fsck> with the C<forceall> option.  "
"However in the context of disk images, it is usually better to avoid this "
"situation, eg. by rolling back to an earlier snapshot, or by copying and "
"resizing and on failure going back to the original."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1087
msgid "USING LIBGUESTFS WITH OTHER PROGRAMMING LANGUAGES"
msgstr "ВИКОРИСТАННЯ LIBGUESTFS ЗА ДОПОМОГОЮ ІНШИХ МОВ ПРОГРАМУВАННЯ"

#. type: textblock
#: ../src/guestfs.pod:1089
msgid ""
"Although we don't want to discourage you from using the C API, we will "
"mention here that the same API is also available in other languages."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1092
msgid ""
"The API is broadly identical in all supported languages.  This means that "
"the C call C<guestfs_add_drive_ro(g,file)> is C<$g-E<gt>add_drive_ro($file)> "
"in Perl, C<g.add_drive_ro(file)> in Python, and C<g#add_drive_ro file> in "
"OCaml.  In other words, a straightforward, predictable isomorphism between "
"each language."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1098
msgid ""
"Error messages are automatically transformed into exceptions if the language "
"supports it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1101
msgid ""
"We don't try to \"object orientify\" parts of the API in OO languages, "
"although contributors are welcome to write higher level APIs above what we "
"provide in their favourite languages if they wish."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1107
msgid "B<C++>"
msgstr "B<C++>"

#. type: textblock
#: ../src/guestfs.pod:1109
msgid ""
"You can use the I<guestfs.h> header file from C++ programs.  The C++ API is "
"identical to the C API.  C++ classes and exceptions are not used."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1113
msgid "B<C#>"
msgstr "B<C#>"

#. type: textblock
#: ../src/guestfs.pod:1115
msgid ""
"The C# bindings are highly experimental.  Please read the warnings at the "
"top of C<csharp/Libguestfs.cs>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1118
msgid "B<Erlang>"
msgstr "B<Erlang>"

#. type: textblock
#: ../src/guestfs.pod:1120
msgid "See L<guestfs-erlang(3)>."
msgstr "Див. L<guestfs-erlang(3)>."

#. type: =item
#: ../src/guestfs.pod:1122
msgid "B<GObject>"
msgstr "B<GObject>"

#. type: textblock
#: ../src/guestfs.pod:1124
msgid ""
"Experimental GObject bindings (with GObject Introspection support) are "
"available.  See the C<gobject> directory in the source."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1127
msgid "B<Go>"
msgstr "B<Go>"

#. type: textblock
#: ../src/guestfs.pod:1129
msgid "See <guestfs-golang(3)>."
msgstr "Див. <guestfs-golang(3)>."

#. type: =item
#: ../src/guestfs.pod:1131
msgid "B<Haskell>"
msgstr "B<Haskell>"

#. type: textblock
#: ../src/guestfs.pod:1133
msgid "This language binding is working but incomplete:"
msgstr "Ця прив’язка до мови працює, але є неповною:"

#. type: textblock
#: ../src/guestfs.pod:1139
msgid ""
"Functions with optional arguments are not bound.  Implementing optional "
"arguments in Haskell seems to be very complex."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1144
msgid "Events are not bound."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1148
msgid "Functions with the following return types are not bound:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1154
msgid "Any function returning a struct."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1158
msgid "Any function returning a list of structs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1162
msgid ""
"A few functions that return fixed length buffers (specifically ones declared "
"C<RBufferOut> in the generator)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1167
msgid ""
"A tiny number of obscure functions that return constant strings "
"(specifically ones declared C<RConstOptString> in the generator)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1174
msgid "B<Java>"
msgstr "B<Java>"

#. type: textblock
#: ../src/guestfs.pod:1176
msgid ""
"Full documentation is contained in the Javadoc which is distributed with "
"libguestfs.  For examples, see L<guestfs-java(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1179
msgid "B<Lua>"
msgstr "B<Lua>"

#. type: textblock
#: ../src/guestfs.pod:1181
msgid "See L<guestfs-lua(3)>."
msgstr "Див. L<guestfs-lua(3)>."

#. type: =item
#: ../src/guestfs.pod:1183
msgid "B<OCaml>"
msgstr "B<OCaml>"

#. type: textblock
#: ../src/guestfs.pod:1185
msgid "See L<guestfs-ocaml(3)>."
msgstr "Див. L<guestfs-ocaml(3)>."

#. type: =item
#: ../src/guestfs.pod:1187
msgid "B<Perl>"
msgstr "B<Perl>"

#. type: textblock
#: ../src/guestfs.pod:1189
msgid "See L<guestfs-perl(3)> and L<Sys::Guestfs(3)>."
msgstr "Див. L<guestfs-perl(3)> та L<Sys::Guestfs(3)>."

#. type: =item
#: ../src/guestfs.pod:1191
msgid "B<PHP>"
msgstr "B<PHP>"

#. type: textblock
#: ../src/guestfs.pod:1193
msgid ""
"For documentation see C<README-PHP> supplied with libguestfs sources or in "
"the php-libguestfs package for your distribution."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1196
msgid "The PHP binding only works correctly on 64 bit machines."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1198
msgid "B<Python>"
msgstr "B<Python>"

#. type: textblock
#: ../src/guestfs.pod:1200
msgid "See L<guestfs-python(3)>."
msgstr "Див. L<guestfs-python(3)>."

#. type: =item
#: ../src/guestfs.pod:1202
msgid "B<Ruby>"
msgstr "B<Ruby>"

#. type: textblock
#: ../src/guestfs.pod:1204
msgid "See L<guestfs-ruby(3)>."
msgstr "Див. L<guestfs-ruby(3)>."

#. type: textblock
#: ../src/guestfs.pod:1206
msgid "For JRuby, use the Java bindings."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1208
msgid "B<shell scripts>"
msgstr "B<скрипти оболонки>"

#. type: textblock
#: ../src/guestfs.pod:1210
msgid "See L<guestfish(1)>."
msgstr "Див. L<guestfish(1)>."

#. type: =head2
#: ../src/guestfs.pod:1214
msgid "LIBGUESTFS GOTCHAS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1216
msgid ""
"L<http://en.wikipedia.org/wiki/Gotcha_(programming)>: \"A feature of a "
"system [...] that works in the way it is documented but is counterintuitive "
"and almost invites mistakes.\""
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1220
msgid ""
"Since we developed libguestfs and the associated tools, there are several "
"things we would have designed differently, but are now stuck with for "
"backwards compatibility or other reasons.  If there is ever a libguestfs 2.0 "
"release, you can expect these to change.  Beware of them."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1228
msgid "Read-only should be the default."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1230
msgid ""
"In L<guestfish(3)>, I<--ro> should be the default, and you should have to "
"specify I<--rw> if you want to make changes to the image."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1233
msgid "This would reduce the potential to corrupt live VM images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1235
msgid ""
"Note that many filesystems change the disk when you just mount and unmount, "
"even if you didn't perform any writes.  You need to use L</"
"guestfs_add_drive_ro> to guarantee that the disk is not changed."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1239
msgid "guestfish command line is hard to use."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1241
msgid ""
"C<guestfish disk.img> doesn't do what people expect (open C<disk.img> for "
"examination).  It tries to run a guestfish command C<disk.img> which doesn't "
"exist, so it fails.  In earlier versions of guestfish the error message was "
"also unintuitive, but we have corrected this since.  Like the Bourne shell, "
"we should have used C<guestfish -c command> to run commands."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1248
msgid "guestfish megabyte modifiers don't work right on all commands"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1250
msgid ""
"In recent guestfish you can use C<1M> to mean 1 megabyte (and similarly for "
"other modifiers).  What guestfish actually does is to multiply the number "
"part by the modifier part and pass the result to the C API.  However this "
"doesn't work for a few APIs which aren't expecting bytes, but are already "
"expecting some other unit (eg. megabytes)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1257
msgid "The most common is L</guestfs_lvcreate>.  The guestfish command:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1259
#, no-wrap
msgid ""
" lvcreate LV VG 100M\n"
"\n"
msgstr ""
" lvcreate LV VG 100M\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1261
msgid ""
"does not do what you might expect.  Instead because L</guestfs_lvcreate> is "
"already expecting megabytes, this tries to create a 100 I<terabyte> (100 "
"megabytes * megabytes) logical volume.  The error message you get from this "
"is also a little obscure."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1266
msgid ""
"This could be fixed in the generator by specially marking parameters and "
"return values which take bytes or other units."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1269
msgid "Ambiguity between devices and paths"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1271
msgid ""
"There is a subtle ambiguity in the API between a device name (eg. C</dev/"
"sdb2>) and a similar pathname.  A file might just happen to be called "
"C<sdb2> in the directory C</dev> (consider some non-Unix VM image)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1276
msgid ""
"In the current API we usually resolve this ambiguity by having two separate "
"calls, for example L</guestfs_checksum> and L</guestfs_checksum_device>.  "
"Some API calls are ambiguous and (incorrectly) resolve the problem by "
"detecting if the path supplied begins with C</dev/>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1282
msgid ""
"To avoid both the ambiguity and the need to duplicate some calls, we could "
"make paths/devices into structured names.  One way to do this would be to "
"use a notation like grub (C<hd(0,0)>), although nobody really likes this "
"aspect of grub.  Another way would be to use a structured type, equivalent "
"to this OCaml type:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1288
#, no-wrap
msgid ""
" type path = Path of string | Device of int | Partition of int * int\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1290
msgid "which would allow you to pass arguments like:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1292
#, no-wrap
msgid ""
" Path \"/foo/bar\"\n"
" Device 1            (* /dev/sdb, or perhaps /dev/sda *)\n"
" Partition (1, 2)    (* /dev/sdb2 (or is it /dev/sda2 or /dev/sdb3?) *)\n"
" Path \"/dev/sdb2\"    (* not a device *)\n"
"\n"
msgstr ""
" Path \"/foo/bar\"\n"
" Device 1            (* /dev/sdb або, можливо, /dev/sda *)\n"
" Partition (1, 2)    (* /dev/sdb2 (або /dev/sda2, або /dev/sdb3?) *)\n"
" Path \"/dev/sdb2\"    (* не є пристроєм *)\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1297
msgid ""
"As you can see there are still problems to resolve even with this "
"representation.  Also consider how it might work in guestfish."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1302
msgid "KEYS AND PASSPHRASES"
msgstr "КЛЮЧІ І ПАРОЛІ"

#. type: textblock
#: ../src/guestfs.pod:1304
msgid ""
"Certain libguestfs calls take a parameter that contains sensitive key "
"material, passed in as a C string."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1307
msgid ""
"In the future we would hope to change the libguestfs implementation so that "
"keys are L<mlock(2)>-ed into physical RAM, and thus can never end up in "
"swap.  However this is I<not> done at the moment, because of the complexity "
"of such an implementation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1312
msgid ""
"Therefore you should be aware that any key parameter you pass to libguestfs "
"might end up being written out to the swap partition.  If this is a concern, "
"scrub the swap partition or don't use libguestfs on encrypted devices."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1317
msgid "MULTIPLE HANDLES AND MULTIPLE THREADS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1319
msgid ""
"All high-level libguestfs actions are synchronous.  If you want to use "
"libguestfs asynchronously then you must create a thread."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1322
msgid ""
"Only use the handle from a single thread.  Either use the handle exclusively "
"from one thread, or provide your own mutex so that two threads cannot issue "
"calls on the same handle at the same time.  Even apparently innocent "
"functions like L</guestfs_get_trace> are I<not> safe to be called from "
"multiple threads without a mutex."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1328
msgid ""
"See the graphical program guestfs-browser for one possible architecture for "
"multithreaded programs using libvirt and libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1333
msgid ""
"Libguestfs needs a supermin appliance, which it finds by looking along an "
"internal path."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1336
msgid ""
"By default it looks for these in the directory C<$libdir/guestfs> (eg. C</"
"usr/local/lib/guestfs> or C</usr/lib64/guestfs>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1339
msgid ""
"Use L</guestfs_set_path> or set the environment variable L</LIBGUESTFS_PATH> "
"to change the directories that libguestfs will search in.  The value is a "
"colon-separated list of paths.  The current directory is I<not> searched "
"unless the path contains an empty element or C<.>.  For example "
"C<LIBGUESTFS_PATH=:/usr/lib/guestfs> would search the current directory and "
"then C</usr/lib/guestfs>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1346
msgid "QEMU WRAPPERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1348
msgid ""
"If you want to compile your own qemu, run qemu from a non-standard location, "
"or pass extra arguments to qemu, then you can write a shell-script wrapper "
"around qemu."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1352
msgid ""
"There is one important rule to remember: you I<must C<exec qemu>> as the "
"last command in the shell script (so that qemu replaces the shell and "
"becomes the direct child of the libguestfs-using program).  If you don't do "
"this, then the qemu process won't be cleaned up correctly."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1357
msgid ""
"Here is an example of a wrapper, where I have built my own copy of qemu from "
"source:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1360
#, no-wrap
msgid ""
" #!/bin/sh -\n"
" qemudir=/home/rjones/d/qemu\n"
" exec $qemudir/x86_64-softmmu/qemu-system-x86_64 -L $qemudir/pc-bios \"$@\"\n"
"\n"
msgstr ""
" #!/bin/sh -\n"
" qemudir=/home/rjones/d/qemu\n"
" exec $qemudir/x86_64-softmmu/qemu-system-x86_64 -L $qemudir/pc-bios \"$@\"\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1364
msgid ""
"Save this script as C</tmp/qemu.wrapper> (or wherever), C<chmod +x>, and "
"then use it by setting the LIBGUESTFS_HV environment variable.  For example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1368
#, no-wrap
msgid ""
" LIBGUESTFS_HV=/tmp/qemu.wrapper guestfish\n"
"\n"
msgstr ""
" LIBGUESTFS_HV=/tmp/qemu.wrapper guestfish\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1370
msgid ""
"Note that libguestfs also calls qemu with the -help and -version options in "
"order to determine features."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1373
msgid ""
"Wrappers can also be used to edit the options passed to qemu.  In the "
"following example, the C<-machine ...> option (C<-machine> and the following "
"argument) are removed from the command line and replaced with C<-machine pc,"
"accel=tcg>.  The while loop iterates over the options until it finds the "
"right one to remove, putting the remaining options into the C<args> array."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1382
#, no-wrap
msgid ""
" i=0\n"
" while [ $# -gt 0 ]; do\n"
"     case \"$1\" in\n"
"     -machine)\n"
"         shift 2;;\n"
"     *)\n"
"         args[i]=\"$1\"\n"
"         (( i++ ))\n"
"         shift ;;\n"
"     esac\n"
" done\n"
" \n"
msgstr ""
" i=0\n"
" while [ $# -gt 0 ]; do\n"
"     case \"$1\" in\n"
"     -machine)\n"
"         shift 2;;\n"
"     *)\n"
"         args[i]=\"$1\"\n"
"         (( i++ ))\n"
"         shift ;;\n"
"     esac\n"
" done\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:1394
#, no-wrap
msgid ""
" exec qemu-kvm -machine pc,accel=tcg \"${args[@]}\"\n"
"\n"
msgstr ""
" exec qemu-kvm -machine pc,accel=tcg \"${args[@]}\"\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1398
msgid "<!-- old anchor for the next section --> <a name=\"attach-method\"/>"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1403
msgid "BACKEND"
msgstr "МОДУЛЬ"

#. type: textblock
#: ../src/guestfs.pod:1405
msgid ""
"The backend (previously known as the \"attach method\") controls how "
"libguestfs creates and/or connects to the backend daemon, eg. by starting "
"qemu directly, or using libvirt to manage an appliance, running User-Mode "
"Linux, or connecting to an already running daemon."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1410
msgid ""
"You can set the backend by calling L</guestfs_set_backend>, or by setting "
"the environment variable C<LIBGUESTFS_BACKEND>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1413
msgid "Possible backends are described below:"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1417
msgid "C<direct>"
msgstr "C<direct>"

#. type: =item
#: ../src/guestfs.pod:1419 ../src/guestfs.pod:4275
msgid "C<appliance>"
msgstr "C<appliance>"

#. type: textblock
#: ../src/guestfs.pod:1421
msgid "Run qemu directly to launch an appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1423
msgid "C<direct> and C<appliance> are synonyms."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1425
msgid ""
"This is the ordinary method and normally the default, but see the note below."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1428
msgid "C<libvirt>"
msgstr "C<libvirt>"

#. type: =item
#: ../src/guestfs.pod:1430
msgid "C<libvirt:null>"
msgstr "C<libvirt:null>"

#. type: =item
#: ../src/guestfs.pod:1432
msgid "C<libvirt:I<URI>>"
msgstr "C<libvirt:I<URI>>"

#. type: textblock
#: ../src/guestfs.pod:1434
msgid "Use libvirt to launch and manage the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1436
msgid ""
"C<libvirt> causes libguestfs to choose a suitable URI for creating session "
"guests.  If using the libvirt backend, you almost always should use this."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1440
msgid ""
"C<libvirt:null> causes libguestfs to use the C<NULL> connection URI, which "
"causes libvirt to try to guess what the user meant.  You probably don't want "
"to use this."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1444
msgid ""
"C<libvirt:I<URI>> uses I<URI> as the libvirt connection URI (see L<http://"
"libvirt.org/uri.html>).  The typical libvirt backend with a URI would be "
"C<libvirt:qemu:///session>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1448
msgid ""
"The libvirt backend supports more features, including hotplugging (see L</"
"HOTPLUGGING>) and sVirt."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1451
msgid "C<uml>"
msgstr "C<uml>"

#. type: textblock
#: ../src/guestfs.pod:1453
msgid ""
"Run the User-Mode Linux kernel.  The location of the kernel is set using C<"
"$LIBGUESTFS_HV> or using the L</guestfs_set_qemu> API (note that qemu is not "
"involved, we just reuse the same variable in the handle for convenience)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1458
msgid ""
"User-Mode Linux can be much faster, simpler and more lightweight than using "
"a full-blown virtual machine, but it also has some shortcomings.  See L</"
"USER-MODE LINUX BACKEND> below."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1462
msgid "C<unix:I<path>>"
msgstr "C<unix:I<шлях>>"

#. type: textblock
#: ../src/guestfs.pod:1464
msgid "Connect to the Unix domain socket I<path>."
msgstr "Встановити з’єднання з сокетом домену Unix I<шлях>."

#. type: textblock
#: ../src/guestfs.pod:1466
msgid ""
"This method lets you connect to an existing daemon or (using virtio-serial) "
"to a live guest.  For more information, see L</ATTACHING TO RUNNING DAEMONS>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1472
msgid ""
"C<direct> is usually the default backend.  However since libguestfs E<ge> "
"1.19.24, libguestfs can be built with a different default by doing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1476
#, no-wrap
msgid ""
" ./configure --with-default-backend=...\n"
"\n"
msgstr ""
" ./configure --with-default-backend=...\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1478
msgid ""
"To find out if libguestfs was compiled with a different default backend, do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1481 ../test-tool/libguestfs-test-tool.pod:95
#: ../test-tool/libguestfs-test-tool.pod:116
#: ../test-tool/libguestfs-test-tool.pod:139
#, no-wrap
msgid ""
" unset LIBGUESTFS_BACKEND\n"
" guestfish get-backend\n"
"\n"
msgstr ""
" unset LIBGUESTFS_BACKEND\n"
" guestfish get-backend\n"
"\n"

#. type: =head2
#: ../src/guestfs.pod:1484
msgid "BACKEND SETTINGS"
msgstr "ПАРАМЕТРИ МОДУЛІВ"

#. type: textblock
#: ../src/guestfs.pod:1486
msgid ""
"Each backend can be configured by passing a list of strings.  You can either "
"call L</guestfs_set_backend_settings> with a list of strings, or set the "
"C<LIBGUESTFS_BACKEND_SETTINGS> environment variable to a colon-separated "
"list of strings (before creating the handle)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1491
msgid "force_tcg"
msgstr "force_tcg"

#. type: textblock
#: ../src/guestfs.pod:1493
msgid "Using:"
msgstr "Використовується:"

#. type: verbatim
#: ../src/guestfs.pod:1495
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND_SETTINGS=force_tcg\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1497
msgid ""
"will force the direct and libvirt backends to use TCG (software emulation) "
"instead of KVM (hardware accelerated virtualization)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1500
msgid "gdb"
msgstr "gdb"

#. type: textblock
#: ../src/guestfs.pod:1502
msgid "The direct backend supports:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1504
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND_SETTINGS=gdb\n"
"\n"
msgstr ""
" export LIBGUESTFS_BACKEND_SETTINGS=gdb\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1506
msgid ""
"When this is set, qemu will not start running the appliance immediately.  It "
"will wait for you to connect to it using gdb:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1509
#, no-wrap
msgid ""
" $ gdb\n"
" (gdb) symbol-file /path/to/vmlinux\n"
" (gdb) target remote tcp::1234\n"
" (gdb) cont\n"
"\n"
msgstr ""
" $ gdb\n"
" (gdb) symbol-file /path/to/vmlinux\n"
" (gdb) target remote tcp::1234\n"
" (gdb) cont\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1514
msgid ""
"You can then debug the appliance kernel, which is useful to debug boot "
"failures (especially ones where there are no debug messages printed - tip: "
"look in the kernel C<log_buf>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1518
msgid ""
"On Fedora, install C<kernel-debuginfo> for the C<vmlinux> file (containing "
"symbols).  Make sure the symbols precisely match the kernel being used."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1522
msgid "network_bridge"
msgstr "network_bridge"

#. type: textblock
#: ../src/guestfs.pod:1524
msgid "The libvirt backend supports:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1526
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND_SETTINGS=network_bridge=virbrX\n"
"\n"
msgstr ""
" export LIBGUESTFS_BACKEND_SETTINGS=network_bridge=virbrX\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1528
msgid ""
"This allows you to override the bridge that is connected to when the network "
"is enabled.  The default is C<virbr0>.  See also L</guestfs_set_network>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1532
msgid "ATTACHING TO RUNNING DAEMONS"
msgstr "ДОЛУЧЕННЯ ДО ЗАПУЩЕНИХ ФОНОВИХ СЛУЖБ"

#. type: textblock
#: ../src/guestfs.pod:1534
msgid ""
"I<Note (1):> This is B<highly experimental> and has a tendency to eat "
"babies.  Use with caution."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1537
msgid ""
"I<Note (2):> This section explains how to attach to a running daemon from a "
"low level perspective.  For most users, simply using virt tools such as "
"L<guestfish(1)> with the I<--live> option will \"just work\"."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1541
msgid "Using guestfs_set_backend"
msgstr "Використання guestfs_set_backend"

#. type: textblock
#: ../src/guestfs.pod:1543
msgid ""
"By calling L</guestfs_set_backend> you can change how the library connects "
"to the C<guestfsd> daemon in L</guestfs_launch> (read L</ARCHITECTURE> for "
"some background)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1547
msgid ""
"The normal backend is C<direct>, where a small appliance is created "
"containing the daemon, and then the library connects to this.  C<libvirt> or "
"C<libvirt:I<URI>> are alternatives that use libvirt to start the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1552
msgid ""
"Setting the backend to C<unix:I<path>> (where I<path> is the path of a Unix "
"domain socket) causes L</guestfs_launch> to connect to an existing daemon "
"over the Unix domain socket."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1556
msgid ""
"The normal use for this is to connect to a running virtual machine that "
"contains a C<guestfsd> daemon, and send commands so you can read and write "
"files inside the live virtual machine."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1560
msgid "Using guestfs_add_domain with live flag"
msgstr "За допомогою guestfs_add_domain з прапорцем live"

#. type: textblock
#: ../src/guestfs.pod:1562
msgid ""
"L</guestfs_add_domain> provides some help for getting the correct backend.  "
"If you pass the C<live> option to this function, then (if the virtual "
"machine is running) it will examine the libvirt XML looking for a virtio-"
"serial channel to connect to:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1567
#, no-wrap
msgid ""
" <domain>\n"
"   ...\n"
"   <devices>\n"
"     ...\n"
"     <channel type='unix'>\n"
"       <source mode='bind' path='/path/to/socket'/>\n"
"       <target type='virtio' name='org.libguestfs.channel.0'/>\n"
"     </channel>\n"
"     ...\n"
"   </devices>\n"
" </domain>\n"
"\n"
msgstr ""
" <domain>\n"
"   ...\n"
"   <devices>\n"
"     ...\n"
"     <channel type='unix'>\n"
"       <source mode='bind' path='/path/to/socket'/>\n"
"       <target type='virtio' name='org.libguestfs.channel.0'/>\n"
"     </channel>\n"
"     ...\n"
"   </devices>\n"
" </domain>\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1579
msgid ""
"L</guestfs_add_domain> extracts C</path/to/socket> and sets the backend to "
"C<unix:/path/to/socket>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1582
msgid ""
"Some of the libguestfs tools (including guestfish) support a I<--live> "
"option which is passed through to L</guestfs_add_domain> thus allowing you "
"to attach to and modify live virtual machines."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1586
msgid ""
"The virtual machine needs to have been set up beforehand so that it has the "
"virtio-serial channel and so that guestfsd is running inside it."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1590
msgid "USER-MODE LINUX BACKEND"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1592
msgid ""
"Setting the following environment variables (or the equivalent in the API) "
"selects the User-Mode Linux backend:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1595
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND=uml\n"
" export LIBGUESTFS_HV=/path/to/vmlinux\n"
"\n"
msgstr ""
" export LIBGUESTFS_BACKEND=uml\n"
" export LIBGUESTFS_HV=/шлях/до/vmlinux\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1598
msgid ""
"C<vmlinux> (or it may be called C<linux>) is the Linux binary, compiled to "
"run as a userspace process.  Note that we reuse the qemu variable in the "
"handle for convenience; qemu is not involved."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1602
msgid ""
"User-Mode Linux can be faster and more lightweight than running a full-blown "
"virtual machine as the backend (especially if you are already running "
"libguestfs in a virtual machine or cloud instance), but it also has some "
"shortcomings compared to the usual qemu/KVM-based backend."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1608
msgid "BUILDING USER-MODE LINUX FROM SOURCE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1610
msgid ""
"Your Linux distro may provide UML in which case you can ignore this section."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1613
msgid ""
"These instructions are adapted from: L<http://user-mode-linux.sourceforge."
"net/source.html>"
msgstr ""
"Інструкції запозичено з L<http://user-mode-linux.sourceforge.net/source.html>"

#. type: =item
#: ../src/guestfs.pod:1618
msgid "1. Check out Linux sources"
msgstr "1. Отримати початкові коди Linux"

#. type: textblock
#: ../src/guestfs.pod:1620
msgid "Clone the Linux git repository or download the Linux source tarball."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1622
msgid "2. Configure the kernel"
msgstr "2. Налаштувати збирання ядра"

#. type: textblock
#: ../src/guestfs.pod:1624
msgid "B<Note:> All 'make' commands must have C<ARCH=um> added."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1626
#, no-wrap
msgid ""
" make menuconfig ARCH=um\n"
"\n"
msgstr ""
" make menuconfig ARCH=um\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1628
msgid ""
"Make sure any filesystem drivers that you need are compiled into the kernel."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1631
msgid ""
"B<Currently, it needs a large amount of extra work to get modules working>.  "
"It's recommended that you disable module support in the kernel "
"configuration, which will cause everything to be compiled into the image."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1636
msgid "3. Build the kernel"
msgstr "3. Зібрати ядро"

#. type: verbatim
#: ../src/guestfs.pod:1638
#, no-wrap
msgid ""
" make ARCH=um\n"
"\n"
msgstr ""
" make ARCH=um\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:1640
msgid ""
"This will leave a file called C<linux> or C<vmlinux> in the top-level "
"directory.  This is the UML kernel.  You should set C<LIBGUESTFS_HV> to "
"point to this file."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1646
msgid "USER-MODE LINUX DIFFERENCES FROM KVM"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1650
msgid "UML only supports raw-format images"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1652
msgid "Only plain raw-format images will work.  No qcow2, no backing files."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1654
msgid "UML does not support any remote drives"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1656
msgid "No NBD, etc."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1658
msgid "UML only works on ix86 and x86-64"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1660
msgid "UML is experimental"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1662
msgid ""
"In particular, support for UML in libguestfs depends on support for UML in "
"the upstream kernel.  If UML was ever removed from the upstream Linux "
"kernel, then we might remove it from libguestfs too."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1668
msgid "ABI GUARANTEE"
msgstr "ГАРАНТІЯ ЩОДО ABI"

#. type: textblock
#: ../src/guestfs.pod:1670
msgid ""
"We guarantee the libguestfs ABI (binary interface), for public, high-level "
"actions as outlined in this section.  Although we will deprecate some "
"actions, for example if they get replaced by newer calls, we will keep the "
"old actions forever.  This allows you the developer to program in confidence "
"against the libguestfs API."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1676
msgid "BLOCK DEVICE NAMING"
msgstr "ІМЕНУВАННЯ БЛОКОВИХ ПРИСТРОЇВ"

#. type: textblock
#: ../src/guestfs.pod:1678
msgid ""
"In the kernel there is now quite a profusion of schemata for naming block "
"devices (in this context, by I<block device> I mean a physical or virtual "
"hard drive).  The original Linux IDE driver used names starting with C</dev/"
"hd*>.  SCSI devices have historically used a different naming scheme, C</dev/"
"sd*>.  When the Linux kernel I<libata> driver became a popular replacement "
"for the old IDE driver (particularly for SATA devices) those devices also "
"used the C</dev/sd*> scheme.  Additionally we now have virtual machines with "
"paravirtualized drivers.  This has created several different naming systems, "
"such as C</dev/vd*> for virtio disks and C</dev/xvd*> for Xen PV disks."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1690
msgid ""
"As discussed above, libguestfs uses a qemu appliance running an embedded "
"Linux kernel to access block devices.  We can run a variety of appliances "
"based on a variety of Linux kernels."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1694
msgid ""
"This causes a problem for libguestfs because many API calls use device or "
"partition names.  Working scripts and the recipe (example) scripts that we "
"make available over the internet could fail if the naming scheme changes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1699
msgid ""
"Therefore libguestfs defines C</dev/sd*> as the I<standard naming scheme>.  "
"Internally C</dev/sd*> names are translated, if necessary, to other names as "
"required.  For example, under RHEL 5 which uses the C</dev/hd*> scheme, any "
"device parameter C</dev/sda2> is translated to C</dev/hda2> transparently."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1705
msgid ""
"Note that this I<only> applies to parameters.  The L</guestfs_list_devices>, "
"L</guestfs_list_partitions> and similar calls return the true names of the "
"devices and partitions as known to the appliance, but see L</"
"guestfs_canonical_device_name>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1710
msgid "DISK LABELS"
msgstr "МІТКИ ДИСКІВ"

#. type: textblock
#: ../src/guestfs.pod:1712
msgid ""
"In libguestfs E<ge> 1.20, you can give a label to a disk when you add it, "
"using the optional C<label> parameter to L</guestfs_add_drive_opts>.  (Note "
"that disk labels are different from and not related to filesystem labels)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1717
msgid ""
"Not all versions of libguestfs support setting a disk label, and when it is "
"supported, it is limited to 20 ASCII characters C<[a-zA-Z]>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1720
msgid ""
"When you add a disk with a label, it can either be addressed using C</dev/"
"sd*>, or using C</dev/disk/guestfs/I<label>>.  Partitions on the disk can be "
"addressed using C</dev/disk/guestfs/I<label>I<partnum>>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1725
msgid ""
"Listing devices (L</guestfs_list_devices>) and partitions (L</"
"guestfs_list_partitions>) returns the raw block device name.  However you "
"can use L</guestfs_list_disk_labels> to map disk labels to raw block device "
"and partition names."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1730
msgid "ALGORITHM FOR BLOCK DEVICE NAME TRANSLATION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1732
msgid ""
"Usually this translation is transparent.  However in some (very rare)  cases "
"you may need to know the exact algorithm.  Such cases include where you use "
"L</guestfs_config> to add a mixture of virtio and IDE devices to the qemu-"
"based appliance, so have a mixture of C</dev/sd*> and C</dev/vd*> devices."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1738
msgid ""
"The algorithm is applied only to I<parameters> which are known to be either "
"device or partition names.  Return values from functions such as L</"
"guestfs_list_devices> are never changed."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1746
msgid "Is the string a parameter which is a device or partition name?"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1750
msgid "Does the string begin with C</dev/sd>?"
msgstr "Чи починається рядок з C</dev/sd>?"

#. type: textblock
#: ../src/guestfs.pod:1754
msgid ""
"Does the named device exist? If so, we use that device.  However if I<not> "
"then we continue with this algorithm."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1759
msgid "Replace initial C</dev/sd> string with C</dev/hd>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1761
msgid "For example, change C</dev/sda2> to C</dev/hda2>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1763
msgid "If that named device exists, use it.  If not, continue."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1767
msgid "Replace initial C</dev/sd> string with C</dev/vd>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1769
msgid "If that named device exists, use it.  If not, return an error."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1773
msgid "PORTABILITY CONCERNS WITH BLOCK DEVICE NAMING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1775
msgid ""
"Although the standard naming scheme and automatic translation is useful for "
"simple programs and guestfish scripts, for larger programs it is best not to "
"rely on this mechanism."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1779
msgid ""
"Where possible for maximum future portability programs using libguestfs "
"should use these future-proof techniques:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1786
msgid ""
"Use L</guestfs_list_devices> or L</guestfs_list_partitions> to list actual "
"device names, and then use those names directly."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1789
msgid ""
"Since those device names exist by definition, they will never be translated."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1794
msgid ""
"Use higher level ways to identify filesystems, such as LVM names, UUIDs and "
"filesystem labels."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1799
msgid "NULL DISKS"
msgstr "НУЛЬОВІ ДИСКИ"

#. type: textblock
#: ../src/guestfs.pod:1801
msgid ""
"When adding a disk using, eg., L</guestfs_add_drive>, you can set the "
"filename to C<\"/dev/null\">.  This string is treated specially by "
"libguestfs, causing it to add a \"null disk\"."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1805
msgid "A null disk has the following properties:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1811
msgid ""
"A null disk will appear as a normal device, eg. in calls to L</"
"guestfs_list_devices>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1816
msgid "You may add C<\"/dev/null\"> multiple times."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1820
msgid ""
"You should not try to access a null disk in any way.  For example, you "
"shouldn't try to read it or mount it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1825
msgid "Null disks are used for three main purposes:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1831
msgid "Performance testing of libguestfs (see L<guestfs-performance(1)>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1835
msgid "The internal test suite."
msgstr "Вбудований комплекс для перевірки."

#. type: textblock
#: ../src/guestfs.pod:1839
msgid ""
"If you want to use libguestfs APIs that don't refer to disks, since "
"libguestfs requires that at least one disk is added, you should add a null "
"disk."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1843
msgid "For example, to test if a feature is available, use code like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1845
#, no-wrap
msgid ""
" guestfs_h *g;\n"
" char **groups = [ \"btrfs\", NULL ];\n"
" \n"
msgstr ""
" guestfs_h *g;\n"
" char **groups = [ \"btrfs\", NULL ];\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:1848
#, no-wrap
msgid ""
" g = guestfs_create ();\n"
" guestfs_add_drive (g, \"/dev/null\");\n"
" guestfs_launch (g);\n"
" if (guestfs_available (g, groups) == 0) {\n"
"   // group(s) are available\n"
" } else {\n"
"   // group(s) are not available\n"
" }\n"
" guestfs_close (g);\n"
"\n"
msgstr ""
" g = guestfs_create ();\n"
" guestfs_add_drive (g, \"/dev/null\");\n"
" guestfs_launch (g);\n"
" if (guestfs_available (g, groups) == 0) {\n"
"   // group(s) are available\n"
" } else {\n"
"   // group(s) are not available\n"
" }\n"
" guestfs_close (g);\n"
"\n"

#. type: =head2
#: ../src/guestfs.pod:1860
msgid "DISK IMAGE FORMATS"
msgstr "ФОРМАТИ ОБРАЗІВ ДИСКІВ"

#. type: textblock
#: ../src/guestfs.pod:1862
msgid ""
"Virtual disks come in a variety of formats.  Some common formats are listed "
"below."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1865
msgid ""
"Note that libguestfs itself is not responsible for handling the disk format: "
"this is done using L<qemu(1)>.  If support for a particular format is "
"missing or broken, this has to be fixed in qemu."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1869
msgid "COMMON VIRTUAL DISK IMAGE FORMATS"
msgstr "ТИПОВІ ФОРМАТИ ОБРАЗІВ ВІРТУАЛЬНИХ ДИСКІВ"

#. type: =item
#: ../src/guestfs.pod:1873
msgid "I<raw>"
msgstr "I<raw>"

#. type: textblock
#: ../src/guestfs.pod:1875
msgid ""
"Raw format is simply a dump of the sequential bytes of the virtual hard "
"disk.  There is no header, container, compression or processing of any sort."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1879
msgid ""
"Since raw format requires no translation to read or write, it is both fast "
"and very well supported by qemu and all other hypervisors.  You can consider "
"it to be a universal format that any hypervisor can access."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1884
msgid ""
"Raw format files are not compressed and so take up the full space of the "
"original disk image even when they are empty.  A variation (on Linux/Unix at "
"least) is to not store ranges of all-zero bytes by storing the file as a "
"sparse file.  This \"variant format\" is sometimes called I<raw sparse>.  "
"Many utilities, including L<virt-sparsify(1)>, can make raw disk images "
"sparse."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1891
msgid "I<qcow2>"
msgstr "I<qcow2>"

#. type: textblock
#: ../src/guestfs.pod:1893
msgid ""
"Qcow2 is the native disk image format used by qemu.  Internally it uses a "
"two-level directory structure so that only blocks containing data are stored "
"in the file.  It also has many other features such as compression, snapshots "
"and backing files."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1898
msgid ""
"There are at least two distinct variants of this format, although qemu (and "
"hence libguestfs) handles both transparently to the user."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1901
msgid "I<vmdk>"
msgstr "I<vmdk>"

#. type: textblock
#: ../src/guestfs.pod:1903
msgid ""
"VMDK is VMware's native disk image format.  There are many variations.  "
"Modern qemu (hence libguestfs) supports most variations, but you should be "
"aware that older versions of qemu had some very bad data-corrupting bugs in "
"this area."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1908
msgid ""
"Note that VMware ESX exposes files with the name C<guest-flat.vmdk>.  These "
"are not VMDK.  They are raw format files which happen to have a C<.vmdk> "
"extension."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1912
msgid "I<vdi>"
msgstr "I<vdi>"

#. type: textblock
#: ../src/guestfs.pod:1914
msgid ""
"VDI is VirtualBox's native disk image format.  Qemu (hence libguestfs)  has "
"generally good support for this."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1917
msgid "I<vpc>"
msgstr "I<vpc>"

#. type: =item
#: ../src/guestfs.pod:1919
msgid "I<vhd>"
msgstr "I<vhd>"

#. type: textblock
#: ../src/guestfs.pod:1921
msgid ""
"VPC (old) and VHD (modern) are the native disk image format of Microsoft "
"(and previously, Connectix) Virtual PC and Hyper-V."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1924
msgid "Obsolete formats"
msgstr "Застарілі формати"

#. type: textblock
#: ../src/guestfs.pod:1926
msgid ""
"The following formats are obsolete and should not be used: I<qcow> (aka "
"I<qcow1>), I<cow>, I<bochs>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1931
msgid "DETECTING THE FORMAT OF A DISK IMAGE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1933
msgid ""
"Firstly note there is a security issue with auto-detecting the format of a "
"disk image.  It may or may not apply in your use case.  Read L</"
"CVE-2010-3851> below."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1937
msgid ""
"Libguestfs offers an API to get the format of a disk image (L</"
"guestfs_disk_format>, and it is safest to use this."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1940
msgid ""
"I<Don't> be tempted to try parsing the text / human-readable output of "
"C<qemu-img> since it cannot be parsed reliably and securely.  Also do not "
"use the C<file> command since the output of that changes over time."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1947
msgid ""
"This section discusses security implications of using libguestfs, "
"particularly with untrusted or malicious guests or disk images."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1950
msgid "SECURITY OF MOUNTING FILESYSTEMS"
msgstr "ЗАХИСТ ФАЙЛОВИХ СИСТЕМ МОНТУВАННЯ"

#. type: textblock
#: ../src/guestfs.pod:1952
msgid ""
"You should never mount an untrusted guest filesystem directly on your host "
"kernel (eg. using loopback or kpartx)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1955
msgid ""
"When you mount a filesystem, mistakes in the kernel filesystem (VFS)  can be "
"escalated into exploits by attackers creating a malicious filesystem.  These "
"exploits are very severe for two reasons.  Firstly there are very many "
"filesystem drivers in the kernel, and many of them are infrequently used and "
"not much developer attention has been paid to the code.  Linux userspace "
"helps potential crackers by detecting the filesystem type and automatically "
"choosing the right VFS driver, even if that filesystem type is unexpected.  "
"Secondly, a kernel-level exploit is like a local root exploit (worse in some "
"ways), giving immediate and total access to the system right down to the "
"hardware level."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1967
msgid ""
"These exploits can be present in the kernel for a very long time (L<https://"
"lwn.net/Articles/538898/>)."
msgstr ""
"Ці вразливості могли бути присутніми у ядрі доволі довго (L<https://lwn.net/"
"Articles/538898/>)."

#. type: textblock
#: ../src/guestfs.pod:1970
msgid "Libguestfs provides a layered approach to protecting you from exploits:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1973
#, no-wrap
msgid ""
"   untrusted filesystem\n"
" --------------------------------------\n"
"   appliance kernel\n"
" --------------------------------------\n"
"   qemu process running as non-root\n"
" --------------------------------------\n"
"   sVirt [if using libvirt + SELinux]\n"
" --------------------------------------\n"
"   host kernel\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1983
msgid ""
"We run a Linux kernel inside a qemu virtual machine, usually running as a "
"non-root user.  The attacker would need to write a filesystem which first "
"exploited the kernel, and then exploited either qemu virtualization (eg. a "
"faulty qemu driver) or the libguestfs protocol, and finally to be as serious "
"as the host kernel exploit it would need to escalate its privileges to "
"root.  Additionally if you use the libvirt back end and SELinux, sVirt is "
"used to confine the qemu process.  This multi-step escalation, performed by "
"a static piece of data, is thought to be extremely hard to do, although we "
"never say 'never' about security issues."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1994
msgid ""
"Callers can also reduce the attack surface by forcing the filesystem type "
"when mounting (use L</guestfs_mount_vfs>)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1997
msgid "GENERAL SECURITY CONSIDERATIONS"
msgstr "ЗАГАЛЬНІ ЗАУВАЖЕННЯ ЩОДО ЗАХИСТУ"

#. type: textblock
#: ../src/guestfs.pod:1999
msgid ""
"Be careful with any files or data that you download from a guest (by "
"\"download\" we mean not just the L</guestfs_download> command but any "
"command that reads files, filenames, directories or anything else from a "
"disk image).  An attacker could manipulate the data to fool your program "
"into doing the wrong thing.  Consider cases such as:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2009
msgid "the data (file etc) not being present"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2013
msgid "being present but empty"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2017
msgid "being much larger than normal"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2021
msgid "containing arbitrary 8 bit data"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2025
msgid "being in an unexpected character encoding"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2029
msgid "containing homoglyphs."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2033
msgid "PROTOCOL SECURITY"
msgstr "ЗАХИСТ ПРОТОКОЛУ"

#. type: textblock
#: ../src/guestfs.pod:2035
msgid ""
"The protocol is designed to be secure, being based on RFC 4506 (XDR)  with a "
"defined upper message size.  However a program that uses libguestfs must "
"also take care - for example you can write a program that downloads a binary "
"from a disk image and executes it locally, and no amount of protocol "
"security will save you from the consequences."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2041
msgid "INSPECTION SECURITY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2043
msgid ""
"Parts of the inspection API (see L</INSPECTION>) return untrusted strings "
"directly from the guest, and these could contain any 8 bit data.  Callers "
"should be careful to escape these before printing them to a structured file "
"(for example, use HTML escaping if creating a web page)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2049
msgid ""
"Guest configuration may be altered in unusual ways by the administrator of "
"the virtual machine, and may not reflect reality (particularly for untrusted "
"or actively malicious guests).  For example we parse the hostname from "
"configuration files like C</etc/sysconfig/network> that we find in the "
"guest, but the guest administrator can easily manipulate these files to "
"provide the wrong hostname."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2057
msgid ""
"The inspection API parses guest configuration using two external libraries: "
"Augeas (Linux configuration) and hivex (Windows Registry).  Both are "
"designed to be robust in the face of malicious data, although denial of "
"service attacks are still possible, for example with oversized configuration "
"files."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2063
msgid "RUNNING UNTRUSTED GUEST COMMANDS"
msgstr "ЗАПУСК НЕЗАХИЩЕНИХ КОМАНД ГОСТЬОВОЇ СИСТЕМИ"

#. type: textblock
#: ../src/guestfs.pod:2065
msgid ""
"Be very cautious about running commands from the guest.  By running a "
"command in the guest, you are giving CPU time to a binary that you do not "
"control, under the same user account as the library, albeit wrapped in qemu "
"virtualization.  More information and alternatives can be found in the "
"section L</RUNNING COMMANDS>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2071
msgid "CVE-2010-3851"
msgstr "CVE-2010-3851"

#. type: textblock
#: ../src/guestfs.pod:2073
msgid "L<https://bugzilla.redhat.com/642934>"
msgstr "L<https://bugzilla.redhat.com/642934>"

#. type: textblock
#: ../src/guestfs.pod:2075
msgid ""
"This security bug concerns the automatic disk format detection that qemu "
"does on disk images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2078
msgid ""
"A raw disk image is just the raw bytes, there is no header.  Other disk "
"images like qcow2 contain a special header.  Qemu deals with this by looking "
"for one of the known headers, and if none is found then assuming the disk "
"image must be raw."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2083
msgid ""
"This allows a guest which has been given a raw disk image to write some "
"other header.  At next boot (or when the disk image is accessed by "
"libguestfs) qemu would do autodetection and think the disk image format was, "
"say, qcow2 based on the header written by the guest."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2088
msgid ""
"This in itself would not be a problem, but qcow2 offers many features, one "
"of which is to allow a disk image to refer to another image (called the "
"\"backing disk\").  It does this by placing the path to the backing disk "
"into the qcow2 header.  This path is not validated and could point to any "
"host file (eg. \"/etc/passwd\").  The backing disk is then exposed through "
"\"holes\" in the qcow2 disk image, which of course is completely under the "
"control of the attacker."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2096
msgid ""
"In libguestfs this is rather hard to exploit except under two circumstances:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2103
msgid "You have enabled the network or have opened the disk in write mode."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2107
msgid ""
"You are also running untrusted code from the guest (see L</RUNNING "
"COMMANDS>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2112
msgid ""
"The way to avoid this is to specify the expected disk format when adding "
"disks (the optional C<format> option to L</guestfs_add_drive_opts>).  You "
"should always do this if the disk is raw format, and it's a good idea for "
"other cases too.  (See also L</DISK IMAGE FORMATS>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2118
msgid ""
"For disks added from libvirt using calls like L</guestfs_add_domain>, the "
"format is fetched from libvirt and passed through."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2121
msgid ""
"For libguestfs tools, use the I<--format> command line parameter as "
"appropriate."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2124
msgid "CVE-2011-4127"
msgstr "CVE-2011-4127"

#. type: textblock
#: ../src/guestfs.pod:2126
msgid "L<https://bugzilla.redhat.com/752375>"
msgstr "L<https://bugzilla.redhat.com/752375>"

#. type: textblock
#: ../src/guestfs.pod:2128
msgid ""
"This is a bug in the kernel which allowed guests to overwrite parts of the "
"host's drives which they should not normally have access to."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2132
msgid ""
"It is sufficient to update libguestfs to any version E<ge> 1.16 which "
"contains a change that mitigates the problem."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2137
msgid "L<https://bugzilla.redhat.com/831117>"
msgstr "L<https://bugzilla.redhat.com/831117>"

#. type: textblock
#: ../src/guestfs.pod:2139
msgid ""
"Old versions of both virt-edit and the guestfish C<edit> command created a "
"new file containing the changes but did not set the permissions, etc of the "
"new file to match the old one.  The result of this was that if you edited a "
"security sensitive file such as C</etc/shadow> then it would be left world-"
"readable after the edit."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2145
msgid "It is sufficient to update libguestfs to any version E<ge> 1.16."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2149
msgid "L<https://bugzilla.redhat.com/968306>"
msgstr "L<https://bugzilla.redhat.com/968306>"

#. type: textblock
#: ../src/guestfs.pod:2151
msgid ""
"This security bug was a flaw in inspection where an untrusted guest using a "
"specially crafted file in the guest OS could cause a double-free in the C "
"library (denial of service)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2155
msgid ""
"It is sufficient to update libguestfs to a version that is not vulnerable: "
"libguestfs E<ge> 1.20.8, E<ge> 1.22.2 or E<ge> 1.23.2."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2160
msgid "L<https://bugzilla.redhat.com/1016960>"
msgstr "L<https://bugzilla.redhat.com/1016960>"

#. type: textblock
#: ../src/guestfs.pod:2162
msgid ""
"When using the L<guestfish(1)> I<--remote> or guestfish I<--listen> options, "
"guestfish would create a socket in a known location (C</tmp/.guestfish-$UID/"
"socket-$PID>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2166
msgid ""
"The location has to be a known one in order for both ends to communicate.  "
"However no checking was done that the containing directory (C</tmp/."
"guestfish-$UID>) is owned by the user.  Thus another user could create this "
"directory and potentially hijack sockets owned by another user's guestfish "
"client or server."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2172
msgid ""
"It is sufficient to update libguestfs to a version that is not vulnerable: "
"libguestfs E<ge> 1.20.12, E<ge> 1.22.7 or E<ge> 1.24."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2175
msgid "CONNECTION MANAGEMENT"
msgstr "КЕРУВАННЯ З’ЄДНАННЯМ"

#. type: =head2
#: ../src/guestfs.pod:2177
msgid "guestfs_h *"
msgstr "guestfs_h *"

#. type: textblock
#: ../src/guestfs.pod:2179
msgid ""
"C<guestfs_h> is the opaque type representing a connection handle.  Create a "
"handle by calling L</guestfs_create> or L</guestfs_create_flags>.  Call L</"
"guestfs_close> to free the handle and release all resources used."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2184
msgid ""
"For information on using multiple handles and threads, see the section L</"
"MULTIPLE HANDLES AND MULTIPLE THREADS> above."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2187
msgid "guestfs_create"
msgstr "guestfs_create"

#. type: verbatim
#: ../src/guestfs.pod:2189
#, no-wrap
msgid ""
" guestfs_h *guestfs_create (void);\n"
"\n"
msgstr ""
" guestfs_h *guestfs_create (void);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2191
msgid "Create a connection handle."
msgstr "Створити дескриптор з’єднання."

#. type: textblock
#: ../src/guestfs.pod:2193 ../src/guestfs.pod:2212
msgid ""
"On success this returns a non-NULL pointer to a handle.  On error it returns "
"NULL."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2196
msgid ""
"You have to \"configure\" the handle after creating it.  This includes "
"calling L</guestfs_add_drive_opts> (or one of the equivalent calls) on the "
"handle at least once."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2200
msgid "After configuring the handle, you have to call L</guestfs_launch>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2202
msgid ""
"You may also want to configure error handling for the handle.  See the L</"
"ERROR HANDLING> section below."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2205
msgid "guestfs_create_flags"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2207
#, no-wrap
msgid ""
" guestfs_h *guestfs_create_flags (unsigned flags [, ...]);\n"
"\n"
msgstr ""
" guestfs_h *guestfs_create_flags (unsigned flags [, ...]);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2209
msgid ""
"Create a connection handle, supplying extra flags and extra arguments to "
"control how the handle is created."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2215
msgid "L</guestfs_create> is equivalent to calling C<guestfs_create_flags(0)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2217
msgid ""
"The following flags may be logically ORed together.  (Currently no extra "
"arguments are used)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2222
msgid "C<GUESTFS_CREATE_NO_ENVIRONMENT>"
msgstr "C<GUESTFS_CREATE_NO_ENVIRONMENT>"

#. type: textblock
#: ../src/guestfs.pod:2224
msgid ""
"Don't parse any environment variables (such as C<LIBGUESTFS_DEBUG> etc)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2226
msgid ""
"You can call L</guestfs_parse_environment> or L</"
"guestfs_parse_environment_list> afterwards to parse environment variables.  "
"Alternately, I<don't> call these functions if you want the handle to be "
"unaffected by environment variables.  See the example below."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2231
msgid ""
"The default (if this flag is not given) is to implicitly call L</"
"guestfs_parse_environment>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2234
msgid "C<GUESTFS_CREATE_NO_CLOSE_ON_EXIT>"
msgstr "C<GUESTFS_CREATE_NO_CLOSE_ON_EXIT>"

#. type: textblock
#: ../src/guestfs.pod:2236
msgid ""
"Don't try to close the handle in an L<atexit(3)> handler if the program "
"exits without explicitly closing the handle."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2239
msgid ""
"The default (if this flag is not given) is to install such an atexit handler."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2244
msgid "USING C<GUESTFS_CREATE_NO_ENVIRONMENT>"
msgstr "ВИКОРИСТАННЯ C<GUESTFS_CREATE_NO_ENVIRONMENT>"

#. type: textblock
#: ../src/guestfs.pod:2246
msgid ""
"You might use C<GUESTFS_CREATE_NO_ENVIRONMENT> and an explicit call to L</"
"guestfs_parse_environment> like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2249
#, no-wrap
msgid ""
" guestfs_h *g;\n"
" int r;\n"
" \n"
msgstr ""
" guestfs_h *g;\n"
" int r;\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:2252
#, no-wrap
msgid ""
" g = guestfs_create_flags (GUESTFS_CREATE_NO_ENVIRONMENT);\n"
" if (!g) {\n"
"   perror (\"guestfs_create_flags\");\n"
"   exit (EXIT_FAILURE);\n"
" }\n"
" r = guestfs_parse_environment (g);\n"
" if (r == -1)\n"
"   exit (EXIT_FAILURE);\n"
"\n"
msgstr ""
" g = guestfs_create_flags (GUESTFS_CREATE_NO_ENVIRONMENT);\n"
" if (!g) {\n"
"   perror (\"guestfs_create_flags\");\n"
"   exit (EXIT_FAILURE);\n"
" }\n"
" r = guestfs_parse_environment (g);\n"
" if (r == -1)\n"
"   exit (EXIT_FAILURE);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2261
msgid ""
"Or to create a handle which is unaffected by environment variables, omit the "
"call to C<guestfs_parse_environment> from the above code."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2264
msgid ""
"The above code has another advantage which is that any errors from parsing "
"the environment are passed through the error handler, whereas "
"C<guestfs_create> prints errors on stderr and ignores them."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2268
msgid "guestfs_close"
msgstr "guestfs_close"

#. type: verbatim
#: ../src/guestfs.pod:2270
#, no-wrap
msgid ""
" void guestfs_close (guestfs_h *g);\n"
"\n"
msgstr ""
" void guestfs_close (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2272
msgid ""
"This closes the connection handle and frees up all resources used.  If a "
"close callback was set on the handle, then it is called."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2275
msgid "The correct way to close the handle is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2277
#, no-wrap
msgid ""
" if (guestfs_shutdown (g) == -1) {\n"
"   /* handle write errors here */\n"
" }\n"
" guestfs_close (g);\n"
"\n"
msgstr ""
" if (guestfs_shutdown (g) == -1) {\n"
"   /* тут обробляємо помилки запису */\n"
" }\n"
" guestfs_close (g);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2282
msgid ""
"L</guestfs_shutdown> is only needed if B<all> of the following are true:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2288
msgid "one or more disks were added in read-write mode, I<and>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2292
msgid "guestfs_launch was called, I<and>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2296
msgid "you made some changes, I<and>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2298
msgid "4"
msgstr "4"

#. type: textblock
#: ../src/guestfs.pod:2300
msgid ""
"you have a way to handle write errors (eg. by exiting with an error code or "
"reporting something to the user)."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2305
msgid "ERROR HANDLING"
msgstr "ОБРОБКА ПОМИЛОК"

#. type: textblock
#: ../src/guestfs.pod:2307
msgid ""
"API functions can return errors.  For example, almost all functions that "
"return C<int> will return C<-1> to indicate an error."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2310
msgid ""
"Additional information is available for errors: an error message string and "
"optionally an error number (errno) if the thing that failed was a system "
"call."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2314
msgid ""
"You can get at the additional information about the last error on the handle "
"by calling L</guestfs_last_error>, L</guestfs_last_errno>, and/or by setting "
"up an error handler with L</guestfs_set_error_handler>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2319
msgid ""
"When the handle is created, a default error handler is installed which "
"prints the error message string to C<stderr>.  For small short-running "
"command line programs it is sufficient to do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2323
#, no-wrap
msgid ""
" if (guestfs_launch (g) == -1)\n"
"   exit (EXIT_FAILURE);\n"
"\n"
msgstr ""
" if (guestfs_launch (g) == -1)\n"
"   exit (EXIT_FAILURE);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2326
msgid ""
"since the default error handler will ensure that an error message has been "
"printed to C<stderr> before the program exits."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2329
msgid ""
"For other programs the caller will almost certainly want to install an "
"alternate error handler or do error handling in-line as in the example "
"below.  The non-C language bindings all install NULL error handlers and turn "
"errors into exceptions using code similar to this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2334
#, no-wrap
msgid ""
" const char *msg;\n"
" int errnum;\n"
" \n"
msgstr ""
" const char *msg;\n"
" int errnum;\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:2337
#, no-wrap
msgid ""
" /* This disables the default behaviour of printing errors\n"
"    on stderr. */\n"
" guestfs_set_error_handler (g, NULL, NULL);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2341
#, no-wrap
msgid ""
" if (guestfs_launch (g) == -1) {\n"
"   /* Examine the error message and print it, throw it,\n"
"      etc. */\n"
"   msg = guestfs_last_error (g);\n"
"   errnum = guestfs_last_errno (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2347
#, no-wrap
msgid ""
"   fprintf (stderr, \"%s\", msg);\n"
"   if (errnum != 0)\n"
"     fprintf (stderr, \": %s\", strerror (errnum));\n"
"   fprintf (stderr, \"\\n\");\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2352
#, no-wrap
msgid ""
"   /* ... */\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2355
msgid ""
"L</guestfs_create> returns C<NULL> if the handle cannot be created, and "
"because there is no handle if this happens there is no way to get additional "
"error information.  Since libguestfs E<ge> 1.20, you can use L</"
"guestfs_create_flags> to properly deal with errors during handle creation, "
"although the vast majority of programs can continue to use L</"
"guestfs_create> and not worry about this situation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2362
msgid ""
"Out of memory errors are handled differently.  The default action is to call "
"L<abort(3)>.  If this is undesirable, then you can set a handler using L</"
"guestfs_set_out_of_memory_handler>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2366
msgid "guestfs_last_error"
msgstr "guestfs_last_error"

#. type: verbatim
#: ../src/guestfs.pod:2368
#, no-wrap
msgid ""
" const char *guestfs_last_error (guestfs_h *g);\n"
"\n"
msgstr ""
" const char *guestfs_last_error (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2370
msgid ""
"This returns the last error message that happened on C<g>.  If there has not "
"been an error since the handle was created, then this returns C<NULL>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2374
msgid ""
"Note the returned string does I<not> have a newline character at the end.  "
"Most error messages are single lines.  Some are split over multiple lines "
"and contain C<\\n> characters within the string but not at the end."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2379
msgid ""
"The lifetime of the returned string is until the next error occurs on the "
"same handle, or L</guestfs_close> is called.  If you need to keep it longer, "
"copy it."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2383
msgid "guestfs_last_errno"
msgstr "guestfs_last_errno"

#. type: verbatim
#: ../src/guestfs.pod:2385
#, no-wrap
msgid ""
" int guestfs_last_errno (guestfs_h *g);\n"
"\n"
msgstr ""
" int guestfs_last_errno (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2387
msgid "This returns the last error number (errno) that happened on C<g>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2389
msgid "If successful, an errno integer not equal to zero is returned."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2391
msgid ""
"In many cases the special errno C<ENOTSUP> is returned if you tried to call "
"a function or use a feature which is not supported."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2394
msgid ""
"If no error number is available, this returns 0.  This call can return 0 in "
"three situations:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2401
msgid "There has not been any error on the handle."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2405
msgid ""
"There has been an error but the errno was meaningless.  This corresponds to "
"the case where the error did not come from a failed system call, but for "
"some other reason."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2411
msgid ""
"There was an error from a failed system call, but for some reason the errno "
"was not captured and returned.  This usually indicates a bug in libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2417
msgid ""
"Libguestfs tries to convert the errno from inside the applicance into a "
"corresponding errno for the caller (not entirely trivial: the appliance "
"might be running a completely different operating system from the library "
"and error numbers are not standardized across Un*xen).  If this could not be "
"done, then the error is translated to C<EINVAL>.  In practice this should "
"only happen in very rare circumstances."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2425
msgid "guestfs_set_error_handler"
msgstr "guestfs_set_error_handler"

#. type: verbatim
#: ../src/guestfs.pod:2427
#, no-wrap
msgid ""
" typedef void (*guestfs_error_handler_cb) (guestfs_h *g,\n"
"                                           void *opaque,\n"
"                                           const char *msg);\n"
" void guestfs_set_error_handler (guestfs_h *g,\n"
"                                 guestfs_error_handler_cb cb,\n"
"                                 void *opaque);\n"
"\n"
msgstr ""
" typedef void (*guestfs_error_handler_cb) (guestfs_h *g,\n"
"                                           void *opaque,\n"
"                                           const char *msg);\n"
" void guestfs_set_error_handler (guestfs_h *g,\n"
"                                 guestfs_error_handler_cb cb,\n"
"                                 void *opaque);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2434
msgid ""
"The callback C<cb> will be called if there is an error.  The parameters "
"passed to the callback are an opaque data pointer and the error message "
"string."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2438
msgid ""
"C<errno> is not passed to the callback.  To get that the callback must call "
"L</guestfs_last_errno>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2441
msgid ""
"Note that the message string C<msg> is freed as soon as the callback "
"function returns, so if you want to stash it somewhere you must make your "
"own copy."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2445
msgid "The default handler prints messages on C<stderr>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2447
msgid "If you set C<cb> to C<NULL> then I<no> handler is called."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2449
msgid "guestfs_get_error_handler"
msgstr "guestfs_get_error_handler"

#. type: verbatim
#: ../src/guestfs.pod:2451
#, no-wrap
msgid ""
" guestfs_error_handler_cb guestfs_get_error_handler (guestfs_h *g,\n"
"                                                     void **opaque_rtn);\n"
"\n"
msgstr ""
" guestfs_error_handler_cb guestfs_get_error_handler (guestfs_h *g,\n"
"                                                     void **opaque_rtn);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2454
msgid "Returns the current error handler callback."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2456
msgid "guestfs_push_error_handler"
msgstr "guestfs_push_error_handler"

#. type: verbatim
#: ../src/guestfs.pod:2458
#, no-wrap
msgid ""
" void guestfs_push_error_handler (guestfs_h *g,\n"
"                                  guestfs_error_handler_cb cb,\n"
"                                  void *opaque);\n"
"\n"
msgstr ""
" void guestfs_push_error_handler (guestfs_h *g,\n"
"                                  guestfs_error_handler_cb cb,\n"
"                                  void *opaque);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2462
msgid ""
"This is the same as L</guestfs_set_error_handler>, except that the old error "
"handler is stashed away in a stack inside the handle.  You can restore the "
"previous error handler by calling L</guestfs_pop_error_handler>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2467
msgid "Use the following code to temporarily disable errors around a function:"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2473
msgid "guestfs_pop_error_handler"
msgstr "guestfs_pop_error_handler"

#. type: verbatim
#: ../src/guestfs.pod:2475
#, no-wrap
msgid ""
" void guestfs_pop_error_handler (guestfs_h *g);\n"
"\n"
msgstr ""
" void guestfs_pop_error_handler (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2477
msgid ""
"Restore the previous error handler (see L</guestfs_push_error_handler>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2479
msgid ""
"If you pop the stack too many times, then the default error handler is "
"restored."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2482
msgid "guestfs_set_out_of_memory_handler"
msgstr "guestfs_set_out_of_memory_handler"

#. type: verbatim
#: ../src/guestfs.pod:2484
#, no-wrap
msgid ""
" typedef void (*guestfs_abort_cb) (void);\n"
" void guestfs_set_out_of_memory_handler (guestfs_h *g,\n"
"                                         guestfs_abort_cb);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2488
msgid ""
"The callback C<cb> will be called if there is an out of memory situation.  "
"I<Note this callback must not return>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2491
msgid "The default is to call L<abort(3)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2493
msgid ""
"You cannot set C<cb> to C<NULL>.  You can't ignore out of memory situations."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2496
msgid "guestfs_get_out_of_memory_handler"
msgstr "guestfs_get_out_of_memory_handler"

#. type: verbatim
#: ../src/guestfs.pod:2498
#, no-wrap
msgid ""
" guestfs_abort_fn guestfs_get_out_of_memory_handler (guestfs_h *g);\n"
"\n"
msgstr ""
" guestfs_abort_fn guestfs_get_out_of_memory_handler (guestfs_h *g);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2500
msgid "This returns the current out of memory handler."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2502
msgid "API CALLS"
msgstr "ВИКЛИКИ API"

#. type: =head1
#: ../src/guestfs.pod:2506
msgid "STRUCTURES"
msgstr "СТРУКТУРИ"

#. type: textblock
#: ../src/guestfs.pod:2508
msgid "__STRUCTS__"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2510
msgid "AVAILABILITY"
msgstr "ДОСТУПНІСТЬ"

#. type: =head2
#: ../src/guestfs.pod:2512
msgid "GROUPS OF FUNCTIONALITY IN THE APPLIANCE"
msgstr "ГРУПИ ФУНКЦІОНАЛЬНИХ МОЖЛИВОСТЕЙ У ОБРАЗІ ОСНОВНОЇ СИСТЕМИ"

#. type: textblock
#: ../src/guestfs.pod:2514
msgid ""
"Using L</guestfs_available> you can test availability of the following "
"groups of functions.  This test queries the appliance to see if the "
"appliance you are currently using supports the functionality."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2519
msgid "__AVAILABILITY__"
msgstr "__AVAILABILITY__"

#. type: =head2
#: ../src/guestfs.pod:2521
msgid "FILESYSTEM AVAILABLE"
msgstr "ДОСТУПНІ ФАЙЛОВІ СИСТЕМИ"

#. type: textblock
#: ../src/guestfs.pod:2523
msgid ""
"The L</guestfs_filesystem_available> call tests whether a filesystem type is "
"supported by the appliance kernel."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2526
msgid ""
"This is mainly useful as a negative test.  If this returns true, it doesn't "
"mean that a particular filesystem can be mounted, since filesystems can fail "
"for other reasons such as it being a later version of the filesystem, or "
"having incompatible features."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2531
msgid "GUESTFISH supported COMMAND"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2533
msgid ""
"In L<guestfish(3)> there is a handy interactive command C<supported> which "
"prints out the available groups and whether they are supported by this build "
"of libguestfs.  Note however that you have to do C<run> first."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2538
msgid "SINGLE CALLS AT COMPILE TIME"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2540
msgid ""
"Since version 1.5.8, C<E<lt>guestfs.hE<gt>> defines symbols for each C API "
"function, such as:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2543
#, no-wrap
msgid ""
" #define GUESTFS_HAVE_DD 1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2545
msgid "if L</guestfs_dd> is available."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2547
msgid ""
"Before version 1.5.8, if you needed to test whether a single libguestfs "
"function is available at compile time, we recommended using build tools such "
"as autoconf or cmake.  For example in autotools you could use:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2552
#, no-wrap
msgid ""
" AC_CHECK_LIB([guestfs],[guestfs_create])\n"
" AC_CHECK_FUNCS([guestfs_dd])\n"
"\n"
msgstr ""
" AC_CHECK_LIB([guestfs],[guestfs_create])\n"
" AC_CHECK_FUNCS([guestfs_dd])\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2555
msgid ""
"which would result in C<HAVE_GUESTFS_DD> being either defined or not defined "
"in your program."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2558
msgid "SINGLE CALLS AT RUN TIME"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2560
msgid ""
"Testing at compile time doesn't guarantee that a function really exists in "
"the library.  The reason is that you might be dynamically linked against a "
"previous I<libguestfs.so> (dynamic library)  which doesn't have the call.  "
"This situation unfortunately results in a segmentation fault, which is a "
"shortcoming of the C dynamic linking system itself."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2567
msgid ""
"You can use L<dlopen(3)> to test if a function is available at run time, as "
"in this example program (note that you still need the compile time check as "
"well):"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2571
#, no-wrap
msgid ""
" #include <stdio.h>\n"
" #include <stdlib.h>\n"
" #include <unistd.h>\n"
" #include <dlfcn.h>\n"
" #include <guestfs.h>\n"
" \n"
msgstr ""
" #include <stdio.h>\n"
" #include <stdlib.h>\n"
" #include <unistd.h>\n"
" #include <dlfcn.h>\n"
" #include <guestfs.h>\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:2577
#, no-wrap
msgid ""
" main ()\n"
" {\n"
" #ifdef GUESTFS_HAVE_DD\n"
"   void *dl;\n"
"   int has_function;\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2583
#, no-wrap
msgid ""
"   /* Test if the function guestfs_dd is really available. */\n"
"   dl = dlopen (NULL, RTLD_LAZY);\n"
"   if (!dl) {\n"
"     fprintf (stderr, \"dlopen: %s\\n\", dlerror ());\n"
"     exit (EXIT_FAILURE);\n"
"   }\n"
"   has_function = dlsym (dl, \"guestfs_dd\") != NULL;\n"
"   dlclose (dl);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2592
#, no-wrap
msgid ""
"   if (!has_function)\n"
"     printf (\"this libguestfs.so does NOT have guestfs_dd function\\n\");\n"
"   else {\n"
"     printf (\"this libguestfs.so has guestfs_dd function\\n\");\n"
"     /* Now it's safe to call\n"
"     guestfs_dd (g, \"foo\", \"bar\");\n"
"     */\n"
"   }\n"
" #else\n"
"   printf (\"guestfs_dd function was not found at compile time\\n\");\n"
" #endif\n"
"  }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2605
msgid ""
"You may think the above is an awful lot of hassle, and it is.  There are "
"other ways outside of the C linking system to ensure that this kind of "
"incompatibility never arises, such as using package versioning:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2610
#, no-wrap
msgid ""
" Requires: libguestfs >= 1.0.80\n"
"\n"
msgstr ""
" Потрібна версія: libguestfs >= 1.0.80\n"
"\n"

#. type: =head1
#: ../src/guestfs.pod:2612
msgid "CALLS WITH OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2614
msgid ""
"A recent feature of the API is the introduction of calls which take optional "
"arguments.  In C these are declared 3 ways.  The main way is as a call which "
"takes variable arguments (ie. C<...>), as in this example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2619
#, no-wrap
msgid ""
" int guestfs_add_drive_opts (guestfs_h *g, const char *filename, ...);\n"
"\n"
msgstr ""
" int guestfs_add_drive_opts (guestfs_h *g, const char *filename, ...);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2621
msgid ""
"Call this with a list of optional arguments, terminated by C<-1>.  So to "
"call with no optional arguments specified:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2624
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename, -1);\n"
"\n"
msgstr ""
" guestfs_add_drive_opts (g, filename, -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2626
msgid "With a single optional argument:"
msgstr "З одним додатковим аргументом:"

#. type: verbatim
#: ../src/guestfs.pod:2628
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
"                         -1);\n"
"\n"
msgstr ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2632
msgid "With two:"
msgstr "З двома аргументами:"

#. type: verbatim
#: ../src/guestfs.pod:2634
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
"                         -1);\n"
"\n"
msgstr ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
"                         -1);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2639
msgid ""
"and so forth.  Don't forget the terminating C<-1> otherwise Bad Things will "
"happen!"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2642
msgid "USING va_list FOR OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2644
msgid ""
"The second variant has the same name with the suffix C<_va>, which works the "
"same way but takes a C<va_list>.  See the C manual for details.  For the "
"example function, this is declared:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2648
#, no-wrap
msgid ""
" int guestfs_add_drive_opts_va (guestfs_h *g, const char *filename,\n"
"                                va_list args);\n"
"\n"
msgstr ""
" int guestfs_add_drive_opts_va (guestfs_h *g, const char *filename,\n"
"                                va_list args);\n"
"\n"

#. type: =head2
#: ../src/guestfs.pod:2651
msgid "CONSTRUCTING OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2653
msgid ""
"The third variant is useful where you need to construct these calls.  You "
"pass in a structure where you fill in the optional fields.  The structure "
"has a bitmask as the first element which you must set to indicate which "
"fields you have filled in.  For our example function the structure and call "
"are declared:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2659
#, no-wrap
msgid ""
" struct guestfs_add_drive_opts_argv {\n"
"   uint64_t bitmask;\n"
"   int readonly;\n"
"   const char *format;\n"
"   /* ... */\n"
" };\n"
" int guestfs_add_drive_opts_argv (guestfs_h *g, const char *filename,\n"
"              const struct guestfs_add_drive_opts_argv *optargs);\n"
"\n"
msgstr ""
" struct guestfs_add_drive_opts_argv {\n"
"   uint64_t bitmask;\n"
"   int readonly;\n"
"   const char *format;\n"
"   /* ... */\n"
" };\n"
" int guestfs_add_drive_opts_argv (guestfs_h *g, const char *filename,\n"
"              const struct guestfs_add_drive_opts_argv *optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2668
msgid "You could call it like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2670
#, no-wrap
msgid ""
" struct guestfs_add_drive_opts_argv optargs = {\n"
"   .bitmask = GUESTFS_ADD_DRIVE_OPTS_READONLY_BITMASK |\n"
"              GUESTFS_ADD_DRIVE_OPTS_FORMAT_BITMASK,\n"
"   .readonly = 1,\n"
"   .format = \"qcow2\"\n"
" };\n"
" \n"
msgstr ""
" struct guestfs_add_drive_opts_argv optargs = {\n"
"   .bitmask = GUESTFS_ADD_DRIVE_OPTS_READONLY_BITMASK |\n"
"              GUESTFS_ADD_DRIVE_OPTS_FORMAT_BITMASK,\n"
"   .readonly = 1,\n"
"   .format = \"qcow2\"\n"
" };\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:2677
#, no-wrap
msgid ""
" guestfs_add_drive_opts_argv (g, filename, &optargs);\n"
"\n"
msgstr ""
" guestfs_add_drive_opts_argv (g, filename, &optargs);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2685
msgid "The C<_BITMASK> suffix on each option name when specifying the bitmask."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2690
msgid "You do not need to fill in all fields of the structure."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2694
msgid ""
"There must be a one-to-one correspondence between fields of the structure "
"that are filled in, and bits set in the bitmask."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2699
msgid "OPTIONAL ARGUMENTS IN OTHER LANGUAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2701
msgid ""
"In other languages, optional arguments are expressed in the way that is "
"natural for that language.  We refer you to the language-specific "
"documentation for more details on that."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2705
msgid "For guestfish, see L<guestfish(1)/OPTIONAL ARGUMENTS>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2709
msgid "SETTING CALLBACKS TO HANDLE EVENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2711
msgid ""
"B<Note:> This section documents the generic event mechanism introduced in "
"libguestfs 1.10, which you should use in new code if possible.  The old "
"functions C<guestfs_set_log_message_callback>, "
"C<guestfs_set_subprocess_quit_callback>, "
"C<guestfs_set_launch_done_callback>, C<guestfs_set_close_callback> and "
"C<guestfs_set_progress_callback> are no longer documented in this manual "
"page.  Because of the ABI guarantee, the old functions continue to work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2720
msgid ""
"Handles generate events when certain things happen, such as log messages "
"being generated, progress messages during long-running operations, or the "
"handle being closed.  The API calls described below let you register a "
"callback to be called when events happen.  You can register multiple "
"callbacks (for the same, different or overlapping sets of events), and "
"individually remove callbacks.  If callbacks are not removed, then they "
"remain in force until the handle is closed."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2728
msgid ""
"In the current implementation, events are only generated synchronously: that "
"means that events (and hence callbacks) can only happen while you are in the "
"middle of making another libguestfs call.  The callback is called in the "
"same thread."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2733
msgid ""
"Events may contain a payload, usually nothing (void), an array of 64 bit "
"unsigned integers, or a message buffer.  Payloads are discussed later on."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2737
msgid "CLASSES OF EVENTS"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2741
msgid "GUESTFS_EVENT_CLOSE (payload type: void)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2744
msgid ""
"The callback function will be called while the handle is being closed "
"(synchronously from L</guestfs_close>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2747
msgid ""
"Note that libguestfs installs an L<atexit(3)> handler to try to clean up "
"handles that are open when the program exits.  This means that this callback "
"might be called indirectly from L<exit(3)>, which can cause unexpected "
"problems in higher-level languages (eg. if your HLL interpreter has already "
"been cleaned up by the time this is called, and if your callback then jumps "
"into some HLL function)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2754
msgid ""
"If no callback is registered: the handle is closed without any callback "
"being invoked."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2757
msgid "GUESTFS_EVENT_SUBPROCESS_QUIT (payload type: void)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2760
msgid ""
"The callback function will be called when the child process quits, either "
"asynchronously or if killed by L</guestfs_kill_subprocess>.  (This "
"corresponds to a transition from any state to the CONFIG state)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2764 ../src/guestfs.pod:2773 ../src/guestfs.pod:2900
msgid "If no callback is registered: the event is ignored."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2766
msgid "GUESTFS_EVENT_LAUNCH_DONE (payload type: void)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2769
msgid ""
"The callback function will be called when the child process becomes ready "
"first time after it has been launched.  (This corresponds to a transition "
"from LAUNCHING to the READY state)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2775
msgid "GUESTFS_EVENT_PROGRESS (payload type: array of 4 x uint64_t)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2778
msgid ""
"Some long-running operations can generate progress messages.  If this "
"callback is registered, then it will be called each time a progress message "
"is generated (usually two seconds after the operation started, and three "
"times per second thereafter until it completes, although the frequency may "
"change in future versions)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2784
msgid ""
"The callback receives in the payload four unsigned 64 bit numbers which are "
"(in order): C<proc_nr>, C<serial>, C<position>, C<total>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2787
msgid ""
"The units of C<total> are not defined, although for some operations C<total> "
"may relate in some way to the amount of data to be transferred (eg. in bytes "
"or megabytes), and C<position> may be the portion which has been transferred."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2792
msgid "The only defined and stable parts of the API are:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2798
msgid ""
"The callback can display to the user some type of progress bar or indicator "
"which shows the ratio of C<position>:C<total>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2803
msgid "0 E<lt>= C<position> E<lt>= C<total>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2807
msgid ""
"If any progress notification is sent during a call, then a final progress "
"notification is always sent when C<position> = C<total> (I<unless> the call "
"fails with an error)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2811
msgid ""
"This is to simplify caller code, so callers can easily set the progress "
"indicator to \"100%\" at the end of the operation, without requiring special "
"code to detect this case."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2817
msgid ""
"For some calls we are unable to estimate the progress of the call, but we "
"can still generate progress messages to indicate activity.  This is known as "
"\"pulse mode\", and is directly supported by certain progress bar "
"implementations (eg. GtkProgressBar)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2822
msgid ""
"For these calls, zero or more progress messages are generated with "
"C<position = 0> and C<total = 1>, followed by a final message with "
"C<position = total = 1>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2826
msgid ""
"As noted above, if the call fails with an error then the final message may "
"not be generated."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2831
msgid ""
"The callback also receives the procedure number (C<proc_nr>) and serial "
"number (C<serial>) of the call.  These are only useful for debugging "
"protocol issues, and the callback can normally ignore them.  The callback "
"may want to print these numbers in error messages or debugging messages."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2837
msgid "If no callback is registered: progress messages are discarded."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2839
msgid "GUESTFS_EVENT_APPLIANCE (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2842
msgid ""
"The callback function is called whenever a log message is generated by qemu, "
"the appliance kernel, guestfsd (daemon), or utility programs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2845
msgid ""
"If the verbose flag (L</guestfs_set_verbose>) is set before launch (L</"
"guestfs_launch>) then additional debug messages are generated."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2848 ../src/guestfs.pod:2862
msgid ""
"If no callback is registered: the messages are discarded unless the verbose "
"flag is set in which case they are sent to stderr.  You can override the "
"printing of verbose messages to stderr by setting up a callback."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2853
msgid "GUESTFS_EVENT_LIBRARY (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2856
msgid ""
"The callback function is called whenever a log message is generated by the "
"library part of libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2859
msgid ""
"If the verbose flag (L</guestfs_set_verbose>) is set then additional debug "
"messages are generated."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2867
msgid "GUESTFS_EVENT_WARNING (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2870
msgid ""
"The callback function is called whenever a warning message is generated by "
"the library part of libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2873
msgid ""
"If no callback is registered: the messages are printed to stderr.  You can "
"override the printing of warning messages to stderr by setting up a callback."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2877
msgid "GUESTFS_EVENT_TRACE (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2880
msgid ""
"The callback function is called whenever a trace message is generated.  This "
"only applies if the trace flag (L</guestfs_set_trace>) is set."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2883
msgid ""
"If no callback is registered: the messages are sent to stderr.  You can "
"override the printing of trace messages to stderr by setting up a callback."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2887
msgid "GUESTFS_EVENT_ENTER (payload type: function name)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2890
msgid ""
"The callback function is called whenever a libguestfs function is entered."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2893
msgid ""
"The payload is a string which contains the name of the function that we are "
"entering (not including C<guestfs_> prefix)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2896
msgid ""
"Note that libguestfs functions can call themselves, so you may see many "
"events from a single call.  A few libguestfs functions do not generate this "
"event."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2902
msgid "GUESTFS_EVENT_LIBVIRT_AUTH (payload type: libvirt URI)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2905
msgid ""
"For any API function that opens a libvirt connection, this event may be "
"generated to indicate that libvirt demands authentication information.  See "
"L</LIBVIRT AUTHENTICATION> below."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2909
msgid ""
"If no callback is registered: C<virConnectAuthPtrDefault> is used (suitable "
"for command-line programs only)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2914
msgid "EVENT API"
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2916
msgid "guestfs_set_event_callback"
msgstr "guestfs_set_event_callback"

#. type: verbatim
#: ../src/guestfs.pod:2918
#, no-wrap
msgid ""
" int guestfs_set_event_callback (guestfs_h *g,\n"
"                                 guestfs_event_callback cb,\n"
"                                 uint64_t event_bitmask,\n"
"                                 int flags,\n"
"                                 void *opaque);\n"
"\n"
msgstr ""
" int guestfs_set_event_callback (guestfs_h *g,\n"
"                                 guestfs_event_callback cb,\n"
"                                 uint64_t event_bitmask,\n"
"                                 int flags,\n"
"                                 void *opaque);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2924
msgid ""
"This function registers a callback (C<cb>) for all event classes in the "
"C<event_bitmask>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2927
msgid ""
"For example, to register for all log message events, you could call this "
"function with the bitmask C<GUESTFS_EVENT_APPLIANCE|GUESTFS_EVENT_LIBRARY|"
"GUESTFS_EVENT_WARNING>.  To register a single callback for all possible "
"classes of events, use C<GUESTFS_EVENT_ALL>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2933
msgid "C<flags> should always be passed as 0."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2935
msgid ""
"C<opaque> is an opaque pointer which is passed to the callback.  You can use "
"it for any purpose."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2938
msgid ""
"The return value is the event handle (an integer) which you can use to "
"delete the callback (see below)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2941
msgid ""
"If there is an error, this function returns C<-1>, and sets the error in the "
"handle in the usual way (see L</guestfs_last_error> etc.)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2944
msgid ""
"Callbacks remain in effect until they are deleted, or until the handle is "
"closed."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2947
msgid ""
"In the case where multiple callbacks are registered for a particular event "
"class, all of the callbacks are called.  The order in which multiple "
"callbacks are called is not defined."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2951
msgid "guestfs_delete_event_callback"
msgstr "guestfs_delete_event_callback"

#. type: verbatim
#: ../src/guestfs.pod:2953
#, no-wrap
msgid ""
" void guestfs_delete_event_callback (guestfs_h *g, int event_handle);\n"
"\n"
msgstr ""
" void guestfs_delete_event_callback (guestfs_h *g, int event_handle);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2955
msgid ""
"Delete a callback that was previously registered.  C<event_handle> should be "
"the integer that was returned by a previous call to "
"C<guestfs_set_event_callback> on the same handle."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2959
msgid "guestfs_event_to_string"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2961
#, no-wrap
msgid ""
" char *guestfs_event_to_string (uint64_t event);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2963
msgid ""
"C<event> is either a single event or a bitmask of events.  This returns a "
"string representation (useful for debugging or printing events)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2967
msgid "A single event is returned as the name in lower case, eg. C<\"close\">."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2969
msgid ""
"A bitmask of several events is returned as a comma-separated list, eg. C<"
"\"close,progress\">."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2972
msgid "If zero is passed, then the empty string C<\"\"> is returned."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2974
msgid ""
"On success this returns a string.  On error it returns NULL and sets "
"C<errno>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2977
msgid "The returned string must be freed by the caller."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2979
msgid "guestfs_event_callback"
msgstr "guestfs_event_callback"

#. type: verbatim
#: ../src/guestfs.pod:2981
#, no-wrap
msgid ""
" typedef void (*guestfs_event_callback) (\n"
"                  guestfs_h *g,\n"
"                  void *opaque,\n"
"                  uint64_t event,\n"
"                  int event_handle,\n"
"                  int flags,\n"
"                  const char *buf, size_t buf_len,\n"
"                  const uint64_t *array, size_t array_len);\n"
"\n"
msgstr ""
" typedef void (*guestfs_event_callback) (\n"
"                  guestfs_h *g,\n"
"                  void *opaque,\n"
"                  uint64_t event,\n"
"                  int event_handle,\n"
"                  int flags,\n"
"                  const char *buf, size_t buf_len,\n"
"                  const uint64_t *array, size_t array_len);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:2990
msgid ""
"This is the type of the event callback function that you have to provide."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2993
msgid ""
"The basic parameters are: the handle (C<g>), the opaque user pointer "
"(C<opaque>), the event class (eg. C<GUESTFS_EVENT_PROGRESS>), the event "
"handle, and C<flags> which in the current API you should ignore."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2997
msgid ""
"The remaining parameters contain the event payload (if any).  Each event may "
"contain a payload, which usually relates to the event class, but for future "
"proofing your code should be written to handle any payload for any event "
"class."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3002
msgid ""
"C<buf> and C<buf_len> contain a message buffer (if C<buf_len == 0>, then "
"there is no message buffer).  Note that this message buffer can contain "
"arbitrary 8 bit data, including NUL bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3006
msgid ""
"C<array> and C<array_len> is an array of 64 bit unsigned integers.  At the "
"moment this is only used for progress messages."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3009
msgid "EXAMPLE: CAPTURING LOG MESSAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3011
msgid ""
"A working program demonstrating this can be found in C<examples/debug-"
"logging.c> in the source of libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3014
msgid ""
"One motivation for the generic event API was to allow GUI programs to "
"capture debug and other messages.  In libguestfs E<le> 1.8 these were sent "
"unconditionally to C<stderr>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3018
msgid ""
"Events associated with log messages are: C<GUESTFS_EVENT_LIBRARY>, "
"C<GUESTFS_EVENT_APPLIANCE>, C<GUESTFS_EVENT_WARNING> and "
"C<GUESTFS_EVENT_TRACE>.  (Note that error messages are not events; you must "
"capture error messages separately)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3023
msgid ""
"Programs have to set up a callback to capture the classes of events of "
"interest:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3026
#, no-wrap
msgid ""
" int eh =\n"
"   guestfs_set_event_callback\n"
"     (g, message_callback,\n"
"      GUESTFS_EVENT_LIBRARY | GUESTFS_EVENT_APPLIANCE |\n"
"      GUESTFS_EVENT_WARNING | GUESTFS_EVENT_TRACE,\n"
"      0, NULL) == -1)\n"
" if (eh == -1) {\n"
"   // handle error in the usual way\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3036
msgid ""
"The callback can then direct messages to the appropriate place.  In this "
"example, messages are directed to syslog:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3039
#, no-wrap
msgid ""
" static void\n"
" message_callback (\n"
"         guestfs_h *g,\n"
"         void *opaque,\n"
"         uint64_t event,\n"
"         int event_handle,\n"
"         int flags,\n"
"         const char *buf, size_t buf_len,\n"
"         const uint64_t *array, size_t array_len)\n"
" {\n"
"   const int priority = LOG_USER|LOG_INFO;\n"
"   if (buf_len > 0)\n"
"     syslog (priority, \"event 0x%lx: %s\", event, buf);\n"
" }\n"
"\n"
msgstr ""
" static void\n"
" message_callback (\n"
"         guestfs_h *g,\n"
"         void *opaque,\n"
"         uint64_t event,\n"
"         int event_handle,\n"
"         int flags,\n"
"         const char *buf, size_t buf_len,\n"
"         const uint64_t *array, size_t array_len)\n"
" {\n"
"   const int priority = LOG_USER|LOG_INFO;\n"
"   if (buf_len > 0)\n"
"     syslog (priority, \"event 0x%lx: %s\", event, buf);\n"
" }\n"
"\n"

#. type: =head2
#: ../src/guestfs.pod:3054
msgid "LIBVIRT AUTHENTICATION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3056
msgid ""
"Some libguestfs API calls can open libvirt connections.  Currently the only "
"ones are L</guestfs_add_domain>; and L</guestfs_launch> if the libvirt "
"backend has been selected.  Libvirt connections may require authentication, "
"for example if they need to access a remote server or to access root "
"services from non-root.  Libvirt authentication happens via a callback "
"mechanism, see L<http://libvirt.org/guide/html/Application_Development_Guide-"
"Connections.html>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3064
msgid ""
"You may provide libvirt authentication data by registering a callback for "
"events of type C<GUESTFS_EVENT_LIBVIRT_AUTH>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3067
msgid ""
"If no such event is registered, then libguestfs uses a libvirt function that "
"provides command-line prompts (C<virConnectAuthPtrDefault>).  This is only "
"suitable for command-line libguestfs programs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3072
msgid ""
"To provide authentication, first call L</"
"guestfs_set_libvirt_supported_credentials> with the list of credentials your "
"program knows how to provide.  Second, register a callback for the "
"C<GUESTFS_EVENT_LIBVIRT_AUTH> event.  The event handler will be called when "
"libvirt is requesting authentication information."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3079
msgid ""
"In the event handler, call L</guestfs_get_libvirt_requested_credentials> to "
"get a list of the credentials that libvirt is asking for.  You then need to "
"ask (eg. the user) for each credential, and call L</"
"guestfs_set_libvirt_requested_credential> with the answer.  Note that for "
"each credential, additional information may be available via the calls L</"
"guestfs_get_libvirt_requested_credential_prompt>, L</"
"guestfs_get_libvirt_requested_credential_challenge> or L</"
"guestfs_get_libvirt_requested_credential_defresult>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3090
msgid "The example program below should make this clearer."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3092
msgid ""
"There is also a more substantial working example program supplied with the "
"libguestfs sources, called C<libvirt-auth.c>."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3095
#, no-wrap
msgid ""
" main ()\n"
" {\n"
"   guestfs_h *g;\n"
"   char *creds[] = { \"authname\", \"passphrase\", NULL };\n"
"   int r, eh;\n"
" \n"
msgstr ""
" main ()\n"
" {\n"
"   guestfs_h *g;\n"
"   char *creds[] = { \"authname\", \"passphrase\", NULL };\n"
"   int r, eh;\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:3101
#, no-wrap
msgid ""
"   g = guestfs_create ();\n"
"   if (!g) exit (EXIT_FAILURE);\n"
" \n"
msgstr ""
"   g = guestfs_create ();\n"
"   if (!g) exit (EXIT_FAILURE);\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:3104
#, no-wrap
msgid ""
"   /* Tell libvirt what credentials the program supports. */\n"
"   r = guestfs_set_libvirt_supported_credentials (g, creds);\n"
"   if (r == -1)\n"
"     exit (EXIT_FAILURE);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3109
#, no-wrap
msgid ""
"   /* Set up the event handler. */\n"
"   eh = guestfs_set_event_callback (\n"
"       g, do_auth,\n"
"       GUESTFS_EVENT_LIBVIRT_AUTH, 0, NULL);\n"
"   if (eh == -1)\n"
"     exit (EXIT_FAILURE);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3116
#, no-wrap
msgid ""
"   /* An example of a call that may ask for credentials. */\n"
"   r = guestfs_add_domain (\n"
"       g, \"dom\",\n"
"       GUESTFS_ADD_DOMAIN_LIBVIRTURI, \"qemu:///system\",\n"
"       -1);\n"
"   if (r == -1)\n"
"     exit (EXIT_FAILURE);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3124
#, no-wrap
msgid ""
"   exit (EXIT_SUCCESS);\n"
" }\n"
" \n"
msgstr ""
"   exit (EXIT_SUCCESS);\n"
" }\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:3127
#, no-wrap
msgid ""
" static void\n"
" do_auth (guestfs_h *g,\n"
"          void *opaque,\n"
"          uint64_t event,\n"
"          int event_handle,\n"
"          int flags,\n"
"          const char *buf, size_t buf_len,\n"
"          const uint64_t *array, size_t array_len)\n"
" {\n"
"   char **creds;\n"
"   size_t i;\n"
"   char *prompt;\n"
"   char *reply;\n"
"   size_t replylen;\n"
"   int r;\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3143
#, no-wrap
msgid ""
"   // buf will be the libvirt URI.  buf_len may be ignored.\n"
"   printf (\"Authentication required for libvirt conn '%s'\\n\",\n"
"           buf);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3147
#, no-wrap
msgid ""
"   // Ask libguestfs what credentials libvirt is demanding.\n"
"   creds = guestfs_get_libvirt_requested_credentials (g);\n"
"   if (creds == NULL)\n"
"     exit (EXIT_FAILURE);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3152
#, no-wrap
msgid ""
"   // Now ask the user for answers.\n"
"   for (i = 0; creds[i] != NULL; ++i)\n"
"   {\n"
"     if (strcmp (creds[i], \"authname\") == 0 ||\n"
"         strcmp (creds[i], \"passphrase\") == 0)\n"
"     {\n"
"       prompt =\n"
"         guestfs_get_libvirt_requested_credential_prompt (g, i);\n"
"       if (prompt && strcmp (prompt, \"\") != 0)\n"
"         printf (\"%s: \", prompt);\n"
"       free (prompt);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3164
#, no-wrap
msgid ""
"       // Some code here to ask for the credential.\n"
"       // ...\n"
"       // Put the reply in 'reply', length 'replylen' (bytes).\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3168
#, no-wrap
msgid ""
"      r = guestfs_set_libvirt_requested_credential (g, i,\n"
"          reply, replylen);\n"
"      if (r == -1)\n"
"        exit (EXIT_FAILURE);\n"
"     }\n"
" \n"
msgstr ""
"      r = guestfs_set_libvirt_requested_credential (g, i,\n"
"          reply, replylen);\n"
"      if (r == -1)\n"
"        exit (EXIT_FAILURE);\n"
"     }\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:3174
#, no-wrap
msgid ""
"     free (creds[i]);\n"
"   }\n"
" \n"
msgstr ""
"     free (creds[i]);\n"
"   }\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:3177
#, no-wrap
msgid ""
"   free (creds);\n"
" }\n"
"\n"
msgstr ""
"   free (creds);\n"
" }\n"
"\n"

#. type: =head1
#: ../src/guestfs.pod:3180
msgid "CANCELLING LONG TRANSFERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3182
msgid ""
"Some operations can be cancelled by the caller while they are in progress.  "
"Currently only operations that involve uploading or downloading data can be "
"cancelled (technically: operations that have C<FileIn> or C<FileOut> "
"parameters in the generator)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3187
msgid ""
"To cancel the transfer, call L</guestfs_user_cancel>.  For more information, "
"read the description of L</guestfs_user_cancel>."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:3190
msgid "PRIVATE DATA AREA"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3192
msgid ""
"You can attach named pieces of private data to the libguestfs handle, fetch "
"them by name, and walk over them, for the lifetime of the handle.  This is "
"called the private data area and is only available from the C API."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3197
msgid "To attach a named piece of data, use the following call:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3199
#, no-wrap
msgid ""
" void guestfs_set_private (guestfs_h *g, const char *key, void *data);\n"
"\n"
msgstr ""
" void guestfs_set_private (guestfs_h *g, const char *key, void *data);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3201
msgid ""
"C<key> is the name to associate with this data, and C<data> is an arbitrary "
"pointer (which can be C<NULL>).  Any previous item with the same key is "
"overwritten."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3205
msgid ""
"You can use any C<key> string you want, but avoid keys beginning with an "
"underscore character (libguestfs uses those for its own internal purposes, "
"such as implementing language bindings).  It is recommended that you prefix "
"the key with some unique string to avoid collisions with other users."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3211
msgid "To retrieve the pointer, use:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3213
#, no-wrap
msgid ""
" void *guestfs_get_private (guestfs_h *g, const char *key);\n"
"\n"
msgstr ""
" void *guestfs_get_private (guestfs_h *g, const char *key);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3215
msgid ""
"This function returns C<NULL> if either no data is found associated with "
"C<key>, or if the user previously set the C<key>'s C<data> pointer to "
"C<NULL>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3219
msgid ""
"Libguestfs does not try to look at or interpret the C<data> pointer in any "
"way.  As far as libguestfs is concerned, it need not be a valid pointer at "
"all.  In particular, libguestfs does I<not> try to free the data when the "
"handle is closed.  If the data must be freed, then the caller must either "
"free it before calling L</guestfs_close> or must set up a close callback to "
"do it (see L</GUESTFS_EVENT_CLOSE>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3226
msgid "To walk over all entries, use these two functions:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3228
#, no-wrap
msgid ""
" void *guestfs_first_private (guestfs_h *g, const char **key_rtn);\n"
"\n"
msgstr ""
" void *guestfs_first_private (guestfs_h *g, const char **key_rtn);\n"
"\n"

#. type: verbatim
#: ../src/guestfs.pod:3230
#, no-wrap
msgid ""
" void *guestfs_next_private (guestfs_h *g, const char **key_rtn);\n"
"\n"
msgstr ""
" void *guestfs_next_private (guestfs_h *g, const char **key_rtn);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3232
msgid ""
"C<guestfs_first_private> returns the first key, pointer pair (\"first\" does "
"not have any particular meaning -- keys are not returned in any defined "
"order).  A pointer to the key is returned in C<*key_rtn> and the "
"corresponding data pointer is returned from the function.  C<NULL> is "
"returned if there are no keys stored in the handle."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3238
msgid ""
"C<guestfs_next_private> returns the next key, pointer pair.  The return "
"value of this function is C<NULL> if there are no further entries to return."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3242
msgid "Notes about walking over entries:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3248
msgid ""
"You must not call C<guestfs_set_private> while walking over the entries."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3253
msgid ""
"The handle maintains an internal iterator which is reset when you call "
"C<guestfs_first_private>.  This internal iterator is invalidated when you "
"call C<guestfs_set_private>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3259
msgid "If you have set the data pointer associated with a key to C<NULL>, ie:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3261
#, no-wrap
msgid ""
" guestfs_set_private (g, key, NULL);\n"
"\n"
msgstr ""
" guestfs_set_private (g, key, NULL);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3263
msgid "then that C<key> is not returned when walking."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3267
msgid ""
"C<*key_rtn> is only valid until the next call to C<guestfs_first_private>, "
"C<guestfs_next_private> or C<guestfs_set_private>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3273
msgid ""
"The following example code shows how to print all keys and data pointers "
"that are associated with the handle C<g>:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3276
#, no-wrap
msgid ""
" const char *key;\n"
" void *data = guestfs_first_private (g, &key);\n"
" while (data != NULL)\n"
"   {\n"
"     printf (\"key = %s, data = %p\\n\", key, data);\n"
"     data = guestfs_next_private (g, &key);\n"
"   }\n"
"\n"
msgstr ""
" const char *key;\n"
" void *data = guestfs_first_private (g, &key);\n"
" while (data != NULL)\n"
"   {\n"
"     printf (\"key = %s, data = %p\\n\", key, data);\n"
"     data = guestfs_next_private (g, &key);\n"
"   }\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3284
msgid ""
"More commonly you are only interested in keys that begin with an application-"
"specific prefix C<foo_>.  Modify the loop like so:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3287
#, no-wrap
msgid ""
" const char *key;\n"
" void *data = guestfs_first_private (g, &key);\n"
" while (data != NULL)\n"
"   {\n"
"     if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
"       printf (\"key = %s, data = %p\\n\", key, data);\n"
"     data = guestfs_next_private (g, &key);\n"
"   }\n"
"\n"
msgstr ""
" const char *key;\n"
" void *data = guestfs_first_private (g, &key);\n"
" while (data != NULL)\n"
"   {\n"
"     if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
"       printf (\"key = %s, data = %p\\n\", key, data);\n"
"     data = guestfs_next_private (g, &key);\n"
"   }\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3296
msgid ""
"If you need to modify keys while walking, then you have to jump back to the "
"beginning of the loop.  For example, to delete all keys prefixed with "
"C<foo_>:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3300
#, no-wrap
msgid ""
"  const char *key;\n"
"  void *data;\n"
" again:\n"
"  data = guestfs_first_private (g, &key);\n"
"  while (data != NULL)\n"
"    {\n"
"      if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
"        {\n"
"          guestfs_set_private (g, key, NULL);\n"
"          /* note that 'key' pointer is now invalid, and so is\n"
"             the internal iterator */\n"
"          goto again;\n"
"        }\n"
"      data = guestfs_next_private (g, &key);\n"
"    }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3316
msgid ""
"Note that the above loop is guaranteed to terminate because the keys are "
"being deleted, but other manipulations of keys within the loop might not "
"terminate unless you also maintain an indication of which keys have been "
"visited."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:3321
msgid "SYSTEMTAP"
msgstr "SYSTEMTAP"

#. type: textblock
#: ../src/guestfs.pod:3323
msgid ""
"The libguestfs C library can be probed using systemtap or DTrace.  This is "
"true of any library, not just libguestfs.  However libguestfs also contains "
"static markers to help in probing internal operations."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3327
msgid "You can list all the static markers by doing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3329
#, no-wrap
msgid ""
" stap -l 'process(\"/usr/lib*/libguestfs.so.0\")\n"
"              .provider(\"guestfs\").mark(\"*\")'\n"
"\n"
msgstr ""
" stap -l 'process(\"/usr/lib*/libguestfs.so.0\")\n"
"              .provider(\"guestfs\").mark(\"*\")'\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3332
msgid ""
"B<Note:> These static markers are I<not> part of the stable API and may "
"change in future versions."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3335
msgid "SYSTEMTAP SCRIPT EXAMPLE"
msgstr "ПРИКЛАД СКРИПТУ SYSTEMTAP"

#. type: textblock
#: ../src/guestfs.pod:3337
msgid ""
"This script contains examples of displaying both the static markers and some "
"ordinary C entry points:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3364
#, no-wrap
msgid ""
" /* Display all calls to guestfs_mkfs* functions. */\n"
" probe process(\"/usr/lib*/libguestfs.so.0\")\n"
"           .function(\"guestfs_mkfs*\") ? {\n"
"       display_time();\n"
"       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3371
msgid ""
"The script above can be saved to C<test.stap> and run using the L<stap(1)> "
"program.  Note that you either have to be root, or you have to add yourself "
"to several special stap groups.  Consult the systemtap documentation for "
"more information."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3376
#, no-wrap
msgid ""
" # stap /tmp/test.stap\n"
" ready\n"
"\n"
msgstr ""
" # stap /tmp/test.stap\n"
" ready\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3379
msgid "In another terminal, run a guestfish command such as this:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3383
msgid "In the first terminal, stap trace output similar to this is shown:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3385
#, no-wrap
msgid ""
" 1318248056692655 (+0):\tlaunch_start\n"
" 1318248056692850 (+195):       launch_build_appliance_start\n"
" 1318248056818285 (+125435):    launch_build_appliance_end\n"
" 1318248056838059 (+19774):     launch_run_qemu\n"
" 1318248061071167 (+4233108):   launch_end\n"
" 1318248061280324 (+209157):    guestfs_mkfs g=0x1024ab0 fstype=0x46116f device=0x1024e60\n"
"\n"
msgstr ""
" 1318248056692655 (+0):\tlaunch_start\n"
" 1318248056692850 (+195):       launch_build_appliance_start\n"
" 1318248056818285 (+125435):    launch_build_appliance_end\n"
" 1318248056838059 (+19774):     launch_run_qemu\n"
" 1318248061071167 (+4233108):   launch_end\n"
" 1318248061280324 (+209157):    guestfs_mkfs g=0x1024ab0 fstype=0x46116f device=0x1024e60\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3394
msgid ""
"<!-- old anchor for the next section --> <a name="
"\"state_machine_and_low_level_event_api\"/>"
msgstr ""
"<!-- old anchor for the next section --> <a name="
"\"state_machine_and_low_level_event_api\"/>"

#. type: textblock
#: ../src/guestfs.pod:3401
msgid ""
"Internally, libguestfs is implemented by running an appliance (a special "
"type of small virtual machine) using L<qemu(1)>.  Qemu runs as a child "
"process of the main program."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3405
#, no-wrap
msgid ""
" ┌───────────────────┐\n"
" │ main program      │\n"
" │                   │\n"
" │                   │           child process / appliance\n"
" │                   │          ┌──────────────────────────┐\n"
" │                   │          │ qemu                     │\n"
" ├───────────────────┤   RPC    │      ┌─────────────────┐ │\n"
" │ libguestfs  ◀╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍▶ guestfsd        │ │\n"
" │                   │          │      ├─────────────────┤ │\n"
" └───────────────────┘          │      │ Linux kernel    │ │\n"
"                                │      └────────┬────────┘ │\n"
"                                └───────────────│──────────┘\n"
"                                                │\n"
"                                                │ virtio-scsi\n"
"                                         ┌──────┴──────┐\n"
"                                         │  Device or  │\n"
"                                         │  disk image │\n"
"                                         └─────────────┘\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3424
msgid ""
"The library, linked to the main program, creates the child process and hence "
"the appliance in the L</guestfs_launch> function."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3427
msgid ""
"Inside the appliance is a Linux kernel and a complete stack of userspace "
"tools (such as LVM and ext2 programs) and a small controlling daemon called "
"L</guestfsd>.  The library talks to L</guestfsd> using remote procedure "
"calls (RPC).  There is a mostly one-to-one correspondence between libguestfs "
"API calls and RPC calls to the daemon.  Lastly the disk image(s) are "
"attached to the qemu process which translates device access by the "
"appliance's Linux kernel into accesses to the image."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3436
msgid ""
"A common misunderstanding is that the appliance \"is\" the virtual machine.  "
"Although the disk image you are attached to might also be used by some "
"virtual machine, libguestfs doesn't know or care about this.  (But you will "
"care if both libguestfs's qemu process and your virtual machine are trying "
"to update the disk image at the same time, since these usually results in "
"massive disk corruption)."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:3443
msgid "STATE MACHINE"
msgstr "СКІНЧЕННИЙ АВТОМАТ"

#. type: textblock
#: ../src/guestfs.pod:3445
msgid "libguestfs uses a state machine to model the child process:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3447
#, no-wrap
msgid ""
"                         |\n"
"          guestfs_create / guestfs_create_flags\n"
"                         |\n"
"                         |\n"
"                     ____V_____\n"
"                    /          \\\n"
"                    |  CONFIG  |\n"
"                    \\__________/\n"
"                       ^   ^  \\\n"
"                       |    \\  \\ guestfs_launch\n"
"                       |    _\\__V______\n"
"                       |   /           \\\n"
"                       |   | LAUNCHING |\n"
"                       |   \\___________/\n"
"                       |       /\n"
"                       |  guestfs_launch\n"
"                       |     /\n"
"                     __|____V\n"
"                    /        \\\n"
"                    | READY  |\n"
"                    \\________/\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3469
msgid ""
"The normal transitions are (1) CONFIG (when the handle is created, but there "
"is no child process), (2) LAUNCHING (when the child process is booting up), "
"(3) READY meaning the appliance is up, actions can be issued to, and carried "
"out by, the child process."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3474
msgid ""
"The guest may be killed by L</guestfs_kill_subprocess>, or may die "
"asynchronously at any time (eg. due to some internal error), and that causes "
"the state to transition back to CONFIG."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3478
msgid ""
"Configuration commands for qemu such as L</guestfs_set_path> can only be "
"issued when in the CONFIG state."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3481
msgid ""
"The API offers one call that goes from CONFIG through LAUNCHING to READY.  "
"L</guestfs_launch> blocks until the child process is READY to accept "
"commands (or until some failure or timeout).  L</guestfs_launch> internally "
"moves the state from CONFIG to LAUNCHING while it is running."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3487
msgid ""
"API actions such as L</guestfs_mount> can only be issued when in the READY "
"state.  These API calls block waiting for the command to be carried out.  "
"There are no non-blocking versions, and no way to issue more than one "
"command per handle at the same time."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3492
msgid ""
"Finally, the child process sends asynchronous messages back to the main "
"program, such as kernel log messages.  You can register a callback to "
"receive these messages."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:3496
msgid "INTERNALS"
msgstr "ВНУТРІШНІ ПРИНЦИПИ РОБОТИ"

#. type: =head2
#: ../src/guestfs.pod:3498
msgid "APPLIANCE BOOT PROCESS"
msgstr "ПРОЦЕДУРА ЗАВАНТАЖЕННЯ БАЗОВОЇ СИСТЕМИ"

#. type: textblock
#: ../src/guestfs.pod:3500
msgid ""
"This process has evolved and continues to evolve.  The description here "
"corresponds only to the current version of libguestfs and is provided for "
"information only."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3504
msgid ""
"In order to follow the stages involved below, enable libguestfs debugging "
"(set the environment variable C<LIBGUESTFS_DEBUG=1>)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3509
msgid "Create the appliance"
msgstr "Створення базової системи"

#. type: textblock
#: ../src/guestfs.pod:3511
msgid ""
"C<supermin --build> is invoked to create the kernel, a small initrd and the "
"appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3514
msgid ""
"The appliance is cached in C</var/tmp/.guestfs-E<lt>UIDE<gt>> (or in another "
"directory if C<LIBGUESTFS_CACHEDIR> or C<TMPDIR> are set)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3517
msgid ""
"For a complete description of how the appliance is created and cached, read "
"the L<supermin(1)> man page."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3520
msgid "Start qemu and boot the kernel"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3522
msgid "qemu is invoked to boot the kernel."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3524
msgid "Run the initrd"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3526
msgid ""
"C<supermin --build> builds a small initrd.  The initrd is not the "
"appliance.  The purpose of the initrd is to load enough kernel modules in "
"order that the appliance itself can be mounted and started."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3530
msgid ""
"The initrd is a cpio archive called C</var/tmp/.guestfs-E<lt>UIDE<gt>/"
"appliance.d/initrd>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3533
msgid ""
"When the initrd has started you will see messages showing that kernel "
"modules are being loaded, similar to this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3536
#, no-wrap
msgid ""
" supermin: ext2 mini initrd starting up\n"
" supermin: mounting /sys\n"
" supermin: internal insmod libcrc32c.ko\n"
" supermin: internal insmod crc32c-intel.ko\n"
"\n"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3541
msgid "Find and mount the appliance device"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3543
msgid ""
"The appliance is a sparse file containing an ext2 filesystem which contains "
"a familiar (although reduced in size) Linux operating system.  It would "
"normally be called C</var/tmp/.guestfs-E<lt>UIDE<gt>/appliance.d/root>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3548
msgid ""
"The regular disks being inspected by libguestfs are the first devices "
"exposed by qemu (eg. as C</dev/vda>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3551
msgid ""
"The last disk added to qemu is the appliance itself (eg. C</dev/vdb> if "
"there was only one regular disk)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3554
msgid ""
"Thus the final job of the initrd is to locate the appliance disk, mount it, "
"and switch root into the appliance, and run C</init> from the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3558
msgid "If this works successfully you will see messages such as:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3560
#, no-wrap
msgid ""
" supermin: picked /sys/block/vdb/dev as root device\n"
" supermin: creating /dev/root as block special 252:16\n"
" supermin: mounting new root on /root\n"
" supermin: chroot\n"
" Starting /init script ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3566
msgid ""
"Note that C<Starting /init script ...> indicates that the appliance's init "
"script is now running."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3569
msgid "Initialize the appliance"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3571
msgid ""
"The appliance itself now initializes itself.  This involves starting certain "
"processes like C<udev>, possibly printing some debug information, and "
"finally running the daemon (C<guestfsd>)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3575
msgid "The daemon"
msgstr "Фонова служба"

#. type: textblock
#: ../src/guestfs.pod:3577
msgid ""
"Finally the daemon (C<guestfsd>) runs inside the appliance.  If it runs you "
"should see:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3580
#, no-wrap
msgid ""
" verbose daemon enabled\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3582
msgid ""
"The daemon expects to see a named virtio-serial port exposed by qemu and "
"connected on the other end to the library."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3585
msgid ""
"The daemon connects to this port (and hence to the library) and sends a four "
"byte message C<GUESTFS_LAUNCH_FLAG>, which initiates the communication "
"protocol (see below)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3591
msgid "COMMUNICATION PROTOCOL"
msgstr "ПРОТОКОЛ ОБМІНУ ДАНИМИ"

#. type: textblock
#: ../src/guestfs.pod:3593
msgid ""
"Don't rely on using this protocol directly.  This section documents how it "
"currently works, but it may change at any time."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3596
msgid ""
"The protocol used to talk between the library and the daemon running inside "
"the qemu virtual machine is a simple RPC mechanism built on top of XDR (RFC "
"1014, RFC 1832, RFC 4506)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3600
msgid ""
"The detailed format of structures is in C<src/guestfs_protocol.x> (note: "
"this file is automatically generated)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3603
msgid ""
"There are two broad cases, ordinary functions that don't have any C<FileIn> "
"and C<FileOut> parameters, which are handled with very simple request/reply "
"messages.  Then there are functions that have any C<FileIn> or C<FileOut> "
"parameters, which use the same request and reply messages, but they may also "
"be followed by files sent using a chunked encoding."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:3610
msgid "ORDINARY FUNCTIONS (NO FILEIN/FILEOUT PARAMS)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3612
msgid "For ordinary functions, the request message is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3614
#, no-wrap
msgid ""
" total length (header + arguments,\n"
"      but not including the length word itself)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_args (encoded as XDR)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3619
msgid ""
"The total length field allows the daemon to allocate a fixed size buffer "
"into which it slurps the rest of the message.  As a result, the total length "
"is limited to C<GUESTFS_MESSAGE_MAX> bytes (currently 4MB), which means the "
"effective size of any request is limited to somewhere under this size."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3625
msgid ""
"Note also that many functions don't take any arguments, in which case the "
"C<guestfs_I<foo>_args> is completely omitted."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3628
msgid ""
"The header contains the procedure number (C<guestfs_proc>) which is how the "
"receiver knows what type of args structure to expect, or none at all."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3632
msgid ""
"For functions that take optional arguments, the optional arguments are "
"encoded in the C<guestfs_I<foo>_args> structure in the same way as ordinary "
"arguments.  A bitmask in the header indicates which optional arguments are "
"meaningful.  The bitmask is also checked to see if it contains bits set "
"which the daemon does not know about (eg. if more optional arguments were "
"added in a later version of the library), and this causes the call to be "
"rejected."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3640
msgid "The reply message for ordinary functions is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3642
#, no-wrap
msgid ""
" total length (header + ret,\n"
"      but not including the length word itself)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_ret (encoded as XDR)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3647
msgid ""
"As above the C<guestfs_I<foo>_ret> structure may be completely omitted for "
"functions that return no formal return values."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3650
msgid ""
"As above the total length of the reply is limited to C<GUESTFS_MESSAGE_MAX>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3653
msgid ""
"In the case of an error, a flag is set in the header, and the reply message "
"is slightly changed:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3656
#, no-wrap
msgid ""
" total length (header + error,\n"
"      but not including the length word itself)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_message_error (encoded as XDR)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3661
msgid ""
"The C<guestfs_message_error> structure contains the error message as a "
"string."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:3664
msgid "FUNCTIONS THAT HAVE FILEIN PARAMETERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3666
msgid ""
"A C<FileIn> parameter indicates that we transfer a file I<into> the guest.  "
"The normal request message is sent (see above).  However this is followed by "
"a sequence of file chunks."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3670
#, no-wrap
msgid ""
" total length (header + arguments,\n"
"      but not including the length word itself,\n"
"      and not including the chunks)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_args (encoded as XDR)\n"
" sequence of chunks for FileIn param #0\n"
" sequence of chunks for FileIn param #1 etc.\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3678
msgid "The \"sequence of chunks\" is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3680
#, no-wrap
msgid ""
" length of chunk (not including length word itself)\n"
" struct guestfs_chunk (encoded as XDR)\n"
" length of chunk\n"
" struct guestfs_chunk (encoded as XDR)\n"
"   ...\n"
" length of chunk\n"
" struct guestfs_chunk (with data.data_len == 0)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3688
msgid ""
"The final chunk has the C<data_len> field set to zero.  Additionally a flag "
"is set in the final chunk to indicate either successful completion or early "
"cancellation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3692
msgid ""
"At time of writing there are no functions that have more than one FileIn "
"parameter.  However this is (theoretically) supported, by sending the "
"sequence of chunks for each FileIn parameter one after another (from left to "
"right)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3697
msgid ""
"Both the library (sender) I<and> the daemon (receiver) may cancel the "
"transfer.  The library does this by sending a chunk with a special flag set "
"to indicate cancellation.  When the daemon sees this, it cancels the whole "
"RPC, does I<not> send any reply, and goes back to reading the next request."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3703
msgid ""
"The daemon may also cancel.  It does this by writing a special word "
"C<GUESTFS_CANCEL_FLAG> to the socket.  The library listens for this during "
"the transfer, and if it gets it, it will cancel the transfer (it sends a "
"cancel chunk).  The special word is chosen so that even if cancellation "
"happens right at the end of the transfer (after the library has finished "
"writing and has started listening for the reply), the \"spurious\" cancel "
"flag will not be confused with the reply message."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3712
msgid ""
"This protocol allows the transfer of arbitrary sized files (no 32 bit "
"limit), and also files where the size is not known in advance (eg. from "
"pipes or sockets).  However the chunks are rather small "
"(C<GUESTFS_MAX_CHUNK_SIZE>), so that neither the library nor the daemon need "
"to keep much in memory."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:3718
msgid "FUNCTIONS THAT HAVE FILEOUT PARAMETERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3720
msgid ""
"The protocol for FileOut parameters is exactly the same as for FileIn "
"parameters, but with the roles of daemon and library reversed."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3723
#, no-wrap
msgid ""
" total length (header + ret,\n"
"      but not including the length word itself,\n"
"      and not including the chunks)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_ret (encoded as XDR)\n"
" sequence of chunks for FileOut param #0\n"
" sequence of chunks for FileOut param #1 etc.\n"
"\n"
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:3731
msgid "INITIAL MESSAGE"
msgstr "ПОЧАТКОВЕ ПОВІДОМЛЕННЯ"

#. type: textblock
#: ../src/guestfs.pod:3733
msgid ""
"When the daemon launches it sends an initial word (C<GUESTFS_LAUNCH_FLAG>) "
"which indicates that the guest and daemon is alive.  This is what L</"
"guestfs_launch> waits for."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:3737
msgid "PROGRESS NOTIFICATION MESSAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3739
msgid ""
"The daemon may send progress notification messages at any time.  These are "
"distinguished by the normal length word being replaced by "
"C<GUESTFS_PROGRESS_FLAG>, followed by a fixed size progress message."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3743
msgid ""
"The library turns them into progress callbacks (see L</"
"GUESTFS_EVENT_PROGRESS>) if there is a callback registered, or discards them "
"if not."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3747
msgid ""
"The daemon self-limits the frequency of progress messages it sends (see "
"C<daemon/proto.c:notify_progress>).  Not all calls generate progress "
"messages."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:3751
msgid "LIBGUESTFS VERSION NUMBERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3753
msgid ""
"Since April 2010, libguestfs has started to make separate development and "
"stable releases, along with corresponding branches in our git repository.  "
"These separate releases can be identified by version number:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3758
#, no-wrap
msgid ""
"                 even numbers for stable: 1.2.x, 1.4.x, ...\n"
"       .-------- odd numbers for development: 1.3.x, 1.5.x, ...\n"
"       |\n"
"       v\n"
" 1  .  3  .  5\n"
" ^           ^\n"
" |           |\n"
" |           `-------- sub-version\n"
" |\n"
" `------ always '1' because we don't change the ABI\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3769
msgid "Thus \"1.3.5\" is the 5th update to the development branch \"1.3\"."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3771
msgid ""
"As time passes we cherry pick fixes from the development branch and backport "
"those into the stable branch, the effect being that the stable branch should "
"get more stable and less buggy over time.  So the stable releases are ideal "
"for people who don't need new features but would just like the software to "
"work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3777
msgid "Our criteria for backporting changes are:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3783
msgid ""
"Documentation changes which don't affect any code are backported unless the "
"documentation refers to a future feature which is not in stable."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3789
msgid ""
"Bug fixes which are not controversial, fix obvious problems, and have been "
"well tested are backported."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3794
msgid ""
"Simple rearrangements of code which shouldn't affect how it works get "
"backported.  This is so that the code in the two branches doesn't get too "
"far out of step, allowing us to backport future fixes more easily."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3800
msgid ""
"We I<don't> backport new features, new APIs, new tools etc, except in one "
"exceptional case: the new feature is required in order to implement an "
"important bug fix."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3806
msgid ""
"A new stable branch starts when we think the new features in development are "
"substantial and compelling enough over the current stable branch to warrant "
"it.  When that happens we create new stable and development versions 1.N.0 "
"and 1.(N+1).0 [N is even].  The new dot-oh release won't necessarily be so "
"stable at this point, but by backporting fixes from development, that branch "
"will stabilize over time."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:3814
msgid "EXTENDING LIBGUESTFS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3816
msgid "This section is for hackers who want to extend libguestfs itself."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3818
msgid "OVERVIEW OF THE SOURCE CODE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3820
msgid ""
"Libguestfs source is located in the github repository L<https://github.com/"
"libguestfs/libguestfs>"
msgstr ""
"Код libguestfs зберігається у сховищі github L<https://github.com/libguestfs/"
"libguestfs>"

#. type: textblock
#: ../src/guestfs.pod:3823
msgid ""
"Large amounts of boilerplate code in libguestfs (RPC, bindings, "
"documentation) are generated.  This means that many source files will appear "
"to be missing from a straightforward git checkout.  You have to run the "
"generator (C<./autogen.sh && make -C generator>) in order to create those "
"files."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3829
msgid ""
"Libguestfs uses an autotools-based build system, with the main files being "
"C<configure.ac> and C<Makefile.am>.  The C<generator> subdirectory contains "
"the generator, plus files describing the API.  The C<src> subdirectory "
"contains source for the library.  The C<appliance> and C<daemon> "
"subdirectories contain the source for the code that builds the appliance, "
"and the code that runs in the appliance respectively.  Other directories are "
"covered in the section L<SOURCE CODE SUBDIRECTORIES> below."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3838
msgid ""
"Apart from the fact that all API entry points go via some generated code, "
"the library is straightforward.  (In fact, even the generated code is "
"designed to be readable, and should be read as ordinary code).  Some actions "
"run entirely in the library, and are written as C functions in files under "
"C<src>.  Others are forwarded to the daemon where (after some generated RPC "
"marshalling) they appear as C functions in files under C<daemon>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3846
msgid "To build from source, first read the C<README> file."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3848
msgid "C<local*> FILES"
msgstr "C<local*> ФАЙЛИ"

#. type: textblock
#: ../src/guestfs.pod:3850
msgid ""
"Files in the top source directory that begin with the prefix C<local*> are "
"ignored by git.  These files can contain local configuration or scripts that "
"you need to build libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3854
msgid ""
"By convention, I have a file called C<localconfigure> which is a simple "
"wrapper around C<autogen.sh> containing local configure customizations that "
"I need:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3858
#, no-wrap
msgid ""
" . localenv\n"
" ./autogen.sh \\\n"
"     --with-default-backend=libvirt \\\n"
"     --enable-gcc-warnings \\\n"
"     --enable-gtk-doc \\\n"
"     -C \\\n"
"     \"$@\"\n"
"\n"
msgstr ""
" . localenv\n"
" ./autogen.sh \\\n"
"     --with-default-backend=libvirt \\\n"
"     --enable-gcc-warnings \\\n"
"     --enable-gtk-doc \\\n"
"     -C \\\n"
"     \"$@\"\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3866
msgid "So I can use this to build libguestfs:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3868
#, no-wrap
msgid ""
" ./localconfigure && make\n"
"\n"
msgstr ""
" ./localconfigure && make\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3870
msgid ""
"If there is a file in the top build directory called C<localenv>, then it "
"will be sourced by C<make>.  This file can contain any local environment "
"variables needed, eg. for skipping tests:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3874
#, no-wrap
msgid ""
" # Use an alternate python binary.\n"
" export PYTHON=python3\n"
" # Skip this test, it is broken.\n"
" export SKIP_TEST_BTRFS_FSCK=1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3879
msgid ""
"Note that C<localenv> is included by the top Makefile (so it's a Makefile "
"fragment).  But if it is also sourced by your C<localconfigure> script then "
"it is used as a shell script."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3883
msgid "ADDING A NEW API ACTION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3885
msgid ""
"Because large amounts of boilerplate code in libguestfs are generated, this "
"makes it easy to extend the libguestfs API."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3888
msgid "To add a new API action there are two changes:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3894
msgid ""
"You need to add a description of the call (name, parameters, return type, "
"tests, documentation) to C<generator/actions.ml>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3897
msgid ""
"There are two sorts of API action, depending on whether the call goes "
"through to the daemon in the appliance, or is serviced entirely by the "
"library (see L</ARCHITECTURE> above).  L</guestfs_sync> is an example of the "
"former, since the sync is done in the appliance.  L</guestfs_set_trace> is "
"an example of the latter, since a trace flag is maintained in the handle and "
"all tracing is done on the library side."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3905
msgid ""
"Most new actions are of the first type, and get added to the "
"C<daemon_functions> list.  Each function has a unique procedure number used "
"in the RPC protocol which is assigned to that action when we publish "
"libguestfs and cannot be reused.  Take the latest procedure number and "
"increment it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3911
msgid ""
"For library-only actions of the second type, add to the "
"C<non_daemon_functions> list.  Since these functions are serviced by the "
"library and do not travel over the RPC mechanism to the daemon, these "
"functions do not need a procedure number, and so the procedure number is set "
"to C<-1>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3919
msgid "Implement the action (in C):"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3921
msgid ""
"For daemon actions, implement the function C<do_E<lt>nameE<gt>> in the "
"C<daemon/> directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3924
msgid ""
"For library actions, implement the function C<guestfs__E<lt>nameE<gt>> "
"(note: double underscore) in the C<src/> directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3927
msgid "In either case, use another function as an example of what to do."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3931
msgid "After making these changes, use C<make> to compile."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3933
msgid ""
"Note that you don't need to implement the RPC, language bindings, manual "
"pages or anything else.  It's all automatically generated from the OCaml "
"description."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3937
msgid "ADDING TESTS FOR AN API ACTION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3939
msgid ""
"You can supply zero or as many tests as you want per API call.  The tests "
"can either be added as part of the API description (C<generator/actions."
"ml>), or in some rarer cases you may want to drop a script into C<tests/*/"
">.  Note that adding a script to C<tests/*/> is slower, so if possible use "
"the first method."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3945
msgid ""
"The following describes the test environment used when you add an API test "
"in C<actions.ml>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3948
msgid "The test environment has 4 block devices:"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3952
msgid "C</dev/sda> 500MB"
msgstr "C</dev/sda> 500 МБ"

#. type: textblock
#: ../src/guestfs.pod:3954
msgid "General block device for testing."
msgstr "Блоковий пристрій загального типу для тестування."

#. type: =item
#: ../src/guestfs.pod:3956
msgid "C</dev/sdb> 500MB"
msgstr "C</dev/sdb> 500MB"

#. type: textblock
#: ../src/guestfs.pod:3958
msgid ""
"C</dev/sdb1> is an ext2 filesystem used for testing filesystem write "
"operations."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3961
msgid "C</dev/sdc> 10MB"
msgstr "C</dev/sdc> 10 МБ"

#. type: textblock
#: ../src/guestfs.pod:3963
msgid "Used in a few tests where two block devices are needed."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3965
msgid "C</dev/sdd>"
msgstr "C</dev/sdd>"

#. type: textblock
#: ../src/guestfs.pod:3967
msgid "ISO with fixed content (see C<images/test.iso>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3971
msgid ""
"To be able to run the tests in a reasonable amount of time, the libguestfs "
"appliance and block devices are reused between tests.  So don't try testing "
"L</guestfs_kill_subprocess> :-x"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3975
msgid ""
"Each test starts with an initial scenario, selected using one of the "
"C<Init*> expressions, described in C<generator/types.ml>.  These initialize "
"the disks mentioned above in a particular way as documented in C<types.ml>.  "
"You should not assume anything about the previous contents of other disks "
"that are not initialized."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3981
msgid ""
"You can add a prerequisite clause to any individual test.  This is a run-"
"time check, which, if it fails, causes the test to be skipped.  Useful if "
"testing a command which might not work on all variations of libguestfs "
"builds.  A test that has prerequisite of C<Always> means to run "
"unconditionally."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3987
msgid ""
"In addition, packagers can skip individual tests by setting environment "
"variables before running C<make check>."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3990
#, no-wrap
msgid ""
" SKIP_TEST_<CMD>_<NUM>=1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3992
msgid "eg: C<SKIP_TEST_COMMAND_3=1> skips test #3 of L</guestfs_command>."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3996
#, no-wrap
msgid ""
" SKIP_TEST_<CMD>=1\n"
"\n"
msgstr ""
" SKIP_TEST_<CMD>=1\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:3998
msgid "eg: C<SKIP_TEST_ZEROFREE=1> skips all L</guestfs_zerofree> tests."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4000
msgid "Packagers can run only certain tests by setting for example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4002
#, no-wrap
msgid ""
" TEST_ONLY=\"vfs_type zerofree\"\n"
"\n"
msgstr ""
" TEST_ONLY=\"vfs_type zerofree\"\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:4004
msgid ""
"See C<tests/c-api/tests.c> for more details of how these environment "
"variables work."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4007
msgid "DEBUGGING NEW API ACTIONS"
msgstr "ДІАГНОСТИКА НОВИХ ДІЙ API"

#. type: textblock
#: ../src/guestfs.pod:4009
msgid "Test new actions work before submitting them."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4011
msgid "You can use guestfish to try out new commands."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4013
msgid ""
"Debugging the daemon is a problem because it runs inside a minimal "
"environment.  However you can fprintf messages in the daemon to stderr, and "
"they will show up if you use C<guestfish -v>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4017
msgid "ADDING A NEW LANGUAGE BINDING"
msgstr "ДОДАВАННЯ НОВОЇ ПРИВ’ЯЗКИ ДО МОВИ"

#. type: textblock
#: ../src/guestfs.pod:4019
msgid ""
"All language bindings must be generated by the generator (see the "
"C<generator> subdirectory)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4022
msgid ""
"There is no documentation for this yet.  We suggest you look at an existing "
"binding, eg. C<generator/ocaml.ml> or C<generator/perl.ml>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4026
msgid "ADDING TESTS FOR LANGUAGE BINDINGS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4028
msgid ""
"Language bindings should come with tests.  Previously testing of language "
"bindings was rather ad-hoc, but we have been trying to formalize the set of "
"tests that every language binding should use."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4032
msgid ""
"Currently only the OCaml and Perl bindings actually implement the full set "
"of tests, and the OCaml bindings are canonical, so you should emulate what "
"the OCaml tests do."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4036
msgid "This is the numbering scheme used by the tests:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4038
#, no-wrap
msgid ""
" - 000+ basic tests:\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4040
#, no-wrap
msgid ""
"   010  load the library\n"
"   020  create\n"
"   030  create-flags\n"
"   040  create multiple handles\n"
"   050  test setting and getting config properties\n"
"   060  explicit close\n"
"   070  optargs\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4048
#, no-wrap
msgid ""
" - 100  launch, create partitions and LVs and filesystems\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4050
#, no-wrap
msgid ""
" - 400+ events:\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4052
#, no-wrap
msgid ""
"   410  close event\n"
"   420  log messages\n"
"   430  progress messages\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4056
#, no-wrap
msgid ""
" - 800+ regression tests (specific to the language)\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4058
#, no-wrap
msgid ""
" - 900+ any other custom tests for the language\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4060
msgid ""
"To save time when running the tests, only 100, 430, 800+, 900+ should launch "
"the handle."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4063
msgid "FORMATTING CODE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4065
msgid ""
"Our C source code generally adheres to some basic code-formatting "
"conventions.  The existing code base is not totally consistent on this "
"front, but we do prefer that contributed code be formatted similarly.  In "
"short, use spaces-not-TABs for indentation, use 2 spaces for each "
"indentation level, and other than that, follow the K&R style."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4071
msgid ""
"If you use Emacs, add the following to one of one of your start-up files (e."
"g., ~/.emacs), to help ensure that you get indentation right:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4074
#, no-wrap
msgid ""
" ;;; In libguestfs, indent with spaces everywhere (not TABs).\n"
" ;;; Exceptions: Makefile and ChangeLog modes.\n"
" (add-hook 'find-file-hook\n"
"     '(lambda () (if (and buffer-file-name\n"
"                          (string-match \"/libguestfs\\\\>\"\n"
"                              (buffer-file-name))\n"
"                          (not (string-equal mode-name \"Change Log\"))\n"
"                          (not (string-equal mode-name \"Makefile\")))\n"
"                     (setq indent-tabs-mode nil))))\n"
" \n"
msgstr ""
" ;;; In libguestfs, indent with spaces everywhere (not TABs).\n"
" ;;; Exceptions: Makefile and ChangeLog modes.\n"
" (add-hook 'find-file-hook\n"
"     '(lambda () (if (and buffer-file-name\n"
"                          (string-match \"/libguestfs\\\\>\"\n"
"                              (buffer-file-name))\n"
"                          (not (string-equal mode-name \"Change Log\"))\n"
"                          (not (string-equal mode-name \"Makefile\")))\n"
"                     (setq indent-tabs-mode nil))))\n"
" \n"

#. type: verbatim
#: ../src/guestfs.pod:4084
#, no-wrap
msgid ""
" ;;; When editing C sources in libguestfs, use this style.\n"
" (defun libguestfs-c-mode ()\n"
"   \"C mode with adjusted defaults for use with libguestfs.\"\n"
"   (interactive)\n"
"   (c-set-style \"K&R\")\n"
"   (setq c-indent-level 2)\n"
"   (setq c-basic-offset 2))\n"
" (add-hook 'c-mode-hook\n"
"           '(lambda () (if (string-match \"/libguestfs\\\\>\"\n"
"                               (buffer-file-name))\n"
"                           (libguestfs-c-mode))))\n"
"\n"
msgstr ""
" ;;; When editing C sources in libguestfs, use this style.\n"
" (defun libguestfs-c-mode ()\n"
"   \"C mode with adjusted defaults for use with libguestfs.\"\n"
"   (interactive)\n"
"   (c-set-style \"K&R\")\n"
"   (setq c-indent-level 2)\n"
"   (setq c-basic-offset 2))\n"
" (add-hook 'c-mode-hook\n"
"           '(lambda () (if (string-match \"/libguestfs\\\\>\"\n"
"                               (buffer-file-name))\n"
"                           (libguestfs-c-mode))))\n"
"\n"

#. type: =head2
#: ../src/guestfs.pod:4096
msgid "TESTING YOUR CHANGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4098
msgid "Enable warnings when compiling (and fix any problems this finds):"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4101
#, no-wrap
msgid ""
" ./configure --enable-gcc-warnings\n"
"\n"
msgstr ""
" ./configure --enable-gcc-warnings\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:4103
msgid "Useful targets are:"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4107
msgid "C<make check>"
msgstr "C<make check>"

#. type: textblock
#: ../src/guestfs.pod:4109
msgid "Runs the regular test suite."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4111
msgid ""
"This is implemented using the regular automake C<TESTS> target.  See the "
"automake documentation for details."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4114
msgid "C<make syntax-check -j1 -k>"
msgstr "C<make syntax-check -j1 -k>"

#. type: textblock
#: ../src/guestfs.pod:4116
msgid "Checks for various syntax and style problems in the code."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4118
msgid "C<make check-valgrind>"
msgstr "C<make check-valgrind>"

#. type: textblock
#: ../src/guestfs.pod:4120
msgid "Runs a subset of the test suite under valgrind."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4122
msgid ""
"Any C<Makefile.am> in the tree that has a C<check-valgrind:> target will be "
"run by this rule."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4125
msgid "C<make check-valgrind-local-guests>"
msgstr "C<make check-valgrind-local-guests>"

#. type: textblock
#: ../src/guestfs.pod:4127
msgid ""
"Runs a subset of the test suite under valgrind using locally installed "
"libvirt guests (read-only)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4130
msgid "C<make check-direct>"
msgstr "C<make check-direct>"

#. type: textblock
#: ../src/guestfs.pod:4132
msgid ""
"Runs all tests using default appliance back-end.  This only has any effect "
"if a non-default backend was selected using C<./configure --with-default-"
"backend=...>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4136
msgid "C<make check-valgrind-direct>"
msgstr "C<make check-valgrind-direct>"

#. type: textblock
#: ../src/guestfs.pod:4138
msgid ""
"Run a subset of the test suite under valgrind using the default appliance "
"back-end."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4141
msgid "C<make check-uml>"
msgstr "C<make check-uml>"

#. type: textblock
#: ../src/guestfs.pod:4143
msgid "Runs all tests using the User-Mode Linux backend."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4145
msgid ""
"As there is no standard location for the User-Mode Linux kernel, you I<have> "
"to set C<LIBGUESTFS_HV> to point to the kernel image, eg:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4148
#, no-wrap
msgid ""
" make check-uml LIBGUESTFS_HV=~/d/linux-um/vmlinux\n"
"\n"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4150
msgid "C<make check-valgrind-uml>"
msgstr "C<make check-valgrind-uml>"

#. type: textblock
#: ../src/guestfs.pod:4152
msgid "Runs all tests using the User-Mode Linux backend, under valgrind."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4154
msgid "As above, you have to set C<LIBGUESTFS_HV> to point to the kernel."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4156
msgid "C<make check-with-upstream-qemu>"
msgstr "C<make check-with-upstream-qemu>"

#. type: textblock
#: ../src/guestfs.pod:4158
msgid ""
"Runs all tests using a local qemu binary.  It looks for the qemu binary in "
"QEMUDIR (defaults to C<$HOME/d/qemu>), but you can set this to another "
"directory on the command line, eg:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4162
#, no-wrap
msgid ""
" make check-with-upstream-qemu QEMUDIR=/usr/src/qemu\n"
"\n"
msgstr ""
" make check-with-upstream-qemu QEMUDIR=/usr/src/qemu\n"
"\n"

#. type: =item
#: ../src/guestfs.pod:4164
msgid "C<make check-with-upstream-libvirt>"
msgstr "C<make check-with-upstream-libvirt>"

#. type: textblock
#: ../src/guestfs.pod:4166
msgid ""
"Runs all tests using a local libvirt.  This only has any effect if the "
"libvirt backend was selected using C<./configure --with-default-"
"backend=libvirt>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4170
msgid ""
"It looks for libvirt in LIBVIRTDIR (defaults to C<$HOME/d/libvirt>), but you "
"can set this to another directory on the command line, eg:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4173
#, no-wrap
msgid ""
" make check-with-upstream-libvirt LIBVIRTDIR=/usr/src/libvirt\n"
"\n"
msgstr ""
" make check-with-upstream-libvirt LIBVIRTDIR=/usr/src/libvirt\n"
"\n"

#. type: =item
#: ../src/guestfs.pod:4175
msgid "C<make check-slow>"
msgstr "C<make check-slow>"

#. type: textblock
#: ../src/guestfs.pod:4177
msgid "Runs some slow/long-running tests which are not run by default."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4179
msgid ""
"Any C<Makefile.am> in the tree that has a C<check-slow:> target will be run "
"by this rule."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4182
msgid "C<make check-all>"
msgstr "C<make check-all>"

#. type: textblock
#: ../src/guestfs.pod:4184
msgid "Equivalent to running all C<make check*> rules."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4186
msgid "C<make check-release>"
msgstr "C<make check-release>"

#. type: textblock
#: ../src/guestfs.pod:4188
msgid ""
"Runs a subset of C<make check*> rules that are required to pass before a "
"tarball can be released.  Currently this is:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4195
msgid "check"
msgstr "check"

#. type: textblock
#: ../src/guestfs.pod:4199
msgid "check-valgrind"
msgstr "check-valgrind"

#. type: textblock
#: ../src/guestfs.pod:4203
msgid "check-direct"
msgstr "check-direct"

#. type: textblock
#: ../src/guestfs.pod:4207
msgid "check-valgrind-direct"
msgstr "check-valgrind-direct"

#. type: textblock
#: ../src/guestfs.pod:4211
msgid "check-slow"
msgstr "check-slow"

#. type: =head2
#: ../src/guestfs.pod:4217
msgid "DAEMON CUSTOM PRINTF FORMATTERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4219
msgid ""
"In the daemon code we have created custom printf formatters C<%Q> and C<%R>, "
"which are used to do shell quoting."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4224
msgid "%Q"
msgstr "%Q"

#. type: textblock
#: ../src/guestfs.pod:4226
msgid ""
"Simple shell quoted string.  Any spaces or other shell characters are "
"escaped for you."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4229
msgid "%R"
msgstr "%R"

#. type: textblock
#: ../src/guestfs.pod:4231
msgid ""
"Same as C<%Q> except the string is treated as a path which is prefixed by "
"the sysroot."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:4238
#, no-wrap
msgid ""
" asprintf (&cmd, \"cat %R\", path);\n"
"\n"
msgstr ""
" asprintf (&cmd, \"cat %R\", path);\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:4240
msgid "would produce C<cat /sysroot/some\\ path\\ with\\ spaces>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4242
msgid ""
"I<Note:> Do I<not> use these when you are passing parameters to the "
"C<command{,r,v,rv}()> functions.  These parameters do NOT need to be quoted "
"because they are not passed via the shell (instead, straight to exec).  You "
"probably want to use the C<sysroot_path()> function however."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4248
msgid "SUBMITTING YOUR NEW API ACTIONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4250
msgid ""
"Submit patches to the mailing list: L<http://www.redhat.com/mailman/listinfo/"
"libguestfs> and CC to L<rjones@redhat.com>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4254
msgid "INTERNATIONALIZATION (I18N) SUPPORT"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4256
msgid "We support i18n (gettext anyhow) in the library."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4258
msgid ""
"However many messages come from the daemon, and we don't translate those at "
"the moment.  One reason is that the appliance generally has all locale files "
"removed from it, because they take up a lot of space.  So we'd have to readd "
"some of those, as well as copying our PO files into the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4264
msgid ""
"Debugging messages are never translated, since they are intended for the "
"programmers."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4267
msgid "SOURCE CODE SUBDIRECTORIES"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4271
msgid "C<align>"
msgstr "C<align>"

#. type: textblock
#: ../src/guestfs.pod:4273
msgid "L<virt-alignment-scan(1)> command and documentation."
msgstr "Програма L<virt-alignment-scan(1)> та документація до неї."

#. type: textblock
#: ../src/guestfs.pod:4277
msgid "The libguestfs appliance, build scripts and so on."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4279
msgid "C<bash>"
msgstr "C<bash>"

#. type: textblock
#: ../src/guestfs.pod:4281
msgid "Bash tab-completion scripts."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4283
msgid "C<build-aux>"
msgstr "C<build-aux>"

#. type: textblock
#: ../src/guestfs.pod:4285
msgid "Various build scripts used by autotools."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4287
msgid "C<builder>"
msgstr "C<builder>"

#. type: textblock
#: ../src/guestfs.pod:4289
msgid "L<virt-builder(1)> command and documentation."
msgstr "Програма L<virt-builder(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4291
msgid "C<cat>"
msgstr "C<cat>"

#. type: textblock
#: ../src/guestfs.pod:4293
msgid ""
"The L<virt-cat(1)>, L<virt-filesystems(1)>, L<virt-log(1)> and L<virt-ls(1)> "
"commands and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4296
msgid "C<contrib>"
msgstr "C<contrib>"

#. type: textblock
#: ../src/guestfs.pod:4298
msgid "Outside contributions, experimental parts."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4300
msgid "C<customize>"
msgstr "C<customize>"

#. type: textblock
#: ../src/guestfs.pod:4302
msgid "L<virt-customize(1)> command and documentation."
msgstr "Програма L<virt-customize(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4304
msgid "C<daemon>"
msgstr "C<daemon>"

#. type: textblock
#: ../src/guestfs.pod:4306
msgid ""
"The daemon that runs inside the libguestfs appliance and carries out actions."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4309
msgid "C<df>"
msgstr "C<df>"

#. type: textblock
#: ../src/guestfs.pod:4311
msgid "L<virt-df(1)> command and documentation."
msgstr "Програма L<virt-df(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4313
msgid "C<diff>"
msgstr "C<diff>"

#. type: textblock
#: ../src/guestfs.pod:4315
msgid "L<virt-diff(1)> command and documentation."
msgstr "Програма L<virt-diff(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4317
msgid "C<edit>"
msgstr "C<edit>"

#. type: textblock
#: ../src/guestfs.pod:4319
msgid "L<virt-edit(1)> command and documentation."
msgstr "Програма L<virt-edit(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4321
msgid "C<examples>"
msgstr "C<examples>"

#. type: textblock
#: ../src/guestfs.pod:4323
msgid "C API example code."
msgstr "Код прикладів використання програмного інтерфейсу мовою C."

#. type: =item
#: ../src/guestfs.pod:4325
msgid "C<fish>"
msgstr "C<fish>"

#. type: textblock
#: ../src/guestfs.pod:4327
msgid ""
"L<guestfish(1)>, the command-line shell, and various shell scripts built on "
"top such as L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-tar-in(1)>, "
"L<virt-tar-out(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4333
msgid "L<virt-format(1)> command and documentation."
msgstr "Програма L<virt-format(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4335
msgid "C<fuse>"
msgstr "C<fuse>"

#. type: textblock
#: ../src/guestfs.pod:4337
msgid ""
"L<guestmount(1)>, FUSE (userspace filesystem) built on top of libguestfs."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4339
msgid "C<generator>"
msgstr "C<generator>"

#. type: textblock
#: ../src/guestfs.pod:4341
msgid ""
"The crucially important generator, used to automatically generate large "
"amounts of boilerplate C code for things like RPC and bindings."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4344
msgid "C<gnulib>"
msgstr "C<gnulib>"

#. type: textblock
#: ../src/guestfs.pod:4346
msgid ""
"Gnulib is used as a portability library.  A copy of gnulib is included under "
"here."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4349
msgid "C<html>"
msgstr "C<html>"

#. type: textblock
#: ../src/guestfs.pod:4351
msgid "Generated HTML manual pages."
msgstr "Створені сторінки підручника у форматі HTML."

#. type: =item
#: ../src/guestfs.pod:4353
msgid "C<inspector>"
msgstr "C<inspector>"

#. type: textblock
#: ../src/guestfs.pod:4355
msgid "L<virt-inspector(1)>, the virtual machine image inspector."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4357
msgid "C<logo>"
msgstr "C<logo>"

#. type: textblock
#: ../src/guestfs.pod:4359
msgid "Logo used on the website.  The fish is called Arthur by the way."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4361
msgid "C<m4>"
msgstr "C<m4>"

#. type: textblock
#: ../src/guestfs.pod:4363
msgid "M4 macros used by autoconf."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4365
msgid "C<make-fs>"
msgstr "C<make-fs>"

#. type: textblock
#: ../src/guestfs.pod:4367
msgid "L<virt-make-fs(1)> command and documentation."
msgstr "Програма L<virt-make-fs(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4369
msgid "C<mllib>"
msgstr "C<mllib>"

#. type: textblock
#: ../src/guestfs.pod:4371
msgid ""
"Various libraries and common code used by L<virt-resize(1)> and the other "
"tools which are written in OCaml."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4374
msgid "C<p2v>"
msgstr "C<p2v>"

#. type: textblock
#: ../src/guestfs.pod:4376
msgid ""
"L<virt-p2v(1)> command, documentation and scripts for building the virt-p2v "
"ISO or disk image."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4379
msgid "C<po>"
msgstr "C<po>"

#. type: textblock
#: ../src/guestfs.pod:4381
msgid "Translations of simple gettext strings."
msgstr "Переклади простих рядків gettext."

#. type: =item
#: ../src/guestfs.pod:4383
msgid "C<po-docs>"
msgstr "C<po-docs>"

#. type: textblock
#: ../src/guestfs.pod:4385
msgid ""
"The build infrastructure and PO files for translations of manpages and POD "
"files.  Eventually this will be combined with the C<po> directory, but that "
"is rather complicated."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4389
msgid "C<rescue>"
msgstr "C<rescue>"

#. type: textblock
#: ../src/guestfs.pod:4391
msgid "L<virt-rescue(1)> command and documentation."
msgstr "Програма L<virt-rescue(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4393
msgid "C<resize>"
msgstr "C<resize>"

#. type: textblock
#: ../src/guestfs.pod:4395
msgid "L<virt-resize(1)> command and documentation."
msgstr "Програма L<virt-resize(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4397
msgid "C<sparsify>"
msgstr "C<sparsify>"

#. type: textblock
#: ../src/guestfs.pod:4399
msgid "L<virt-sparsify(1)> command and documentation."
msgstr "Програма L<virt-sparsify(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4401
msgid "C<src>"
msgstr "C<src>"

#. type: textblock
#: ../src/guestfs.pod:4403
msgid "Source code to the C library."
msgstr "Початковий код бібліотеки мовою C."

#. type: =item
#: ../src/guestfs.pod:4405
msgid "C<sysprep>"
msgstr "C<sysprep>"

#. type: textblock
#: ../src/guestfs.pod:4407
msgid "L<virt-sysprep(1)> command and documentation."
msgstr "Програма L<virt-sysprep(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4409
msgid "C<tests>"
msgstr "C<tests>"

#. type: textblock
#: ../src/guestfs.pod:4411
msgid "Tests."
msgstr "Тести."

#. type: =item
#: ../src/guestfs.pod:4413
msgid "C<test-tool>"
msgstr "C<test-tool>"

#. type: textblock
#: ../src/guestfs.pod:4415
msgid ""
"Test tool for end users to test if their qemu/kernel combination will work "
"with libguestfs."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4418
msgid "C<tmp>"
msgstr "C<tmp>"

#. type: textblock
#: ../src/guestfs.pod:4420
msgid ""
"Used for temporary files when running the tests (instead of C</tmp> etc).  "
"The reason is so that you can run multiple parallel tests of libguestfs "
"without having one set of tests overwriting the appliance created by another."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4425
msgid "C<tools>"
msgstr "C<tools>"

#. type: textblock
#: ../src/guestfs.pod:4427
msgid ""
"Command line tools written in Perl (L<virt-win-reg(1)> and many others)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:4429
msgid "C<v2v>"
msgstr "C<v2v>"

#. type: textblock
#: ../src/guestfs.pod:4431
msgid "L<virt-v2v(1)> command and documentation."
msgstr "Програма L<virt-v2v(1)> та документація до неї."

#. type: =item
#: ../src/guestfs.pod:4433
msgid "C<csharp>"
msgstr "C<csharp>"

#. type: =item
#: ../src/guestfs.pod:4435
msgid "C<erlang>"
msgstr "C<erlang>"

#. type: =item
#: ../src/guestfs.pod:4437
msgid "C<gobject>"
msgstr "C<gobject>"

#. type: =item
#: ../src/guestfs.pod:4439
msgid "C<golang>"
msgstr "C<golang>"

#. type: =item
#: ../src/guestfs.pod:4441
msgid "C<haskell>"
msgstr "C<haskell>"

#. type: =item
#: ../src/guestfs.pod:4443
msgid "C<java>"
msgstr "C<java>"

#. type: =item
#: ../src/guestfs.pod:4445
msgid "C<lua>"
msgstr "C<lua>"

#. type: =item
#: ../src/guestfs.pod:4447
msgid "C<ocaml>"
msgstr "C<ocaml>"

#. type: =item
#: ../src/guestfs.pod:4449
msgid "C<php>"
msgstr "C<php>"

#. type: =item
#: ../src/guestfs.pod:4451
msgid "C<perl>"
msgstr "C<perl>"

#. type: =item
#: ../src/guestfs.pod:4453
msgid "C<python>"
msgstr "C<python>"

#. type: =item
#: ../src/guestfs.pod:4455
msgid "C<ruby>"
msgstr "C<ruby>"

#. type: textblock
#: ../src/guestfs.pod:4457
msgid "Language bindings."
msgstr "Прив’язки до мов програмування."

#. type: =head2
#: ../src/guestfs.pod:4461
msgid "MAKING A STABLE RELEASE"
msgstr "СТВОРЕННЯ СТАБІЛЬНОГО ВИПУСКУ"

#. type: textblock
#: ../src/guestfs.pod:4463
msgid ""
"When we make a stable release, there are several steps documented here.  See "
"L</LIBGUESTFS VERSION NUMBERS> for general information about the stable "
"branch policy."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4471
msgid ""
"Check C<make && make check> works on at least Fedora, Debian and Ubuntu."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4476
msgid "Finalize C<guestfs-release-notes.pod>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4480
msgid "Run C<src/api-support/update-from-tarballs.sh>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4484
msgid "Push and pull from Transifex."
msgstr "Передавання даних на Transifex та отримання даних з Transifex."

#. type: verbatim
#: ../src/guestfs.pod:4488
#, no-wrap
msgid ""
" tx push -s\n"
"\n"
msgstr ""
" tx push -s\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:4490
msgid "to push the latest POT files to Transifex.  Then run:"
msgstr ""
"щоб надіслати найсвіжіші файли POT на Transifex. Потім віддайте команду:"

#. type: verbatim
#: ../src/guestfs.pod:4492
#, no-wrap
msgid ""
" ./tx-pull.sh\n"
"\n"
msgstr ""
" ./tx-pull.sh\n"
"\n"

#. type: textblock
#: ../src/guestfs.pod:4494
msgid "which is a wrapper to pull the latest translated C<*.po> files."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4498
msgid "Consider updating gnulib to latest upstream version."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4502
msgid ""
"Create new stable and development directories under L<http://libguestfs.org/"
"download>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4507
msgid "Edit C<index.html.in> on website."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4511
msgid "Create the branch in git:"
msgstr "Створення гілки у git:"

#. type: verbatim
#: ../src/guestfs.pod:4513
#, no-wrap
msgid ""
" git tag -a 1.XX.0 -m \"Version 1.XX.0 (stable)\"\n"
" git tag -a 1.YY.0 -m \"Version 1.YY.0 (development)\"\n"
" git branch stable-1.XX\n"
" git push origin tag 1.XX.0 1.YY.0 stable-1.XX\n"
"\n"
msgstr ""
" git tag -a 1.XX.0 -m \"Version 1.XX.0 (stable)\"\n"
" git tag -a 1.YY.0 -m \"Version 1.YY.0 (development)\"\n"
" git branch stable-1.XX\n"
" git push origin tag 1.XX.0 1.YY.0 stable-1.XX\n"
"\n"

#. type: =head1
#: ../src/guestfs.pod:4520
msgid "LIMITS"
msgstr "ОБМЕЖЕННЯ"

#. type: =head2
#: ../src/guestfs.pod:4522
msgid "PROTOCOL LIMITS"
msgstr "ОБМЕЖЕННЯ ПРОТОКОЛУ"

#. type: textblock
#: ../src/guestfs.pod:4524
msgid ""
"Internally libguestfs uses a message-based protocol to pass API calls and "
"their responses to and from a small \"appliance\" (see L</INTERNALS> for "
"plenty more detail about this).  The maximum message size used by the "
"protocol is slightly less than 4 MB.  For some API calls you may need to be "
"aware of this limit.  The API calls which may be affected are individually "
"documented, with a link back to this section of the documentation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4532
msgid ""
"In libguestfs E<lt> 1.19.32, several calls had to encode either their entire "
"argument list or their entire return value (or sometimes both)  in a single "
"protocol message, and this gave them an arbitrary limitation on how much "
"data they could handle.  For example, L</guestfs_cat> could only download a "
"file if it was less than around 4 MB in size.  In later versions of "
"libguestfs, some of these limits have been removed.  The APIs which were "
"previously limited but are now unlimited (except perhaps by available "
"memory) are listed below.  To find out if a specific API is subject to "
"protocol limits, check for the warning in the API documentation which links "
"to this section, and remember to check the version of the documentation that "
"matches the version of libguestfs you are using."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4545
msgid ""
"L</guestfs_cat>, L</guestfs_find>, L</guestfs_read_file>, L</"
"guestfs_read_lines>, L</guestfs_write>, L</guestfs_write_append>, L</"
"guestfs_lstatlist>, L</guestfs_lxattrlist>, L</guestfs_readlinklist>, L</"
"guestfs_ls>."
msgstr ""
"L</guestfs_cat>, L</guestfs_find>, L</guestfs_read_file>, L</"
"guestfs_read_lines>, L</guestfs_write>, L</guestfs_write_append>, L</"
"guestfs_lstatlist>, L</guestfs_lxattrlist>, L</guestfs_readlinklist>, L</"
"guestfs_ls>."

#. type: textblock
#: ../src/guestfs.pod:4550
msgid ""
"See also L</UPLOADING> and L</DOWNLOADING> for further information about "
"copying large amounts of data into or out of a filesystem."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4553
msgid "MAXIMUM NUMBER OF DISKS"
msgstr "МАКСИМАЛЬНА КІЛЬКІСТЬ ДИСКІВ"

#. type: textblock
#: ../src/guestfs.pod:4555
msgid ""
"In libguestfs E<ge> 1.19.7, you can query the maximum number of disks that "
"may be added by calling L</guestfs_max_disks>.  In earlier versions of "
"libguestfs (ie. where this call is not available) you should assume the "
"maximum is 25."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4560
msgid ""
"The rest of this section covers implementation details, which could change "
"in future."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4563
msgid ""
"When using virtio-scsi disks (the default if available in qemu) the current "
"limit is B<255> disks.  When using virtio-blk (the old default) the limit is "
"around B<27> disks, but may vary according to implementation details and "
"whether the network is enabled."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4568
msgid ""
"Virtio-scsi as used by libguestfs is configured to use one target per disk, "
"and 256 targets are available."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4571
msgid ""
"Virtio-blk consumes 1 virtual PCI slot per disk, and PCI is limited to 31 "
"slots, but some of these are used for other purposes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4574
msgid "One virtual disk is used by libguestfs internally."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4576
msgid ""
"Before libguestfs 1.19.7, disk names had to be a single character (eg. C</"
"dev/sda> through C</dev/sdz>), and since one disk is reserved, that meant "
"the limit was 25.  This has been fixed in more recent versions."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4581
msgid ""
"In libguestfs E<ge> 1.20 it is possible to hot plug disks.  See L</"
"HOTPLUGGING>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4584
msgid "MAXIMUM NUMBER OF PARTITIONS PER DISK"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4586
msgid "Virtio limits the maximum number of partitions per disk to B<15>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4588
msgid ""
"This is because it reserves 4 bits for the minor device number (thus C</dev/"
"vda>, and C</dev/vda1> through C</dev/vda15>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4591
msgid ""
"If you attach a disk with more than 15 partitions, the extra partitions are "
"ignored by libguestfs."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4594
msgid "MAXIMUM SIZE OF A DISK"
msgstr "МАКСИМАЛЬНИЙ РОЗМІР ДИСКА"

#. type: textblock
#: ../src/guestfs.pod:4596
msgid "Probably the limit is between 2**63-1 and 2**64-1 bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4598
msgid ""
"We have tested block devices up to 1 exabyte (2**60 or "
"1,152,921,504,606,846,976 bytes) using sparse files backed by an XFS host "
"filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4602
msgid ""
"Although libguestfs probably does not impose any limit, the underlying host "
"storage will.  If you store disk images on a host ext4 filesystem, then the "
"maximum size will be limited by the maximum ext4 file size (currently 16 "
"TB).  If you store disk images as host logical volumes then you are limited "
"by the maximum size of an LV."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4608
msgid ""
"For the hugest disk image files, we recommend using XFS on the host for "
"storage."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4611
msgid "MAXIMUM SIZE OF A PARTITION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4613
msgid ""
"The MBR (ie. classic MS-DOS) partitioning scheme uses 32 bit sector "
"numbers.  Assuming a 512 byte sector size, this means that MBR cannot "
"address a partition located beyond 2 TB on the disk."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4617
msgid ""
"It is recommended that you use GPT partitions on disks which are larger than "
"this size.  GPT uses 64 bit sector numbers and so can address partitions "
"which are theoretically larger than the largest disk we could support."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4622
msgid "MAXIMUM SIZE OF A FILESYSTEM, FILES, DIRECTORIES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4624
msgid ""
"This depends on the filesystem type.  libguestfs itself does not impose any "
"known limit.  Consult Wikipedia or the filesystem documentation to find out "
"what these limits are."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4628
msgid "MAXIMUM UPLOAD AND DOWNLOAD"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4630
msgid ""
"The API functions L</guestfs_upload>, L</guestfs_download>, L</"
"guestfs_tar_in>, L</guestfs_tar_out> and the like allow unlimited sized "
"uploads and downloads."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:4634
msgid "INSPECTION LIMITS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4636
msgid ""
"The inspection code has several arbitrary limits on things like the size of "
"Windows Registry hive it will read, and the length of product name.  These "
"are intended to stop a malicious guest from consuming arbitrary amounts of "
"memory and disk space on the host, and should not be reached in practice.  "
"See the source code for more information."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4663
msgid ""
"Choose the default way to create the appliance.  See L</guestfs_set_backend> "
"and L</BACKEND>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4668
msgid ""
"A colon-separated list of backend-specific settings.  See L</BACKEND>, L</"
"BACKEND SETTINGS>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4680
msgid "See also L</LIBGUESTFS_TMPDIR>, L</guestfs_set_cachedir>."
msgstr "Див. також L</LIBGUESTFS_TMPDIR>, L</guestfs_set_cachedir>."

#. type: textblock
#: ../src/guestfs.pod:4684
msgid ""
"Set C<LIBGUESTFS_DEBUG=1> to enable verbose messages.  This has the same "
"effect as calling C<guestfs_set_verbose (g, 1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4693
msgid "See also L</QEMU WRAPPERS> above."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4704
msgid ""
"Set the path that libguestfs uses to search for a supermin appliance.  See "
"the discussion of paths in section L</PATH> above."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4719
msgid "See also L</LIBGUESTFS_CACHEDIR>, L</guestfs_set_tmpdir>."
msgstr "Див. також L</LIBGUESTFS_CACHEDIR>, L</guestfs_set_tmpdir>."

#. type: textblock
#: ../src/guestfs.pod:4723
msgid ""
"Set C<LIBGUESTFS_TRACE=1> to enable command traces.  This has the same "
"effect as calling C<guestfs_set_trace (g, 1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4728
msgid ""
"Libguestfs may run some external programs, and relies on C<$PATH> being set "
"to a reasonable value.  If using the libvirt backend, libvirt will not work "
"at all unless C<$PATH> contains the path of qemu/KVM.  Note that PHP by "
"default removes C<$PATH> from the environment which tends to break "
"everything."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:4752
msgid ""
"L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-golang(3)>, "
"L<guestfs-java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, L<guestfs-"
"perl(3)>, L<guestfs-python(3)>, L<guestfs-ruby(3)>, L<guestfish(1)>, "
"L<guestmount(1)>, L<virt-alignment-scan(1)>, L<virt-builder(1)>, L<virt-"
"cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-customize(1)>, "
"L<virt-df(1)>, L<virt-diff(1)>, L<virt-edit(1)>, L<virt-filesystems(1)>, "
"L<virt-format(1)>, L<virt-inspector(1)>, L<virt-list-filesystems(1)>, L<virt-"
"list-partitions(1)>, L<virt-log(1)>, L<virt-ls(1)>, L<virt-make-fs(1)>, "
"L<virt-p2v(1)>, L<virt-rescue(1)>, L<virt-resize(1)>, L<virt-sparsify(1)>, "
"L<virt-sysprep(1)>, L<virt-tar(1)>, L<virt-tar-in(1)>, L<virt-tar-out(1)>, "
"L<virt-v2v(1)>, L<virt-win-reg(1)>, L<guestfs-faq(1)>, L<guestfs-"
"performance(1)>, L<guestfs-release-notes(1)>, L<guestfs-testing(1)>, "
"L<libguestfs-test-tool(1)>, L<libguestfs-make-fixed-appliance(1)>, "
"L<supermin(1)>, L<qemu(1)>, L<hivex(3)>, L<stap(1)>, L<sd-journal(3)>, "
"L<http://libguestfs.org/>."
msgstr ""
"L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-golang(3)>, "
"L<guestfs-java(3)>, L<guestfs-lua(3)>, L<guestfs-ocaml(3)>, L<guestfs-"
"perl(3)>, L<guestfs-python(3)>, L<guestfs-ruby(3)>, L<guestfish(1)>, "
"L<guestmount(1)>, L<virt-alignment-scan(1)>, L<virt-builder(1)>, L<virt-"
"cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-customize(1)>, "
"L<virt-df(1)>, L<virt-diff(1)>, L<virt-edit(1)>, L<virt-filesystems(1)>, "
"L<virt-format(1)>, L<virt-inspector(1)>, L<virt-list-filesystems(1)>, L<virt-"
"list-partitions(1)>, L<virt-log(1)>, L<virt-ls(1)>, L<virt-make-fs(1)>, "
"L<virt-p2v(1)>, L<virt-rescue(1)>, L<virt-resize(1)>, L<virt-sparsify(1)>, "
"L<virt-sysprep(1)>, L<virt-tar(1)>, L<virt-tar-in(1)>, L<virt-tar-out(1)>, "
"L<virt-v2v(1)>, L<virt-win-reg(1)>, L<guestfs-faq(1)>, L<guestfs-"
"performance(1)>, L<guestfs-release-notes(1)>, L<guestfs-testing(1)>, "
"L<libguestfs-test-tool(1)>, L<libguestfs-make-fixed-appliance(1)>, "
"L<supermin(1)>, L<qemu(1)>, L<hivex(3)>, L<stap(1)>, L<sd-journal(3)>, "
"L<http://libguestfs.org/>."

#. type: textblock
#: ../src/guestfs.pod:4803
msgid ""
"Tools with a similar purpose: L<fdisk(8)>, L<parted(8)>, L<kpartx(8)>, "
"L<lvm(8)>, L<disktype(1)>."
msgstr ""
"Інструменти подібного призначення: L<fdisk(8)>, L<parted(8)>, L<kpartx(8)>, "
"L<lvm(8)>, L<disktype(1)>."

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:1
msgid "B<--chmod> PERMISSIONS:FILE (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:9
msgid "B<--delete> PATH (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:17
msgid "B<--edit> FILE:EXPR (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:29
msgid "B<--firstboot> SCRIPT (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:45
msgid "B<--firstboot-command> 'CMD+ARGS' (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:56
msgid "B<--firstboot-install> PKG,PKG..  (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:66
msgid "B<--hostname> HOSTNAME (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:72
msgid "B<--install> PKG,PKG..  (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:84
msgid "B<--keep-user-accounts> USERS (see C<user-account> below)"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:87
msgid ""
"The user accounts to be kept in the guest.  The value of this option is a "
"list of user names separated by comma, where specifying an user means it is "
"going to be kept.  For example:"
msgstr ""
"Облікові записи користувачів, які слід залишити у гостьовій системі. "
"Значенням цього параметра є список імен користувачів, відокремлених комами, "
"який визначатиме ті записи, які слід зберегти. Приклад:"

#. type: verbatim
#: ../sysprep/sysprep-extra-options.pod:92
#, no-wrap
msgid ""
" --keep-user-accounts mary\n"
"\n"
msgstr ""
" --keep-user-accounts mary\n"
"\n"

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:94
msgid "would keep the user account C<mary>."
msgstr "збереже обліковий запис користувача C<mary>."

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:96
#: ../sysprep/sysprep-extra-options.pod:165
msgid "This option can be specified multiple times."
msgstr "Цей параметр можна вказувати декілька разів у одній команді."

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:98
msgid "B<--link> TARGET:LINK[:LINK..] (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:104
msgid "B<--mkdir> DIR (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:112
msgid "B<--no-logfile> (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:121
msgid "B<--password> USER:SELECTOR (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:130
msgid "B<--password-crypto> md5|sha256|sha512 (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:153
msgid "B<--remove-user-accounts> USERS (see C<user-account> below)"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:156
msgid ""
"The user accounts to be removed from the guest.  The value of this option is "
"a list of user names separated by comma, where specifying an user means it "
"is going to be removed.  For example:"
msgstr ""
"Облікові записи користувачів, які слід вилучити з гостьової системи. "
"Значенням цього параметра є список імен користувачів, відокремлених комами, "
"який визначатиме ті записи, які слід вилучити. Приклад:"

#. type: verbatim
#: ../sysprep/sysprep-extra-options.pod:161
#, no-wrap
msgid ""
" --remove-user-accounts bob,eve\n"
"\n"
msgstr ""
" --remove-user-accounts bob,eve\n"
"\n"

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:163
msgid "would only remove the user accounts C<bob> and C<eve>."
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:167
msgid "B<--root-password> SELECTOR (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:178
msgid "B<--run> SCRIPT (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:198
msgid "B<--run-command> 'CMD+ARGS' (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:215
msgid "B<--script> SCRIPT (see C<script> below)"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:218
msgid ""
"Run the named C<SCRIPT> (a shell script or program) against the guest.  The "
"script can be any program on the host.  The script's current directory will "
"be the guest's root directory."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:222
msgid ""
"B<Note:> If the script is not on the $PATH, then you must give the full "
"absolute path to the script."
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:225
msgid "B<--scriptdir> SCRIPTDIR (see C<script> below)"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:228
msgid ""
"The mount point (an empty directory on the host) used when the C<script> "
"operation is enabled and one or more scripts are specified using I<--script> "
"parameter(s)."
msgstr ""
"Точку монтування (порожній каталог на вузлі), використану при виконанні дії "
"C<script>, увімкнено і вказано використання одного або декількох скриптів за "
"допомогою I<--script>."

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:232
msgid "B<Note:> C<SCRIPTDIR> B<must> be an absolute path."
msgstr "B<Зауваження:> C<SCRIPTDIR> B<має> бути вказано повністю."

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:234
msgid ""
"If I<--scriptdir> is not specified then a temporary mountpoint will be "
"created."
msgstr ""
"Якщо I<--scriptdir> не вказано, буде створено тимчасову точку монтування"

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:237
msgid "B<--scrub> FILE (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:254
msgid "B<--selinux-relabel> (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:261
msgid "B<--timezone> TIMEZONE (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:267
msgid "B<--update> (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:276
msgid "B<--upload> FILE:DEST (see C<customize> below)"
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:292
msgid "B<--write> FILE:CONTENT (see C<customize> below)"
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:1
msgid "B<abrt-data> *"
msgstr "B<abrt-data> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:4
msgid "Remove the crash data generated by ABRT."
msgstr "Вилучити дані щодо аварії, створені ABRT."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:6
msgid ""
"Remove the automatically generated ABRT crash data in C</var/spool/abrt/>."
msgstr ""
"Вилучити автоматично створені ABRT дані щодо аварії у C</var/spool/abrt/>."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:9
msgid "B<bash-history> *"
msgstr "B<bash-history> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:12
msgid "Remove the bash history in the guest."
msgstr "Вилучити журнал команд bash у гостьовій системі."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:14
msgid ""
"Remove the bash history of user \"root\" and any other users who have a C<."
"bash_history> file in their home directory."
msgstr ""
"Вилучити журнал команд bash користувача «root» та всіх інших користувачів, у "
"домашніх каталогах яких містяться файли C<.bash_history>."

#. type: =head3
#: ../sysprep/sysprep-operations.pod:17
msgid "Notes on bash-history"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:19
msgid ""
"Currently this only looks in C</root> and C</home/*> for home directories, "
"so users with home directories in other locations won't have the bash "
"history removed."
msgstr ""
"У поточній версії пошук домашніх каталогів користувачів виконується лише у "
"C</root> і C</home/*>. Отже, журнал bash користувачів, дані яких "
"зберігаються у інших каталогах, не буде вилучено."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:23
msgid "B<blkid-tab> *"
msgstr "B<blkid-tab> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:26
msgid "Remove blkid tab in the guest."
msgstr "Вилучити вкладку ідентифікаторів блоків у гостьовій системі."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:28
msgid "B<ca-certificates>"
msgstr "B<ca-certificates>"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:30
msgid "Remove CA certificates in the guest."
msgstr "Вилучити сертифікати CA у гостьовій системі."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:32
msgid "B<crash-data> *"
msgstr "B<crash-data> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:35
msgid "Remove the crash data generated by kexec-tools."
msgstr "Вилучити дані щодо аварії, створені kexec-tools."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:37
msgid "Remove the automatically generated kdump kernel crash data."
msgstr "Вилучити автоматично створені kdump дані аварії ядра."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:39
msgid "B<cron-spool> *"
msgstr "B<cron-spool> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:42
msgid "Remove user at-jobs and cron-jobs."
msgstr "Вилучити завдання at та cron користувачів."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:44
msgid "B<customize> *"
msgstr "B<customize> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:47
msgid "Customize the guest."
msgstr "Налаштувати гостьову систему."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:49
msgid ""
"Customize the guest by providing L<virt-customize(1)> options for installing "
"packages, editing files and so on."
msgstr ""
"Налаштувати гостьову систему визначенням параметрів L<virt-customize(1)> для "
"встановлення пакунків, редагування файлів тощо."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:52
msgid "B<dhcp-client-state> *"
msgstr "B<dhcp-client-state> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:55
msgid "Remove DHCP client leases."
msgstr "Вилучити надані клієнтські адреси DHCP."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:57
msgid "B<dhcp-server-state> *"
msgstr "B<dhcp-server-state> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:60
msgid "Remove DHCP server leases."
msgstr "Вилучити надані серверні адреси DHCP."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:62
msgid "B<dovecot-data> *"
msgstr "B<dovecot-data> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:65
msgid "Remove Dovecot (mail server) data."
msgstr "Вилучити дані Dovecot (поштового сервера)."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:67
msgid "B<firewall-rules>"
msgstr "B<firewall-rules>"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:69
msgid "Remove the firewall rules."
msgstr "Вилучити правила брандмауера."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:71
msgid ""
"This removes custom firewall rules by removing C</etc/sysconfig/iptables> or "
"custom firewalld configuration in C</etc/firewalld/*/*>."
msgstr ""
"Вилучає нетипові правила брандмауера вилученням C</etc/sysconfig/iptables> "
"або нетипових налаштувань firewalld з C</etc/firewalld/*/*>."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:74
msgid ""
"Note this is I<not> enabled by default since it may expose guests to "
"exploits.  Use with care."
msgstr ""
"Зауважте, що цю можливість типово I<не> увімкнено, оскільки може відкрити "
"гостьову систему для вразливостей. Користуйтеся обережно."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:77
msgid "B<flag-reconfiguration>"
msgstr "B<flag-reconfiguration>"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:79
msgid "Flag the system for reconfiguration."
msgstr "Позначити систему для зміни налаштувань."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:81
msgid ""
"For Linux guests, this touches C</.unconfigured>, which causes the first "
"boot to interactively query the user for settings such as the root password "
"and timezone."
msgstr ""
"Для гостьових систем Linux оновлює часову позначку C</.unconfigured>, отже, "
"під час першого завантаження користувачеві буде надіслано запит щодо "
"параметрів, зокрема пароля root та часового поясу."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:85
msgid "B<fs-uuids>"
msgstr "B<fs-uuids>"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:87
msgid "Change filesystem UUIDs."
msgstr "Змінити UUID файлових систем."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:89
msgid ""
"On guests and filesystem types where this is supported, new random UUIDs are "
"generated and assigned to filesystems."
msgstr ""
"У гостьових системах та типах файлових систем, де передбачено таку "
"підтримку, буде створено нові випадкові UUID, які буде пов’язано з файловими "
"системами."

#. type: =head3
#: ../sysprep/sysprep-operations.pod:92
msgid "Notes on fs-uuids"
msgstr "Зауваження щодо fs-uuids"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:94
msgid ""
"The fs-uuids operation is disabled by default because it does not yet find "
"and update all the places in the guest that use the UUIDs.  For example C</"
"etc/fstab> or the bootloader.  Enabling this operation is more likely than "
"not to make your guest unbootable."
msgstr ""
"Типово, дію fs-uuids вимкнено, оскільки у поточній версії програма ще не "
"здатна знайти і оновити усі записи у гостьовій системі, які використовують "
"UUID, наприклад C</etc/fstab> або завантажувач. Вмикання цієї дії може з "
"високою ймовірністю зробити вашу гостьову систему непридатною до "
"завантаження."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:100
msgid "See: L<https://bugzilla.redhat.com/show_bug.cgi?id=991641>"
msgstr "Див. L<https://bugzilla.redhat.com/show_bug.cgi?id=991641>"

#. type: =head2
#: ../sysprep/sysprep-operations.pod:102
msgid "B<kerberos-data>"
msgstr "B<дані-kerberos>"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:104
msgid "Remove Kerberos data in the guest."
msgstr "Вилучити дані Kerberos у гостьовій системі."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:106
msgid "B<logfiles> *"
msgstr "B<logfiles> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:109
msgid "Remove many log files from the guest."
msgstr "Вилучити з гостьової системи багато файлів журналів."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:111
msgid "On Linux the following files are removed:"
msgstr "У Linux вилучено такі файли:"

#. type: verbatim
#: ../sysprep/sysprep-operations.pod:113
#, no-wrap
msgid ""
" /etc/Pegasus/*.cnf\n"
" /etc/Pegasus/*.crt\n"
" /etc/Pegasus/*.csr\n"
" /etc/Pegasus/*.pem\n"
" /etc/Pegasus/*.srl\n"
" /root/anaconda-ks.cfg\n"
" /root/anaconda-post.log\n"
" /root/initial-setup-ks.cfg\n"
" /root/install.log\n"
" /root/install.log.syslog\n"
" /var/cache/fontconfig/*\n"
" /var/cache/gdm/*\n"
" /var/cache/man/*\n"
" /var/lib/AccountService/users/*\n"
" /var/lib/fprint/*\n"
" /var/lib/logrotate.status\n"
" /var/log/*.log*\n"
" /var/log/BackupPC/LOG\n"
" /var/log/ConsoleKit/*\n"
" /var/log/anaconda.syslog\n"
" /var/log/anaconda/*\n"
" /var/log/apache2/*_log\n"
" /var/log/apache2/*_log-*\n"
" /var/log/apt/*\n"
" /var/log/aptitude*\n"
" /var/log/audit/*\n"
" /var/log/btmp*\n"
" /var/log/ceph/*.log\n"
" /var/log/chrony/*.log\n"
" /var/log/cron*\n"
" /var/log/cups/*_log*\n"
" /var/log/debug*\n"
" /var/log/dmesg*\n"
" /var/log/exim4/*\n"
" /var/log/faillog*\n"
" /var/log/firewalld*\n"
" /var/log/gdm/*\n"
" /var/log/glusterfs/*glusterd.vol.log\n"
" /var/log/glusterfs/glusterfs.log\n"
" /var/log/grubby*\n"
" /var/log/httpd/*log\n"
" /var/log/installer/*\n"
" /var/log/jetty/jetty-console.log\n"
" /var/log/journal/*\n"
" /var/log/lastlog*\n"
" /var/log/libvirt/libvirtd.log\n"
" /var/log/libvirt/libxl/*.log\n"
" /var/log/libvirt/lxc/*.log\n"
" /var/log/libvirt/qemu/*.log\n"
" /var/log/libvirt/uml/*.log\n"
" /var/log/lightdm/*\n"
" /var/log/mail/*\n"
" /var/log/maillog*\n"
" /var/log/messages*\n"
" /var/log/ntp\n"
" /var/log/ntpstats/*\n"
" /var/log/ppp/connect-errors\n"
" /var/log/rhsm/*\n"
" /var/log/sa/*\n"
" /var/log/secure*\n"
" /var/log/setroubleshoot/*.log\n"
" /var/log/spooler*\n"
" /var/log/squid/*.log\n"
" /var/log/syslog*\n"
" /var/log/tallylog*\n"
" /var/log/tuned/tuned.log\n"
" /var/log/wtmp*\n"
" /var/log/xferlog*\n"
" /var/named/data/named.run\n"
"\n"
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:183
msgid "B<lvm-uuids> *"
msgstr "B<lvm-uuids> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:186
msgid "Change LVM2 PV and VG UUIDs."
msgstr "Змінити UUID ФТ і ГТ LVM2."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:188
msgid ""
"On Linux guests that have LVM2 physical volumes (PVs) or volume groups "
"(VGs), new random UUIDs are generated and assigned to those PVs and VGs."
msgstr ""
"Для гостьових систем Linux, які містять фізичні томи (ФТ) або групи томів "
"(ГТ) LVM2 для ФТ і ГТ буде створено і призначено випадкові UUID."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:191
msgid "B<machine-id> *"
msgstr "B<ід-комп’ютера> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:194
msgid "Remove the local machine ID."
msgstr "Вилучити ідентифікатор локального комп’ютера."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:196
msgid ""
"The machine ID is usually generated from a random source during system "
"installation and stays constant for all subsequent boots.  Optionally, for "
"stateless systems it is generated during runtime at boot if it is found to "
"be empty."
msgstr ""
"Зазвичай, ідентифікатор системи створюється на основі випадкових джерел "
"даних під час встановлення системи і не змінюється під час всіх наступних її "
"завантажень. За потреби у системах без певного стану цей ідентифікатор "
"створюється під час роботи завантажувача,\n"
"якщо буде виявлено порожнє значення."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:201
msgid "B<mail-spool> *"
msgstr "B<mail-spool> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:204
msgid "Remove email from the local mail spool directory."
msgstr "Вилучити поштове повідомлення з локального каталогу поштового буфера."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:206
msgid "B<net-hostname> *"
msgstr "B<net-hostname> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:209
msgid "Remove HOSTNAME in network interface configuration."
msgstr "Вилучити HOSTNAME у налаштуваннях інтерфейсу мережі."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:211 ../sysprep/sysprep-operations.pod:219
msgid ""
"For Fedora and Red Hat Enterprise Linux, this is removed from C<ifcfg-*> "
"files."
msgstr ""
"Для Fedora і Red Hat Enterprise Linux це вилучається з файлів C<ifcfg-*>."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:214
msgid "B<net-hwaddr> *"
msgstr "B<net-hwaddr> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:217
msgid "Remove HWADDR (hard-coded MAC address) configuration."
msgstr "Вилучити налаштування HWADDR (апаратної адреси MAC)."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:222
msgid "B<pacct-log> *"
msgstr "B<pacct-log> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:225
msgid "Remove the process accounting log files."
msgstr "Вилучити файли журналу обліку процесів."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:227
msgid ""
"The system wide process accounting will store to the pacct log files if the "
"process accounting is on."
msgstr ""
"Дані обліку процесів системи будуть зберігатися у файлах журналу pacct, якщо "
"увімкнено облік процесів."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:230
msgid "B<package-manager-cache> *"
msgstr "B<package-manager-cache> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:233
msgid "Remove package manager cache."
msgstr "Вилучити кеш керування пакунками."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:235
msgid "B<pam-data> *"
msgstr "B<pam-data> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:238
msgid "Remove the PAM data in the guest."
msgstr "Вилучити дані PAM у гостьовій системі."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:240
msgid "B<puppet-data-log> *"
msgstr "B<puppet-data-log> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:243
msgid "Remove the data and log files of puppet."
msgstr "Вилучити дані та файли журналів puppet."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:245
msgid "B<rh-subscription-manager> *"
msgstr "B<rh-subscription-manager> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:248
msgid "Remove the RH subscription manager files."
msgstr "Вилучити файли керування передплатою RH."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:250
msgid "B<rhn-systemid> *"
msgstr "B<rhn-systemid> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:253
msgid "Remove the RHN system ID."
msgstr "Вилучити ідентифікатор системи у RHN."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:255
msgid "B<rpm-db> *"
msgstr "B<rpm-db> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:258
msgid "Remove host-specific RPM database files."
msgstr "Вилучити специфічні для системи файли баз даних RPM."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:260
msgid ""
"Remove host-specific RPM database files and locks.  RPM will recreate these "
"files automatically if needed."
msgstr ""
"Вилучити специфічні для системи файли баз даних RPM. RPM буде повторно "
"створено ці файли, якщо це потрібно."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:263
msgid "B<samba-db-log> *"
msgstr "B<samba-db-log> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:266
msgid "Remove the database and log files of Samba."
msgstr "Вилучити бази даних та файли журналів Samba."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:268
msgid "B<script> *"
msgstr "B<script> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:271
msgid "Run arbitrary scripts against the guest."
msgstr "Запустити довільні скрипти дій над гостьовою системою."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:273
msgid ""
"The C<script> module lets you run arbitrary shell scripts or programs "
"against the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:276
msgid ""
"Note this feature requires FUSE support.  You may have to enable this in "
"your host, for example by adding the current user to the C<fuse> group, or "
"by loading a kernel module."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:280
msgid ""
"Use one or more I<--script> parameters to specify scripts or programs that "
"will be run against the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:283
msgid ""
"The script or program is run with its current directory being the guest's "
"root directory, so relative paths should be used.  For example: C<rm etc/"
"resolv.conf> in the script would remove a Linux guest's DNS configuration "
"file, but C<rm /etc/resolv.conf> would (try to) remove the host's file."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:289
msgid ""
"Normally a temporary mount point for the guest is used, but you can choose a "
"specific one by using the I<--scriptdir> parameter."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:292
msgid ""
"B<Note:> This is different from I<--firstboot> scripts (which run in the "
"context of the guest when it is booting first time).  I<--script> scripts "
"run on the host, not in the guest."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:296
msgid "B<smolt-uuid> *"
msgstr "B<smolt-uuid> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:299
msgid "Remove the Smolt hardware UUID."
msgstr "Вилучити UUID обладнання Smolt."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:301
msgid "B<ssh-hostkeys> *"
msgstr "B<ssh-hostkeys> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:304
msgid "Remove the SSH host keys in the guest."
msgstr "Вилучити ключі вузла SSH у гостьовій системі."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:306
msgid ""
"The SSH host keys are regenerated (differently) next time the guest is "
"booted."
msgstr ""
"Ключі вузла SSH повторно створюються (незалежно) під час наступного\n"
"завантаження гостьової системи."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:309
msgid ""
"If, after cloning, the guest gets the same IP address, ssh will give you a "
"stark warning about the host key changing:"
msgstr ""
"Якщо після клонування гостьова система отримати ту саму IP-адресу, ssh "
"надасть вам додаткове попередження щодо зміни ключа вузла:"

#. type: verbatim
#: ../sysprep/sysprep-operations.pod:312
#, no-wrap
msgid ""
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
" @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
" IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"\n"
msgstr ""
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
" @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
" IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"\n"

#. type: =head2
#: ../sysprep/sysprep-operations.pod:317
msgid "B<ssh-userdir> *"
msgstr "B<ssh-userdir> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:320
msgid "Remove \".ssh\" directories in the guest."
msgstr "Вилучити каталоги «.ssh» у гостьовій системі."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:322
msgid ""
"Remove the C<.ssh> directory of user \"root\" and any other users who have a "
"C<.ssh> directory in their home directory."
msgstr ""
"Вилучити каталог C<.ssh> користувача «root» та всіх інших користувачів, "
"домашні каталоги яких містять каталог C<.ssh>."

#. type: =head3
#: ../sysprep/sysprep-operations.pod:325
msgid "Notes on ssh-userdir"
msgstr "Зауваження щодо ssh-userdir"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:327
msgid ""
"Currently this only looks in C</root> and C</home/*> for home directories, "
"so users with home directories in other locations won't have the ssh files "
"removed."
msgstr ""
"У поточній версії пошук домашніх каталогів користувачів виконується лише у "
"C</root> і C</home/*>. Отже, файли ssh користувачів, дані яких зберігаються "
"у інших каталогах, не буде вилучено."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:331
msgid "B<sssd-db-log> *"
msgstr "B<sssd-db-log> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:334
msgid "Remove the database and log files of sssd."
msgstr "Вилучити бази даних і файли журналів sssd."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:336
msgid "B<tmp-files> *"
msgstr "B<tmp-files> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:339
msgid "Remove temporary files."
msgstr "Вилучити тимчасові файли."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:341
msgid "This removes temporary files under C</tmp> and C</var/tmp>."
msgstr "Вилучає тимчасові файли з C</tmp> і C</var/tmp>."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:343
msgid "B<udev-persistent-net> *"
msgstr "B<udev-persistent-net> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:346
msgid "Remove udev persistent net rules."
msgstr "Вилучити постійні правила мережі udev."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:348
msgid ""
"Remove udev persistent net rules which map the guest's existing MAC address "
"to a fixed ethernet device (eg. eth0)."
msgstr ""
"Вилучити постійні правила мережі udev, які відображають вже створену MAC-"
"адресу гостьової системи на фіксований пристрій ethernet (наприклад eth0)."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:351
msgid ""
"After a guest is cloned, the MAC address usually changes.  Since the old MAC "
"address occupies the old name (eg. eth0), this means the fresh MAC address "
"is assigned to a new name (eg. eth1) and this is usually undesirable.  "
"Erasing the udev persistent net rules avoids this."
msgstr ""
"Після клонування гостьової системи MAC-адреса зазвичай змінюється. Оскільки "
"стару MAC-адресу вже пов’язано зі старою назвою (наприклад eth0), це "
"означає, що нову MAC-адресу буде пов’язано з новою назвою (наприклад eth1), "
"а це зазвичай є небажаним. За допомогою вилучення постійних правил мережі "
"udev цьому можна запобігти."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:356
msgid "B<user-account>"
msgstr "B<user-account>"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:358
msgid "Remove the user accounts in the guest."
msgstr "Вилучити облікові записи користувачів у гостьовій системі."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:360
msgid ""
"By default remove all the user accounts and their home directories.  The "
"\"root\" account is not removed."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:363
msgid ""
"See the I<--remove-user-accounts> parameter for a way to specify how to "
"remove only some users, or to not remove some others."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:366
msgid "B<utmp> *"
msgstr "B<utmp> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:369
msgid "Remove the utmp file."
msgstr "Вилучити файл utmp."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:371
msgid ""
"This file records who is currently logged in on a machine.  In modern Linux "
"distros it is stored in a ramdisk and hence not part of the virtual "
"machine's disk, but it was stored on disk in older distros."
msgstr ""
"У цьому файлі зберігаються записи щодо входу користувачів до машини. У "
"сучасних дистрибутивах Linux ці записи зберігаються на диску у пам’яті, тому "
"не є частиною віртуальної машини на диску, але ці дані зберігаються на диску "
"у старіших версіях дистрибутивів."

#. type: =head2
#: ../sysprep/sysprep-operations.pod:375
msgid "B<yum-uuid> *"
msgstr "B<yum-uuid> *"

#. type: textblock
#: ../sysprep/sysprep-operations.pod:378
msgid "Remove the yum UUID."
msgstr "Вилучити UUID yum."

#. type: textblock
#: ../sysprep/sysprep-operations.pod:380
msgid ""
"Yum creates a fresh UUID the next time it runs when it notices that the "
"original UUID has been erased."
msgstr ""
"Yum створить новий UUID під час наступного запуску, коли виявить, що "
"початковий UUID було вилучено."

#. type: textblock
#: ../sysprep/virt-sysprep.pod:3
msgid ""
"virt-sysprep - Reset, unconfigure or customize a virtual machine so clones "
"can be made"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:7
#, no-wrap
msgid ""
" virt-sysprep [--options] -d domname\n"
"\n"
msgstr ""
" virt-sysprep [--параметри] -d назва_домену\n"
"\n"

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:9
#, no-wrap
msgid ""
" virt-sysprep [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""
" virt-sysprep [--параметри] -a disk.img [-a disk.img ...]\n"
"\n"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:13
msgid ""
"Virt-sysprep can reset or unconfigure a virtual machine so that clones can "
"be made from it.  Steps in this process include removing SSH host keys, "
"removing persistent network MAC configuration, and removing user accounts.  "
"Virt-sysprep can also customize a virtual machine, for instance by adding "
"SSH keys, users or logos.  Each step can be enabled or disabled as required."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:20
msgid ""
"Virt-sysprep modifies the guest or disk image I<in place>.  The guest must "
"be shut down.  If you want to preserve the existing contents of the guest, "
"I<you must snapshot, copy or clone the disk first>.  See L</COPYING AND "
"CLONING> below."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:25
msgid ""
"You do I<not> need to run virt-sysprep as root.  In fact we'd generally "
"recommend that you don't.  The time you might want to run it as root is when "
"you need root in order to access the disk image, but even in this case it "
"would be better to change the permissions on the disk image to be writable "
"as the non-root user running virt-sysprep."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:31
msgid ""
"\"Sysprep\" stands for \"system preparation\" tool.  The name comes from the "
"Microsoft program C<sysprep.exe> which is used to unconfigure Windows "
"machines in preparation for cloning them.  Having said that, virt-sysprep "
"does I<not> currently work on Microsoft Windows guests.  We plan to support "
"Windows sysprepping in a future version, and we already have code to do it."
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:86
msgid "B<--enable> operations"
msgstr "B<--enable> дії"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:88 ../sysprep/virt-sysprep.pod:112
msgid ""
"Choose which sysprep operations to perform.  Give a comma-separated list of "
"operations, for example:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:91
#, no-wrap
msgid ""
" --enable ssh-hostkeys,udev-persistent-net\n"
"\n"
msgstr ""
" --enable ssh-hostkeys,udev-persistent-net\n"
"\n"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:93 ../sysprep/virt-sysprep.pod:117
msgid ""
"would enable ONLY C<ssh-hostkeys> and C<udev-persistent-net> operations."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:95
msgid ""
"If the I<--enable> option is not given, then we default to trying most "
"sysprep operations (see I<--list-operations> to show which are enabled)."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:99
msgid ""
"Regardless of the I<--enable> option, sysprep operations are skipped for "
"some guest types."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:102 ../sysprep/virt-sysprep.pod:143
msgid ""
"Use I<--list-operations> to list operations supported by a particular "
"version of virt-sysprep."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:105 ../sysprep/virt-sysprep.pod:146
msgid ""
"See L</OPERATIONS> below for a list and an explanation of each operation."
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:108
msgid "B<--operation> operations"
msgstr "B<--operation> дії"

#. type: =item
#: ../sysprep/virt-sysprep.pod:110
msgid "B<--operations> operations"
msgstr "B<--operations> дії"

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:115
#, no-wrap
msgid ""
" --operations ssh-hostkeys,udev-persistent-net\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:119
msgid ""
"I<--operations> allows you to enable and disable any operation, including "
"the default ones (which would be tried when specifying neither I<--"
"operations> nor I<--enable>) and all the available ones; prepending a C<-> "
"in front of an operation name removes it from the list of enabled "
"operations, while the meta-names C<defaults> and C<all> represent "
"respectively the operations enabled by default and all the available ones.  "
"For example:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:127
#, no-wrap
msgid ""
" --operations firewall-rules,defaults,-tmp-files\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:129
msgid ""
"would enable the C<firewall-rules> operation (regardless whether it is "
"enabled by default), all the default ones, and disable the C<tmp-files> "
"operation."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:132
msgid ""
"I<--operations> can be specified multiple times; the first time the set of "
"enabled operations is empty, while any further I<--operations> affects the "
"operations enabled so far."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:136
msgid ""
"If the I<--operations> option is not given, then we default to trying most "
"sysprep operations (see I<--list-operations> to show which are enabled)."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:140
msgid ""
"Regardless of the I<--operations> option, sysprep operations are skipped for "
"some guest types."
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:160
#, no-wrap
msgid ""
" virt-sysprep --format raw -a disk.img\n"
"\n"
msgstr ""
" virt-sysprep --format raw -a disk.img\n"
"\n"

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:164
#, no-wrap
msgid ""
" virt-sysprep --format raw -a disk.img --format auto -a another.img\n"
"\n"
msgstr ""
" virt-sysprep --format raw -a disk.img --format auto -a another.img\n"
"\n"

#. type: =item
#: ../sysprep/virt-sysprep.pod:173
msgid "B<--list-operations>"
msgstr "B<--list-operations>"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:175
msgid "List the operations supported by the virt-sysprep program."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:177
msgid ""
"These are listed one per line, with one or more single-space-separated "
"fields, eg:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:180
#, no-wrap
msgid ""
" $ virt-sysprep --list-operations\n"
" bash-history * Remove the bash history in the guest\n"
" cron-spool * Remove user at-jobs and cron-jobs\n"
" dhcp-client-state * Remove DHCP client leases\n"
" dhcp-server-state * Remove DHCP server leases\n"
" [etc]\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:187
msgid ""
"The first field is the operation name, which can be supplied to I<--"
"enable>.  The second field is a C<*> character if the operation is enabled "
"by default or blank if not.  Subsequent fields on the same line are the "
"description of the operation."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:192
msgid ""
"Before libguestfs 1.17.33 only the first (operation name) field was shown "
"and all operations were enabled by default."
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:195
msgid "B<--mount-options> mp:opts[;mp:opts;...]"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:197
msgid ""
"Set the mount options used when libguestfs opens the disk image.  Note this "
"has no effect on the guest.  It is used when opening certain guests such as "
"ones using the UFS (BSD) filesystem."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:201
msgid ""
"Use a semicolon-separated list of C<mountpoint:options> pairs.  You may need "
"to quote this list to protect it from the shell."
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:206
#, no-wrap
msgid ""
" --mount-options \"/:noatime\"\n"
"\n"
msgstr ""
" --mount-options \"/:noatime\"\n"
"\n"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:208
msgid "will mount the root directory with C<notime>.  This example:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:210
#, no-wrap
msgid ""
" --mount-options \"/:noatime;/var:rw,nodiratime\"\n"
"\n"
msgstr ""
" --mount-options \"/:noatime;/var:rw,nodiratime\"\n"
"\n"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:212
msgid "will do the same, plus mount C</var> with C<rw,nodiratime>."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:238
msgid "__EXTRA_OPTIONS__"
msgstr ""

#. type: =head1
#: ../sysprep/virt-sysprep.pod:242
msgid "OPERATIONS"
msgstr "ДІЇ"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:244
msgid ""
"If the I<--enable>/I<--operations> option is I<not> given, then most sysprep "
"operations are enabled."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:247
msgid ""
"Use C<virt-sysprep --list-operations> to list all operations for your virt-"
"sysprep binary.  The ones which are enabled by default are marked with a "
"C<*> character.  Regardless of the I<--enable>/I<--operations> options, "
"sysprep operations are skipped for some guest types."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:252
msgid ""
"Operations can be individually enabled using the I<--enable>/I<--operations> "
"options.  Use a comma-separated list, for example:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:256
#, no-wrap
msgid ""
" virt-sysprep --operations ssh-hostkeys,udev-persistent-net [etc..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:258
msgid ""
"Future versions of virt-sysprep may add more operations.  If you are using "
"virt-sysprep and want predictable behaviour, specify only the operations "
"that you want to have enabled."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:262
msgid ""
"C<*> = enabled by default when no I<--enable>/I<--operations> option is "
"given."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:265
msgid "__OPERATIONS__"
msgstr ""

#. type: =head1
#: ../sysprep/virt-sysprep.pod:267
msgid "COPYING AND CLONING"
msgstr "КОПІЮВАННЯ ТА КЛОНУВАННЯ"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:269
msgid ""
"Virt-sysprep can be used as part of a process of cloning guests, or to "
"prepare a template from which guests can be cloned.  There are many "
"different ways to achieve this using the virt tools, and this section is "
"just an introduction."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:274
msgid "A virtual machine (when switched off) consists of two parts:"
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:278
msgid "I<configuration>"
msgstr "I<налаштування>"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:280
msgid ""
"The configuration or description of the guest.  eg. The libvirt XML (see "
"C<virsh dumpxml>), the running configuration of the guest, or another "
"external format like OVF."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:284
msgid "Some configuration items that might need to be changed:"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:290
msgid "name"
msgstr "назва"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:294 ../sysprep/virt-sysprep.pod:321
msgid "UUID"
msgstr "UUID"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:298
msgid "path to block device(s)"
msgstr "шлях до блокових пристроїв"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:302
msgid "network card MAC address"
msgstr "MAC-адреса мережевої картки"

#. type: =item
#: ../sysprep/virt-sysprep.pod:306
msgid "I<block device(s)>"
msgstr "I<блокові пристрої>"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:308
msgid ""
"One or more hard disk images, themselves containing files, directories, "
"applications, kernels, configuration, etc."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:311
msgid "Some things inside the block devices that might need to be changed:"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:317
msgid "hostname and other net configuration"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:325
msgid "SSH host keys"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:329
msgid "Windows unique security ID (SID)"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:333
msgid "Puppet registration"
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:339
msgid "COPYING THE BLOCK DEVICE"
msgstr "КОПІЮВАННЯ БЛОКОВОГО ПРИСТРОЮ"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:341
msgid ""
"Starting with an original guest, you probably wish to copy the guest block "
"device and its configuration to make a template.  Then once you are happy "
"with the template, you will want to make many clones from it."
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:346
#, no-wrap
msgid ""
"                        virt-sysprep\n"
"                             |\n"
"                             v\n"
" original guest --------> template ---------->\n"
"                                      \\------> cloned\n"
"                                       \\-----> guests\n"
"                                        \\---->\n"
"\n"
msgstr ""
"                        virt-sysprep\n"
"                             |\n"
"                             v\n"
" original guest --------> template ---------->\n"
"                                      \\------> cloned\n"
"                                       \\-----> guests\n"
"                                        \\---->\n"
"\n"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:354
msgid ""
"You can, of course, just copy the block device on the host using L<cp(1)> or "
"L<dd(1)>."
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:357
#, no-wrap
msgid ""
"                   dd                 dd\n"
" original guest --------> template ---------->\n"
"                                      \\------> cloned\n"
"                                       \\-----> guests\n"
"                                        \\---->\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:363
msgid "There are some smarter (and faster) ways too:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:365
#, no-wrap
msgid ""
"                          snapshot\n"
"                template ---------->\n"
"                            \\------> cloned\n"
"                             \\-----> guests\n"
"                              \\---->\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:371
msgid ""
"You may want to run virt-sysprep twice, once to reset the guest (to make a "
"template) and a second time to customize the guest for a specific user:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:375
#, no-wrap
msgid ""
"                    virt-sysprep        virt-sysprep\n"
"                      (reset)      (add user, keys, logos)\n"
"                         |                   |\n"
"                 dd      v          dd       v\n"
" original guest ----> template ---------> copied ------> custom\n"
"                                          template       guest\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:386
msgid "Create a snapshot using qemu-img:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:388
#, no-wrap
msgid ""
" qemu-img create -f qcow2 -o backing_file=original snapshot.qcow\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:390
msgid ""
"The advantage is that you don't need to copy the original (very fast)  and "
"only changes are stored (less storage required)."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:393
msgid ""
"Note that writing to the backing file once you have created guests on top of "
"it is not possible: you will corrupt the guests."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:398
msgid "Create a snapshot using C<lvcreate --snapshot>."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:402
msgid ""
"Other ways to create snapshots include using filesystems-level tools (for "
"filesystems such as btrfs)."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:405
msgid ""
"Most Network Attached Storage (NAS) devices can also create cheap snapshots "
"from files or LUNs."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:410
msgid ""
"Get your NAS to duplicate the LUN.  Most NAS devices can also duplicate LUNs "
"very cheaply (they copy them on-demand in the background)."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:416
msgid "Prepare your template using L<virt-sparsify(1)>.  See below."
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:420
msgid "VIRT-CLONE"
msgstr "VIRT-CLONE"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:422
msgid ""
"A separate tool, L<virt-clone(1)>, can be used to duplicate the block device "
"and/or modify the external libvirt configuration of a guest.  It will reset "
"the name, UUID and MAC address of the guest in the libvirt XML."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:427
msgid ""
"L<virt-clone(1)> does not use libguestfs and cannot look inside the disk "
"image.  This was the original motivation to write virt-sysprep."
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:430
msgid "SPARSIFY"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:432
#, no-wrap
msgid ""
"              virt-sparsify\n"
" original guest --------> template\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:435
msgid ""
"L<virt-sparsify(1)> can be used to make the cloning template smaller, making "
"it easier to compress and/or faster to copy."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:438
msgid ""
"Notice that since virt-sparsify also copies the image, you can use it to "
"make the initial copy (instead of C<dd>)."
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:441
msgid "RESIZE"
msgstr "ЗМІНА РОЗМІРІВ"

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:443
#, no-wrap
msgid ""
"                         virt-resize\n"
"                template ---------->\n"
"                            \\------> cloned\n"
"                             \\-----> guests\n"
"                              \\---->\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:449
msgid ""
"If you want to give people cloned guests, but let them pick the size of the "
"guest themselves (eg. depending on how much they are prepared to pay for "
"disk space), then instead of copying the template, you can run L<virt-"
"resize(1)>.  Virt-resize performs a copy and resize, and thus is ideal for "
"cloning guests from a template."
msgstr ""

#. type: =head1
#: ../sysprep/virt-sysprep.pod:455
msgid "FIRSTBOOT VS SCRIPT"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:457
msgid ""
"The two options I<--firstboot> and I<--script> both supply shell scripts "
"that are run against the guest.  However these two options are significantly "
"different."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:461
msgid ""
"I<--firstboot script> uploads the file C<script> into the guest and arranges "
"that it will run, in the guest, when the guest is next booted.  (The script "
"will only run once, at the \"first boot\")."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:465
msgid ""
"I<--script script> runs the shell C<script> I<on the host>, with its current "
"directory inside the guest filesystem."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:468
msgid ""
"If you needed, for example, to C<yum install> new packages, then you I<must "
"not> use I<--script> for this, since that would (a) run the C<yum> command "
"on the host and (b) wouldn't have access to the same resources "
"(repositories, keys, etc.) as the guest.  Any command that needs to run on "
"the guest I<must> be run via I<--firstboot>."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:474
msgid ""
"On the other hand if you need to make adjustments to the guest filesystem "
"(eg. copying in files), then I<--script> is ideal since (a)  it has access "
"to the host filesystem and (b) you will get immediate feedback on errors."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:479
msgid "Either or both options can be used multiple times on the command line."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:483
msgid ""
"Although virt-sysprep removes some sensitive information from the guest, it "
"does not pretend to remove all of it.  You should examine the L</OPERATIONS> "
"above and the guest afterwards."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:487
msgid ""
"Sensitive files are simply removed.  The data they contained may still exist "
"on the disk, easily recovered with a hex editor or undelete tool.  The I<--"
"scrub> option can be used to scrub files instead of just deleting them.  "
"L<virt-sparsify(1)> is another way to remove this content.  See also the "
"L<scrub(1)> command to get rid of deleted content in directory entries and "
"inodes."
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:494
msgid "RANDOM SEED"
msgstr "БАЗА ВИПАДКОВОСТІ"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:496
msgid "I<(This section applies to Linux guests only)>"
msgstr "I<(Цей розділ стосується лише гостьових систем Linux)>"

#. type: textblock
#: ../sysprep/virt-sysprep.pod:498
msgid ""
"For supported guests, virt-sysprep writes a few bytes of randomness from the "
"host into the guest's random seed file."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:501
msgid ""
"If this is just done once and the guest is cloned from the same template, "
"then each guest will start with the same entropy, and things like SSH host "
"keys and TCP sequence numbers may be predictable."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:505
msgid ""
"Therefore you should arrange to add more randomness I<after> cloning from a "
"template too, which can be done by enabling just the customize module:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:509
#, no-wrap
msgid ""
" cp template.img newguest.img\n"
" virt-sysprep --enable customize -a newguest.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:514
msgid ""
"Windows 8 \"fast startup\" can prevent virt-sysprep from working.  See "
"L<guestfs(3)/WINDOWS HIBERNATION AND WINDOWS 8 FAST STARTUP>."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:553
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-builder(1)>, L<virt-clone(1)>, L<virt-"
"customize(1)>, L<virt-rescue(1)>, L<virt-resize(1)>, L<virt-sparsify(1)>, "
"L<virsh(1)>, L<lvcreate(8)>, L<qemu-img(1)>, L<scrub(1)>, L<http://"
"libguestfs.org/>, L<http://libvirt.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-builder(1)>, L<virt-clone(1)>, L<virt-"
"customize(1)>, L<virt-rescue(1)>, L<virt-resize(1)>, L<virt-sparsify(1)>, "
"L<virsh(1)>, L<lvcreate(8)>, L<qemu-img(1)>, L<scrub(1)>, L<http://"
"libguestfs.org/>, L<http://libvirt.org/>."

#. type: textblock
#: ../sysprep/virt-sysprep.pod:572
msgid "Wanlong Gao, Fujitsu Ltd."
msgstr "Wanlong Gao, Fujitsu Ltd."

#. type: textblock
#: ../sysprep/virt-sysprep.pod:578
msgid "Copyright (C) 2012 Fujitsu Ltd."
msgstr "Авторські права належать Fujitsu Ltd., 2012"

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:3
msgid "libguestfs-test-tool - Diagnostics for libguestfs"
msgstr "libguestfs-test-tool — діагностика libguestfs"

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:7
#, no-wrap
msgid ""
" libguestfs-test-tool [--options]\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:11
msgid ""
"libguestfs-test-tool is a test program shipped with libguestfs to allow you "
"to check basic libguestfs functionality is working.  This is needed because "
"libguestfs occasionally breaks for reasons beyond our control: usually "
"because of changes in the underlying qemu or kernel packages, or the host "
"environment."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:17
msgid "If you suspect a problem in libguestfs, then just run:"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:21
msgid "It will print lots of diagnostic messages."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:23
msgid "If it runs to completion successfully, you will see this near the end:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:25
#, no-wrap
msgid ""
" ===== TEST FINISHED OK =====\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:27
msgid "and the test tool will exit with code 0."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:29
msgid ""
"If it fails (and/or exits with non-zero error code), please paste the "
"I<complete, unedited> output of the test tool into a bug report.  More "
"information about reporting bugs can be found on the L<http://libguestfs.org/"
"> website."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:42
msgid "B<--qemu qemu_binary>"
msgstr "B<--qemu виконуваний_файл_qemu>"

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:44
msgid ""
"If you have downloaded another qemu binary, point this option at the full "
"path of the binary to try it."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:47
msgid "B<--qemudir qemu_source_dir>"
msgstr "B<--qemudir каталог_коду_qemu>"

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:49
msgid ""
"If you have compiled qemu from source, point this option at the source "
"directory to try it."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:52
msgid "B<-t N>"
msgstr "B<-t N>"

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:54
msgid "B<--timeout N>"
msgstr "B<--timeout N>"

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:56
msgid ""
"Set the launch timeout to C<N> seconds.  The default is 600 seconds (10 "
"minutes) which does not usually need to be adjusted."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:63
msgid "Display the libguestfs version number and exit."
msgstr ""

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:67
msgid "TRYING OUT A DIFFERENT VERSION OF QEMU"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:69
msgid ""
"If you have compiled another version of qemu from source and would like to "
"try that, then you can use the I<--qemudir> option to point to the qemu "
"source directory."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:73
msgid ""
"If you have downloaded a qemu binary from somewhere, use the I<--qemu> "
"option to point to the binary."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:76
msgid ""
"Note when using these options, you can ignore the business of qemu wrapper "
"scripts (L<guestfs(3)/QEMU WRAPPERS>), since libguestfs-test-tool writes a "
"wrapper script for you if one is needed."
msgstr ""

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:80
msgid "TRYING OUT A DIFFERENT KERNEL"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:82
msgid ""
"If you are using supermin / febootstrap E<ge> 3.8 then you can select which "
"kernel libguestfs tries.  You do this by setting the environment variables "
"C<SUPERMIN_KERNEL> and/or C<SUPERMIN_MODULES> (C<FEBOOTSTRAP_KERNEL> and "
"C<FEBOOTSTRAP_MODULES> if still using the old febootstrap 3.21 program)."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:88
msgid "Refer to L<supermin(1)/ENVIRONMENT VARIABLES> for further information."
msgstr ""

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:90
msgid "TRYING OUT A DIFFERENT VERSION OF LIBVIRT"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:92
#: ../test-tool/libguestfs-test-tool.pod:113
#: ../test-tool/libguestfs-test-tool.pod:136
msgid ""
"To find out which backend is the default in your libguestfs package, do:"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:98
msgid ""
"If you are using the libvirt backend, then you can try out a different (eg. "
"upstream) version of libvirt by running these commands (I<not> as root):"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:102
#, no-wrap
msgid ""
" killall libvirtd lt-libvirtd\n"
" ~/path/to/libvirt/run libguestfs-test-tool\n"
"\n"
msgstr ""
" killall libvirtd lt-libvirtd\n"
" ~/шлях/до/libvirt/run libguestfs-test-tool\n"
"\n"

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:105
msgid ""
"The first command kills any session C<libvirtd> process(es) that may be "
"running on the machine.  The second command uses libvirt's C<run> script (in "
"the top-level libvirt build directory) to set some environment variables so "
"that the alternate version of libvirt is used to run the program."
msgstr ""

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:111
msgid "TRYING OUT WITH / WITHOUT LIBVIRT"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:119
msgid ""
"If you are using the libvirt backend, you can try without (ie. libguestfs "
"directly launching qemu) by doing:"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:124
msgid ""
"Or if you are using the default (direct) backend, then you can try libvirt:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:127
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND=libvirt\n"
"\n"
msgstr ""
" export LIBGUESTFS_BACKEND=libvirt\n"
"\n"

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:129
msgid ""
"or with libvirt and a specific L<libvirt URI|http://libvirt.org/uri.html>:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:132
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND=libvirt:qemu:///session\n"
"\n"
msgstr ""
" export LIBGUESTFS_BACKEND=libvirt:qemu:///сеанс\n"
"\n"

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:134
msgid "TRYING OUT DIFFERENT SELINUX SETTINGS"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:142
msgid "To find out if SELinux is being used, do:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:144
#, no-wrap
msgid ""
" getenforce\n"
"\n"
msgstr ""
" getenforce\n"
"\n"

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:146
msgid ""
"If you are using libvirt, SELinux and sVirt, then you can try to see if "
"changing SELinux to \"permissive\" mode makes any difference.  Use this "
"command as root:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:150
#, no-wrap
msgid ""
" setenforce Permissive\n"
"\n"
msgstr ""
" setenforce Permissive\n"
"\n"

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:152
msgid ""
"If this makes a difference, look in the audit logs for recent failures "
"(\"AVCs\"):"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:155
#, no-wrap
msgid ""
" ausearch -m avc -ts recent\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:157
msgid ""
"You can convert AVCs into suggested SELinux policy rules using tools like "
"L<audit2allow(1)>.  For more information, see the \"Security Enhanced Linux "
"User Guide\"."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:161
msgid "To reenable SELinux and sVirt, do:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:163
#, no-wrap
msgid ""
" setenforce Enforcing\n"
"\n"
msgstr ""
" setenforce Enforcing\n"
"\n"

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:165
msgid "SELF-DIAGNOSIS"
msgstr "САМОДІАГНОСТИКА"

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:167
msgid ""
"Refer to L<guestfs(3)/APPLIANCE BOOT PROCESS> to understand the messages "
"produced by libguestfs-test-tool and/or possible errors."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:172
msgid ""
"libguestfs-test-tool returns I<0> if the tests completed without error, or "
"I<1> if there was an error."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:182
msgid "L<guestfs(3)>, L<http://libguestfs.org/>, L<http://qemu.org/>."
msgstr "L<guestfs(3)>, L<http://libguestfs.org/>, L<http://qemu.org/>."

#. type: textblock
#: ../tools/virt-list-filesystems:29
msgid ""
"virt-list-filesystems - List filesystems in a virtual machine or disk image"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-filesystems:33
#, no-wrap
msgid ""
" virt-list-filesystems [--options] domname\n"
"\n"
msgstr ""
" virt-list-filesystems [--параметри] -d назва_домену\n"
"\n"

#. type: verbatim
#: ../tools/virt-list-filesystems:35
#, no-wrap
msgid ""
" virt-list-filesystems [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""
" virt-list-filesystems [--параметри] образ.img [образ.img ...]\n"
"\n"

#. type: =head1
#: ../tools/virt-list-filesystems:37 ../tools/virt-list-partitions:37
#: ../tools/virt-tar:42
msgid "OBSOLETE"
msgstr "ЗАСТАРІЛЕ"

#. type: textblock
#: ../tools/virt-list-filesystems:39 ../tools/virt-list-partitions:39
msgid ""
"This tool is obsolete.  Use L<virt-filesystems(1)> as a more flexible "
"replacement."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems:44
msgid ""
"C<virt-list-filesystems> is a command line tool to list the filesystems that "
"are contained in a virtual machine or disk image."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems:48
msgid ""
"C<virt-list-filesystems> is just a simple wrapper around L<libguestfs(3)> "
"functionality.  For more complex cases you should look at the "
"L<guestfish(1)> tool."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems:111
msgid ""
"With this option, C<virt-list-filesystems> displays the type of each "
"filesystem too (where \"type\" means C<ext3>, C<xfs> etc.)"
msgstr ""

#. type: =item
#: ../tools/virt-list-filesystems:118
msgid "B<-a>"
msgstr "B<-a>"

#. type: textblock
#: ../tools/virt-list-filesystems:122
msgid ""
"Normally we only show mountable filesystems.  If this option is given then "
"swap devices are shown too."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems:183
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-tar(1)>, L<virt-"
"filesystems(1)>, L<virt-list-partitions(1)>, L<Sys::Guestfs(3)>, L<Sys::"
"Virt(3)>, L<http://libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-tar(1)>, L<virt-"
"filesystems(1)>, L<virt-list-partitions(1)>, L<Sys::Guestfs(3)>, L<Sys::"
"Virt(3)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../tools/virt-list-filesystems:199 ../tools/virt-tar:312
msgid "Copyright (C) 2009 Red Hat Inc."
msgstr "© Red Hat Inc., 2009"

#. type: textblock
#: ../tools/virt-list-partitions:29
msgid ""
"virt-list-partitions - List partitions in a virtual machine or disk image"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-partitions:33
#, no-wrap
msgid ""
" virt-list-partitions [--options] domname\n"
"\n"
msgstr ""
" virt-list-partitions [--параметри] назва_домену\n"
"\n"

#. type: verbatim
#: ../tools/virt-list-partitions:35
#, no-wrap
msgid ""
" virt-list-partitions [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""
" virt-list-partitions [--параметри] диск.img [диск.img ...]\n"
"\n"

#. type: textblock
#: ../tools/virt-list-partitions:44
msgid ""
"C<virt-list-partitions> is a command line tool to list the partitions that "
"are contained in a virtual machine or disk image.  It is mainly useful as a "
"first step to using L<virt-resize(1)>."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions:49
msgid ""
"C<virt-list-partitions> is just a simple wrapper around L<libguestfs(3)> "
"functionality.  For more complex cases you should look at the "
"L<guestfish(1)> tool."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions:112
msgid "Show sizes in human-readable form (eg. \"1G\")."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions:122
msgid ""
"With this option, C<virt-list-partitions> displays the type and size of each "
"partition too (where \"type\" means C<ext3>, C<pv> etc.)"
msgstr ""

#. type: =item
#: ../tools/virt-list-partitions:129
msgid "B<-t>"
msgstr "B<-t>"

#. type: =item
#: ../tools/virt-list-partitions:131
msgid "B<--total>"
msgstr "B<--total>"

#. type: textblock
#: ../tools/virt-list-partitions:133
msgid ""
"Display the total size of each block device (as a separate row or rows)."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions:265
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-list-"
"filesystems(1)>, L<virt-resize(1)>, L<Sys::Guestfs(3)>, L<Sys::Virt(3)>, "
"L<http://libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-list-"
"filesystems(1)>, L<virt-resize(1)>, L<Sys::Guestfs(3)>, L<Sys::Virt(3)>, "
"L<http://libguestfs.org/>."

#. type: textblock
#: ../tools/virt-tar:30
msgid "virt-tar - Extract or upload files to a virtual machine"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar:34
#, no-wrap
msgid ""
" virt-tar [--options] -x domname directory tarball\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar:36
#, no-wrap
msgid ""
" virt-tar [--options] -u domname tarball directory\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar:38
#, no-wrap
msgid ""
" virt-tar [--options] disk.img [disk.img ...] -x directory tarball\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar:40
#, no-wrap
msgid ""
" virt-tar [--options] disk.img [disk.img ...] -u tarball directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-tar:44
msgid ""
"This tool is obsolete.  Use L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-"
"tar-in(1)>, L<virt-tar-out(1)> as replacements."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:49
msgid "Download C</home> from the VM into a local tarball:"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar:51
#, no-wrap
msgid ""
" virt-tar -x domname /home home.tar\n"
"\n"
msgstr ""
" virt-tar -x domname /home home.tar\n"
"\n"

#. type: verbatim
#: ../tools/virt-tar:53
#, no-wrap
msgid ""
" virt-tar -zx domname /home home.tar.gz\n"
"\n"
msgstr ""
" virt-tar -zx domname /home home.tar.gz\n"
"\n"

#. type: textblock
#: ../tools/virt-tar:55
msgid "Upload a local tarball and unpack it inside C</tmp> in the VM:"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar:57
#, no-wrap
msgid ""
" virt-tar -u domname uploadstuff.tar /tmp\n"
"\n"
msgstr ""
" virt-tar -u domname uploadstuff.tar /tmp\n"
"\n"

#. type: verbatim
#: ../tools/virt-tar:59
#, no-wrap
msgid ""
" virt-tar -zu domname uploadstuff.tar.gz /tmp\n"
"\n"
msgstr ""
" virt-tar -zu domname uploadstuff.tar.gz /tmp\n"
"\n"

#. type: textblock
#: ../tools/virt-tar:63
msgid ""
"You must I<not> use C<virt-tar> with the I<-u> option (upload) on live "
"virtual machines.  If you do this, you risk disk corruption in the VM.  "
"C<virt-tar> tries to stop you from doing this, but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:68
msgid ""
"You can use I<-x> (extract) on live virtual machines, but you might get "
"inconsistent results or errors if there is filesystem activity inside the "
"VM.  If the live VM is synched and quiescent, then C<virt-tar> will usually "
"work, but the only way to guarantee consistent results is if the virtual "
"machine is shut down."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:76
msgid ""
"C<virt-tar> is a general purpose archive tool for downloading and uploading "
"parts of a guest filesystem.  There are many possibilities: making backups, "
"uploading data files, snooping on guest activity, fixing or customizing "
"guests, etc."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:81
msgid ""
"If you want to just view a single file, use L<virt-cat(1)>.  If you just "
"want to edit a single file, use L<virt-edit(1)>.  For more complex cases you "
"should look at the L<guestfish(1)> tool."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:85
msgid ""
"There are two modes of operation: I<-x> (eXtract) downloads a directory and "
"its contents (recursively) from the virtual machine into a local tarball.  "
"I<-u> uploads from a local tarball, unpacking it into a directory inside the "
"virtual machine.  You cannot use these two options together."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:91
msgid ""
"In addition, you may need to use the I<-z> (gZip) option to enable "
"compression.  When uploading, you have to specify I<-z> if the upload file "
"is compressed because virt-tar won't detect this on its own."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:95
msgid ""
"C<virt-tar> can only handle tar (optionally gzipped) format tarballs.  For "
"example it cannot do PKZip files or bzip2 compression.  If you want that "
"then you'll have to rebuild the tarballs yourself.  (This is a limitation of "
"the L<libguestfs(3)> API)."
msgstr ""

#. type: =item
#: ../tools/virt-tar:157
msgid "B<--extract>"
msgstr "B<--extract>"

#. type: =item
#: ../tools/virt-tar:159
msgid "B<--download>"
msgstr "B<--download>"

#. type: =item
#: ../tools/virt-tar:161
msgid "B<-u>"
msgstr "B<-u>"

#. type: =item
#: ../tools/virt-tar:163
msgid "B<--upload>"
msgstr "B<--upload>"

#. type: textblock
#: ../tools/virt-tar:165
msgid ""
"Use I<-x> to extract (download) a directory from a virtual machine to a "
"local tarball."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:168
msgid ""
"Use I<-u> to upload and unpack from a local tarball into a virtual machine.  "
"Please read the L</WARNING> section above before using this option."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:172
msgid "You must specify exactly one of these options."
msgstr ""

#. type: =item
#: ../tools/virt-tar:178
msgid "B<-z>"
msgstr "B<-z>"

#. type: =item
#: ../tools/virt-tar:180
msgid "B<--gzip>"
msgstr "B<--gzip>"

#. type: textblock
#: ../tools/virt-tar:182
msgid "Specify that the input or output tarball is gzip-compressed."
msgstr ""

#. type: textblock
#: ../tools/virt-tar:294
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-edit(1)>, L<virt-copy-"
"in(1)>, L<virt-copy-out(1)>, L<virt-tar-in(1)>, L<virt-tar-out(1)>, L<Sys::"
"Guestfs(3)>, L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-edit(1)>, L<virt-copy-"
"in(1)>, L<virt-copy-out(1)>, L<virt-tar-in(1)>, L<virt-tar-out(1)>, L<Sys::"
"Guestfs(3)>, L<Sys::Virt(3)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../tools/virt-win-reg:34
msgid ""
"virt-win-reg - Export and merge Windows Registry entries from a Windows guest"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:38
#, no-wrap
msgid ""
" virt-win-reg domname 'HKLM\\Path\\To\\Subkey'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:40
#, no-wrap
msgid ""
" virt-win-reg domname 'HKLM\\Path\\To\\Subkey' name\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:42
#, no-wrap
msgid ""
" virt-win-reg domname 'HKLM\\Path\\To\\Subkey' @\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:44
#, no-wrap
msgid ""
" virt-win-reg --merge domname [input.reg ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:46
#, no-wrap
msgid ""
" virt-win-reg [--options] disk.img ... # instead of domname\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:50
msgid ""
"You must I<not> use C<virt-win-reg> with the I<--merge> option on live "
"virtual machines.  If you do this, you I<will> get irreversible disk "
"corruption in the VM.  C<virt-win-reg> tries to stop you from doing this, "
"but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:55
msgid ""
"Modifying the Windows Registry is an inherently risky operation.  The format "
"is deliberately obscure and undocumented, and Registry changes can leave the "
"system unbootable.  Therefore when using the I<--merge> option, make sure "
"you have a reliable backup first."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:62
msgid ""
"This program can export and merge Windows Registry entries from a Windows "
"guest."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:65
msgid ""
"The first parameter is the libvirt guest name or the raw disk image of a "
"Windows guest."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:68
msgid ""
"If I<--merge> is I<not> specified, then the chosen registry key is displayed/"
"exported (recursively).  For example:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:71
#, no-wrap
msgid ""
" $ virt-win-reg Windows7 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft'\n"
"\n"
msgstr ""
" $ virt-win-reg Windows7 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft'\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:73
msgid ""
"You can also display single values from within registry keys, for example:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:76
#, no-wrap
msgid ""
" $ cvkey='HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'\n"
" $ virt-win-reg Windows7 $cvkey ProductName\n"
" Windows 7 Enterprise\n"
"\n"
msgstr ""
" $ cvkey='HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'\n"
" $ virt-win-reg Windows7 $cvkey ProductName\n"
" Windows 7 Enterprise\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:80
msgid ""
"With I<--merge>, you can merge a textual regedit file into the Windows "
"Registry:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:83
#, no-wrap
msgid ""
" $ virt-win-reg --merge Windows7 changes.reg\n"
"\n"
msgstr ""
" $ virt-win-reg --merge Windows7 changes.reg\n"
"\n"

#. type: =head2
#: ../tools/virt-win-reg:85
msgid "NOTE"
msgstr "ПРИМІТКА"

#. type: textblock
#: ../tools/virt-win-reg:87
msgid ""
"This program is only meant for simple access to the registry.  If you want "
"to do complicated things with the registry, we suggest you download the "
"Registry hive files from the guest using L<libguestfs(3)> or L<guestfish(1)> "
"and access them locally, eg. using L<hivex(3)>, L<hivexsh(1)> or "
"L<hivexregedit(1)>."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg:156
msgid "B<--merge>"
msgstr "B<--merge>"

#. type: textblock
#: ../tools/virt-win-reg:158
msgid ""
"In merge mode, this merges a textual regedit file into the Windows Registry "
"of the virtual machine.  If this flag is I<not> given then virt-win-reg "
"displays or exports Registry entries instead."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:162
msgid ""
"Note that I<--merge> is I<unsafe> to use on live virtual machines, and will "
"result in disk corruption.  However exporting (without this flag)  is always "
"safe."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg:170
msgid "B<--encoding> UTF-16LE|ASCII"
msgstr "B<--encoding> UTF-16LE|ASCII"

#. type: textblock
#: ../tools/virt-win-reg:172
msgid ""
"When merging (only), you may need to specify the encoding for strings to be "
"used in the hive file.  This is explained in detail in L<Win::Hivex::"
"Regedit(3)/ENCODING STRINGS>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:176
msgid ""
"The default is to use UTF-16LE, which should work with recent versions of "
"Windows."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg:183
msgid "B<--unsafe-printable-strings>"
msgstr "B<--unsafe-printable-strings>"

#. type: textblock
#: ../tools/virt-win-reg:185
msgid ""
"When exporting (only), assume strings are UTF-16LE and print them as strings "
"instead of hex sequences.  Remove the final zero codepoint from strings if "
"present."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:189
msgid ""
"This is unsafe and does not preserve the fidelity of strings in the original "
"Registry for various reasons:"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:196
msgid ""
"Assumes the original encoding is UTF-16LE.  ASCII strings and strings in "
"other encodings will be corrupted by this transformation."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:201
msgid ""
"Assumes that everything which has type 1 or 2 is really a string and that "
"everything else is not a string, but the type field in real Registries is "
"not reliable."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:207
msgid ""
"Loses information about whether a zero codepoint followed the string in the "
"Registry or not."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:212
msgid ""
"This all happens because the Registry itself contains no information about "
"how strings are encoded (see L<Win::Hivex::Regedit(3)/ENCODING STRINGS>)."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:216
msgid ""
"You should only use this option for quick hacking and debugging of the "
"Registry contents, and I<never> use it if the output is going to be passed "
"into another program or stored in another Registry."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg:583
msgid "SUPPORTED SYSTEMS"
msgstr "ПІДТРИМУВАНІ СИСТЕМИ"

#. type: textblock
#: ../tools/virt-win-reg:585
msgid ""
"The program currently supports Windows NT-derived guests starting with "
"Windows XP through to at least Windows 8."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:588
msgid "The following Registry keys are supported:"
msgstr ""

#. type: =item
#: ../tools/virt-win-reg:592
msgid "C<HKEY_LOCAL_MACHINE\\SAM>"
msgstr "C<HKEY_LOCAL_MACHINE\\SAM>"

#. type: =item
#: ../tools/virt-win-reg:594
msgid "C<HKEY_LOCAL_MACHINE\\SECURITY>"
msgstr "C<HKEY_LOCAL_MACHINE\\SECURITY>"

#. type: =item
#: ../tools/virt-win-reg:596
msgid "C<HKEY_LOCAL_MACHINE\\SOFTWARE>"
msgstr "C<HKEY_LOCAL_MACHINE\\SOFTWARE>"

#. type: =item
#: ../tools/virt-win-reg:598
msgid "C<HKEY_LOCAL_MACHINE\\SYSTEM>"
msgstr "C<HKEY_LOCAL_MACHINE\\SYSTEM>"

#. type: =item
#: ../tools/virt-win-reg:600
msgid "C<HKEY_USERS\\.DEFAULT>"
msgstr "C<HKEY_USERS\\.DEFAULT>"

#. type: =item
#: ../tools/virt-win-reg:602
msgid "C<HKEY_USERS\\I<SID>>"
msgstr "C<HKEY_USERS\\I<SID>>"

#. type: textblock
#: ../tools/virt-win-reg:604
msgid "where I<SID> is a Windows User SID (eg. C<S-1-5-18>)."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg:606
msgid "C<HKEY_USERS\\I<username>>"
msgstr "C<HKEY_USERS\\I<користувач>>"

#. type: textblock
#: ../tools/virt-win-reg:608
msgid ""
"where I<username> is a local user name (this is a libguestfs extension)."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:612
msgid ""
"You can use C<HKLM> as a shorthand for C<HKEY_LOCAL_MACHINE>, and C<HKU> for "
"C<HKEY_USERS>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:615
msgid ""
"The literal keys C<HKEY_USERS\\$SID> and C<HKEY_CURRENT_USER> are not "
"supported (there is no \"current user\")."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:620
msgid ""
"Windows 8 \"fast startup\" can prevent virt-win-reg from being able to edit "
"the Registry.  See L<guestfs(3)/WINDOWS HIBERNATION AND WINDOWS 8 FAST "
"STARTUP>."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg:624
msgid "ENCODING"
msgstr "КОДУВАННЯ"

#. type: textblock
#: ../tools/virt-win-reg:626
msgid ""
"C<virt-win-reg> expects that regedit files have already been reencoded in "
"the local encoding.  Usually on Linux hosts, this means UTF-8 with Unix-"
"style line endings.  Since Windows regedit files are often in UTF-16LE with "
"Windows-style line endings, you may need to reencode the whole file before "
"or after processing."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:632
msgid ""
"To reencode a file from Windows format to Linux (before processing it with "
"the I<--merge> option), you would do something like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:635
#, no-wrap
msgid ""
" iconv -f utf-16le -t utf-8 < win.reg | dos2unix > linux.reg\n"
"\n"
msgstr ""
" iconv -f utf-16le -t utf-8 < win.reg | dos2unix > linux.reg\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:637
msgid ""
"To go in the opposite direction, after exporting and before sending the file "
"to a Windows user, do something like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:640
#, no-wrap
msgid ""
" unix2dos linux.reg | iconv -f utf-8 -t utf-16le > win.reg\n"
"\n"
msgstr ""
" unix2dos linux.reg | iconv -f utf-8 -t utf-16le > win.reg\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:642
msgid "For more information about encoding, see L<Win::Hivex::Regedit(3)>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:644
msgid ""
"If you are unsure about the current encoding, use the L<file(1)> command.  "
"Recent versions of Windows regedit.exe produce a UTF-16LE file with Windows-"
"style (CRLF) line endings, like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:648
#, no-wrap
msgid ""
" $ file software.reg\n"
" software.reg: Little-endian UTF-16 Unicode text, with very long lines,\n"
" with CRLF line terminators\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:652
msgid "This file would need conversion before you could I<--merge> it."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg:654
msgid "CurrentControlSet etc."
msgstr "CurrentControlSet тощо."

#. type: textblock
#: ../tools/virt-win-reg:656
msgid ""
"Registry keys like C<CurrentControlSet> don't really exist in the Windows "
"Registry at the level of the hive file, and therefore you cannot modify "
"these."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:660
msgid ""
"C<CurrentControlSet> is usually an alias for C<ControlSet001>.  In some "
"circumstances it might refer to another control set.  The way to find out is "
"to look at the C<HKLM\\SYSTEM\\Select> key:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:664
#, no-wrap
msgid ""
" # virt-win-reg WindowsGuest 'HKLM\\SYSTEM\\Select'\n"
" [HKEY_LOCAL_MACHINE\\SYSTEM\\Select]\n"
" \"Current\"=dword:00000001\n"
" \"Default\"=dword:00000001\n"
" \"Failed\"=dword:00000000\n"
" \"LastKnownGood\"=dword:00000002\n"
"\n"
msgstr ""
" # virt-win-reg WindowsGuest 'HKLM\\SYSTEM\\Select'\n"
" [HKEY_LOCAL_MACHINE\\SYSTEM\\Select]\n"
" \"Current\"=dword:00000001\n"
" \"Default\"=dword:00000001\n"
" \"Failed\"=dword:00000000\n"
" \"LastKnownGood\"=dword:00000002\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:671
msgid "\"Current\" is the one which Windows will choose when it boots."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:673
msgid ""
"Similarly, other C<Current...> keys in the path may need to be replaced."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg:676
msgid "DELETING REGISTRY KEYS AND VALUES"
msgstr "ВИЛУЧЕННЯ КЛЮЧІВ ТА ЗНАЧЕНЬ РЕЄСТРУ"

#. type: textblock
#: ../tools/virt-win-reg:678
msgid "To delete a whole registry key, use the syntax:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:680
#, no-wrap
msgid ""
" [-HKEY_LOCAL_MACHINE\\Foo]\n"
"\n"
msgstr ""
" [-HKEY_LOCAL_MACHINE\\Foo]\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:682
msgid "To delete a single value within a key, use the syntax:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:684
#, no-wrap
msgid ""
" [HKEY_LOCAL_MACHINE\\Foo]\n"
" \"Value\"=-\n"
"\n"
msgstr ""
" [HKEY_LOCAL_MACHINE\\Foo]\n"
" \"Value\"=-\n"
"\n"

#. type: =head1
#: ../tools/virt-win-reg:687
msgid "WINDOWS TIPS"
msgstr "ПІДКАЗКИ ЩОДО WINDOWS"

#. type: textblock
#: ../tools/virt-win-reg:689
msgid ""
"Note that some of these tips modify the guest disk image.  The guest I<must> "
"be shut off, else you will get disk corruption."
msgstr ""

#. type: =head2
#: ../tools/virt-win-reg:692
msgid "RUNNING A BATCH SCRIPT WHEN A USER LOGS IN"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:694
msgid ""
"Prepare a DOS batch script, VBScript or executable.  Upload this using "
"L<guestfish(1)>.  For this example the script is called C<test.bat> and it "
"is uploaded into C<C:\\>:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:698
#, no-wrap
msgid ""
" guestfish -i -d WindowsGuest upload test.bat /test.bat\n"
"\n"
msgstr ""
" guestfish -i -d WindowsGuest upload test.bat /test.bat\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:700
msgid "Prepare a regedit file containing the registry change:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:702
#, no-wrap
msgid ""
" cat > test.reg <<'EOF'\n"
" [HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce]\n"
" \"Test\"=\"c:\\\\test.bat\"\n"
" EOF\n"
"\n"
msgstr ""
" cat > test.reg <<'EOF'\n"
" [HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce]\n"
" \"Test\"=\"c:\\\\test.bat\"\n"
" EOF\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:707
msgid ""
"In this example we use the key C<RunOnce> which means that the script will "
"run precisely once when the first user logs in.  If you want it to run every "
"time a user logs in, replace C<RunOnce> with C<Run>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:711
msgid "Now update the registry:"
msgstr "Оновіть регістр:"

#. type: verbatim
#: ../tools/virt-win-reg:713
#, no-wrap
msgid ""
" virt-win-reg --merge WindowsGuest test.reg\n"
"\n"
msgstr ""
" virt-win-reg --merge WindowsGuest test.reg\n"
"\n"

#. type: =head2
#: ../tools/virt-win-reg:715
msgid "INSTALLING A SERVICE"
msgstr "ВСТАНОВЛЕННЯ СЛУЖБИ"

#. type: textblock
#: ../tools/virt-win-reg:717
msgid ""
"This section assumes you are familiar with Windows services, and you either "
"have a program which handles the Windows Service Control Protocol directly "
"or you want to run any program using a service wrapper like SrvAny or the "
"free RHSrvAny."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:722
msgid ""
"First upload the program and optionally the service wrapper.  In this case "
"the test program is called C<test.exe> and we are using the RHSrvAny wrapper:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:726
#, no-wrap
msgid ""
" guestfish -i -d WindowsGuest <<EOF\n"
"   upload rhsrvany.exe /rhsrvany.exe\n"
"   upload test.exe /test.exe\n"
" EOF\n"
"\n"
msgstr ""
" guestfish -i -d WindowsGuest <<EOF\n"
"   upload rhsrvany.exe /rhsrvany.exe\n"
"   upload test.exe /test.exe\n"
" EOF\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:731
msgid ""
"Prepare a regedit file containing the registry changes.  In this example, "
"the first registry change is needed for the service itself or the service "
"wrapper (if used).  The second registry change is only needed because I am "
"using the RHSrvAny service wrapper."
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg:736
#, no-wrap
msgid ""
" cat > service.reg <<'EOF'\n"
" [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny]\n"
" \"Type\"=dword:00000010\n"
" \"Start\"=dword:00000002\n"
" \"ErrorControl\"=dword:00000001\n"
" \"ImagePath\"=\"c:\\\\rhsrvany.exe\"\n"
" \"DisplayName\"=\"RHSrvAny\"\n"
" \"ObjectName\"=\"NetworkService\"\n"
" \n"
msgstr ""
" cat > service.reg <<'EOF'\n"
" [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny]\n"
" \"Type\"=dword:00000010\n"
" \"Start\"=dword:00000002\n"
" \"ErrorControl\"=dword:00000001\n"
" \"ImagePath\"=\"c:\\\\rhsrvany.exe\"\n"
" \"DisplayName\"=\"RHSrvAny\"\n"
" \"ObjectName\"=\"NetworkService\"\n"
" \n"

#. type: verbatim
#: ../tools/virt-win-reg:745
#, no-wrap
msgid ""
" [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny\\Parameters]\n"
" \"CommandLine\"=\"c:\\\\test.exe\"\n"
" \"PWD\"=\"c:\\\\Temp\"\n"
" EOF\n"
"\n"
msgstr ""
" [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny\\Parameters]\n"
" \"CommandLine\"=\"c:\\\\test.exe\"\n"
" \"PWD\"=\"c:\\\\Temp\"\n"
" EOF\n"
"\n"

#. type: textblock
#: ../tools/virt-win-reg:756
msgid ""
"For use of C<ControlSet001> see the section above in this manual page.  You "
"may need to adjust this according to the control set that is in use by the "
"guest."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:762
msgid ""
"C<\"ObjectName\"> controls the privileges that the service will have.  An "
"alternative is C<\"ObjectName\"=\"LocalSystem\"> which would be the most "
"privileged account."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:768
msgid ""
"For the meaning of the magic numbers, see this Microsoft KB article: "
"L<http://support.microsoft.com/kb/103000>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:773
msgid "Update the registry:"
msgstr "Оновіть регістр:"

#. type: verbatim
#: ../tools/virt-win-reg:775
#, no-wrap
msgid ""
" virt-win-reg --merge WindowsGuest service.reg\n"
"\n"
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg:777
msgid "SHELL QUOTING"
msgstr "ЕКРАНУВАННЯ СИМВОЛІВ У ОБОЛОНЦІ"

#. type: textblock
#: ../tools/virt-win-reg:779
msgid ""
"Be careful when passing parameters containing C<\\> (backslash) in the "
"shell.  Usually you will have to use 'single quotes' or double backslashes "
"(but not both) to protect them from the shell."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:783
msgid "Paths and value names are case-insensitive."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg:787
msgid ""
"L<hivex(3)>, L<hivexsh(1)>, L<hivexregedit(1)>, L<guestfs(3)>, "
"L<guestfish(1)>, L<virt-cat(1)>, L<Sys::Guestfs(3)>, L<Win::Hivex(3)>, "
"L<Win::Hivex::Regedit(3)>, L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""
"L<hivex(3)>, L<hivexsh(1)>, L<hivexregedit(1)>, L<guestfs(3)>, "
"L<guestfish(1)>, L<virt-cat(1)>, L<Sys::Guestfs(3)>, L<Win::Hivex(3)>, "
"L<Win::Hivex::Regedit(3)>, L<Sys::Virt(3)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../tools/virt-win-reg:805
msgid "Copyright (C) 2010 Red Hat Inc."
msgstr "©Red Hat Inc., 2010"

#. type: textblock
#: ../v2v/virt-v2v.pod:3
msgid "virt-v2v - Convert a guest to use KVM"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:7 ../v2v/virt-v2v.pod:86
#, no-wrap
msgid ""
" virt-v2v -ic vpx://vcenter.example.com/Datacenter/esxi esx_guest\n"
"\n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:9 ../v2v/virt-v2v.pod:103
#, no-wrap
msgid ""
" virt-v2v -ic vpx://vcenter.example.com/Datacenter/esxi esx_guest \\\n"
"   -o rhev -os rhev.nfs:/export_domain --network rhevm\n"
"\n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:12 ../v2v/virt-v2v.pod:136
#, no-wrap
msgid ""
" virt-v2v -i libvirtxml guest-domain.xml -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:14 ../v2v/virt-v2v.pod:126
#, no-wrap
msgid ""
" virt-v2v -i disk disk.img -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:16 ../v2v/virt-v2v.pod:117
#, no-wrap
msgid ""
" virt-v2v -i disk disk.img -o glance\n"
"\n"
msgstr ""
" virt-v2v -i disk disk.img -o glance\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:20
msgid ""
"Virt-v2v converts guests from a foreign hypervisor to run on KVM, managed by "
"libvirt, OpenStack, oVirt, Red Hat Enterprise Virtualisation (RHEV) or "
"several other targets.  It can currently convert Red Hat Enterprise Linux "
"and Windows guests running on Xen and VMware ESX."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:26
msgid ""
"There is also a companion front-end called L<virt-p2v(1)> which comes as an "
"ISO or CD image that can be booted on physical machines."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:29
msgid ""
"This manual page documents the rewritten virt-v2v included in libguestfs "
"E<ge> 1.28."
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:32
msgid "INPUT AND OUTPUT MODES"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:34
#, no-wrap
msgid ""
"                         ┌────────────┐  ┌─────────▶ -o null\n"
" -i disk ───────────┐    │            │ ─┘┌───────▶ -o local\n"
" -i ova  ─────────┐ └──▶ │ virt-v2v   │ ──┘┌───────▶ -o qemu\n"
"                  └────▶ │ conversion │ ───┘┌────────────┐\n"
" ESX ──▶┌────────────┐   │ server     │ ────▶ -o libvirt │─▶ KVM\n"
" Xen ──▶│ -i libvirt ──▶ │            │     │  (default) │\n"
" ... ──▶│  (default) │   │            │ ──┐ └────────────┘\n"
"        └────────────┘   │            │ ─┐└──────▶ -o glance\n"
" -i libvirtxml ────────▶ │            │ ┐└─────────▶ -o rhev\n"
"                         └────────────┘ └──────────▶ -o vdsm\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:45
msgid ""
"Virt-v2v has a number of possible input and output modes, selected using the "
"I<-i> and I<-o> options.  Only one input and output mode can be selected for "
"each run of virt-v2v."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:49
msgid ""
"I<-i libvirt> is used for reading from any libvirt source.  Since libvirt "
"can connect to many different hypervisors, it is used for reading guests "
"from VMware ESX, RHEL 5 Xen and more.  The I<-ic> option selects the precise "
"libvirt source."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:54
msgid ""
"I<-i disk> is used for reading from local disk images (mainly for testing)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:57
msgid "I<-i ova> is used for reading from a VMware ova source file."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:59
msgid ""
"I<-i libvirtxml> is used to read from libvirt XML files.  This is the method "
"used by L<virt-p2v(1)> behind the scenes."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:62
msgid "I<-o glance> is used for writing to OpenStack Glance."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:64
msgid ""
"I<-o libvirt> is used for writing to any libvirt target.  Libvirt can "
"connect to local or remote KVM hypervisors.  The I<-oc> option selects the "
"precise libvirt target."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:68
msgid ""
"I<-o local> is used to write to a local disk image with a local libvirt "
"configuration file (mainly for testing)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:71
msgid ""
"I<-o qemu> writes to a local disk image with a shell script for booting the "
"guest directly in qemu (mainly for testing)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:74
msgid ""
"I<-o rhev> is used to write to a RHEV-M / oVirt target.  I<-o vdsm> is only "
"used when virt-v2v runs under VDSM control."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:79
msgid "Convert from VMware vCenter server to local libvirt"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:81
msgid ""
"You have a VMware vCenter server called C<vcenter.example.com>, a datacenter "
"called C<Datacenter>, and an ESXi hypervisor called C<esxi>.  You want to "
"convert a guest called C<esx_guest> to run locally under libvirt."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:88
msgid ""
"In this case you will most likely have to run virt-v2v as C<root>, since it "
"needs to talk to the system libvirt daemon and copy the guest disks to C</"
"var/lib/libvirt/images>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:92
msgid "For more information see L</INPUT FROM VMWARE VCENTER SERVER> below."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:94
msgid "Convert from ESX to RHEV-M/oVirt"
msgstr "Перетворити образ із формату ESX на образ у форматі RHEV-M/oVirt"

#. type: textblock
#: ../v2v/virt-v2v.pod:96
msgid ""
"This is the same as the previous example, except you want to send the guest "
"to a RHEV-M Export Storage Domain which is located remotely (over NFS) at "
"C<rhev.nfs:/export_domain>.  If you are unclear about the location of the "
"Export Storage Domain you should check the settings on your RHEV-M "
"management console.  Guest network interface(s) are connected to the target "
"network called C<rhevm>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:106
msgid "In this case the host running virt-v2v acts as a B<conversion server>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:108
msgid ""
"Note that after conversion, the guest will appear in the RHEV-M Export "
"Storage Domain, from where you will need to import it using the RHEV-M user "
"interface.  (See L</OUTPUT TO RHEV>)."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:112
msgid "Convert disk image to OpenStack glance"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:114
msgid ""
"Given a disk image from another hypervisor that you want to convert to run "
"on OpenStack (only KVM-based OpenStack is supported), you can do:"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:119
msgid "To control the name of the image in Glance, use the I<-on> option."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:121
msgid "Convert disk image to disk image"
msgstr "Перетворити образ диска на образ диска"

#. type: textblock
#: ../v2v/virt-v2v.pod:123
msgid ""
"Given a disk image from another hypervisor that you want to convert to run "
"on KVM, you have two options.  The simplest way is to try:"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:128
msgid ""
"where virt-v2v guesses everything about the input C<disk.img> and (in this "
"case) writes the converted result to C</var/tmp>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:131
msgid ""
"A more complex method is to write some L<libvirt XML|http://libvirt.org/"
"formatdomain.html> describing the input guest (if you can get the source "
"hypervisor to provide you with libvirt XML, then so much the better).  You "
"can then do:"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:138
msgid ""
"Since C<guest-domain.xml> contains the path(s) to the guest disk image(s) "
"you do not need to specify the name of the disk image on the command line."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:142
msgid ""
"To convert a local disk image and immediately boot it in local qemu, do:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:145
#, no-wrap
msgid ""
" virt-v2v -i disk disk.img -o qemu -os /var/tmp --qemu-boot\n"
"\n"
msgstr ""
" virt-v2v -i disk disk.img -o qemu -os /var/tmp --qemu-boot\n"
"\n"

#. type: =item
#: ../v2v/virt-v2v.pod:155
msgid "B<-b> ..."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:157
msgid "B<--bridge> ..."
msgstr "B<--bridge> ..."

#. type: textblock
#: ../v2v/virt-v2v.pod:159
msgid "See I<--network> below."
msgstr "Див. I<--network> нижче."

#. type: textblock
#: ../v2v/virt-v2v.pod:163
msgid ""
"Debug garbage collection and memory allocation.  This is only useful when "
"debugging memory problems in virt-v2v or the OCaml libguestfs bindings."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:167
msgid "B<--debug-overlays>"
msgstr "B<--debug-overlays>"

#. type: textblock
#: ../v2v/virt-v2v.pod:169
msgid ""
"Save the overlay file(s) created during conversion.  This option is only "
"used for debugging virt-v2v and may be removed in a future version."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:173
msgid "B<-i disk>"
msgstr "B<-i disk>"

#. type: textblock
#: ../v2v/virt-v2v.pod:175
msgid "Set the input method to I<disk>."
msgstr "Встановити метод введення I<disk>."

#. type: textblock
#: ../v2v/virt-v2v.pod:177
msgid ""
"In this mode you can read a virtual machine disk image with no metadata.  "
"virt-v2v tries to guess the best default metadata.  This is usually adequate "
"but you can get finer control (eg. of memory and vCPUs) by using I<-i "
"libvirtxml> instead.  Only guests that use a single disk can be imported "
"this way."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:183
msgid "B<-i libvirt>"
msgstr "B<-i libvirt>"

#. type: textblock
#: ../v2v/virt-v2v.pod:185
msgid "Set the input method to I<libvirt>.  This is the default."
msgstr "Встановити метод введення I<libvirt>. Цей метод є типовим."

#. type: textblock
#: ../v2v/virt-v2v.pod:187
msgid ""
"In this mode you have to specify a libvirt guest name or UUID on the command "
"line.  You may also specify a libvirt connection URI (see I<-ic>)."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:191
msgid "B<-i libvirtxml>"
msgstr "B<-i libvirtxml>"

#. type: textblock
#: ../v2v/virt-v2v.pod:193
msgid "Set the input method to I<libvirtxml>."
msgstr "Встановити метод введення I<libvirtxml>."

#. type: textblock
#: ../v2v/virt-v2v.pod:195
msgid ""
"In this mode you have to pass a libvirt XML file on the command line.  This "
"file is read in order to get metadata about the source guest (such as its "
"name, amount of memory), and also to locate the input disks.  See L</MINIMAL "
"XML FOR -i libvirtxml OPTION> below."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:200
msgid "B<-i local>"
msgstr "B<-i local>"

#. type: textblock
#: ../v2v/virt-v2v.pod:202
msgid "This is the same as I<-i disk>."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:204
msgid "B<-i ova>"
msgstr "B<-i ova>"

#. type: textblock
#: ../v2v/virt-v2v.pod:206
msgid "Set the input method to I<ova>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:208
msgid ""
"In this mode you can read a VMware ova file.  Virt-v2v will read the ova "
"manifest file and check the vmdk volumes for validity (checksums)  as well "
"as analyzing the ovf file, and then convert the guest."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:212
msgid "B<-ic> libvirtURI"
msgstr "B<-ic> адреса_libvirt"

#. type: textblock
#: ../v2v/virt-v2v.pod:214
msgid ""
"Specify a libvirt connection URI to use when reading the guest.  This is "
"only used when S<I<-i libvirt>>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:217
msgid ""
"Only local libvirt connections, ESX connections, or RHEL 5 Xen remote "
"connections can be used.  Other remote libvirt connections will not work in "
"general."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:221
msgid ""
"See also L</INPUT FROM VMWARE VCENTER SERVER>, L</INPUT FROM RHEL 5 XEN> "
"below."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:224
msgid "B<-if> format"
msgstr "B<-if> формат"

#. type: textblock
#: ../v2v/virt-v2v.pod:226
msgid ""
"For I<-i disk> only, this specifies the format of the input disk image.  For "
"other input methods you should specify the input format in the metadata."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:236
msgid "B<-n> in:out"
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:238
msgid "B<-n> out"
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:240
msgid "B<--network> in:out"
msgstr "B<--network> введення:виведення"

#. type: =item
#: ../v2v/virt-v2v.pod:242
msgid "B<--network> out"
msgstr "B<--network> виведення"

#. type: =item
#: ../v2v/virt-v2v.pod:244
msgid "B<-b> in:out"
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:246
msgid "B<-b> out"
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:248
msgid "B<--bridge> in:out"
msgstr "B<--bridge> введення:виведення"

#. type: =item
#: ../v2v/virt-v2v.pod:250
msgid "B<--bridge> out"
msgstr "B<--bridge> виведення"

#. type: textblock
#: ../v2v/virt-v2v.pod:252
msgid ""
"Map network (or bridge) called C<in> to network (or bridge) called C<out>.  "
"If no C<in:> prefix is given, all other networks (or bridges)  are mapped to "
"C<out>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:256
msgid "See L</NETWORKS AND BRIDGES> below."
msgstr "див. L</МЕРЕЖІ І МІСТКИ> нижче."

#. type: =item
#: ../v2v/virt-v2v.pod:258
msgid "B<--no-copy>"
msgstr "B<--no-copy>"

#. type: textblock
#: ../v2v/virt-v2v.pod:260
msgid ""
"Don't copy the disks.  Instead, conversion is performed (and thrown away), "
"and metadata is written, but no disks are created.  See also discussion of "
"S<I<-o null>> below."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:264
msgid ""
"This is useful in two cases: Either you want to test if conversion is likely "
"to succeed, without the long copying process.  Or you are only interested in "
"looking at the metadata."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:268
msgid ""
"This option is not compatible with I<-o libvirt> since it would create a "
"faulty guest (one with no disks)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:271
msgid "This option is not compatible with I<-o glance> for technical reasons."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:273
msgid "B<--no-trim all>"
msgstr "B<--no-trim all>"

#. type: =item
#: ../v2v/virt-v2v.pod:275
msgid "B<--no-trim> mp[,mp...]"
msgstr "B<--no-trim> mp[,mp...]"

#. type: textblock
#: ../v2v/virt-v2v.pod:277
msgid ""
"By default virt-v2v runs L<fstrim(8)> to reduce the amount of data that "
"needs to be copied.  This is known to break some buggy bootloaders causing "
"boot failures after conversion (see for example L<https://bugzilla.redhat."
"com/show_bug.cgi?id=1141145#c27>)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:282
msgid ""
"You can use I<--no-trim all> to disable all trimming.  Note this will "
"greatly increase the amount of data that has to be copied and can make virt-"
"v2v run much more slowly."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:286
msgid ""
"You can also disable trimming on selected filesystems only (specified by a "
"comma-separated list of their mount point(s) in the guest).  Typically you "
"would use I<--no-trim /boot> to work around the grub bug mentioned above."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:291
msgid ""
"You can also disable trimming on partitions using the libguestfs naming "
"scheme for devices, eg: I<--no-trim /dev/sdb2> means do not trim the second "
"partition on the second block device.  Use L<virt-filesystems(1)> to list "
"filesystem names in a guest."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:296
msgid "B<-o disk>"
msgstr "B<-o disk>"

#. type: textblock
#: ../v2v/virt-v2v.pod:298
msgid "This is the same as I<-o local>."
msgstr "Те саме, що і I<-o local>."

#. type: =item
#: ../v2v/virt-v2v.pod:300
msgid "B<-o glance>"
msgstr "B<-o glance>"

#. type: textblock
#: ../v2v/virt-v2v.pod:302
msgid ""
"Set the output method to OpenStack Glance.  In this mode the converted guest "
"is uploaded to Glance.  You can control the image name by setting the I<-on> "
"option."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:306
msgid "B<-o libvirt>"
msgstr "B<-o libvirt>"

#. type: textblock
#: ../v2v/virt-v2v.pod:308
msgid "Set the output method to I<libvirt>.  This is the default."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:310
msgid ""
"In this mode, the converted guest is created as a libvirt guest.  You may "
"also specify a libvirt connection URI (see I<-oc>)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:313
msgid "See L</OUTPUT TO LIBVIRT> below."
msgstr "Див. L</ВИВЕДЕННЯ ДО LIBVIRT> нижче."

#. type: =item
#: ../v2v/virt-v2v.pod:315
msgid "B<-o local>"
msgstr "B<-o local>"

#. type: textblock
#: ../v2v/virt-v2v.pod:317
msgid "Set the output method to I<local>."
msgstr "Встановити метод виведення до I<local>."

#. type: textblock
#: ../v2v/virt-v2v.pod:319
msgid ""
"In this mode, the converted guest is written to a local directory specified "
"by I<-os /dir> (the directory must exist).  The converted guest's disks are "
"written as:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:323
#, no-wrap
msgid ""
" /dir/name-sda\n"
" /dir/name-sdb\n"
" [etc]\n"
"\n"
msgstr ""
" /dir/name-sda\n"
" /dir/name-sdb\n"
" [тощо]\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:327
msgid "and a libvirt XML file is created containing guest metadata:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:329
#, no-wrap
msgid ""
" /dir/name.xml\n"
"\n"
msgstr ""
" /каталог/назва.xml\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:331
msgid "where C<name> is the guest name."
msgstr "де C<назва> — назва гостьової системи."

#. type: =item
#: ../v2v/virt-v2v.pod:333
msgid "B<-o null>"
msgstr "B<-o null>"

#. type: textblock
#: ../v2v/virt-v2v.pod:335
msgid "Set the output method to I<null>."
msgstr "Встановити метод виведення до I<null>."

#. type: textblock
#: ../v2v/virt-v2v.pod:337
msgid ""
"The guest is converted and copied (unless you also specify I<--no-copy>), "
"but the results are thrown away and no metadata is written."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:341
msgid "B<-o ovirt>"
msgstr "B<-o ovirt>"

#. type: textblock
#: ../v2v/virt-v2v.pod:343
msgid "This is the same as I<-o rhev>."
msgstr "Це те саме, що і I<-o rhev>."

#. type: =item
#: ../v2v/virt-v2v.pod:345
msgid "B<-o qemu>"
msgstr "B<-o qemu>"

#. type: textblock
#: ../v2v/virt-v2v.pod:347
msgid "Set the output method to I<qemu>."
msgstr "Встановити метод виведення до I<qemu>."

#. type: textblock
#: ../v2v/virt-v2v.pod:349
msgid ""
"This is similar to I<-o local>, except that a shell script is written which "
"you can use to boot the guest in qemu.  The converted disks and shell script "
"are written to the directory specified by I<-os>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:353
msgid ""
"When using this output mode, you can also specify the I<--qemu-boot> option "
"which boots the guest under qemu immediately."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:356
msgid "B<-o rhev>"
msgstr "B<-o rhev>"

#. type: textblock
#: ../v2v/virt-v2v.pod:358
msgid "Set the output method to I<rhev>."
msgstr "Встановити метод виведення до I<rhev>."

#. type: textblock
#: ../v2v/virt-v2v.pod:360
msgid ""
"The converted guest is written to a RHEV Export Storage Domain.  The I<-os> "
"parameter must also be used to specify the location of the Export Storage "
"Domain.  Note this does not actually import the guest into RHEV.  You have "
"to do that manually later using the UI."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:365
msgid "See L</OUTPUT TO RHEV> below."
msgstr "Див. L</ВИВЕДЕННЯ ДО RHEV> нижче."

#. type: =item
#: ../v2v/virt-v2v.pod:367
msgid "B<-o vdsm>"
msgstr "B<-o vdsm>"

#. type: textblock
#: ../v2v/virt-v2v.pod:369
msgid "Set the output method to I<vdsm>."
msgstr "Встановити метод виведення до I<vdsm>."

#. type: textblock
#: ../v2v/virt-v2v.pod:371
msgid ""
"This mode is similar to I<-o rhev> but is only used by RHEV VDSM when it "
"runs virt-v2v under VDSM control."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:374
msgid "B<-oa sparse>"
msgstr "B<-oa sparse>"

#. type: =item
#: ../v2v/virt-v2v.pod:376
msgid "B<-oa preallocated>"
msgstr "B<-oa preallocated>"

#. type: textblock
#: ../v2v/virt-v2v.pod:378
msgid "Set the output file allocation mode.  The default is C<sparse>."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:380
msgid "B<-oc> libvirtURI"
msgstr "B<-oc> адреса_libvirt"

#. type: textblock
#: ../v2v/virt-v2v.pod:382
msgid ""
"Specify a libvirt connection to use when writing the converted guest.  This "
"is only used when S<I<-o libvirt>>.  See L</OUTPUT TO LIBVIRT> below."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:385
msgid ""
"Only local libvirt connections can be used.  Remote libvirt connections will "
"not work."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:388
msgid "B<-of> format"
msgstr "B<-of> формат"

#. type: textblock
#: ../v2v/virt-v2v.pod:390
msgid "When converting the guest, convert the disks to the given format."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:392
msgid "If not specified, then the input format is used."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:394
msgid "B<-on> name"
msgstr "B<-on> назва"

#. type: textblock
#: ../v2v/virt-v2v.pod:396
msgid ""
"Rename the guest when converting it.  If this option is not used then the "
"output name is the same as the input name."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:399
msgid "B<-os> storage"
msgstr "B<-os> сховище"

#. type: textblock
#: ../v2v/virt-v2v.pod:401
msgid "The location of the storage for the converted guest."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:403
msgid ""
"For I<-o libvirt>, this is a libvirt directory pool (see S<C<virsh pool-"
"list>>) or pool UUID."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:406
msgid ""
"For I<-o local> and I<-o qemu>, this is a directory name.  The directory "
"must exist."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:409
msgid ""
"For I<-o rhev>, this can be an NFS path of the Export Storage Domain of the "
"form C<E<lt>hostE<gt>:E<lt>pathE<gt>>, eg:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:412
#, no-wrap
msgid ""
" rhev-storage.example.com:/rhev/export\n"
"\n"
msgstr ""
" rhev-storage.example.com:/rhev/export\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:414
msgid ""
"The NFS export must be mountable and writable by the user and host running "
"virt-v2v, since the virt-v2v program has to actually mount it when it runs.  "
"So you probably have to run virt-v2v as C<root>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:418
msgid ""
"B<Or:> You can mount the Export Storage Domain yourself, and point I<-os> to "
"the mountpoint.  Note that virt-v2v will still need to write to this remote "
"directory, so virt-v2v will still need to run as C<root>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:423
msgid ""
"You will get an error if virt-v2v is unable to mount/write to the Export "
"Storage Domain."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:426
msgid "B<--print-source>"
msgstr "B<--print-source>"

#. type: textblock
#: ../v2v/virt-v2v.pod:428
msgid ""
"Print information about the source guest and stop.  This option is useful "
"when you are setting up network and bridge maps.  See L</NETWORKS AND "
"BRIDGES>."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:432
msgid "B<--qemu-boot>"
msgstr "B<--qemu-boot>"

#. type: textblock
#: ../v2v/virt-v2v.pod:434
msgid ""
"When using I<-o qemu> only, this boots the guest immediately after virt-v2v "
"finishes."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:443
msgid "B<--root ask>"
msgstr "B<--root ask>"

#. type: =item
#: ../v2v/virt-v2v.pod:445
msgid "B<--root single>"
msgstr "B<--root single>"

#. type: =item
#: ../v2v/virt-v2v.pod:447
msgid "B<--root first>"
msgstr "B<--root first>"

#. type: =item
#: ../v2v/virt-v2v.pod:449
msgid "B<--root> /dev/sdX"
msgstr "B<--root> /dev/sdX"

#. type: =item
#: ../v2v/virt-v2v.pod:451
msgid "B<--root> /dev/VG/LV"
msgstr "B<--root> /dev/VG/LV"

#. type: textblock
#: ../v2v/virt-v2v.pod:453
msgid "Choose the root filesystem to be converted."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:455
msgid ""
"In the case where the virtual machine is dual-boot or multi-boot, or where "
"the VM has other filesystems that look like operating systems, this option "
"can be used to select the root filesystem (a.k.a. C<C:> drive or C</>) of "
"the operating system that is to be converted.  The Windows Recovery Console, "
"certain attached DVD drives, and bugs in libguestfs inspection heuristics, "
"can make a guest look like a multi-boot operating system."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:463
msgid ""
"The default in virt-v2v E<le> 0.7.1 was S<I<--root single>>, which causes "
"virt-v2v to die if a multi-boot operating system is found."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:466
msgid ""
"Since virt-v2v E<ge> 0.7.2 the default is now S<I<--root ask>>: If the VM is "
"found to be multi-boot, then virt-v2v will stop and list the possible root "
"filesystems and ask the user which to use.  This requires that virt-v2v is "
"run interactively."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:471
msgid ""
"S<I<--root first>> means to choose the first root device in the case of a "
"multi-boot operating system.  Since this is a heuristic, it may sometimes "
"choose the wrong one."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:475
msgid ""
"You can also name a specific root device, eg. S<I<--root /dev/sda2>> would "
"mean to use the second partition on the first hard drive.  If the named root "
"device does not exist or was not detected as a root device, then virt-v2v "
"will fail."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:480
msgid ""
"Note that there is a bug in grub which prevents it from successfully booting "
"a multiboot system if VirtIO is enabled.  Grub is only able to boot an "
"operating system from the first VirtIO disk.  Specifically, C</boot> must be "
"on the first VirtIO disk, and it cannot chainload an OS which is not in the "
"first VirtIO disk."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:486
msgid "B<--vdsm-image-uuid> UUID"
msgstr "B<--vdsm-image-uuid> UUID"

#. type: =item
#: ../v2v/virt-v2v.pod:488
msgid "B<--vdsm-vol-uuid> UUID"
msgstr "B<--vdsm-vol-uuid> UUID"

#. type: =item
#: ../v2v/virt-v2v.pod:490
msgid "B<--vdsm-vm-uuid> UUID"
msgstr "B<--vdsm-vm-uuid> UUID"

#. type: textblock
#: ../v2v/virt-v2v.pod:492
msgid ""
"Normally the RHEV output mode chooses random UUIDs for the target guest.  "
"However VDSM needs to control the UUIDs and passes these parameters when "
"virt-v2v runs under VDSM control.  The parameters control:"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:501
msgid ""
"the image directory of each guest disk (I<--vdsm-image-uuid>) (this option "
"is passed once for each guest disk)"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:506
msgid ""
"UUIDs for each guest disk (I<--vdsm-vol-uuid>) (this option is passed once "
"for each guest disk)"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:511
msgid "the VM and OVF file (I<--vdsm-vm-uuid>)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:515
msgid ""
"The format of UUIDs is: C<12345678-1234-1234-1234-123456789abc> (each hex "
"digit can be C<0-9> or C<a-f>), conforming to S<OSF DCE 1.1>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:518
msgid "These options can only be used with I<-o vdsm>."
msgstr "Ці параметри можна використовувати лише з I<-o vdsm>."

#. type: =item
#: ../v2v/virt-v2v.pod:532
msgid "B<--vmtype desktop>"
msgstr "B<--vmtype desktop>"

#. type: =item
#: ../v2v/virt-v2v.pod:534
msgid "B<--vmtype server>"
msgstr "B<--vmtype server>"

#. type: textblock
#: ../v2v/virt-v2v.pod:536
msgid ""
"For the I<-o rhev> or I<-o vdsm> targets only, specify the type of guest.  "
"You can set this to C<desktop> or C<server>.  If the option is not given, "
"then a suitable default is chosen based on the detected guest operating "
"system."
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:547
msgid "XEN PARAVIRTUALIZED GUESTS"
msgstr "ПАРАВІРТУАЛІЗОВАНІ ГОСТЬОВІ СИСТЕМИ XEN"

#. type: textblock
#: ../v2v/virt-v2v.pod:549
msgid ""
"Older versions of virt-v2v could turn a Xen paravirtualized (PV) guest into "
"a KVM guest by installing a new kernel.  This version of virt-v2v does "
"I<not> attempt to install any new kernels.  Instead it will give you an "
"error if there are I<only> Xen PV kernels available."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:554
msgid ""
"Therefore before conversion you should check that a regular kernel is "
"installed.  For some older Linux distributions, this means installing a "
"kernel from the table below:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:558
#, no-wrap
msgid ""
" RHEL 3         (Does not apply, as there was no Xen PV kernel)\n"
" \n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:560
#, no-wrap
msgid ""
" RHEL 4         i686 with > 10GB of RAM: install 'kernel-hugemem'\n"
"                i686 SMP: install 'kernel-smp'\n"
"                other i686: install 'kernel'\n"
"                x86-64 SMP with > 8 CPUs: install 'kernel-largesmp'\n"
"                x86-64 SMP: install 'kernel-smp'\n"
"                other x86-64: install 'kernel'\n"
" \n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:567
#, no-wrap
msgid ""
" RHEL 5         i686: install 'kernel-PAE'\n"
"                x86-64: install 'kernel'\n"
" \n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:570
#, no-wrap
msgid ""
" SLES 10        i586 with > 10GB of RAM: install 'kernel-bigsmp'\n"
"                i586 SMP: install 'kernel-smp'\n"
"                other i586: install 'kernel-default'\n"
"                x86-64 SMP: install 'kernel-smp'\n"
"                other x86-64: install 'kernel-default'\n"
" \n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:576
#, no-wrap
msgid ""
" SLES 11+       i586: install 'kernel-pae'\n"
"                x86-64: install 'kernel-default'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:579
#, no-wrap
msgid ""
" Windows        (Does not apply, as there is no Xen PV Windows kernel)\n"
"\n"
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:581
msgid "ENABLING VIRTIO"
msgstr "ВМИКАННЯ VIRTIO"

#. type: textblock
#: ../v2v/virt-v2v.pod:583
msgid ""
"\"Virtio\" is the name for a set of drivers which make disk (block device), "
"network and other guest operations work much faster on KVM."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:586
msgid ""
"Older versions of virt-v2v could install these drivers for certain Linux "
"guests.  This version of virt-v2v does I<not> attempt to install new Linux "
"kernels or drivers, but will warn you if they are not installed already."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:591
msgid ""
"In order to enable virtio, and hence improve performance of the guest after "
"conversion, you should ensure that the B<minimum> versions of packages are "
"installed I<before> conversion, by consulting the table below."
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:596
#, no-wrap
msgid ""
" RHEL 3         No virtio drivers are available\n"
" \n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:598
#, no-wrap
msgid ""
" RHEL 4         kernel >= 2.5.9-89.EL\n"
" \n"
msgstr ""
" RHEL 4         ядро >= 2.5.9-89.EL\n"
" \n"

#. type: verbatim
#: ../v2v/virt-v2v.pod:600
#, no-wrap
msgid ""
" RHEL 5         kernel >= 2.6.18-128.el5\n"
"                lvm2 >= 2.02.40-6.el5\n"
"                selinux-policy-targeted >= 2.4.6-203.el5\n"
" \n"
msgstr ""
" RHEL 5         ядро >= 2.6.18-128.el5\n"
"                lvm2 >= 2.02.40-6.el5\n"
"                selinux-policy-targeted >= 2.4.6-203.el5\n"
" \n"

#. type: verbatim
#: ../v2v/virt-v2v.pod:604
#, no-wrap
msgid ""
" RHEL 6+        All versions support virtio\n"
" \n"
msgstr ""
" RHEL 6+        усі версії підтримують virtio\n"
" \n"

#. type: verbatim
#: ../v2v/virt-v2v.pod:606
#, no-wrap
msgid ""
" Fedora         All versions support virtio\n"
" \n"
msgstr ""
" Fedora         усі версії підтримують virtio\n"
" \n"

#. type: verbatim
#: ../v2v/virt-v2v.pod:608
#, no-wrap
msgid ""
" SLES 11+       All versions support virtio\n"
" \n"
msgstr ""
" SLES 11+       усі версії підтримують virtio\n"
" \n"

#. type: verbatim
#: ../v2v/virt-v2v.pod:610
#, no-wrap
msgid ""
" SLES 10        kernel >= 2.6.16.60-0.85.1\n"
" \n"
msgstr ""
" SLES 10        ядро >= 2.6.16.60-0.85.1\n"
" \n"

#. type: verbatim
#: ../v2v/virt-v2v.pod:612
#, no-wrap
msgid ""
" OpenSUSE 11+   All versions support virtio\n"
" \n"
msgstr ""
" OpenSUSE 11+   усі версії підтримують virtio\n"
" \n"

#. type: verbatim
#: ../v2v/virt-v2v.pod:614
#, no-wrap
msgid ""
" OpenSUSE 10    kernel >= 2.6.25.5-1.1\n"
"\n"
msgstr ""
" OpenSUSE 10    ядро >= 2.6.25.5-1.1\n"
"\n"

#. type: verbatim
#: ../v2v/virt-v2v.pod:616
#, no-wrap
msgid ""
" Windows        Drivers are installed from /usr/share/virtio-win\n"
"                if present\n"
"\n"
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:619
msgid "NETWORKS AND BRIDGES"
msgstr "МЕРЕЖІ І МІСТКИ"

#. type: textblock
#: ../v2v/virt-v2v.pod:621
msgid ""
"Guests are usually connected to one or more networks, and when converted to "
"the target hypervisor you usually want to reconnect those networks at the "
"destination.  The options I<--network> and I<--bridge> allow you to do that."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:626
msgid ""
"If you are unsure of what networks and bridges are in use on the source "
"hypervisor, then you can examine the source metadata (libvirt XML, vCenter "
"information, etc.).  Or you can run virt-v2v with the I<--print-source> "
"option which causes virt-v2v to print out the information it has about the "
"guest on the source and then exit."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:632
msgid ""
"In the I<--print-source> output you will see a section showing the guest's "
"Network Interface Cards (NICs):"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:635
#, no-wrap
msgid ""
" $ virt-v2v [-i ...] --print-source name\n"
" [...]\n"
" NICs:\n"
"     Network \"default\" mac: 52:54:00:d0:cf:0e\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:640
msgid ""
"This is typical of a libvirt guest: It has a single network interface "
"connected to a network called C<default>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:643
msgid ""
"To map a specific network to a target network, for example C<default> on the "
"source to C<rhevm> on the target, use:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:646
#, no-wrap
msgid ""
" virt-v2v [...] --network default:rhevm\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:648
msgid "To map every network to a target network, use:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:650
#, no-wrap
msgid ""
" virt-v2v [...] --network rhevm\n"
"\n"
msgstr ""
" virt-v2v [...] --network rhevm\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:652
msgid ""
"Bridges are handled in the same way, but you have to use the I<--bridge> "
"option instead.  For example:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:655
#, no-wrap
msgid ""
" $ virt-v2v [-i ...] --print-source name\n"
" [...]\n"
" NICs:\n"
"     Bridge \"br0\"\n"
" \n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:660
#, no-wrap
msgid ""
" $ virt-v2v [...] --bridge br0:targetbr\n"
"\n"
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:662
msgid "INPUT FROM VMWARE VCENTER SERVER"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:664
msgid "Virt-v2v is able to import guests from VMware vCenter Server."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:666
msgid ""
"Note that virt-v2v B<cannot> import guests directly from an ESXi hypervisor."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:669
msgid ""
"Virt-v2v uses libvirt for access to vCenter, and therefore the input mode "
"should be I<-i libvirt>.  As this is the default, you don't need to specify "
"it on the command line."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:673
msgid "ESX: REMOVE VMWARE TOOLS FROM WINDOWS GUESTS"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:675
msgid ""
"For Windows guests, you should remove VMware tools before conversion.  "
"Although this is not strictly necessary, and the guest will still be able to "
"run, if you don't do this then the converted guest will complain on every "
"boot.  The tools cannot be removed after conversion because the uninstaller "
"checks if it is running on VMware and refuses to start (which is also the "
"reason that virt-v2v cannot remove them)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:682
msgid ""
"This is not necessary for Linux guests, as virt-v2v is able to remove VMware "
"tools."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:685
msgid "ESX: VCENTER URI"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:687
msgid "The libvirt URI of a vCenter server looks something like this:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:689
#, no-wrap
msgid ""
" vpx://user@server/Datacenter/esxi\n"
"\n"
msgstr ""
" vpx://користувач@сервер/Datacenter/esxi\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:691
msgid "where:"
msgstr "де"

#. type: =item
#: ../v2v/virt-v2v.pod:695
msgid "C<user@>"
msgstr "C<користувач@>"

#. type: textblock
#: ../v2v/virt-v2v.pod:697
msgid "is the (optional, but recommended) user to connect as"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:701
msgid "is the vCenter Server (I<not> hypervisor)"
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:703
msgid "C<Datacenter>"
msgstr "C<Datacenter>"

#. type: textblock
#: ../v2v/virt-v2v.pod:705
msgid "is the name of the datacenter"
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:707
msgid "C<esxi>"
msgstr "C<esxi>"

#. type: textblock
#: ../v2v/virt-v2v.pod:709
msgid "is the name of the ESXi hypervisor running the guest."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:713
msgid ""
"If the VMware deployment is using clusters and/or folders, then these may "
"need to be added to the URI, eg:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:716
#, no-wrap
msgid ""
" vpx://user@server/Datacenter/cluster1/esxi\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:718
msgid ""
"For full details of libvirt URIs, see: L<http://libvirt.org/drvesx.html>"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:720
msgid "Typical errors from libvirt / virsh when the URI is wrong include:"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:726
msgid "Could not find datacenter specified in [...]"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:730
msgid "Could not find compute resource specified in [...]"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:734
msgid "Path [...] does not specify a compute resource"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:738
msgid "Path [...] does not specify a host system"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:742
msgid "Could not find host system specified in [...]"
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:746
msgid "ESX: TEST LIBVIRT CONNECTION TO VCENTER"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:748
msgid ""
"Use the L<virsh(1)> command to list the guests on the vCenter Server like "
"this:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:751
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi' list --all\n"
" Enter root's password for vcenter.example.com: ***\n"
" \n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:754
#, no-wrap
msgid ""
"  Id    Name                           State\n"
" ----------------------------------------------------\n"
"  -     Fedora 20                      shut off\n"
"  -     Windows 2003                   shut off\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:759
msgid ""
"If you get an error \"Peer certificate cannot be authenticated with given CA "
"certificates\" or similar, then you can either import the ESX host's "
"certificate, or bypass signature verification by adding the C<?no_verify=1> "
"flag:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:764
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1' list --all\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:766 ../v2v/virt-v2v.pod:834
msgid ""
"You should also try dumping the metadata from any guest on your server, like "
"this:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:769
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi' dumpxml \"Windows 2003\"\n"
" <domain type='vmware'>\n"
"   <name>Windows 2003</name>\n"
"   [...]\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:775
msgid ""
"B<If the above commands do not work, then virt-v2v is not going to work "
"either>.  Fix your libvirt configuration and/or your VMware vCenter Server "
"before continuing."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:779
msgid "ESX: IMPORTING A GUEST"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:781
msgid "To import a particular guest from vCenter Server, do:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:783
#, no-wrap
msgid ""
" $ virt-v2v -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1' \\\n"
"   \"Windows 2003\" \\\n"
"   -o local -os /var/tmp\n"
"\n"
msgstr ""
" $ virt-v2v -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1' \\\n"
"   \"Windows 2003\" \\\n"
"   -o local -os /var/tmp\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:787
msgid ""
"where C<Windows 2003> is the name of the guest (which must be shut down)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:790
msgid ""
"Note that you may be asked for the vCenter password I<twice>.  This happens "
"once because libvirt needs it, and a second time because virt-v2v itself "
"connects directly to the server."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:794 ../v2v/virt-v2v.pod:858
msgid ""
"In this case the output flags are set to write the converted guest to a "
"temporary directory as this is just an example, but you can also write to "
"libvirt or any other supported target."
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:798
msgid "INPUT FROM RHEL 5 XEN"
msgstr "ВВЕДЕННЯ З RHEL 5 XEN"

#. type: textblock
#: ../v2v/virt-v2v.pod:800
msgid "Virt-v2v is able to import Xen guests from RHEL 5 Xen hosts."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:802
msgid ""
"Virt-v2v uses libvirt for access to the remote Xen host, and therefore the "
"input mode should be I<-i libvirt>.  As this is the default, you don't need "
"to specify it on the command line."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:806
msgid "XEN: SET UP SSH-AGENT ACCESS TO XEN HOST"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:808
msgid ""
"Currently you must enable passwordless SSH access to the remote Xen host "
"from the virt-v2v conversion server."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:811
msgid ""
"You must also use ssh-agent, and add your ssh public key to C</root/.ssh/"
"authorized_keys> (on the Xen host)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:814
msgid ""
"After doing this, you should check that passwordless access works from the "
"virt-v2v server to the Xen host.  For example:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:817
#, no-wrap
msgid ""
" $ ssh root@xen.example.com\n"
" [ logs straight into the shell, no password is requested ]\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:820
msgid ""
"Note that password-interactive and Kerberos access are B<not> supported.  "
"You B<have> to set up ssh access using ssh-agent and authorized_keys."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:824
msgid "XEN: TEST LIBVIRT CONNECTION TO REMOTE XEN HOST"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:826
msgid "Use the L<virsh(1)> command to list the guests on the remote Xen host:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:828
#, no-wrap
msgid ""
" $ virsh -c xen+ssh://root@xen.example.com list --all\n"
"  Id    Name                           State\n"
" ----------------------------------------------------\n"
"  0     Domain-0                       running\n"
"  -     rhel49-x86_64-pv               shut off\n"
"\n"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:837
#, no-wrap
msgid ""
" $ virsh -c xen+ssh://root@xen.example.com dumpxml rhel49-x86_64-pv\n"
" <domain type='xen'>\n"
"   <name>rhel49-x86_64-pv</name>\n"
"   [...]\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:843
msgid ""
"B<If the above commands do not work, then virt-v2v is not going to work "
"either>.  Fix your libvirt configuration or the remote server before "
"continuing."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:847
msgid "XEN: IMPORTING A GUEST"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:849
msgid "To import a particular guest from a Xen server, do:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:851
#, no-wrap
msgid ""
" $ virt-v2v -ic 'xen+ssh://root@xen.example.com' \\\n"
"   rhel49-x86_64-pv \\\n"
"   -o local -os /var/tmp\n"
"\n"
msgstr ""
" $ virt-v2v -ic 'xen+ssh://root@xen.example.com' \\\n"
"   rhel49-x86_64-pv \\\n"
"   -o local -os /var/tmp\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:855
msgid ""
"where C<rhel49-x86_64-pv> is the name of the guest (which must be shut down)."
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:862
msgid "OUTPUT TO LIBVIRT"
msgstr "ВИВЕДЕННЯ ДО LIBVIRT"

#. type: textblock
#: ../v2v/virt-v2v.pod:864
msgid ""
"The I<-o libvirt> option lets you upload the converted guest to a libvirt-"
"managed host.  There are several limitations:"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:871
msgid ""
"You can only use a local libvirt connection [see below for how to workaround "
"this]."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:876
msgid ""
"The I<-os pool> option must specify a directory pool, not anything more "
"exotic such as iSCSI [but see below]."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:881
msgid "You can only upload to a KVM hypervisor."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:885
msgid ""
"B<To output to a remote libvirt instance and/or a non-directory storage "
"pool> you have to use the following workaround:"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:892
msgid ""
"Use virt-v2v in I<-o local> mode to convert the guest disks and metadata "
"into a local temporary directory:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:895
#, no-wrap
msgid ""
" virt-v2v [...] -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:897
msgid "This creates two (or more) files in C</var/tmp> called:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:899
#, no-wrap
msgid ""
" /var/tmp/NAME.xml     # the libvirt XML (metadata)\n"
" /var/tmp/NAME-sda     # the guest's first disk\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:902
msgid "(for C<NAME> substitute the guest's name)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:906
msgid "Upload the converted disk(s) into the storage pool called C<POOL>:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:908
#, no-wrap
msgid ""
" size=$(stat -c%s /var/tmp/NAME-sda)\n"
" virsh vol-create-as POOL NAME-sda $size --format raw\n"
" virsh vol-upload --pool POOL NAME-sda /var/tmp/NAME-sda\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:914
msgid ""
"Edit C</var/tmp/NAME.xml> to change C</var/tmp/NAME-sda> to the pool name.  "
"In other words, locate the following bit of XML:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:917
#, no-wrap
msgid ""
" <disk type='file' device='disk'>\n"
"   <driver name='qemu' type='raw' cache='none' />\n"
"   <source file='/var/tmp/NAME-sda' />\n"
"   <target dev='hda' bus='ide' />\n"
" </disk>\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:923
msgid ""
"and change two things: The C<type='file'> attribute must be changed to "
"C<type='volume'>, and the C<E<lt>sourceE<gt>> element must be changed to "
"include C<pool> and C<volume> attributes:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:927
#, no-wrap
msgid ""
" <disk type='volume' device='disk'>\n"
"   ...\n"
"   <source pool='POOL' volume='NAME-sda' />\n"
"   ...\n"
" </disk>\n"
"\n"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:935
msgid "Define the final guest in libvirt:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:937
#, no-wrap
msgid ""
" virsh define /var/tmp/NAME.xml\n"
"\n"
msgstr ""
" virsh define /var/tmp/NAME.xml\n"
"\n"

#. type: =head1
#: ../v2v/virt-v2v.pod:941
msgid "OUTPUT TO RHEV"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:943
msgid ""
"This section only applies to the I<-o rhev> output mode.  If you use virt-"
"v2v from the RHEV-M user interface, then behind the scenes the import is "
"managed by VDSM using the I<-o vdsm> output mode (which end users should not "
"try to use directly)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:948
msgid ""
"You have to specify I<-o rhev> and an I<-os> option that points to the RHEV-"
"M Export Storage Domain.  You can either specify the NFS server and "
"mountpoint, eg. S<C<-os rhev-storage:/rhev/export>>, or you can mount that "
"first and point to the directory where it is mounted, eg. S<C<-os /tmp/"
"mnt>>.  Be careful not to point to the Data Storage Domain by accident as "
"that will not work."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:955
msgid ""
"On successful completion virt-v2v will have written the new guest to the "
"Export Storage Domain, but it will not yet be ready to run.  It must be "
"imported into RHEV using the UI before it can be used."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:959
msgid ""
"In RHEV E<ge> 2.2 this is done from the Storage tab.  Select the export "
"domain the guest was written to.  A pane will appear underneath the storage "
"domain list displaying several tabs, one of which is \"VM Import\".  The "
"converted guest will be listed here.  Select the appropriate guest an click "
"\"Import\".  See the RHEV documentation for additional details."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:966
msgid ""
"If you export several guests, then you can import them all at the same time "
"through the UI."
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:969
msgid "RESOURCE REQUIREMENTS"
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:971
msgid "Network"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:973
msgid ""
"The most important resource for virt-v2v appears to be network bandwidth.  "
"Virt-v2v should be able to copy guest data at gigabit ethernet speeds or "
"greater."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:977
msgid ""
"Ensure that the network connections between servers (conversion server, NFS "
"server, vCenter, Xen) are as fast and as low latency as possible."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:981
msgid "Disk space"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:983
msgid ""
"Virt-v2v places potentially large temporary files in C<$TMPDIR> (which is C</"
"var/tmp> if you don't set it).  Using tmpfs is a bad idea."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:986
msgid ""
"For each guest disk, an overlay is stored temporarily.  This stores the "
"changes made during conversion, and is used as a cache.  The overlays are "
"not particularly large - tens or low hundreds of megabytes per disk is "
"typical.  In addition to the overlay(s), input and output methods may use "
"disk space, as outlined in the table below."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:994
msgid "I<-i ova>"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:996
msgid ""
"This temporarily places a full copy of the uncompressed source disks in C<"
"$TMPDIR>."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:999
msgid "I<-o glance>"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1001 ../v2v/virt-v2v.pod:1012
msgid "This temporarily places a full copy of the output disks in C<$TMPDIR>."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1003
msgid "I<-o local>"
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1005
msgid "I<-o qemu>"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1007
msgid ""
"You must ensure there is sufficient space in the output directory for the "
"converted guest."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1010
msgid "I<-o null>"
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:1016
msgid "VMware vCenter resources"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1018
msgid ""
"Copying from VMware vCenter is currently quite slow, but we believe this to "
"be an issue with VMware.  Ensuring the VMware ESXi hypervisor and vCenter "
"guest are running on fast hardware with plenty of memory should alleviate "
"this."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:1023
msgid "Compute power and RAM"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1025
msgid ""
"Virt-v2v is not especially compute or RAM intensive.  If you are running "
"many parallel conversions, then you may consider allocating one CPU core and "
"512 MB - 1 GB of RAM per running instance."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1029
msgid "Virt-v2v can be run in a virtual machine."
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:1031
msgid "POST-CONVERSION TASKS"
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:1033
msgid "Guest network configuration"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1035
msgid ""
"Virt-v2v cannot currently reconfigure a guest's network configuration.  If "
"the converted guest is not connected to the same subnet as the source, its "
"network configuration may have to be updated.  See also L<virt-customize(1)>."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:1040
msgid "Converting a Windows guest"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1042
msgid ""
"When converting a Windows guests, the conversion process is split into two "
"stages:"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1049
msgid "Offline conversion."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1053
msgid "First boot."
msgstr "Перше завантаження."

#. type: textblock
#: ../v2v/virt-v2v.pod:1057
msgid ""
"The guest will be bootable after the offline conversion stage, but will not "
"yet have all necessary drivers installed to work correctly.  These will be "
"installed automatically the first time the guest boots."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1061
msgid ""
"B<N.B.> Take care not to interrupt the automatic driver installation process "
"when logging in to the guest for the first time, as this may prevent the "
"guest from subsequently booting correctly."
msgstr ""

#. type: =head2
#: ../v2v/virt-v2v.pod:1065
msgid "Windows Recovery Console"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1067
msgid ""
"Virt-v2v does not support conversion of the Windows Recovery Console.  If a "
"guest has a recovery console installed and VirtIO was enabled during "
"conversion, attempting to boot the recovery console will result in a BSOD."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1072
msgid ""
"Windows XP x86 does not support the Windows Recovery Console on VirtIO "
"systems, so there is no resolution to this.  However, on Windows XP AMD64 "
"and Windows 2003 (x86 and AMD64), the recovery console can be re-installed "
"after conversion.  The re-installation procedure is the same as the initial "
"installation procedure.  It is not necessary to remove the recovery console "
"first.  Following re-installation, the recovery console will work as "
"intended."
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:1080
msgid "RUNNING VIRT-V2V AS ROOT OR NON-ROOT"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1082
msgid ""
"Nothing in virt-v2v inherently needs root access, and it will run just fine "
"as a non-root user.  However, certain external features may require either "
"root or a special user:"
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1088
msgid "Mounting the Export Storage Domain"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1090
msgid ""
"When using I<-o rhev -os server:/esd> virt-v2v has to have sufficient "
"privileges to NFS mount the Export Storage Domain from C<server>."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1093
msgid ""
"You can avoid needing root here by mounting it yourself before running virt-"
"v2v, and passing I<-os /mountpoint> instead, but first of all read the next "
"S<section ...>"
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1097
msgid "Writing to the Export Storage Domain as 36:36"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1099
msgid ""
"RHEV-M cannot read files and directories from the Export Storage Domain "
"unless they have UID:GID 36:36.  You will see VM import problems if the UID:"
"GID is not correct."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1103
msgid ""
"When you run virt-v2v I<-o rhev> as root, virt-v2v attempts to create files "
"and directories with the correct ownership.  If you run virt-v2v as non-"
"root, it will probably still work, but you will need to manually change "
"ownership after virt-v2v has finished."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1108
msgid "Writing to libvirt"
msgstr "Запис до libvirt"

#. type: textblock
#: ../v2v/virt-v2v.pod:1110
msgid ""
"When using I<-o libvirt>, you may need to run virt-v2v as root so that it "
"can write to the libvirt system instance (ie. C<qemu:///system>)  and to the "
"default location for disk images (usually C</var/lib/libvirt/images>)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1115
msgid ""
"You can avoid this by setting up libvirt connection authentication, see "
"L<http://libvirt.org/auth.html>.  Alternatively, use I<-oc qemu:///session>, "
"which will write to your per-user libvirt instance."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1120
msgid "Writing to Glance"
msgstr "Запис до Glance"

#. type: textblock
#: ../v2v/virt-v2v.pod:1122
msgid ""
"This does I<not> need root (in fact it probably won't work), but may require "
"either a special user and/or for you to source a script that sets "
"authentication environment variables.  Consult the Glance documentation."
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:1129
msgid "DEBUGGING RHEV-M IMPORT FAILURES"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1131
msgid ""
"When you export to the RHEV-M Export Storage Domain, and then import that "
"guest through the RHEV-M UI, you may encounter an import failure.  "
"Diagnosing these failures is infuriatingly difficult as the UI generally "
"hides the true reason for the failure."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1136
msgid ""
"There are two log files of interest.  The first is stored on the RHEV-M "
"server itself, and is called C</var/log/ovirt-engine/engine.log>"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1140
msgid ""
"The second file, which is the most useful, is found on the SPM host (SPM "
"stands for \"Storage Pool Manager\").  This is a RHEV node that is elected "
"to do all metadata modifications in the data center, such as image or "
"snapshot creation.  You can find out which host is the current SPM from the "
"\"Hosts\" tab \"Spm Status\" column.  Once you have located the SPM, log "
"into it and grab the file C</var/log/vdsm/vdsm.log> which will contain "
"detailed error messages from low-level commands."
msgstr ""

#. type: =head1
#: ../v2v/virt-v2v.pod:1149
msgid "MINIMAL XML FOR -i libvirtxml OPTION"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1151
msgid ""
"When using the I<-i libvirtxml> option, you have to supply some libvirt "
"XML.  Writing this from scratch is hard, so the template below is helpful."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1155
msgid ""
"B<Note this should only be used for testing and/or where you know what "
"you're doing!> If you have libvirt metadata for the guest, always use that "
"instead."
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:1159
#, no-wrap
msgid ""
" <domain type='kvm'>\n"
"   <name>NAME</name>\n"
"   <memory>1048576</memory>\n"
"   <vcpu>2</vcpu>\n"
"   <os>\n"
"     <type>hvm</type>\n"
"     <boot dev='hd'/>\n"
"   </os>\n"
"   <features>\n"
"     <acpi/>\n"
"     <apic/>\n"
"     <pae/>\n"
"   </features>\n"
"   <devices>\n"
"     <disk type='file' device='disk'>\n"
"       <driver name='qemu' type='raw'/>\n"
"       <source file='/path/to/disk/image'/>\n"
"       <target dev='hda' bus='ide'/>\n"
"     </disk>\n"
"     <interface type='network'>\n"
"       <mac address='52:54:00:01:02:03'/>\n"
"       <source network='default'/>\n"
"       <model type='rtl8139'/>\n"
"     </interface>\n"
"   </devices>\n"
" </domain>\n"
"\n"
msgstr ""
" <domain type='kvm'>\n"
"   <name>NAME</name>\n"
"   <memory>1048576</memory>\n"
"   <vcpu>2</vcpu>\n"
"   <os>\n"
"     <type>hvm</type>\n"
"     <boot dev='hd'/>\n"
"   </os>\n"
"   <features>\n"
"     <acpi/>\n"
"     <apic/>\n"
"     <pae/>\n"
"   </features>\n"
"   <devices>\n"
"     <disk type='file' device='disk'>\n"
"       <driver name='qemu' type='raw'/>\n"
"       <source file='/path/to/disk/image'/>\n"
"       <target dev='hda' bus='ide'/>\n"
"     </disk>\n"
"     <interface type='network'>\n"
"       <mac address='52:54:00:01:02:03'/>\n"
"       <source network='default'/>\n"
"       <model type='rtl8139'/>\n"
"     </interface>\n"
"   </devices>\n"
" </domain>\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:1188
msgid ""
"The I<--machine-readable> option can be used to make the output more machine "
"friendly, which is useful when calling virt-v2v from other programs, GUIs "
"etc."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1194
msgid ""
"Firstly use the option on its own to query the capabilities of the virt-v2v "
"binary.  Typical output looks like this:"
msgstr ""

#. type: verbatim
#: ../v2v/virt-v2v.pod:1197
#, no-wrap
msgid ""
" $ virt-v2v --machine-readable\n"
" virt-v2v\n"
" libguestfs-rewrite\n"
" input:disk\n"
" [...]\n"
" output:local\n"
" [...]\n"
" convert:enterprise-linux\n"
" convert:windows\n"
"\n"
msgstr ""
" $ virt-v2v --machine-readable\n"
" virt-v2v\n"
" libguestfs-rewrite\n"
" input:disk\n"
" [...]\n"
" output:local\n"
" [...]\n"
" convert:enterprise-linux\n"
" convert:windows\n"
"\n"

#. type: textblock
#: ../v2v/virt-v2v.pod:1210
msgid ""
"The C<input:> and C<output:> features refer to I<-i> and I<-o> (input and "
"output mode) options supported by this binary.  The C<convert:> features "
"refer to guest types that this binary knows how to convert."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1236
msgid ""
"The calling program should treat messages sent to stderr as error messages.  "
"In addition, virt-v2v exits with a non-zero status code if there was a fatal "
"error."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1242
msgid ""
"Virt-v2v E<le> 0.9.1 did not support the I<--machine-readable> option at "
"all.  The option was added when virt-v2v was rewritten in 2014."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1249
msgid "C</usr/share/virtio-win>"
msgstr "C</usr/share/virtio-win>"

#. type: textblock
#: ../v2v/virt-v2v.pod:1251 ../v2v/virt-v2v.pod:1293
msgid "(Optional)"
msgstr "(Необов’язково)"

#. type: textblock
#: ../v2v/virt-v2v.pod:1253
msgid ""
"If this directory is present, then virtio drivers for Windows guests will be "
"found from this directory and installed in the guest during conversion."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1263
msgid "C<TMPDIR>"
msgstr "C<TMPDIR>"

#. type: textblock
#: ../v2v/virt-v2v.pod:1268
msgid "See the L</Disk space> section above."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1272
msgid ""
"This can point to the directory containing data files used for Windows "
"conversion."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1284
msgid "(Required when doing conversions of Windows guests)"
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1286
msgid ""
"This is the RHSrvAny Windows binary, used to install a \"firstboot\" script "
"in the guest during conversion of Windows guests."
msgstr ""

#. type: =item
#: ../v2v/virt-v2v.pod:1291
msgid "C<rhev-apt.exe>"
msgstr "C<rhev-apt.exe>"

#. type: textblock
#: ../v2v/virt-v2v.pod:1295
msgid ""
"The RHEV Application Provisioning Tool (RHEV APT).  If this file is present, "
"then RHEV APT will be installed in the Windows guest during conversion.  "
"This tool is a guest agent which ensures that the virtio drivers remain up "
"to date when the guest is running on Red Hat Enterprise Virtualization "
"(RHEV)."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1301
msgid ""
"This file comes from Red Hat Enterprise Virtualization (RHEV), and is not "
"distributed with virt-v2v."
msgstr ""

#. type: textblock
#: ../v2v/virt-v2v.pod:1312
msgid ""
"L<virt-p2v(1)>, L<virt-customize(1)>, L<virt-df(1)>, L<virt-filesystems(1)>, "
"L<virt-sparsify(1)>, L<virt-sysprep(1)>, L<guestfs(3)>, L<guestfish(1)>, "
"L<qemu-img(1)>, L<fstrim(8)>, L<http://libguestfs.org/>."
msgstr ""
"L<virt-p2v(1)>, L<virt-customize(1)>, L<virt-df(1)>, L<virt-filesystems(1)>, "
"L<virt-sparsify(1)>, L<virt-sysprep(1)>, L<guestfs(3)>, L<guestfish(1)>, "
"L<qemu-img(1)>, L<fstrim(8)>, L<http://libguestfs.org/>."

#. type: textblock
#: ../v2v/virt-v2v.pod:1330
msgid "Mike Latimer"
msgstr "Mike Latimer"

#. type: textblock
#: ../v2v/virt-v2v.pod:1332
msgid "Shahar Havivi"
msgstr "Shahar Havivi"

#. type: textblock
#: ../v2v/virt-v2v.pod:1334
msgid "Tingting Zheng"
msgstr "Tingting Zheng"

#~ msgid "UPDATED TO a48ade569d485a114d29da358e4a2c36429b7ebb"
#~ msgstr "ОНОВЛЕНО ДО a48ade569d485a114d29da358e4a2c36429b7ebb"
