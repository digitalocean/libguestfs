.\" Automatically generated by Podwrapper::Man 1.36.5 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "virt-format 1"
.TH virt-format 1 "2017-06-22" "libguestfs-1.36.5" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
virt-format \- Erase and make a blank disk
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& virt\-format [\-\-options] \-a disk.img [\-a disk.img ...]
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
Virt-format takes an existing disk file (or it can be a host partition, \s-1LV\s0
etc), \fBerases all data on it\fR, and formats it as a blank disk.  It can
optionally create partition tables, empty filesystems, logical volumes and
more.
.PP
To create a disk containing data, you may be better to use
\&\fIvirt\-make\-fs\fR\|(1).  If you are creating a blank disk to use in
\&\fIguestfish\fR\|(1), you should instead use the guestfish \fI\-N\fR option.
.PP
Normal usage would be something like this:
.PP
.Vb 1
\& virt\-format \-a disk.qcow
.Ve
.PP
or this:
.PP
.Vb 1
\& virt\-format \-a /dev/VG/LV
.Ve
.PP
\&\fIdisk.qcow\fR or \fI/dev/VG/LV\fR must exist already.  \fBAny data on these disks
will be erased by these commands\fR.  These commands will create a single
empty partition covering the whole disk, with no filesystem inside it.
.PP
Additional parameters can be used to control the creation of partitions,
filesystems, etc.  The most commonly used options are:
.IP "\fB\-\-filesystem=[ext3|ntfs|vfat|...]\fR" 4
.IX Item "--filesystem=[ext3|ntfs|vfat|...]"
Create an empty filesystem (\f(CW\*(C`ext3\*(C'\fR, \f(CW\*(C`ntfs\*(C'\fR etc) inside the partition.
.IP "\fB\-\-lvm[=/dev/VG/LV]\fR" 4
.IX Item "--lvm[=/dev/VG/LV]"
Create a Linux \s-1LVM2\s0 logical volume on the disk.  When used with
\&\fI\-\-filesystem\fR, the filesystem is created inside the \s-1LV.\s0
.PP
For more information about these and other options, see \*(L"\s-1OPTIONS\*(R"\s0 below.
.PP
The format of the disk is normally auto-detected, but you can also force it
by using the \fI\-\-format\fR option (q.v.).  In situations where you do not
trust the existing content of the disk, then it is advisable to use this
option to avoid possible exploits.
.SH "ПАРАМЕТРИ"
.IX Header "ПАРАМЕТРИ"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Показати коротку довідку.
.IP "\fB\-a\fR файл" 4
.IX Item "-a файл"
.PD 0
.IP "\fB\-\-add\fR файл" 4
.IX Item "--add файл"
.PD
Add \fIfile\fR, a disk image, host partition, \s-1LV,\s0 external \s-1USB\s0 disk, etc.
.Sp
Формат образу диска визначається автоматично. Щоб перевизначити його і
примусово використати певний формат, скористайтеся параметром
\&\fI\-\-format=..\fR.
.Sp
\&\fBВсі поточні дані на диску буде витерто.\fR
.IP "\fB\-a\fR адреса" 4
.IX Item "-a адреса"
.PD 0
.IP "\fB\-\-add\fR адреса" 4
.IX Item "--add адреса"
.PD
Додати віддалений диск. Див. \*(L"ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА\*(R" in \fIguestfish\fR\|(1).
.IP "\fB\-\-filesystem=ext3|ntfs|vfat|...\fR" 4
.IX Item "--filesystem=ext3|ntfs|vfat|..."
Create an empty filesystem of the specified type.  Many filesystem types are
supported by libguestfs.
.IP "\fB\-\-filesystem=none\fR" 4
.IX Item "--filesystem=none"
Create no filesystem.  This is the default.
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
Типовим значенням для параметра \fI\-a\fR є автоматичне визначення формату
образу диска. Використання цього параметра примусово визначає значення
параметрів \fI\-a\fR формату диска у наступному рядку команди. Використання
параметра \fI\-\-format\fR без аргументу перемикає програму у режим автоматичного
визначення у наступних параметрах \fI\-a\fR.
.Sp
Приклад:
.Sp
.Vb 1
\& virt\-format \-\-format=raw \-a disk.img
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \fIdisk.img\fR.
.Sp
.Vb 1
\& virt\-format \-\-format=raw \-a disk.img \-\-format \-a another.img
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \fIdiskimg\fR і повернення до автоматичного визначення для \fIanother.img\fR.
.Sp
Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому
форматі, вам слід скористатися цим параметром для визначення формату
диска. Таким чином можна уникнути можливих проблем з захистом для
сформованих зловмисниками гостьових систем (\s-1CVE\-2010\-3851\s0).
.IP "\fB\-\-label=\fRМІТКА" 4
.IX Item "--label=МІТКА"
Set the filesystem label.
.IP "\fB\-\-lvm=/dev/\f(BI\s-1VG\s0\fB/\f(BI\s-1LV\s0\fB\fR" 4
.IX Item "--lvm=/dev/VG/LV"
Create a Linux \s-1LVM2\s0 logical volume called \fI/dev/\fI\s-1VG\s0\fI/\fI\s-1LV\s0\fI\fR.  You can
change the name of the volume group and logical volume.
.IP "\fB\-\-lvm\fR" 4
.IX Item "--lvm"
Create a Linux \s-1LVM2\s0 logical volume with the default name (\fI/dev/VG/LV\fR).
.IP "\fB\-\-lvm=none\fR" 4
.IX Item "--lvm=none"
Create no logical volume.  This is the default.
.IP "\fB\-\-partition\fR" 4
.IX Item "--partition"
Create either an \s-1MBR\s0 or \s-1GPT\s0 partition covering the whole disk.  \s-1MBR\s0 is
chosen if the disk size is < 2 \s-1TB, GPT\s0 if ≥ 2 \s-1TB.\s0
.Sp
Типове значення.
.IP "\fB\-\-partition=gpt\fR" 4
.IX Item "--partition=gpt"
Create a \s-1GPT\s0 partition.
.IP "\fB\-\-partition=mbr\fR" 4
.IX Item "--partition=mbr"
Create an \s-1MBR\s0 partition.
.IP "\fB\-\-partition=none\fR" 4
.IX Item "--partition=none"
Create no partition table.  Note that Windows may not be able to see these
disks.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Увімкнути докладний показ повідомлень з метою діагностики.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Показати дані щодо версії і завершити роботу.
.IP "\fB\-\-wipe\fR" 4
.IX Item "--wipe"
Normally virt-format does not wipe data from the disk (because that takes a
long time).  Thus if there is data on the disk, it is only hidden and
partially overwritten by virt-format, and it might be recovered by disk
editing tools.
.Sp
If you use this option, virt-format writes zeroes over the whole disk so
that previous data is not recoverable.
.IP "\fB\-x\fR" 4
.IX Item "-x"
Увімкнути трасування викликів програмного інтерфейсу libguestfs.
.SH "СТАН ВИХОДУ"
.IX Header "СТАН ВИХОДУ"
This program returns \f(CW0\fR on success, or \f(CW1\fR on failure.
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fIguestfs\fR\|(3), \fIguestfish\fR\|(1), \fIvirt\-filesystems\fR\|(1), \fIvirt\-make\-fs\fR\|(1),
\&\fIvirt\-rescue\fR\|(1), \fIvirt\-resize\fR\|(1), http://libguestfs.org/.
.SH "АВТОР"
.IX Header "АВТОР"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
© Red Hat Inc., 2012
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
