.\" Automatically generated by Podwrapper::Man 1.40.2 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "virt-ls 1"
.TH virt-ls 1 "2019-02-07" "libguestfs-1.40.2" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
virt-ls — програма для показу списку файлів у віртуальній машині
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& virt\-ls [\-\-параметри] \-d назва_домену каталог [каталог ...]
\&
\& virt\-ls [\-\-параметри] \-a диск.img [\-a диск.img ...] каталог [каталог ...]
.Ve
.PP
Старий стиль:
.PP
.Vb 1
\& virt\-ls [\-\-параметри] назва_домену каталог
\&
\& virt\-ls [\-\-параметри] диск.img [диск.img ...] каталог
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
\&\f(CW\*(C`virt\-ls\*(C'\fR виводить списки назв файлів, розмірів файлів, контрольних сум,
розширених атрибутів та інші дані з віртуальної машини або образу диска.
.PP
Можна вказати декілька назв каталогів. У цьому випадку виведені дані для
кожного з них буде об'єднано.
.PP
Щоб отримати список вмісту каталогів з гостьової системи libvirt,
скористайтеся параметром \fI\-d\fR для задання назви гостьової системи. Для
роботи з образом диска скористайтеся параметром \fI\-a\fR.
.PP
\&\f(CW\*(C`virt\-ls\*(C'\fR може створювати багато простих списків файлів. Складніші списки
можна створити за допомогою \fBguestfish\fR\|(1) або програми, яка безпосередньо
використовує програмний інтерфейс \fBguestfs\fR\|(3).
.SH "ПРИКЛАДИ"
.IX Header "ПРИКЛАДИ"
Отримати список всіх файлів і каталогів у віртуальній машині:
.PP
.Vb 1
\& virt\-ls \-R \-d guest /
.Ve
.PP
Показати список всіх програм з setuid або setgid у віртуальній машині Linux:
.PP
.Vb 1
\& virt\-ls \-lR \-d guest / | grep \*(Aq^\- [42]\*(Aq
.Ve
.PP
Показати список всіх каталогів з відкритим для всіх доступом на запис у
віртуальній машині Linux:
.PP
.Vb 1
\& virt\-ls \-lR \-d guest / | grep \*(Aq^d ...7\*(Aq
.Ve
.PP
Показати список всіх сокетів доменів Unix у віртуальній машині Linux:
.PP
.Vb 1
\& virt\-ls \-lR \-d guest / | grep \*(Aq^s\*(Aq
.Ve
.PP
Показати список усіх звичайних файлів, назви яких завершуються на «.png»:
.PP
.Vb 1
\& virt\-ls \-lR \-d guest / | grep \-i \*(Aq^\-.*\e.png$\*(Aq
.Ve
.PP
Щоб переглянути список файлів у домашніх каталогах, розмір яких перевищує 10
МБ:
.PP
.Vb 1
\& virt\-ls \-lR \-d guest /home | awk \*(Aq$3 > 10*1024*1024\*(Aq
.Ve
.PP
Знайти всі об’єкти, які було змінено протягом попередніх 7 днів:
.PP
.Vb 1
\& virt\-ls \-lR \-d guest \-\-time\-days / | awk \*(Aq$6 <= 7\*(Aq
.Ve
.PP
Знайти звичайні файли, зміни до яких було внесено протягом попередніх 24
годин:
.PP
.Vb 1
\& virt\-ls \-lR \-d guest \-\-time\-days / | grep \*(Aq^\-\*(Aq | awk \*(Aq$6 < 1\*(Aq
.Ve
.SS "ВІДМІННОСТІ МІЖ ЗНІМКАМИ ТА ФАЙЛАМИ РЕЗЕРВНИХ КОПІЙ"
.IX Subsection "ВІДМІННОСТІ МІЖ ЗНІМКАМИ ТА ФАЙЛАМИ РЕЗЕРВНИХ КОПІЙ"
Хоча virt-ls можна скористатися для пошуку відмінностей між каталогами, з
випуску libguestfs ≥ 1.26 з цією метою краще користуватися новим
інструментом, \fBvirt\-diff\fR\|(1).
.SH "РЕЖИМИ ВИВЕДЕННЯ ДАНИХ"
.IX Header "РЕЖИМИ ВИВЕДЕННЯ ДАНИХ"
У \f(CW\*(C`virt\-ls\*(C'\fR передбачено чотири режими виведення даних, керування якими
здійснюється різними комбінаціями параметрів \fI\-l\fR та \fI\-R\fR.
.SS "ПРОСТИЙ СПИСОК"
.IX Subsection "ПРОСТИЙ СПИСОК"
Простий список, подібний до списку звичайної команди \fBls\fR\|(1):
.PP
.Vb 4
\& $ virt\-ls \-d guest /
\& bin
\& boot
\& [тощо]
.Ve
.SS "ДОВГИЙ СПИСОК"
.IX Subsection "ДОВГИЙ СПИСОК"
З параметром \fI\-l\fR (\fI\-\-long\fR) виведені дані будуть подібними до даних, які
виводить команда \f(CW\*(C`ls \-l\*(C'\fR (якщо точніше, функція \f(CW\*(C`guestfs_ll\*(C'\fR).
.PP
.Vb 5
\& $ virt\-ls \-l \-d guest /
\& total 204
\& dr\-xr\-xr\-x.   2 root root   4096 2009\-08\-25 19:06 bin
\& dr\-xr\-xr\-x.   5 root root   3072 2009\-08\-25 19:06 boot
\& [тощо]
.Ve
.PP
Зауважте, що хоча такий список зручний для перегляду вмісту каталогу, не
варто обробляти його за допомогою іншої програми. Для обробки іншими
програмами слід скористатися варіантом \*(L"РЕКУРСИВНИЙ ДОВГИЙ СПИСОК\*(R".
.SS "РЕКУРСИВНИЙ СПИСОК"
.IX Subsection "РЕКУРСИВНИЙ СПИСОК"
Із параметром \fI\-R\fR (\fI\-\-recursive\fR) \f(CW\*(C`virt\-ls\*(C'\fR виводить список назв файлів
і каталогів рекурсивно:
.PP
.Vb 4
\& $ virt\-ls \-R \-d guest /tmp
\& foo
\& foo/bar
\& [тощо]
.Ve
.PP
Для створення такого списку \f(CW\*(C`virt\-ls\*(C'\fR викликає функцію \f(CW\*(C`guestfs_find0\*(C'\fR і
перетворює символи \f(CW\*(C`\e0\*(C'\fR на \f(CW\*(C`\en\*(C'\fR.
.SS "РЕКУРСИВНИЙ ДОВГИЙ СПИСОК"
.IX Subsection "РЕКУРСИВНИЙ ДОВГИЙ СПИСОК"
Використання параметрів \fI\-lR\fR разом змінює виведені дані так, що вміст
каталогів показується рекурсивно, із даними щодо файлів, а також, якщо
використано відповідні параметри, іншими даними, зокрема контрольними сумами
та розширеними атрибутами.
.PP
Доступ до більшості цікавих можливостей \f(CW\*(C`virt\-ls\*(C'\fR можна отримати лише у
режимі \fI\-lR\fR.
.PP
Зазвичай, поля відокремлюються пробілами. До назв файлів \fBне додаються\fR
лапки. Отже, ви не зможете скористатися виведеними даними у іншій програмі
(оскільки у назвах файлів можуть міститися пробіли та інші нестандартні
символи). Якщо до гостьової системи мають доступ сторонні люди і відомо, що
ви використовуєте \f(CW\*(C`virt\-ls\*(C'\fR для аналізу вмісту гостьової системи,
зловмисники можуть створити файли зі спеціально сконструйованими назвами та
вбудованими до назв символами розриву рядка. Щоб виведені дані можна було
\&\fBбезпечно\fR обробити у сторонній програмі, скористайтеся параметром \fI\-\-csv\fR
для виведення даних у форматі значень, відокремлених комами.
.PP
Зауважте, що цей формат виведення є повністю незалежним від формату команди
\&\f(CW\*(C`ls \-lR\*(C'\fR.
.PP
.Vb 8
\& $ virt\-ls \-lR \-d guest /bin
\& d 0555       4096 /bin
\& \- 0755        123 /bin/alsaunmute
\& \- 0755      28328 /bin/arch
\& l 0777          4 /bin/awk \-> gawk
\& \- 0755      27216 /bin/basename
\& \- 0755     943360 /bin/bash
\& [тощо]
.Ve
.PP
Ці основні поля буде показано завжди:
.IP "тип" 4
.IX Item "тип"
Тип файла, одне з таких значень: \f(CW\*(C`\-\*(C'\fR (звичайний файл), \f(CW\*(C`d\*(C'\fR (каталог), \f(CW\*(C`c\*(C'\fR
(символьний пристрій), \f(CW\*(C`b\*(C'\fR (блоковий пристрій), \f(CW\*(C`p\*(C'\fR (іменований канал),
\&\f(CW\*(C`l\*(C'\fR (символічне посилання), \f(CW\*(C`s\*(C'\fR (сокет) або \f(CW\*(C`u\*(C'\fR (невідомо).
.IP "права доступу" 4
.IX Item "права доступу"
Права доступу Unix, показані у форматі вісімкового числа із 4 цифр.
.IP "розмір" 4
.IX Item "розмір"
Розмір файла. Його буде показано у байтах, якщо не використано параметр
\&\fI\-h\fR або \fI\-\-human\-readable\fR. Якщо такий параметр використано, дані буде
показано у зручному для читанні вигляді.
.IP "шлях" 4
.IX Item "шлях"
Шлях до файла або каталогу повністю.
.IP "посилання" 4
.IX Item "посилання"
Лише для символічних посилань, призначення посилання.
.PP
У режимі \fI\-lR\fR додаткові параметри командного рядка уможливлюють показ
додаткових полів.
.PP
З прапорцем \fI\-\-uids\fR ці додаткові поля буде показано до шляху:
.IP "uid" 4
.IX Item "uid"
.PD 0
.IP "gid" 4
.IX Item "gid"
.PD
\&\s-1UID\s0 та \s-1GID\s0 власника файла (буде показано у числовій формі). Зауважте, що ці
дані мають сенс лише у контексті Unix\-подібної гостьової системи.
.PP
Із прапорцем \fI\-\-times\fR буде показано такі додаткові поля:
.IP "atime" 4
.IX Item "atime"
Час останнього доступу.
.IP "mtime" 4
.IX Item "mtime"
Час останнього внесення змін.
.IP "ctime" 4
.IX Item "ctime"
Час останньої зміни стану.
.PP
Вміст полів дат і часу буде показано у форматі рядків, якщо не вказано
одного з таких параметрів: \fI\-\-time\-t\fR, \fI\-\-time\-relative\fR або
\&\fI\-\-time\-days\fR.
.PP
Із прапорцем \fI\-\-extra\-stats\fR буде показано такі додаткові поля:
.IP "пристрій" 4
.IX Item "пристрій"
Пристрій на якому міститься файл (буде показано у форматі
основний:підлеглий). Запис пристрою може не збігатися із записом пристрою,
який відомий гостьовій системі.
.IP "inode" 4
.IX Item "inode"
Номер inode.
.IP "nlink" 4
.IX Item "nlink"
Кількість жорстких посилань.
.IP "rdev" 4
.IX Item "rdev"
Для блоковий і символьних спеціальних файлів пристрій (буде показано у
форматі основний:підлеглий).
.IP "блоки" 4
.IX Item "блоки"
Кількість 512\-байтових блоків, виділених під файл.
.PP
Якщо використано прапорець \fI\-\-checksum\fR, програма покаже контрольну суму
вмісту файла (лише для звичайних файлів). Обчислення контрольної суми може
бути доволі тривалою дією.
.SH "ПАРАМЕТРИ"
.IX Header "ПАРАМЕТРИ"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Показати коротку довідку.
.IP "\fB\-a\fR файл" 4
.IX Item "-a файл"
.PD 0
.IP "\fB\-\-add\fR файл" 4
.IX Item "--add файл"
.PD
Додати \fIфайл\fR, який має бути образом диска з віртуальної машини. Якщо у
віртуальній машині декілька блокових пристроїв, вам слід вказати їх усі за
допомогою окремих записів параметра \fI\-a\fR.
.Sp
Формат образу диска визначається автоматично. Щоб перевизначити його і
примусово використати певний формат, скористайтеся параметром
\&\fI\-\-format=..\fR.
.IP "\fB\-a адреса\fR" 4
.IX Item "-a адреса"
.PD 0
.IP "\fB\-\-add адреса\fR" 4
.IX Item "--add адреса"
.PD
Додати віддалений диск. Див. \*(L"ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА\*(R" in \fBguestfish\fR\|(1).
.IP "\fB\-\-checksum\fR" 4
.IX Item "--checksum"
.PD 0
.IP "\fB\-\-checksum=crc|md5|sha1|sha224|sha256|sha384|sha512\fR" 4
.IX Item "--checksum=crc|md5|sha1|sha224|sha256|sha384|sha512"
.PD
Вивести контрольну суму вмісту звичайного файла. Без аргументу для створення
контрольної суми буде використано \fImd5\fR. За допомогою аргументу ви можете
визначити потрібний вам тип контрольної суми.
.Sp
Цей параметр працюватиме лише у режимі виведення \fI\-lR\fR. Див. \*(L"РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК\*(R" вище.
.IP "\fB\-c\fR адреса" 4
.IX Item "-c адреса"
.PD 0
.IP "\fB\-\-connect\fR адреса" 4
.IX Item "--connect адреса"
.PD
Якщо використовується libvirt, встановити з’єднання з вказаним \fI\s-1URI\s0\fR. Якщо
пропущено, з’єднання буде встановлено з типовим гіпервізором libvirt.
.Sp
Якщо вказати блокові пристрої гостьових систем безпосередньо (\fI\-a\fR),
libvirt не буде використовуватися взагалі.
.IP "\fB\-\-csv\fR" 4
.IX Item "--csv"
Вивести результати до формату \s-1CSV\s0 (записів, відокремлених комами). Дані у
цьому форматі можна просто імпортувати до баз даних і електронних
таблиць. Втім, варто ознайомитися із розділом \*(L"НОТАТКА ЩОДО ФОРМАТУ \s-1CSV\*(R"\s0,
наведеним нижче.
.IP "\fB\-d\fR гість" 4
.IX Item "-d гість"
.PD 0
.IP "\fB\-\-domain\fR гість" 4
.IX Item "--domain гість"
.PD
Додати всі диски з вказаної гостьової системи libvirt. \s-1UUID\s0 доменів можна
використовувати замість назв.
.IP "\fB\-\-echo\-keys\fR" 4
.IX Item "--echo-keys"
Типово, якщо virt-ls попросить вас ввести ключ або пароль, програма не
відтворюватиме введені символи на екрані. Якщо ви не боїтеся
TEMPEST\-нападів, або у вашій кімнаті нікого, окрім вас, немає, ви можете
скористатися цим прапорцем, щоб бачити, які саме символи ви вводите.
.IP "\fB\-\-extra\-stats\fR" 4
.IX Item "--extra-stats"
Показати додаткові дані.
.Sp
Цей параметр працюватиме лише у режимі виведення \fI\-lR\fR. Див. \*(L"РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК\*(R" вище.
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
Типовим значенням для параметра \fI\-a\fR є автоматичне визначення формату
образу диска. Використання цього параметра примусово визначає значення
параметрів \fI\-a\fR формату диска у наступному рядку команди. Використання
параметра \fI\-\-format\fR без аргументу перемикає програму у режим автоматичного
визначення у наступних параметрах \fI\-a\fR.
.Sp
Приклад:
.Sp
.Vb 1
\& virt\-ls \-\-format=raw \-a диск.img /каталог
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \fIdisk.img\fR.
.Sp
.Vb 1
\& virt\-ls \-\-format=raw \-a диск.img \-\-format \-a інший_диск.img /каталог
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \fIdiskimg\fR і повернення до автоматичного визначення для \fIanother.img\fR.
.Sp
Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому
форматі, вам слід скористатися цим параметром для визначення формату
диска. Таким чином можна уникнути можливих проблем з захистом для
сформованих зловмисниками гостьових систем (\s-1CVE\-2010\-3851\s0).
.IP "\fB\-h\fR" 4
.IX Item "-h"
.PD 0
.IP "\fB\-\-human\-readable\fR" 4
.IX Item "--human-readable"
.PD
Показати розміри файлів у зручному для читання форматі.
.Sp
Цей параметр працюватиме лише у режимі виведення \fI\-lR\fR. Див. \*(L"РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК\*(R" вище.
.IP "\fB\-\-key\fR \s-1SELECTOR\s0" 4
.IX Item "--key SELECTOR"
Specify a key for \s-1LUKS,\s0 to automatically open a \s-1LUKS\s0 device when using the
inspection.  \f(CW\*(C`SELECTOR\*(C'\fR can be in one of the following formats:
.RS 4
.ie n .IP "\fB\-\-key\fR ""DEVICE"":key:KEY_STRING" 4
.el .IP "\fB\-\-key\fR \f(CWDEVICE\fR:key:KEY_STRING" 4
.IX Item "--key DEVICE:key:KEY_STRING"
Use the specified \f(CW\*(C`KEY_STRING\*(C'\fR as passphrase.
.ie n .IP "\fB\-\-key\fR ""DEVICE"":file:FILENAME" 4
.el .IP "\fB\-\-key\fR \f(CWDEVICE\fR:file:FILENAME" 4
.IX Item "--key DEVICE:file:FILENAME"
Read the passphrase from \fI\s-1FILENAME\s0\fR.
.RE
.RS 4
.RE
.IP "\fB\-\-keys\-from\-stdin\fR" 4
.IX Item "--keys-from-stdin"
Прочитати параметри ключа або пароля із джерела стандартного
введення. Типово програма намагається читати паролі від користувача
відкриттям \fI/dev/tty\fR.
.IP "\fB\-m\fR пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]" 4
.IX Item "-m пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]"
.PD 0
.IP "\fB\-\-mount\fR пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]" 4
.IX Item "--mount пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]"
.PD
Змонтувати названий розділ або логічний том до вказаної точки монтування.
.Sp
Якщо точку монтування не вказано, типовим значенням є \fI/\fR.
.Sp
Визначення точки монтування вимикає інспектування гостьової системи і
призводить до монтування її кореневої системи та усіх її точок
монтування. Тому вам слід забезпечити монтування усіх точок монтування,
потрібних для роботи із файлами, назви яких вказано як аргументи.
.Sp
Якщо ви не знаєте, які саме файлові системи містяться у образі диска, ви
можете або запустити guestfish без цього параметра і ознайомитися зі списком
доступних розділів, файлових систем та логічних томів (див. команди
\&\*(L"list-partitions\*(R", \*(L"list-filesystems\*(R" і \*(L"lvs\*(R"), або скористатися
програмою \fBvirt\-filesystems\fR\|(1).
.Sp
Третьою (і нечасто використовуваною) частиною параметра монтування є список
параметрів монтування, які використовуються для того, щоб змонтувати
підлеглу файлову систему. Якщо такий список не буде задано, параметрами
монтування вважатиметься або порожній рядок, або \f(CW\*(C`ro\*(C'\fR (другий варіант
використовується, якщо використано прапорець \fI\-\-ro\fR). Заданням параметрів
монтування ви перевизначаєте типовий варіант. Ймовірно, єдиним випадком,
коли вам може знадобитися це, є випадок вмикання списків керування доступом
(\s-1ACL\s0) і/або розширених атрибутів, якщо у файловій системі передбачено їхню
підтримку:
.Sp
.Vb 1
\& \-m /dev/sda1:/:acl,user_xattr
.Ve
.Sp
Використання цього прапорця є еквівалентним до використання команди
\&\f(CW\*(C`mount\-options\*(C'\fR.
.Sp
Четвертою частиною параметра є назва драйвера файлової системи, якою слід
скористатися, зокрема \f(CW\*(C`ext3\*(C'\fR або \f(CW\*(C`ntfs\*(C'\fR. У визначенні цієї частини
параметра рідко виникає потреба, але вона може бути корисною, якщо для
файлової системи можна скористатися декількома драйверами (приклад: \f(CW\*(C`ext2\*(C'\fR
і \f(CW\*(C`ext3\*(C'\fR), або libguestfs визначає файлову систему помилково.
.IP "\fB\-l\fR" 4
.IX Item "-l"
.PD 0
.IP "\fB\-\-long\fR" 4
.IX Item "--long"
.IP "\fB\-R\fR" 4
.IX Item "-R"
.IP "\fB\-\-recursive\fR" 4
.IX Item "--recursive"
.PD
Вибір режиму. Якщо не буде вказано жодного з варіантів, \f(CW\*(C`virt\-ls\*(C'\fR створює
простий плоский список файлів у вказаному каталозі. Див. \*(L"ПРОСТИЙ СПИСОК\*(R".
.Sp
\&\f(CW\*(C`virt\-ls \-l\*(C'\fR створює «довгий список», у якому більше
подробиць. Див. \*(L"ДОВГИЙ СПИСОК\*(R".
.Sp
\&\f(CW\*(C`virt\-ls \-R\*(C'\fR створює рекурсивний список файлів, починаючи з вказаного
каталогу. Див. \*(L"РЕКУРСИВНИЙ СПИСОК\*(R".
.Sp
\&\f(CW\*(C`virt\-ls \-lR\*(C'\fR створює рекурсивні довгі списки, які простіше
обробляти. Див. \*(L"РЕКУРСИВНИЙ ДОВГИЙ СПИСОК\*(R".
.IP "\fB\-\-times\fR" 4
.IX Item "--times"
Показати поля часу.
.Sp
Цей параметр працюватиме лише у режимі виведення \fI\-lR\fR. Див. \*(L"РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК\*(R" вище.
.IP "\fB\-\-time\-days\fR" 4
.IX Item "--time-days"
Показувати поля часу у форматі днів до поточного (від’ємні значення для днів
у майбутньому).
.Sp
Зауважте, що \f(CW0\fR у виведених даних означає «менше 1 одного дня до поточного
моменту» або «вік файла — від 0 до 86399 секунд».
.Sp
Цей параметр працюватиме лише у режимі виведення \fI\-lR\fR. Див. \*(L"РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК\*(R" вище.
.IP "\fB\-\-time\-relative\fR" 4
.IX Item "--time-relative"
Показувати поля часу у форматі секунд до поточного моменту (від’ємні
значення для часу у майбутньому).
.Sp
Цей параметр працюватиме лише у режимі виведення \fI\-lR\fR. Див. \*(L"РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК\*(R" вище.
.IP "\fB\-\-time\-t\fR" 4
.IX Item "--time-t"
Показувати поля часу у форматі секунд з моменту початку епохи \s-1UNIX.\s0
.Sp
Цей параметр працюватиме лише у режимі виведення \fI\-lR\fR. Див. \*(L"РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК\*(R" вище.
.IP "\fB\-\-uids\fR" 4
.IX Item "--uids"
Показати поля \s-1UID\s0 і \s-1GID.\s0
.Sp
Цей параметр працюватиме лише у режимі виведення \fI\-lR\fR. Див. \*(L"РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК\*(R" вище.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Увімкнути докладний показ повідомлень з метою діагностики.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Показати дані щодо версії і завершити роботу.
.IP "\fB\-x\fR" 4
.IX Item "-x"
Увімкнути трасування викликів програмного інтерфейсу libguestfs.
.SH "ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ"
.IX Header "ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ"
У попередніх версіях virt-ls можна було використовувати або
.PP
.Vb 1
\& virt\-ls диск.img [диск.img ...] /каталог
.Ve
.PP
або
.PP
.Vb 1
\& virt\-ls назва_гостьової_системи /каталог
.Ve
.PP
тоді як у цій версії вам слід скористатися \fI\-a\fR або \fI\-d\fR, відповідно, щоб
уникнути помилок у випадках, коли назва образу диска може збігатися із
назвою гостьової системи.
.PP
З міркувань зворотної сумісності передбачено підтримку запису параметрів у
застарілому форматі.
.SH "ЗАУВАЖЕННЯ ЩОДО ФОРМАТУ CSV"
.IX Header "ЗАУВАЖЕННЯ ЩОДО ФОРМАТУ CSV"
Формат значень, які відокремлено комами (\s-1CSV\s0), є оманливо простим. Може
\&\fIздатися\fR, що його просто обробляти, але насправді це зовсім не так.
.PP
Міф: достатньо розділити поля за комами. Реальність: поділ комами \fIне\fR
працює у надійний спосіб. Ось приклад із двома стовпчиками:
.PP
.Vb 1
\& "foo,bar",baz
.Ve
.PP
Міф: слід читати файл за рядками, один рядок за одну операцію
читання. Реальність: читання за рядками \fIне\fR працює у надійний спосіб. Ось
приклад із одним рядком:
.PP
.Vb 2
\& "foo
\& bar",baz
.Ve
.PP
Для скриптів командної оболонки скористайтеся \f(CW\*(C`csvtool\*(C'\fR
(https://github.com/Chris00/ocaml\-csv також є серед пакунків основних
дистрибутивів Linux).
.PP
Для інших мов програмування використовуйте бібліотеку для обробки даних \s-1CSV\s0
(наприклад, \f(CW\*(C`Text::CSV\*(C'\fR для Perl або вбудовану бібліотеку csv Python).
.PP
У більшості електронних таблиць та баз даних передбачено можливості
безпосереднього імпортування даних \s-1CSV.\s0
.SH "СТАН ВИХОДУ"
.IX Header "СТАН ВИХОДУ"
Ця програма повертає значення 0 у разі успішного завершення і ненульове
значення, якщо сталася помилка.
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fBguestfs\fR\|(3), \fBguestfish\fR\|(1), \fBvirt\-cat\fR\|(1), \fBvirt\-copy\-out\fR\|(1),
\&\fBvirt\-diff\fR\|(1), \fBvirt\-tar\-out\fR\|(1), http://libguestfs.org/.
.SH "АВТОР"
.IX Header "АВТОР"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
Copyright (C) 2009\-2019 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fBlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
