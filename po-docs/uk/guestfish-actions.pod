
=begin коментар

libguestfs generated file
 WARNING: THIS FILE IS GENERATED FROM THE FOLLOWING FILES:
          generator/fish.ml
          and from the code in the generator/ subdirectory.
 ANY CHANGES YOU MAKE TO THIS FILE WILL BE LOST.

 Copyright (C) 2009-2019 Red Hat Inc.

 Ця програма є вільним програмним забезпеченням; ви можете поширювати та/або
 змінювати її за умов дотримання GNU General Public License  утому вигляді, що
 оприлюднений Free Software Foundation; версії 2 цієї Ліцензії, або (якщо
 забажаєте) будь-якої випущеної пізніше.

 Ця програма поширюється у сподіванні, що вона буде корисною, але БЕЗ
 БУДЬ-ЯКИХ ГАРАНТІЙНИХ ЗОБОВ’ЯЗАНЬ; навіть без очевидної гарантії
 ПРАЦЕЗДАТНОСТІ або ПРИДАТНОСТІ ДЛЯ ВИКОРИСТАННЯ З ПЕВНОЮ МЕТОЮ. Докладніше
 про це можна дізнатися з GNU General Public License.

 Ви маєте отримати копію GNU General Public License разом з цією програмою;
 якщо це не так, повідомте про факт за адресою Free Software Foundation, Inc.,
 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

=end коментар

=head2 acl-delete-def-file

 acl-delete-def-file каталог

Ця функція вилучає типовий список керування доступом POSIX (ACL), який
пов'язано із каталогом C<dir>.

Працездатність цієї команди залежить від можливості C<acl>. Див. також
L</feature-available>.

=head2 acl-get-file

 acl-get-file шлях тип-acl

Ця функція повертає список керування доступом POSIX (ACL), пов'язаний із
C<path>. ACL буде повернуто у «довгій тестовій формі» (див. L<acl(5)>).

Можливі значення параметра C<acltype>:

=over 4

=item C<access>

Повертає звичайний (на доступ) ACL для будь-якого файла, каталогу або іншого
об'єкта файлової системи.

=item C<default>

Повертає типовий ACL. Зазвичай, це має сенс лише, якщо C<шлях> — це каталог.

=back

Працездатність цієї команди залежить від можливості C<acl>. Див. також
L</feature-available>.

=head2 acl-set-file

 acl-set-file шлях тип-acl acl

Ця функція встановлює список керування доступом POSIX (ACL), пов'язаний із
шляхом C<path>.

Можливі значення параметра C<acltype>:

=over 4

=item C<access>

Встановлює звичайний (на доступ) ACL для будь-якого файла, каталогу або
іншого об'єкта файлової системи.

=item C<default>

Встановлює типовий ACL. Зазвичай, це має сенс лише, якщо C<шлях> — це
каталог.

=back

Значенням параметра C<acl> є новий ACL у «довгій текстовий формі» або
«скороченій текстовій формі» (див. L<acl(5)>). Новий ACL повністю заміняє
будь-який попередній ACL файла. ACL має містити повні права доступу Unix
(наприклад, C<u::rwx,g::rx,o::rx>).

Якщо ви вказуєте окремих користувачів або групи, слід вказувати і поле маски
(наприклад, C<m::rwx>), за яким слід вказувати  поля
C<u:I<ідентифікатор>:...> і/або C<g:I<ідентифікатор>:...>. Отже, повний
рядок ACL може виглядати ось так:

 u::rwx,g::rwx,o::rwx,m::rwx,u:500:rwx,g:500:rwx
 \      Права Unix        / \маска/ \      ACL        /

Вам слід використовувати числові значення UID і GID. Щоб пов'язати імена
користувачів та назви груп із правильними значенням ідентифікаторів у
контексті гостьової системи, скористайтеся функціями Augeas
(див. L</aug-init>).

Працездатність цієї команди залежить від можливості C<acl>. Див. також
L</feature-available>.

=head2 add-cdrom

 add-cdrom назва_файла

Ця функція додає віртуальний образ компакт-диска до гостьової системи.

Образ додається як придатний лише для читання диск, отже ця функція
еквівалентна до L</add-drive-ro>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</add-drive-ro>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 add-domain

=head2 домен

 add-domain dom [libvirturi:..] [readonly:true|false] [iface:..] [live:true|false] [allowuuid:true|false] [readonlydisk:..] [cachemode:..] [discard:..] [copyonread:true|false]

Ця функція додає диски, долучені до вказаного за назвою домену libvirt
C<dom>. Вона працює шляхом з'єднання із libvirt,
 надсилання запиту щодо домену і XML домену до libvirt, обробки отриманих
даних для дисків і виклику L</add-drive-opts> для кожного з дисків.

Буде повернуто значення кількості доданих дисків. Ця операція є атомарною:
якщо буде повернуто помилку, жодного диска не додано.

Ця функція виконує деякі мінімальні перевірки, щоб переконатися, що домен
libvirt не запущено (якщо C<readonly> не дорівнює true). У майбутніх версіях
ми спробуємо реалізувати блокування libvirt для кожного диска.

Диски мають бути доступними. Це часто означає, що додавання дисків з
віддаленого з'єднання libvirt (див. L<http://libvirt.org/remote.html>)
завершиться помилкою, якщо ці диски не є доступними за тією самою адресою
пристрою і локально.

Необов'язковий параметр C<libvirturi> встановлює адресу libvirt
(див. L<http://libvirt.org/uri.html>). Якщо його не встановлено, ми
з'єднуємося із типовою адресою libvirt (або адресою, встановленою за
допомогою змінної середовища, див. документацію до libvirt, щоб ознайомитися
із подробицями).

Необов'язковий прапорець C<live> керує тим, чи буде цей виклик намагатися
з'єднатися із запущеним процесом C<guestfsd> віртуальної машини, якщо буде
виявлено відповідний елемент E<lt>channelE<gt> у визначення XML
libvirt. Типовою поведінкою (якщо прапорець не встановлено) є поведінка, за
якої спроби робитися не буде. Див. L<guestfs(3)/ДОЛУЧЕННЯ ДО ЗАПУЩЕНИХ
ФОНОВИХ СЛУЖБ>, щоб дізнатися більше.

Якщо прапорець C<allowuuid> має значення true (типовим значенням є false),
тоді I<може> бути передано UUID замість назви домену. Рядок C<dom>
обробляється спочатку як UUID і виконується пошук. Якщо нічого не вдасться
знайти, C<dom> обробляється як назва, як завжди.

Необов'язковий параметр C<readonlydisk> керує тим, що ми робимо із дисками,
які позначено як E<lt>readonly/E<gt> у XML libvirt. Можливі значення:

=over 4

=item readonlydisk = "error"

Якщо C<readonly> має значення false:

Увесь виклик буде перервано із повідомленням про помилку, якщо буде виявлено
хоча б один диск із прапорцем E<lt>readonly/E<gt>.

Якщо C<readonly> має значення true:

Диски із прапорцем E<lt>readonly/E<gt> додано лише для читання.

=item readonlydisk = "read"

Якщо C<readonly> має значення false:

Диски із прапорцем E<lt>readonly/E<gt> додано лише для читання. Інші диски
додано для читання і запису.

Якщо C<readonly> має значення true:

Диски із прапорцем E<lt>readonly/E<gt> додано лише для читання.

=item readonlydisk = "write" (типово)

Якщо C<readonly> має значення false:

Диски із прапорцем E<lt>readonly/E<gt> додано для читання і запису.

Якщо C<readonly> має значення true:

Диски із прапорцем E<lt>readonly/E<gt> додано лише для читання.

=item readonlydisk = "ignore"

Якщо C<readonly> має значення true або false:

Диски з прапорцем E<lt>readonly/E<gt> буде пропущено.

=back

Інші необов'язкові параметри передаються безпосередньо до
L</add-drive-opts>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 add-drive

=head2 add

=head2 add-drive-opts

 add-drive назва_файла [readonly:true|false] [format:..] [iface:..] [name:..] [label:..] [protocol:..] [server:..] [username:..] [secret:..] [cachemode:..] [discard:..] [copyonread:true|false]

Ця функція додає образ диска, який має назву F<filename>, до
дескриптора. F<filename> може бути звичайним файлом основної системи або
пристроєм основної системи.

Якщо цю функцію викликають до L</launch> (типовий випадок), тоді, коли ви
вперше викликаєте цю функцію, диск з'являється у програмному інтерфейсі як
F</dev/sda>, другого разу — F</dev/sdb>, тощо.

У libguestfs E<ge> 1.20 ви можете викликати цю функцію і після запуску (з
певними обмеженнями). Це називається «з'єднання у «гарячому» режимі». При
такому з'єднанні вам слід вказати мітку (C<label>), щоб новий диск отримав
передбачувану назву. Докладніший опис наведено у розділі
L<guestfs(3)/З'ЄДНАННЯ У «ГАРЯЧОМУ» РЕЖИМІ>.

Вам не обов'язково мати права адміністратора (root), коли ви використовуєте
libguestfs. Втім, вам, очевидно, знадобляться достатні права доступу до
файла, щоб виконувати відповідні дії із файлом (тобто доступ до читання,
якщо ви хочете читати дані з образу, або доступ до запису, якщо ви хочете
вносити зміни до образу).

Цей виклик перевіряє, чи існує F<filename>.

F<filename> може бути спеціальним рядком
C<"/dev/null">. Див. L<guestfs(3)/НУЛЬОВІ ДИСКИ>.

Необов'язковими аргументами є:

=over 4

=item C<readonly>

Якщо має значення true, образ вважатиметься придатним лише для
читання. Запис буде дозволено, але дані зберігатимуться у тимчасовому
знімку-накладці, який наприкінці сеансу роботи буде відкинуто. Зміни до
диска, який ви додаєте, внесено не буде.

=item C<format>

Примусово встановлює формат образу. Якщо ви не вкажете його (або
скористаєтеся L</add-drive> чи L</add-drive-ro>), формат визначатиметься
автоматично. Серед можливих форматів C<raw> і C<qcow2>.

Автоматичне визначення формату є потенційною вадою захисту, якщо ви маєте
справу з образами у форматі raw із ненадійних джерел. Див. CVE-2010-3851 і
RHBZ#642934. Вказування формату явним чином закриває цю дірку у захисті.

=item C<iface>

Цей рідкісний параметр надає вам змогу емулювати поведінку застарілого
виклику L</add-drive-with-if> (q.v.)

=item C<name>

Назва, яку диск має у початковій гостьовій системі, наприклад,
F</dev/sdb>. Використовується як підказка для процесу інспектування
гостьової системи, якщо така назва наявна.

=item C<label>

Надати диску мітку. Мітка має бути унікальним коротким рядком, у якому
використано I<лише> символи ASCII C<[a-zA-Z]>. Окрім звичайної назви у
програмному інтерфейсі (наприклад F</dev/sda>), диск також можна буде
називати F</dev/disk/guestfs/I<мітка>>.

Див. L<guestfs(3)/МІТКИ ДИСКІВ>.

=item C<protocol>

Необов'язковим аргументом протоколу можна скористатися для вибору
альтернативного протоколу джерела.

Див. також L<guestfs(3)/REMOTE STORAGE>.

=over 4

=item C<protocol = "file">

F<filename> вважатиметься локальним файлом або пристроєм. Це типова
поведінка програми, якщо не вказано додатковий параметр протоколу.

=item C<protocol = "ftp"|"ftps"|"http"|"https"|"tftp">

З'єднатися із віддаленим сервером FTP, HTTP або TFTP. Також має бути надано
параметр C<server>, див. нижче.

Див. також L<guestfs(3)/FTP, HTTP AND TFTP>

=item C<protocol = "gluster">

З'єднатися із сервером GlusterFS. Також має бути надано параметр C<server>,
див. нижче.

Див. також L<guestfs(3)/GLUSTER>.

=item C<protocol = "iscsi">

З'єднатися із сервером iSCSI. Також має бути надано параметр C<server>,
див. нижче. Має бути надано параметр C<username>, див. нижче. Має бути
надано параметр C<secret>, див. нижче.

Див. також L<guestfs(3)/ISCSI>.

=item C<protocol = "nbd">

З'єднатися із сервером Network Block Device. Також має бути надано параметр
C<server>, див. нижче.

Див. також L<guestfs(3)/NETWORK BLOCK DEVICE>.

=item C<protocol = "rbd">

З'єднатися із сервером Ceph (librbd/RBD). Також має бути надано параметр
C<server>, див. нижче. Має бути надано параметр C<username>, див. нижче. Має
бути надано параметр C<secret>, див. нижче.

Див. також L<guestfs(3)/CEPH>.

=item C<protocol = "sheepdog">

З'єднатися із сервером Sheepdog. Також може бути надано параметр C<server>,
див. нижче.

Див. також L<guestfs(3)/SHEEPDOG>.

=item C<protocol = "ssh">

Встановити з’єднання з сервером Secure Shell (ssh).

Має бути надано параметр C<server>. Може бути надано параметр C<username>,
див. нижче.

Див. також L<guestfs(3)/SSH>.

=back

=item C<server>

Для протоколів, які потребують доступу до віддаленого сервера, це список
серверів.

 Протокол       Кількість потрібних серверів
 --------       --------------------------
 file           Список має бути порожнім або не слід користуватися параметром взагалі
 ftp|ftps|http|https|tftp  Точно один
 gluster        Точно один
 iscsi          Точно один
 nbd            Точно один
 rbd            Нуль або більше
 sheepdog       Нуль або більше
 ssh            Точно один

Кожен елемент у списку є рядком, який вказує на сервер. Рядок має бути
записано у одному з таких форматів:

 назва_вузла
 назва_вузла:порт
 tcp:назва_вузла
 tcp:назва_вузла:порт
 unix:/шлях/до/сокета

Якщо номер порту не вказано, буде використано стандартний для протоколу
номер (див. F</etc/services>).

=item C<username>

Для протоколів C<ftp>, C<ftps>, C<http>, C<https>, C<iscsi>, C<rbd>, C<ssh>
та C<tftp> визначає ім’я користувача віддаленої системи.

Якщо не вказано, для C<ssh> буде використано ім'я локального користувача, а
для ceph спроба пройти розпізнавання не виконуватиметься. Втім, зауважте, що
іноді це може призводити до неочікуваних результатів, наприклад, якщо
використовується модуль обробки libvirt, і модуль обробки libvirt
налаштовано на запуск базової системи qemu від імені спеціального
користувача, зокрема C<qemu.qemu>. Якщо сумніваєтеся, вкажіть потрібне вам
ім'я користувача віддаленої системи.

=item C<secret>

Лише для протоколу C<rbd> це визначає «ключ», яким слід скористатися для
з'єднання із віддаленим пристроєм. Дані має бути вказано у кодуванні base64.

Якщо не вказано, буде виконано пошук ключа, який відповідає вказаному імені
користувача у типовому сховищі ключів. Якщо імені користувача не вказано,
спроба пройти розпізнавання не виконуватиметься.

=item C<cachemode>

Вкажіть, має libguestfs зважати на дії з синхронізації (безпечно, але
повільно) чи ні (небезпечно, але швидко). Можливими значеннями цього рядка
можуть бути:

=over 4

=item C<cachemode = "writeback">

Типове значення.

Дії із запису у програмному інтерфейсі не повертають керування, аж доки не
буде завершено виклик L<write(2)> у основній системі [втім, слід зауважити,
що це не означає, що щось буде записано на диск].

Дії із синхронізації у програмному інтерфейсі, зокрема неявні синхронізації,
спричинені журналюванням файлової системи, не повертатимуть керування, аж
доки не буде завершено виклик L<fdatasync(2)> у основній системі, що
означатиме, що дані було надіслано на диск.

=item C<cachemode = "unsafe">

У цьому режимі надійність не гарантовано. Libguestfs може кешувати дані і
ігнорувати запити щодо синхронізації. Пасує лише тестовим та тимчасовим
дискам.

=back

=item C<discard>

Увімкнути або вимкнути підтримку відкидання (або обрізання чи скасовування
прив'язки) для цього диска. Якщо увімкнено, дії, подібні до L</fstrim>
зможуть відкидати / утоншувати / пробивати дірки у підлеглому файлі або
пристрої основної системи.

Можливі варіанти параметрів відкидання:

=over 4

=item C<discard = "disable">

Вимкнути підтримку відкидання. Типова поведінка.

=item C<discard = "enable">

Увімкнути підтримку відкидання. Завершується помилкою, якщо відкидання
неможливе.

=item C<discard = "besteffort">

Увімкнути, якщо можна, підтримку відкидання, але не завершувати роботу із
повідомленням щодо помилки, якщо такої підтримки не передбачено.

Оскільки підтримку відкидання передбачено не для усіх модулів обробки і не
для усіх підлеглих систем, це непоганий варіант, якщо ви хочете скористатися
відкиданням, якщо воно можливе, але не маєте нічого проти того, щоб воно не
працювало.

=back

=item C<copyonread>

Булевий параметр C<copyonread> вмикає підтримку копіювання під час
читання. Це стосується лише форматів дисків, які мають резервні файли, і
спричиняє до того, що дані читання зберігатимуться у накладному шарі, що
пришвидшуватиме повторні читання тих сами даних з диска.

Типовим є значення false.

=back

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 add-drive-ro

=head2 add-ro

 add-drive-ro назва_файла

Ця функція є еквівалентом виклику L</add-drive-opts> із додатковим
параметром C<GUESTFS_ADD_DRIVE_OPTS_READONLY>, який встановлено у значення
1, отже диск додається лише для читання, а формат визначається автоматично.

=head2 add-drive-ro-with-if

 add-drive-ro-with-if назва_файла інтерфейс

Те саме, що і L</add-drive-ro>, але надає вам змогу вказати емуляцію
інтерфейсу QEMU, яку буде використано під час роботи.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</add-drive>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 add-drive-scratch

=head2 scratch

 add-drive-scratch розмір [назва:..] [мітка:..]

Ця команда додає тимчасовий робочий диск до дескриптора. Параметр C<size>
визначає його віртуальний розмір (у байтах). Робочий диск є початково
порожнім (усі спроби читання повертатимуть лише нулі, аж доки ви не почнете
записувати на нього дані). Диск вилучається після закриття дескриптора.

Додаткові аргументи C<name> і C<label> передаються до L</add-drive>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 add-drive-with-if

 add-drive-with-if назва_файла інтерфейс

Те саме, що і L</add-drive>, але надає вам змогу вказати емуляцію інтерфейсу
QEMU, яку буде використано під час роботи.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</add-drive>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 aug-clear

 aug-clear шлях

Встановлює значення, пов'язане C<path> у C<NULL>. Те саме, що і команда
L<augtool(1)> C<clear>.

=head2 aug-close

 aug-close

Закрити поточний дескриптор Augeas і вивільнити усі ресурси, які ним
використовуються. Після виклику слід викликати L</aug-init> ще раз, перш ніж
ви зможете скористатися будь-якими іншими функціями Augeas.

=head2 aug-defnode

 aug-defnode назва вираз значення

Визначає змінну C<назва>, чиїм значенням є результат обчислення виразу
C<вираз>.

Якщо використання виразу C<вираз> дає порожній набір вузлів, створюється
вузол. Еквівалент виклику L</aug-set> C<вираз>, C<значення>. C<назва> буде
мати значення набору вузлів, який містить єдиний створений вузол.

Якщо виконано успішно, повертає пару значень — кількість вузлів у наборі
вузлів та булевий прапорець, якщо було створено вузол.

=head2 aug-defvar

 aug-defvar назва вираз

Визначає змінну Augeas C<назва>, чиїм значенням є результат обчислення
виразу C<вираз>. Якщо значенням C<вираз> є NULL, C<назва> є невизначеною.

Якщо виконано успішно, повертає кількість вузлів у виразі C<вираз> або C<0>,
якщо обробка виразу C<вираз> дає щось, що не є набором вузлів.

=head2 aug-get

 aug-get шлях

Виконати пошук значення, пов'язаного із шляхом C<шлях>. Якщо C<шлях>
визначає точно один вузол, буде повернуто C<значення>.

=head2 aug-init

 aug-initкорінь прапорці

Створити дескриптор Augeas для редагування файлів налаштувань. Якщо із цим
сеансом guestfs вже було пов'язано дескриптор Augeas, його буде закрито.

Вам слід викликати цю команду до використання будь-яких інших команд
L</aug-*>.

C<корінь> — коренева тека файлової системи. Значенням C<корінь> не повинен
бути NULL. Замість значення NULL слід використовувати F</>.

Прапорці є тими самими, що і прапорці, визначені у E<lt>augeas.hE<gt>,
застосування логічного I<АБО> до таких цілих значень:

=over 4

=item C<AUG_SAVE_BACKUP> = 1

Зберігати початковий файл із додаванням до назви суфікса C<.augsave>.

=item C<AUG_SAVE_NEWFILE> = 2

Зберігати зміни до файла із суфіксом назви C<.augnew> і не перезаписувати
початковий файл. Має вищий пріоритет за C<AUG_SAVE_BACKUP>.

=item C<AUG_TYPE_CHECK> = 4

Лінзи перевірки типів.

Цей параметр буде корисним, лише якщо ви виконуєте діагностику лінз
Augeas. Використання цього параметра може потребувати додаткової пам'яті для
базової системи libguestfs. Ймовірно, вам варто встановити відповідне
значення для змінної середовища C<LIBGUESTFS_MEMSIZE> або викликати
L</set-memsize>.

=item C<AUG_NO_STDINC> = 8

Не використовувати стандартний шлях для завантаження модулів.

=item C<AUG_SAVE_NOOP> = 16

Вимкнути дію зі збереження, просто записати, що могло б бути змінено.

=item C<AUG_NO_LOAD> = 32

Не завантажувати ієрархію до L</aug-init>.

=back

Щоб закрити дескриптор, ви можете викликати L</aug-close>.

Щоб дізнатися більше про Augeas, зверніться до L<http://augeas.net/>.

=head2 aug-insert

 aug-insert шлях мітка true|false

Створити мітку-близнюка C<мітка> для шляху C<шлях>, вставивши її до ієрархії
перед або після записом шляху C<шлях> (залежно від додаткового булевого
прапорця C<до>).

C<шлях> має збігатися із точно одним наявним вузлом у ієрархії, а C<мітка>
має бути міткою, тобто не містити F</>, C<*>, або завершуватися індексом у
дужках, C<[N]>.

=head2 aug-label

 aug-label шлях

Повертає мітку (назву останнього елемента) для виразу шляху Augeas
C<шлях>. C<шлях> має відповідати точно одному вузлу, інакше функцією буде
повернуто повідомлення про помилку.

=head2 aug-load

 aug-load

Завантажити файли до ієрархії.

Див. документацію Augeas щодо C<aug_load>, якщо хочете докладнішого опису.

=head2 aug-ls

 aug-ls шлях

Скорочена форма запису для побудови списку L</aug-match> C<шлях/*> і
упорядковування вузлів-результатів за абеткою.

=head2 aug-match

 aug-match шлях

Повертає список шляхів, які відповідають виразу шляху C<шлях>. Повернуті
записи шляхів є достатньо визначеними, щоб відповідати точно одному запису
вузла у поточній ієрархії.

=head2 aug-mv

 aug-mv джерело призначення

Пересуває вузол C<джерело> до C<призначення>. C<джерело> має відповідати
точно одному вузлу. C<призначення> буде перезаписано, якщо воно вже існує.

=head2 aug-rm

 aug-rm шлях

Вилучити C<шлях> і усі його підлеглі об'єкти.

Якщо виконано успішно, повертає кількість вилучених записів.

=head2 aug-save

 aug-save

Записує зміни з черги на диск.

Прапорці, які передаються L</aug-init> впливають на те, як саме буде
збережено файли.

=head2 aug-set

 aug-set шлях значення

Встановлює для шляху C<шлях> пов'язане значення C<значення>.

У програмному інтерфейсі Augeas можна спорожняти вузол наданням йому
значення NULL. Через недогляд у програмному інтерфейсі libguestfs ви не
зможете цього робити за допомогою цього виклику. Замість цього, доведеться
викликати L</aug-clear>.

=head2 aug-setm

 aug-setm основа підлеглий значення

Змінити декілька вузлів Augeas однією командою. C<основа> — вираз, що
відповідає декільком вузлам. C<підлеглий> — вираз шляху відносно шляху
C<основа>. Буде знайдено усі вузли, які відповідають запису C<основа>, а
потім для кожного вузла значення C<підлеглий> буде змінено на
C<значення>. Значенням C<підлеглий> може бути C<NULL>, щоб призведе до
внесення змін до вузлів C<основа>.

Повертає кількість модифікованих вузлів.

=head2 aug-transform

 aug-transform лінза файл [вилучення:true|false]

Додати перетворення Augeas до вказаної лінзи C<лінза> так, щоб вона могла
обробляти C<файл>.

Якщо значенням прапорця C<вилучення> є true (типово його значенням є
C<false>), перетворення буде вилучено.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 available

 available 'групи ...'

Ця команда використовується для перевірки доступності певних груп
функціональних можливостей у базовій системі, роботу яких можуть забезпечити
не усі збірки базової системи libguestfs.

Список груп libguestfs та функцій, яким відповідають ці групи, наведено у
розділі L<guestfs(3)/ДОСТУПНІСТЬ>. Ви також можете отримати цей список у
робочому режимі викликом L</available-all-groups>.

Аргумент C<групи> є списком назв груп. Приклад: C<["inotify", "augeas"]> має
перевірити доступність функцій inotify Linux та функцій Augeas (редагування
файла налаштувань).

Ця команда не повертає повідомлення про помилку, якщо доступними є I<усі>
вказані групи.

Команда завершується повідомленням про помилку, якщо одна або декілька
запитаних груп є недоступною у базовій системі.

Якщо до списку груп буде включено групу із невідомою назвою, команда завжди
повертатиме повідомлення про помилку.

I<Нотатки:>

=over 4

=item *

L</feature-available> є тим самим, що і цей виклик, але із дещо простішим у
користуванні програмним інтерфейсом: цей виклик повертає булеве true/false
замість надсилання повідомлення про помилку.

=item *

Перед викликом цієї функції слід викликати L</launch>.

Причиною є те, що ми не знаємо, підтримку яких груп передбачено у базовій
системі або фоновій службі, доки її не буде запущено, і вона не зможе
відповідати на запити.

=item *

Якщо група функцій доступна, це не обов'язково означає, що функції
працюватимуть. Вам все одно слід перевірити, чи не виникають помилки під час
викликів окремих програмних інтерфейсів, навіть якщо вони доступні.

=item *

Зазвичай, збирання базової системи libguestfs із якомога ширшими
функціональними можливостями є завданням пакувальників
дистрибутивів. libguestfs із основної гілки коду, якщо програми зібрано із
початкового коду із усіма залежностями, підтримуватиме роботу із усіма
можливостями.

=item *

Цей виклик було додано у версії C<1.0.80>. У попередніх версіях libguestfs
усе, що ви могли зробити, це спробувати виконати команду, щоб визначити, чи
реалізовано її у фоновій службі. Див. також L</version>.

=back

Див також L</filesystem-available>.

=head2 available-all-groups

 available-all-groups

Ця команда повертає список усіх додаткових груп, про які знає ця фонова
служба. Зауважте, що буде повернуто список підтримуваних і непідтримуваних
груп. Щоб визначити групи, підтримку яких передбачено у фоновій службі, вам
слід викликати L</available> / L</feature-available> для кожного запису із
повернутого списку.

Див. також L</available>, L</feature-available> та
L<guestfs(3)/ДОСТУПНІСТЬ>.

=head2 base64-in

 base64-in (файл_base64|-) назва_файла

Ця команда вивантажує закодовані у base64 дані з файла C<файл_base64> до
файла F<назва_файла>.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 base64-out

 base64-out назва_файла (файл_base64|-)

Ця команда отримує вміст файла F<назва_файла> і записує його до локального
файла C<файл_base64> у кодуванні base64.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 blkdiscard

 blkdiscard пристрій

Ця команда відкидає усі блоки на блоковому пристрої C<пристрій>, вивільняючи
місце і передаючи його основній системі.

Ця операція потребує підтримки у libguestfs, файловій системі основної
системи, qemu та ядрі основної системи. Якщо цієї підтримки немає, операція
призведе до помилки або навіть виконуватиметься, але без усіляких
наслідків. Вам слід встановити атрибут C<discard> на підлеглому диску
(див. L</add-drive-opts>).

Працездатність цієї команди залежить від можливості
C<blkdiscard>. Див. також L</feature-available>.

=head2 blkdiscardzeroes

 blkdiscardzeroes пристрій

Цей виклик повертає true, якщо блоки на пристрої C<пристрій>, які було
відкинуто викликом L</blkdiscard>, повернуто як блоки у нуль байтів під час
наступного читання.

Якщо повертає false, може так статися, що відкинуті блоки читаються як
застарілі або випадкові дані.

Працездатність цієї команди залежить від можливості
C<blkdiscardzeroes>. Див. також L</feature-available>.

=head2 blkid

 blkid пристрій

Ця команда повертає атрибути блокового пристрою C<пристрій>. У виведеному
хеші зазвичай є вказані нижче поля. Також у ньому можуть бути інші поля.

=over 

=item C<UUID>

Код UUID цього пристрою.

=item C<МІТКА>

Мітка пристрою.

=item C<ВЕРСІЯ>

Версія програми blkid.

=item C<ТИП>

Тип файлової системи або RAID для цього пристрою.

=item C<ВИКОРИСТАННЯ>

Призначення цього пристрою, наприклад C<filesystem> або C<raid>.

=back

=head2 blockdev-flushbufs

 blockdev-flushbufs пристрій

Ця команда наказує ядру спорожнити внутрішні буфери, які пов'язано із
пристроєм C<пристрій>.

Використовується програма L<blockdev(8)>.

=head2 blockdev-getbsz

 blockdev-getbsz пристрій

Повертає розмір блоку для пристрою.

Зауваження: цей розмір відрізняється від I<розміру у блоках> і I<розміру
блоку файлової системи>. Крім того, цей параметр насправді ніде не
використовується. Вам, ймовірно, не знадобляться ці дані. Файлові системі
мають власні правила щодо вибору розміру блоку.

Використовується програма L<blockdev(8)>.

=head2 blockdev-getro

 blockdev-getro пристрій

Повертає булеве значення, яке визначається тим, чи призначено блоковий
пристрій лише для читання (true, якщо пристрій призначено лише для читання,
false, якщо ні).

Використовується програма L<blockdev(8)>.

=head2 blockdev-getsize64

 blockdev-getsize64 пристрій

Повертає розмір пристрою у байтах.

Див. також L</blockdev-getsz>.

Використовується програма L<blockdev(8)>.

=head2 blockdev-getss

 blockdev-getss пристрій

Ця команда повертає розмір сектора на блоковому пристрої. Зазвичай, розміром
є 512, але на сучасних пристроях розмір може бути більшим.

(Зауважте, що це не розмір у секторах. Щоб отримати розмір у секторах,
скористайтеся L</blockdev-getsz>).

Використовується програма L<blockdev(8)>.

=head2 blockdev-getsz

 blockdev-getsz пристрій

Цей повертає розмір пристрою у одиницях 512-байтових секторах (навіть якщо
розмір сектора не дорівнює 512 байтів ...дивно).

Див. також L</blockdev-getss>, щоб дізнатися справжній розмір сектора
пристрою, і L</blockdev-getsize64> для отримання кориснішого I<розміру у
байтах>.

Використовується програма L<blockdev(8)>.

=head2 blockdev-rereadpt

 blockdev-rereadpt пристрій

Повторно прочитати таблицю розділів з пристрою C<пристрій>.

Використовується програма L<blockdev(8)>.

=head2 blockdev-setbsz

 blockdev-setbsz пристрій розмір_блоку

Цей виклик не виконує ніяких дій і ніколи цього не робив через ваду у
blockdev. B<Не використовуйте його.>

Якщо вам потрібно встановити розмір блоку файлової системи, скористайтеся
параметром C<blocksize> L</mkfs>.

I<Ця функція вважається застарілою.> Замінника не передбачено. Зверніться до
документації із програмного інтерфейсу у підручнику з L<guestfs(3)>, щоб
дізнатися більше.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 blockdev-setra

 blockdev-setra пристрій сектори

Встановити випереджальне читання (у 512-байтових секторах) для пристрою.

Використовується програма L<blockdev(8)>.

=head2 blockdev-setro

 blockdev-setro пристрій

Переводити блоковий пристрій з назвою C<пристрій> у режим лише читання.

Використовується програма L<blockdev(8)>.

=head2 blockdev-setrw

 blockdev-setrw пристрій

Встановлює для блокового пристрою із назвою C<пристрій> режим
читання-запису.

Використовується програма L<blockdev(8)>.

=head2 btrfs-balance-cancel

 btrfs-balance-cancel шлях

Скасувати поточний баланс на файловій системі btrfs.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-balance-pause

 btrfs-balance-pause шлях

Призупинити запущений баланс у файловій системі btrfs

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-balance-resume

 btrfs-balance-resume шлях

Поновити призупинений баланс на файловій системі btrfs.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-balance-status

 btrfs-balance-status шлях

Показати стан використовуваного або призупиненого балансу на файловій
системі btrfs.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-device-add

 btrfs-device-add 'пристрої ...' файлова система

Додати список пристроїв у записі C<пристрої> до файлової системи btrfs,
змонтованої до файлової системи C<файлова система>.  Якщо C<пристрої> є
порожнім списком, не виконувати ніяких дій.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-device-delete

 btrfs-device-delete 'пристрої ...' файлова система

Вилучити C<пристрої> з файлової системи btrfs, змонтованої до точки
C<файлова система>. Якщо запис C<пристрої> є порожнім списком, не виконувати
ніяких дій.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-filesystem-balance

=head2 btrfs-balance

 btrfs-filesystem-balance файлова_система

Збалансувати фрагменти файлової системи btrfs, змонтованої до точки
C<файлова_система>, між підлеглими пристроями.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-filesystem-defragment

 btrfs-filesystem-defragment шлях [витирання:true|false] [стискання:..]

Виконати дефрагментацію файла або каталогу на файловій системі btrfs. Для
параметра «стискання» передбачено два значення: zlib або lzo.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-filesystem-resize

 btrfs-filesystem-resize точка_монтування [size:N]

Ця команда змінює розмір файлової системи btrfs.

Зауважте, що на відміну від інших викликів команд зміни розмірів, файлову
систему має бути змонтовано, а параметром команди є точка монтування, а не
пристрій (це вимога самої btrfs).

Додатковими параметрами є:

=over 4

=item C<розмір>

Новий розмір (у байтах) файлової системи. Якщо не вказано, файлову систему
буде розширено до максимального розміру.

=back

Див. також L<btrfs(8)>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-filesystem-show

 btrfs-filesystem-show пристрій

Вивести усі пристрої, на які поширюються файлові системи з пристрою
C<пристрій>.

Якщо у системі наявні не усі пристрої для файлових систем, ця функція
завершується повідомленням про помилку, а для C<errno> встановлюється
значення C<ENODEV>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-filesystem-sync

 btrfs-filesystem-sync файлова_система

Примусово синхронізувати файлову систему btrfs, яку змонтовано до точки
C<файлова_система>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-fsck

 btrfs-fsck пристрій [superblock:N] [repair:true|false]

Використовується для перевірки файлової системи btrfs, C<пристрій> — файл
пристрою, у якому зберігається файлова система.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-image

 btrfs-image 'джерело ...' образ [рівень_стискання:N]

Використовується для створення образу файлової системи btrfs. Усі дані буде
перезаписано нулями, але метадані і подібні дані буде збережено.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-qgroup-assign

 btrfs-qgroup-assign джерело призначення шлях

Додає q-групу C<джерело> до батьківської q-групи C<призначення>. Ця команда
може групувати декілька q-груп до батьківської q-групи для спільного
використання загальних обмежень.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-qgroup-create

 btrfs-qgroup-create ідентифікатор_qgroup підтом

Створити групу квот (q-групу) для підтому C<підтом>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-qgroup-destroy

 btrfs-qgroup-destroy ідентифікатор_qgroup підтом

Знищити групу квот.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-qgroup-limit

 btrfs-qgroup-limit підтом розмір

Обмежити розмір підтому із шляхом C<підтом>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-qgroup-remove

 btrfs-qgroup-remove джерело призначення шлях

Вилучити q-групу C<джерело> з батьківської q-групи C<призначення>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-qgroup-show

 btrfs-qgroup-show шлях

Вивести усі групи квот підтомів у файловій системі btrfs разом із даними
щодо їхнього використання.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-quota-enable

 btrfs-quota-enable файлова_система true|false

Увімкнути або вимкнути підтримку квот підтомів для файлової системи, яка
містить C<шлях>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-quota-rescan

 btrfs-quota-rescan файлова_система

Викинути усі числові дані qgroup і виконати повторне сканування з поточними
налаштуваннями.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-replace

 btrfs-replace пристрій_джерела пристрій_призначення точка_монтування

Замінити пристрій файлової системи btrfs. На «живій» файловій системі
здублювати на пристрій призначення дані, які на поточний момент зберігаються
на пристрої джерела. Після завершення операції пристрій джерела буде витерто
і вилучено з файлової системи.

 C<пристрій_призначення> повинен мати той самий або більший розмір за
C<пристрій_джерела>. Пристрої, які на поточний момент змонтовано, не можна
використовувати як C<пристрій_призначення>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-rescue-chunk-recover

 btrfs-rescue-chunk-recover пристрій

Відновити дерево фрагментів файлової системи btrfs шляхом послідовного
сканування пристроїв.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-rescue-super-recover

 btrfs-rescue-super-recover пристрій

Відновити пошкоджені суперблоки із якісних копій.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-scrub-cancel

 btrfs-scrub-cancel шлях

Скасувати витирання, що виконується у файловій системі btrfs.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-scrub-resume

 btrfs-scrub-resume шлях

Відновити раніше скасований або перерваний зріз на файловій системі btrfs.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-scrub-start

 btrfs-scrub-start шлях

Читає усі дані і метадані на файловій системі і використовує контрольні суми
та копії-дублікати зі сховища даних RAID для ідентифікації та відновлення
усіх пошкоджених даних.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-scrub-status

 btrfs-scrub-status шлях

Показати дані щодо стану витирання, яке виконується або завершено на
файловій системі btrfs.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-set-seeding

 btrfs-set-seeding пристрій true|false

Увімкнути або вимкнути можливість розсіювання для пристрою, на якому
міститься файлова система btrfs.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-subvolume-create

=head2 btrfs-subvolume-create-opts

 btrfs-subvolume-create призначення [ідентифікатор_qgroup:..]

Створити підтом btrfs. Значенням аргументу C<призначення> є каталог
призначення і назва підтому у формі
F</шлях/до/призначення/назва>. Додатковий параметр C<ідентифікатор q-групи>
відповідає q-групі, до якої слід додати створений підтом.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-subvolume-delete

 btrfs-subvolume-delete підтом

Вилучити вказаний за назвою підтом або знімок btrfs.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-subvolume-get-default

 btrfs-subvolume-get-default файлова_система

Отримати типовий підтом або знімок файлової системи, змонтований до точки
C<точка монтування>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-subvolume-list

 btrfs-subvolume-list фс

Виводить список знімків btrfs і підтоми файлової системи btrfs, яку
змонтовано до точки C<файлова_система>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-subvolume-set-default

 btrfs-subvolume-set-default ідентифікатор файлова_система

Встановити підтом файлової системи btrfs C<файлова_система>, який буде
типово змонтовано. Див. L</btrfs-subvolume-list>, щоб отримати список
підтомів.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-subvolume-show

 btrfs-subvolume-show підтом

Повернути докладні дані щодо підтому.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfs-subvolume-snapshot

=head2 btrfs-subvolume-snapshot-opts

 btrfs-subvolume-snapshot джерело призначення [ro:true|false] [qgroupid:..]

Створити знімок підтому btrfs. Значенням аргументу C<призначення> є каталог
призначення і назва знімка у формі F</шлях/до/призначення/назва>. Типово,
новостворений знімок придатний до запису. Якщо значенням додаткового
параметра C<ro> є true, буде створено знімок придатний лише до читання.
Додатковий параметр C<ідентифікатор q-групи> відповідає q-групі, до якої
слід додати створений знімок.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfstune-enable-extended-inode-refs

 btrfstune-enable-extended-inode-refs пристрій

Вмикає розширені посилання на inode.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfstune-enable-skinny-metadata-extent-refs

 btrfstune-enable-skinny-metadata-extent-refs пристрій

Вмикає розширені посилання на спрощені метадані.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 btrfstune-seeding

 btrfstune-seeding пристрій true|false

Увімкнути розсіювання пристрою btrfs. Примусово робить файлову систему
придатною лише для читання, щоб її можна було використовувати для побудови
інших файлових систем.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 c-pointer

 c-pointer

У прив'язках до мов, відмінних від C, ця функція надає змогу отримати
підлеглий вказівник C на дескриптор (тобто L</h *>).  Так зроблено, щоб
уможливити взаємодію інших бібліотек із libguestfs.

=head2 canonical-device-name

 canonical-device-name пристрій

Ця допоміжна функція корисна для показу назв пристроїв користувачеві. Вона
приймає декілька неформатованих назв пристроїв і повертає їх у відповідному
форматі:

=over 4

=item F</dev/hdX>

=item F</dev/vdX>

Дані повертаються у форматі F</dev/sdX>. Зауважте, що це працює для назв
пристроїв і розділів. Це, у наближеному вигляді, обернення алгоритму,
описаного у розділі L<guestfs(3)/ІМЕНУВАННЯ БЛОКОВИХ ПРИСТРОЇВ>.

=item F</dev/mapper/VG-LV>

=item F</dev/dm-N>

Перетворені до форми F</dev/VG/LV> за допомогою L</lvm-canonical-lv-name>.

=back

Інші рядки повертаються незмінними.

=head2 cap-get-file

 cap-get-file шлях

Ця функція повертає можливості Linux, пов'язані із шляхом C<шлях>. Набір
можливостей повертається у текстовій формі (див. L<cap_to_text(3)>).

Якщо з файлом не пов'язано можливостей, буде повернуто порожній рядок.

Працездатність цієї команди залежить від можливості C<linuxcaps>. Див. також
L</feature-available>.

=head2 cap-set-file

 cap-set-file шлях можливості

Ця функція встановлює можливості Linux, пов'язані із шляхом C<шлях>. Набір
можливостей C<можливості> має бути передано у текстовій формі
(див. L<cap_from_text(3)>).

Працездатність цієї команди залежить від можливості C<linuxcaps>. Див. також
L</feature-available>.

=head2 case-sensitive-path

 case-sensitive-path шлях

Цією функцією можна скористатися для використання записів шляхів без
врахування регістру символів у системах із врахуванням регістру у шляхах. Це
може знадобитися при читанні з файлів налаштувань Windows або реєстру
Windows до справжнього шляху.

Команда працює із особливістю драйвера файлових систем ntfs-3g Linux (та,
ймовірно, інших драйверів), яка полягає у тому, що, хоча у підлеглій
файловій системі регістр символів не враховується, драйвер експортує файлову
систему до Linux як таку, де регістр символів враховується.

Одним із наслідків цього є те, що спеціалізовані каталоги, зокрема
F<C:\windows>, можуть показуватися як F</WINDOWS> або F</windows> (або інші
записи), залежно від точних характеристик їхнього створення. У самій Windows
це не спричиняє ніяких проблем.

Вада чи особливість? Вирішувати вам:
L<http://www.tuxera.com/community/ntfs-3g-faq/#posixfilenames1>

L</case-sensitive-path> намагається визначити справжній регістр символів
кожного запису у шляху. Команда повертає визначений шлях, якщо існує
відповідний повний шлях або його батьківський каталог. Якщо існує
батьківський каталог, але повний шлях не існує, буде визначено регістр для
батьківського каталогу, а решту запису буде додано без змін. Наприклад, якщо
існує файл C<"/Windows/System32/netkvm.sys">:

=over 4

=item L</case-sensitive-path> ("/windows/system32/netkvm.sys")

"Windows/System32/netkvm.sys"

=item L</case-sensitive-path> ("/windows/system32/NoSuchFile")

"Windows/System32/NoSuchFile"

=item L</case-sensitive-path> ("/windows/system33/netkvm.sys")

I<ERROR>

=back

I<Зауваження>: через описану вище поведінку L</case-sensitive-path> не можна
використовувати для перевірки наявності файла.

I<Зауваження>: ця функція не обробляє назви дисків, зворотні похилі риски
тощо.

Див. також L</realpath>.

=head2 cat

 cat шлях

Повертає вміст файла із назвою C<шлях>.

Оскільки у C ця функція повертає C<char *>, не існує способу відрізнити
символ C<\0> у вмісті файла і кінець рядка. Для обробки двійкових файлів
скористайтеся функцією L</read-file> або L</download>.

=head2 checksum

 checksum тип_контрольної_суми шлях

Цей виклик обчислює контрольну суму MD5, SHAx або CRC для файла із назвою
C<шлях>.

Тип контрольної суми задається параметром C<тип_контрольної_суми>. Можливі
значення цього параметра:

=over 4

=item C<crc>

Обчислити суму циклічної перевірки надлишковості (CRC) за стандартом POSIX
для команди C<cksum>.

=item C<md5>

Обчислити хеш-суму MD5 (за допомогою програми C<md5sum>).

=item C<sha1>

Обчислити хеш-суму SHA1 (за допомогою програми C<sha1sum>).

=item C<sha224>

Обчислити хеш-суму SHA224 (за допомогою програми C<sha224sum>).

=item C<sha256>

Обчислити хеш-суму SHA256 (за допомогою програми C<sha256sum>).

=item C<sha384>

Обчислити хеш-суму SHA384 (за допомогою програми C<sha384sum>).

=item C<sha512>

Обчислити хеш-суму SHA512 (за допомогою програми C<sha512sum>).

=back

Контрольна сума повертається у форматі рядка, придатного до друку (ASCII)

Для отримання контрольної суми пристрою скористайтеся L</checksum-device>.

Щоб отримати контрольні суми декількох файлів одразу, скористайтеся
C</checksums-out>.

=head2 checksum-device

 checksum-device тип_контрольної_суми пристрій

Цей виклик обчислює контрольну суму MD5, SHAx або CRC для вмісту пристрою із
назвою C<пристрій>. Типи підтримуваних контрольних сум описано у
документації до команди L</checksum> .

=head2 checksums-out

 checksums-out тип_контрольної_суми каталог (файл_сум|-)

Ця команда обчислює контрольні суми звичайних файлів у каталозі F<каталог> і
видає список контрольних сум до локального файла результатів C<файл_сум>.

Командою можна скористатися для перевірки цілісності віртуальної
машини. Втім, щоб забезпечити надійний захист, вам слід звернути увагу на
виведені командою обчислення контрольних сум дані (використовується програма
з GNU coreutils). Зокрема, якщо назва файла складається із символів, які
непридатні до друку, coreutils використовує спеціалізований синтаксис із
символом зворотної похилої риски. Щоб дізнатися більше, ознайомтеся із
файлом info GNU coreutils.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 chmod

 chmod режим шлях
Змінити режим (права доступу) для шляху C<шлях> на C<режим>. Передбачено
підтримку лише числових записів режимів.

I<Зауваження>: при використанні цієї команди з guestfish, C<режим>, типово,
має бути вказано у десятковій формі, якщо не буде додано префікса C<0> для
вісімкової форми запису, тобто слід вказувати C<0700> замість C<700>.

На встановлений режим доступу впливає umask.

=head2 chown

 chown власник група шлях

Змінити власника файла на C<власник> і групу на C<група>.

Передбачено підтримку лише числових uid і gid. Якщо ви хочете скористатися
текстовими назвами, вам доведеться знайти і обробити файл паролів власноруч
(підтримка Augeas робить це завдання відносно простим).

=head2 clear-backend-setting

 clear-backend-setting назва

Якщо рядок параметрів модуля дорівнює C<"name"> або починається з
C<"name=">, цей рядок вилучається з параметрів модуля.

Цей виклик повертає кількість рядків, які було вилучено (може бути значення
0, 1 або більше за 1).

Див. L<guestfs(3)/МОДУЛЬ>, L<guestfs(3)/ПАРАМЕТРИ МОДУЛЯ>.

=head2 command

 command 'параметри...'

Цей виклик запускає команду з гостьової файлової системи. Файлову систему
має бути змонтовано, вона має містити сумісну операційну систему (тобто
якусь систему Linux із такою або сумісною архітектурою процесора).

Єдиним параметром є список аргументів у стилі argv. Першим елементом цього
списку є назва програми, яку слід запустити. Наступні елементи є параметрами
цієї програми. Список має бути непорожнім (тобто містити принаймні назву
програми). Зауважте, що команда працює безпосередньо і I<не> викликає
командної оболонки (див. L</sh>).

Повернутим значенням є усі дані, виведені командою до I<stdout>.

Якщо команда повертає ненульовий стан виходу, тоді ця функція повертає
повідомлення про помилку. Рядок повідомлення про помилку міститиме вміст
I<stderr> від команди.

Змінна середовища C<$PATH> міститиме принаймні F</usr/bin> і F</bin>. Якщо
вам потрібна програм з іншої теки, вам слід вказати шлях до неї повністю у
першому параметрі.

Бібліотеки спільного використання та файли даних, потрібні для запуску
програми, мають бути доступними у файлових системах, які змонтовано до
належних точок монтування. Забезпечити відповідність монтування усіх
файлових систем має функція або програма, з якої викликається команда.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 command-lines

 command-lines 'аргументи...'

Те саме, що і L</command>, але результат буде поділено на список рядків.

Див. також L</sh-lines>

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 compress-device-out

 compress-device-out тип_стискання пристрій (z-пристрій|-) [рівень:N]

Ця команда стискає вміст пристрою C<пристрій> і записує його до локального
файла C<z-пристрій>.

Параметр C<тип_стискання> і необов'язковий параметр C<рівень> мають те саме
значення, що і у команді L</compress-out>.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 compress-out

 compress-out тип_стискання файл (z-файл|-) [рівень:N]

Ця команда стискає вміст файла C<файл> і записує його до локального файла
C<z-файл>.

Вибір програми для стискання керується параметром C<тип_стискання>. Поточні
варіанти значень: C<compress>, C<gzip>, C<bzip2>, C<xz> або C<lzop>. У
деяких збірках libguestfs передбачено підтримку не усіх типів
стискання. Якщо підтримки типу стискання не передбачено, буде виведено
повідомлення про помилку, яке міститиме рядок «not supported».

Необов'язковий параметр C<рівень> керує рівнем стискання. Значення і типові
параметри залежать від використаної програми для стискання.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 config

 config параметр-г-в значення-г-в

Цією командою можна скористатися для додавання довільних параметрів
гіпервізору у формі I<-параметр значення>. Насправді, параметр не є зовсім
довільним — ми не даємо вам встановлювати певні параметри, які суперечать
параметрам, які ви використовуєте.

Першим символом рядка C<параметр-г-в> має бути C<-> (дефіс).

C<hvvalue> може дорівнювати NULL.

=head2 copy-attributes

 copy-attributes джерело призначення [all:true|false] [mode:true|false] [xattributes:true|false] [ownership:true|false]

Копіювати атрибути шляху (який може вказувати на файл або каталог) до іншого
шляху.

Типово, атрибут C<не> копіюється, отже, переконайтеся, що щось вказано (або
вкажіть C<all>, щоб скопіювати усі).

Додаткові аргументи вказують, які атрибути має бути скопійовано:

=over 4

=item C<mode>

Копіювати частину режиму файла з запису C<джерело> до запису
C<призначення>. Скопіювати можна лише права доступу UNIX і липкі біти,
setuid або setgid.

=item C<xattributes>

Копіювати розширені атрибути Linux (xattrs) з запису C<джерело> до запису
C<призначення>. Цей прапорець не виконує ніяких дій, якщо можливість
I<linuxxattrs> недоступна (див. L</feature-available>).

=item C<ownership>

Копіювати uid власника і gid групи з запису C<джерело> до запису
C<призначення>.

=item C<all>

Копіювати B<усі> атрибути із запису C<джерело> до запису
C<призначення>. Вмикання цього прапорця вмикає усі інші прапорці, якщо їх ще
не було вказано.

=back

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 copy-device-to-device

 copy-device-to-device джерело призначення [srcoffset:N] [destoffset:N] [size:N] [sparse:true|false] [append:true|false]

Чотири команди L</copy-device-to-device>, L</copy-device-to-file>,
L</copy-file-to-device> та L</copy-file-to-file> надають вам змогу
скопіювати джерело (пристрій або файл) до призначення (пристрою або файла).

Можливе створення часткових копій, оскільки ви можете додатково вказати
зміщення у джерелі, зміщення у призначенні і розмір копії. Усі ці значення
слід вказувати у байтах. Якщо значення не вказано, обидва зміщення
вважатимуться нульовими, а розмір копії вважатиметься якомога більшим, аж
доки під час копіювання не буде досягнуто кінця джерела.

Джерело і призначення можуть бути одним і тим самим об'єктом. Втім, області
перекриття може бути скопійовано неправильно.

Якщо призначенням є файл, його буде, якщо потрібно, створено. Якщо файл
призначення є недостатньо великим, його буде розширено.

Якщо призначенням є файл і не встановлено прапорець C<append>, файл
призначення буде обрізано. Якщо встановлено прапорець C<append>, копію буде
дописано до початкового файла призначення. У поточній версії прапорець
C<append> не можна встановлювати для пристроїв.

Якщо значенням прапорця C<sparse> є true, виклик уникатиме запису блоку, які
містять лише нулі, що має допомогти у певних ситуаціях, коли резервний диск
є обмеженим у ресурсах. Зауважте, що якщо призначення ще не занулено,
використання цього параметра призведе до некоректних результатів.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 copy-device-to-file

 copy-device-to-file джерело призначення [srcoffset:N] [destoffset:N] [size:N] [sparse:true|false] [append:true|false]

Див. L</copy-device-to-device>, щоб ознайомитися із загальним оглядом цього
виклику.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 copy-file-to-device

 copy-file-to-device джерело призначення [srcoffset:N] [destoffset:N] [size:N] [sparse:true|false] [append:true|false]

Див. L</copy-device-to-device>, щоб ознайомитися із загальним оглядом цього
виклику.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 copy-file-to-file

 copy-file-to-file джерело призначення [srcoffset:N] [destoffset:N] [size:N] [sparse:true|false] [append:true|false]

Див. L</copy-device-to-device>, щоб ознайомитися із загальним оглядом цього
виклику.

Це B<не> функція для копіювання файлів. Цю функцію призначено для копіювання
блоків у наявних файлах. Загальними функціями для копіювання та пересування
файлів є функції L</cp>, L</cp-a> та L</mv>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 copy-size

 copy-size джерело призначення розмір

Ця команда копіює точно C<розмір> байтів з одного пристрою або файла джерела
C<джерело> до іншого пристрою або файла C<призначення>.

Зауважте, що команду не вдасться виконати успішно, якщо джерело є надто
малим або призначення є недостатньо великим.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</copy-device-to-device>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 cp

 cp джерело призначення

Копіює файл з C<джерело> до C<призначення>, де C<призначення> — або назва
файла призначення або назва каталогу призначення.

=head2 cp-a

 cp-a джерело призначення

Копіює файл або каталог з C<джерела> до C<призначення> рекурсивно з
використанням команди C<cp -a>.

=head2 cp-r

 cp-r джерело призначення

Копіює файл або каталог з C<джерела> до C<призначення> рекурсивно з
використанням команди C<cp -rP>.

Більшості користувачів слід використовувати L</cp-a> замість цієї
команди. Ця команда корисна, якщо вам не хочеться зберігати права доступу,
оскільки у файловій системі призначення їх не передбачено (в основному при
записів до файлових систем FAT DOS).

=head2 cpio-out

 cpio-out каталог (файл cpio|-) [format:..]

Ця команда пакує вміст каталогу F<каталог> отримує його до локального файла
C<файл cpio>.

Передбачено додатковий параметр C<format>, яким можна скористатися для
вибору формату. У поточній версії передбачено підтримку лише таких форматів:

=over 4

=item C<newc>

Новий портативний формат (SVR4). Цей формат вважається сумісним із
cpio-подібним форматом, який використовується ядром Linux для initramfs.

Цей формат є типовим.

=item C<crc>

Новий портативний формат (SVR4) із контрольною сумою.

=back

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 dd

 dd джерело призначення

Ця команда копіює з одного пристрою або файла джерела C<джерело> до іншого
пристрою або файла C<призначення>.  Зазвичай, цією командою слід
користуватися для копіювання на пристрій чи розділ з пристрою чи розділу,
наприклад, для дублювання файлової системи.

Якщо призначенням є пристрій, він має бути таким самим або більшим за
розміром за файл або пристрій джерела, інакше копіювання виконати не
вдасться. Ця команда не може виконувати часткове копіювання
(див. L</copy-device-to-device>).

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</copy-device-to-device>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 device-index

 device-index пристрій

Ця функція приймає назву пристрою (наприклад, «/dev/sdb») і повертає індекс
пристрою у списку пристроїв.

Нумерація індексів починається з 0. Іменований пристрій має існувати,
наприклад, як рядок, повернутий з L</list-devices>.

Див. також L</list-devices>, L</part-to-dev>.

=head2 df

 df

Ця команда запускає програму C<df> для отримання даних щодо використаного
місця на диску.

Ця команда здебільшого корисна для інтерактивних сеансів. Її I<не>
призначено для випадків, коли ви намагаєтеся обробити виведений командою
рядок. Скористайтеся командою L</statvfs>, якщо віддаєте команди з інших
програм.

=head2 df-h

 df-h

Ця команда запускає програму C<df -h> для отримання даних щодо використаного
місця на диску у зручному для читання форматі.

Ця команда здебільшого корисна для інтерактивних сеансів. Її I<не>
призначено для випадків, коли ви намагаєтеся обробити виведений командою
рядок. Скористайтеся командою L</statvfs>, якщо віддаєте команди з інших
програм.

=head2 disk-create

 disk-create назва_файла формат розмір [backingfile:..] [backingformat:..] [preallocation:..] [compat:..] [clustersize:N]

Створити порожній образ диска із назвою F<назва_файла> (файл основної
системи) із форматом C<формат> (зазвичай, C<raw> або C<qcow2>). Розмір
визначається параметром C<розмір> у байтах.

Якщо команда використовується із необов'язковим параметром C<backingfile>,
знімок створюється на основі файла резервної копії. У цьому випадку
C<розмір> має бути передано як C<-1>. Розмір знімка є таким самим, як і
розмір файла резервної копії, який визначається автоматично. Вам також варто
передати C<backingformat> для опису формату C<backingfile>.

Якщо F<назва_файла> відповідає блоковому пристрою, пристрій буде
форматовано. Параметр C<розмір> ігнорується, оскільки блокові пристрої мають
незмінний встановлений розмір.

Іншими необов’язковими параметрами є:

=over 4

=item C<preallocation>

Якщо форматом є C<raw>, цей параметр може мати значення C<off> (або
C<sparse>) або C<full> для створення розрідженого або повністю розподіленого
файла, відповідно. Типовим є значення C<off>.

Якщо форматом є C<qcow2>, цей параметр може мати значення C<off> (або
C<sparse>), C<metadata> або C<full>. Попереднє отримання місця під метадані
є швидшим, коли виконується багато записів, але використовує більше
місця. Типовим є значення C<off>.

=item C<compat>

Лише C<qcow2>: передайте рядок C<1.1>, щоб скористатися розширеним форматом
qcow2, підтримку якого передбачено у qemu E<ge> 1.1.

=item C<clustersize>

Лише C<qcow2>: змінити розмір кластера qcow2. Типовим є 65536
(байтів). Встановлювати можна будь-яке значення, яке є степенем двійки від
512 до 2097152.

=back

Зауважте, що цей виклик не додає новий диск до дескриптора. Вам доведеться
викликати L</add-drive-opts> окремо.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 disk-format

 disk-format назва файла

Визначити і повернути формат образу диска із назвою
F<назва_файла>. Значенням F<назва_файла> може бути також пристрій основної
системи. Якщо формат образу диска визначити не вдасться, буде повернуто
рядок C<"unknown">.

Зауважте, що визначення формату диска може бути небезпечною дією за певних
обставин. Див. L<guestfs(3)/CVE-2010-3851>.

Див. також: L<guestfs(3)/ФОРМАТИ ОБРАЗІВ ДИСКІВ>

=head2 disk-has-backing-file

 disk-has-backing-file назва_файла

Визначає і повідомляє, чи є у образу диска F<назва_файла> файл резервної
копії.

Зауважте, що визначення можливостей диска може, за певних обставин,
зашкодити захисту системи. Див. L<guestfs(3)/CVE-2010-3851>.

=head2 disk-virtual-size

 disk-virtual-size назва файла

Визначає і повідомляє віртуальний розмір у байтах образу диска із назвою
F<назва_файла>.

Зауважте, що визначення можливостей диска може, за певних обставин,
зашкодити захисту системи. Див. L<guestfs(3)/CVE-2010-3851>.

=head2 dmesg

 dmesg

Повертає повідомлення ядра (виведення команди C<dmesg>) гостьової
системи. Іноді корисно для розширеної діагностики проблеми.

Іншим способом отримання тих самих даних є вмикання докладних повідомлень за
допомогою L</set-verbose> або встановленням змінної середовища
C<LIBGUESTFS_DEBUG=1> перед запуском програми.

=head2 download

 download назва_віддаленого_файла (назва_файла|-)

Отримати файл F<назва_віддаленого_файла> і зберегти його як F<назва_файла>
на локальній машині.

Значенням параметра F<назва_файла> також може бути іменований канал обробки
даних.

Див. також L</upload>, L</cat>.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 download-blocks

 download-blocks пристрій початок кінець (назва_файла|-) [unallocated:true|false]

Отримати модулі даних з адреси F<початок> до адреси F<кінець> з розділу
диска (наприклад F</dev/sda1>) і зберегти їх до файла F<назва_файла> у
локальній машині.

Використання цього програмного інтерфейсу на форматах образів розріджених
дисків, зокрема QCOW може призвести до великих заповнених нулями файлів,
отриманих до основної системи.

Розмір модуля даних залежить від реалізації файлової системи. На файлових
системах NTFS модулі даних називаються кластерами, а у ExtX вони називаються
фрагментами.

Якщо для необов'язкового прапорця C<unallocated> встановлено значення true
(типовим значенням є false), буде видобуто лише нерозміщені блоки. Це
корисно для виявлення прихованих даних або отримання вилучених файлів,
модулі даних яких ще не перезаписано.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<sleuthkit>. Див. також
L</feature-available>.

=head2 download-inode

 download-inode пристрій inode (назва_файла|-)

Отримати файл, заданий за допомогою inode, з розділу диска (наприклад
F</dev/sda1>) і зберегти його із назвою F<назва_файла> у локальній системі.

Для виконання цієї команди диск не обов'язково має бути змонтовано.

Команда здатна отримувати вилучені файли та файли недоступні системі.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

Працездатність цієї команди залежить від можливості C<sleuthkit>. Див. також
L</feature-available>.

=head2 download-offset

 download-offset назва_віддаленого_файла (назва_файла|-) відступ розмір

Отримати файл F<назва_віддаленого_файла> і зберегти його як F<назва_файла>
на локальній машині.

Читання відбувається з файла F<назва_віддаленого_файла>, розмір визначається
параметром C<розмір>, читання розпочинається з позиції C<відступ> (вказана
область має перебувати у межах файла або пристрою).

Зауважте, що немає обмеження на обсяг даних, які може бути отримано за
допомогою цього виклику, на відміну від команди L</pread>, і цей виклик
завжди читає дані до кінця, якщо не станеться помилки.

Див. також L</download>, L</pread>.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 drop-caches

 drop-caches що_скидати

Це наказує ядру гостьової системи скинути кеш сторінок і/або кеші d-записів
та inode. Параметр C<що_скидати> вказує ядру, що саме слід скидати,
див. L<http://linux-mm.org/Drop_Caches>

Встановлення для C<що_скидати> значення 3 призведе до скидання усього.

Це автоматично викликає L<sync(2)> перед операцією, отже вивільняє
максимальний обсяг пам'яті гостьової системи.

=head2 du

 du шлях

Ця команда викликає команду C<du -s> для оцінки використання місця на диску
для шляху C<шлях>.

C<шлях> може бути адресою файла або каталогу. Якщо C<шлях> є каталогом,
оцінка включатиме дані для самого каталогу та усіх його підкаталогів
(рекурсивно).

Результатом є оцінка розміру у I<кілобайтах> (тобто у одиницях, які
відповідають 1024 байтам).

=head2 e2fsck

 e2fsck пристрій [correct:true|false] [forceall:true|false]

Ця команда виконує перевірку файлової системи ext2/ext3 на пристрої
C<пристрій>. Вона може приймати такі необов'язкові аргументи:

=over 4

=item C<correct>

Автоматично виправляти файлову систему. Використання цього параметра
призведе до того, що e2fsck автоматично виправлятиме усі проблеми файлової
системи, які може бути безпечно виправлено без втручання людини.

Цей параметр не можна використовувати одночасно із параметром C<forceall>.

=item C<forceall>

Припускати відповідь «так» на усі питання; уможливлює неінтерактивне
використання e2fsck.

Цей параметр не можна використовувати одночасно із параметром C<correct>.

=back

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 e2fsck-f

 e2fsck-f пристрій

Ця команда виконує команду C<e2fsck -p -f пристрій>, тобто запускає засіб
перевірки файлової системи ext2/ext3 для пристрою C<пристрій> у
неінтерактивному режимі (I<-p>), навіть якщо файлову систему позначено як
безпомилкову (I<-f>).

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</e2fsck>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 echo-daemon

 echo-daemon 'слова ...'

Ця команда з'єднує список слів C<слова>, у якому окремі слова розділено
пробілами, і повертає рядок-результат.

Ви можете скористатися цією командою для перевірки з'єднання із фоновою
службою.

Див. також L</ping-daemon>.

=head2 egrep

 egrep формальний_вираз шлях

Викликає зовнішню програму C<egrep> і повертає рядки-відповідники.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 egrepi

 egrepi формальний_вираз шлях

Викликає зовнішню програму C<egrep -i> і повертає рядки-відповідники.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 equal

 equal файл1 файл2

Порівнює два файли, F<файл1> і F<файл2> і повертає true, якщо їхній вміст
повністю ідентичний; якщо це не так, повертає false.

Для порівнювання використовується зовнішня програма L<cmp(1)>.

=head2 exists

 exists шлях

Ця команда повертає C<true> тоді і лише тоді, коли існує файл, каталог (або
будь-який інший об'єкт файлової системи) із вказаною назвою C<шлях>.

Див. також L</is-file>, L</is-dir>, L</stat>.

=head2 extlinux

 extlinux каталог

Встановлює завантажувач SYSLINUX на пристрій, змонтований до каталогу
F<каталог>. На відміну від команди L</syslinux>, якій потрібна файлова
система FAT, ця команда може бути використана для файлових систем ext2/3/4
та btrfs.

Параметр F<каталог> може бути точкою монтування або каталогом у точці
монтування.

Крім того, вам слід позначити розділ як «активний» (L</part-set-bootable>),
і на першому секторі усього диска має бути встановлено MBR (наприклад, за
допомогою L</pwrite-device>). До складу пакунка SYSLINUX включено деякі з
відповідних MBR. Щоб дізнатися більше, див. сторінку підручника
L<extlinux(1)>.

Додатково налаштувати SYSLINUX можна за допомогою файла із назвою
F<extlinux.conf> у каталозі файлової системи F<каталог>. Докладніше про це
та вміст файла можна дізнатися зі сторінки підручника L<extlinux(1)>.

Див. також L</syslinux>.

Працездатність цієї команди залежить від можливості C<extlinux>. Див. також
L</feature-available>.

=head2 f2fs-expand

 f2fs-expand device

This expands a f2fs filesystem to match the size of the underlying device.

This command depends on the feature C<f2fs>.  See also
L</feature-available>.

=head2 fallocate

 fallocate шлях довжина

Ця команда отримує місце для файла (заповнене нульовими байтами) із назвою
C<шлях> і розміром C<довжина> байтів. Якщо файл вже існує, його буде
перезаписано.

Не слід плутати цю команду із специфічною для guestfish командою C<alloc>,
яка отримує місце для файла у основній системі і долучає його як пристрій.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</fallocate64>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 fallocate64

 fallocate64 шлях довжина

Ця команда отримує місце для файла (заповнене нульовими байтами) із назвою
C<шлях> і розміром C<довжина> байтів. Якщо файл вже існує, його буде
перезаписано.

Зауважте, що ця команда отримує блоки на диску для файла. Щоб створити
розріджений файл, скористайтеся L</truncate-size>.

Застаріла команда L</fallocate> виконує те саме завдання, але через недогляд
функція надає змогу використовувати лише 30-бітові довжини, що обмежує
максимальний можливий розмір створених за допомогою цієї команди файлів 1
ГБ.

Не слід плутати цю команду із специфічними для guestfish командами C<alloc>
та C<sparse>, які створюють файл у основній системі і долучають його як
пристрій.

=head2 feature-available

 feature-available 'групи ...'

Те саме, що і L</available>, але повертає простий результат у булевій формі
true або false замість виклику виключення, якщо можливості не буде
виявлено. Із іншими аспектами документації можна ознайомитися у розділі
L</available>.

=head2 fgrep

 fgrep шаблон шлях

Викликає зовнішню програму C<fgrep> і повертає рядки-відповідники.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 fgrepi

 fgrepi шаблон шлях

Викликає зовнішню програму C<fgrep -i> і повертає рядки-відповідники.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 файл

 file шлях

Для визначення типу або вмісту файла використовується стандартна програма
L<file(1)>.

Цей виклик також прозоро обробляє різні типи стиснутих файлів.

Команда, яку буде виконано, — це C<file -zb шлях>. Зокрема, слід зауважити,
що до виведених даних не буде додано назву файла (параметр I<-b>).

Виведені дані залежать від того, що виведе підлегла команда L<file(1)>, їх
може бути змінено у майбутньому у спосіб, який залишається поза нашим
контролем. Іншими словами, ABI щодо виведених даних не гарантовано.

Див. також L<file(1)>, L</vfs-type>, L</lstat>, L</is-file>, L</is-blockdev>
(тощо), L</is-zero>.

=head2 file-architecture

 file-architecture назва_файла

Визначає архітектуру виконуваного файла F<назва_файла> і повертає її
значення, якщо воно визначене у програмі.

Архітектурами, визначеними у поточній версії є:

=over 4

=item "aarch64"

64-бітовий ARM.

=item "arm"

32-бітовий ARM.

=item "i386"

Цей рядок буде повернуто для всіх виконуваних файлів для 32-бітових
процесорів i386, i486, i586, i686, незалежно від точного значення версії
процесора, визначеного для виконуваного файла.

=item "ia64"

Intel Itanium.

=item "ppc"

32-бітовий Power PC.

=item "ppc64"

64-бітовий Power PC (зворотний порядок байтів).

=item "ppc64le"

64-бітовий Power PC (прямий порядок байтів).

=item "riscv32"

=item "riscv64"

=item "riscv128"

32-, 64- і 128- бітові різновиди RISC-V.

=item "s390"

31-бітовий IBM S/390.

=item "s390x"

64-бітовий IBM S/390.

=item "sparc"

32-бітовий SPARC.

=item "sparc64"

64-бітовий SPARC V9 або новіша версія.

=item "x86_64"

64-бітовий x86-64.

=back

У майбутніх версіях Libguestfs може повертати і інші рядки назв архітектур.

Функція працює принаймні для таких типів файлів:

=over 4

=item *

багатьох типів виконуваних файлів Un*x та Linux

=item *

багатьох типів бібліотек спільного використання Un*x та Linux

=item *

виконуваних файлів Windows Win32 та Win64

=item *

DLL Windows Win32 і Win64

виконувані файли та DLL Win32 повертають C<i386>.

виконувані файли та DLL Win64 повертають C<x86_64>.

=item *

модулів ядра Linux

=item *

образів нового стилю initrd Linux

=item *

деяких ядер vmlinuz Linux для архітектур, відмінних від x86

=back

Що не можна зробити у поточній версії:

=over 4

=item *

статичні бібліотеки (libfoo.a)

=item *

initrd Linux у старому стилі, зі стиснутою файловою системою ext2 (RHEL 3)

=item *

ядра vmlinuz Linux x86

Образи vmlinuz архітектури x86 (формат bzImage) складаються із суміші
16-бітового, 32-бітового і стисненого коду. Їх дуже важко
розпаковувати. Якщо ви хочете визначити архітектуру ядра, скористайтеся
архітектурою пов'язаного initrd або модулів ядра.

=back

=head2 filesize

 filesize файл

Ця команда повертає розмір файла F<файл> у байтах.

Щоб отримати інші статистичні дані щодо файла, скористайтеся L</stat>,
L</lstat>, L</is-dir>, L</is-file> тощо. Щоб отримати розмір блокового
пристрою, скористайтеся L</blockdev-getsize64>.

=head2 filesystem-available

 filesystem-available файлова_система

Перевірити, чи передбачено у libguestfs підтримку вказаної за назвою
файлової системи. Аргумент C<файлова_система> є назвою файлової системи,
наприклад, C<ext3>.

Перед використанням цієї команди вам слід викликати C</launch>.

Головним чином корисне для перевірки того, що підтримки не передбачено. Те,
що команда повертає true, ще не означає, що певну файлову систему може бути
створено чи змонтовано, оскільки помилки можуть траплятися через інші
причини, зокрема невідповідність версії файлової системи, несумісність
можливостей або недоступність належного засобу
mkfs.E<lt>I<файлова_система>E<gt>.

Див. також L</available>, L</feature-available>, L<guestfs(3)/AVAILABILITY>.

=head2 filesystem-walk

 filesystem-walk пристрій

Пройтися внутрішньою структурою розділу диска (наприклад F</dev/sda1>) з
метою визначення і повернення списку усіх файлів та каталогів, які на ньому
зберігаються.

Для виконання цієї команди монтування розділу диска не є обов'язковим.

Буде повернуто усі записи у файловій системі. Ця функція може виводити
список вилучених або недоступних файлів. Записи I<не> упорядковуються.

Структура C<tsk_dirent> містить вказані нижче поля.

=over 4

=item C<tsk_inode>

Номер вузла у файловій системі. Може дорівнювати C<0>, якщо вузол було
вилучено.

=item C<tsk_type>

Базові дані щодо типу файлів. Докладний список значень наведено нижче.

=item C<tsk_size>

Розмір файла у байтах. Може мати значення C<-1>, якщо вузол файла було
вилучено.

=item C<tsk_name>

Шлях до файла відносно його каталогу.

=item C<tsk_flags>

Бітове поле, яке містить додаткові дані щодо запису. Є результатом
застосування логічного АБО до таких значень:

=over 4

=item 0x0001

Якщо встановлено значення C<1>, файл розміщено у файловій системі, і файл є
видимим. Якщо ні, файл було вилучено. За певних обставин функцією
C<download_inode> можна скористатися для відновлення вилучених файлів.

=item 0x0002

У деяких файлових системах, зокрема NTFS та Ext2 і новіших, назву файла
відокремлено від структури метаданих. Цей біт встановлюється у значення
C<1>, якщо назва файла перебуває у нерозміщеному стані, а структура даних —
у розміщеному. Це, загалом кажучи, неявно вказує на те, що метадані було
повторно використано для нового файла. Тому дані щодо типу файла, розміру
файла, часових позначок, кількості посилань та призначення символічного
посилання можуть не відповідати даним початкового вилученого запису.

=item 0x0004

Цей біт встановлюється у значення C<1>, якщо файл було стиснуто з
використанням вбудованої підтримки стискання у файловій системі
(NTFS). Програмний інтерфейс не може визначити застосований рівень
стискання.

=back

=item C<tsk_atime_sec>

=item C<tsk_atime_nsec>

=item C<tsk_mtime_sec>

=item C<tsk_mtime_nsec>

=item C<tsk_ctime_sec>

=item C<tsk_ctime_nsec>

=item C<tsk_crtime_sec>

=item C<tsk_crtime_nsec>

Час доступу, внесення змін, останньої зміни стану та часу створення,
відповідно, у форматі Unix, визначений у секундах і наносекундах.

=item C<tsk_nlink>

Кількість назв файлів, які вказують на цей запис.

=item C<tsk_link>

Якщо записом є символічне посилання, у цьому полі міститиметься шлях до
файла призначення.

=back

Поле C<tsk_type> міститиме один із таких символів:

=over 4

=item 'b'

Блоковий особливий

=item 'c'

Символьний особливий

=item 'd'

Каталог

=item 'f'

FIFO (іменований канал)

=item 'l'

Символічне посилання

=item 'r'

Звичайний файл

=item 's'

Сокет

=item 'h'

Тіньовий inode (Solaris)

=item 'w'

Витерти inode (BSD)

=item 'u'

Невідомий тип файла

=back

Працездатність цієї команди залежить від можливості C<libtsk>. Див. також
L</feature-available>.

=head2 fill

 fill c кількість шлях

Ця команда створює новий файл із назвою C<шлях>. Спочатку файл буде
заповнено вісімковими значеннями до довжини C<кількість>. Вісімкове значення
задається параметром C<c>, де C<c> має бути числом у діапазоні C<[0..255]>.

Для заповнення файла нульовими байтами (розріджено) набагато ефективнішим є
використання L</truncate-size>. Для створення файла, заповненого
повторюваними вказаними послідовностями байтів, скористайтеся командою
L</fill-pattern>.

=head2 fill-dir

 fill-dir каталог число

Ця корисна для тестування файлових систем функція створює C<число> порожніх
файлів у каталозі C<каталог> із назвами від C<00000000> до C<число-1> (тобто
кожна назва файла складається з 8 цифр, які доповнено нулями).

=head2 fill-pattern

 fill-pattern взірець кількість шлях

Ця функція подібна до L</fill>, але створює файл довжини C<кількість>,
заповнений повторюваними наборами байтів C<взірець>. Якщо потрібно, взірець
буде обрізано так, щоб довжина файла складала точно C<кількість> байтів.

=head2 find

 find каталог

Ця команда виводить список усіх файлів і каталогів, рекурсивно, починаючи з
каталогу F<каталог>. В основному, еквівалентна команді оболонки C<find
каталог -print>, але виведені дані буде дещо оброблено. Опис обробки
наведено нижче.

Ця команда повертає список рядків I<без будь-якого префікса>. Отже, якщо
структура каталогів є такою:

 /tmp/a
 /tmp/b
 /tmp/c/d

повернутий L</find> F</tmp> список складатиметься з 4 елементів:

 a
 b
 c
 c/d

Якщо F<каталог> не є каталогом, ця команда повертає помилку.

Список результатів буде впорядковано.

=head2 find0

 find0 каталог (файли|-)

Ця команда виводить список усіх файлів і каталогів, рекурсивно, починаючи з
каталогу F<каталог>, записуючи отриманий список до зовнішнього файла із
назвою F<файли>.

Ця команда працює так само, як L</find>, за такими виключеннями:

=over 4

=item *

Список результат записується до зовнішнього файла.

=item *

Записи (назви файлів) у результаті буде відокремлено символами
C<\0>. Див. параметр L<find(1)> I<-print0>.

=item *

Список результатів не буде впорядковано.

=back

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 find-inode

 find-inode пристрій inode

Шукає усі записи, пов'язані із заданим inode.

Для кожного запису буде повернуто структуру
C<tsk_dirent>. Див. C<filesystem_walk>, щоб дізнатися більше про структури
C<tsk_dirent>.

Працездатність цієї команди залежить від можливості C<libtsk>. Див. також
L</feature-available>.

=head2 findfs-label

 findfs-label мітка

Ця команда виконує пошук у файлових системах і повертає ту з них, яка має
вказану мітку. Якщо таких систем не буде знайдено, буде повернуто
повідомлення про помилку.

Для визначення мітки файлової системи скористайтеся L</vfs-label>.

=head2 findfs-uuid

 findfs-uuid uuid

Ця команда виконує пошук у файлових системах і повертає ту з них, яка має
вказаний UUID. Якщо таких систем не буде знайдено, буде повернуто
повідомлення про помилку.

Для визначення UUID файлової системи скористайтеся L</vfs-uuid>.

=head2 fsck

 fsck тип_файлової_системи пристрій

Виконує перевірку файлової системи (fsck) на пристрої C<пристрій>, де дані
зберігаються у файловій системі типу C<тип_файлової_системи>.

Повернуте ціле число є станом. Зі списком кодів стану C<fsck> можна
ознайомитися у документації до L<fsck(8)>.

Нотатки:

=over 4

=item *

Якщо кодів стану декілька, виводиться їхня сума.

=item *

Ненульовий повернутий код може означати «успіх», наприклад, якщо помилки у
файловій системі було виправлено.

=item *

Підтримки перевірки або відновлення томів NTFS не передбачено (у
linux-ntfs).

=back

Ця команда повністю еквівалентна запуску C<fsck -a -t тип_файлової_системи
пристрій>.

=head2 fstrim

 fstrim точка_монтування [offset:N] [length:N] [minimumfreeextent:N]

Обрізати вільне місце на файловій системі, змонтованій до точки монтування
C<точка_монтування>. Файлову систему має бути змонтовано для читання і
запису.

Вміст файлової системи змінено не буде, але усе вільне місце на ній буде
«обрізано», тобто, якщо розглядати пристрій основної системи, повернуто до
пристрою, що зробить образ диска розрідженішим і уможливить повторне
використання невикористаного простору у файлах qcow2 тощо.

Ця операція потребує підтримки у libguestfs, змонтованій файловій системі,
файловій системі основної системи, qemu та ядрі основної системи. Якщо цієї
підтримки немає, операція призведе до помилки або навіть виконуватиметься.

Якщо у драйвері віртуальної файлової системи ядра не передбачено обрізання,
цей виклик завершиться повідомленням про помилку із номером помилки
C<ENOTSUP>. У поточній версії таке трапляється під час спроб обрізання
файлових систем FAT.

Див. також L</zero-free-space>. Це дещо інша операція, яка занулює вільне
місце у файловій системі. Ви можете викликати L</fstrim> замість команди або
після команди L</zero-free-space>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<fstrim>. Див. також
L</feature-available>.

=head2 get-append

 get-append

Повертає додаткові параметри ядра, які було додано до командного рядка ядра
базової системи libguestfs.

Якщо повернуто C<NULL>, до командного рядка не додавалося параметрів.

=head2 get-attach-method

 get-attach-method

Повертає назву поточного модуля.

Див. L</set-backend> та L<guestfs(3)/МОДУЛЬ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</get-backend>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 get-autosync

 get-autosync

Отримати значення прапорця автоматичної синхронізації.

=head2 get-backend

 get-backend

Повертає назву поточного модуля.

Ця властивість дескриптора раніше називалася «метод долучення».

Див. L</set-backend> та L<guestfs(3)/МОДУЛЬ>.

=head2 get-backend-setting

 get-backend-setting назва

Знайти рядок параметрів модуля обробки, який або дорівнює C<"назва">, або
починається із запису C<"назва=">. Якщо знайдено рядок C<"назва">, буде
повернуто рядок C<"1">. Якщо знайдено рядок C<"назва=">, буде повернуто
частину рядка після знаку рівності (може бути повернуто порожній рядок).

Якщо відповідного параметра не знайдено, ця функція повертає повідомлення
про помилку. У такому випадку для номера помилки (див. L</last-errno>) буде
встановлено значення C<ESRCH>.

Див. L<guestfs(3)/МОДУЛЬ>, L<guestfs(3)/ПАРАМЕТРИ МОДУЛЯ>.

=head2 get-backend-settings

 get-backend-settings

Повертає поточні параметри модуля.

Цей виклик повертає рядки параметрів усіх модулів. Якщо вам потрібен лише
один параметр модуля, скористайтеся  командою L</get-backend-setting>.

Див. L<guestfs(3)/МОДУЛЬ>, L<guestfs(3)/ПАРАМЕТРИ МОДУЛЯ>.

=head2 get-cachedir

 get-cachedir

Отримати назву каталогу, який використовується дескриптором для зберігання
кешу базової системи.

=head2 get-direct

 get-direct

Повертає значення прапорця безпосередньої роботи із базовою системою.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</internal-get-console-socket>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 get-e2attrs

 get-e2attrs файл

Ця команда повертає атрибути файла, пов'язані із назвою F<файл>.

Атрибути є пов'язаним зі кожним записом inode набором бітів, який впливає на
поведінку файла. Атрибути повертаються як рядок літер (описано нижче). Рядок
може бути порожнім, що означає, що ніяких атрибутів для файла не
встановлено.

Ці атрибути є, лише якщо файл зберігається у файловій системі
ext2/3/4. Використання цієї команди для інших типів файлових систем призведе
до помилки.

У поточній версії передбачено такі повернуті символи (атрибути файла):

=over 4

=item 'A'

Під час доступу до файла його atime не змінюється.

=item 'a'

До файла можна лише дописувати дані.

=item 'c'

Файл стиснено на диску.

=item 'D'

(Лише для каталогів.) Зміни до цього каталогу синхронно записуються на диск.

=item 'd'

Файл не є кандидатом на резервне копіювання (див. L<dump(8)>).

=item 'E'

Файл стиснуто з помилками.

=item 'e'

Файл використовує розширення.

=item 'h'

Файл зберігає свої блоки у одиницях розміру блоків файлової системи замість
секторів.

=item 'I'

(Лише каталоги.) У каталозі використовуються хешовані дерева ієрархії.

=item 'i'

Цей файл є незмінним. До нього не можна вносити зміни, його не можна
вилучати або перейменовувати. На цей файл не можна створювати посилання.

=item 'j'

Файл входить до журналу даних.

=item 's'

Після вилучення файла усі його блоки буде перезаписано нулями.

=item 'S'

Зміни до цього файла синхронно записуються на диск.

=item 'T'

(Лише каталоги.) Це підказка засобу розміщення у блоках щодо того, що
підкаталоги, які містяться у цьому каталозі слід розподілити між
блоками. Якщо немає, засіб розподілу за блоками спробує згрупувати
підкаталоги.

=item 't'

Для файлів вимикає об'єднання «хвостів». (Не використовується у основних
реалізаціях ext2.)

=item 'u'

Коли файл вилучається, його блоки буде збережено, уможливлюючи відновлення
вилученого файла.

=item 'X'

Можна отримувати доступ до необробленого вмісту стисненого файла.

=item 'Z'

Для стисненого файла встановлено прапорець незавершеної зміни.

=back

У майбутніх версіях може бути додано інші атрибути файлів. Тип
встановлюваних атрибутів залежить від типу файла. Докладний опис можна
знайти на сторінці підручника щодо L<chattr(1)>.

Див. також L</set-e2attrs>.

Не слід плутати ці атрибути із розширеними атрибутами (див. L</getxattr>).

=head2 get-e2generation

 get-e2generation файл

Повертає генерацію файла ext2 для файла. Генерація (яку зазвичай називають
«версією») є числом, пов'язаним із inode. Найпоширенішою областю
використання є сервери NFS.

Генерація є характерною особливістю файлової системи ext2/3/4. Використання
цієї команди для інших типів файлових систем призведе до помилки.

Див. L</set-e2generation>.

=head2 get-e2label

 get-e2label пристрій

Ця команда повертає мітку файлової системи ext2/3/4 для файлової системи на
пристрої C<пристрій>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</vfs-label>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 get-e2uuid

 get-e2uuid пристрій

Ця команда повертає UUID файлової системи ext2/3/4 для файлової системи на
пристрої C<пристрій>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</vfs-uuid>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 get-hv

 get-hv

Повертає назву виконуваного файла поточного гіпервізору.

Це значення ніколи не дорівнює NULL. Якщо його ще не встановлено, команда
поверне типову назву виконуваного файла qemu.

=head2 get-identifier

 get-identifier

Отримати ідентифікатор дескриптора. Див. L</set-identifier>.

=head2 get-libvirt-requested-credential-challenge

 get-libvirt-requested-credential-challenge індекс

Виконати перевірку (за даними libvirt) реєстраційних даних із номером
C<індекс>. Якщо у libvirt не буде знайдено відповідника для перевірки,
команда поверне порожній рядок, C<"">.

Документацію і приклад коду наведено у розділі L<guestfs(3)/РОЗПІЗНАВАННЯ ЗА
ДОПОМОГОЮ LIBVIRT>.

=head2 get-libvirt-requested-credential-defresult

 get-libvirt-requested-credential-defresult індекс

Отримати типовий результат (за даними libvirt) реєстраційних даних із
номером C<індекс>. Якщо у libvirt не буде знайдено відповідника для типового
результату, команда поверне порожній рядок, C<"">.

Документацію і приклад коду наведено у розділі L<guestfs(3)/РОЗПІЗНАВАННЯ ЗА
ДОПОМОГОЮ LIBVIRT>.

=head2 get-libvirt-requested-credential-prompt

 get-libvirt-requested-credential-prompt індекс

Отримати запит (за даними libvirt) реєстраційних даних із номером
C<індекс>. Якщо у libvirt не буде знайдено відповідника для запиту, команда
поверне порожній рядок, C<"">.

Документацію і приклад коду наведено у розділі L<guestfs(3)/РОЗПІЗНАВАННЯ ЗА
ДОПОМОГОЮ LIBVIRT>.

=head2 get-libvirt-requested-credentials

 get-libvirt-requested-credentials

Цю команду слід викликати під час зворотного виклику подій для подій типу
C<GUESTFS_EVENT_LIBVIRT_AUTH>.

Повертає список реєстраційних даних, запит на які надсилає libvirt. Можливі
значення є підмножиною рядків, які надаються, коли ви викликаєте
L</set-libvirt-supported-credentials>.

Документацію і приклад коду наведено у розділі L<guestfs(3)/РОЗПІЗНАВАННЯ ЗА
ДОПОМОГОЮ LIBVIRT>.

=head2 get-memsize

 get-memsize

Отримує розмір у мегабайтах отриманої для гіпервізору пам'яті.

Якщо для цього дескриптора не було викликано L</set-memsize> і якщо не було
встановлено C<LIBGUESTFS_MEMSIZE>, якщо команда повертає типове
вкомпільоване значення розміру пам'яті (memsize).

Докладніший опис архітектури libguestfs наведено у підручнику з
L<guestfs(3)>.

=head2 get-network

 get-network

Повертає значення прапорця вмикання мережі.

=head2 get-path

 get-path

Повертає поточний шлях пошуку.

Це значення ніколи не дорівнює NULL. Якщо його ще не встановлено, команда
поверне типовий вміст змінної середовища PATH.

=head2 get-pgroup

 get-pgroup

Повертає прапорець групи процесів.

=head2 get-pid

=head2 PID

 get-pid

Повертає ідентифікатор гіпервізору. Якщо жодного гіпервізору не запущено,
команда поверне повідомлення про помилку.

Це внутрішній виклик, який використовується для діагностики і тестування.

=head2 get-program

 get-program

Отримати назву програми. Див. L</set-program>.

=head2 get-qemu

 get-qemu

Повертає назву поточного виконуваного файла гіпервізору (типово, qemu).

Це значення ніколи не дорівнює NULL. Якщо його ще не встановлено, команда
поверне типову назву виконуваного файла qemu.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</get-hv>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 get-recovery-proc

 get-recovery-proc

Повертає прапорець вмикання відновлення процесу.

=head2 get-selinux

 get-selinux

Повертає поточне значення прапорця selinux, який передається базовій системі
під час її завантаження. Див. L</set-selinux>.

Докладніший опис архітектури libguestfs наведено у підручнику з
L<guestfs(3)>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</selinux-relabel>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 get-smp

 get-smp

Повертає кількість віртуальних процесорів, які пов'язано із базовою
системою.

=head2 get-sockdir

 get-sockdir

Отримати назву каталогу, який використовується дескриптором для зберігання
файлів тимчасових сокетів.

Ця команда відрізняється від L</tmpdir>, оскільки для сокетів потрібні
коротші шляхи (через обмеження буферів назв файлів для сокетів UNIX), а
L</tmpdir> може бути надто довгим для таких шляхів.

Типове значення керується змінною середовища C<XDG_RUNTIME_DIR>: якщо
встановлено C<XDG_RUNTIME_DIR>, її значення буде типовим. Якщо ж значення
змінної не встановлено, типовим значенням буде F</tmp>.

=head2 get-tmpdir

 get-tmpdir

Отримати назву каталогу, який використовується дескриптором для зберігання
тимчасових файлів.

=head2 get-trace

 get-trace

Повертає прапорець трасування команди.

=head2 get-umask

 get-umask

Повертає поточне значення umask. Типовим значенням umask є C<022>, якщо інше
значення не було встановлено за допомогою виклику L</umask>.

=head2 get-verbose

 get-verbose

Повертає значення прапорця докладності повідомлень.

=head2 getcon

 getcon

Ця команда отримує контекст безпеки SELinux фонової служби.

Див. документацію з SELINUX у L<guestfs(3)> та L</setcon>

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</selinux-relabel>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

Працездатність цієї команди залежить від можливості C<selinux>. Див. також
L</feature-available>.

=head2 getxattr

 getxattr шлях назва

Отримати окремий розширений атрибут з файла C<шлях> за назвою C<назва>. У
цьому виклику виконується перехід за символічними посиланнями. Якщо ви
хочете визначити розширений атрибут для самого символічного посилання,
скористайтеся L</lgetxattr>.

Зазвичай, краще отримати усі розширені атрибути файла одним викликом
L</getxattrs>. Втім, у реалізації деяких файлових систем у Linux є вади, які
заважають отримання повного списку атрибутів. Для таких файлових систем
(найпоширенішою з яких є ntfs-3g) вам доведеться визначити назви потрібних
вам розширених атрибутів і викликати цю функцію.

Значеннями розширених атрибутів є блоки двійкових даних. Якщо розширеного
атрибута із назвою C<назва> не існує, командою буде повернуто повідомлення
про помилку.

Див. також L</getxattrs>, L</lgetxattr>, L<attr(5)>.

Працездатність цієї команди залежить від можливості
C<linuxxattrs>. Див. також L</feature-available>.

=head2 getxattrs

 getxattrs шлях

Ця команда виводить список розширених атрибутів файла або каталогу C<шлях>.

На рівні системи, ця команда є поєднанням викликів L<listxattr(2)> і
L<getxattr(2)>.

Див. також L</lgetxattrs>, L<attr(5)>.

Працездатність цієї команди залежить від можливості
C<linuxxattrs>. Див. також L</feature-available>.

=head2 glob-expand

=head2 glob-expand-opts

 glob-expand шаблон [directoryslash:true|false]

Ця команда виконує пошук усіх назв шляхів, які збігаються із шаблоном
C<шаблон>, відповідно до правил розгортання замінників, які використовуються
командною оболонкою.

Якщо шляхів знайдено не буде, команда поверне порожній список (не помилку).

Це обгортка навколо функції C L<glob(3)> із прапорцями
C<GLOB_MARK|GLOB_BRACE>. Див. відповідну сторінку підручника, щоб дізнатися
більше.

Аргумент C<directoryslash> визначає, чи слід використовувати прапорець
C<GLOB_MARK> для L<glob(3)>. Типовим його значенням є true
(використовувати). Його можна явним чином вимкнути, щоб команда не повертала
завершальних символів похилої риски у назвах каталогів.

Зауважте, що схожої команди для розгортання назв пристроїв (наприклад
F</dev/sd*>) не існує. З цією метою слід використовувати L</list-devices>,
L</list-partitions> тощо.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 grep

=head2 grep-opts

 grep формальний_вираз шлях [extended:true|false] [fixed:true|false] [insensitive:true|false] [compressed:true|false]

Викликає зовнішню програму C<grep> і повертає рядки-відповідники.

Необов'язковими прапорцями є такі:

=over 4

=item C<extended>

Використовувати розширені формальні вирази. Те саме, що використання
прапорця I<-E>.

=item C<fixed>

Фіксована відповідність (не використовувати формальні вирази). Те саме, що
використання прапорця I<-F>.

=item C<insensitive>

Не враховувати під час пошуку регістр символів. Те саме, що використання
прапорця I<-i>.

=item C<compressed>

Використовує C<zgrep> замість C<grep>. Це надає змогу обробляти стиснені
compress або gzip дані.

=back

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 grepi

 grepi формальний_вираз шлях

Ця функція викликає зовнішню програму C<grep -i> і повертає відповідні
рядки.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 grub-install

 grub-install корінь пристрій

Ця команда встановлює GRUB 1 (Grand Unified Bootloader) на C<пристрій> із
кореневим каталогом C<корінь>.

Нотатки:

=over 4

=item *

У програмному інтерфейсі поточної версії немає способів встановити
завантажувач grub2, який використовується у більшості сучасних гостьових
систем Linux. Команду grub2 можна запустити з самої гостьової системи, втім,
у такого способу запуску є певні проблеми, описані у розділі
L<guestfs(3)/ЗАПУСК КОМАНД>.

=item *

Ця команда використовує C<grub-install> з основної системи. На жаль, grub не
завжди сумісний сам із собою, отже це працює у доволі вузькому діапазоні
ситуацій. Радимо ретельно усе перевіряти для кожної версії гостьової
системи.

=item *

Якщо grub-install повідомляє про помилку «No suitable drive was found in the
generated device map.», ймовірно, вам слід спочатку створити файл
F</boot/grub/device.map>, який міститиме прив'язки назв пристроїв grub до
назв пристроїв Linux. Зазвичай, достатньо створити файл з таким вмістом:

 (hd0) /dev/vda

замінивши F</dev/vda> на назву пристрою для встановлення.

=back

Працездатність цієї команди залежить від можливості C<grub>. Див. також
L</feature-available>.

=head2 head

 head шлях

Ця команда повертає перші 10 рядків файла як список рядків.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 head-n

 head-n к-ть_рядків шлях

Якщо параметр C<к-ть_рядків> є додатним числом, повертає перші
C<к-ть_рядків> рядків з файла C<шлях>.

Якщо значенням параметра C<к-ть_рядків> є від'ємне число, команда повертає
усі рядки з файла C<шлях>, окрім останніх C<к-ть_рядків> рядків.

Якщо значенням параметра C<к-ть_рядків> є нуль, команда повертає порожній
список.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 hexdump

 hexdump шлях

Ця команда виконує C<hexdump -C> для вказаного файла C<шлях>. Результатом
виконання є зручний для читання канонічний шістнадцятковий дамп файла.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 hivex-close

 hivex-close

Закрити поточний елемент керування hivex.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-commit

 hivex-commit назва_файла

Вносить (записує) зміни до рою.

Якщо значенням необов'язкового параметра F<назва_файла> є null, зміни буде
записано до того самого рою, який було відкрито. Якщо значенням не є null,
зміни буде записано до вказаного альтернативного файла, а початковий рій
залишиться незмінним.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-node-add-child

 hivex-node-add-child батьківський_запис назва

Додати дочірній вузол до із назвою C<назва> до батьківського запису
C<батьківський_запис>.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-node-children

 hivex-node-children вузол

Повертає список вузлів, які є підключами вузла C<вузол>.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-node-delete-child

 hivex-node-delete-child вузол

Вилучаєe C<вузол>, якщо потрібно, рекурсивно.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-node-get-child

 hivex-node-get-child nodeh назва

Повертає дочірній вузол із назвою C<назва> для вузла C<вузол>, якщо такий
існує. Може повернути C<0>, що означатиме, що вузла із вказаною назвою не
існує.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-node-get-value

 hivex-node-get-value nodeh ключ

Повертає значення, пов'язане із вузлом C<вузол>, яке має назву C<ключ>, якщо
таке існує. Може повернути C<0>, що означатиме, що ключа із вказаною назвою
не існує.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-node-name

 hivex-node-name nodeh

Повернути назву C<nodeh>.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-node-parent

 hivex-node-parent nodeh

Повернути батьківський вузол C<nodeh>.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-node-set-value

 hivex-node-set-value вузол ключ тип значення

Встановлює або замінює окреме значення у вузлі C<вузол>. Значенням аргументу
C<ключ> є назва, C<тип> — тип, а C<значення> — дані.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-node-values

 hivex-node-values nodeh

Повертає масив кортежів (ключ, тип даних, дані), пов'язаний із C<nodeh>.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-open

 hivex-open назва_файла [verbose:true|false] [debug:true|false] [write:true|false] [unsafe:true|false]

Відкриває файл рою реєстру Windows із назвою F<назва_файла>. Якщо вже
існував дескриптор hivex, пов'язаний із цим сеансом guestfs, його буде
закрито.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-root

 hivex-root

Повернути кореневий вузол гілки.

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-value-key

 hivex-value-key valueh

Повертає ключ (назву) поля для кортежу (ключ, тип даних, дані).

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-value-string

 hivex-value-string значення

Ця команда викликає L</hivex-value-value> (яка повертає поле даних на основі
кортежу значень hivex). Далі, припускається, що вмістом поля є рядок
UTF-16LE, який перетворюється на рядок UTF-8 (або, якщо це неможливо,
команда повертає повідомлення про помилку).

Команда корисна для читання рядків з реєстру Windows. Втім, вона працює
нестабільно, оскільки реєстр не є строго типізованим, а поля можуть містити
довільні або неочікувані дані.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-value-type

 hivex-value-type valueh

Повертає значення поля типу даних для кортежу (ключ, тип даних, дані).

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-value-utf8

 hivex-value-utf8 valueh

Ця команда викликає L</hivex-value-value> (яка повертає поле даних на основі
кортежу значень hivex). Далі, припускається, що вмістом поля є рядок
UTF-16LE, який перетворюється на рядок UTF-8 (або, якщо це неможливо,
команда повертає повідомлення про помилку).

Команда корисна для читання рядків з реєстру Windows. Втім, вона працює
нестабільно, оскільки реєстр не є строго типізованим, а поля можуть містити
довільні або неочікувані дані.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</hivex-value-string>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 hivex-value-value

 hivex-value-value valueh

Повертає значення поля даних для кортежу (ключ, тип даних, дані).

Обгортка до команди L<hivex(3)> із тією ж самою назвою.

Див. також L</hivex-value-utf8>.

Працездатність цієї команди залежить від можливості C<hivex>. Див. також
L</feature-available>.

=head2 initrd-cat

 initrd-cat шлях_initrd назва_файла

Ця команда розпаковує файл F<назва_файла> з файла initrd із назвою
F<шлях_initrd>. Назву файла слід вказувати I<без> початкового символу F</>.

Наприклад, у guestfish ви можете скористатися такою командою для вивчення
скрипту завантаження (зазвичай, він має назву F</init>), який міститься у
initrd Linux або образі initramfs:

 initrd-cat /boot/initrd-<версія>.img init

Див. також L</initrd-list>.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 initrd-list

 initrd-list шлях

Ця команда виводить список файлів, які містяться у initrd.

Записи у списку буде виведено без початкового символу F</>. Список буде
упорядковано за появою файлів (не обов'язково за абеткою). Назви каталогів
буде показано у списку як окремі записи.

У старих ядрах Linux (2.4 і старіших) як initrd використовується стиснена
файлова система ext2. У нашій команді передбачено підтримку I<лише> новішого
формату initramfs (стиснених файлів cpio).

=head2 inotify-add-watch

 inotify-add-watch шлях маска

Спостерігати для запису C<шлях> за появою подій зі списку C<маска>.

Зауважте, що якщо запис C<шлях> є каталогом, спостереження вестиметься і за
подіями у каталозі, але I<не> виконуватиметься рекурсивно (у підкаталогах).

Зауваження для викликів з-поза C та з-поза Linux: події inotify визначено у
ABI ядра Linux. Список наведено у F</usr/include/sys/inotify.h>.

Працездатність цієї команди залежить від можливості C<inotify>. Див. також
L</feature-available>.

=head2 inotify-close

 inotify-close

Ця команда закриває дескриптор inotify, який раніше було відкрито
inotify_init. Команда вилучає усі спостереження, викидає усі події з черги і
скасовує надання пам'яті для усіх ресурсів.

Працездатність цієї команди залежить від можливості C<inotify>. Див. також
L</feature-available>.

=head2 inotify-files

 inotify-files

Ця функція є корисною обгорткою навколо L</inotify-read>, яка просто
повертає список назв шляхів об'єктів, які було оброблено touch. Список назв
шляхів буде упорядковано, дублікати записів буде вилучено.

Працездатність цієї команди залежить від можливості C<inotify>. Див. також
L</feature-available>.

=head2 inotify-init

 inotify-init макс_подій

Ця команда створює дескриптор inotify. Підсистемою inotify можна
скористатися для отримання сповіщень щодо подій, які відбуваються із
об'єктами у файловій системі гостьової операційної системи.

Значенням параметра C<макс_подій> є максимальна кількість подій, які може
бути додано до черги між викликами L</inotify-read> або
L</inotify-files>. Якщо буде передано значення C<0>, буде використано типове
значення для ядра (або раніше встановлене значення). Для Linux 2.6.29
типовим значенням є 16384 подій. Якщо обмеження буде перевищено, ядро просто
відкидатиме події, але записуватиме повідомлення щодо факту відкидання,
встановлюючи прапорець C<IN_Q_OVERFLOW> у списку повернутої структури
(див. L</inotify-read>).

Перш ніж буде створено якесь повідомлення про подію, вам слід додати певні
спостереження до внутрішнього списку
спостережень. Див. L</inotify-add-watch> та L</inotify-rm-watch>.

Записи подій з черги мають періодично читатися викликом L</inotify-read>
(або L</inotify-files>, який є корисною обгорткою навколо
L</inotify-read>). Якщо записи подій не читатимуться достатньо часто,
внутрішню чергу записів може бути переповнено.

Після використання дескриптор слід закрити викликом L</inotify-close>. У
процесі закриття буде автоматично вилучено усі спостереження.

Огляд інтерфейсу inotify, який відкриває ядро Linux, можна знайти на
сторінці підручника L<inotify(7)>. Саме цей інтерфейс, грубо кажучи, ми і
відкриваємо за допомогою libguestfs. Зауважте, що для кожного екземпляра
libguestfs відкривається один загальний дескриптор inotify.

Працездатність цієї команди залежить від можливості C<inotify>. Див. також
L</feature-available>.

=head2 inotify-read

 inotify-read

Повертає повну чергу подій, які трапилися з моменту попереднього виклику
читання черги.

Якщо подій не траплялося, повертає порожній список.

I<Зауваження>: щоб переконатися, що усі записи подій було прочитано, вам
слід повторно викликати цю функцію, аж доки не буде повернуто порожній
список. Причиною є те, що виклик читає записи подій до досягнення
максимального розміру черги повідомлень appliance-to-host і лишає решту
подій у черзі.

Працездатність цієї команди залежить від можливості C<inotify>. Див. також
L</feature-available>.

=head2 inotify-rm-watch

 inotify-rm-watch wd

Вилучити раніше визначене спостереження inotify. Див. L</inotify-add-watch>.

Працездатність цієї команди залежить від можливості C<inotify>. Див. також
L</feature-available>.

=head2 inspect-get-arch

 inspect-get-arch корінь

Повертає архітектуру інспектованої операційної системи. Список можливих
повернутих значень можна знайти у описі L</file-architecture>.

Якщо архітектуру визначити не вдасться, буде повернуто рядок C<unknown>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-distro

 inspect-get-distro корінь

Ця команда повертає дистрибутив інспектованої операційної системи.

У поточній версії визначено такі дистрибутиви:

=over 4

=item "alpinelinux"

Alpine Linux.

=item "altlinux"

ALT Linux.

=item "archlinux"

Arch Linux.

=item "buildroot"

Дистрибутив, що походить від buildroot, але не той, який ми можемо окремо
визначити.

=item "centos"

CentOS.

=item "cirros"

Cirros.

=item "coreos"

CoreOS.

=item "debian"

Debian.

=item "fedora"

Fedora.

=item "freebsd"

FreeBSD.

=item "freedos"

FreeDOS.

=item "frugalware"

Frugalware.

=item "gentoo"

Gentoo.

=item "kalilinux"

Kali Linux.

=item "linuxmint"

Linux Mint.

=item "mageia"

Mageia.

=item "mandriva"

Mandriva.

=item "meego"

MeeGo.

=item "msdos"

Microsoft DOS.

=item "neokylin"

NeoKylin.

=item "netbsd"

NetBSD.

=item "openbsd"

OpenBSD.

=item "opensuse"

OpenSUSE.

=item "oraclelinux"

Oracle Linux.

=item "pardus"

Pardus.

=item "pldlinux"

PLD Linux.

=item "redhat-based"

Дистрибутив, що походить від Red Hat.

=item "rhel"

Red Hat Enterprise Linux.

=item "scientificlinux"

Scientific Linux.

=item "slackware"

Slackware.

=item "sles"

SuSE Linux Enterprise Server або Desktop.

=item "suse-based"

Дистрибутив, заснований на openSuSE.

=item "ttylinux"

ttylinux.

=item "ubuntu"

Ubuntu.

=item "unknown"

Дистрибутив, тип якого не вдалося визначити.

=item "voidlinux"

Void Linux.

=item "windows"

У Windows немає дистрибутивів. Цей рядок буде повернуто, якщо операційна
система належить до сімейства Windows.

=back

У майбутніх версіях libguestfs цією командою можуть повертатися інші
рядки. Функція, звідки викликається команда, має готуватися до обробки
будь-якого рядка.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-drive-mappings

 inspect-get-drive-mappings root

Цей виклик корисний для Windows, де використовується примітивна система
призначення літер дисків (зокрема F<C:\>) до розділів. Цей програмний
інтерфейс інспектування вивчає реєстр Windows, щоб визначити спосіб
прив'язування дисків і розділів до літер, і повертає хеш-таблицю, як у
наведеному нижче прикладі:

 C      =>     /dev/vda2
 E      =>     /dev/vdb1
 F      =>     /dev/vdc1

Зауважте, що ключі є літерами дисків. Для Windows регістр символів запису
ключа не враховується і складається із простої літери диска без
символу-відокремлювача, двокрапки.

У майбутньому ми можемо реалізувати підтримку інших операційних систем, де
також використовуються літери для дисків, але ключі для таких систем можуть
не бути незалежними від регістру символів і можуть перевищувати за довжиною
1 символ. Наприклад, у OS-9 диски називалися C<h0>, C<h1> тощо.

Для гостьових систем Windows у поточній версії повертається лише прив'язка
жорстких дисків. Портативні диски (зокрема DVD-ROM) ігноруються.

У гостьових системах, де не використовується прив'язка дисків, або прив'язку
дисків не можна визначити, ця команда повертає таблицю порожніх хешів.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>
Див. також L</inspect-get-mountpoints>, L</inspect-get-filesystems>.

=head2 inspect-get-filesystems

 inspect-get-filesystems корінь

Ця команда повертає список усіх файлових систем, які, як ми вважаємо,
пов'язано із вказаною операційною системою. Це, зокрема, коренева файлова
система, інші звичайні файлові системи та незмонтовані пристрої, зокрема
диски резервної пам'яті.

У випадку віртуальної машини із варіантами завантаження операційних систем
файлова система може бути спільною для одразу декількох операційних систем.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>
Див. також L</inspect-get-mountpoints>.

=head2 inspect-get-format

 inspect-get-format корінь

До libguestfs 1.38 було передбачено певну ненадійну підтримку виявлення
образів компакт-дисків для встановлення. Цей програмний інтерфейс мав
повертати таке:

=over 4

=item "installed"

Це встановлена операційна система.

=item "installer"

Інспектований образ диска не є встановленою операційною системою, а лише
I<придатним до завантаження> диском, компакт-диском із портативною
операційною системою або чимось подібним.

=item "unknown"

Формат цього образу диска є невідомим.

=back

У libguestfs E<ge> 1.38 ця команда повертала лише
C<installed>. Скористайтеся безпосередньо libosinfo для визначення системи
на компакт-диску зі встановлювачем.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

I<Ця функція вважається застарілою.> Замінника не передбачено. Зверніться до
документації із програмного інтерфейсу у підручнику з L<guestfs(3)>, щоб
дізнатися більше.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 inspect-get-hostname

 inspect-get-hostname корінь

Ця функція повертає назву вузла операційної системи, яку визначено засобом
інспектування за файлами налаштувань гостьової операційної системи.

Якщо назву вузла не вдасться визначити, буде повернуто рядок C<unknown>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-icon

 inspect-get-icon корінь [favicon:true|false] [highquality:true|false]

Ця функція повертає піктограму, яка відповідає інспектованій операційній
системі. Піктограма повертається як буфер, який містить зображення PNG
(перекодується до PNG, якщо потрібно).

Якщо отримання піктограми неможливе, ця функція повертає буфер нульової
довжини (не-NULL). I<Функції, які викликають цю команду, мають перевіряти
цей випадок>.

Libguestfs починає із пошуку файла із назвою F</etc/favicon.png> або
F<C:\etc\favicon.png> і, якщо дані зберігаються у належному форматі, буде
повернуто вміст цього файла. Ви можете вимкнути такі піктограми передаванням
для необов'язкового параметра C<favicon> значення false (типовим значенням є
true).

Якщо пошук favicon завершиться невдачею, буде виконано пошук відповідної
піктограми у інших місцях гостьової системи.

Якщо для необов'язкового параметра C<highquality> встановлено значення true,
команда повертатиме лише високоякісні піктограми, тобто піктограми із
високою роздільною здатністю і каналом прозорості. Типово, (зі значенням
false) буде повернуто будь-яку знайдено піктограму, навіть якщо її якість
буде низькою.

Нотатки:

=over 4

=item *

На відміну від більшості інших викликів програмного інтерфейсу, перш ніж ви
викличете цю команду, диски гостьової системи має бути змонтовано, оскільки
під час виклику доведеться читати дані з файлової системи гостьової
операційної системи.

=item *

B<Безпека:> Дані піктограми походять із ненадійної гостьової системи, ними
слід користуватися обережно. Відомі випадки додавання шкідливого коду до
файлів PNG. Переконайтеся, що ви користуєтеся libpng (або іншими
відповідними бібліотеками) останньої версії, перш ніж намагатися обробити
або показати піктограму.

=item *

Розмір повернутого зображення PNG може бути довільним. Зображення може бути
неквадратним. Libguestfs намагається повернути найбільшу доступну піктограму
найвищої якості. Програма сама має масштабувати її до бажаного розміру.

=item *

Для видобування піктограм із гостьових систем Windows потрібна зовнішня
програма C<wrestool> з пакунка C<icoutils> та декілька програм (C<bmptopnm>,
C<pnmtopng>, C<pamcut>) з пакунка C<netpbm>. Ці програми має бути
встановлено окремо.

=item *

Піктограми операційної системи захищено авторськими правами. Перш ніж
використовувати захищені авторським правом дані у власних програмах,
проконсультуйтеся щодо законодавчих аспектів такого використання.

=back

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 inspect-get-major-version

 inspect-get-major-version корінь

Ця команда повертає номер основної версії інспектованої операційної системи.

У Windows використовується послідовна схема нумерування версій, яку I<не>
відображено у назвах ринкових продуктів операційної системи. Зокрема,
операційна система, яку ми знаємо за назвою «Windows 7», насправді має номер
6.1 (тобто основна версія = 6, додаткова версія = 1). Ви можете визначити
справжні номери версій випусків Windows за статтями Вікіпедії або MSDN.

Якщо версію не вдасться визначити, буде повернуто C<0>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-minor-version

 inspect-get-minor-version корінь

Ця команда повертає номер додаткової версії інспектованої операційної
системи.

Якщо версію не вдасться визначити, буде повернуто C<0>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>
Див. також L</inspect-get-major-version>.

=head2 inspect-get-mountpoints

 inspect-get-mountpoints корінь

Ця команда повертає хеш даних щодо місця, у якому, як ми гадаємо, має бути
змонтовано файлові системи, пов'язані із операційною системою. Слід
зауважити, що ці дані, у найкращому випадку, визначено на основі здогадок,
заснованих на вивченні файлів налаштувань, зокрема
F</etc/fstab>. I<Зокрема>, використання цієї команди може призвести до
отримання записів файлових систем, яких не існує або які непридатні до
монтування. У коді, який викликатиме команду, слід правильно обробити
випадки, коли під час спроби монтування отриманих файлових систем
ставатимуться помилки.

У кожного з елементів повернутої хеш-таблиці буде ключ, який відповідатиме
шляху до точки монтування (наприклад, F</boot>), і значення, яке
відповідатиме файловій системі, яку має бути змонтовано до цієї точки
монтування (наприклад, F</dev/sda1>).

Непридатні до монтування пристрої, зокрема пристрої резервної пам'яті на
диску, I<не> включатимуться до повернутого списку.

Для операційних систем, подібних до Windows, де для позначення дисків усе ще
використовуються літери, ця команда поверне запис першого диска
«змонтованого до» F</>. Щоб дізнатися більше про прив'язку літер дисків до
розділів, див. L</inspect-get-drive-mappings>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>
Див. також L</inspect-get-filesystems>.

=head2 inspect-get-osinfo

 inspect-get-osinfo root

This function returns a possible short ID for libosinfo corresponding to the
guest.

I<Note:> The returned ID is only a guess by libguestfs, and nothing ensures
that it actually exists in osinfo-db.

If no ID could not be determined, then the string C<unknown> is returned.

=head2 inspect-get-package-format

 inspect-get-package-format корінь

Ця функція і L</inspect-get-package-management> повертають формат пакунків
та засіб для керування пакунками, який використовується у інспектованій
операційній системі. Наприклад, для Fedora ці функції мають повернути C<rpm>
(формат пакунків) та C<yum> або C<dnf> (засіб для керування пакунками).

Ця команда поверне рядок C<unknown>, якщо не вдасться визначити формат
пакунків I<або> якщо у операційній системі не використовується система
пакунків (наприклад, у Windows).

Можливі варіанти рядків: C<rpm>, C<deb>, C<ebuild>, C<pisi>, C<pacman>,
C<pkgsrc>, C<apk>, C<xbps>. У майбутніх версіях libguestfs може бути
реалізовано повернення інших рядків.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-package-management

 inspect-get-package-management корінь

L</inspect-get-package-format> і ця функція повертають формат пакунків та
засіб для керування пакунками, який використовується у інспектованій
операційній системі. Наприклад, для Fedora ці функції мають повернути C<rpm>
(формат пакунків) та C<yum> або C<dnf> (засіб для керування пакунками).

Ця команда поверне рядок C<unknown>, якщо не вдасться визначити засіб для
керування пакунками I<або> якщо у операційній системі не використовується
система пакунків (наприклад, у Windows).

Можливі варіанти повернутих рядків: C<yum>, C<dnf>, C<up2date>, C<apt> (для
усіх похідних Debian), C<portage>, C<pisi>, C<pacman>, C<urpmi>, C<zypper>,
C<apk>, C<xbps>. У майбутніх версіях libguestfs може бути реалізовано
повернення інших рядків.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-product-name

 inspect-get-product-name корінь

Ця команда повертає назву продукту для інспектованої операційної
системи. Назва продукту, у загальному випадку, є рядком довільної форми,
який може бути показано користувачеві, але який не призначено для обробки
програмами.

Якщо назву продукту визначити не вдалося, буде повернуто рядок C<unknown>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-product-variant

 inspect-get-product-variant root

Ця команда повертає варіант продукту інспектованої операційної системи.

Для гостьових операційних систем Windows ця команда повертає вміст ключа
реєстру C<HKLM\Software\Microsoft\Windows NT\CurrentVersion>
C<InstallationType>, який типово є рядком, зокрема C<Client> або C<Server>
(можливі й інші варіанти). Цим рядком можна скористатися для розрізнення
домашніх і промислових версій Windows для випусків із однаковим номером
версії (наприклад, Windows 7 і Windows 2008 Server обидві мають номер версії
6.1, але перша має значення варіанта C<Client>, а друга — C<Server>).

Для промислових версій гостьових систем Linux у майбутньому ми маємо намір
реалізувати код, який повертатиме варіанти продукту, зокрема C<Desktop>,
C<Server> тощо. Але у поточній версії цей код ще не реалізовано.

Якщо варіант продукту визначити не вдалося, буде повернуто рядок C<unknown>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>
Див. також L</inspect-get-product-name>, L</inspect-get-major-version>.

=head2 inspect-get-roots

 inspect-get-roots

Ця функція є зручним способом отримання списку кореневих пристроїв,
повернутого попереднім викликом L</inspect-os>, але без повторного виконання
усієї процедури інспектування.

Команда повертає порожній список, якщо не буде знайдено кореневих пристроїв
або якщо не було викликано L</inspect-os>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-type

 inspect-get-type корінь

Ця команда повертає тип інспектованої операційної системи. У поточній версії
визначено такі типи:

=over 4

=item "linux"

Будь-яка заснована на Linux операційна система.

=item "windows"

Будь-яка операційна система Microsoft Windows.

=item "freebsd"

FreeBSD.

=item "netbsd"

NetBSD.

=item "openbsd"

OpenBSD.

=item "hurd"

GNU/Hurd.

=item "dos"

MS-DOS, FreeDOS та інші.

=item "minix"

MINIX.

=item "unknown"

Не вдалося визначити тип операційної системи.

=back

У майбутніх версіях libguestfs цією командою можуть повертатися інші
рядки. Функція, звідки викликається команда, має готуватися до обробки
будь-якого рядка.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-windows-current-control-set

 inspect-get-windows-current-control-set root

Ця команда повертає Windows CurrentControlSet інспектованої гостьової
системи. CurrentControlSet є назвою ключа реєстру, наприклад
C<ControlSet001>.

У цій команді припускається, що гостьовою системою є Windows і що її реєстр
можна вивчити засобами інспектування. Якщо ці припущення не справджуються,
команда поверне повідомлення про помилку.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-windows-software-hive

 inspect-get-windows-software-hive корінь

Ця команда повертає шлях до рою (двійкового файла реєстру Windows), який
відповідає HKLM\SOFTWARE.

У цій команді припускається, що гостьовою системою є Windows і що у
гостьовій системі є файл рою програмного забезпечення із відповідною
назвою. Якщо ці припущення не справджуються, команда поверне повідомлення
про помилку. Ця команд не виконує перевірки того, що знайдений рій є
коректним роєм реєстру Windows.

Ви можете скористатися командою L</hivex-open> для читання або запису рою.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-windows-system-hive

 inspect-get-windows-system-hive корінь

Ця команда повертає шлях до рою (двійкового файла реєстру Windows), який
відповідає HKLM\SYSTEM.

У цій команді припускається, що гостьовою системою є Windows і що у
гостьовій системі є файл рою системи із відповідною назвою. Якщо ці
припущення не справджуються, команда поверне повідомлення про помилку. Ця
команда не виконує перевірки того, що знайдений рій є коректним роєм реєстру
Windows.

Ви можете скористатися командою L</hivex-open> для читання або запису рою.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-get-windows-systemroot

 inspect-get-windows-systemroot корінь

Ця команда повертає системний кореневий каталог інспектованої гостьової
системи Windows. Системним кореневим каталогом є шлях, зокрема F</WINDOWS>.

У цій команді припускається, що гостьовою системою є Windows і що її
системний кореневий каталог можна визначити засобами інспектування. Якщо ці
припущення не справджуються, команда поверне повідомлення про помилку.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-is-live

 inspect-is-live корінь

Ця команда є застарілою і завжди повертає C<false>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

I<Ця функція вважається застарілою.> Замінника не передбачено. Зверніться до
документації із програмного інтерфейсу у підручнику з L<guestfs(3)>, щоб
дізнатися більше.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 inspect-is-multipart

 inspect-is-multipart корінь

Ця команда є застарілою і завжди повертає C<false>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

I<Ця функція вважається застарілою.> Замінника не передбачено. Зверніться до
документації із програмного інтерфейсу у підручнику з L<guestfs(3)>, щоб
дізнатися більше.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 inspect-is-netinst

 inspect-is-netinst корінь

Ця команда є застарілою і завжди повертає C<false>.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

I<Ця функція вважається застарілою.> Замінника не передбачено. Зверніться до
документації із програмного інтерфейсу у підручнику з L<guestfs(3)>, щоб
дізнатися більше.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 inspect-list-applications

 inspect-list-applications кореневий_каталог

Повертає список програм, встановлених у операційній системі.

I<Зауваження:> ця команда працює інакше за інші частини програмного
інтерфейсу інспектування. Вам слід викликати L</inspect-os>, потім
L</inspect-get-mountpoints>, потім змонтувати диски, потім викликати цю
команду. Побудова списку програм є значно складнішою операцією, яка потребує
доступу до усієї файлової системи. Також зауважте, що на відміну від інших
команд L</inspect-get-*>, які лише повертають дані, кешовані у дескрипторі
libguestfs, ця команда справді читає частини змонтованої файлової системи
під час виконання.

Ця команда повертає порожній список, якщо засобу інспектування не вдасться
визначити список програм.

Структура application містить такі поля:

=over 4

=item C<app_name>

Назва програми. Для гостьових систем Linux на основі Red Hat або Debian це
назва пакунка.

=item C<app_display_name>

Показана назва програми, іноді локалізована відповідно до мови встановлення
гостьової операційної системи.

Якщо дані недоступні, команда поверне порожній рядок C<"">. Там, де потрібно
щось показати, можна скористатися замість цієї команди командою C<app_name>.

=item C<app_epoch>

Для засобів керування пакунками, у яких використовуються епохи, це поле
містить дані щодо епохи пакунка (ціле число). Якщо дані недоступні, буде
повернуто значення C<0>.

=item C<app_version>

Рядок версії програми або пакунка. Якщо такого рядка не передбачено, буде
повернуто порожній рядок C<"">.

=item C<app_release>

Рядок випуску програми або пакунка у системах пакування, де передбачено
підтримку відповідних даних. Якщо такого рядка не передбачено, буде
повернуто порожній рядок C<"">.

=item C<app_install_path>

Шлях встановлення програми (у операційних системах, зокрема Windows, де
використовуються шляхи встановлення). Цей шлях записується у форматі, який
використовується гостьовою операційною системою, а не у форматі шляху
libguestfs.

Якщо не передбачено, буде повернуто порожній рядок C<"">.

=item C<app_trans_path>

Шлях для встановлення, перетворений у шлях libguestfs. Якщо такого шляху не
передбачено, буде повернуто порожній рядок C<"">.

=item C<app_publisher>

Назва розповсюджувача програми у системах пакування, де передбачено
підтримку відповідних даних. Якщо такої назви не передбачено, буде повернуто
порожній рядок C<"">.

=item C<app_url>

Адреса (сайта) програми. Якщо такої адреси не передбачено, буде повернуто
порожній рядок C<"">.

=item C<app_source_package>

Для систем пакування, де передбачено таку підтримку, назва пакунка із
початковим кодом. Якщо такої назви не передбачено, буде повернуто порожній
рядок C<"">.

=item C<app_summary>

Короткий (зазвичай, у один рядок) опис програми або пакунка. Якщо такого
опису не передбачено, буде повернуто порожній рядок C<"">.

=item C<app_description>

Докладніший опис програми або пакунка. Якщо опис недоступний, замість нього
буде повернуто порожній рядок C<"">.

=back

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</inspect-list-applications2>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 inspect-list-applications2

 inspect-list-applications2 кореневий_каталог

Повертає список програм, встановлених у операційній системі.

I<Зауваження:> ця команда працює інакше за інші частини програмного
інтерфейсу інспектування. Вам слід викликати L</inspect-os>, потім
L</inspect-get-mountpoints>, потім змонтувати диски, потім викликати цю
команду. Побудова списку програм є значно складнішою операцією, яка потребує
доступу до усієї файлової системи. Також зауважте, що на відміну від інших
команд L</inspect-get-*>, які лише повертають дані, кешовані у дескрипторі
libguestfs, ця команда справді читає частини змонтованої файлової системи
під час виконання.

Ця команда повертає порожній список, якщо засобу інспектування не вдасться
визначити список програм.

Структура application містить такі поля:

=over 4

=item C<app2_name>

Назва програми. Для гостьових систем Linux на основі Red Hat або Debian це
назва пакунка.

=item C<app2_display_name>

Показана назва програми, іноді локалізована відповідно до мови встановлення
гостьової операційної системи.

Якщо дані недоступні, команда поверне порожній рядок C<"">. Там, де потрібно
щось показати, можна скористатися замість цієї команди командою
C<app2_name>.

=item C<app2_epoch>

Для засобів керування пакунками, у яких використовуються епохи, це поле
містить дані щодо епохи пакунка (ціле число). Якщо дані недоступні, буде
повернуто значення C<0>.

=item C<app2_version>

Рядок версії програми або пакунка. Якщо такого рядка не передбачено, буде
повернуто порожній рядок C<"">.

=item C<app2_release>

Рядок випуску програми або пакунка у системах пакування, де передбачено
підтримку відповідних даних. Якщо такого рядка не передбачено, буде
повернуто порожній рядок C<"">.

=item C<app2_arch>

Рядок архітектури програми або пакунка у системах пакування, де передбачено
підтримку відповідних даних. Якщо такого рядка не передбачено, буде
повернуто порожній рядок C<"">.

=item C<app2_install_path>

Шлях встановлення програми (у операційних системах, зокрема Windows, де
використовуються шляхи встановлення). Цей шлях записується у форматі, який
використовується гостьовою операційною системою, а не у форматі шляху
libguestfs.

Якщо не передбачено, буде повернуто порожній рядок C<"">.

=item C<app2_trans_path>

Шлях для встановлення, перетворений у шлях libguestfs. Якщо такого шляху не
передбачено, буде повернуто порожній рядок C<"">.

=item C<app2_publisher>

Назва розповсюджувача програми у системах пакування, де передбачено
підтримку відповідних даних. Якщо такої назви не передбачено, буде повернуто
порожній рядок C<"">.

=item C<app2_url>

Адреса (сайта) програми. Якщо такої адреси не передбачено, буде повернуто
порожній рядок C<"">.

=item C<app2_source_package>

Для систем пакування, де передбачено таку підтримку, назва пакунка із
початковим кодом. Якщо такої назви не передбачено, буде повернуто порожній
рядок C<"">.

=item C<app2_summary>

Короткий (зазвичай, у один рядок) опис програми або пакунка. Якщо такого
опису не передбачено, буде повернуто порожній рядок C<"">.

=item C<app2_description>

Докладніший опис програми або пакунка. Якщо опис недоступний, замість нього
буде повернуто порожній рядок C<"">.

=back

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

=head2 inspect-os

 inspect-os

Ця функція використовує інші функції libguestfs та певну евристику для
інспектування дисків (зазвичай, диски належать до віртуальної машини) під
час пошуку операційних систем.

Список повернутих значень буде порожнім, якщо не буде знайдено жодної
операційної системи.

Якщо буде знайдено одну операційну систему, команда поверне список із єдиним
елементом, який буде назвою кореневої файлової системи цієї операційної
системи. Крім того, ця функція може повертати список, що містить декілька
елементів, позначаючи таким чином віртуальну машину із подвійним або кратним
завантаженням. Кожен з елементів списку буде записом кореневої файлової
системи однієї з операційних систем.

Ви можете передати повернуті рядки кореневих каталогів іншим функціями
L</inspect-get-*>, щоб отримати подальші відомості щодо усіх операційних
систем, зокрема назву і версію.

Ця функція використовує інші можливості libguestfs, зокрема L</mount-ro> і
L</umount-all>, щоб монтувати і демонтовувати файлові системи і переглядати
їхній вміст. Її слід викликати до того, як буде змонтовано диски. Ця функція
також може використовувати Augeas, отже усі наявні дескриптори Augeas буде
закрито.

Ця функція не може розшифровувати зашифровані диски. Якщо диск зашифровано,
про його розшифровування має подбати (надати відповідні ключі) функція
виклику.

З докладнішими даними можна ознайомитися у розділі L<guestfs(3)/INSPECTION>.

Див. також L</list-filesystems>.

=head2 is-blockdev

=head2 is-blockdev-opts

 is-blockdev шлях [followsymlinks:true|false]

Повертає C<true> і лише тоді, якщо існує блоковий пристрій із вказаною
назвою C<шлях>.

Якщо додатковий прапорець C<followsymlinks> має значення true, функція
поверне true, якщо існує символічне посилання (або ланцюжок символічних
посилань), який завершується блоковим пристроєм.

Ця команда лише шукає файли у файловій системі гостьової системи. У цій
команді як параметр C<шлях> не можна використовувати розділи і блокові
пристрої libguestfs (наприклад F</dev/sda>).

Див. також L</stat>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 is-chardev

=head2 is-chardev-opts

 is-chardev шлях [followsymlinks:true|false]

Повертає C<true> і лише тоді, якщо існує символьний пристрій із вказаною
назвою C<шлях>.

Якщо додатковий прапорець C<followsymlinks> має значення true, функція
поверне true, якщо існує символічне посилання (або ланцюжок символічних
посилань), який завершується символьним пристроєм.

Див. також L</stat>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 is-config

 is-config

Повертає true тоді і лише тоді, коли налаштовується цей дескриптор (у стані
C<CONFIG>).

Докладніший опис станів наведено у підручнику з L<guestfs(3)>.

=head2 is-dir

=head2 is-dir-opts

 is-dir шлях [followsymlinks:true|false]

Повертає C<true> і лише тоді, якщо існує каталог із вказаною назвою
C<шлях>. Зауважте, що команда повертає false для усіх інших об'єктів,
зокрема файлів.

Якщо додатковий прапорець C<followsymlinks> має значення true, функція
поверне true, якщо існує символічне посилання (або ланцюжок символічних
посилань), який завершується каталогом.

Див. також L</stat>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 is-fifo

=head2 is-fifo-opts

 is-fifo шлях [followsymlinks:true|false]

Повертає C<true> і лише тоді, якщо існує FIFO (іменований канал) із вказаною
назвою C<шлях>.

Якщо додатковий прапорець C<followsymlinks> має значення true, функція
поверне true, якщо існує символічне посилання (або ланцюжок символічних
посилань), який завершується FIFO.

Див. також L</stat>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 is-file

=head2 is-file-opts

 is-file шлях [followsymlinks:true|false]

Повертає C<true> і лише тоді, якщо існує звичайний файл із вказаною назвою
C<шлях>. Зауважте, що команда повертає false для усіх інших об'єктів,
зокрема каталогів.

Якщо додатковий прапорець C<followsymlinks> має значення true, функція
поверне true, якщо існує символічне посилання (або ланцюжок символічних
посилань), який завершується файлом.

Див. також L</stat>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 is-lv

 is-lv монтування

Ця команда перевіряє, чи є C<монтування> логічним томом, і повертає true
тоді і лише тоді, коли це так.

=head2 is-socket

=head2 is-socket-opts

 is-socket шлях [followsymlinks:true|false]

Повертає C<true> і лише тоді, якщо існує сокет домену UNIX із вказаною
назвою C<шлях>.

Якщо додатковий прапорець C<followsymlinks> має значення true, функція
поверне true, якщо існує символічне посилання (або ланцюжок символічних
посилань), який завершується сокетом.

Див. також L</stat>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 is-symlink

 is-symlink шлях

Повертає C<true> і лише тоді, якщо існує символічне посилання із вказаною
назвою C<шлях>.

Див. також L</stat>.

=head2 is-whole-device

 is-whole-device пристрій

Ця команда повертає C<true> тоді і лише тоді, коли C<пристрій> стосується
повного блокового пристрою, тобто не розділу і не логічного пристрою.

=head2 is-zero

 is-zero шлях

Повертає true тоді і лише тоді, коли файл існує і є порожнім або містить
лише нульові байти.

=head2 is-zero-device

 is-zero-device пристрій

Повертає true тоді і лише тоді, коли пристрій існує і містить лише нульові
байти.

Зауважте, що на пристроях великого об'єму виконання цієї програми може бути
досить тривалим.

=head2 isoinfo

 isoinfo файл_образу_iso

Це те саме, що і L</isoinfo-device>, але працює для файла ISO, розташованого
всередині якоїсь іншої змонтованої файлової системи. Зауважте, що у типовому
випадку, коли ви додали файл ISO як пристрій libguestfs, вам I<не> слід
викликати цю команду. Замість цього, слід викликати L</isoinfo-device>.

=head2 isoinfo-device

 isoinfo-device пристрій

C<пристрій> є пристроєм ISO. Ця команда повертає структуру даних, прочитану
з дескриптора основного тому (еквівалента суперблоку у ISO) вказаного
пристрою.

Зазвичай, ефективніше скористатися командою L<isoinfo(1)> з параметром I<-d>
у основній системі для аналізу файлів ISO, а не використовувати засоби
libguestfs.

Відомості щодо полів дескриптора основного тому можна отримати тут:
L<http://wiki.osdev.org/ISO_9660#The_Primary_Volume_Descriptor>

=head2 journal-close

 journal-close

Завершити роботу обробника журналу.

Працездатність цієї команди залежить від можливості C<journal>. Див. також
L</feature-available>.

=head2 journal-get

 journal-get

Читає поточний запис журналу. Команда повертає усі поля у журналі як набір
пар значень C<(назва_атрибута, значення_атрибута)>. Значенням
C<назва_атрибута> є назва поля (рядок).

Значенням C<значення_атрибута> є значення поля (двійковий набір даних,
часто, але не завжди, рядок). Будь ласка, зауважте, що C<значення_атрибута>
є масивом байтів, а I<не> рядком C, який завершується символом \0.

Дані може бути обрізано за пороговою довжиною
(див. L</journal-set-data-threshold>, L</journal-get-data-threshold>).

Якщо ви не обмежуєте порогове значення даних (C<0>), ця команда може
прочитати запис журналу довільного розміру, тобто розмір не обмежуватиметься
протоколом libguestfs.

Працездатність цієї команди залежить від можливості C<journal>. Див. також
L</feature-available>.

=head2 journal-get-data-threshold

 journal-get-data-threshold

Отримує поточне значення порогу даних для читання записів журналу. Це
значення є підказкою журналу щодо того, що засіб журналювання може обрізати
поля даних до цього розміру під час читання (зауважте також, що засіб
журналювання може і не обрізати їх). Якщо команда повертає C<0>, порогове
обмеження не встановлено.

Див. також L</journal-set-data-threshold>.

Працездатність цієї команди залежить від можливості C<journal>. Див. також
L</feature-available>.

=head2 journal-get-realtime-usec

 journal-get-realtime-usec

Отримує поточну часову позначку (за годинником системи) поточного запису
журналу

Працездатність цієї команди залежить від можливості C<journal>. Див. також
L</feature-available>.

=head2 journal-next

 journal-next

Переводить до наступного запису журналу. Вам слід викликати цю команду
принаймні один раз, одразу після відкриття дескриптора, перш ніж ви зможете
читати дані.

Ця команда повертає булеве значення, яке повідомляє вам, чи існують ще
записи журналу для читання. Значення C<true> означає, що ви можете прочитати
наступний запис (наприклад, за допомогою L</journal-get>), а значення
C<false> означає, що досягнуто кінця журналу.

Працездатність цієї команди залежить від можливості C<journal>. Див. також
L</feature-available>.

=head2 journal-open

 journal-open каталог

Відкриває журналу systemd, який зберігається у каталозі F<каталог>. Усі
раніше відкриті дескриптори журналу при цьому буде закрито.

Вміст журналу можна прочитати за допомогою L</journal-next> і
L</journal-get>.

Після завершення використання журналу вам слід закрити дескриптор викликом
L</journal-close>.

Працездатність цієї команди залежить від можливості C<journal>. Див. також
L</feature-available>.

=head2 journal-set-data-threshold

 journal-set-data-threshold порогове_значення

Встановлює значення порогу даних для читання записів журналу. Це значення є
підказкою журналу щодо того, що засіб журналювання може обрізати поля даних
до цього розміру під час читання (зауважте також, що засіб журналювання може
і не обрізати їх). Якщо ви встановите значення C<0>, порогове обмеження
застосовано не буде.

Див. також L</journal-get-data-threshold>.

Працездатність цієї команди залежить від можливості C<journal>. Див. також
L</feature-available>.

=head2 journal-skip

 journal-skip пропуск

Прокручування записів журналу вперед (C<пропуск E<ge> 0>) або назад
(C<пропуск E<lt> 0>).

Команда повертає кількість записів, на яку насправді вдалося просунутися
(зауважте, що S<C<rskip E<ge> 0>>). Якщо повернуте значення не дорівнює
пропуску за модулем (C<|пропуск|>), ви досягли кінця або початку журналу.

Працездатність цієї команди залежить від можливості C<journal>. Див. також
L</feature-available>.

=head2 kill-subprocess

 kill-subprocess

Ця команда завершує роботу гіпервізору.

Не виконуйте цього виклику, краще скористайтеся L</shutdown>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</shutdown>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 launch

=head2 run

 launch

Вам слід викликати цю команду після налаштовування дескриптора (наприклад,
після додавання дисків), але перед виконанням із ним будь-яких інших дій.

Не викликайте L</launch> двічі для одного і того самого дескриптора. Хоча
такий виклик і не призведе до помилки (з історичних причин), точну поведінку
бібліотеки у цьому випадку не визначено. Дескриптори є доволі невибагливими
до ресурсів об'єктами, тому варто створювати окремий новий дескриптор для
кожного запуску.

=head2 lchown

 lchown власник група шлях

Змінює власника файла на C<власник> і групу на C<група>. Команда подібна до
L</chown>, але якщо C<шлях> є символічним посиланням, буде змінено параметри
самого посилання, а не файла чи каталогу, на яке воно вказує.

Передбачено підтримку лише числових uid і gid. Якщо ви хочете скористатися
текстовими назвами, вам доведеться знайти і обробити файл паролів власноруч
(підтримка Augeas робить це завдання відносно простим).

=head2 ldmtool-create-all

 ldmtool-create-all

Ця функція сканує усі блокові пристрої, шукаючи динамічні томи дисків і
розділи, а потім створює пристрої для усіх знайдених записів.

Викликати L</list-ldm-volumes>і L</list-ldm-partitions> для повернення
списку усіх пристроїв.

Зауважте, що зазвичай вам B<не> потрібно викликати цю команду явним чином,
оскільки вона виконується автоматично під час виконання L</launch>. Втім,
може виникнути потреба у виклику цієї функції, якщо ви з'єднували диски у
«гарячому» режимі або щойно створили динамічний диск Windows.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 ldmtool-diskgroup-disks

 ldmtool-diskgroup-disks група_дисків

Повертає диски у групі динамічних дисків Windows. Значенням параметра
C<група_дисків> має бути GUID групи дисків, одним із елементів списку, який
повертає L</ldmtool-scan>.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 ldmtool-diskgroup-name

 ldmtool-diskgroup-name група_дисків

Повертає назву групи динамічних дисків Windows. Значенням параметра
C<група_дисків> має бути GUID групи дисків, одним із елементів списку, який
повертає L</ldmtool-scan>.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 ldmtool-diskgroup-volumes

 ldmtool-diskgroup-volumes група_дисків

Повертає томи у групі динамічних дисків Windows. Значенням параметра
C<група_дисків> має бути GUID групи дисків, одним із елементів списку, який
повертає L</ldmtool-scan>.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 ldmtool-remove-all

 ldmtool-remove-all

Загалом, ця функція є оберненою до L</ldmtool-create-all>. Вона вилучає
прив'язки пристроїв для усіх томів динамічних дисків Windows.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 ldmtool-scan

 ldmtool-scan

Ця функція шукає динамічні диски Windows. Вона повертає список
ідентифікаторів (GUID) для усіх груп дисків, які було знайдено. Ці
ідентифікатори можна передавати іншим функціям L</ldmtool-*>.

Ця функція сканує усі блокові пристрої. Щоб виконати сканування якоїсь
підмножини блокових пристроїв, скористайтеся функцією
L</ldmtool-scan-devices>.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 ldmtool-scan-devices

 ldmtool-scan-devices 'пристрої...'

Ця функція шукає динамічні диски Windows. Вона повертає список
ідентифікаторів (GUID) для усіх груп дисків, які було знайдено. Ці
ідентифікатори можна передавати іншим функціям L</ldmtool-*>.

Параметр C<пристрої> є списком блокових пристроїв, на яких слід виконати
пошук. Якщо список є порожнім, буде виконано сканування усіх блокових
пристроїв.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 ldmtool-volume-hint

 ldmtool-volume-hint група_дисків том

Повертає поле підказки для тому із назвою C<том> у групі дисків із GUID
C<група_дисків>. Таку підказку може бути не визначено. Якщо підказку не
визначено, команда поверне порожній рядок. У полі підказки часто, але не
завжди, міститься назва диска у Windows, наприклад C<E:>.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 ldmtool-volume-partitions

 ldmtool-volume-partitions група_дисків том

Повертає список розділів на томі із назвою C<том> у групі дисків із GUID
C<група_дисків>.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 ldmtool-volume-type

 ldmtool-volume-type група_дисків том

Повертає тип тому із назвою C<том> у групі дисків із GUID C<група_дисків>.

Можливими типами томів, які повертає ця команда є такі: C<simple>,
C<spanned>, C<striped>, C<mirrored>, C<raid5>. Також може бути повернуто
інші типи.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 lgetxattr

 lgetxattr шлях назва

Отримати окремий розширений атрибут з файла C<шлях> за назвою C<назва>. Якщо
C<шлях> є символічним посиланням, ця команда поверне розширений атрибут з
символічного посилання.

Зазвичай, краще отримати усі розширені атрибути файла одним викликом
L</getxattrs>. Втім, у реалізації деяких файлових систем у Linux є вади, які
заважають отримання повного списку атрибутів. Для таких файлових систем
(найпоширенішою з яких є ntfs-3g) вам доведеться визначити назви потрібних
вам розширених атрибутів і викликати цю функцію.

Значеннями розширених атрибутів є блоки двійкових даних. Якщо розширеного
атрибута із назвою C<назва> не існує, командою буде повернуто повідомлення
про помилку.

Див. також L</lgetxattrs>, L</getxattr>, L<attr(5)>.

Працездатність цієї команди залежить від можливості
C<linuxxattrs>. Див. також L</feature-available>.

=head2 lgetxattrs

 lgetxattrs шлях

Те саме, що і L</getxattrs>, але якщо C<шлях> є символічним посиланням,
повертає розширені атрибути самого символічного посилання.

Працездатність цієї команди залежить від можливості
C<linuxxattrs>. Див. також L</feature-available>.

=head2 list-9p

 list-9p

Виводить список усіх файлових систем 9p, з'єднаних із гостьовою
системою. Повертає список теґів монтування.

=head2 list-devices

 list-devices

Вивести список усіх блокових пристроїв.

Буде повернуто повні назви блокових пристроїв, наприклад F</dev/sda>.

Див. також L</list-filesystems>.

=head2 list-disk-labels

 list-disk-labels

Якщо ви додаєте диски з використанням необов'язкового параметра C<мітка>
команди L</add-drive-opts>, ви можете скористатися цією командою для
прив'язування міток до простих блокових пристроїв та назв розділів
(наприклад F</dev/sda> та F</dev/sda1>).

Ця команда повертає таблицю хешів, у якій ключами є мітки дисків (I<без>
префіксів F</dev/disk/guestfs>), а значеннями є повні назви простих блокових
пристроїв та розділів (наприклад F</dev/sda> і F</dev/sda1>).

=head2 list-dm-devices

 list-dm-devices

Виводить список усіх пристроїв засобу прив'язування пристроїв.

У повернутому списку міститимуться пристрої F</dev/mapper/*>, наприклад,
пристрої, створені попереднім викликом L</luks-open>.

Пристрої засобу прив'язування пристроїв, які відповідають логічним томам
I<не> буде включено до повернутого списку. Якщо вам потрібен список логічних
томів, скористайтеся командою L</lvs>.

=head2 list-filesystems

 list-filesystems

Ця команда засобу інспектування шукає усі файлові системи на розділах,
блокових пристроях та логічних томах і повертає список C<монтувань>, де
містяться дані щодо файлових систем та їхнього типу.

Повернуте значення є хешем, де ключами є пристрої, на яких містяться файлові
системи, а значеннями є типи файлових систем. Приклад:

 "/dev/sda1" => "ntfs"
 "/dev/sda2" => "ext2"
 "/dev/vg_guest/lv_root" => "ext4"
 "/dev/vg_guest/lv_swap" => "swap"

Ключем не обов'язково є блоковий пристрій. Ним також може бути не зовсім
прозорий рядок «mountable», який можна передавати L</mount>.

Значенням може бути особливий рядок «unknown», який означає, що вміст
пристрою не вдалося визначити або пристрій є порожнім. Рядок «swap» означає
розділ резервної пам'яті Linux.

У libguestfs E<le> 1.36 ця команда запускає інші команди libguestfs, серед
яких можуть бути команди L</mount> і L</umount>. Тому її слід віддавати
поближче до launch і лише тоді, коли ще нічого не змонтовано. Це обмеження
було усунено у libguestfs E<ge> 1.38.

Не усі файлові системи із повернутого списку є придатними до
монтування. Зокрема, у списку можуть бути розділи резервної пам'яті. Крім
того, ця команда не перевіряє, чи є кожна зі знайдених файлових систем
коректною і придатною до монтування. Деякі із систем можуть бути придатними
до монтування, але потребувати спеціальних параметрів. Файлові системи
можуть належати різним логічним операційними системами (для пошуку
операційних систем скористайтеся командою L</inspect-os>).

=head2 list-ldm-partitions

 list-ldm-partitions

Ця функція повертає усі розділи динамічних дисків Windows, які було знайдено
на час запуску. Повернутим значенням є список назв пристроїв.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 list-ldm-volumes

 list-ldm-volumes

Ця функція повертає усі томи динамічних дисків Windows, які було знайдено на
час запуску. Повернутим значенням є список назв пристроїв.

Працездатність цієї команди залежить від можливості C<ldm>. Див. також
L</feature-available>.

=head2 list-md-devices

 list-md-devices

Вивести список усіх пристроїв md у Linux.

=head2 list-partitions

 list-partitions

Вивести усі розділи, визначені як блокові пристрої.

Буде повернуто назви пристроїв розділів повністю, наприклад F</dev/sda1>

Не повертає логічних томів. Для логічних томів слід викликати L</lvs>.

Див. також L</list-filesystems>.

=head2 ll

 ll каталог

Виводить список файлів у каталозі F<каталог> (відносно кореневого каталогу,
немає поточного робочого каталогу) у форматі команди «ls -la».

Ця команда здебільшого корисна для інтерактивних сеансів. Її I<не>
призначено для випадків, коли ви намагаєтеся обробити виведений командою
рядок.

=head2 llz

 llz каталог

Виводить список файлів у каталозі F<каталог> у форматі команди «ls -laZ».

Ця команда здебільшого корисна для інтерактивних сеансів. Її I<не>
призначено для випадків, коли ви намагаєтеся обробити виведений командою
рядок.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</lgetxattrs>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 ln

 ln призначення назва_посилання

Ця команда створює жорстке посилання за допомогою команди C<ln>.

=head2 ln-f

 ln-f призначення назва_посилання

Ця команда створює жорстке посилання за допомогою команди C<ln
-f>. Наявність параметра I<-f> вилучає посилання (C<назва_посилання>), якщо
таке вже існує.

=head2 ln-s

 ln-s призначення назва_посилання

Ця команда створює символічне посилання за допомогою команди C<ln -s>.

=head2 ln-sf

 ln-sf призначення назва_посилання

Ця команда створює символічне посилання за допомогою команди C<ln
-sf>. Наявність параметра I<-f> вилучає посилання (C<назва_посилання>), якщо
таке вже існує.

=head2 lremovexattr

 lremovexattr xattr шлях

Те саме, що і L</removexattr>, але якщо C<шлях> є символічним посиланням,
вилучає розширені атрибути самого символічного посилання.

Працездатність цієї команди залежить від можливості
C<linuxxattrs>. Див. також L</feature-available>.

=head2 ls

 ls каталог

Виводить список файлів у каталозі F<каталог> (відносно кореневого каталогу,
немає поточного робочого каталогу). Записи «.» та «..» повернуто не буде,
але приховані файли буде показано.

=head2 ls0

 ls0 каталог (назви файлів|-)

Цю спеціалізовану команду використовують для отримання списку назв файлів у
каталозі C<каталог>. Список назв файлів буде записано до локального файла
F<назви_файлів> (у основній системі).

У файлі результатів обробки назви файлів буде відокремлено символами C<\0>.

Серед записів результатів не буде C<.> і C<..>. Назви файлів не
упорядковуватимуться.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 lsetxattr

 lsetxattr розширений_атрибут значення довжина_значення шлях

Те саме, що і L</setxattr>, але якщо C<шлях> є символічним посиланням,
встановлює розширений атрибут самого символічного посилання.

Працездатність цієї команди залежить від можливості
C<linuxxattrs>. Див. також L</feature-available>.

=head2 lstat

 lstat шлях

Повертає дані щодо файла за вказаним шляхом C<шлях>.

Те саме, що і L</stat>, але якщо C<шлях> є символічним посиланням,
статистику буде зібрано для цього посилання, а не для запису, на який воно
посилається.

Це те саме, що системний виклик L<lstat(2)>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</lstatns>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 lstatlist

 lstatlist шлях 'назви ...'

Цей виклик надає змогу виконувати дію L</lstat> над декількома файлами, які
зберігаються у каталозі C<шлях>. Значенням аргументу C<назви> є список
файлів у цьому каталозі.

Команда повертає список структур статистичних даних із однозначною
відповідністю до списку C<назви>. Якщо якоїсь із назв не існує або для
якоїсь із назв не вдасться зібрати статистичні дані, для поля C<st_ino>
структури буде встановлено значення C<-1>.

Цю команду призначено для програм, яким потрібно ефективно будувати список
вмісту каталогів без виконання багатьох обходів. Див. також L</lxattrlist>,
якщо потрібний подібний ефективний підхід для отримання розширених
атрибутів.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</lstatnslist>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 lstatns

 lstatns шлях

Повертає дані щодо файла за вказаним шляхом C<шлях>.

Те саме, що і L</statns>, але якщо C<шлях> є символічним посиланням,
статистику буде зібрано для цього посилання, а не для запису, на який воно
посилається.

Це те саме, що системний виклик L<lstat(2)>.

=head2 lstatnslist

 lstatnslist шлях 'назви ...'

Цей виклик надає змогу виконувати дію L</lstatns> над декількома файлами,
які зберігаються у каталозі C<шлях>. Значенням аргументу C<назви> є список
файлів у цьому каталозі.

Команда повертає список структур статистичних даних із однозначною
відповідністю до списку C<назви>. Якщо якоїсь із назв не існує або для
якоїсь із назв не вдасться зібрати статистичні дані, для поля C<st_ino>
структури буде встановлено значення C<-1>.

Цю команду призначено для програм, яким потрібно ефективно будувати список
вмісту каталогів без виконання багатьох обходів. Див. також L</lxattrlist>,
якщо потрібний подібний ефективний підхід для отримання розширених
атрибутів.

=head2 luks-add-key

 luks-add-key пристрій слот_ключів

Ця команда додає новий ключ на пристрій LUKS C<пристрій>. Ключем C<ключ> є
будь-який наявний ключ, його буде використано для доступу до
пристрою. Значенням параметра C<новий_ключ> є новий ключ, який слід
додати. Значенням параметра C<слот_ключів> є слот ключів, який має бути
замінено.

Зауважте, що якщо у слоті C<слот_ключів> вже міститься ключ, успішно
виконати цю команду не вдасться. Вам доведеться спочатку скористатися
командою L</luks-kill-slot> для вилучення наявного ключа.

Для виконання цієї команди потрібні будуть один або декілька параметрів
ключів або паролів. Guestfish надсилатиме запит щодо цих параметрів окремо.

Працездатність цієї команди залежить від можливості C<luks>. Див. також
L</feature-available>.

=head2 luks-close

 luks-close пристрій

Ця команда закриває пристрій LUKS, який раніше було створено за допомогою
L</luks-open> або L</luks-open-ro>. Значенням параметра C<пристрій> має бути
назва пристрою прив'язки LUKS (тобто F</dev/mapper/назва_прив'язки>), а
I<не> назва підлеглого блокового пристрою.

Працездатність цієї команди залежить від можливості C<luks>. Див. також
L</feature-available>.

=head2 luks-format

 luks-format пристрій слот_ключів

Ця команда витирає наявні дані на пристрої C<пристрій> і форматує пристрій
як зашифрований пристрій LUKS. Значенням параметра C<ключ> є початковий
ключ, який додається до слоту ключів C<слот>. (У LUKS передбачено підтримку
8 слотів ключів, пронумерованих 0-7).

Для виконання цієї команди потрібні будуть один або декілька параметрів
ключів або паролів. Guestfish надсилатиме запит щодо цих параметрів окремо.

Працездатність цієї команди залежить від можливості C<luks>. Див. також
L</feature-available>.

=head2 luks-format-cipher

 luks-format-cipher пристрій слот_ключів шифрування

Ця команда виконує ті самі дії, що і L</luks-format>, але, крім того, надає
вам змогу вказати використане C<шифрування>.

Для виконання цієї команди потрібні будуть один або декілька параметрів
ключів або паролів. Guestfish надсилатиме запит щодо цих параметрів окремо.

Працездатність цієї команди залежить від можливості C<luks>. Див. також
L</feature-available>.

=head2 luks-kill-slot

 luks-kill-slot пристрій слот_ключів

Ця команда вилучає ключ у слоті ключів C<слот_ключів> із зашифрованого
пристрою LUKS C<пристрій>. Значенням параметра C<ключ> має бути один з
I<інших> ключів.

Для виконання цієї команди потрібні будуть один або декілька параметрів
ключів або паролів. Guestfish надсилатиме запит щодо цих параметрів окремо.

Працездатність цієї команди залежить від можливості C<luks>. Див. також
L</feature-available>.

=head2 luks-open

 luks-open пристрій назва_прив'язки

Ця команда відкриває блоковий пристрій, який було зашифровано відповідно до
стандарту Linux Unified Key Setup (LUKS).

C<пристрій> — шифрований блоковий пристрій або розділ.

Засіб виклику має надати один з ключів, пов'язаних із блоковим пристроєм
LUKS, у параметрі C<ключ>.

Ця команда створює блоковий пристрій із назвою
F</dev/mapper/назва_прив'язки>. Читання та запис на цій блоковий пристрій
відбувається із розшифровуванням та шифруванням на підлеглому пристрої
C<пристрій>.

If this block device contains LVM volume groups, then calling L</lvm-scan>
with the C<activate> parameter C<true> will make them visible.

Скористайтеся командою L</list-dm-devices>, щоб отримати список усіх
пристроїв засобу прив'язування пристроїв.

Для виконання цієї команди потрібні будуть один або декілька параметрів
ключів або паролів. Guestfish надсилатиме запит щодо цих параметрів окремо.

Працездатність цієї команди залежить від можливості C<luks>. Див. також
L</feature-available>.

=head2 luks-open-ro

 luks-open-ro пристрій назва_прив'язки

Виконує ті самі дії, що і L</luks-open>, але зі створенням прив'язки, яка
придатна лише для читання даних.

Для виконання цієї команди потрібні будуть один або декілька параметрів
ключів або паролів. Guestfish надсилатиме запит щодо цих параметрів окремо.

Працездатність цієї команди залежить від можливості C<luks>. Див. також
L</feature-available>.

=head2 lvcreate

 lvcreate логічний_том група_томів мегабайти

Ця команда створює логічний том LVM із назвою C<логічний_том> у групі томів
C<група_томів> із розміром C<мегабайти> мегабайтів.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 lvcreate-free

 lvcreate-free логічний_том група_томів відсотки

Створює логічний том LVM із назвою F</dev/група_томів/логічний_том>, який
використовуватиме приблизно C<відсоткиt> % залишкового вільного місця у
групі томів. Найпоширенішим є використання значення C<відсотки> рівного
C<100> для створення найбільшого можливого логічного тому.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 lvm-canonical-lv-name

 lvm-canonical-lv-name назва_логічного_тому

Ця команда перетворює альтернативні схеми найменування логічних томів, які
можуть зустрітися на практиці, на канонічні назви. Приклад:
F</dev/mapper/група_томів-логічний_том> буде перетворено на
F</dev/група_томів/логічний_том>.

Ця команда повертає повідомлення про помилку, якщо параметр
C<назва_логічного_тому> не є назвою наявного логічного тому.

Див. також L</is-lv>, L</canonical-device-name>.

=head2 lvm-clear-filter

 lvm-clear-filter

Скасовує дію L</lvm-set-filter>. LVM зможе бачити усі блокові пристрої.

Крім того, ця команда спорожняє кеш LVM і виконує сканування груп томів.

=head2 lvm-remove-all

 lvm-remove-all

Ця команда вилучає усі логічні томи, групи томів та фізичні томи LVM.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 lvm-scan

 lvm-scan true|false

This scans all block devices and rebuilds the list of LVM physical volumes,
volume groups and logical volumes.

If the C<activate> parameter is C<true> then newly found volume groups and
logical volumes are activated, meaning the LV F</dev/VG/LV> devices become
visible.

When a libguestfs handle is launched it scans for existing devices, so you
do not normally need to use this API.  However it is useful when you have
added a new device or deleted an existing device (such as when the
L</luks-open> API is used).

=head2 lvm-set-filter

 lvm-set-filter 'пристрої...'

Ця команда встановлює фільтр пристроїв LVM так, що LVM зможе «бачити» лише
блокові пристрої зі списку C<пристрої> і ігноруватиме усі інші з'єднані
блокові пристрої.

Там, де образи дисків містять дублікати фізичних томів або груп томів, ця
команда корисна для того, щоб LVM ігнорувала такі дублікати і уникала
конфліктів. Слід також зауважити, що існує два типи дублювання: клоновані
фізичні томи або групи томів, які мають однакові UUIDs; та групи томів, які
не було клоновано, але які мають однакові назви. За звичайних умов,
створення таких дублікатів неможливе, але їх може бути створено за межами
LVM, наприклад, внаслідок клонування образів дисків або втручання до
метаданих LVM.

Крім того, ця команда спорожняє кеш LVM і виконує сканування груп томів.

Ви можете фільтрувати усі блокові пристрої або окремі розділи.

Цією командою не можна користуватися, якщо якась з груп томів
використовується (наприклад, містить змонтовану файлову систему), навіть
якщо ви не викидаєте за допомогою фільтрування цю групу томів.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 lvremove

 lvremove пристрій

Вилучає логічний том LVM C<пристрій>, де C<пристрій> — це шлях до логічного
тому, наприклад F</dev/група_томів/логічний_том>.

Ви також можете вилучити усі логічні томи у групі томів, вказавши назву
групи томів, F</dev/група_томів>.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 lvrename

 lvrename логічний_том новий_логічний_том

Перейменувати логічний том C<логічний_том> на том із назвою
C<новий_логічний_том>.

=head2 lvresize

 lvresize пристрій мегабайти

Ця команда змінює розмір (розширює або стискає) наявний логічний том LVM до
розміру C<мегабайти>. Якщо розміри тому зменшуються, дані у відкинутій у
результаті зменшення розмірів частині тому буде втрачено.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 lvresize-free

 lvresize-free логічний_том відсотки

Ця команда розширює наявний C<логічний_том> так, що він займатиме
C<відсотки>% залишкового вільного місця у групі томів. Типово, ця команда
викликається із значенням відсотки = 100 для розширення логічного тому на
максимальний розмір, використовуючи усе вільне місце у групі томів.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 lvs

 lvs

Виводить список усіх виявлених логічних томів. Є еквівалентом команди
L<lvs(8)>.

Ця команда повертає список назв пристроїв логічних томів (наприклад
F</dev/VolGroup00/LogVol00>).

Див. також L</lvs-full>, L</list-filesystems>.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 lvs-full

 lvs-full

Виводить список усіх виявлених логічних томів. Є еквівалентом команди
L<lvs(8)>. «Повна» версія включає усі поля.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 lvuuid

 lvuuid пристрій

Ця команда повертає UUID логічного тому LVM C<пристрій>.

=head2 lxattrlist

 lxattrlist шлях 'назви ...'

Цей виклик надає змогу отримувати розширені атрибути декількох файлів, які
зберігаються у каталозі C<шлях>. Значенням аргументу C<назви> є список
файлів у цьому каталозі.

Повернуто буде плоский список структур xattr, який слід обробляти
послідовно. Перша структура xattr завжди матиме C<attrname> нульової
довжини. C<attrval> нульової довжини у цій структурі вказуватиме на те, що
під час обробки цього файла за допомогою C<lgetxattr> сталася помилка. I<or>
є рядком C, який містить десяткове число (кількість наступних атрибутів для
цього файла, може бути C<"0">).  Далі, після першої структури xattr буде
розташовано нуль або більше атрибутів першого іменованого файла. Далі, дані
повторюватиметься для другого та наступних файлів.

Цю команду призначено для програм, яким потрібно ефективно будувати список
вмісту каталогів без виконання багатьох обходів. Див. також L</lstatlist>,
якщо потрібний подібний ефективний підхід для отримання стандартних
статистичних даних.

Працездатність цієї команди залежить від можливості
C<linuxxattrs>. Див. також L</feature-available>.

=head2 max-disks

 max-disks

Повертає максимальну кількість дисків, які може бути додано до дескриптора
(наприклад, за допомогою L</add-drive-opts> та подібних команд).

Цю функцію було додано у libguestfs 1.19.7. У попередніх версіях libguestfs
діяло обмеження у 25.

Див. L<guestfs(3)/МАКСИМАЛЬНА КІЛЬКІСТЬ ДИСКІВ>, щоб дізнатися більше про
це.

=head2 md-create

 md-create назва 'пристрої...' [missingbitmap:N] [nrdevices:N] [spare:N] [chunk:N] [level:..]

Створює пристрій md (RAID) Linux із назвою C<назва> на пристроях зі списку
C<пристрої>.

Додатковими параметрами є:

=over 4

=item C<missingbitmap>

Бітова карта пристроїв, яких не вистачає. Якщо біт встановлено, це означає,
що до масиву додано пристрій, якого не вистачає. Найменший біт відповідає
першому пристрої у масиві.

Приклади:

Якщо C<пристрої = ["/dev/sda"]> і C<missingbitmap = 0x1>,
масивом-результатом має бути C<[E<lt>missingE<gt>, "/dev/sda"]>.

Якщо C<пристрої = ["/dev/sda"]> і C<missingbitmap = 0x2>,
масивом-результатом має бути C<["/dev/sda", E<lt>missingE<gt>]>.

Типовим є значення C<0> (немає пристроїв, яких не вистачає).

Довжина запису C<пристрої> + кількість бітів, встановлених у
C<missingbitmap> має дорівнювати C<nrdevices> + C<spare>.

=item C<nrdevices>

Кількість активних пристроїв RAID.

Якщо не встановлено, типовим значенням є довжина запису C<пристрої> плюс
кількість бітів, які встановлено у C<missingbitmap>.

=item C<spare>

Кількість резервних пристроїв.

Якщо не встановлено, типовим значенням є C<0>.

=item C<chunk>

Розмір фрагмента у байтах.

=item C<level>

Рівень RAID, одне з таких значень: I<linear>, I<raid0>, I<0>, I<stripe>,
I<raid1>, I<1>, I<mirror>, I<raid4>, I<4>, I<raid5>, I<5>, I<raid6>, I<6>,
I<raid10>, I<10>.  Деякі з цих значень є синонімами, інші рівні може бути
додано у майбутніх версіях.

Якщо не встановлено, типовим значенням є C<raid1>.

=back

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<mdadm>. Див. також
L</feature-available>.

=head2 md-detail

 md-detail md

Ця команда розкриває виведені «mdadm -DY E<lt>mdE<gt>» дані. У повернутому
хеші, зазвичай, будуть вказані нижче поля. Також там можуть бути інші поля.

=over 

=item C<level>

Рівень RAID пристрою MD.

=item C<devices>

Кількість підлеглих пристроїв у пристрої MD.

=item C<metadata>

Використана версія метаданих.

=item C<uuid>

UUID пристрою MD.

=item C<name>

Назва пристрою MD.

=back

Працездатність цієї команди залежить від можливості C<mdadm>. Див. також
L</feature-available>.

=head2 md-stat

 md-stat md

Ця команда повертає список підлеглих пристроїв, з яких складається окремий
програмний масив RAID пристрою C<md>.

Щоб отримати список пристроїв програмних RAID, скористайтеся викликом
L</list-md-devices>.

Кожна повернута структура відповідає одному пристрою із додатковими
відомостями щодо стану:

=over 4

=item C<mdstat_device>

Назва підлеглого пристрою.

=item C<mdstat_index>

Індекс цього пристрою у масиві.

=item C<mdstat_flags>

Прапорці, пов'язані із цим пристроєм. Ця рядок містить (неупорядкованими)
нуль або більше таких прапорців:

=over 4

=item C<W>

write-mostly

=item C<F>

пристрій працює з помилками

=item C<S>

пристрій є запасною частиною RAID

=item C<R>

заміна

=back

=back

Працездатність цієї команди залежить від можливості C<mdadm>. Див. також
L</feature-available>.

=head2 md-stop

 md-stop md

Ця команда деактивує масив MD із назвою C<md>. Роботу пристрою буде
припинено, але без знищення або занулення.

Працездатність цієї команди залежить від можливості C<mdadm>. Див. також
L</feature-available>.

=head2 mkdir

 mkdir шлях

Створює каталог із назвою C<шлях>.

=head2 mkdir-mode

 mkdir-mode шлях режим

Ця команда створює каталог, встановлюючи початкові права доступу до нього у
значення C<режим>.

Для типових файлових систем Linux справжній режим доступу, який
встановлюється, визначається виразом C<режим & ~umask & 01777>. У файлових
системах, які не є природними для Linux, цей режим може визначатися у інший
спосіб.

Див. також L</mkdir>, L</umask>

=head2 mkdir-p

 mkdir-p шлях

Створює каталог із назвою C<шлях> зі створенням усіх потрібних проміжних
каталогів. Результат подібний до результату дії команди оболонки C<mkdir
-p>.

=head2 mkdtemp

 mkdtemp tmpl

Ця команда створює тимчасовий каталог. Значенням параметра C<tmpl> має бути
повна назва шляху до тимчасового каталогу із завершальними шістьма символами
«XXXXXX».

Приклади: «/tmp/myprogXXXXXX» або «/Temp/myprogXXXXXX». Другий варіант є
придатним для файлових систем Windows.

Буде повернуто назву тимчасового каталогу, який було створено.

Тимчасовий каталог буде створено із режимом доступу 0700, його власником
буде користувач root.

За вилучення тимчасового каталогу і його вмісту після використання
відповідає функція виклику.

Див. також L<mkdtemp(3)>

=head2 mke2fs

 mke2fs пристрій [blockscount:N] [blocksize:N] [fragsize:N] [blockspergroup:N] [numberofgroups:N] [bytesperinode:N] [inodesize:N] [journalsize:N] [numberofinodes:N] [stridesize:N] [stripewidth:N] [maxonlineresize:N] [reservedblockspercentage:N] [mmpupdateinterval:N] [journaldevice:..] [label:..] [lastmounteddir:..] [creatoros:..] [fstype:..] [usagetype:..] [uuid:..] [forcecreate:true|false] [writesbandgrouponly:true|false] [lazyitableinit:true|false] [lazyjournalinit:true|false] [testfs:true|false] [discard:true|false] [quotatype:true|false] [extent:true|false] [filetype:true|false] [flexbg:true|false] [hasjournal:true|false] [journaldev:true|false] [largefile:true|false] [quota:true|false] [resizeinode:true|false] [sparsesuper:true|false] [uninitbg:true|false]

C<mke2fs> використовується для створення файлових систем ext2, ext3 та ext4
на пристрої C<пристрій>.

Необов'язковий параметр C<blockscount> визначає розмір файлової системи у
блоках. Якщо його не вказано, типовим значенням буде розмір пристрою
C<пристрій>. Зауважте, що якщо файлова система буде надто малою для того,
щоб містити журнал, C<mke2fs> без додаткових повідомлень створить файлову
систему ext2.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 mke2fs-J

 mke2fs-J тип_файлової_системи розмір_блоку пристрій журнал

Ця команда створює файлову систему ext2/3/4 на пристрої C<пристрій> із
зовнішнім журналом на розділі C<журнал>. Вона еквівалентна до такої команди:

 mke2fs -t тип_файлової_системи -b розмір_блоку -J device=<журнал> <пристрій>

Див. також L</mke2journal>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</mke2fs>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 mke2fs-JL

 mke2fs-JL тип_файлової_системи розмір_блоку пристрій мітка

Ця команда створює файлову систему ext2/3/4 на пристрої C<пристрій> із
зовнішнім журналом на розділі із міткою C<мітка>.

Див. також L</mke2journal-L>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</mke2fs>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 mke2fs-JU

 mke2fs-JU тип_файлової_системи розмір_блоку пристрій uuid

Ця команда створює файлову систему ext2/3/4 на пристрої C<пристрій> із
зовнішнім журналом на розділі із UUID C<uuid>.

Див. також L</mke2journal-U>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</mke2fs>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

Працездатність цієї команди залежить від можливості
C<linuxfsuuid>. Див. також L</feature-available>.

=head2 mke2journal

 mke2journal розмір_блоку пристрій

Ця команда створює зовнішній журнал ext2 на пристрої C<пристрій>. Вона
еквівалентна до такої команди:

 mke2fs -O пристрій_журналу -b розмір_блоку пристрій

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</mke2fs>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 mke2journal-L

 mke2journal-L розмір_блоку мітка пристрій

Ця команда створює зовнішній журнал ext2 на пристрої C<пристрій> з міткою
C<мітка>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</mke2fs>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 mke2journal-U

 mke2journal-U розмір_блоку uuid пристрій

Ця команда створює зовнішній журнал ext2 на пристрої C<пристрій> із UUID
C<uuid>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</mke2fs>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

Працездатність цієї команди залежить від можливості
C<linuxfsuuid>. Див. також L</feature-available>.

=head2 mkfifo

 mkfifo режим шлях

Ця команда створює FIFO (іменований канал даних) із назвою C<шлях> і режимом
доступу C<режим>. Це просто зручна обгортка до L</mknod>.

На відміну від L</mknod>, параметр C<режим> B<має> містити лише біти прав
доступу.

На встановлений режим доступу впливає umask.

Працездатність цієї команди залежить від можливості C<mknod>. Див. також
L</feature-available>.

=head2 mkfs

=head2 mkfs-opts

 mkfs тип_файлової_системи пристрій [blocksize:N] [features:..] [inode:N] [sectorsize:N] [label:..]

Ця функція створює файлову систему на пристрої C<пристрій>. Типом файлової
системи буде C<тип_файлової_системи>, наприклад C<ext3>.

Необов'язковими аргументами є:

=over 4

=item C<blocksize>

Розмір блоку файлової системи. Підтримувані розміри блоків залежать від типу
файлової системи, але типовими є  C<1024>, C<2048> і C<4096> для файлових
систем ext2/3 Linux.

Для VFAT і NTFS значення параметра C<розмір_блоку> обробляється як бажаний
розмір кластера.

Дані щодо розмірів блоків UFS можна знайти у підручнику до L<mkfs.ufs(8)>.

=item C<features>

Передає параметр I<-O> зовнішній програмі mkfs.

Для деяких типів файлових систем це надає змогу вибрати додаткові можливості
файлової системи. Щоб дізнатися більше, див. L<mke2fs(8)> та L<mkfs.ufs(8)>.

Цей додатковий параметр не можна використовувати для типів файлових систем
C<gfs> та C<gfs2>.

=item C<inode>

Передає параметр I<-I> зовнішній програмі L<mke2fs(8)>, тобто визначає
розмір inode (у поточній версії лише для файлових систем ext2/3/4).

=item C<sectorsize>

Передає параметр I<-S> зовнішній програмі L<mkfs.ufs(8)>, тобто визначає
розмір сектора для файлової системи ufs.

=back

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 mkfs-b

 mkfs-b тип_файлової_системи розмір_блоку пристрій

Ця команда подібна до L</mkfs>, але надає вам змогу контролювати розмір
блоку отриманої файлової системи. Набір підтримуваних розмірів блоків
залежить від типу файлової системи, але типовими є C<1024>, C<2048> та
C<4096>.

Для VFAT і NTFS значення параметра C<розмір_блоку> обробляється як бажаний
розмір кластера.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</mkfs>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 mkfs-btrfs

 mkfs-btrfs 'пристрої...' [allocstart:N] [bytecount:N] [datatype:..] [leafsize:N] [label:..] [metadata:..] [nodesize:N] [sectorsize:N]

Створює файлову систему btrfs із можливим встановленням усіх
налаштувань. Щоб дізнатися більше про додаткові параметри, ознайомтеся зі
сторінкою підручника L<mkfs.btrfs(8)>.

Оскільки дані файлової системи btrfs може бути розподілено між декількома
пристроями, команда приймає непорожній список пристроїв.

Для створення типових файлових систем користуйтеся L</mkfs>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<btrfs>. Див. також
L</feature-available>.

=head2 mklost-and-found

 mklost-and-found точка_монтування

Створює каталог C<lost+found>, зазвичай, у кореневому каталозі файлової
системи ext2/3/4. C<точка_монтування> є каталогом, у якому ми спробуємо
створити каталог C<lost+found>.

=head2 mkmountpoint

 mkmountpoint вільний_шлях

L</mkmountpoint> і L</rmmountpoint> є спеціалізованими викликами, якими
можна скористатися для створення додаткових точок монтування перед
монтуванням першої файлової системи.

Ця виклики необхідні I<лише> у дуже обмежених випадках. Основним їхнім
призначенням є випадок, коли ви хочете змонтувати суміш непов'язаних і/або
придатних лише для читання файлових систем разом.

Наприклад, образи компакт-дисків портативних систем часто місять «матрьошку»
з файлових систем: зовнішній шар ISO, образ squashfs всередині і вкладений у
нього образ ext2/3. Розпакувати такий образ у guestfish можна таким чином:

 add-ro Fedora-11-i686-Live.iso
 run
 mkmountpoint /cd
 mkmountpoint /sqsh
 mkmountpoint /ext3fs
 mount /dev/sda /cd
 mount-loop /cd/LiveOS/squashfs.img /sqsh
 mount-loop /sqsh/LiveOS/ext3fs.img /ext3fs

Внутрішню файлову систему тепер розпаковано до точки монтування /ext3fs.

L</mkmountpoint> є несумісною з L</umount-all>. Якщо ви спробуєте суміщати
ці виклики, можуть статися неочікувані помилки. Найбезпечніше демонтувати
файлові системи вручну, а потім вилучити точки монтування після
використання.

L</umount-all> демонтує файлові системи упорядковуючи шляхи так, щоб у
списку найдовші шляхи були першими. Щоб ця команда могла працювати зі
створеними вручну точками монтування, системи має бути змонтовано так, щоб
точки монтування із найбільшим рівнем вкладеності мали найдовші назви
шляхів, як у наведеному вище прикладі.

Докладніше про це тут: L<https://bugzilla.redhat.com/show_bug.cgi?id=599503>

Автоматична синхронізація [див. L</set-autosync>, встановлюється типово на
дескрипторах] може спричиняти виклик L</umount-all>, коли дескриптор
закривається, що теж може призвести до таких проблем.

=head2 mknod

 mknod режим первинний_пристрій вторинний_пристрій шлях

Створює спеціальні блокові або символьні пристрої або іменовані канали
(FIFO).

Параметр C<режим> має визначати режим доступу з використанням стандартних
сталих. Параметри C<первинний_пристрій> і C<вторинний_пристрій> є номерами
первинного і вторинного пристроїв, які використовуються, лише під час
створення спеціальних блокових та символьних пристроїв.

Зауважте, що, як і у L<mknod(2)>, значення режиму має бути результатом
застосування бітового АБО до значень S_IFBLK, S_IFCHR, S_IFIFO та S_IFSOCK
(інакше цей виклик просто створить звичайний файл). Ці сталі доступні у
стандартних файлах заголовків Linux. Ви також можете скористатися
L</mknod-b>, L</mknod-c> або L</mkfifo>, які є обгортками навколо цієї
команди, які виконують бітове АБО і створюють відповідну сталу за вас.

На встановлений режим доступу впливає umask.

Працездатність цієї команди залежить від можливості C<mknod>. Див. також
L</feature-available>.

=head2 mknod-b

 mknod-b режим первинний_пристрій вторинний_пристрій шлях

Створює вузол блокового пристрою із назвою C<шлях> і режимом доступу
C<режим> та первинний і вторинний пристрої C<первинний_пристрій> і
C<вторинний пристрій>. Це лише зручна обгортка навколо L</mknod>.

На відміну від L</mknod>, параметр C<режим> B<має> містити лише біти прав
доступу.

На встановлений режим доступу впливає umask.

Працездатність цієї команди залежить від можливості C<mknod>. Див. також
L</feature-available>.

=head2 mknod-c

 mknod-c режим первинний_пристрій вторинний_пристрій шлях

Створює вузол символьного пристрою із назвою C<шлях> і режимом доступу
C<режим> та первинний і вторинний пристрої C<первинний_пристрій> і
C<вторинний пристрій>. Це лише зручна обгортка навколо L</mknod>.

На відміну від L</mknod>, параметр C<режим> B<має> містити лише біти прав
доступу.

На встановлений режим доступу впливає umask.

Працездатність цієї команди залежить від можливості C<mknod>. Див. також
L</feature-available>.

=head2 mksquashfs

 mksquashfs шлях (назва_файла|-) [compress:..] [excludes:..]

Створює файлову систему squashfs для вказаного шляху C<шлях>.

Необов'язковий прапорець C<compress> керує стисканням. Якщо його не вказано,
виведені дані буде стиснуто за допомогою C<gzip>. Ви також можете вказати
такі рядки для вибору типу стискання squashfs: C<gzip>, C<lzma>, C<lzo>,
C<lz4>, C<xz>.

Іншими необов'язковими параметрами є такі:

=over 4

=item C<excludes>

Список шаблонів. Файли буде виключено, якщо вони відповідатимуть якомусь із
вказаних шаблонів.

=back

Будь ласка, зауважте, що цей програмний інтерфейс може не спрацювати, якщо
ним користуватися для стискання каталогів із великими файлами, зокрема
такими, для яких отримана файлова система squashfs матиме об'єм понад 3 ГБ.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<squashfs>. Див. також
L</feature-available>.

=head2 mkswap

=head2 mkswap-opts

 mkswap пристрій [label:..] [uuid:..]

Створює розділ резервної пам'яті на диску (swap) Linux на пристрої
C<пристрій>.

За допомогою аргументів параметра C<мітка> і C<uuid> ви можете вказати мітку
і/або UUID для нового розділу резервної пам'яті на диску.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 mkswap-L

 mkswap-L мітка пристрій

Створює розділ резервної пам'яті на диску на пристрої C<пристрій> зі міткою
C<мітка>.

Зауважте, що не можна додавати мітку резервної пам'яті на диску (swap) до
блокового пристрою (наприклад, до F</dev/sda>), лише до розділу. Здається,
це є обмеженням ядра або інструментів для роботи із розділом резервної
пам'яті на диску.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</mkswap>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 mkswap-U

 mkswap-U uuid пристрій

Створює розділ резервної пам'яті на диску на пристрої C<пристрій> із UUID
C<uuid>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</mkswap>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

Працездатність цієї команди залежить від можливості
C<linuxfsuuid>. Див. також L</feature-available>.

=head2 mkswap-file

 mkswap-file шлях

Створити файл резервної пам’яті.

Ця команда просто записує підпис файла резервної пам'яті на диску до
наявного файла. Для створення самого файла скористайтеся чимось подібним до
L</fallocate>.

=head2 mktemp

 mktemp тимчасовий_файл [suffix:..]

Ця команда створює тимчасовий файл. Значенням параметра C<tmpl> має бути
повна назва шляху до тимчасового каталогу із завершальними шістьма символами
«XXXXXX».

Приклади: «/tmp/myprogXXXXXX» або «/Temp/myprogXXXXXX». Другий варіант є
придатним для файлових систем Windows.

Буде повернуто назву тимчасового файла, який було створено.

Тимчасовий файл буде створено із режимом доступу 0600, його власником буде
користувач root.

За вилучення тимчасового файла після використання відповідає функція
виклику.

Якщо буде вказано необов'язковий параметр C<suffix>, до назви тимчасового
файла буде додано вказаний суфікс (наприклад, C<.txt>).

Див. також L</mkdtemp>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 modprobe

 modprobe назва_модуля

Завантажує модуль ядра у базовій системі.

Працездатність цієї команди залежить від можливості
C<linuxmodules>. Див. також L</feature-available>.

=head2 mount

 mount монтований_пристрій точка_монтування

Монтує диск гостьової системи до вказаного місця у файловій системі. Назви
блокових пристроїв визначаються за схемою F</dev/sda>, F</dev/sdb> тощо за
порядком, у якому їх було додано до гостьової системи. Якщо на цих блокових
пристроях містяться розділи, вони матимуть звичні назви (наприклад
F</dev/sda1>). Крім того, можна використовувати назви у стилі LVM
F</dev/група_томів/логічний_том> або рядки «mountable», які повертають
команди L</list-filesystems> та L</inspect-get-mountpoints>.

Правила є тими самими, що і для L<mount(2)>: файлову систему має бути
спочатку змонтовано до F</>, а вже потім мають монтуватися інші файлові
системи. Інші файлові системи може бути змонтовано лише до каталогів, які
вже створено у системі.

Змонтована файлова система є придатною до запису, якщо є достатні права
доступу до підлеглого пристрою.

До версії libguestfs 1.13.16 цей виклик неявним чином додавав параметри
монтування C<sync> та C<noatime>. Використання параметра C<sync> значно
уповільнювало запис і спричиняло значні проблеми для користувачів. Якщо ваша
програма має працювати із застарілими версіями libguestfs, краще
скористайтеся L</mount-options> (використовуючи порожній рядок як перший
параметр, якщо ви не хочете визначати ніяких нетипових параметрів
монтування).

=head2 mount-9p

 mount-9p мітка_монтування точка_монтування [options:..]

Монтує файлову систему virtio-9p із міткою C<мітка_монтування> до каталогу
C<точка_монтування>.

Якщо потрібно, до параметрів буде автоматично додано C<trans=virtio>. Усі
інші потрібні параметри можна передати за допомогою необов'язкового
параметра C<options>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 mount-local

 mount-local локальна_точка_монтування [readonly:true|false] [options:..] [cachetimeout:N] [debugcalls:true|false]

Цей виклик експортує доступну для libguestfs файлову систему до локальної
точки монтування (каталогу) із назвою C<локальна_точка_монтування>. Звичайні
запити щодо читання і запису до файлів і каталогів у каталозі
C<локальна_точка_монтування> переспрямовуватимуться через libguestfs.

Якщо для необов'язкового прапорця C<readonly> встановлено значення true,
спроби запису до файлової системи призводитимуть до помилки C<EROFS>.

Аргументом C<options> має бути список параметрів монтування, відокремлених
комами. Корисну інформацію щодо параметрів можна знайти на сторінці
підручника щодо L<guestmount(1)>.

C<cachetimeout> встановлює час очікування у секундах на отримання записів
каталогу кешування. Типовим значенням є 60 секунд. Див. L<guestmount(1)>,
щоб дізнатися більше.

Якщо для параметра C<debugcalls> встановлено значення true, для кожного
виклику FUSE створюються додаткові діагностичні дані.

Коли L</mount-local> повертає керування, файлова система готова, але не
обробляє запити (доступ до неї блокуватиметься). Вам слід викликати
L</mount-local-run>, щоб запустити основний цикл обробки.

Із повною документацією можна ознайомитися у розділі L<guestfs(3)/ЛОКАЛЬНЕ
МОНТУВАННЯ>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 mount-local-run

 mount-local-run

Виконує основний цикл обробки, який перетворює виклики ядра на виклики
libguestfs.

Цю команду слід викликати, лише якщо успішно виконано
L</mount-local>. Виклик команди не поверне керування, доки файлову систему
не буде змонтовано.

B<Зауваження>: I<не> виконуйте конкурентні виклики libguestfs щодо одного
дескриптора з різних потоків обробки.

Ви можете викликати цю команду із іншого потоку обробки ніж той, з якого
викликано L</mount-local>, виконуючи звичні правила щодо роботи з декількома
потоками обробки і libguestfs (див. L<guestfs(3)/ОБРОБКА У ДЕКІЛЬКА
ДЕСКРПИТОРІВ І ПОТОКІВ>).

Із повною документацією можна ознайомитися у розділі L<guestfs(3)/ЛОКАЛЬНЕ
МОНТУВАННЯ>.

=head2 mount-loop

 mount-loop файл точка_монтування

За допомогою цієї команди ви можете змонтувати F<файл> (образ файлової
системи у файлі) до точки монтування. Це точний еквівалент команди C<mount
-o loop файл точка_монтування>.

=head2 mount-options

 mount-options параметри монтування точка_монтування

Те саме, що і команда L</mount>, але надає вам змогу встановити параметри
монтування, подібно до параметра команди L<mount(8)> I<-o>.

Якщо значенням параметра C<параметри> є порожній рядок, параметри не
передаватимуться (буде використано типовий набір параметрів для файлової
системи).

=head2 mount-ro

 mount-ro монтування точка_монтування

Те саме, що і команда L</mount>, але монтує файлову систему у режимі лише
читання (використовує параметр I<-o ro>).

=head2 mount-vfs

 mount-vfs параметри тип_файлової_системи монтування точка_монтування

Те саме, що і команда L</mount>, але надає вам змогу встановити параметри
монтування і тип файлової системи, подібно до параметрів команди L<mount(8)>
I<-o> і I<-t>.

=head2 mountable-device

 mountable-device монтування

Повертає назву пристрою для монтування. У переважній кількості випадків
значенням параметра «монтування» є назва пристрою.

Втім, це не стосується підтомів btrfs, де значенням параметра «монтування» є
поєднання назви пристрою та шляху до підтому (див. також
L</mountable-subvolume>, щоб дізнатися про те, як визначити шлях до підтому
для монтування, якщо такий передбачено).

=head2 mountable-subvolume

 mountable-subvolume монтування

Повертає шлях до підтому для монтування. Монтування підтомів btrfs є
поєднаннями назви пристрою і шляху до підтому (див. також
L</mountable-device>, щоб дізнатися про те, як визначити назву пристрою для
монтування).

Якщо монтування є не підтомом btrfs, ця функція завершує роботу із помилкою
і встановлює для C<errno> значення C<EINVAL>.

=head2 mountpoints

 mountpoints

Цей виклик подібний до L</mounts>. Виклик повертає список пристроїв. Запис
списку є таблицею хешів (картою) з назви пристрою і каталогу, до якого
змонтовано пристрій.

=head2 mounts

 mounts

Повертає список поточних змонтованих файлових систем. Результатом виконання
є список пристроїв (наприклад, F</dev/sda1>, F</dev/VG/LV>).

Деякі внутрішні монтування не буде включено до списку.

Див. також L</mountpoints>

=head2 mv

 mv джерело призначення

Пересуває файл з адреси C<джерело> до адреси C<призначення>, де значенням
C<призначення> є або назва файла призначення, або назва каталогу
призначення.

Див. також L</rename>.

=head2 nr-devices

 nr-devices

Повертає кількість усіх доданих блокових пристроїв. Це та сама кількість
пристроїв, яку було б повернуто, якби ви викликали L</list-devices>.

Щоб визначити максимальну кількість пристроїв, які може бути додано,
викличте L</max-disks>.

=head2 ntfs-3g-probe

 ntfs-3g-probe true|false пристрій

Ця команда запускає програму L<ntfs-3g.probe(8)>, яка зондує пристрій NTFS
C<пристрій> на можливість монтування. (Не усі томи NTFS може бути змонтовано
для читання і запису, а деякі не може бути змонтовано взагалі).

C<rw> є булевим прапорцем. Встановіть значення true, якщо ви хочете
перевірити, чи можна змонтувати том у режимі читання-запису. Встановіть
значення false, якщо ви хочете перевірити, чи може бути змонтовано тому у
режимі лише читання.

Повертає ціле значення рівне C<0>, якщо дію з монтування може бути виконано
успішно, або рівне якомусь іншому значенню, документацію щодо якого можна
знайти на сторінці підручника щодо L<ntfs-3g.probe(8)>.

Працездатність цієї команди залежить від можливості C<ntfs3g>. Див. також
L</feature-available>.

=head2 ntfscat-i

 ntfscat-i пристрій inode (назва файла|-)

Отримати файл, заданий за допомогою inode, з файлової системи NTFS і
зберегти його з назвою F<назва файла> на локальній машині.

Надає змогу отримувати недоступні у інший спосіб файли, зокрема файли з теки
C<$Extend>.

Файлову систему, звідки слід видобути файл, має бути демонтовано. Якщо цього
не буде зроблено, виклик завершиться повідомленням про помилку.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 ntfsclone-in

 ntfsclone-in (файл_резервної_копії|-) пристрій

Відновити C<файл_резервної_копії> (створений попереднім викликом
L</ntfsclone-out>) на пристрої C<пристрій> із перезаписом усього наявного
вмісту пристрою.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

Працездатність цієї команди залежить від можливості C<ntfs3g>. Див. також
L</feature-available>.

=head2 ntfsclone-out

 ntfsclone-out пристрій (backupfile|-) [metadataonly:true|false] [rescue:true|false] [ignorefscheck:true|false] [preservetimestamps:true|false] [force:true|false]

Записати дані файлової системи NTFS з пристрою C<пристрій> до локального
файла C<файл_резервної_копії>. Для файла резервної копії буде використано
спеціальний формат, який використовується програмою L<ntfsclone(8)>.

Якщо для необов'язкового прапорця C<metadataonly> встановлено значення true,
збережено буде I<лише> метадані. Усі дані користувача буде втрачено (такий
режим є корисним для діагностування проблем файлової системи).

Опис необов'язкових прапорців C<rescue>, C<ignorefscheck>,
C<preservetimestamps> та C<force> можна знайти на сторінці підручника
L<ntfsclone(8)>.

Використовує L</ntfsclone-in> для відновлення резервної копії у файлі на
пристрої libguestfs.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<ntfs3g>. Див. також
L</feature-available>.

=head2 ntfsfix

 ntfsfix пристрій [clearbadsectors:true|false]

Ця команда виправляє деякі фундаментальні проблеми NTFS, відновлює
початковий стан журналу NTFS і додає заплановану перевірку коректності NTFS
під час першого ж завантаження до Windows.

Ця команда I<не> є еквівалентом C<chkdsk> Windows. Вона I<не> виконує
перевірки коректності файлової системи.

За допомогою необов'язкового прапорця C<clearbadsectors> можна спорожнити
список помилкових секторів. Це корисно при клонуванні диска із помилковими
секторами на новий диск.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<ntfs3g>. Див. також
L</feature-available>.

=head2 ntfsresize

=head2 ntfsresize-opts

 ntfsresize пристрій [size:N] [force:true|false]

Ця команда змінює розмір файлової системи NTFS, розширюючи або стискаючи її
до розміру підлеглого пристрою.

Додатковими параметрами є:

=over 4

=item C<розмір>

Новий розмір (у байтах) файлової системи. Якщо не вказано, розмір файлової
системи буде змінено до розмірів контейнера (наприклад розділу).

=item C<force>

Якщо цей параметр має значення true, буде виконано примусову зміну розміру
файлової системи, навіть якщо файлову систему позначено як таку, яка
потребує перевірки на коректність.

Після виконання дії зі зміни розміру файлову систему завжди буде позначено
як таку, яка потребує перевірки на коректність (з міркувань безпеки). Вам
слід завантажити Windows, щоб виконати перевірку і зняти позначення. Якщо ви
I<не> встановлювали параметр C<force>, L</ntfsresize> не можна буде
викликати декілька разів поспіль для однієї файлової системи без
завантаження Windows між діями зі зміни розміру.

=back

Див. також L<ntfsresize(8)>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<ntfsprogs>. Див. також
L</feature-available>.

=head2 ntfsresize-size

 ntfsresize-size пристрій розмір

Ця команда виконує ті самі дії, що і L</ntfsresize>, але вона надає вам
змогу вказати новий розмір (у байтах) явним чином.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</ntfsresize>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

Працездатність цієї команди залежить від можливості C<ntfsprogs>. Див. також
L</feature-available>.

=head2 parse-environment

 parse-environment

Виконує обробку середовища програми і встановлює прапорців у дескрипторі
відповідним чином. Наприклад, якщо C<LIBGUESTFS_DEBUG=1>, у дескрипторі буде
встановлено прапорець «verbose».

I<У більшості програм потреби у виконанні цієї дії немає>. Дія неявним чином
виконується під час виклику L</create>.

Див. L<guestfs(3)/ЗМІННІ СЕРЕДОВИЩА>, де наведено список змінних середовища,
які впливають на засоби обробки libguestfs. Див. також
L<guestfs(3)/guestfs_create_flags> та L</parse-environment-list>.

=head2 parse-environment-list

 parse-environment-list 'середовище ...'

Обробляє список рядків у аргументі C<середовище> і встановлює відповідним
чином прапорці у дескрипторі. Наприклад, якщо у списку є рядок
C<LIBGUESTFS_DEBUG=1>, у дескрипторі буде встановлено прапорець «verbose».

Те саме, що і L</parse-environment>, але обробляє явним список рядків,
замість середовища програми.

=head2 part-add

 part-add пристрій prlogex початковий_сектор кінцевий_сектор

Ця команда додає розділ на C<пристрій>. Якщо на пристрої немає таблиці
розділів, спочатку слід викликати L</part-init>.

Значенням параметра C<prlogex> є тип розділу. Зазвичай, вам слід передати
тип C<p> або C<primary>, але у таблицях розділів MBR також передбачено
підтримку типів розділів C<l> (або C<logical>) і C<e> (або C<extended>).

Значеннями параметрів C<початковий_сектор> і C<кінцевий_сектор> є початок і
кінець розділу, вказані за номерами I<секторів>. Значенням параметра
C<кінцевий_сектор> може бути від'ємне значення, що означає, що сектори слід
лічити з кінця диска (C<-1> означає «останній сектор»).

Створення розділу, який займатиме увесь диск є непростою справою. Для
виконання цього завдання скористайтеся L</part-disk>.

=head2 part-del

 part-del пристрій номер_розділу

Ця команда вилучає розділ із номером C<номер_розділу> на пристрої
C<пристрій>.

Зауважте, що у випадку розділів у MBR вилучення розширеного розділу
призводить до вилучення усіх логічних розділів, які на ньому містяться.

=head2 part-disk

 part-disk пристрій тип_розділу

Ця команда є простою комбінацією L</part-init> з наступною L</part-add> для
створення єдиного основного розділу, який займатиме увесь диск.

Значенням параметра C<тип_розділу> є тип таблиці розділів, зазвичай, C<mbr>
або C<gpt>, але можливі і інші значення, описані у довідці з L</part-init>.

=head2 part-expand-gpt

 part-expand-gpt пристрій

Пересуває резервні копії структур даних GPT у кінець диска. Корисно у
випадку розширення образу на місці, оскільки простір на диску після
резервної копії заголовка GPT не можна використовувати. Еквівалент C<sgdisk
-e>.

Див. також L<sgdisk(8)>.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-get-bootable

 part-get-bootable пристрій номер_розділу

Ця команда повертає true, якщо для розділу C<номер_розділу> на пристрої
C<пристрій> встановлено прапорець можливості завантаження.

Див. також L</part-set-bootable>.

=head2 part-get-disk-guid

 part-get-disk-guid пристрій

Повертає ідентифікатор диска (GUID) пристрою C<пристрій> із таблицею
розділів GPT. Для інших типів таблиць розділів поведінку команди не
визначено.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-get-gpt-attributes

 part-get-gpt-attributes пристрій номер_розділу

Повертає прапорці атрибутів вказаного за номером розділу GPT
C<номер_розділу>. Повертає помилку для розділів MBR.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-get-gpt-guid

 part-get-gpt-guid пристрій номер_розділу

Повертає GUID вказаного за номером розділу GPT C<номер_розділу>.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-get-gpt-type

 part-get-gpt-type пристрій номер_розділу

Повертає GUID типу вказаного за номером розділу GPT C<номер_розділу>. Для
розділів MBR повертає відповідний GUID для типу MBR. Для інших типів
розділів поведінку не визначено.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-get-mbr-id

 part-get-mbr-id пристрій номер_розділу

Повертає байт типу MBR (також відомий як байт ID) для вказаного за номером
розділу C<номер_розділу>.

Зауважте, що байти типу мають лише розділи MBR (застарілі розділи у стилі
DOS). Ви отримаєте невизначені результати для інших типів таблиць розділів
(див. L</part-get-parttype>).

=head2 part-get-mbr-part-type

 part-get-mbr-part-type пристрій номер_розділу

Повертає тип розділу MBR, вказаного за номером C<номер_розділу>, на пристрої
C<пристрій>.

Повертає C<primary>, C<logical> або C<extended>.

=head2 part-get-name

 part-get-name пристрій номер_розділу

Ця команда отримує назву розділу на вказаному за номером розділі C<номер
розділу> на пристрої C<пристрій>. Зауважте, що нумерація розділів
розпочинається з 1.

Назву розділу можна прочитати лише для певних типів таблиць розділів. Це
працює для таблиць C<gpt>, але не для таблиць C<mbr>.

=head2 part-get-parttype

 part-get-parttype пристрій

Ця команда виконує вивчення таблиці розділів на пристрої C<пристрій> і
повертає тип таблиці розділів (формат), який на ньому використано.

Серед типових повернутих значень: C<msdos> (таблиця розділів MBR у стилі
DOS/Windows), C<gpt> (таблиця розділів у стилі GPT/EFI). Можливі також інші
значення, але вони є рідкісними. Повний список можна знайти у розділі щодо
L</part-init>.

=head2 part-init

 part-init пристрій тип_розділу

Ця команда створює порожню таблицю розділів на пристрої C<пристрій>,
використовуючи тип розділів із наведеного нижче списку. Зазвичай, значенням
параметра C<тип_розділу> має бути C<msdos> або C<gpt> (для великих дисків).

Спочатку на пристрої немає розділів. Після цієї команди вам слід викликати
L</part-add> для кожного потрібного вам розділу.

Можливі значення для параметра C<тип_розділу>:

=over 4

=item B<efi>

=item B<gpt>

Таблиця розділів EFI / GPT Intel.

Цей варіант є рекомендованим для розділів із розміром >= 2 ТБ, доступ до
яких здійснюватиметься з Linux та заснованої на архітектурі Intel Mac OS
X. Крім того, цей варіант має обмежену зворотну сумісність із форматом
C<mbr>.

=item B<mbr>

=item B<msdos>

Стандартний для ПК формат «Master Boot Record» (MBR), який використовувався
MS-DOS і Windows. Цей тип розділу працюватиме B<лише> для пристроїв, розмір
яких не перевищує 2 ТБ. Для дисків більшого розміру ми рекомендуємо
скористатися C<gpt>.

=back

Для інших типів таблиць розділів це теж може працювати, але їхньої підтримки
не передбачено. Це зокрема:

=over 4

=item B<aix>

Мітки дисків AIX.

=item B<amiga>

=item B<rdb>

Формат "Rigid Disk Block" Amiga.

=item B<bsd>

Мітки дисків BSD.

=item B<dasd>

DASD, використовувалися у мейнфреймах IBM.

=item B<dvh>

Томи MIPS/SGI.

=item B<mac>

Старий формат розділів Mac. Сучасні системи Mac використовують C<gpt>.

=item B<pc98>

Формат NEC PC-98, поширений у Японії.

=item B<sun>

Мітки дисків Sun.

=back

=head2 part-list

 part-list device

Ця команда обробляє таблицю розділів пристрою C<пристрій> і повертає список
знайдених розділів.

Поля повернутої структури:

=over 4

=item B<part_num>

Номер розділу, відлік від 1.

=item B<part_start>

Позиція початку розділу I<у байтах>. Для отримання позиції у секторах вам
слід поділити це значення на розмір сектора, див. L</blockdev-getss>.

=item B<part_end>

Позиція завершення розділу у байтах.

=item B<part_size>

Розмір розділу у байтах.

=back

=head2 part-resize

 part-resize пристрій номер_розділу кінцевий_сектор

Ця команда змінює розмір розділу із номером C<номер_розділу> на пристрої
C<пристрій>, посуваючи позицію кінця розділу.

Зауважте, що ця команда не вносить змін до файлових систем на розділі. Якщо
вам потрібно змінити розмір файлової системи, вам слід скористатися
командами зміни розмірів файлових систем, наприклад L</resize2fs>.

Якщо ви збільшуєте розміри розділу, далі вам слід збільшити розміри файлової
системи. Якщо ж ви зменшуєте розміри розділу, спочатку вам слід зменшити
розміри файлової системи на ньому.

=head2 part-set-bootable

 part-set-bootable пристрій номер_розділу true|false

Ця команда встановлює прапорець можливості завантаження на вказаному за
номером розділі C<номер розділу> на пристрої C<пристрій>. Зауважте, що
нумерація розділів розпочинається з 1.

Прапорець можливості завантаження використовується певними операційними
системами (найпоширенішою з яких є Windows) для визначення розділу, з якого
слід виконувати завантаження. Він ніяким чином не є універсальним.

=head2 part-set-disk-guid

 part-set-disk-guid пристрій guid

Встановлює ідентифікатор диска (GUID) пристрою із таблицею розділів GPT
C<пристрій> у значення C<guid>. Повертає помилку, якщо таблицею розділів
пристрою C<пристрій> не є GPT або якщо C<guid> не є коректним GUID.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-set-disk-guid-random

 part-set-disk-guid-random пристрій

Встановлює ідентифікатор диска (GUID) пристрою із таблицею розділів GPT
C<пристрій> у створене випадковим чином значення. Повертає помилку, якщо
таблицею розділів пристрою C<пристрій> не є GPT.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-set-gpt-attributes

 part-set-gpt-attributes пристрій номер_розділу атрибути

Встановлює прапорці атрибутів вказаного за номером розділу GPT
C<номер_розділу> у значення C<атрибути>. Повертає помилку, якщо таблицею
розділів пристрою C<пристрій> не є GPT.

Див.
L<https://en.wikipedia.org/wiki/GUID_Partition_Table#Partition_entries>, де
наведено корисний список атрибутів розділів.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-set-gpt-guid

 part-set-gpt-guid пристрій номер_розділу guid

Встановлює GUID вказаного за номером C<номер_розділу> пристрою із таблицею
розділів GPT C<пристрій> у значення C<guid>. Повертає помилку, якщо таблицею
розділів пристрою C<пристрій> не є GPT або якщо C<guid> не є коректним GUID.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-set-gpt-type

 part-set-gpt-type пристрій номер_розділу guid

Встановлює GUID типу пристрою вказаного за номером C<номер_розділу> пристрою
із таблицею розділів GPT у значення C<guid>. Повертає помилку, якщо таблицею
розділів пристрою C<пристрій> не є GPT або якщо C<guid> не є коректним GUID.

Див.
L<http://en.wikipedia.org/wiki/GUID_Partition_Table#Partition_type_GUIDs>,
де наведено корисний список GUID типів.

Працездатність цієї команди залежить від можливості C<gdisk>. Див. також
L</feature-available>.

=head2 part-set-mbr-id

 part-set-mbr-id пристрій_номер розділу ід_байт

Встановлює байт типу MBR (також відомий як байт ID) для вказаного за номером
розділу C<номер_розділу> у значення C<ід_байт>. Зауважте, що байти типів у
більшій частині документації є насправді шістнадцятковими числами, але
фігурують у тексті без початкового «0x», що може ввести читача в оману.

Зауважте, що байти типу мають лише розділи MBR (застарілі розділи у стилі
DOS). Ви отримаєте невизначені результати для інших типів таблиць розділів
(див. L</part-get-parttype>).

=head2 part-set-name

 part-set-name пристрій номер_розділу назва

Ця команда встановлює назву розділу на вказаному за номером розділі C<номер
розділу> на пристрої C<пристрій>. Зауважте, що нумерація розділів
розпочинається з 1.

Назву розділу можна встановити лише для певних типів таблиць розділів. Це
працює для таблиць C<gpt>, але не для таблиць C<mbr>.

=head2 part-to-dev

 part-to-dev розділ

Цій функції передається назва розділу (наприклад «/dev/sdb1»), вона вилучає
номер розділу, повертаючи назву розділу (наприклад «/dev/sdb»).

Іменований розділ має існувати, наприклад, як рядок, який повертає
L</list-partitions>.

Див. також L</part-to-partnum>, L</device-index>.

=head2 part-to-partnum

 part-to-partnum розділ

Цій функції передається назва розділу (наприклад «/dev/sdb1»), вона повертає
номер розділу (наприклад C<1>).

Іменований розділ має існувати, наприклад, як рядок, який повертає
L</list-partitions>.

Див. також L</part-to-dev>.

=head2 ping-daemon

 ping-daemon

Це зонд для тестування фонової служби guestfs, запущеної у базовій системі
libguestfs. Виклик цієї служби перевіряє, чи відповідає фонова служба на
луна-повідомлення, ніяк інакше не впливаючи на роботу фонової служби або
долучених блокових пристроїв.

=head2 pread

 pread шлях кількість відступ

За допомогою цієї команди ви можете прочитати частину файла. Вона читає
C<кількість> байтів з файла, починаючи з позиції C<відступ>. Файл задається
записом C<шлях>.

Команда може прочитати менше байтів, ніж було вказано у параметрах
команди. Щоб дізнатися більше про це, ознайомтеся зі сторінкою підручника
щодо системного виклику L<pread(2)>.

Див. також L</pwrite>, L</pread-device>.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 pread-device

 pread-device пристрій кількість відступ

За допомогою цієї команди ви можете прочитати частину вмісту блокового
пристрою. Вона читає C<кількість> байтів з пристрою C<пристрій>, починаючи з
позиції C<відступ>.

Команда може прочитати менше байтів, ніж було вказано у параметрах
команди. Щоб дізнатися більше про це, ознайомтеся зі сторінкою підручника
щодо системного виклику L<pread(2)>.

Див. також L</pread>.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 pvchange-uuid

 pvchange-uuid пристрій

Створити новий випадковий UUID для фізичного тому C<пристрій>.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 pvchange-uuid-all

 pvchange-uuid-all

Створити нові випадкові UUID для всіх фізичних томів.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 pvcreate

 pvcreate пристрій

Ця команда створює фізичний том LVM із назвою C<пристрій>, де C<пристрій>,
зазвичай, має бути назвою розділу, наприклад F</dev/sda1>.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 pvremove

 pvremove пристрій

Ця команда витирає вміст фізичного тому C<пристрій> так, що LVM більше його
не розпізнає.

У цій реалізації використано команду C<pvremove>, яка забороняє витирати
фізичні томи, які містять будь-які групи томів. Тому вам слід спочатку
вилучити групи.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 pvresize

 pvresize пристрій

Ця команда змінює розмір (розширює або стискає) наявний логічний том LVM
так, щоб він відповідав за розміром новому розміру базового пристрою.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 pvresize-size

 pvresize-size пристрій розмір

Ця команда виконує ті самі дії, що і L</pvresize>, але вона надає вам змогу
вказати новий розмір (у байтах) явним чином.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 pvs

 pvs

Виводить список усіх виявлених фізичних томів. Є еквівалентом команди
L<pvs(8)>.

Ця команда повертає список назв лише тих пристроїв, на яких містяться
фізичні томи (наприклад F</dev/sda2>).

Див. також L</pvs-full>.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 pvs-full

 pvs-full

Виводить список усіх виявлених фізичних томів. Є еквівалентом команди
L<pvs(8)>. «Повна» версія включає усі поля.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 pvuuid

 pvuuid пристрій

Ця команда повертає UUID фізичного тому LVM C<пристрій>.

=head2 pwrite

 pwrite шлях дані відступ

Ця команда записує частину файла. Команда записує буфер даних C<дані> до
файла C<шлях>, починаючи з відступу C<відступ>.

Ця команда реалізує системний виклик L<pwrite(2)> і, подібно до цього
системного виклику, вона може не записати повністю вказані дані. Повернуте
значення є кількістю байтів, які насправді було записано до файла. Цим
значенням може бути навіть 0, хоча обрізані записи є малоймовірними для
звичайних файлів у звичайних обставинах.

Див. також L</pread>, L</pwrite-device>.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 pwrite-device

 pwrite-device пристрій дані відступ

Ця команда записує частину пристрою. Команда записує буфер даних C<дані> до
пристрою C<пристрій>, починаючи з відступу C<відступ>.

Ця команда реалізує системний виклик L<pwrite(2)> і, подібно до цього
системного виклику, вона може не записати повністю вказані дані (хоча
обрізаний запис на дискові пристрої і розділи майже неможливий зі
стандартними ядрами Linux).

Див. також L</pwrite>.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 read-file

 read-file шлях

Цей виклик повертає вміст файла C<шлях> як буфер даних.

На відміну від L</cat>, ця функція може правильно обробляти файли, які
містять вбудовані символи NUL ASCII.

=head2 read-lines

 read-lines шлях

Повертає вміст файла із назвою C<шлях>.

Вміст файла повертається як список рядків. Послідовності символів C<LF> та
C<CRLF> наприкінці рядків I<не> повертаються.

Зауважте, що ця функція не може належним чином обробляти двійкові файли
(особливо, файли, у яких містяться символи C<\0>, які вважаються символами
кінця рядка). Для таких файлів слід використовувати функцію L</read-file> і
ділити буфер на рядки власноруч.

=head2 readdir

 readdir каталог

Ця команда повертає список записів у каталозі C<каталог>.

Буде повернуто усі записи у каталозі, зокрема і записи C<.> та C<..>. Записи
I<не> упорядковуватимуться, їх буде повернуто у тому самому порядку, у якому
вони зберігаються у базовій файловій системі.

Крім того, цей виклик повертає базові дані щодо типу файла для кожного з
файлів. У полі C<ftyp> міститиметься один з таких символів:

=over 4

=item 'b'

Блоковий особливий

=item 'c'

Символьний особливий

=item 'd'

Каталог

=item 'f'

FIFO (іменований канал)

=item 'l'

Символічне посилання

=item 'r'

Звичайний файл

=item 's'

Сокет

=item 'u'

Невідомий тип файла

=item '?'

Викликом L<readdir(3)> повернуто поле C<d_type> із неочікуваним значенням

=back

Цю функцію створено, в основному, для використання у програмах. Щоб отримати
простий список назв, скористайтеся L</ls>. Щоб отримати придатний для друку
і сприйняття людиною список каталогу, скористайтеся L</ll>.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 readlink

 readlink шлях

Ця команда читає файл, на який посилається символічне посилання.

=head2 readlinklist

 readlinklist шлях 'назви ...'

Цей виклик надає змогу виконувати дію L</readlink> над декількома файлами,
які зберігаються у каталозі C<шлях>. Значенням аргументу C<назви> є список
файлів у цьому каталозі.

Повернуто буде список рядків із однозначною відповідністю до списку
C<назви>. У кожному рядку буде значення символічного посилання.

Якщо не вдається виконати дію L<readlink(2)> для якоїсь із назв, відповідним
рядком-результатом буде порожній рядок C<"">.  Втім, обробку буде завершено,
навіть якщо стануться якісь помилки у L<readlink(2)>, тому ви можете
викликати цю функцію для назв, про які немає відомостей щодо того, чи є вони
символічними посиланнями (хоча такі виклики і будуть дещо менш ефективними).

Цю команду призначено для програм, яким потрібно ефективно будувати список
вмісту каталогів без виконання багатьох обходів.

=head2 realpath

 realpath шлях

Повертає перетворену до канонічної форми абсолютну назву шляху C<шлях>. У
повернутому шляху не буде елементів C<.>, C<..> або шляхів символічних
посилань.

=head2 remount

 remount точка_монтування [rw:true|false]

За допомогою цього виклику ви можете змінити значення прапорця C<rw> (лише
читання/читання і запис) на вже змонтованій до точки монтування
C<точка_монтування> файловій системі, перетворивши придатну лише для читання
файлову систему на систему із можливостями читання і запису, і навпаки.

Зауважте, що у поточній версії вам доведеться вказати «необов'язковий»
параметр C<rw>. У майбутньому ми можемо уможливити зміну інших прапорців
файлової системи.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 remove-drive

 remove-drive мітка

Концептуально, ця функція є протилежністю L</add-drive-opts>. Вона вилучає
диск, який раніше було додано з міткою C<мітка>.

Зауважте, що для вилучення дисків за допомогою цієї команди вам слід
додавати їх з мітками (див. необов'язковий аргумент C<label> у
L</add-drive-opts>). Якщо ви не вказали мітку, вилучити диск за допомогою
цієї команди не вдасться.

Цю функцію можна викликати до або після запуску дескриптора. Якщо її
викликано після запуску і підтримку подібної операції передбачено у модулі
обробки, буде виконано спробу від'єднання диска у «гарячому» режимі:
див. L<guestfs(3)/З'ЄДНАННЯ У «ГАРЯЧОМУ» РЕЖИМІ>. Диск під час цієї операції
вже B<не повинен> використовуватися (тобто бути змонтованим). Функція
намагатиметься визначити, чи використовується диск, і запобігатиме
від'єднанню використаних дисків.

=head2 removexattr

 removexattr розширений_атрибут шлях

Цей виклик вилучає розширений атрибут із назвою C<розширений_атрибут> з
файла C<шлях>.

Див. також L</lremovexattr>, L<attr(5)>.

Працездатність цієї команди залежить від можливості
C<linuxxattrs>. Див. також L</feature-available>.

=head2 rename

 rename стара_адреса нова_адреса

Перейменовує файл, пересуваючи його до нового місця у файловій системі. Те
саме, що системний виклик L<rename(2)>  у Linux. У більшості випадків варто
замість цієї команди використовувати L</mv>.

=head2 resize2fs

 resize2fs пристрій

Змінює розміри файлової системи ext2, ext3 або ext4 так, щоб її розмір
збігався із розміром базового пристрою.

Див. також L<guestfs(3)/RESIZE2FS ERRORS>.

=head2 resize2fs-M

 resize2fs-M пристрій

Ця команда аналогічна до L</resize2fs>, але розмір файлової системи
змінюється до найменшого. Це працює як параметр I<-M> команди C<resize2fs>.

Щоб отримати остаточний розмір файлової системи, вам слід викликати
L</tune2fs-l> і прочитати значення C<Block size> та C<Block count>. Ці два
числа, перемножені між собою, дадуть остаточний розмір файлової системи у
байтах.

Див. також L<guestfs(3)/RESIZE2FS ERRORS>.

=head2 resize2fs-size

 resize2fs-size пристрій розмір

Ця команда виконує ті самі дії, що і L</resize2fs>, але вона надає вам змогу
вказати новий розмір (у байтах) явним чином.

Див. також L<guestfs(3)/RESIZE2FS ERRORS>.

=head2 rm

 rm шлях

Вилучити одинарний файл C<шлях>.

=head2 rm-f

 rm-f шлях

Вилучити файл C<шлях>.

Якщо файла не існує, помилку буде проігноровано. (Інші помилки, наприклад
помилки введення-виведення та помилки у шляхах, не ігноруватимуться.)

Ця команда не може вилучати каталоги. Для вилучення порожнього каталогу
скористайтеся командою L</rmdir>. Для рекурсивного вилучення каталогів слід
використовувати L</rm-rf>.

=head2 rm-rf

 rm-rf шлях

Вилучає файл або каталог C<шлях>. Діє рекурсивно, якщо вказано
каталог. Подібна до команди C<rm -rf>, відданої з командної оболонки.

=head2 rmdir

 rmdir шлях

Вилучає окремий каталог C<шлях>.

=head2 rmmountpoint

 rmmountpoint вільний_шлях

This call removes a mountpoint that was previously created with
L</mkmountpoint>.  See L</mkmountpoint> for full details.

=head2 rsync

 rsync джерело призначення [archive:true|false] [deletedest:true|false]

Цим викликом можна скористатися для копіювання або синхронізування двох
каталогів у одному дескрипторі libguestfs. Використовується програма
L<rsync(1)>, у якій реалізовано швидкий алгоритм для уникнення непотрібного
копіювання файлів.

Значеннями параметрів C<джерело> і C<призначення> є назви каталогу
походження даних і кінцевого каталогу. Файли копіюються з каталогу
C<джерело> до каталогу C<призначення>.

Необов'язковими аргументами є:

=over 4

=item C<archive>

Вмикає режим архівування. Те саме, що передати параметр I<--archive> команді
C<rsync>.

=item C<deletedest>

Вилучити файли у каталозі призначення, яких немає у каталозі джерела.

=back

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<rsync>. Див. також
L</feature-available>.

=head2 rsync-in

 rsync-in віддалений_комп'ютер призначення [archive:true|false] [deletedest:true|false]

Цим викликом можна скористатися для копіювання або синхронізування файлових
систем у основній системі або на віддаленому комп'ютері із файловою системою
у libguestfs. Використовується програма L<rsync(1)>, у якій реалізовано
швидкий алгоритм для уникнення непотрібного копіювання файлів.

Ця команда працюватиме, лише якщо увімкнено можливість роботи у
мережі. Див. L</set-network> або параметр I<--network> різноманітних
інструментів, зокрема L<guestfish(1)>.

Файли копіюються з віддаленого сервера та каталогу, вказаного за допомогою
параметра C<віддалений_комп'ютер>, до каталогу призначення C<призначення>.

Формат рядка віддаленого сервера визначається L<rsync(1)>. Зауважте, що не
передбачено способу вказати пароль, отже призначення має бути налаштовано
так, щоб пароль не потрібно було вказувати.

Необов'язкові аргументи такі самі, як і у L</rsync>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<rsync>. Див. також
L</feature-available>.

=head2 rsync-out

 rsync-out джерело віддалений_комп'ютер [archive:true|false] [deletedest:true|false]

Цим викликом можна скористатися для копіювання або синхронізування файлової
системи у libguestfs із файловою системою у основній системі або на
віддаленому комп'ютері. Використовується програма L<rsync(1)>, у якій
реалізовано швидкий алгоритм для уникнення непотрібного копіювання файлів.

Ця команда працюватиме, лише якщо увімкнено можливість роботи у
мережі. Див. L</set-network> або параметр I<--network> різноманітних
інструментів, зокрема L<guestfish(1)>.

Файли копіюються з каталогу джерела C<джерело> до віддаленого сервера та
каталогу, вказаного за допомогою параметра C<віддалений_комп'ютер>.

Формат рядка віддаленого сервера визначається L<rsync(1)>. Зауважте, що не
передбачено способу вказати пароль, отже призначення має бути налаштовано
так, щоб пароль не потрібно було вказувати.

Необов'язкові аргументи такі самі, як і у L</rsync>.

У параметрі C<джерело> не виконується підставляння замість
символів-замінників. У програмах, де програмний інтерфейс використовується
безпосередньо, вам слід розгортати замінники власноруч
(див. L</glob-expand>). У guestfish ви можете скористатися командою C<glob>
(див. L<guestfish(1)/glob>). Приклад:

 ><fs> glob rsync-out /* rsync://remote/

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<rsync>. Див. також
L</feature-available>.

=head2 scrub-device

 scrub-device пристрій

Ця команда записує зразкові дані на C<пристрій> для утруднення відновлення
даних на ньому.

Ця команда є інтерфейсом до програми L<scrub(1)>. Див. відповідну сторінку
підручника, щоб дізнатися більше.

Працездатність цієї команди залежить від можливості C<scrub>. Див. також
L</feature-available>.

=head2 scrub-file

 scrub-file файл

Ця команда записує зразкові дані до файла для утруднення відновлення його
даних після витирання.

Після заповнення даними взірця файл буде I<вилучено>.

Ця команда є інтерфейсом до програми L<scrub(1)>. Див. відповідну сторінку
підручника, щоб дізнатися більше.

Працездатність цієї команди залежить від можливості C<scrub>. Див. також
L</feature-available>.

=head2 scrub-freespace

 scrub-freespace каталог

Ця команда створює каталог C<каталог>, а потім заповнює його файлами, аж
доки файлову систему не буде повністю заповнено, далі витирає файли, як у
команді L</scrub-file>, і вилучає їх. Команду призначено для витирання усіх
даних з вільного місця на розділі, де зберігається каталог C<каталог>.

Ця команда є інтерфейсом до програми L<scrub(1)>. Див. відповідну сторінку
підручника, щоб дізнатися більше.

Працездатність цієї команди залежить від можливості C<scrub>. Див. також
L</feature-available>.

=head2 selinux-relabel

 selinux-relabel файл_специфікацій шлях [force:true|false]

Повторне встановлення міток SELinux у файловій системі.

Параметр C<файл_специфікацій> визначає використаний файл специфікацій
правил. Вам слід обробити C</etc/selinux/config>, щоб визначити належні
правила SELinux, а потім передати файл специфікацій, зазвичай, так:
C</etc/selinux/> + I<тип_selinux> + C</contexts/files/file_contexts>.

Обов'язковий параметр C<шлях> визначає каталог верхнього рівня, з якого
починається повторне встановлення міток.  Зазвичай, вам слід передати як
C<шлях> значення C</>, щоб повторно встановити мітки для усієї гостьової
файлової системи.

Необов'язковий булевий параметр C<force> керує тим, чи буде скинуто контекст
для налаштовуваних файлів, а також тим, чи буде змінено частини контексту
файла, пов'язані із записами користувача, ролі та діапазону.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості
C<selinuxrelabel>. Див. також L</feature-available>.

=head2 set-append

=head2 append

 set-append додаток

Ця функція використовується для додавання параметрів до командного рядка
елементарного ядра libguestfs.

Типовим значенням є C<NULL>, якщо його не перевизначено за допомогою змінної
середовища C<LIBGUESTFS_APPEND>.

Встановлення для параметра C<append> значення C<NULL> означає, що ніяких
додаткових параметрів I<не> передаватиметься (libguestfs завжди додає
декілька параметрів автоматично).

=head2 set-attach-method

=head2 attach-method

 set-attach-method модуль

Встановлює спосіб, яким libguestfs користується для встановлення з'єднання
із фоновою службою guestfsd модуля обробки.

Див. L<guestfs(3)/МОДУЛЬ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</set-backend>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 set-autosync

=head2 autosync

 set-autosync true|false

Встановлення для C<autosync> значення вмикає автоматичну
синхронізацію. Libguestfs з усіх сил намагатиметься підтримувати коректний і
синхронізований стан файлових систем, коли ви закриватимете дескриптор (а
також у ситуаціях, коли програма завершує роботу без закриття дескрипторів).

Автоматичну синхронізацію типово увімкнено (з версії libguestfs 1.5.24, у
попередніх версіях її було вимкнено).

=head2 set-backend

=head2 модуль

 set-backend модуль

Встановлює спосіб, яким libguestfs користується для встановлення з'єднання
із фоновою службою guestfsd модуля обробки.

Ця властивість дескриптора раніше називалася «метод долучення».

Див. L<guestfs(3)/МОДУЛЬ>.

=head2 set-backend-setting

 set-backend-setting назва значення

Дописує рядок C<"назва=значення"> до списку рядків параметрів модуля
обробки. Втім, якщо у списку вже існує рядок C<"назва"> або рядок, що
починається із запису C<"назва=">, його буде замінено на новий вказаний
рядок.

Див. L<guestfs(3)/МОДУЛЬ>, L<guestfs(3)/ПАРАМЕТРИ МОДУЛЯ>.

=head2 set-backend-settings

 set-backend-settings 'параметри ...'

Встановлює список із нульової або довільної кількості параметрів, які
передаються поточному модулю обробки. Кожен параметр визначається рядком,
який обробляється у специфічний для модуля спосіб або ігнорується, якщо
модуль обробки його не сприймає.

Типовим значенням є порожній список, якщо на час створення дескриптора не
було визначено змінну середовища C<LIBGUESTFS_BACKEND_SETTINGS>. У цій
змінній середовища міститься список параметрів, відокремлених двокрапками.

Цей виклик замінює усі параметри модуля обробки. Якщо вам потрібно замінити
лише один рядок параметра, скористайтеся L</set-backend-setting>. Якщо вам
потрібно прибрати один рядок параметра, скористайтеся
L</clear-backend-setting>.

Див. L<guestfs(3)/МОДУЛЬ>, L<guestfs(3)/ПАРАМЕТРИ МОДУЛЯ>.

=head2 set-cachedir

=head2 каталог_кешування

 set-cachedir каталог_кешування

Встановити назву каталогу, який використовується дескриптором для зберігання
кешу базової системи, якщо використовується базова система supermin. Базова
система кешується і спільно використовується усіма дескрипторами, які мають
однаковий ідентифікатор ефективного користувача.

Змінні середовища C<LIBGUESTFS_CACHEDIR> і C<TMPDIR> керують типовим
значенням: якщо встановлено значення C<LIBGUESTFS_CACHEDIR>, типовим буде
саме це встановлене значення. Якщо ж це значення не встановлено і
встановлено значення C<TMPDIR>, використовуватиметься це значення. Якщо ж
жодну з цих змінних середовища не встановлено, типово використовуватиметься
F</var/tmp>.

=head2 set-direct

=head2 direct

 set-direct true|false

Якщо увімкнено прапорець безпосереднього режиму базової системи, вміст stdin
та stdout передаватиметься безпосередньо базовій системі одразу після її
запуску.

Одним із наслідків цього є те, що повідомлення журналу не
перехоплюватимуться бібліотекою і не оброблятимуться
L</set-log-message-callback>, а передаватимуться безпосередньо до stdout.

Ймовірно, вам не слід використовувати цю команду, якщо ви не впевнені щодо
наслідків ваших дій.

Типово вимкнено.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</internal-get-console-socket>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 set-e2attrs

 set-e2attrs файл атрибути [clear:true|false]

Ця команда встановлює або знімає атрибути C<атрибути> з inode із назвою
F<файл>.

Параметр C<атрибути> є рядком із символів, які визначають атрибути
файла. Список можливих значень можна знайти у описі
L</get-e2attrs>. Змінювати можна не усі атрибути.

Якщо не вказано необов'язковий булевий параметр C<clear> або вказано
значення false, вказані C<атрибути> буде встановлено для inode.

Якщо встановлено значення C<clear> рівне true, вказані C<атрибути> буде
знято з inode.

У обох випадках інші атрибути, які не вказано у рядку C<атрибути>, змінено
не буде.

Ці атрибути є, лише якщо файл зберігається у файловій системі
ext2/3/4. Використання цієї команди для інших типів файлових систем призведе
до помилки.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 set-e2generation

 set-e2generation файл стан_створення

Ця команда встановлює стан створення для файла у ext2.

Див. L</get-e2generation>.

=head2 set-e2label

 set-e2label пристрій мітка

Ця команда встановлює мітку файлової системи ext2/3/4 для файлової системи
на пристрої C<пристрій>. Довжину міток файлових систем обмежено 16
символами.

Ви можете скористатися L</tune2fs-l> або L</get-e2label> для отримання
наявної мітки файлової системи.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</set-label>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 set-e2uuid

 set-e2uuid пристрій uuid

Ця команда встановлює UUID файлової системи ext2/3/4 для файлової системи на
пристрої C<пристрій> у значення C<uuid>. Формат запису UUID та альтернативні
варіанти, зокрема C<clear>, C<random> та C<time>, описано на сторінці
підручника L<tune2fs(8)>.

Ви можете скористатися L</vfs-uuid> для отримання наявного UUID файлової
системи.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</set-uuid>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 set-hv

=head2 hv

 set-hv гіпервізор

Встановлює назву виконуваного файла гіпервізору, яким ми
скористаємося. Назва гіпервізору залежить від використаного модуля обробки,
але, зазвичай, це назва гіпервізору qemu/KVM. Для модуля обробки UML це
розташування виконуваного файла C<linux> або C<vmlinux>.

Типовий варіант визначається під час збирання бібліотеки за допомогою
скрипту налаштовування збирання (configure).

Крім того, ви можете перевизначити цей параметр за допомогою змінної
середовища C<LIBGUESTFS_HV>.

Зауважте, що вам слід викликати цю функцію якомога ближче до команди
створення дескриптора. Причиною є те, що деякі дії перед запуском системи
залежать від результатів тестування можливостей qemu (шляхом виконання
команди C<qemu -help>). Якщо виконуваний файл qemu буде змінено, бібліотека
не виконуватиме повторного визначення можливостей, отже, може працювати
некоректно. Використання змінної середовища C<LIBGUESTFS_HV> є
найбезпечнішим способом надати потрібні бібліотеці дані, оскільки
встановлення цієї змінної надає бібліотеці змогу дізнатися усе про
виконуваний файл qemu одночасно зі створенням дескриптора.

=head2 set-identifier

=head2 ідентифікатор

 set-identifier ідентифікатор

Це інформативний рядок, який функція виклику може, якщо потрібно, встановити
у дескрипторі. Він виводиться у різних місцях, надаючи змогу ідентифікувати
поточний дескриптор у діагностичних повідомленнях.

Одним із важливих є варіант, коли увімкнено трасування. Якщо рядок
ідентифікатора є непорожнім, повідомлення трасування зміняться з таких:

 libguestfs: trace: get_tmpdir
 libguestfs: trace: get_tmpdir = "/tmp"

на такі:

 libguestfs: trace: ID: get_tmpdir
 libguestfs: trace: ID: get_tmpdir = "/tmp"

де C<ID> — рядок ідентифікатор, який було встановлено викликом цієї команди.

Ідентифікатор має складатися із літер латинської абетки і цифр з ASCII, а
також символів підкреслювання або дефісів. Типовим його значенням є порожній
рядок.

Див. також L</set-program>, L</set-trace>, L</get-identifier>.

=head2 set-label

 set-label монтування мітка

Встановлює для файлової системи C<монтування> мітку C<мітка>.

Підтримку міток передбачено лише у деяких файлових системах, а у libguestfs
передбачено підтримку встановлення міток лише для деякого набору таких
систем.

=over 4

=item ext2, ext3, ext4

Розмір міток обмежено 16 байтами.

=item NTFS

Мітки обмежено 128 символами unicode.

=item XFS

Цю мітку обмежено 12 байтами. Встановлювати мітку можна лише для
незмонтованих файлових систем.

=item btrfs

Цю мітку обмежено 255 байтами, у ній не можна використовувати деякі
символи. Встановлення мітки на підтомі btrfs призведе до встановлення мітки
на його батьківській файловій системі. Встановлювати мітку можна лише для
незмонтованих файлових систем.

=item fat

Цю мітку обмежено 11 байтами.

=item swap

Цю мітку обмежено 16 байтами.

=back

Якщо підтримки зміни мітки для типу вказаної файлової системи не
передбачено, set_label завершить роботу із повідомленням про помилку і
встановити для errno значення ENOTSUP.

Для читання мітки файлової системи використовуйте C</vfs-label>.

=head2 set-libvirt-requested-credential

 set-libvirt-requested-credential індекс реєстраційні_дані

Після запиту щодо реєстраційних даних із індексом C<індекс>, спрямованого
користувачу, викличте цю функцію для передавання відповіді до libvirt.

Документацію і приклад коду наведено у розділі L<guestfs(3)/РОЗПІЗНАВАННЯ ЗА
ДОПОМОГОЮ LIBVIRT>.

=head2 set-libvirt-supported-credentials

 set-libvirt-supported-credentials 'реєстраційні_дані...'

Викличте цю функцію до встановлення обробника подій для
C<GUESTFS_EVENT_LIBVIRT_AUTH> щоб надати список типів реєстраційних даних,
які може обробляти програма.

Список C<реєстраційні_дані> має бути непорожнім списком рядків. Можна
використовувати такі рядки:

=over 4

=item C<username>

=item C<authname>

=item C<language>

=item C<cnonce>

=item C<passphrase>

=item C<echoprompt>

=item C<noechoprompt>

=item C<realm>

=item C<external>

=back

Опис значення цих типів реєстраційних даних можна знайти у документації до
libvirt.

Документацію і приклад коду наведено у розділі L<guestfs(3)/РОЗПІЗНАВАННЯ ЗА
ДОПОМОГОЮ LIBVIRT>.

=head2 set-memsize

=head2 розмір_пам'яті

 set-memsize розмір_пам'яті

Встановлює розмір у мегабайтах, яку має бути отримано для гіпервізору
пам'яті. Працює, лише якщо викликано до L</launch>.

Ви також можете змінити значення цього параметра за допомогою встановлення
змінної середовища C<LIBGUESTFS_MEMSIZE> до створення дескриптора.

Докладніший опис архітектури libguestfs наведено у підручнику з
L<guestfs(3)>.

=head2 set-network

=head2 network

 set-network true|false

Якщо встановлено значення true, у базовій системі libguestfs буде увімкнено
роботу у мережі. Типовим значенням є false.

Визначає, чи надаватиметься програмам доступ до мережі
(див. L<guestfs(3)/ЗАПУСК КОМАНД>).

Цю функцію слід викликати до L</launch>, інакше вона не спрацює.

=head2 set-path

=head2 шлях

 set-path шлях_для_пошуку

Встановлює шлях, за яким libguestfs шукає ядро і initrd.img.

Типовим значенням є C<$libdir/guestfs>, якщо його не перевизначено за
допомогою змінної середовища C<LIBGUESTFS_PATH>.

Встановлення для параметра C<шлях> значення C<NULL> відновлює типовий шлях.

=head2 set-pgroup

=head2 pgroup

 set-pgroup true|false

Якщо встановлено значення C<pgroup> рівне true, дочірні процеси буде
розміщено у власній групі процесів.

Практичним наслідком цього є те, що сигнали, зокрема C<SIGINT> (наслідок
натискання користувачем комбінації C<^C>), не буде отримано дочірнім
процесом.

Типовим для цього прапорця є значення false, оскільки, зазвичай, C<^C> має
вбивати підпроцеси. Guestfish встановлює для цього прапорця значення true,
якщо програма використовується інтерактивно, щоб за допомогою C<^C> можна
було належно скасувати дії, які виконуються надто довго
(див. L</user-cancel>).

=head2 set-program

=head2 програма

 set-program програма

Встановлює назву програми. Це інформативний рядок, який основна програма
може встановлювати у дескрипторі.

Під час створення дескриптора назва програми у дескрипторі встановлюється у
значення basename з C<argv[0]>. Назвою програми ніколи не може бути C<NULL>.

=head2 set-qemu

=head2 qemu

 set-qemu гіпервізор

Вказати виконуваний файл гіпервізору (зазвичай qemu), який буде використано.

Типовий варіант визначається під час збирання бібліотеки за допомогою
скрипту налаштовування збирання (configure).

Крім того, ви можете перевизначити цей параметр за допомогою змінної
середовища C<LIBGUESTFS_HV>.

Встановлення для параметра C<гіпервізор> значення C<NULL> відновлює типовий
виконуваний файл qemu.

Зауважте, що вам слід викликати цю функцію якомога ближче до команди
створення дескриптора. Причиною є те, що деякі дії перед запуском системи
залежать від результатів тестування можливостей qemu (шляхом виконання
команди C<qemu -help>). Якщо виконуваний файл qemu буде змінено, бібліотека
не виконуватиме повторного визначення можливостей, отже, може працювати
некоректно. Використання змінної середовища C<LIBGUESTFS_HV> є
найбезпечнішим способом надати потрібні бібліотеці дані, оскільки
встановлення цієї змінної надає бібліотеці змогу дізнатися усе про
виконуваний файл qemu одночасно зі створенням дескриптора.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</set-hv>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 set-recovery-proc

=head2 recovery-proc

 set-recovery-proc true|false

Якщо команда викликається із параметром C<false>, L</launch> не створюватиме
процесу відновлення. Призначенням процесу відновлення є зупинення залишкових
процесів гіпервізору, якщо основна програма несподівано завершує роботу.

Працює, лише якщо викликано до L</launch>, а типовим значенням є true.

Майже єдиним випадком, коли у вас може виникнути потреба вимкнути цю
можливість, є випадок, коли основний процес відгалужує себе у фонову версію
(«демонізує» себе). У цьому випадку процес відновлення вважає, що основна
програма зникла і вбиває процес гіпервізору, отже, псує усю справу.

=head2 set-selinux

=head2 selinux

 set-selinux true|false

Ця команда встановлює прапорець selinux, який передається базовій системі
під час завантаження. Типовим є прапорець C<selinux=0> (вимкнено).

Зауважте, що якщо SELinux увімкнено, система завжди перебуває у дозвільному
режимі (Permissive) (C<enforcing=0>).

Докладніший опис архітектури libguestfs наведено у підручнику з
L<guestfs(3)>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</selinux-relabel>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 set-smp

=head2 smp

 set-smp smp

Змінює кількість віртуальних процесорів, які буде призначено на обробку
команд базової системи. Типовим є значення C<1>. Збільшення цього значення
може підвищити швидкодію, але часто просто ні на що не впливає.

Цю функцію слід викликати до L</launch>.

=head2 set-tmpdir

=head2 тимчасовий_каталог

 set-tmpdir тимчасовий_каталог

Встановлює назву каталогу, який використовується дескриптором для зберігання
тимчасових файлів.

Змінні середовища C<LIBGUESTFS_TMPDIR> і C<TMPDIR> керують типовим
значенням: якщо встановлено значення C<LIBGUESTFS_TMPDIR>, типовим буде саме
це встановлене значення. Якщо ж це значення не встановлено і встановлено
значення C<TMPDIR>, використовуватиметься це значення. Якщо ж жодну з цих
змінних середовища не встановлено, типово використовуватиметься F</tmp>.

=head2 set-trace

=head2 trace

 set-trace true|false

Якщо прапорець trace цієї команди встановлено у значення 1, буде
виконуватися трасування викликів, параметрів та повернутих значень
libguestfs.

Якщо вам потрібно трасувати виклики програмного інтерфейсу мовою C у
libguestfs (та інших бібліотеках), ймовірно, кращим способом буде
використання зовнішньої команди L<ltrace(1)>.

Трасування команд вимкнено, якщо змінну середовища C<LIBGUESTFS_TRACE> не
визначено і не встановлено для неї значення C<1>.

Повідомлення трасування зазвичай надсилаються до C<stderr>, якщо ви не
зареєструєте зворотного виклику для надсилання цих повідомлень у якесь інше
місце (див. L</set-event-callback>).

=head2 set-uuid

 set-uuid пристрій uuid

Встановлює для UUID файлової системи на пристрої C<пристрій> значення
C<uuid>. Якщо встановити значення не вдасться, а errno матиме значення
ENOTSUP, це означатиме, що для типу вказаної файлової системи не передбачено
підтримки зміни UUID.

Підтримку встановлення UUID передбачено лише у деяких типах файлових систем.

Для читання UUID файлової системи слід викликати L</vfs-uuid>.

=head2 set-uuid-random

 set-uuid-random пристрій

Встановлює для UUID файлової системи на пристрої C<пристрій> у випадкове
значення. Якщо встановити значення не вдасться, а errno матиме значення
ENOTSUP, це означатиме, що для типу вказаної файлової системи не передбачено
підтримки зміни UUID.

Підтримку встановлення UUID передбачено лише у деяких типах файлових систем.

Для читання UUID файлової системи слід викликати L</vfs-uuid>.

=head2 set-verbose

=head2 verbose

 set-verbose true|false

Якщо аргумент C<verbose> матиме значення true, буде увімкнено режим
докладних повідомлень.

Докладні повідомлення вимкнено, якщо змінну середовища C<LIBGUESTFS_DEBUG>
не визначено і не встановлено для неї значення C<1>.

Докладні повідомлення зазвичай надсилаються до C<stderr>, якщо ви не
зареєструєте зворотного виклику для надсилання цих повідомлень у якесь інше
місце (див. L</set-event-callback>).

=head2 setcon

 setcon контекст

Ця команда встановлює для контексту безпеки SELinux фонової служби значення
C<контекст>.

Див. документацію щодо SELINUX у підручнику з L<guestfs(3)>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</selinux-relabel>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

Працездатність цієї команди залежить від можливості C<selinux>. Див. також
L</feature-available>.

=head2 setxattr

 setxattr розширений_атрибут значення довжина_значення шлях

Ця команда встановлює розширений атрибут із назвою C<розширений_атрибут> для
файла C<шлях> у значення C<значення> (довжини
C<довжина_значення>). Значенням можуть бути довільні 8-бітові дані.

Див. також L</lsetxattr>, L<attr(5)>.

Працездатність цієї команди залежить від можливості
C<linuxxattrs>. Див. також L</feature-available>.

=head2 sfdisk

 sfdisk пристрій циліндри головки сектори 'рядки ...'

Це безпосередній інтерфейс програми L<sfdisk(8)> для створення розділів на
блокових пристроях.

Значенням параметра C<пристрій> має бути назва блокового пристрою, наприклад
F</dev/sda>.

Параметри C<циліндри>, C<голівки> та C<сектори> визначають кількості
циліндрів, голівок та секторів на пристрої, які буде безпосередньо передано
sfdisk як аргументи параметрів I<-C>, I<-H> і I<-S>. Якщо ви передаєте C<0>
для якогось з цих параметрів, відповідний параметр буде пропущено. Зазвичай,
для «великих» дисків ви можете просто передати C<0> для цих параметрів, але
для малих дисків (дискет), sfdisk (або, скоріше, ядро) не може визначити
належну геометрію диска — вам доведеться передати програмі належні значення
параметрів.

Параметр C<рядки> є списком рядків, які ми передаємо C<sfdisk>. Щоб
дізнатися більше, зверніться до сторінки підручника щодо L<sfdisk(8)>.

Щоб створити єдиний розділ, який займатиме увесь диск, вам слід передати
C<рядки> як список із одного елемента, коли єдиний елемент, який є рядком
C<,> (комою).

Див. також L</sfdisk-l>, L</sfdisk-N>, L</part-init>

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</part-add>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 sfdiskM

 sfdiskM пристрій 'рядки ...'

Це спрощений інтерфейс команди L</sfdisk>, де розміри розділів вказується у
лише у мегабайтах (округлений до найближчого циліндра), і вам не потрібно
вказувати параметри циліндрів, голівок і секторів, використання яких все
одно є рідкісним.

Див також L</sfdisk>, сторінку довідки (man) L<sfdisk(8)> та L</part-disk>

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</part-add>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 sfdisk-N

 sfdisk-N пристрій номер_розділу циліндри головки сектори рядок

Ця команда додає для програми L<sfdisk(8)> параметр, який змінює лише
окремий розділ C<n> (зауваження: відлік C<n> ведеться з 1).

Опис інший параметрів можна знайти у довідці щодо L</sfdisk>. Зазвичай, вам
варто передати C<0> для параметрів циліндрів, заголовків та секторів.

Див. також L</part-add>

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</part-add>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 sfdisk-disk-geometry

 sfdisk-disk-geometry пристрій

Ця команда показує геометрію диска пристрою C<пристрій>, прочитану з таблиці
розділів. Ці дані можуть відрізнятися від даних щодо геометрії, які відомі
ядру, особливо у випадку, якщо розмір базового пристрою було змінено
(див. L</sfdisk-kernel-geometry>).

Результат буде виведено у зручному для читанні вигляді. Його не призначено
для програмної обробки.

=head2 sfdisk-kernel-geometry

 sfdisk-kernel-geometry пристрій

Ця команда показує визначені ядром дані щодо геометрії пристрою C<пристрій>.

Результат буде виведено у зручному для читанні вигляді. Його не призначено
для програмної обробки.

=head2 sfdisk-l

 sfdisk-l пристрій

Ця команда виводить таблицю розділів на пристрої C<пристрій> у зручному для
читання форматі даних, виведених командою L<sfdisk(8)>. Ці дані не
призначено для програмної обробки.

Див. також L</part-list>

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</part-list>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 sh

 sh команда

Ця команда виконує програму з гостьової системи за допомогою F</bin/sh>
гостьової системи.

Подібна до L</command>, але передає команду так:

 /bin/sh -c "команда"

Залежно від командної оболонки гостьової системи, зазвичай, це призводить до
розгортання символів-замінників, обробки виразів командної оболонки тощо.

Усі зауваження щодо L</command> стосуються і цього виклику.

=head2 sh-lines

 sh-lines команда

Те саме, що і L</sh>, але результат буде поділено на список рядків.

Див. також L</command-lines>

=head2 shutdown

 shutdown

Протилежність команди L</launch>. Виконує упорядковане вимикання процесів
модуля обробки. Якщо встановлено прапорець autosync (типова поведінка), буде
синхронізовано образ диска.

Якщо підпроцес завершує роботу із помилкою, ця функція поверне повідомлення
про помилку, яке I<не> слід ігнорувати (воно може свідчити про те, що
належний запис до образу диска неможливий).

Команду можна безпечно викликати довільну кількість разів. Усі зайві виклики
буде просто проігноровано.

Ця команда I<не> закриває і не звільняє дескриптор. Вам слід викликати
L</close> після її виконання.

L</close> викличе цю команду, якщо ви не зробите цього явно, але, слід
зауважити, що усі помилки у цьому випадку буде проігноровано.

=head2 sleep

 sleep час_у_секундах

Призупинити обробку на C<час_у_секундах>.

=head2 stat

 stat шлях

Повертає дані щодо файла за вказаним шляхом C<шлях>.

Це те саме, що системний виклик L<stat(2)>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</statns>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 statns

 statns шлях

Повертає дані щодо файла за вказаним шляхом C<шлях>.

Це те саме, що системний виклик L<stat(2)>.

=head2 statvfs

 statvfs шлях

Повертає статистику файлової системи для будь-якої змонтованої файлової
системи. Параметр C<шлях> має визначати файл або каталог у змонтованій
файловій системі (типово, це сама точка монтування, але не обов'язково саме
вона).

Це те саме, що системний виклик L<statvfs(2)>.

=head2 strings

 strings шлях

Виконує програму L<strings(1)> для файла і повертає список знайдених у ньому
придатних до друку рядків.

У минулому у команди C<strings> були проблеми із обробкою файлів, отриманих
від ненадійних джерел. Ці проблеми усунуто у поточній версії libguestfs,
втім, див. L<guestfs(3)/CVE-2014-8484>.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 strings-e

 strings-e кодування шлях

Ця команда подібна до команди L</strings>, але надає вам змогу вказати
кодування рядків, які ви шукаєте у файлі даних C<шлях>.

Можливими кодуваннями є:

=over 4

=item s

Одинарні 7-бітові символи, зокрема ASCII та сумісні із ASCII частини
ISO-8859-X (це кодування використовує L</strings>).

=item S

Окремі 8-бітові-байтові символи.

=item b

16-бітове зі зворотним порядком байтів, зокрема рядки у кодуваннях UTF-16BE
та UCS-2BE.

=item l (мала літера L)

16-бітове із прямим порядком байтів, зокрема UTF-16LE і UCS-2LE. Корисно для
вивчення двійкових файлів у гостьових системах Windows.

=item B

32-бітове зі зворотним порядком байтів, зокрема UCS-4LE.

=item L

32-бітове із прямим порядком байтів, зокрема UCS-4LE.

=back

Повернуті рядки буде перекодовано до UTF-8.

У минулому у команди C<strings> були проблеми із обробкою файлів, отриманих
від ненадійних джерел. Ці проблеми усунуто у поточній версії libguestfs,
втім, див. L<guestfs(3)/CVE-2014-8484>.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 swapoff-device

 swapoff-device пристрій

Ця команда вимикає резервну пам'ять на диску або розділ із назвою
C<пристрій> у базовій системі libguestfs. Див. L</swapon-device>.

=head2 swapoff-file

 swapoff-file файл

Ця команда вимикає резервну пам'ять у файлі для базової системи libguestfs.

=head2 swapoff-label

 swapoff-label мітка

Ця команда вимикає резервну пам'ять на диску у базовій системі libguestfs на
вказаному за міткою розділі резервної пам'яті.

=head2 swapoff-uuid

 swapoff-uuid uuid

Ця команда вимикає резервну пам'ять на диску у базовій системі libguestfs на
вказаному розділі із вказаним UUID.

Працездатність цієї команди залежить від можливості
C<linuxfsuuid>. Див. також L</feature-available>.

=head2 swapon-device

 swapon-device пристрій

Ця команда вмикає резервну пам'ять на диску або розділ із назвою C<пристрій>
у базовій системі libguestfs. Збільшений обсяг пам'яті стає доступним для
усіх команд, зокрема тих, які запускаються за допомогою  L</command> або
L</sh>.

Зауважте, що вам не варто створювати резервну пам'ять на наявних розділах
резервної пам'яті гостьової системи, якщо ви не впевнені у правильності
своїх дій. На цих розділах можуть міститися дані режиму присипляння системи
або інші дані, які не варто втрачати. Також подібні дії можуть призвести до
небажаного доступу до конфіденційних даних у гостьовій системі. Замість
цього, долучіть до гостьової системи новий пристрій основної системи і
організовуйте резервну пам'ять на ньому.

=head2 swapon-file

 swapon-file файл

Ця команда вмикає резервну пам'ять у файлі. Зауваження щодо її використання
є такими самими, що і для L</swapon-device>.

=head2 swapon-label

 swapon-label мітка

Ця команда вмикає резервну пам'ять на вказаному за міткою розділі резервної
пам'яті. Зауваження щодо її використання є такими самими, що і для
L</swapon-device>.

=head2 swapon-uuid

 swapon-uuid uuid

Ця команда вмикає резервну пам'ять на розділі резервної пам'яті, вказаному
за UUID. Зауваження щодо її використання є такими самими, що і для
L</swapon-device>.

Працездатність цієї команди залежить від можливості
C<linuxfsuuid>. Див. також L</feature-available>.

=head2 sync

 sync

Ця команда виконує синхронізацію диска. Усі буфери даних записуються на
базовий образ диска.

Вам завжди слід викликати цю команду, якщо ви вносили зміни до образу диска,
перед закриттям дескриптора.

=head2 syslinux

 syslinux пристрій [каталог:..]

Встановлює завантажувач SYSLINUX на C<пристрій>.

Значенням параметра пристрою має бути або увесь диск, форматований у файлову
систему FAT, або розділ диска, форматований у файлову систему FAT. У
останньому випадку, розділ має бути позначено як «активний»
(L</part-set-bootable>), а на перший сектор усього диска має бути
встановлено MBR (наприклад, за допомогою L</pwrite-device>). До пакунка
SYSLINUX включено деякі найпоширеніші варіанти MBR. Докладніший опис можна
знайти на сторінці підручника щодо L<syslinux(1)>.

Необов'язковими аргументами є:

=over 4

=item F<directory>

Встановити SYSLINUX до вказаного за назвою підкаталогу, замість кореневого
каталогу файлової системи FAT.

=back

Додатково налаштувати SYSLINUX можна за допомогою файла із назвою
F<syslinux.cfg> на файловій системі FAT, у кореневому каталозі або у
каталозі файлової системи F<каталог>, якщо використано необов'язковий
аргумент команди. Докладніше про це та вміст файла можна дізнатися зі
сторінки підручника L<syslinux(1)>.

Див. також L</extlinux>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<syslinux>. Див. також
L</feature-available>.

=head2 tail

 tail шлях

Ця команда повертає останні 10 рядків файла у форматі списку рядків.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 tail-n

 tail-n к-ть_рядків шлях

Якщо параметр C<к-ть_рядків> є додатним числом, повертає останні
C<к-ть_рядків> рядків з файла C<шлях>.

Якщо значенням параметра C<к-ть_рядків> є від'ємне число, команда повертає
рядки з файла C<шлях>, починаючи з рядка C<-к-ть_рядків>.

Якщо значенням параметра C<к-ть_рядків> є нуль, команда повертає порожній
список.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

=head2 tar-in

=head2 tar-in-opts

 tar-in (файл_tar|-) каталог [compress:..] [xattrs:true|false] [selinux:true|false] [acls:true|false]

Ця команда вивантажує і розпаковує локальний файл C<файл_tar> до каталогу
F<каталог>.

Необов'язковий прапорець C<compress> керує стисканням. Якщо його не вказано,
вхідні дані мають бути простим, нестисненим файлом tar. Ви також можете
вказати такі рядки для вибору типу стискання: C<compress>, C<gzip>,
C<bzip2>, C<xz>, C<lzop>. (Зауважте, що підтримку усіх цих типів стискання
передбачено не в усіх зібраних пакунках libguestfs).

Іншими необов'язковими параметрами є такі:

=over 4

=item C<xattrs>

Якщо встановлено значення true, розширені атрибути відновлюватимуться з
файла tar.

=item C<selinux>

Якщо встановлено значення true, контекст SELinux відновлюватиметься з файла
tar.

=item C<acls>

Якщо встановлено значення true, з файла tar відновлюватимуться ACL POSIX.

=back

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 tar-out

=head2 tar-out-opts

 tar-out каталог (файл_tar|-) [compress:..] [numericowner:true|false] [excludes:..] [xattrs:true|false] [selinux:true|false] [acls:true|false]

Ця команда пакує вміст каталогу F<каталог> отримує його до локального файла
C<файл_tar>.

Необов'язковий прапорець C<compress> керує стисканням. Якщо його не вказано,
вихідні дані будуть простим, нестисненим файлом tar. Ви також можете вказати
такі рядки для вибору типу стискання: C<compress>, C<gzip>, C<bzip2>, C<xz>,
C<lzop>. (Зауважте, що підтримку усіх цих типів стискання передбачено не в
усіх зібраних пакунках libguestfs).

Іншими необов'язковими параметрами є такі:

=over 4

=item C<excludes>

Список шаблонів. Файли буде виключено, якщо вони відповідатимуть якомусь із
вказаних шаблонів.

=item C<numericowner>

Якщо встановлено значення true, у виведеному файлі tar міститимуться номери
UID/GID замість назв записів користувачів і груп.

=item C<xattrs>

Якщо встановлено значення true, у виведеному файлі tar зберігатимуться
розширені атрибути.

=item C<selinux>

Якщо встановлено значення true, у виведеному файлі tar зберігатимуться
контексти SELinux.

=item C<acls>

Якщо встановлено значення true, у виведеному файлі tar зберігатимуться ACL
POSIX.

=back

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 tgz-in

 tgz-in (архів tar|-) каталог

Ця команда вивантажує і розпаковує локальний файл C<архів_tar> (I<стиснений
gzip> файл tar) до каталогу F<каталог>.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</tar-in>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 tgz-out

 tgz-out каталог (архів tar|-)

Ця команда пакує вміст каталогу F<каталог> отримує його до локального файла
C<архів_tar>.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</tar-out>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 touch

 touch шлях

Touch працює як команда L<touch(1)>. Цією командою можна скористатися для
оновлення часових позначок файла або, якщо файла не існує, створення нового
файла нульової довжини.

Ця команда працює лише для звичайних файлів і завершує роботу повідомленням
про помилку, якщо її використовують для інших об'єктів файлової системи,
зокрема каталогів, символічних посилань, спеціальних блоків.

=head2 truncate

 truncate шлях

Ця команда обрізає файл C<шлях> до нульової довжини. Для її успішного
виконання файл має існувати.

=head2 truncate-size

 truncate-size шлях розмір

Ця команда обрізає файл C<шлях> до розміру у C<розмір> байтів. Для її
успішного виконання файл має існувати.

Якщо поточний розмір файла є меншим за C<розмір>, файл буде розширено до
вказаного розміру доповненням його вмісту нульовими байтами. Команда створює
розріджений файл (тобто блоки диска не розподіляються під файл, доки ви не
виконаєте запис до нього). Для створення файла заповненого нулями, який не
буде розрідженим, скористайтеся командою L</fallocate64>.

=head2 tune2fs

 tune2fs пристрій [force:true|false] [maxmountcount:N] [mountcount:N] [errorbehavior:..] [group:N] [intervalbetweenchecks:N] [reservedblockspercentage:N] [lastmounteddirectory:..] [reservedblockscount:N] [user:N]

За допомогою цієї команди ви можете скоригувати різноманітні параметри
файлової системи ext2/ext3/ext4 із назвою C<пристрій>.

Додатковими параметрами є:

=over 4

=item C<force>

Змусити tune2fs завершити виконання дії, навіть якщо буде виявлено
помилки. Те саме, що і параметр C<-f> у tune2fs.

=item C<maxmountcount>

Встановлює кількість монтувань, за досягнення якої файлова система
перевіряється за допомогою L<e2fsck(8)>. Якщо встановлено значення C<0>,
кількість монтувань не братиметься до уваги. Те саме, що і параметр C<-c>
tune2fs.

=item C<mountcount>

Встановлює кількість монтувань файлової системи. Те саме, що і параметр
C<-C> tune2fs.

=item C<errorbehavior>

Змінює поведінку коду ядра, якщо стануться помилки. Можливі значення у
поточній версії: C<continue>, C<remount-ro>, C<panic>. На практиці,
відмінність між цими варіантами є незначною, зокрема при появі помилок
запису.

Те саме, що і параметр C<-e> у tune2fs.

=item C<group>

Встановлює групу, яка може використовувати зарезервовані блоки файлової
системи. Те саме, що і параметр C<-g> tune2fs, але групу тут можна вказати
лише за номером.

=item C<intervalbetweenchecks>

Коригує максимальний час між двома послідовними перевірками файлової системи
(у секундах). Якщо буде передано значення C<0>, залежність перевірок від
часу буде вимкнено.

Те саме, що і параметр C<-i> у tune2fs.

=item C<reservedblockspercentage>

Встановлює частку у відсотках файлової системи, яку може бути розподілено
привілейованими процесами. Те саме, що і параметр C<-m> tune2fs.

=item C<lastmounteddirectory>

Встановлює останній змонтований каталог. Те саме, що і параметр C<-M>
tune2fs.

=item C<reservedblockscount> Встановлює кількість зарезервованих блоків файлової
системи. Те саме, що і параметр C<-r> tune2fs.

=item C<user>

Встановлює користувача, який може використовувати зарезервовані блоки
файлової системи. Те саме, що і параметр C<-u> tune2fs, але користувача тут
можна вказати лише за номером.

=back

Якщо вам потрібно отримати поточні значення параметрів файлової системи,
скористайтеся L</tune2fs-l>. Докладний опис роботи tune2fs наведено на
сторінці підручника L<tune2fs(8)>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 tune2fs-l

 tune2fs-l пристрій

Ця команда повертає вміст суперблоку файлової системи ext2, ext3 або ext4 на
пристрої C<пристрій>.

Результат буде таким самим як результат виконання команди C<tune2fs -l
пристрій>. Див. сторінку підручника L<tune2fs(8)>, щоб дізнатися
більше. Список повернутих полів не є точно визначеним і залежить від версії
C<tune2fs>, з якою було зібрано libguestfs, та самої файлової системи.

=head2 txz-in

 txz-in (архів tar|-) каталог

Ця команда вивантажує і розпаковує локальний файл C<архів_tar> (I<стиснений
xz> файл tar) до каталогу F<каталог>.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</tar-in>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

Працездатність цієї команди залежить від можливості C<xz>. Див. також
L</feature-available>.

=head2 txz-out

 txz-out каталог (архів tar|-)

Ця команда пакує вміст каталогу F<каталог> отримує його до локального файла
C<архів_tar> (у форматі стисненого xz архіву tar).

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</tar-out>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

Працездатність цієї команди залежить від можливості C<xz>. Див. також
L</feature-available>.

=head2 umask

 umask маска

Ця функція встановлює маску, яка використовується для створення нових файлів
і вузлів пристрою, у значення C<mask & 0777>.

Типовими значеннями umask мають бути C<022>, використання якої призводить до
прав доступу «-rw-r--r--» або «-rwxr-xr-x», та C<002>, використання якої
призводить до прав доступу «-rw-rw-r--» або «-rwxrwxr-x».

Типовим значенням umask є C<022>. Це важливо, оскільки означає, що каталоги
і вузли пристрою створюватимуться із правами доступу C<0644> або C<0755>,
навіть якщо ви вкажете права доступу C<0777>.

Див. також L</get-umask>, L<umask(2)>, L</mknod>, L</mkdir>.

Цей виклик повертає попередню umask.

=head2 umount

=head2 unmount

=head2 umount-opts

 umount шлях_або_пристрій [force:true|false] [lazyunmount:true|false]

Ця команда демонтує вказану файлову систему. Файлову систему можна вказати
або як точку монтування (шлях) або як пристрій, на якому міститься файлова
система.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 umount-all

=head2 unmount-all

 umount-all

Демонтує усі змонтовані файлові системи.

Деякі із внутрішніх монтувань не демонтуються цим викликом.

=head2 umount-local

 umount-local [retry:true|false]

Якщо libguestfs експортує файлову систему на локальну точку монтування, цей
виклик демонтує її.

Із повною документацією можна ознайомитися у розділі L<guestfs(3)/ЛОКАЛЬНЕ
МОНТУВАННЯ>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

=head2 upload

 upload (назва_файла|-) назва_віддаленого_файла

Вивантажує локальний файл F<назва_файла> до віддаленого файла
F<назва_віддаленого_файла> у файловій системі.

Значенням параметра F<назва_файла> також може бути іменований канал обробки
даних.

Див. також L</download>.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 upload-offset

 upload-offset (назва_файла|-) назва_віддаленого_файла відступ

Вивантажує локальний файл F<назва_файла> до віддаленого файла
F<назва_віддаленого_файла> у файловій системі.

Віддалений файл F<назва_віддаленого_файла> буде перезаписано, починаючи з
байта C<відступ>. Призначенням команди є перезапис частин наявних файлів або
пристроїв, хоча, якщо буде задано файл, якого не існує, команда створить
його із «діркою» до байта C<відступ>. Розмір записаних даних неявним чином
визначається розміром файла-джерела F<назва_файла>.

Зауважте, що немає обмеження на обсяг даних, які може бути вивантажено за
допомогою цього виклику, на відміну від команди L</pwrite>, і цей виклик
завжди записує дані до кінця, якщо не станеться помилки.

Див. також L</upload>, L</pwrite>.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

=head2 user-cancel

 user-cancel

За допомогою цієї функції можна скасувати поточну дію із отримання або
вивантаження даних.

На відміну від більшості інших викликів libguestfs, цю функцію захищено від
сигналів та потоків обробки. Ви можете викликати її із обробника сигналів
або іншого потоку обробки без потреби у блокуванні хоч чогось.

Передавання даних, яке не було завершено (якщо таке існує), буде зупинено
невдовзі після виконання цієї команди, і буде повернуто повідомлення про
помилку. Для errno (див. L</guestfs_last_errno>) буде встановлено значення
C<EINTR>, отже ви можете просто перевірити це значення, щоб визначити дію,
яку було скасовано або яка завершилася помилкою через інші причини.

Чищення після виконання команди не виконуватиметься. Наприклад, якщо на
момент скасовування виконувалося вивантаження файла, результатом буде
частково вивантажений файл. Про належне чищення має подбати функція, з якої
було викликано команду.

Існує два типових місця, звідки ви варто викликати L</user-cancel>:

У інтерактивній текстовій програмі ви можете викликати функцію із обробника
сигналу C<SIGINT>, щоб натискання комбінації клавіш C<^C> скасовувало
поточну дію. (Вам також слід викликати L</guestfs_set_pgroup>, щоб дочірні
процеси не отримували сигналу C<^C>).

У графічних програмах, якщо основний потік обробки даних показує смужку
поступу із кнопкою скасовування дії, подію натискання кнопки скасовування
дії слід пов'язувати із викликом цієї функції.

=head2 utimens

 utimens шлях atsecs atnsecs mtsecs mtnsecs

Ця команда встановлює часову позначку для файла з точністю до наносекунди.

C<atsecs, atnsecs> — час останнього доступу (atime) у секундах та
наносекундах від моменту початку епохи.

C<mtsecs, mtnsecs> — час останнього внесення змін (mtime) у секундах та
наносекундах від моменту початку епохи.

Якщо якесь із полів C<*nsecs> містить спеціальне значення C<-1>, відповідну
часову позначку буде встановлено у поточний момент часу. (У цьому випадку
поле C<*secs> буде проігноровано.)

Якщо якесь із полів C<*nsecs> містить спеціальне значення C<-2>, відповідну
часову позначку не буде змінено. (У цьому випадку поле C<*secs> буде
проігноровано.)

=head2 utsname

 utsname

Ця команда повертає версію ядра базової системи, якщо таку версію можна
встановити. Отримані дані корисні лише для діагностики. У повернутій
структурі жодна з частин не визначається програмним інтерфейсом.

=head2 version

 version

Повертає номер версії libguestfs, з якою скомпоновано програму.

Зауважте, що через динамічне компонування, це може бути зовсім не та версія
libguestfs, з якою виконувалося збирання. Ви можете зібрати програму, а
потім у динамічному режимі скомпонувати її із зовсім іншою бібліотекою
F<libguestfs.so>.

Цей виклик було додано у версії C<1.0.58>. У попередніх версіях libguestfs
не було можливості отримати номер версії. З коду мовою C ви можете
використовувати функції динамічного компонування для визначення того, чи
існує символ (якщо символу не існує, це давня версія, до версії 1.0.58).

Цей виклик повертає структуру із чотирьох елементів. Перші три (C<major>,
C<minor> і C<release>) є числами, які відповідають звичній трійці частин
версії. Четвертий елемент (C<extra>) є рядком, який зазвичай є порожнім, але
його може бути використано для специфічної для дистрибутива інформації.

Для побудови початкового рядка версії: C<$major.$minor.$release$extra>

Див також: L<guestfs(3)/НУМЕРАЦІЯ ВЕРСІЙ LIBGUESTFS>.

I<Зауваження:> не користуйтеся цим викликом для визначення доступності
якихось можливостей. У промислових дистрибутивах ми виконуємо зворотне
портування можливостей з пізніших версій на раніші. Це робить визначення за
версією ненадійною справою. Замість цього, користуйтеся командами
L</available> і L</feature-available>.

=head2 vfs-label

 vfs-label монтований_розділ

Повертає мітку файлової системи на розділі C<монтований_розділ>.

Якщо у файлової системи немає мітки, буде повернуто порожній рядок.

Для визначення файлової системи на основі мітки скористайтеся
L</findfs-label>.

=head2 vfs-minimum-size

 vfs-minimum-size монтування

Отримати мінімальний розмір файлової системи у байтах. Це мінімальний
можливий розмір файлової системи після стискання.

Якщо отримання мінімального розміру для файлової системи не передбачено, ця
команда завершить роботи повідомленням про помилку, встановивши для errno
значення ENOTSUP.

Див. також L<ntfsresize(8)>, L<resize2fs(8)>, L<btrfs(8)>, L<xfs_info(8)>.

=head2 vfs-type

 vfs-type монтування

Ця команда отримує тип файлової системи, відповідний до файлової системи у
C<монтуванні>.

Для більшості файлових систем результатом виконання є назва модуля VFS
Linux, який буде використано для монтування цієї системи, якщо ви змонтуєте
її без явного задання типу файлової системи. Наприклад, може бути повернуто
рядок C<ext3> або C<ntfs>.

=head2 vfs-uuid

=head2 get-uuid

 vfs-uuid монтування

Ця команда повертає UUID файлової системи для файлової системи
C<монтування>.

Якщо у файлової системи немає UUID, буде повернуто порожній рядок.

Для визначення файлової системи за UUID скористайтеся L</findfs-uuid>.

=head2 vg-activate

 vg-activate true|false 'групи_томів ...'

Ця команда активує або (якщо параметром є false) деактивує усі логічні томи
у вказаних групах томів C<групи_томів>.

Ця команда дає ті самі результати, що і C<vgchange -a y|n групи томів...>

Зауважте, що якщо C<групи_томів> є порожнім списком, буде активовано або
деактивовано B<усі> групи томів.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 vg-activate-all

 vg-activate-all true|false

Ця команда активує або (якщо параметром є false) деактивує усі логічні томи
в усіх групах томів.

Ця команда дає ті самі результати, що і C<vgchange -a y|n>

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 vgchange-uuid

 vgchange-uuid vg

Створити новий випадковий UUID для групи томів C<vg>.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 vgchange-uuid-all

 vgchange-uuid-all

Створити нові випадкові UUID для всіх груп томів.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 vgcreate

 vgcreate група_томів 'фізичні_томи ...'

Ця команда створює групу томів LVM із назвою C<група_томів> на основі
непорожнього списку фізичних томів C<фізичні_томи>.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 vglvuuids

 vglvuuids назва_vg

За вказаною групою томів C<назва_vg> ця команда повертає UUID усіх логічних
томів, створених у вказаній групі томів.

Цією командою можна скористатися у поєднанні із командами L</lvs> і
L</lvuuid> для пов'язування логічних томів і груп томів.

Див. також L</vgpvuuids>.

=head2 vgmeta

 vgmeta назва_vg

Значенням параметра C<назва_vg> є назва групи томів LVM. Ця команда виконує
вивчення групи томів і повертає її метадані.

Зауважте, що метадані є внутрішньою структурою, яка використовується LVM і
яку може бути будь-коли змінено. Її дані надаються лише з інформаційною
метою.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 vgpvuuids

 vgpvuuids назва_vg

За вказаною групою томів C<назва_vg> ця команда повертає UUID усіх фізичних
томів, на яких розміщено вказану групу томів.

Цією командою можна скористатися у поєднанні із командами L</pvs> і
L</pvuuid> для пов'язування фізичних томів і груп томів.

Див. також L</vglvuuids>.

=head2 vgremove

 vgremove назва_vg

Вилучає групу томів LVM C<назва_vg> (наприклад C<VG>).

Крім того, ця команда у примусовому порядку вилучає усі логічні томи у групі
томів (якщо такі існують).

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 vgrename

 vgrename група_томів нова_група_томів

Перейменовує групу томів C<група_томів> на групу томів C<нова_група_томів>.

=head2 vgs

 vgs

Виводить список усіх виявлених груп томів. Є еквівалентом команди L<vgs(8)>.

Ця команда повертає список лише тих груп томів, які вдасться виявити
(наприклад C<VolGroup00>).

Див. також L</vgs-full>.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 vgs-full

 vgs-full

Виводить список усіх виявлених груп томів. Є еквівалентом команди
L<vgs(8)>. До «повної» версії включено усі поля.

Працездатність цієї команди залежить від можливості C<lvm2>. Див. також
L</feature-available>.

=head2 vgscan

 vgscan

Ця команда виконує повторне сканування усіх блокових пристроїв і повторно
будує список фізичних томів, груп томів та логічних томів LVM.

I<This function is deprecated.> In new code, use the L</lvm-scan> call
instead.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 vguuid

 vguuid назва_vg

Ця команда повертає UUID групи томів LVM із назвою C<назва_vg>.

=head2 wc-c

 wc-c шлях

Ця команда лічить символи у файлі за допомогою зовнішньої програми C<wc -c>.

=head2 wc-l

 wc-l шлях

Ця команда лічить рядки у файлі за допомогою зовнішньої програми C<wc -l>.

=head2 wc-w

 wc-w шлях

Ця команда лічить слова у файлі за допомогою зовнішньої програми C<wc -w>.

=head2 wipefs

 wipefs пристрій

Ця команда витирає файлову систему або підписи RAID з вказаного пристрою
C<пристрій> з метою зробити файлову систему невидимою для libblkid.

Ця команда не витирає самої файлової системи або інших даних з пристрою
C<пристрій>.

Порівняйте з командою L</zero>, яка заповнює нулями перші декілька блоків
пристрою.

Працездатність цієї команди залежить від можливості C<wipefs>. Див. також
L</feature-available>.

=head2 write

 write шлях дані

Цей виклик створює файл із назвою C<шлях>. Вмістом файла буде рядок C<дані>
(який може складатися з будь-яких 8-бітовий даних).

Див. також L</write-append>.

=head2 write-append

 write-append шлях дані

Цей виклик дописує C<дані> наприкінці файла C<шлях>. Якщо файла C<шлях> не
існує, його буде створено.

Див. також L</write>.

=head2 write-file

 write-file шлях дані розмір

Цей виклик створює файл із назвою C<шлях>. Вмістом файла буде рядок C<дані>
(який може складатися з будь-яких 8-бітовий даних), а розмір файла буде
визначено значенням C<розмір>.

У особливому випадку, якщо C<розмір> дорівнює C<0>, довжину файла буде
обчислено за допомогою C<strlen> (тому у цьому випадку «дані» не повинні
містити вбудованих символів NUL ASCII).

I<NB.> Через ваду запис даних, які містять символи NUL ASCII I<не> працює,
навіть якщо явним чином вказати довжину.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</write>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 xfs-admin

 xfs-admin пристрій [extunwritten:true|false] [imgfile:true|false] [v2log:true|false] [projid32bit:true|false] [lazycounter:true|false] [label:..] [uuid:..]

Змінює параметри файлової системи XFS на пристрої C<пристрій>.

До пристроїв, які змонтовано, внесення змін неможливе. Перед цим викликом
для зміни параметрів адміністратор має демонтувати відповідні файлові
системи.

Деякі з параметрів змонтованих файлових систем можна визначати та вносити до
них зміни за допомогою викликів L</xfs-info> і L</xfs-growfs>.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<xfs>. Див. також
L</feature-available>.

=head2 xfs-growfs

 xfs-growfs шлях [datasec:true|false] [logsec:true|false] [rtsec:true|false] [datasize:N] [logsize:N] [rtsize:N] [rtextsize:N] [maxpct:N]

Збільшує файлову систему XFS, яку змонтовано як C<шлях>.

Повернута структура має містити дані щодо геометрії. Пропущені поля буде
повернуто як C<-1> (для числових значень) або як порожні рядки.

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<xfs>. Див. також
L</feature-available>.

=head2 xfs-info

 xfs-info шлях_або_пристрій

C<шлях_або_пристрій> — змонтована файлова система XFS або пристрій, на якому
міститься файлова система XFS. Ця команда повертає дані щодо геометрії
файлової системи.

Повернута структура має містити дані щодо геометрії. Пропущені поля буде
повернуто як C<-1> (для числових значень) або як порожні рядки.

Працездатність цієї команди залежить від можливості C<xfs>. Див. також
L</feature-available>.

=head2 xfs-repair

 xfs-repair пристрій [forcelogzero:true|false] [nomodify:true|false] [noprefetch:true|false] [forcegeometry:true|false] [maxmem:N] [ihashsize:N] [bhashsize:N] [agstride:N] [logdev:..] [rtdev:..]

Відновлює пошкоджену файлову систему XFS на пристрої C<пристрій>.

Файлова система задається за допомогою аргументу C<пристрій>, який має бути
або назвою пристрою розділу диска або томом, на якому міститься файлова
система. Якщо вказано назву блокового пристрою, C<xfs_repair> спробує знайти
простий пристрій, пов'язаний із вказаним блоковим пристроєм і скористається
цим простим пристроєм.

За будь-яких умов, файлову систему, яку слід відновити, має бути
демонтовано. Якщо цього не зробити, після обробки файлова система може
виявитися некоректною або пошкодженою.

Повернуте значення стану вказує на те, було виявлено пошкодження файлової
системи (повернуте значення C<1>) чи ні (повернуте значення C<0>).

У цієї команди є один або декілька необов'язкових
аргументів. Див. L</НЕОБОВ'ЯЗКОВІ АРГУМЕНТИ>.

Працездатність цієї команди залежить від можливості C<xfs>. Див. також
L</feature-available>.

=head2 yara-destroy

 yara-destroy

Знищує попередньо завантажені правила Yara з метою звільнити ресурси
libguestfs.

Працездатність цієї команди залежить від можливості C<libyara>. Див. також
L</feature-available>.

=head2 yara-load

 yara-load (назва_файла|-)

Вивантажити набір правил Yara з локального файла F<назва_файла>.

Правила Yara надають змогу категоризувати файли на основі текстових або
двійкових взірців у даних цих файлів. Див. L</yara-scan>, щоб дізнатися про
те, як виконати сканування файлів на основі завантажених правил.

Правила може бути вказано у двійковому форматі, створеному програмою yarac,
або у форматі початкового коду. У останньому випадку правила має бути
спочатку скомпільовано, а потім завантажено.

Правила у форматі початкового коду не можуть включати зовнішні файли. Якщо у
вас є файли з такими включеннями, рекомендуємо їх спочатку скомпілювати.

Раніше завантажені правила буде знищено.

Скористайтеся виразом C<-> замість назви файла, щоб наказати програмі
виконувати читання зі stdin або запис до stdout.

Працездатність цієї команди залежить від можливості C<libyara>. Див. також
L</feature-available>.

=head2 yara-scan

 yara-scan шлях

Сканує файл на основі попереднього завантажених правил Yara.

Для кожного правила відповідності повертається окрема структура
C<yara_detection>.

Структура C<yara_detection> містить вказані нижче поля.

=over 4

=item C<yara_name>

Шлях до файла, який відповідає правилу Yara.

=item C<yara_rule>

Ідентифікатор правила Yara, відповідність якого було встановлено для
заданого файла.

=back

Працездатність цієї команди залежить від можливості C<libyara>. Див. також
L</feature-available>.

=head2 zegrep

 zegrep формальний_вираз шлях

Викликає зовнішню програму C<zegrep> і повертає рядки-відповідники.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 zegrepi

 zegrepi формальний_вираз шлях

Ця функція викликає зовнішню програму C<zegrep -i> і повертає відповідні
рядки.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 zero

 zero пристрій

Ця команда заповнює нулями перші декілька блоків пристрою C<пристрій>.

Кількість занулених блоків не вказується (але вона все одно I<не є
достатньою> для гарантованого витирання вмісту пристрою). Для утруднення
отримання вмісту пристрою достатньо вилучити таблиці розділів, суперблоки
файлової системи тощо.

Якщо у блоках вже містяться нулі, ця команда не перезаписуватиме їх нулями
ще раз. Таким чином можна запобігти втраті стану розрідженості для базового
пристрою, а також його непотрібному зростанню у розмірі.

Див. також L</zero-device>, L</scrub-device>, L</is-zero-device>

=head2 zero-device

 zero-device пристрій

Ця команда перезаписує нулями увесь пристрій C<пристрій>. Порівняйте її із
командою L</zero>, яка перезаписує нулями перші декілька блоків пристрою.

Якщо у блоках вже містяться нулі, ця команда не перезаписуватиме їх нулями
ще раз. Таким чином можна запобігти втраті стану розрідженості для базового
пристрою, а також його непотрібному зростанню у розмірі.

=head2 zero-free-space

 zero-free-space каталог

Записує нулями вільне місце на файловій системі, змонтованій до точки
монтування C<каталог>. Файлову систему має бути змонтовано для читання і
запису.

Вміст файлової системи не буде змінено, але усе вільне місце у файловій
системі буде звільнено.

Вільне місце не буде «обрізано». Для обрізання вам слід викликати L</fstrim>
або скористатися відповідною командою після цієї, залежно від ваших потреб.

=head2 zerofree

 zerofree пристрій

Ця команда виконує програму I<zerofree> для пристрою C<пристрій>. Програма
заповнює нулями невикористані inode та блоки диска на файловій системі
ext2/3. Таке занулення уможливлює ефективніше стискання файлової системи.

B<Не> запускайте цю програму для обробки змонтованої файлової системи.

Використання цієї програми може призвести до пошкодження файлової системи
або даних на файловій системі.

Працездатність цієї команди залежить від можливості C<zerofree>. Див. також
L</feature-available>.

=head2 zfgrep

 zfgrep шаблон шлях

Викликає зовнішню програму C<zfgrep> і повертає рядки-відповідники.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 zfgrepi

 zfgrepi шаблон шлях

Викликає зовнішню програму C<zfgrep -i> і повертає рядки-відповідники.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 zfile

 zfile метод шлях

Ця команда запускає F<file> після розпаковування шляху C<шлях> за допомогою
методу C<метод>.

Значенням параметра C<метод> має бути C<gzip>, C<compress> або C<bzip2>.

Починаючи з версії 1.0.63, можна використовувати замість цієї команди
L</file>, оскільки у сучасних версіях ця команда може обробляти стиснені
файли.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</file>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 zgrep

 zgrep формальний_вираз шлях

Викликає зовнішню програму C<zgrep> і повертає рядки-відповідники.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

=head2 zgrepi

 zgrepi формальний_вираз шлях

Ця функція викликає зовнішню програму C<zgrep -i> і повертає відповідні
рядки.

Через обмеження протоколу передавання повідомлень існує граничний об'єм
повідомлення, щось у діапазоні від 2 МБ до 4 МБ. Див. L<guestfs(3)/ОБМЕЖЕННЯ
ПРОТОКОЛУ>.

I<Ця функція вважається застарілою.> У новому коді замість неї слід
використовувати L</grep>.

Застарілі функції не буде вилучено з програмного інтерфейсу, але той факт,
що їх визнано застарілими, вказує на проблеми із належним використанням цих
функцій.

