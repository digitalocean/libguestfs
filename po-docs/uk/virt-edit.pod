
=head1 НАЗВА

virt-edit — програма для редагування файлів у віртуальній машині

=head1 КОРОТКИЙ ОПИС

 virt-edit [--параметри] -d назва_домену файл [файл ...]

 virt-edit [--options] -a диск.img [-a диск.img ...] файл [файл ...]

 virt-edit [-d назва_домену|-a диск.img] файл -e 'вираз'

Застарілий стиль:

 virt-edit назва_домену файл

 virt-edit диск.img [диск.img ...] файл

=head1 ОПИС

C<virt-edit> is a command line tool to edit C<file> where each C<file>
exists in the named virtual machine (or disk image).

Ви можете вказати декілька назв файлів. Вміст таких файлів буде редаговано
послідовно. Назви файлів слід вказувати повністю (разом зі шляхом),
починаючи з кореневого каталогу (тобто назва має починатися з «/»).

Якщо ви просто хочете переглянути файл, скористайтеся L<virt-cat(1)>.

Для виконання складніших дій можна скористатися програмою L<guestfish(1)>
(див. L</USING GUESTFISH> нижче).

C<virt-edit> cannot be used to create a new file.  L<guestfish(1)> can do
that and much more.

=head1 ПРИКЛАДИ

Інтерактивне редагування іменованих файлів:

 virt-edit -d mydomain /boot/grub/grub.conf

 virt-edit -d mydomain /etc/passwd

For Windows guests, some Windows paths are understood:

 virt-edit -d mywindomain 'c:\autoexec.bat'

If Perl is installed, you can also edit files non-interactively (see
L</NON-INTERACTIVE EDITING> below).  To change the init default level to 5:

 virt-edit -d mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'

=head1 ПАРАМЕТРИ

=over 4

=item B<--help>

Показати коротку довідку.

=item B<-a> файл

=item B<--add> файл

Add I<file> which should be a disk image from a virtual machine.  If the
virtual machine has multiple block devices, you must supply all of them with
separate I<-a> options.

Формат образу диска визначається автоматично. Щоб перевизначити його і
примусово використати певний формат, скористайтеся параметром
I<--format=..>.

=item B<-a> адреса

=item B<--add> адреса

Додати віддалений диск. Див. L<guestfish(1)/ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА>.

=item B<-b> СУФІКС

=item B<--backup> СУФІКС

Create a backup of the original file I<in the guest disk image>.  The backup
has the original filename with C<extension> added.

Usually the first character of C<extension> would be a dot C<.> so you would
write:

 virt-edit -b .orig [тощо]

Типово створюється файл резервної копії.

=item B<-c> адреса

=item B<--connect> адреса

Якщо використовується libvirt, встановити з’єднання з вказаним I<URI>. Якщо
пропущено, з’єднання буде встановлено з типовим гіпервізором libvirt.

Якщо вказати блокові пристрої гостьових систем безпосередньо, libvirt не
буде використовуватися взагалі.

=item B<-d> ГІСТЬ

=item B<--domain> ГІСТЬ

Додати всі диски з вказаної гостьової системи libvirt. UUID доменів можна
використовувати замість назв.

=item B<--echo-keys>

When prompting for keys and passphrases, virt-edit normally turns echoing
off so you cannot see what you are typing.  If you are not worried about
Tempest attacks and there is no one else in the room you can specify this
flag to see what you are typing.

=item B<-e> вираз

=item B<--edit> ВИРАЗ

=item B<--expr> вираз

Instead of launching the external editor, non-interactively apply the Perl
expression C<EXPR> to each line in the file.  See L</NON-INTERACTIVE
EDITING> below.

Be careful to properly quote the expression to prevent it from being altered
by the shell.

Note that this option is only available when Perl 5 is installed.

=item B<--format=raw|qcow2|..>

=item B<--format>

Типовим значенням для параметра I<-a> є автоматичне визначення формату
образу диска. Використання цього параметра примусово визначає значення
параметрів I<-a> формату диска у наступному рядку команди. Використання
параметра I<--format> без аргументу перемикає програму у режим автоматичного
визначення у наступних параметрах I<-a>.

Приклад:

 virt-edit --format=raw -a диск.img файл

примусове встановлення формату без обробки (без автоматичного визначення)
для F<disk.img>.

 virt-cat --format=raw -a диск.img --format -a інший.img файл

примусове встановлення формату без обробки (без автоматичного визначення)
для F<diskimg> і повернення до автоматичного визначення для F<another.img>.

Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому
форматі, вам слід скористатися цим параметром для визначення формату
диска. Таким чином можна уникнути можливих проблем з захистом для
сформованих зловмисниками гостьових систем (CVE-2010-3851).

=item B<--keys-from-stdin>

Read key or passphrase parameters from stdin.  The default is to try to read
passphrases from the user by opening F</dev/tty>.

=item B<-m> dev[:mountpoint[:options[:fstype]]]

=item B<--mount> dev[:mountpoint[:options[:fstype]]]

Змонтувати названий розділ або логічний том до вказаної точки монтування.

If the mountpoint is omitted, it defaults to F</>.

Specifying any mountpoint disables the inspection of the guest and the mount
of its root and all of its mountpoints, so make sure to mount all the
mountpoints needed to work with the filenames given as arguments.

If you don't know what filesystems a disk image contains, you can either run
guestfish without this option, then list the partitions, filesystems and LVs
available (see L</list-partitions>, L</list-filesystems> and L</lvs>
commands), or you can use the L<virt-filesystems(1)> program.

The third (and rarely used) part of the mount parameter is the list of mount
options used to mount the underlying filesystem.  If this is not given, then
the mount options are either the empty string or C<ro> (the latter if the
I<--ro> flag is used).  By specifying the mount options, you override this
default choice.  Probably the only time you would use this is to enable ACLs
and/or extended attributes if the filesystem can support them:

 -m /dev/sda1:/:acl,user_xattr

Using this flag is equivalent to using the C<mount-options> command.

The fourth part of the parameter is the filesystem driver to use, such as
C<ext3> or C<ntfs>. This is rarely needed, but can be useful if multiple
drivers are valid for a filesystem (eg: C<ext2> and C<ext3>), or if
libguestfs misidentifies a filesystem.

=item B<-v>

=item B<--verbose>

Увімкнути докладний показ повідомлень з метою діагностики.

=item B<-V>

=item B<--version>

Показати дані щодо версії і завершити роботу.

=item B<-x>

Увімкнути трасування викликів програмного інтерфейсу libguestfs.

=back

=head1 ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ

У попередніх версіях virt-edit можна було використовувати або

 virt-edit диск.img [диск.img ...] файл

або

 virt-edit назва_гостьової_системи файл

whereas in this version you should use I<-a> or I<-d> respectively to avoid
the confusing case where a disk image might have the same name as a guest.

З міркувань зворотної сумісності передбачено підтримку запису параметрів у
застарілому форматі.

=head1 НЕІНТЕРАКТИВНЕ РЕДАГУВАННЯ

C<virt-edit> normally calls out to C<$EDITOR> (or vi) so the system
administrator can interactively edit the file.

There are two ways also to use C<virt-edit> from scripts in order to make
automated edits to files.  (Note that although you I<can> use C<virt-edit>
like this, it's less error-prone to write scripts directly using the
libguestfs API and Augeas for configuration file editing.)

The first method is to temporarily set C<$EDITOR> to any script or program
you want to run.  The script is invoked as C<$EDITOR tmpfile> and it should
update C<tmpfile> in place however it likes.

The second method is to use the I<-e> parameter of C<virt-edit> to run a
short Perl snippet in the style of L<sed(1)>.  For example to replace all
instances of C<foo> with C<bar> in a file:

 virt-edit -d domname filename -e 's/foo/bar/'

The full power of Perl regular expressions can be used (see L<perlre(1)>).
For example to delete root's password you could do:

 virt-edit -d назва_домену /etc/passwd -e 's/^root:.*?:/root::/'

What really happens is that the snippet is evaluated as a Perl expression
for each line of the file.  The line, including the final C<\n>, is passed
in C<$_> and the expression should update C<$_> or leave it unchanged.

To delete a line, set C<$_> to the empty string.  For example, to delete the
C<apache> user account from the password file you can do:

 virt-edit -d mydomain /etc/passwd -e '$_ = "" if /^apache:/'

To insert a line, prepend or append it to C<$_>.  However appending lines to
the end of the file is rather difficult this way since there is no concept
of "last line of the file" - your expression just doesn't get called again.
You might want to use the first method (setting C<$EDITOR>) if you want to
do this.

The variable C<$lineno> contains the current line number.  As is
traditional, the first line in the file is number C<1>.

The return value from the expression is ignored, but the expression may call
C<die> in order to abort the whole program, leaving the original file
untouched.

Remember when matching the end of a line that C<$_> may contain the final
C<\n>, or (for DOS files) C<\r\n>, or if the file does not end with a
newline then neither of these.  Thus to match or substitute some text at the
end of a line, use this regular expression:

 /якийсь текст(\r?\n)?$/

Alternately, use the perl C<chomp> function, being careful not to chomp
C<$_> itself (since that would remove all newlines from the file):

 my $m = $_; chomp $m; $m =~ /якийсь текст$/

=head1 ШЛЯХИ У WINDOWS

C<virt-edit> has a limited ability to understand Windows drive letters and
paths (eg. F<E:\foo\bar.txt>).

Тоді і лише тоді, коли у гостьовій системі працює Windows:

=over 4

=item *

Drive letter prefixes like C<C:> are resolved against the Windows Registry
to the correct filesystem.

=item *

Any backslash (C<\>) characters in the path are replaced with forward
slashes so that libguestfs can process it.

=item *

The path is resolved case insensitively to locate the file that should be
edited.

=back

Відомі певні недоліки програми:

=over 4

=item *

Перехід за деякими символічними посиланнями NTFS може здійснюватися з
помилками.

=item *

NTFS junction points that cross filesystems are not followed.

=back

=head1 ВИКОРИСТАННЯ GUESTFISH

L<guestfish(1)> is a more powerful, lower level tool which you can use when
C<virt-edit> doesn't work.

Using C<virt-edit> is approximately equivalent to doing:

 guestfish --rw -i -d назва_домену edit /файл

where C<domname> is the name of the libvirt guest, and F</file> is the full
path to the file.

The command above uses libguestfs's guest inspection feature and so does not
work on guests that libguestfs cannot inspect, or on things like arbitrary
disk images that don't contain guests.  To edit a file on a disk image
directly, use:

 guestfish --rw -a диск.img -m /dev/sda1 edit /файл

where F<disk.img> is the disk image, F</dev/sda1> is the filesystem within
the disk image to edit, and F</file> is the full path to the file.

C<virt-edit> cannot create new files.  Use the guestfish commands C<touch>,
C<write> or C<upload> instead:

 guestfish --rw -i -d назва_домену touch /новий_файл

 guestfish --rw -i -d назва_домену write /новий_файл "новий вміст"

 guestfish --rw -i -d domname upload localfile /newfile

=head1 ЗМІННІ СЕРЕДОВИЩА

=over 4

=item C<EDITOR>

If set, this string is used as the editor.  It may contain arguments,
eg. C<"emacs -nw">

Якщо не встановлено, використовуватиметься C<vi>.

=back

=head1 СТАН ВИХОДУ

Ця програма повертає значення 0 у разі успішного завершення і ненульове
значення, якщо сталася помилка.

=head1 ТАКОЖ ПЕРЕГЛЯНЬТЕ

L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>,
L<virt-tar-in(1)>, L<http://libguestfs.org/>, L<perl(1)>, L<perlre(1)>.

=head1 АВТОР

Richard W.M. Jones L<http://people.redhat.com/~rjones/>

=head1 АВТОРСЬКІ ПРАВА

Copyright (C) 2009-2017 Red Hat Inc.

