
=head1 НАЗВА

virt-edit — програма для редагування файлів у віртуальній машині

=head1 КОРОТКИЙ ОПИС

 virt-edit [--параметри] -d назва_домену файл [файл ...]

 virt-edit [--options] -a диск.img [-a диск.img ...] файл [файл ...]

 virt-edit [-d назва_домену|-a диск.img] файл -e 'вираз'

Застарілий стиль:

 virt-edit назва_домену файл

 virt-edit диск.img [диск.img ...] файл

=head1 ОПИС

C<virt-edit> — інструмент командного рядка для редагування C<файла>, який
зберігається у вказаній віртуальній машині (або образі диска).

Ви можете вказати декілька назв файлів. Вміст таких файлів буде редаговано
послідовно. Назви файлів слід вказувати повністю (разом зі шляхом),
починаючи з кореневого каталогу (тобто назва має починатися з «/»).

Якщо ви просто хочете переглянути файл, скористайтеся L<virt-cat(1)>.

Для виконання складніших дій можна скористатися програмою L<guestfish(1)>
(див. L</ВИКОРИСТАННЯ GUESTFISH> нижче).

C<virt-edit> не можна використовувати для створення файлів. Для цього, та
багатьох інших завдань, слід використовувати L<guestfish(1)>.

=head1 ПРИКЛАДИ

Інтерактивне редагування іменованих файлів:

 virt-edit -d mydomain /boot/grub/grub.conf

 virt-edit -d mydomain /etc/passwd

Для гостьових систем Windows передбачено розпізнавання таких шляхів у
Windows:

 virt-edit -d mywindomain 'c:\autoexec.bat'

Якщо встановлено Perl, ви також можете редагувати файли у неінтерактивному
режимі (див. L</НЕІНТЕРАКТИВНЕ РЕДАГУВАННЯ> нижче). Щоб змінити типовий
рівень init на 5:

 virt-edit -d mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'

=head1 ПАРАМЕТРИ

=over 4

=item B<--help>

Показати коротку довідку.

=item B<-a> файл

=item B<--add> файл

Додати I<файл>, який має бути образом диска з віртуальної машини. Якщо у
віртуальній машині декілька блокових пристроїв, вам слід вказати їх усі за
допомогою окремих записів параметра I<-a>.

Формат образу диска визначається автоматично. Щоб перевизначити його і
примусово використати певний формат, скористайтеся параметром
I<--format=..>.

=item B<-a> адреса

=item B<--add> адреса

Додати віддалений диск. Див. L<guestfish(1)/ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА>.

=item B<-b> СУФІКС

=item B<--backup> СУФІКС

Створити резервну копію початкового файла I<у образі диска гостьової
системи>. Резервна копія матиме таку саму назву, що і початковий файл, із
додаванням суфікса C<суфікс>.

Зазвичай, першим символом суфікса C<суфікс> буде крапка, C<.>, отже, можна
віддати таку команду:

 virt-edit -b .orig [тощо]

Типово файл резервної копії не створюється.

=item B<-c> адреса

=item B<--connect> адреса

Якщо використовується libvirt, встановити з’єднання з вказаним I<URI>. Якщо
пропущено, з’єднання буде встановлено з типовим гіпервізором libvirt.

Якщо вказати блокові пристрої гостьових систем безпосередньо, libvirt не
буде використовуватися взагалі.

=item B<-d> ГІСТЬ

=item B<--domain> ГІСТЬ

Додати всі диски з вказаної гостьової системи libvirt. UUID доменів можна
використовувати замість назв.

=item B<--echo-keys>

Типово, якщо virt-edit попросить вас ввести ключ або пароль, програма не
відтворюватиме введені символи на екрані. Якщо ви не боїтеся
TEMPEST-нападів, або у вашій кімнаті нікого, окрім вас, немає, ви можете
скористатися цим прапорцем, щоб бачити, які саме символи ви вводите.

=item B<-e> вираз

=item B<--edit> ВИРАЗ

=item B<--expr> вираз

Замість запуску зовнішнього редактора, неінтерактивно застосувати вираз Perl
C<ВИРАЗ> до усіх рядків файла. Див. L</НЕІНТЕРАКТИВНЕ РЕДАГУВАННЯ> нижче.

Слід подбати про належне розставлення лапок у виразі, щоб запобігти його
зміні у командній оболонці.

Зауважте, що цим параметром можна буде скористатися, лише якщо встановлено
Perl 5.

=item B<--format=raw|qcow2|..>

=item B<--format>

Типовим значенням для параметра I<-a> є автоматичне визначення формату
образу диска. Використання цього параметра примусово визначає значення
параметрів I<-a> формату диска у наступному рядку команди. Використання
параметра I<--format> без аргументу перемикає програму у режим автоматичного
визначення у наступних параметрах I<-a>.

Приклад:

 virt-edit --format=raw -a диск.img файл

примусове встановлення формату без обробки (без автоматичного визначення)
для F<disk.img>.

 virt-cat --format=raw -a диск.img --format -a інший.img файл

примусове встановлення формату без обробки (без автоматичного визначення)
для F<diskimg> і повернення до автоматичного визначення для F<another.img>.

Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому
форматі, вам слід скористатися цим параметром для визначення формату
диска. Таким чином можна уникнути можливих проблем з захистом для
сформованих зловмисниками гостьових систем (CVE-2010-3851).

=item B<--key> SELECTOR

Specify a key for LUKS, to automatically open a LUKS device when using the
inspection.  C<SELECTOR> can be in one of the following formats:

=over 4

=item B<--key> C<DEVICE>:key:KEY_STRING

Use the specified C<KEY_STRING> as passphrase.

=item B<--key> C<DEVICE>:file:FILENAME

Read the passphrase from F<FILENAME>.

=back

=item B<--keys-from-stdin>

Прочитати параметри ключа або пароля із джерела стандартного
введення. Типово програма намагається читати паролі від користувача
відкриттям F</dev/tty>.

=item B<-m> пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]

=item B<--mount> пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]

Змонтувати названий розділ або логічний том до вказаної точки монтування.

Якщо точку монтування не вказано, типовим значенням є F</>.

Визначення точки монтування вимикає інспектування гостьової системи і
призводить до монтування її кореневої системи та усіх її точок
монтування. Тому вам слід забезпечити монтування усіх точок монтування,
потрібних для роботи із файлами, назви яких вказано як аргументи.

Якщо ви не знаєте, які саме файлові системи містяться у образі диска, ви
можете або запустити guestfish без цього параметра і ознайомитися зі списком
доступних розділів, файлових систем та логічних томів (див. команди
L</list-partitions>, L</list-filesystems> і L</lvs>), або скористатися
програмою L<virt-filesystems(1)>.

Третьою (і нечасто використовуваною) частиною параметра монтування є список
параметрів монтування, які використовуються для того, щоб змонтувати
підлеглу файлову систему. Якщо такий список не буде задано, параметрами
монтування вважатиметься або порожній рядок, або C<ro> (другий варіант
використовується, якщо використано прапорець I<--ro>). Заданням параметрів
монтування ви перевизначаєте типовий варіант. Ймовірно, єдиним випадком,
коли вам може знадобитися це, є випадок вмикання списків керування доступом
(ACL) і/або розширених атрибутів, якщо у файловій системі передбачено їхню
підтримку:

 -m /dev/sda1:/:acl,user_xattr

Використання цього прапорця є еквівалентним до використання команди
C<mount-options>.

Четвертою частиною параметра є назва драйвера файлової системи, якою слід
скористатися, зокрема C<ext3> або C<ntfs>. У визначенні цієї частини
параметра рідко виникає потреба, але вона може бути корисною, якщо для
файлової системи можна скористатися декількома драйверами (приклад: C<ext2>
і C<ext3>), або libguestfs визначає файлову систему помилково.

=item B<-v>

=item B<--verbose>

Увімкнути докладний показ повідомлень з метою діагностики.

=item B<-V>

=item B<--version>

Показати дані щодо версії і завершити роботу.

=item B<-x>

Увімкнути трасування викликів програмного інтерфейсу libguestfs.

=back

=head1 ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ

У попередніх версіях virt-edit можна було використовувати або

 virt-edit диск.img [диск.img ...] файл

або

 virt-edit назва_гостьової_системи файл

тоді як у цій версії вам слід скористатися I<-a> або I<-d>, відповідно, щоб
уникнути помилок у випадках, коли назва образу диска може збігатися із
назвою гостьової системи.

З міркувань зворотної сумісності передбачено підтримку запису параметрів у
застарілому форматі.

=head1 НЕІНТЕРАКТИВНЕ РЕДАГУВАННЯ

C<virt-edit> зазвичай викликає C<$EDITOR> (або vi), щоб адміністратор
системи зміг інтерактивно редагувати файл.

Передбачено також два способи використання C<virt-edit> зі скриптів з метою
автоматизації редагування файлів. (Зауважте, що хоча ви I<можете>
користуватися C<virt-edit> у цей спосіб, стійкішим до помилок буде написання
скриптів, які безпосередньо використовують програмний інтерфейс libguestfs
та Augeas для редагування файлів налаштувань.)

Першим методом є тимчасове встановлення C<$EDITOR> у значення назви скрипту
або програми, яку ви хочете запустити. Скрипт буде викликано у форматі
C<$EDITOR tmpfile>, він має оновлювати C<tmpfile> на місці у будь-який
спосіб.

Другим методом є використання параметра I<-e> програми C<virt-edit> для
запуску короткого фрагмента коду Perl у стилі L<sed(1)>. Наприклад, щоб
змінити усі екземпляри C<foo> на C<bar> у файлі, віддайте таку команду:

 virt-edit -d назва_домену назва_файла -e 's/foo/bar/'

Можна скористатися усією потужністю формальних виразів Perl
(див. L<perlre(1)>). Наприклад, для вилучення пароля root ви можете віддати
таку команду:

 virt-edit -d назва_домену /etc/passwd -e 's/^root:.*?:/root::/'

Під час обробки команди вираз Perl застосовується до кожного з рядків
файла. Рядок, разом із кінцевим C<\n>, передається у C<$_>, а вираз має
оновити C<$_> або лишити його вміст без змін.

Щоб вилучити рядок, встановіть для C<$_> значення порожнього
рядка. Наприклад, щоб вилучити обліковий запис C<apache> з файла паролів, ви
можете віддати таку команду:

 virt-edit -d mydomain /etc/passwd -e '$_ = "" if /^apache:/'

Щоб вставити рядок, допишіть його на початку або наприкінці C<$_>. Втім,
дописування рядків наприкінці файла у цей спосіб є доволі складною справою —
оскільки не існує загального поняття «останній рядок файла», ваш вираз
просто не буде викликано ще раз. Якщо ви хочете дописати рядок наприкінці
файла, вам варто скористатися першим методом (встановленням значення для
C<$EDITOR>).

Змінна C<$lineno> містить значення номера поточного рядка. За традицією,
перший рядок файла має номер C<1>.

Значення, повернуте у результаті обробки виразу, ігнорується, але вираз може
викликати C<die> з метою переривання усієї програми без внесення змін до
початкового файла.

Слід пам'ятати, що відповідник кінця рядка при використанні C<$_> може
містити кінцеве C<\n> або (у файлах DOS) C<\r\n>, або, якщо файл не
закінчується символом нового рядка, жодну з цих послідовностей. Тому для
пошуку або заміни певного тексту наприкінці рядка слід використовувати такий
формальний вираз:

 /якийсь текст(\r?\n)?$/

Альтернативним варіантом є використання функції C<chomp> Perl, але так, щоб
не обрізати саме C<$_> (оскільки ця функція вилучає усі символи нового рядка
з файла):

 my $m = $_; chomp $m; $m =~ /якийсь текст$/

=head1 ШЛЯХИ У WINDOWS

У C<virt-edit> передбачено обмежені можливості щодо обробки літерних дисків
та шляхів у Windows (наприклад F<E:\foo\bar.txt>).

Тоді і лише тоді, коли у гостьовій системі працює Windows:

=over 4

=item *

Літери дисків, наприклад C<C:>, замінюються на адреси відповідних файлових
систем на основі даних з регістру Windows.

=item *

Усі символи зворотної похилої риски (C<\>) у шляху замінюються символами
звичайної похилої риски так, щоб libguestfs змогла обробити адресу.

=item *

Шлях до файла, вміст якого має бути редаговано, визначається без врахування
регістру символів у його записі.

=back

Відомі певні недоліки програми:

=over 4

=item *

Перехід за деякими символічними посиланнями NTFS може здійснюватися з
помилками.

=item *

Точки з'єднання NTFS, які виходять за межі однією файлової системи
використовувати не можна.

=back

=head1 ВИКОРИСТАННЯ GUESTFISH

L<guestfish(1)> є потужнішим інструментом нижчого рівня, яким можна
скористатися, якщо C<virt-edit> не працює.

Використання C<virt-edit> є приблизним еквівалентом такого:

 guestfish --rw -i -d назва_домену edit /файл

де C<назва_домену> — назва гостьової системи libvirt, а F<файл> — шлях до
файла повністю.

У вказаній вище команді використано можливість інспектування гостьових
систем засобами libguestfs, отже, вона не працюватиме у гостьових системах,
які libguestfs не може інспектувати, або у довільних образах дисків, які не
містять гостьових систем. Щоб редагувати дані файла безпосередньо на образі
диска, скористайтеся такою командою:

 guestfish --rw -a диск.img -m /dev/sda1 edit /файл

де F<диск.img> — образ диска, F</dev/sda1> — файлова система у образі диска
для редагування, а F<файл> — шлях до файла повністю.

Програма C<virt-edit> не здатна створювати файли. Для створення слід
користуватися командами guestfish C<touch>, C<write> та C<upload>:

 guestfish --rw -i -d назва_домену touch /новий_файл

 guestfish --rw -i -d назва_домену write /новий_файл "новий вміст"

 guestfish --rw -i -d назва_домену upload локальний_файл /новий_файл

=head1 ЗМІННІ СЕРЕДОВИЩА

=over 4

=item C<EDITOR>

Якщо встановлено, цей рядок використовуватиметься для виклику
редактора. Рядок може містити аргументи, наприклад, C<"emacs -nw">

Якщо не встановлено, використовуватиметься C<vi>.

=back

=head1 СТАН ВИХОДУ

Ця програма повертає значення 0 у разі успішного завершення і ненульове
значення, якщо сталася помилка.

=head1 ТАКОЖ ПЕРЕГЛЯНЬТЕ

L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>,
L<virt-tar-in(1)>, L<http://libguestfs.org/>, L<perl(1)>, L<perlre(1)>.

=head1 АВТОР

Richard W.M. Jones L<http://people.redhat.com/~rjones/>

=head1 АВТОРСЬКІ ПРАВА

Copyright (C) 2009-2019 Red Hat Inc.

