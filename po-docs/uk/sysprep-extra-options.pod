
=item B<--append-line> FILE:LINE (see C<customize> below)

Append a single line of text to the C<FILE>.  If the file does not already
end with a newline, then one is added before the appended line.  Also a
newline is added to the end of the C<LINE> string automatically.

For example (assuming ordinary shell quoting) this command:

 --append-line '/etc/hosts:10.0.0.1 foo'

will add either C<10.0.0.1 foo⏎> or C<⏎10.0.0.1 foo⏎> to the file, the
latter only if the existing file does not already end with a newline.

C<⏎> represents a newline character, which is guessed by looking at the
existing content of the file, so this command does the right thing for files
using Unix or Windows line endings.  It also works for empty or non-existent
files.

To insert several lines, use the same option several times:

 --append-line '/etc/hosts:10.0.0.1 foo'
 --append-line '/etc/hosts:10.0.0.2 bar'

To insert a blank line before the appended line, do:

 --append-line '/etc/hosts:'
 --append-line '/etc/hosts:10.0.0.1 foo'

=item B<--chmod> PERMISSIONS:FILE (see C<customize> below)

Змінити права доступу до файла C<ФАЙЛ> на C<ПРАВА_ДОСТУПУ>.

I<Зауваження>: типово C<ПРАВА_ДОСТУПУ> записуються у десятковому форматі,
якщо ви не додасте початковий C<0> , щоб вказати вісімкове число, тобто
скористаєтеся C<0700>, а не C<700>.

=item B<--commands-from-file> FILENAME (see C<customize> below)

Прочитати команди налаштовування з файла, по одній (разом із аргументами) на
рядок.

Кожен рядок містить команду налаштовування та її аргументи, наприклад:

 delete /якийсь/файл
 install якийсь_пакунок
 password якийсь-користувач:password:його-новий-пароль

Empty lines are ignored, and lines starting with C<#> are comments and are
ignored as well.  Furthermore, arguments can be spread across multiple
lines, by adding a C<\> (continuation character) at the of a line, for
example

 edit /якийсь/файл:\
   s/^OPT=.*/OPT=ok/

The commands are handled in the same order as they are in the file, as if
they were specified as I<--delete /some/file> on the command line.

=item B<--copy> SOURCE:DEST (see C<customize> below)

Копіювати файли або каталоги рекурсивно у межах гостьової системи.

Не можна використовувати символи-замінники.

=item B<--copy-in> LOCALPATH:REMOTEDIR (see C<customize> below)

Copy local files or directories recursively into the disk image, placing
them in the directory C<REMOTEDIR> (which must exist).

Не можна використовувати символи-замінники.

=item B<--delete> PATH (see C<customize> below)

Вилучити файл з гостьової системи. Або вилучити каталог (і увесь його вміст,
рекурсивно).

You can use shell glob characters in the specified path.  Be careful to
escape glob characters from the host shell, if that is required.  For
example:

 virt-customize --delete '/var/log/*.log'.

Див. також I<--upload>, I<--scrub>.

=item B<--edit> FILE:EXPR (see C<customize> below)

Edit C<FILE> using the Perl expression C<EXPR>.

Be careful to properly quote the expression to prevent it from being altered
by the shell.

Note that this option is only available when Perl 5 is installed.

Див. L<virt-edit(1)/NON-INTERACTIVE EDITING>.

=item B<--firstboot> SCRIPT (see C<customize> below)

Install C<SCRIPT> inside the guest, so that when the guest first boots up,
the script runs (as root, late in the boot process).

The script is automatically chmod +x after installation in the guest.

The alternative version I<--firstboot-command> is the same, but it
conveniently wraps the command up in a single line script for you.

You can have multiple I<--firstboot> options.  They run in the same order
that they appear on the command line.

Please take a look at L<virt-builder(1)/FIRST BOOT SCRIPTS> for more
information and caveats about the first boot scripts.

Див. також I<--run>.

=item B<--firstboot-command> 'CMD+ARGS' (see C<customize> below)

Run command (and arguments) inside the guest when the guest first boots up
(as root, late in the boot process).

You can have multiple I<--firstboot> options.  They run in the same order
that they appear on the command line.

Please take a look at L<virt-builder(1)/FIRST BOOT SCRIPTS> for more
information and caveats about the first boot scripts.

Див. також I<--run>.

=item B<--firstboot-install> PKG,PKG..  (see C<customize> below)

Install the named packages (a comma-separated list).  These are installed
when the guest first boots using the guest's package manager (eg. apt, yum,
etc.) and the guest's network connection.

For an overview on the different ways to install packages, see
L<virt-builder(1)/INSTALLING PACKAGES>.

=item B<--hostname> HOSTNAME (see C<customize> below)

Set the hostname of the guest to C<HOSTNAME>.  You can use a dotted
hostname.domainname (FQDN) if you want.

=item B<--install> PKG,PKG..  (see C<customize> below)

Install the named packages (a comma-separated list).  These are installed
during the image build using the guest's package manager (eg. apt, yum,
etc.) and the host's network connection.

For an overview on the different ways to install packages, see
L<virt-builder(1)/INSTALLING PACKAGES>.

See also I<--update>, I<--uninstall>.

=item B<--keep-user-accounts> USERS (see C<user-account> below)

Облікові записи користувачів, які слід залишити у гостьовій
системі. Значенням цього параметра є список імен користувачів, відокремлених
комами, який визначатиме ті записи, які слід зберегти. Приклад:

 --keep-user-accounts mary

збереже обліковий запис користувача C<mary>.

Цей параметр можна вказувати декілька разів у одній команді.

=item B<--link> TARGET:LINK[:LINK..] (see C<customize> below)

Create symbolic link(s) in the guest, starting at C<LINK> and pointing at
C<TARGET>.

=item B<--mkdir> DIR (see C<customize> below)

Створити каталог у гостьовій системі.

This uses S<C<mkdir -p>> so any intermediate directories are created, and it
also works if the directory already exists.

=item B<--move> SOURCE:DEST (see C<customize> below)

Пересунути файли або каталоги у межах гостьової системи.

Не можна використовувати символи-замінники.

=item B<--no-logfile> (see C<customize> below)

Scrub C<builder.log> (log file from build commands) from the image after
building is complete.  If you don't want to reveal precisely how the image
was built, use this option.

Див. також L</LOG FILE>.

=item B<--password> USER:SELECTOR (see C<customize> below)

Set the password for C<USER>.  (Note this option does I<not> create the user
account).

See L<virt-builder(1)/USERS AND PASSWORDS> for the format of the C<SELECTOR>
field, and also how to set up user accounts.

=item B<--password-crypto> md5|sha256|sha512 (see C<customize> below)

When the virt tools change or set a password in the guest, this option sets
the password encryption of that password to C<md5>, C<sha256> or C<sha512>.

C<sha256> and C<sha512> require glibc E<ge> 2.7 (check crypt(3) inside the
guest).

C<md5> працюватиме з відносно давніми гостьовими системами Linux
(наприкладRHEL 3), але є незахищеним щодо новітніх способів атак.

Типовим способом шифрування є C<sha512>. Він використовується, якщо
libguestfs вдасться виявити у гостьовій системі підтримку SHA-512. Якщо
такої підтримки не буде виявлено, використовуватиметься C<md5>. За допомогою
цього параметра ви можете перевизначити автоматично визначений libguestfs
спосіб шифрування.

Note this does not change the default password encryption used by the guest
when you create new user accounts inside the guest.  If you want to do that,
then you should use the I<--edit> option to modify
C</etc/sysconfig/authconfig> (Fedora, RHEL) or C</etc/pam.d/common-password>
(Debian, Ubuntu).

=item B<--remove-user-accounts> USERS (see C<user-account> below)

Облікові записи користувачів, які слід вилучити з гостьової
системи. Значенням цього параметра є список імен користувачів, відокремлених
комами, який визначатиме ті записи, які слід вилучити. Приклад:

 --remove-user-accounts bob,eve

would only remove the user accounts C<bob> and C<eve>.

Цей параметр можна вказувати декілька разів у одній команді.

=item B<--root-password> SELECTOR (see C<customize> below)

Встановити пароль користувача root.

See L<virt-builder(1)/USERS AND PASSWORDS> for the format of the C<SELECTOR>
field, and also how to set up user accounts.

Note: In virt-builder, if you I<don't> set I<--root-password> then the guest
is given a I<random> root password.

=item B<--run> SCRIPT (see C<customize> below)

Run the shell script (or any program) called C<SCRIPT> on the disk image.
The script runs virtualized inside a small appliance, chrooted into the
guest filesystem.

The script is automatically chmod +x.

If libguestfs supports it then a limited network connection is available but
it only allows outgoing network connections.  You can also attach data disks
(eg. ISO files) as another way to provide data (eg. software packages) to
the script without needing a network connection (I<--attach>).  You can also
upload data files (I<--upload>).

You can have multiple I<--run> options.  They run in the same order that
they appear on the command line.

Див. також I<--firstboot>, I<--attach>, I<--upload>.

=item B<--run-command> 'CMD+ARGS' (see C<customize> below)

Run the command and arguments on the disk image.  The command runs
virtualized inside a small appliance, chrooted into the guest filesystem.

If libguestfs supports it then a limited network connection is available but
it only allows outgoing network connections.  You can also attach data disks
(eg. ISO files) as another way to provide data (eg. software packages) to
the script without needing a network connection (I<--attach>).  You can also
upload data files (I<--upload>).

You can have multiple I<--run-command> options.  They run in the same order
that they appear on the command line.

Див. також I<--firstboot>, I<--attach>, I<--upload>.

=item B<--script> SCRIPT (see C<script> below)

Run the named C<SCRIPT> (a shell script or program) against the guest.  The
script can be any program on the host.  The script's current directory will
be the guest's root directory.

B<Note:> If the script is not on the $PATH, then you must give the full
absolute path to the script.

=item B<--scriptdir> SCRIPTDIR (see C<script> below)

Точку монтування (порожній каталог на вузлі), використану при виконанні дії
C<script>, увімкнено і вказано використання одного або декількох скриптів за
допомогою I<--script>.

B<Зауваження:> C<SCRIPTDIR> B<має> бути вказано повністю.

Якщо I<--scriptdir> не вказано, буде створено тимчасову точку монтування

=item B<--scrub> FILE (see C<customize> below)

Витерти файл з гостьової системи. Подібне до I<--delete>, окрім того, що:

=over 4

=item *

It scrubs the data so a guest could not recover it.

=item *

It cannot delete directories, only regular files.

=back

=item B<--selinux-relabel> (see C<customize> below)

Relabel files in the guest so that they have the correct SELinux label.

This will attempt to relabel files immediately, but if the operation fails
this will instead touch F</.autorelabel> on the image to schedule a relabel
operation for the next time the image boots.

You should only use this option for guests which support SELinux.

=item B<--sm-attach> SELECTOR (see C<customize> below)

Attach to a pool using C<subscription-manager>.

See L<virt-builder(1)/SUBSCRIPTION-MANAGER> for the format of the
C<SELECTOR> field.

=item B<--sm-credentials> SELECTOR (see C<customize> below)

Set the credentials for C<subscription-manager>.

See L<virt-builder(1)/SUBSCRIPTION-MANAGER> for the format of the
C<SELECTOR> field.

=item B<--sm-register> (see C<customize> below)

Register the guest using C<subscription-manager>.

This requires credentials being set using I<--sm-credentials>.

=item B<--sm-remove> (see C<customize> below)

Remove all the subscriptions from the guest using C<subscription-manager>.

=item B<--sm-unregister> (see C<customize> below)

Unregister the guest using C<subscription-manager>.

=item B<--ssh-inject> USER[:SELECTOR] (see C<customize> below)

Inject an ssh key so the given C<USER> will be able to log in over ssh
without supplying a password.  The C<USER> must exist already in the guest.

See L<virt-builder(1)/SSH KEYS> for the format of the C<SELECTOR> field.

You can have multiple I<--ssh-inject> options, for different users and also
for more keys for each user.

=item B<--timezone> TIMEZONE (see C<customize> below)

Set the default timezone of the guest to C<TIMEZONE>.  Use a location string
like C<Europe/London>

=item B<--touch> FILE (see C<customize> below)

This command performs a L<touch(1)>-like operation on C<FILE>.

=item B<--truncate> FILE (see C<customize> below)

This command truncates C<FILE> to a zero-length file. The file must exist
already.

=item B<--truncate-recursive> PATH (see C<customize> below)

This command recursively truncates all files under C<PATH> to zero-length.

=item B<--uninstall> PKG,PKG..  (see C<customize> below)

Uninstall the named packages (a comma-separated list).  These are removed
during the image build using the guest's package manager (eg. apt, yum,
etc.).  Dependent packages may also need to be uninstalled to satisfy the
request.

See also I<--install>, I<--update>.

=item B<--update> (see C<customize> below)

Do the equivalent of C<yum update>, C<apt-get upgrade>, or whatever command
is required to update the packages already installed in the template to
their latest versions.

See also I<--install>, I<--uninstall>.

=item B<--upload> FILE:DEST (see C<customize> below)

Upload local file C<FILE> to destination C<DEST> in the disk image.  File
owner and permissions from the original are preserved, so you should set
them to what you want them to be in the disk image.

C<DEST> could be the final filename.  This can be used to rename the file on
upload.

If C<DEST> is a directory name (which must already exist in the guest)  then
the file is uploaded into that directory, and it keeps the same name as on
the local filesystem.

Див. також I<--mkdir>, I<--delete>, I<--scrub>.

=item B<--write> FILE:CONTENT (see C<customize> below)

Записати C<ДАНІ> до файла C<ФАЙЛ>.

