.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "virt-rescue 1"
.TH virt-rescue 1 "2011-09-01" "libguestfs-1.12.6" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
virt-rescue \- Run a rescue shell on a virtual machine
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& virt\-rescue [\-\-options] \-d domname
\&
\& virt\-rescue [\-\-options] \-a disk.img [\-a disk.img ...]
.Ve
.PP
Old style:
.PP
.Vb 1
\& virt\-rescue [\-\-options] domname
\&
\& virt\-rescue [\-\-options] disk.img [disk.img ...]
.Ve
.SH "ПОПЕРЕДЖЕННЯ"
.IX Header "ПОПЕРЕДЖЕННЯ"
You must \fInot\fR use \f(CW\*(C`virt\-rescue\*(C'\fR on live virtual machines.  Doing so will
probably result in disk corruption in the \s-1VM\s0.  \f(CW\*(C`virt\-rescue\*(C'\fR tries to stop
you from doing this, but doesn't catch all cases.
.PP
However if you use the \fI\-\-ro\fR (read only) option, then you can attach a
shell to a live virtual machine.  The results might be strange or
inconsistent at times but you won't get disk corruption.
.SH "ОПИС"
.IX Header "ОПИС"
virt-rescue is like a Rescue \s-1CD\s0, but for virtual machines, and without the
need for a \s-1CD\s0.  virt-rescue gives you a rescue shell and some simple
recovery tools which you can use to examine or rescue a virtual machine or
disk image.
.PP
You can run virt-rescue on any virtual machine known to libvirt, or directly
on disk image(s):
.PP
.Vb 1
\& virt\-rescue \-d GuestName
\&
\& virt\-rescue \-\-ro \-a /path/to/disk.img
\&
\& virt\-rescue \-a /dev/sdc
.Ve
.PP
For live VMs you \fImust\fR use the \-\-ro option.
.PP
When you run virt-rescue on a virtual machine or disk image, you are placed
in an interactive bash shell where you can use many ordinary Linux
commands.  What you see in \f(CW\*(C`/\*(C'\fR (\f(CW\*(C`/bin\*(C'\fR, \f(CW\*(C`/lib\*(C'\fR etc) is the rescue
appliance.  You must mount the virtual machine's filesystems by hand.  There
is an empty directory called \f(CW\*(C`/sysroot\*(C'\fR where you can mount filesystems.
.PP
In the example below, we list logical volumes, then choose one to mount
under \f(CW\*(C`/sysroot\*(C'\fR:
.PP
.Vb 6
\& ><rescue> lvs
\& LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert
\& lv_root vg_f11x64 \-wi\-a\-   8.83G
\& lv_swap vg_f11x64 \-wi\-a\- 992.00M
\& ><rescue> mount /dev/vg_f11x64/lv_root /sysroot
\& ><rescue> ls /sysroot
.Ve
.PP
If you don't know what filesystems are available on the virtual machine then
you can use commands such as \fIparted\fR\|(8) and \fIlvs\fR\|(8) to find out.
.SS "ПРИМІТКИ"
.IX Subsection "ПРИМІТКИ"
Virt-rescue can be used on \fIany\fR disk image file or device, not just a
virtual machine.  For example you can use it on a blank file if you want to
partition that file (although we would recommend using \fIguestfish\fR\|(1)
instead as it is more suitable for this purpose).  You can even use
virt-rescue on things like \s-1SD\s0 cards.
.PP
Virt-rescue does not require root.  You only need to run it as root if you
need root to open the disk image.
.PP
This tool is just designed for quick interactive hacking on a virtual
machine.  For more structured access to a virtual machine disk image, you
should use \fIguestfs\fR\|(3).  To get a structured shell that you can use to
make scripted changes to guests, use \fIguestfish\fR\|(1).
.SH "ПАРАМЕТРИ"
.IX Header "ПАРАМЕТРИ"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Display brief help.
.IP "\fB\-a\fR file" 4
.IX Item "-a file"
.PD 0
.IP "\fB\-\-add\fR file" 4
.IX Item "--add file"
.PD
Add \fIfile\fR which should be a disk image from a virtual machine.  If the
virtual machine has multiple block devices, you must supply all of them with
separate \fI\-a\fR options.
.Sp
The format of the disk image is auto-detected.  To override this and force a
particular format use the \fI\-\-format=..\fR option.
.IP "\fB\-\-append kernelopts\fR" 4
.IX Item "--append kernelopts"
Pass additional options to the rescue kernel.
.IP "\fB\-c\fR \s-1URI\s0" 4
.IX Item "-c URI"
.PD 0
.IP "\fB\-\-connect\fR \s-1URI\s0" 4
.IX Item "--connect URI"
.PD
If using libvirt, connect to the given \fI\s-1URI\s0\fR.  If omitted, then we connect
to the default libvirt hypervisor.
.Sp
If you specify guest block devices directly (\fI\-a\fR), then libvirt is not
used at all.
.IP "\fB\-d\fR guest" 4
.IX Item "-d guest"
.PD 0
.IP "\fB\-\-domain\fR guest" 4
.IX Item "--domain guest"
.PD
Add all the disks from the named libvirt guest.  Domain UUIDs can be used
instead of names.
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
The default for the \fI\-a\fR option is to auto-detect the format of the disk
image.  Using this forces the disk format for \fI\-a\fR options which follow on
the command line.  Using \fI\-\-format\fR with no argument switches back to
auto-detection for subsequent \fI\-a\fR options.
.Sp
Приклад:
.Sp
.Vb 1
\& virt\-rescue \-\-format=raw \-a disk.img
.Ve
.Sp
forces raw format (no auto-detection) for \f(CW\*(C`disk.img\*(C'\fR.
.Sp
.Vb 1
\& virt\-rescue \-\-format=raw \-a disk.img \-\-format \-a another.img
.Ve
.Sp
forces raw format (no auto-detection) for \f(CW\*(C`disk.img\*(C'\fR and reverts to
auto-detection for \f(CW\*(C`another.img\*(C'\fR.
.Sp
If you have untrusted raw-format guest disk images, you should use this
option to specify the disk format.  This avoids a possible security problem
with malicious guests (\s-1CVE\-2010\-3851\s0).
.IP "\fB\-m \s-1MB\s0\fR" 4
.IX Item "-m MB"
.PD 0
.IP "\fB\-\-memsize \s-1MB\s0\fR" 4
.IX Item "--memsize MB"
.PD
Change the amount of memory allocated to the rescue system.  The default is
set by libguestfs and is small but adequate for running system tools.  The
occasional program might need more memory.  The parameter is specified in
megabytes.
.IP "\fB\-\-network\fR" 4
.IX Item "--network"
Enable \s-1QEMU\s0 user networking in the guest.  See \*(L"\s-1NETWORK\s0\*(R".
.IP "\fB\-r\fR" 4
.IX Item "-r"
.PD 0
.IP "\fB\-\-ro\fR" 4
.IX Item "--ro"
.PD
Open the image read-only.
.Sp
The option must always be used if the disk image or virtual machine might be
running, and is generally recommended in cases where you don't need write
access to the disk.
.Sp
See also \*(L"\s-1OPENING\s0 \s-1DISKS\s0 \s-1FOR\s0 \s-1READ\s0 \s-1AND\s0 \s-1WRITE\s0\*(R" in \fIguestfish\fR\|(1).
.IP "\fB\-\-selinux\fR" 4
.IX Item "--selinux"
Enable SELinux in the rescue appliance.  You should read
\&\*(L"\s-1SELINUX\s0\*(R" in \fIguestfs\fR\|(3) before using this option.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Enable verbose messages for debugging.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Показати дані щодо версії і завершити роботу.
.IP "\fB\-w\fR" 4
.IX Item "-w"
.PD 0
.IP "\fB\-\-rw\fR" 4
.IX Item "--rw"
.PD
This changes the \fI\-a\fR and \fI\-d\fR options so that disks are added and mounts
are done read-write.
.Sp
See \*(L"\s-1OPENING\s0 \s-1DISKS\s0 \s-1FOR\s0 \s-1READ\s0 \s-1AND\s0 \s-1WRITE\s0\*(R" in \fIguestfish\fR\|(1).
.IP "\fB\-x\fR" 4
.IX Item "-x"
Enable tracing of libguestfs \s-1API\s0 calls.
.SH "OLD-STYLE COMMAND LINE ARGUMENTS"
.IX Header "OLD-STYLE COMMAND LINE ARGUMENTS"
Previous versions of virt-rescue allowed you to write either:
.PP
.Vb 1
\& virt\-rescue disk.img [disk.img ...]
.Ve
.PP
or
.PP
.Vb 1
\& virt\-rescue guestname
.Ve
.PP
whereas in this version you should use \fI\-a\fR or \fI\-d\fR respectively to avoid
the confusing case where a disk image might have the same name as a guest.
.PP
For compatibility the old style is still supported.
.SH "NETWORK"
.IX Header "NETWORK"
Adding the \fI\-\-network\fR option enables \s-1QEMU\s0 user networking in the rescue
appliance.  There are some differences between user networking and ordinary
networking:
.IP "ping does not work" 4
.IX Item "ping does not work"
Because the \s-1ICMP\s0 \s-1ECHO_REQUEST\s0 protocol generally requires root in order to
send the ping packets, and because virt-rescue must be able to run as
non-root, \s-1QEMU\s0 user networking is not able to emulate the \fIping\fR\|(8)
command.  The ping command will appear to resolve addresses but will not be
able to send or receive any packets.  This does not mean that the network is
not working.
.IP "cannot receive connections" 4
.IX Item "cannot receive connections"
\&\s-1QEMU\s0 user networking cannot receive incoming connections.
.IP "making \s-1TCP\s0 connections" 4
.IX Item "making TCP connections"
The virt-rescue appliance needs to be small and so does not include many
network tools.  In particular there is no \fItelnet\fR\|(1) command.  You can
make \s-1TCP\s0 connections from the shell using the magical
\&\f(CW\*(C`/dev/tcp/<hostname>/<port>\*(C'\fR syntax:
.Sp
.Vb 3
\& exec 3<>/dev/tcp/redhat.com/80
\& echo "GET /" >&3
\& cat <&3
.Ve
.Sp
See \fIbash\fR\|(1) for more details.
.SH "ЗМІННІ СЕРЕДОВИЩА"
.IX Header "ЗМІННІ СЕРЕДОВИЩА"
Several environment variables affect virt-rescue.  See
\&\*(L"\s-1ENVIRONMENT\s0 \s-1VARIABLES\s0\*(R" in \fIguestfs\fR\|(3) for the complete list.
.SH "SHELL QUOTING"
.IX Header "SHELL QUOTING"
Libvirt guest names can contain arbitrary characters, some of which have
meaning to the shell such as \f(CW\*(C`#\*(C'\fR and space.  You may need to quote or
escape these characters on the command line.  See the shell manual page
\&\fIsh\fR\|(1) for details.
.SH "ФАЙЛИ"
.IX Header "ФАЙЛИ"
.ie n .IP "$HOME/.libguestfs\-tools.rc" 4
.el .IP "\f(CW$HOME\fR/.libguestfs\-tools.rc" 4
.IX Item "$HOME/.libguestfs-tools.rc"
.PD 0
.IP "/etc/libguestfs\-tools.conf" 4
.IX Item "/etc/libguestfs-tools.conf"
.PD
This configuration file controls the default read-only or read-write mode
(\fI\-\-ro\fR or \fI\-\-rw\fR).
.Sp
See \*(L"\s-1OPENING\s0 \s-1DISKS\s0 \s-1FOR\s0 \s-1READ\s0 \s-1AND\s0 \s-1WRITE\s0\*(R" in \fIguestfish\fR\|(1).
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fIguestfs\fR\|(3), \fIguestfish\fR\|(1), \fIvirt\-cat\fR\|(1), \fIvirt\-edit\fR\|(1),
<http://libguestfs.org/>.
.SH "АВТОР"
.IX Header "АВТОР"
Richard W.M. Jones <http://people.redhat.com/~rjones/>
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
Copyright (C) 2009\-2011 Red Hat Inc.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.
.PP
Ця програма поширюється у сподіванні, що вона буде корисною, але БЕЗ
БУДЬ\-ЯКИХ ГАРАНТІЙНИХ ЗОБОВ’ЯЗАНЬ; навіть без очевидної гарантії
ПРАЦЕЗДАТНОСТІ або ПРИДАТНОСТІ ДЛЯ ВИКОРИСТАННЯ З ПЕВНОЮ МЕТОЮ. Докладніше
про це можна дізнатися з \s-1GNU\s0 General Public License.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 675 Mass
Ave, Cambridge, \s-1MA\s0 02139, \s-1USA\s0.
