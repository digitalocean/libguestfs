.\" Automatically generated by Podwrapper::Man 1.40.2 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "virt-rescue 1"
.TH virt-rescue 1 "2019-02-07" "libguestfs-1.40.2" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
virt-rescue — запуск оболонки відновлення у віртуальній машині
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& virt\-rescue [\-\-параметри] \-d назва_домену
\&
\& virt\-rescue [\-\-параметри] \-a диск.img [\-a диск.img ...] [\-i]
.Ve
.PP
Старий стиль:
.PP
.Vb 1
\& virt\-rescue [\-\-параметри] назва_домену
\&
\& virt\-rescue [\-\-параметри] диск.img [диск.img ...]
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
virt-rescue — є образом компакт\-диска для порятунку системи, але призначеним
для віртуальних машин. Його особливістю також є те, що для роботи йому не
потрібен фізичний носій. virt-rescue надає у ваше розпорядження командну
оболонку порятунку системи та деякі прості інструменти, якими ви можете
скористатися для аналізу і виправлення віртуальної машини або образу диска.
.PP
Ви можете запускати virt-rescue для будь\-якої віртуальної машини, відомої
libvirt, або безпосередньо для образів дисків:
.PP
.Vb 1
\& virt\-rescue \-d Назва_гостьової_системи \-i
\&
\& virt\-rescue \-\-ro \-a /шлях/до/диск.img \-i
\&
\& virt\-rescue \-a /dev/sdc
.Ve
.PP
Для активних віртуальних машин вам \fIслід\fR використовувати параметр \fI\-\-ro\fR.
.PP
При роботі з virt-rescue над віртуальною машиною або образом диска ви
матимете справу із інтерактивною командною оболонкою bash, у якій можна
скористатися багатьма звичайними командами Linux. Те, що зберігатиметься у
\&\fI/\fR (\fI/bin\fR, \fI/lib\fR тощо) є рятівною базовою системою. Для роботи з
файловими системами віртуальної машини вам слід їх змонтувати. Для
монтування файлових систем передбачено порожній каталог із назвою
\&\fI/sysroot\fR.
.PP
Щоб автоматично змонтувати файлові системи віртуальної машини до
\&\fI/sysroot\fR, скористайтеся параметром \fI\-i\fR. У відповідь програма використає
засоби інспектування libguestfs для виявлення файлових систем і монтування
їх до належних каталогів. Ви також можете змонтувати окремі файлові системи
за допомогою параметра  \fI\-m\fR.
.PP
Іншим способом монтування є отримання списку логічних томів (за допомогою
\&\fBlvs\fR\|(8)) і розділів (за допомогою \fBparted\fR\|(8)) і монтування їх вручну:
.PP
.Vb 7
\& ><rescue> lvs
\& LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert
\& lv_root vg_f15x32 \-wi\-a\-   8.83G
\& lv_swap vg_f15x32 \-wi\-a\- 992.00M
\& ><rescue> mount /dev/vg_f15x32/lv_root /sysroot
\& ><rescue> mount /dev/vda1 /sysroot/boot
\& ><rescue> ls /sysroot
.Ve
.PP
Іншою програмою для побудови списку доступних файлових систем є
\&\fBvirt\-filesystems\fR\|(1).
.PP
Для запуску програм у гостьовій системі Linux (наприклад, програми grub) вам
слід спочатку змінити кореневий каталог на /sysroot:
.PP
.Vb 1
\& ><rescue> chroot /sysroot
.Ve
.SS "ПРИМІТКИ"
.IX Subsection "ПРИМІТКИ"
Virt-rescue можна використовувати для \fIбудь\-якого\fR файла образу диска або
пристрою, не лише для віртуальної машини. Наприклад, ви можете скористатися
програмою для порожнього файла, якщо хочете додати розділ у цей файл (втім,
ми рекомендуємо для цього користуватися \fBguestfish\fR\|(1), оскільки цю
програму краще пристосовано для виконання подібних завдань). Ви навіть
можете використовувати virt-rescue для роботи з дисками \s-1USB,\s0 картками \s-1SD\s0 та
жорсткими дисками.
.PP
Ви можете наказати virt-rescue створити для вас тестовий диск. Це корисно
для тестування інструментів Linux (див. \fI\-\-scratch\fR).
.PP
Для роботи virt-rescue не потрібні права користувача root. Вам знадобляться
права доступу root, лише якщо вам потрібні права root для відкриття образу
диска.
.PP
Цю програму було розроблено для швидкої інтерактивної роботи з віртуальною
машиною. Для структурованішого доступу до образу диска віртуальної машини
варто використовувати \fBguestfs\fR\|(3). Структурованою командною оболонкою для
внесення змін до гостьової системи за певним сценарієм є \fBguestfish\fR\|(1).
.SH "ПАРАМЕТРИ"
.IX Header "ПАРАМЕТРИ"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Показати коротку довідку.
.IP "\fB\-a\fR ФАЙЛ" 4
.IX Item "-a ФАЙЛ"
.PD 0
.IP "\fB\-\-add\fR ФАЙЛ" 4
.IX Item "--add ФАЙЛ"
.PD
Додати \fIФАЙЛ\fR, який має бути образом диска з віртуальної машини. Якщо у
віртуальній машині декілька блокових пристроїв, вам слід вказати їх усі за
допомогою окремих записів параметра \fI\-a\fR.
.Sp
Формат образу диска визначається автоматично. Щоб перевизначити його і
примусово використати певний формат, скористайтеся параметром
\&\fI\-\-format=..\fR.
.IP "\fB\-a\fR адреса" 4
.IX Item "-a адреса"
.PD 0
.IP "\fB\-\-add\fR адреса" 4
.IX Item "--add адреса"
.PD
Додати віддалений диск. Див. \*(L"ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА\*(R" in \fBguestfish\fR\|(1).
.IP "\fB\-\-append\fR ПАРАМЕТРИ_ЯДРА" 4
.IX Item "--append ПАРАМЕТРИ_ЯДРА"
Передати додаткові параметри ядру відновлення.
.IP "\fB\-c\fR адреса" 4
.IX Item "-c адреса"
.PD 0
.IP "\fB\-\-connect\fR адреса" 4
.IX Item "--connect адреса"
.PD
Якщо використовується libvirt, встановити з’єднання з вказаним \fI\s-1URI\s0\fR. Якщо
пропущено, з’єднання буде встановлено з типовим гіпервізором libvirt.
.Sp
Якщо вказати блокові пристрої гостьових систем безпосередньо (\fI\-a\fR),
libvirt не буде використовуватися взагалі.
.IP "\fB\-d\fR гість" 4
.IX Item "-d гість"
.PD 0
.IP "\fB\-\-domain\fR гість" 4
.IX Item "--domain гість"
.PD
Додати всі диски з вказаної гостьової системи libvirt. \s-1UUID\s0 доменів можна
використовувати замість назв.
.IP "\fB\-e none\fR" 4
.IX Item "-e none"
Вимкнути клавішу екранування.
.IP "\fB\-e\fR КЛАВІША" 4
.IX Item "-e КЛАВІША"
Встановлює для керівних клавіш вказану послідовність натискання
клавіш. Типовою є \f(CW\*(C`^]\*(C'\fR. Для визначення керівних клавіш ви можете
скористатися такими рядками:
.RS 4
.ie n .IP """^x""" 4
.el .IP "\f(CW^x\fR" 4
.IX Item "^x"
Клавіша Ctrl + клавіша \f(CW\*(C`x\*(C'\fR.
.ie n .IP """none""" 4
.el .IP "\f(CWnone\fR" 4
.IX Item "none"
\&\fI\-e none\fR означає «без клавіші екранування», екранування вимкнено.
.RE
.RS 4
.Sp
Див. \*(L"КЛАВІША ЕКРАНУВАННЯ\*(R" нижче, щоб дізнатися більше.
.RE
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
Типовим значенням для параметра \fI\-a\fR є автоматичне визначення формату
образу диска. Використання цього параметра примусово визначає значення
параметрів \fI\-a\fR формату диска у наступному рядку команди. Використання
параметра \fI\-\-format\fR без аргументу перемикає програму у режим автоматичного
визначення у наступних параметрах \fI\-a\fR.
.Sp
Приклад:
.Sp
.Vb 1
\& virt\-rescue \-\-format=raw \-a диск.img
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \fIdisk.img\fR.
.Sp
.Vb 1
\& virt\-rescue \-\-format=raw \-a диск.img \-\-format \-a інший.img
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \fIdiskimg\fR і повернення до автоматичного визначення для \fIanother.img\fR.
.Sp
Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому
форматі, вам слід скористатися цим параметром для визначення формату
диска. Таким чином можна уникнути можливих проблем з захистом для
сформованих зловмисниками гостьових систем (\s-1CVE\-2010\-3851\s0).
.IP "\fB\-i\fR" 4
.IX Item "-i"
.PD 0
.IP "\fB\-\-inspector\fR" 4
.IX Item "--inspector"
.PD
Використовуючи код \fBvirt\-inspector\fR\|(1), виконати інспектування дисків,
шукаючи операційну систему і монтуючи файлові системи так, як їх мало б бути
змонтовано у справжній віртуальній машині.
.Sp
Файлові системи у середовищі порятунку системи монтуються до \fI/sysroot\fR.
.IP "\fB\-\-memsize\fR МБ" 4
.IX Item "--memsize МБ"
Змінити обсяг пам'яті, який надається системі для порятунку. Типове значення
встановлюється libguestfs і є малим, але достатнім для запуску інструментів
для роботи із системою. Певні програми можуть потребувати додаткового обсягу
пам'яті. Значення слід вказувати у мегабайтах.
.IP "\fB\-m\fR пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]" 4
.IX Item "-m пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]"
.PD 0
.IP "\fB\-\-mount\fR пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]" 4
.IX Item "--mount пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]"
.PD
Змонтувати вказаний за назвою розділ або логічний том до вказаної точки
монтування \fBу гостьовій системі\fR (немає нічого спільного із точками
монтування у основній системі).
.Sp
Якщо точку монтування не вказано, типовим значенням є \fI/\fR. Вам слід
змонтувати щось до \fI/\fR.
.Sp
Файлові системи у середовищі порятунку системи монтуються до \fI/sysroot\fR.
.Sp
Третьою (і нечасто використовуваною) частиною параметра монтування є список
параметрів монтування, які використовуються для того, щоб змонтувати
підлеглу файлову систему. Якщо такий список не буде задано, параметрами
монтування вважатиметься або порожній рядок, або \f(CW\*(C`ro\*(C'\fR (другий варіант
використовується, якщо використано прапорець \fI\-\-ro\fR). Заданням параметрів
монтування ви перевизначаєте типовий варіант. Ймовірно, єдиним випадком,
коли вам може знадобитися це, є випадок вмикання списків керування доступом
(\s-1ACL\s0) і/або розширених атрибутів, якщо у файловій системі передбачено їхню
підтримку:
.Sp
.Vb 1
\& \-m /dev/sda1:/:acl,user_xattr
.Ve
.Sp
Четвертою частиною параметра є назва драйвера файлової системи, якою слід
скористатися, зокрема \f(CW\*(C`ext3\*(C'\fR або \f(CW\*(C`ntfs\*(C'\fR. У визначенні цієї частини
параметра рідко виникає потреба, але вона може бути корисною, якщо для
файлової системи можна скористатися декількома драйверами (приклад: \f(CW\*(C`ext2\*(C'\fR
і \f(CW\*(C`ext3\*(C'\fR), або libguestfs визначає файлову систему помилково.
.IP "\fB\-\-network\fR" 4
.IX Item "--network"
Уможливити для користувача \s-1QEMU\s0 роботу у мережі у гостьовій
системі. Див. \*(L"МЕРЕЖА\*(R".
.IP "\fB\-r\fR" 4
.IX Item "-r"
.PD 0
.IP "\fB\-\-ro\fR" 4
.IX Item "--ro"
.PD
Відкрити образ у режимі лише читання.
.Sp
Цей параметр слід завжди використовувати, якщо образ диска або віртуальна
машина може працювати. Загалом, рекомендуємо використовувати його у
випадках, коли вам не потрібен доступ на запис до диска.
.Sp
Див. також \*(L"\s-1OPENING DISKS FOR READ AND WRITE\*(R"\s0 in \fBguestfish\fR\|(1).
.IP "\fB\-\-scratch\fR" 4
.IX Item "--scratch"
.PD 0
.IP "\fB\-\-scratch=N\fR" 4
.IX Item "--scratch=N"
.PD
Використання параметра \fI\-\-scratch\fR призводить до додавання великого
тестового диска до базової системи для порятунку віртуальних машин. Запис
\&\fI\-\-scratch=N\fR призводить до додавання \f(CW\*(C`N\*(C'\fR тестових дисків. Тестові диски
автоматично вилучаються, якщо virt-rescue завершує роботу.
.Sp
Ви також можете поєднувати параметри \fI\-a\fR, \fI\-d\fR і \fI\-\-scratch\fR. Тестові
диски додаються до базової системи у порядку, у якому їх було вказано у
рядку команди.
.IP "\fB\-\-selinux\fR" 4
.IX Item "--selinux"
Цей параметр призначено для забезпечення зворотної сумісності, його
використання не матиме жодних наслідків.
.IP "\fB\-\-smp\fR N" 4
.IX Item "--smp N"
Увімкнути N ≥ 2 віртуальних процесорів у базовій системі для порятунку.
.IP "\fB\-\-suggest\fR" 4
.IX Item "--suggest"
Цей параметр використовувався у застарілих версіях virt-rescue для надання
пропозицій команд, якими ви могли б скористатися для монтування файлових
систем до \fI/sysroot\fR. У сучасних версіях virt-rescue простіше скористатися
параметром \fI\-i\fR.
.Sp
Цей параметр неявно використовує \fI\-\-ro\fR і є безпечним для використання,
навіть якщо гостьова система працює або запущено інший екземпляр
virt-rescue.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Увімкнути докладний показ повідомлень з метою діагностики.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Показати дані щодо версії і завершити роботу.
.IP "\fB\-w\fR" 4
.IX Item "-w"
.PD 0
.IP "\fB\-\-rw\fR" 4
.IX Item "--rw"
.PD
Змінює дію параметрів \fI\-a\fR, \fI\-d\fR і \fI\-m\fR таким чином, що диски додаються і
монтуються у режимі читання і запису.
.Sp
Див. \*(L"\s-1OPENING DISKS FOR READ AND WRITE\*(R"\s0 in \fBguestfish\fR\|(1).
.IP "\fB\-x\fR" 4
.IX Item "-x"
Увімкнути трасування викликів програмного інтерфейсу libguestfs.
.SH "ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ"
.IX Header "ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ"
У попередніх версіях virt-rescue можна було скомандувати ось так:
.PP
.Vb 1
\& virt\-rescue disk.img [disk.img ...]
.Ve
.PP
або
.PP
.Vb 1
\& virt\-rescue назва_гостьової_системи
.Ve
.PP
тоді як у цій версії вам слід скористатися \fI\-a\fR або \fI\-d\fR, відповідно, щоб
уникнути помилок у випадках, коли назва образу диска може збігатися із
назвою гостьової системи.
.PP
З міркувань зворотної сумісності передбачено підтримку запису параметрів у
застарілому форматі.
.SH "МЕРЕЖА"
.IX Header "МЕРЕЖА"
Додавання параметра \fI\-\-network\fR вмикає для користувача мережу \s-1QEMU\s0 у
базовій системі для порятунку. Існують певні відмінності між звичайною
роботою у мережі і роботою у мережі для користувача:
.IP "луна\-імпульс не працює" 4
.IX Item "луна-імпульс не працює"
Оскільки протокол \s-1ICMP ECHO_REQUEST\s0 загалом вимагає прав доступу root для
надсилання пакетів луна\-імпульсів, і оскільки virt-rescue повинна мати
можливість бути запущеною не від імені root, мережа для користувача у \s-1QEMU\s0
не може емулювати роботу команди \fBping\fR\|(8). Команда ping зможе визначати
адреси, але не зможе надсилати або отримувати будь\-які пакети. Це не
означає, що працювати у мережі буде неможливо.
.IP "не можна отримувати з'єднання" 4
.IX Item "не можна отримувати з'єднання"
У режимі мережі для користувача \s-1QEMU\s0 не можна отримувати вхідні з'єднання.
.IP "встановлення з'єднань \s-1TCP\s0" 4
.IX Item "встановлення з'єднань TCP"
Базова система virt-rescue має бути невеликою за розміром, тому до неї не
включено багато інструментів для роботи у мережі. Зокрема, у ній немає
програми \fBtelnet\fR\|(1). Ви можете встановити TCP\-з'єднання з командної
оболонки за допомогою магічної команди
\&\fI/dev/tcp/<назва_вузла>/<порт>\fR:
.Sp
.Vb 3
\& exec 3<>/dev/tcp/redhat.com/80
\& echo "GET /" >&3
\& cat <&3
.Ve
.Sp
Докладніше про це тут: \fBbash\fR\|(1).
.SH "КЛАВІША ЕКРАНУВАННЯ"
.IX Header "КЛАВІША ЕКРАНУВАННЯ"
У virt-rescue передбачено підтримку різноманітних клавіатурних комбінацій із
клавішею екранування, які вводяться натисканням \f(CW\*(C`^]\*(C'\fR (клавіші Ctrl і
клавіші \f(CW\*(C`]\*(C'\fR).
.PP
Змінити клавішу екранування можна за допомогою параметра \fI\-e\fR рядка команди
(див. вище). Повністю вимкнути клавішу екранування можна за допомогою
параметра \fI\-e none\fR. У решті цього розділу ми припускаємо, що працює типова
клавіша екранування.
.PP
Можна використовувати такі клавіші:
.ie n .IP """^] ?""" 4
.el .IP "\f(CW^] ?\fR" 4
.IX Item "^] ?"
.PD 0
.ie n .IP """^] h""" 4
.el .IP "\f(CW^] h\fR" 4
.IX Item "^] h"
.PD
Виводить коротке довідкове повідомлення щодо керівних послідовностей.
.ie n .IP """^] i""" 4
.el .IP "\f(CW^] i\fR" 4
.IX Item "^] i"
Виводить короткі дані інспектування libguestfs для гостьової
системи. Працюватиме, лише якщо вами було використано \fI\-i\fR у рядку команди
virt-rescue.
.ie n .IP """^] q""" 4
.el .IP "\f(CW^] q\fR" 4
.IX Item "^] q"
.PD 0
.ie n .IP """^] x""" 4
.el .IP "\f(CW^] x\fR" 4
.IX Item "^] x"
.PD
Негайно завершити роботу virt-rescue.
.ie n .IP """^] s""" 4
.el .IP "\f(CW^] s\fR" 4
.IX Item "^] s"
Синхронізувати файлові системи.
.ie n .IP """^] u""" 4
.el .IP "\f(CW^] u\fR" 4
.IX Item "^] u"
Демонтувати усі файлові системи, окрім кореневих файлових систем (базової
системи).
.ie n .IP """^] z""" 4
.el .IP "\f(CW^] z\fR" 4
.IX Item "^] z"
Призупинити роботу virt-rescue (подібно до натискання \f(CW\*(C`^Z\*(C'\fR, але стосується
virt-rescue, а не програми, яка працює у оболонці порятунку системи).
.ie n .IP """^] ^]""" 4
.el .IP "\f(CW^] ^]\fR" 4
.IX Item "^] ^]"
Надсилає сам символ \f(CW\*(C`^]\*(C'\fR (\s-1ASCII\s0 0x1d) крізь оболонку порятунку системи.
.SH "ПЕРЕХОПЛЕННЯ ДАМПІВ ЯДРА"
.IX Header "ПЕРЕХОПЛЕННЯ ДАМПІВ ЯДРА"
Якщо ви працюєте з якоюсь програмою у virt-rescue, і програма (\fBне\fR
virt-rescue) завершує роботу у аварійному режимі, перехопити дамп ядра
програми поза virt-rescue для подальшого аналізу є доволі складним
завданням. У цьому розділі описано один спосіб, у який можна досягти
виконання цього завдання.
.IP "1." 4
Створіть тестовий диск для дампів ядра:
.Sp
.Vb 3
\& truncate \-s 4G /tmp/corefiles
\& virt\-format \-\-partition=mbr \-\-filesystem=ext2 \-a /tmp/corefiles
\& virt\-filesystems \-a /tmp/corefiles \-\-all \-\-long \-h
.Ve
.IP "2." 4
Під час запуску virt-rescue долучіть диск для файлів дампів останнім:
.Sp
.Vb 1
\& virt\-rescue \-\-rw [\-a ...] \-a /tmp/corefiles
.Ve
.Sp
\&\fB\s-1NB.\s0\fR Якщо ви використовуєте параметр \fI\-\-ro\fR, virt-rescue без додаткових
питань не записуватиме ніяких файлів дампів ядра до \fI/tmp/corefiles\fR.
.IP "3." 4
У virt-rescue змонтуйте диск для файлів дампів ядра. Не забудьте замінити
\&\fI/dev/sdb1\fR записом із індексом останнього диска. Наприклад, якщо диск
файлів дампів ядра є останнім із чотирьох дисків, вам слід використовувати
\&\fI/dev/sdd1\fR.
.Sp
.Vb 2
\& ><rescue> mkdir /tmp/mnt
\& ><rescue> mount /dev/sdb1 /tmp/mnt
.Ve
.IP "4." 4
Увімкніть дампи ядра у ядрі відновлення:
.Sp
.Vb 3
\& ><rescue> echo \*(Aq/tmp/mnt/core.%p\*(Aq > /proc/sys/kernel/core_pattern
\& ><rescue> ulimit \-Hc unlimited
\& ><rescue> ulimit \-Sc unlimited
.Ve
.IP "5." 4
Запустіть програму, яка аварійно завершує роботу, записуючи дамп ядра. Дамп
ядра буде записано до \fI/tmp/mnt/core.\fI\s-1PID\s0\fI\fR.
.Sp
.Vb 4
\& ><rescue> ls \-l /tmp/mnt
\& total 1628
\& \-rw\-\-\-\-\-\-\- 1 root root 1941504 Dec  7 13:13 core.130
\& drwx\-\-\-\-\-\- 2 root root   16384 Dec  7 13:00 lost+found
.Ve
.IP "6." 4
Перш ніж завершувати роботу virt-rescue, демонтуйте (або принаймні
синхронізуйте) диски:
.Sp
.Vb 2
\& ><rescue> umount /tmp/mnt
\& ><rescue> exit
.Ve
.IP "7." 4
Поза межами virt-rescue файли дампів ядра можна вилучити з диска за
допомогою \fBguestfish\fR\|(1). Приклад:
.Sp
.Vb 3
\& guestfish \-\-ro \-a /tmp/corefiles \-m /dev/sda1
\& ><fs> ll /
\& ><fs> download /core.NNN /tmp/core.NNN
.Ve
.SH "ЗМІННІ СЕРЕДОВИЩА"
.IX Header "ЗМІННІ СЕРЕДОВИЩА"
На роботу virt-rescue впливають декілька змінних середовища. Повний список
змінних наведено у розділі \*(L"ЗМІННІ СЕРЕДОВИЩА\*(R" in \fBguestfs\fR\|(3).
.SH "ФАЙЛИ"
.IX Header "ФАЙЛИ"
.ie n .IP "$XDG_CONFIG_HOME/libguestfs/libguestfs\-tools.conf" 4
.el .IP "\f(CW$XDG_CONFIG_HOME\fR/libguestfs/libguestfs\-tools.conf" 4
.IX Item "$XDG_CONFIG_HOME/libguestfs/libguestfs-tools.conf"
.PD 0
.ie n .IP "$HOME/.libguestfs\-tools.rc" 4
.el .IP "\f(CW$HOME\fR/.libguestfs\-tools.rc" 4
.IX Item "$HOME/.libguestfs-tools.rc"
.ie n .IP "$XDG_CONFIG_DIRS/libguestfs/libguestfs\-tools.conf" 4
.el .IP "\f(CW$XDG_CONFIG_DIRS\fR/libguestfs/libguestfs\-tools.conf" 4
.IX Item "$XDG_CONFIG_DIRS/libguestfs/libguestfs-tools.conf"
.IP "/etc/libguestfs\-tools.conf" 4
.IX Item "/etc/libguestfs-tools.conf"
.PD
Цей файл налаштувань керує типовим режимом — лише читання чи читання і запис
(\fI\-\-ro\fR або \fI\-\-rw\fR).
.Sp
Див. \fBlibguestfs\-tools.conf\fR\|(5).
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fBguestfs\fR\|(3), \fBguestfish\fR\|(1), \fBvirt\-cat\fR\|(1), \fBvirt\-edit\fR\|(1),
\&\fBvirt\-filesystems\fR\|(1), \fBlibguestfs\-tools.conf\fR\|(5),
http://libguestfs.org/.
.SH "АВТОР"
.IX Header "АВТОР"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
Copyright (C) 2009\-2019 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fBlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
