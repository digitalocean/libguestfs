.\" Automatically generated by Podwrapper::Man 1.36.5 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "virt-rescue 1"
.TH virt-rescue 1 "2017-06-22" "libguestfs-1.36.5" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
virt-rescue \- Run a rescue shell on a virtual machine
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& virt\-rescue [\-\-параметри] \-d назва_домену
\&
\& virt\-rescue [\-\-параметри] \-a диск.img [\-a диск.img ...]
\&
\& virt\-rescue \-\-suggest (\-d назва_домену | \-a диск.img ...)
.Ve
.PP
Старий стиль:
.PP
.Vb 1
\& virt\-rescue [\-\-параметри] назва_домену
\&
\& virt\-rescue [\-\-параметри] диск.img [диск.img ...]
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
virt-rescue is like a Rescue \s-1CD,\s0 but for virtual machines, and without the
need for a \s-1CD.\s0  virt-rescue gives you a rescue shell and some simple
recovery tools which you can use to examine or rescue a virtual machine or
disk image.
.PP
You can run virt-rescue on any virtual machine known to libvirt, or directly
on disk image(s):
.PP
.Vb 1
\& virt\-rescue \-d Назва_гостьової_системи
\&
\& virt\-rescue \-\-ro \-a /шлях/до/диск.img
\&
\& virt\-rescue \-a /dev/sdc
.Ve
.PP
For live VMs you \fImust\fR use the \-\-ro option.
.PP
When you run virt-rescue on a virtual machine or disk image, you are placed
in an interactive bash shell where you can use many ordinary Linux
commands.  What you see in \fI/\fR (\fI/bin\fR, \fI/lib\fR etc) is the rescue
appliance.  You must mount the virtual machine's filesystems by hand.  There
is an empty directory called \fI/sysroot\fR where you can mount filesystems.
.PP
You can get virt-rescue to suggest mount commands for you by using the
\&\fI\-\-suggest\fR option (in another terminal):
.PP
.Vb 2
\& $ virt\-rescue \-\-suggest \-d Fedora15
\& Inspecting the virtual machine or disk image ...
\& 
\& На цьому диску зберігаються дані однієї або декількох операційних систем.
\& Ви можете скористатися цими командами монтування у virt\-rescue (у відповідь
\& на запит ><rescue>) для монтування файлових систем.
\& 
\& # /dev/vg_f15x32/lv_root is the root of a linux operating system
\& # type: linux, distro: fedora, version: 15.0
\& # Fedora release 15 (Lovelock)
\& 
\& mount /dev/vg_f15x32/lv_root /sysroot/
\& mount /dev/vda1 /sysroot/boot
\& mount \-\-bind /dev /sysroot/dev
\& mount \-\-bind /dev/pts /sysroot/dev/pts
\& mount \-\-bind /proc /sysroot/proc
\& mount \-\-bind /sys /sysroot/sys
.Ve
.PP
Another way is to list the logical volumes (with \fIlvs\fR\|(8)) and partitions
(with \fIparted\fR\|(8)) and mount them by hand:
.PP
.Vb 7
\& ><rescue> lvs
\& LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert
\& lv_root vg_f15x32 \-wi\-a\-   8.83G
\& lv_swap vg_f15x32 \-wi\-a\- 992.00M
\& ><rescue> mount /dev/vg_f15x32/lv_root /sysroot
\& ><rescue> mount /dev/vda1 /sysroot/boot
\& ><rescue> ls /sysroot
.Ve
.PP
Another command to list available filesystems is \fIvirt\-filesystems\fR\|(1).
.PP
To run commands in a Linux guest (for example, grub), you should chroot into
the /sysroot directory first:
.PP
.Vb 1
\& ><rescue> chroot /sysroot
.Ve
.SS "ПРИМІТКИ"
.IX Subsection "ПРИМІТКИ"
Virt-rescue can be used on \fIany\fR disk image file or device, not just a
virtual machine.  For example you can use it on a blank file if you want to
partition that file (although we would recommend using \fIguestfish\fR\|(1)
instead as it is more suitable for this purpose).  You can even use
virt-rescue on things like \s-1SD\s0 cards.
.PP
You can get virt-rescue to give you scratch disk(s) to play with.  This is
useful for testing out Linux utilities (see \fI\-\-scratch\fR).
.PP
Virt-rescue does not require root.  You only need to run it as root if you
need root to open the disk image.
.PP
This tool is just designed for quick interactive hacking on a virtual
machine.  For more structured access to a virtual machine disk image, you
should use \fIguestfs\fR\|(3).  To get a structured shell that you can use to
make scripted changes to guests, use \fIguestfish\fR\|(1).
.SH "ПАРАМЕТРИ"
.IX Header "ПАРАМЕТРИ"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Показати коротку довідку.
.IP "\fB\-a\fR ФАЙЛ" 4
.IX Item "-a ФАЙЛ"
.PD 0
.IP "\fB\-\-add\fR ФАЙЛ" 4
.IX Item "--add ФАЙЛ"
.PD
Add \f(CW\*(C`FILE\*(C'\fR which should be a disk image from a virtual machine.  If the
virtual machine has multiple block devices, you must supply all of them with
separate \fI\-a\fR options.
.Sp
Формат образу диска визначається автоматично. Щоб перевизначити його і
примусово використати певний формат, скористайтеся параметром
\&\fI\-\-format=..\fR.
.IP "\fB\-a\fR адреса" 4
.IX Item "-a адреса"
.PD 0
.IP "\fB\-\-add\fR адреса" 4
.IX Item "--add адреса"
.PD
Додати віддалений диск. Див. \*(L"ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА\*(R" in \fIguestfish\fR\|(1).
.IP "\fB\-\-append\fR \s-1KERNELOPTS\s0" 4
.IX Item "--append KERNELOPTS"
Pass additional options to the rescue kernel.
.IP "\fB\-c\fR адреса" 4
.IX Item "-c адреса"
.PD 0
.IP "\fB\-\-connect\fR адреса" 4
.IX Item "--connect адреса"
.PD
Якщо використовується libvirt, встановити з’єднання з вказаним \fI\s-1URI\s0\fR. Якщо
пропущено, з’єднання буде встановлено з типовим гіпервізором libvirt.
.Sp
Якщо вказати блокові пристрої гостьових систем безпосередньо (\fI\-a\fR),
libvirt не буде використовуватися взагалі.
.IP "\fB\-d\fR гість" 4
.IX Item "-d гість"
.PD 0
.IP "\fB\-\-domain\fR гість" 4
.IX Item "--domain гість"
.PD
Додати всі диски з вказаної гостьової системи libvirt. \s-1UUID\s0 доменів можна
використовувати замість назв.
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
Типовим значенням для параметра \fI\-a\fR є автоматичне визначення формату
образу диска. Використання цього параметра примусово визначає значення
параметрів \fI\-a\fR формату диска у наступному рядку команди. Використання
параметра \fI\-\-format\fR без аргументу перемикає програму у режим автоматичного
визначення у наступних параметрах \fI\-a\fR.
.Sp
Приклад:
.Sp
.Vb 1
\& virt\-rescue \-\-format=raw \-a диск.img
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \fIdisk.img\fR.
.Sp
.Vb 1
\& virt\-rescue \-\-format=raw \-a диск.img \-\-format \-a інший.img
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \fIdiskimg\fR і повернення до автоматичного визначення для \fIanother.img\fR.
.Sp
Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому
форматі, вам слід скористатися цим параметром для визначення формату
диска. Таким чином можна уникнути можливих проблем з захистом для
сформованих зловмисниками гостьових систем (\s-1CVE\-2010\-3851\s0).
.IP "\fB\-m\fR МБ" 4
.IX Item "-m МБ"
.PD 0
.IP "\fB\-\-memsize\fR МБ" 4
.IX Item "--memsize МБ"
.PD
Change the amount of memory allocated to the rescue system.  The default is
set by libguestfs and is small but adequate for running system tools.  The
occasional program might need more memory.  The parameter is specified in
megabytes.
.IP "\fB\-\-network\fR" 4
.IX Item "--network"
Enable \s-1QEMU\s0 user networking in the guest.  See \*(L"\s-1NETWORK\*(R"\s0.
.IP "\fB\-r\fR" 4
.IX Item "-r"
.PD 0
.IP "\fB\-\-ro\fR" 4
.IX Item "--ro"
.PD
Відкрити образ у режимі лише читання.
.Sp
The option must always be used if the disk image or virtual machine might be
running, and is generally recommended in cases where you don't need write
access to the disk.
.Sp
Див. також \*(L"\s-1OPENING DISKS FOR READ AND WRITE\*(R"\s0 in \fIguestfish\fR\|(1).
.IP "\fB\-\-scratch\fR" 4
.IX Item "--scratch"
.PD 0
.IP "\fB\-\-scratch=N\fR" 4
.IX Item "--scratch=N"
.PD
The \fI\-\-scratch\fR option adds a large scratch disk to the rescue appliance.
\&\fI\-\-scratch=N\fR adds \f(CW\*(C`N\*(C'\fR scratch disks.  The scratch disk(s) are deleted
automatically when virt-rescue exits.
.Sp
You can also mix \fI\-a\fR, \fI\-d\fR and \fI\-\-scratch\fR options.  The scratch disk(s)
are added to the appliance in the order they appear on the command line.
.IP "\fB\-\-selinux\fR" 4
.IX Item "--selinux"
This option is provided for backwards compatibility and does nothing.
.IP "\fB\-\-smp\fR N" 4
.IX Item "--smp N"
Enable N ≥ 2 virtual CPUs in the rescue appliance.
.IP "\fB\-\-suggest\fR" 4
.IX Item "--suggest"
Inspect the disk image and suggest what mount commands should be used to
mount the disks.  You should use the \fI\-\-suggest\fR option in a second
terminal, then paste the commands into another virt-rescue.
.Sp
This option implies \fI\-\-ro\fR and is safe to use even if the guest is up or if
another virt-rescue is running.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Увімкнути докладний показ повідомлень з метою діагностики.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Показати дані щодо версії і завершити роботу.
.IP "\fB\-w\fR" 4
.IX Item "-w"
.PD 0
.IP "\fB\-\-rw\fR" 4
.IX Item "--rw"
.PD
This changes the \fI\-a\fR and \fI\-d\fR options so that disks are added and mounts
are done read-write.
.Sp
Див. \*(L"\s-1OPENING DISKS FOR READ AND WRITE\*(R"\s0 in \fIguestfish\fR\|(1).
.IP "\fB\-x\fR" 4
.IX Item "-x"
Увімкнути трасування викликів програмного інтерфейсу libguestfs.
.SH "ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ"
.IX Header "ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ"
Previous versions of virt-rescue allowed you to write either:
.PP
.Vb 1
\& virt\-rescue disk.img [disk.img ...]
.Ve
.PP
або
.PP
.Vb 1
\& virt\-rescue назва_гостьової_системи
.Ve
.PP
whereas in this version you should use \fI\-a\fR or \fI\-d\fR respectively to avoid
the confusing case where a disk image might have the same name as a guest.
.PP
З міркувань зворотної сумісності передбачено підтримку запису параметрів у
застарілому форматі.
.SH "МЕРЕЖА"
.IX Header "МЕРЕЖА"
Adding the \fI\-\-network\fR option enables \s-1QEMU\s0 user networking in the rescue
appliance.  There are some differences between user networking and ordinary
networking:
.IP "ping does not work" 4
.IX Item "ping does not work"
Because the \s-1ICMP ECHO_REQUEST\s0 protocol generally requires root in order to
send the ping packets, and because virt-rescue must be able to run as
non-root, \s-1QEMU\s0 user networking is not able to emulate the \fIping\fR\|(8)
command.  The ping command will appear to resolve addresses but will not be
able to send or receive any packets.  This does not mean that the network is
not working.
.IP "cannot receive connections" 4
.IX Item "cannot receive connections"
\&\s-1QEMU\s0 user networking cannot receive incoming connections.
.IP "making \s-1TCP\s0 connections" 4
.IX Item "making TCP connections"
The virt-rescue appliance needs to be small and so does not include many
network tools.  In particular there is no \fItelnet\fR\|(1) command.  You can
make \s-1TCP\s0 connections from the shell using the magical
\&\fI/dev/tcp/<hostname>/<port>\fR syntax:
.Sp
.Vb 3
\& exec 3<>/dev/tcp/redhat.com/80
\& echo "GET /" >&3
\& cat <&3
.Ve
.Sp
See \fIbash\fR\|(1) for more details.
.SH "CAPTURING CORE DUMPS"
.IX Header "CAPTURING CORE DUMPS"
If you are testing a tool inside virt-rescue and the tool (\fBnot\fR
virt-rescue) segfaults, it can be tricky to capture the core dump outside
virt-rescue for later analysis.  This section describes one way to do this.
.IP "1." 4
Create a scratch disk for core dumps:
.Sp
.Vb 3
\& truncate \-s 4G /tmp/corefiles
\& virt\-format \-\-partition=mbr \-\-filesystem=ext2 \-a /tmp/corefiles
\& virt\-filesystems \-a /tmp/corefiles \-\-all \-\-long \-h
.Ve
.IP "2." 4
When starting virt-rescue, attach the core files disk last:
.Sp
.Vb 1
\& virt\-rescue \-\-rw [\-a ...] \-a /tmp/corefiles
.Ve
.Sp
\&\fB\s-1NB.\s0\fR If you use the \fI\-\-ro\fR option, then virt-rescue will silently not
write any core files to \fI/tmp/corefiles\fR.
.IP "3." 4
Inside virt-rescue, mount the core files disk.  Note replace \fI/dev/sdb1\fR
with the last disk index.  For example if the core files disk is the last of
four disks, you would use \fI/dev/sdd1\fR.
.Sp
.Vb 2
\& ><rescue> mkdir /tmp/mnt
\& ><rescue> mount /dev/sdb1 /tmp/mnt
.Ve
.IP "4." 4
Enable core dumps in the rescue kernel:
.Sp
.Vb 3
\& ><rescue> echo \*(Aq/tmp/mnt/core.%p\*(Aq > /proc/sys/kernel/core_pattern
\& ><rescue> ulimit \-Hc unlimited
\& ><rescue> ulimit \-Sc unlimited
.Ve
.IP "5." 4
Run the tool that caused the core dump.  The core dump will be written to
\&\fI/tmp/mnt/core.\fI\s-1PID\s0\fI\fR.
.Sp
.Vb 4
\& ><rescue> ls \-l /tmp/mnt
\& total 1628
\& \-rw\-\-\-\-\-\-\- 1 root root 1941504 Dec  7 13:13 core.130
\& drwx\-\-\-\-\-\- 2 root root   16384 Dec  7 13:00 lost+found
.Ve
.IP "6." 4
Before exiting virt-rescue, unmount (or at least sync) the disks:
.Sp
.Vb 2
\& ><rescue> umount /tmp/mnt
\& ><rescue> exit
.Ve
.IP "7." 4
Outside virt-rescue, the core dump(s) can be removed from the disk using
\&\fIguestfish\fR\|(1).  For example:
.Sp
.Vb 3
\& guestfish \-\-ro \-a /tmp/corefiles \-m /dev/sda1
\& ><fs> ll /
\& ><fs> download /core.NNN /tmp/core.NNN
.Ve
.SH "ЗМІННІ СЕРЕДОВИЩА"
.IX Header "ЗМІННІ СЕРЕДОВИЩА"
Several environment variables affect virt-rescue.  See
\&\*(L"\s-1ENVIRONMENT VARIABLES\*(R"\s0 in \fIguestfs\fR\|(3) for the complete list.
.SH "ФАЙЛИ"
.IX Header "ФАЙЛИ"
.ie n .IP "$XDG_CONFIG_HOME/libguestfs/libguestfs\-tools.conf" 4
.el .IP "\f(CW$XDG_CONFIG_HOME\fR/libguestfs/libguestfs\-tools.conf" 4
.IX Item "$XDG_CONFIG_HOME/libguestfs/libguestfs-tools.conf"
.PD 0
.ie n .IP "$HOME/.libguestfs\-tools.rc" 4
.el .IP "\f(CW$HOME\fR/.libguestfs\-tools.rc" 4
.IX Item "$HOME/.libguestfs-tools.rc"
.ie n .IP "$XDG_CONFIG_DIRS/libguestfs/libguestfs\-tools.conf" 4
.el .IP "\f(CW$XDG_CONFIG_DIRS\fR/libguestfs/libguestfs\-tools.conf" 4
.IX Item "$XDG_CONFIG_DIRS/libguestfs/libguestfs-tools.conf"
.IP "/etc/libguestfs\-tools.conf" 4
.IX Item "/etc/libguestfs-tools.conf"
.PD
This configuration file controls the default read-only or read-write mode
(\fI\-\-ro\fR or \fI\-\-rw\fR).
.Sp
Див. \fIlibguestfs\-tools.conf\fR\|(5).
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fIguestfs\fR\|(3), \fIguestfish\fR\|(1), \fIvirt\-cat\fR\|(1), \fIvirt\-edit\fR\|(1),
\&\fIvirt\-filesystems\fR\|(1), \fIlibguestfs\-tools.conf\fR\|(5),
http://libguestfs.org/.
.SH "АВТОР"
.IX Header "АВТОР"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
Copyright (C) 2009\-2017 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
