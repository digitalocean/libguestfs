.\" Automatically generated by Podwrapper::Man 1.36.5 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "libguestfs-make-fixed-appliance 1"
.TH libguestfs-make-fixed-appliance 1 "2017-06-22" "libguestfs-1.36.5" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
libguestfs-make-fixed-appliance \- Make a \*(L"fixed appliance\*(R" for libguestfs
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& libguestfs\-make\-fixed\-appliance [\-\-параметри] КАТАЛОГ_ВИВЕДЕННЯ
\&
\& libguestfs\-make\-fixed\-appliance [\-\-параметри] \-\-xz
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
libguestfs-make-fixed-appliance надає вам змогу створити попередньо зібрану
бінарну базову систему для libguestfs.
.PP
\&\fBЗауважте, що у звичайних користувачів не повинно виникнути потреби у
запуску цієї програми\fR.
.PP
Декілька причин, з яких у вас \fIможе\fR виникнути потребу у використанні цього
інструмента:
.IP "\(bu" 4
You want to make a self-contained libguestfs appliance that can be copied to
another machine or platform that doesn't support \fIsupermin\fR\|(1).
.IP "\(bu" 4
You have multiple users on the same machine and want to avoid the storage
duplication and start-up overhead of having multiple cached copies of the
appliance.
.IP "\(bu" 4
Вам потрібна дуже передбачувана щодо швидкодії система з libguestfs
(див. \fIguestfs\-performance\fR\|(1)).
.PP
For deeper understanding of why you might need this tool, read
\&\*(L"\s-1FIXED APPLIANCE\*(R"\s0 in \fIguestfs\-internals\fR\|(1).
.PP
Instead of running this tool, you can download fixed appliances from
http://libguestfs.org/download/binaries/appliance/.  These appliances
were made using this tool.
.PP
Передбачено два способи використання цього інструмента.
.IP "\(bu" 4
Вказати каталог виведення даних, приклад:
.Sp
.Vb 1
\& libguestfs\-make\-fixed\-appliance /usr/local/lib/guestfs/appliance
.Ve
.Sp
Якщо каталогу виведення даних ще не існує, його буде створено. У цьому
каталозі буде створено чотири файли:
.Sp
.Vb 4
\& <OUTPUTDIR>/kernel
\& <OUTPUTDIR>/initrd
\& <OUTPUTDIR>/root
\& <OUTPUTDIR>/README.fixed
.Ve
.Sp
Note that \f(CW\*(C`\f(CIOUTPUTDIR\f(CW/root\*(C'\fR is a sparse file, so take care when copying
it.
.Sp
You can then run libguestfs (possibly after copying this directory to
another machine) by setting the environment variable \s-1LIBGUESTFS_PATH\s0 to
\&\f(CW\*(C`OUTPUTDIR\*(C'\fR.
.IP "\(bu" 4
Альтернативним підходом є використання параметра \fI\-\-xz\fR для створення
стисненого архіву:
.Sp
.Vb 1
\& libguestfs\-make\-fixed\-appliance \-\-xz
.Ve
.Sp
Буде створено архів у \fIпоточному\fR каталозі з назвою:
.Sp
.Vb 1
\& appliance\-<ВЕРСІЯ>.tar.xz
.Ve
.Sp
(where \f(CW\*(C`VERSION\*(C'\fR is the version of libguestfs).  The tarball contains the
four files:
.Sp
.Vb 4
\& appliance/kernel
\& appliance/initrd
\& appliance/root
\& appliance/README.fixed
.Ve
.Sp
Note that \f(CW\*(C`appliance/root\*(C'\fR is a sparse file, so take care when copying it.
.SH "ПАРАМЕТРИ"
.IX Header "ПАРАМЕТРИ"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Показати коротку довідку з користування і завершити роботу.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Показати дані щодо версії і завершити роботу.
.IP "\fB\-\-xz\fR" 4
.IX Item "--xz"
Instead of creating the appliance in an output directory, create a
compressed tarball of the appliance in the current directory called
\&\fIappliance\-\fI\s-1VERSION\s0\fI.tar.xz\fR where \f(CW\*(C`VERSION\*(C'\fR is the version of
libguestfs.
.Sp
Using \fI\-\-xz\fR can take some time.  If working normally, the tool is
completely silent when it is running.
.SH "УМОВИ ЛІЦЕНЗУВАННЯ"
.IX Header "УМОВИ ЛІЦЕНЗУВАННЯ"
The fixed appliance is a complete Linux binary distro.  If you distribute
it, you may need to distribute corresponding source files to remain in legal
compliance with the licenses of the software in the appliance (such as the
\&\s-1GNU\s0 General Public License).
.SH "СТАН ВИХОДУ"
.IX Header "СТАН ВИХОДУ"
libguestfs-make-fixed-appliance повертає \fI0\fR, якщо базову систему було
зібрано без помилок.
.SH "ЗМІННІ СЕРЕДОВИЩА"
.IX Header "ЗМІННІ СЕРЕДОВИЩА"
Повний список змінних середовища, які можуть вплинути на роботу libguestfs,
можна знайти на сторінці підручника \fIguestfs\fR\|(3).
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fIguestfs\fR\|(3), \fIsupermin\fR\|(1), \fIxz\fR\|(1), http://libguestfs.org/,
http://qemu.org/.
.SH "АВТОРИ"
.IX Header "АВТОРИ"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
Copyright (C) 2009\-2017 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
