.\" Automatically generated by Podwrapper::Man 1.38.1 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "libguestfs-make-fixed-appliance 1"
.TH libguestfs-make-fixed-appliance 1 "2018-05-01" "libguestfs-1.38.1" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
libguestfs-make-fixed-appliance \- створити базову систему для libguestfs
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& libguestfs\-make\-fixed\-appliance [\-\-параметри] КАТАЛОГ_ВИВЕДЕННЯ
\&
\& libguestfs\-make\-fixed\-appliance [\-\-параметри] \-\-xz
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
libguestfs-make-fixed-appliance надає вам змогу створити попередньо зібрану
бінарну базову систему для libguestfs.
.PP
\&\fBЗауважте, що у звичайних користувачів не повинно виникнути потреби у
запуску цієї програми\fR.
.PP
Декілька причин, з яких у вас \fIможе\fR виникнути потребу у використанні цього
інструмента:
.IP "\(bu" 4
Ви хочете створити саомодостатню базову систему libguestfs, яку можна
скопіювати на інший комп'ютер або платформу, де не передбачено підтримки
\&\fBsupermin\fR\|(1).
.IP "\(bu" 4
На вашому комп'ютері декілька користувачів і ви хочете уникнути дублювання
сховища даних або додаткової затримки через наявність декількох кешованих
копій базової системи.
.IP "\(bu" 4
Вам потрібна дуже передбачувана щодо швидкодії система з libguestfs
(див. \fBguestfs\-performance\fR\|(1)).
.PP
Щоб краще зрозуміти потребу у цьому інструменті, ознайомтеся із розділом
\&\*(L"БАЗОВА СИСТЕМА\*(R" in \fBguestfs\-internals\fR\|(1).
.PP
Замість використання цього інструмента, ви можете отримати базові системи зі
сторінки  http://libguestfs.org/download/binaries/appliance/.  Ці базові
системи було створено за допомогою цього інструмента.
.PP
Передбачено два способи використання цього інструмента.
.IP "\(bu" 4
Вказати каталог виведення даних, приклад:
.Sp
.Vb 1
\& libguestfs\-make\-fixed\-appliance /usr/local/lib/guestfs/appliance
.Ve
.Sp
Якщо каталогу виведення даних ще не існує, його буде створено. У цьому
каталозі буде створено чотири файли:
.Sp
.Vb 4
\& <OUTPUTDIR>/kernel
\& <OUTPUTDIR>/initrd
\& <OUTPUTDIR>/root
\& <OUTPUTDIR>/README.fixed
.Ve
.Sp
Зауважте, що \f(CW\*(C`\f(CIКАТАЛОГ_ВИВЕДЕННЯ\f(CW/root\*(C'\fR є розрідженим файлом, отже, слід
бути обережним з його копіюванням.
.Sp
Після цього ви зможете запускати libguestfs (можливо, після копіювання цього
каталогу на інший комп'ютер) після встановлення для змінної середовища
\&\s-1LIBGUESTFS_PATH\s0 значення \f(CW\*(C`КАТАЛОГ_ВИВЕДЕННЯ\*(C'\fR.
.IP "\(bu" 4
Альтернативним підходом є використання параметра \fI\-\-xz\fR для створення
стисненого архіву:
.Sp
.Vb 1
\& libguestfs\-make\-fixed\-appliance \-\-xz
.Ve
.Sp
Буде створено архів у \fIпоточному\fR каталозі з назвою:
.Sp
.Vb 1
\& appliance\-<ВЕРСІЯ>.tar.xz
.Ve
.Sp
(де \f(CW\*(C`ВЕРСІЯ\*(C'\fR — версія libguestfs). У архіві міститься чотири файла:
.Sp
.Vb 4
\& appliance/kernel
\& appliance/initrd
\& appliance/root
\& appliance/README.fixed
.Ve
.Sp
Зауважте, що \f(CW\*(C`appliance/root\*(C'\fR є розрідженим файлом, тому слід бути
обережним під час його копіювання.
.SH "ПАРАМЕТРИ"
.IX Header "ПАРАМЕТРИ"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Показати коротку довідку з користування і завершити роботу.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Показати дані щодо версії і завершити роботу.
.IP "\fB\-\-xz\fR" 4
.IX Item "--xz"
Замість створення базової системи у каталозі виведення результатів, створити
стиснений архів базової системи у поточному каталозі із назвою
\&\fIappliance\-\fIВЕРСІЯ\fI.tar.xz\fR, де \f(CW\*(C`ВЕРСІЯ\*(C'\fR — це версія libguestfs.
.Sp
Використання \fI\-\-xz\fR може потребувати додаткового часу. Якщо все буде
нормально, інструмент спрацює без будь\-яких додаткових повідомлень.
.SH "УМОВИ ЛІЦЕНЗУВАННЯ"
.IX Header "УМОВИ ЛІЦЕНЗУВАННЯ"
Базова система є повним бінарним дистрибутивом Linux. Якщо ви поширюватимете
його, можливо, вам доведеться поширювати також відповідні файли з початковим
кодом, щоб зберегти сумісність із умовами ліцензування програмного
забезпечення у базовій системі (зокрема \s-1GNU\s0 General Public License).
.SH "СТАН ВИХОДУ"
.IX Header "СТАН ВИХОДУ"
libguestfs-make-fixed-appliance повертає \fI0\fR, якщо базову систему було
зібрано без помилок.
.SH "ЗМІННІ СЕРЕДОВИЩА"
.IX Header "ЗМІННІ СЕРЕДОВИЩА"
Повний список змінних середовища, які можуть вплинути на роботу libguestfs,
можна знайти на сторінці підручника \fBguestfs\fR\|(3).
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fBguestfs\fR\|(3), \fBsupermin\fR\|(1), \fBxz\fR\|(1), http://libguestfs.org/,
http://qemu.org/.
.SH "АВТОРИ"
.IX Header "АВТОРИ"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
Copyright (C) 2009\-2018 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fBlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
