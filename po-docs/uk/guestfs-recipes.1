.\" Automatically generated by Podwrapper::Man 1.18.11 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "guestfs-recipes 1"
.TH guestfs-recipes 1 "2012-11-22" "libguestfs-1.18.11" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
guestfs-recipes \- libguestfs, guestfish and virt tools recipes
.SH "ОПИС"
.IX Header "ОПИС"
This page contains recipes for and links to things you can do using
libguestfs, \fIguestfish\fR\|(1) and the virt tools.
.SH "Audit a virtual machine for setuid files"
.IX Header "Audit a virtual machine for setuid files"
See: \*(L"\s-1EXAMPLES\s0\*(R" in \fIvirt\-ls\fR\|(1).
.SH "Change the background image in a Windows XP VM"
.IX Header "Change the background image in a Windows XP VM"
The links below explain how to use \fIguestfish\fR\|(1) to change the background
image for a user of a Windows \s-1XP\s0 \s-1VM\s0.  Unfortunately the technique appears to
be substantially different for each version of Windows.
.PP
https://lists.fedoraproject.org/pipermail/virt/2011\-May/002655.html
https://lists.fedoraproject.org/pipermail/virt/2011\-May/002658.html
.SH "Checksum a file or device within a disk image"
.IX Header "Checksum a file or device within a disk image"
To checksum a whole device, or a partition, \s-1LV\s0 etc within a disk image:
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img run : checksum\-device md5 /dev/sda1
.Ve
.PP
Replace \f(CW\*(C`md5\*(C'\fR with the type of checksum you want.  See
\&\*(L"guestfs_checksum_device\*(R" in \fIguestfs\fR\|(3) for a list of supported types.
.PP
\&\f(CW\*(C`/dev/sda1\*(C'\fR means \*(L"the first partition\*(R".  You could use \f(CW\*(C`/dev/sda\*(C'\fR to
checksum the whole disk image, or the name of a logical volume or \s-1RAID\s0
device.
.PP
To checksum a single file:
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img \-i checksum sha256 /etc/passwd
.Ve
.PP
or for a Windows guest:
.PP
.Vb 2
\& guestfish \-\-ro \-a disk.img \-i \e
\&   checksum sha256 \*(Aqwin:\ewindows\esystem32\econfig\eSOFTWARE\*(Aq
.Ve
.SH "Cloning a virtual machine"
.IX Header "Cloning a virtual machine"
Use a combination of tools like \fIcp\fR\|(1), \fIdd\fR\|(1), and virt tools like
\&\fIvirt\-sysprep\fR\|(1), \fIvirt\-sparsify\fR\|(1) and \fIvirt\-resize\fR\|(1).
.PP
For more details, see: \*(L"\s-1COPYING\s0 \s-1AND\s0 \s-1CLONING\s0\*(R" in \fIvirt\-sysprep\fR\|(1).
.SH "Convert a CD-ROM / DVD / ISO to a tarball"
.IX Header "Convert a CD-ROM / DVD / ISO to a tarball"
This converts input \f(CW\*(C`cd.iso\*(C'\fR to output \f(CW\*(C`cd.tar.gz\*(C'\fR:
.PP
.Vb 1
\& guestfish \-\-ro \-a cd.iso \-m /dev/sda tgz\-out / cd.tar.gz
.Ve
.PP
To export just a subdirectory, eg. \f(CW\*(C`/files\*(C'\fR, do:
.PP
.Vb 1
\& guestfish \-\-ro \-a cd.iso \-m /dev/sda tgz\-out /files cd.tar.gz
.Ve
.SH "Створення порожніх образів дисків"
.IX Header "Створення порожніх образів дисків"
The \fIvirt\-format\fR\|(1) tool can do this directly.
.PP
Use \fIvirt\-make\-fs\fR\|(1) to create a disk image with content.  This can also
create some standard disk images such as virtual floppy devices (VFDs).
.PP
You can also use the \fIguestfish\fR\|(1) \fI\-N\fR option to create empty disk
images.  The useful guide below explains the options available.
.PP
https://rwmj.wordpress.com/2010/09/08/new\-guestfish\-n\-options\-in\-1\-5\-9/#content
.SH "Delete a file (or other simple file operations)"
.IX Header "Delete a file (or other simple file operations)"
Use guestfish.  To delete a file:
.PP
.Vb 1
\& guestfish \-a disk.img \-i rm /file/to/delete
.Ve
.PP
To touch a file (bring it up to date or create it):
.PP
.Vb 1
\& guestfish \-a disk.img \-i touch /file/to/touch
.Ve
.PP
To stat a file.  Since this is a read-only operation, we can make it safer
by adding the \fI\-\-ro\fR flag.
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img \-i stat /file/to/stat
.Ve
.PP
There are dozens of these commands.  See \fIguestfish\fR\|(1) or the output of
\&\f(CW\*(C`guestfish \-h\*(C'\fR
.SH "Diff two guests; compare a snapshot to the current version"
.IX Header "Diff two guests; compare a snapshot to the current version"
\&\fIvirt\-ls\fR\|(1) provides a simple way to find the differences between two
guests (for example if they were originally cloned from the same source), or
between two snapshots from the same guest.  See \*(L"\s-1DIFFERENCES\s0 \s-1IN\s0
\&\s-1SNAPSHOTS\s0 \s-1AND\s0 \s-1BACKING\s0 \s-1FILES\s0\*(R" in \fIvirt\-ls\fR\|(1).
.PP
There are also experimental patches on the mailing list for a \*(L"virt-diff\*(R"
tool.
.SH "Dump raw filesystem content from inside a disk image or VM"
.IX Header "Dump raw filesystem content from inside a disk image or VM"
You can use the \fIguestfish\fR\|(1) \f(CW\*(C`download\*(C'\fR command to extract the raw
filesystem content from any filesystem in a disk image or a \s-1VM\s0 (even one
which is encrypted or buried inside an \s-1LV\s0 or \s-1RAID\s0 device):
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img run : download /dev/sda1 sda1.img
\&
\& guestfish \-\-ro \-d Guest run : download /dev/vg_guest/lv_root lv.img
.Ve
.PP
To download to stdout, replace the filename with a \f(CW\*(C`\-\*(C'\fR character:
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img run : download /dev/sda1 \- | gzip > sda1.gz
.Ve
.PP
To list the filesystems in a disk image, use \fIvirt\-filesystems\fR\|(1).
.PP
See also \*(L"Uploading raw filesystem content\*(R".
.SH "Edit grub configuration in a VM"
.IX Header "Edit grub configuration in a VM"
Ви можете скористатися цим для того, щоб виконати такі завдання:
.IP "\(bu" 4
Fix a virtual machine that does not boot.
.IP "\(bu" 4
Change which kernel is used to boot the \s-1VM\s0.
.IP "\(bu" 4
Change kernel command line options.
.PP
Use \fIvirt\-edit\fR\|(1) to edit the grub configuration:
.PP
.Vb 1
\& virt\-edit \-d BrokenGuest /boot/grub2/grub.cfg
.Ve
.PP
or for general tinkering inside an unbootable \s-1VM\s0 use \fIvirt\-rescue\fR\|(1) like
this:
.PP
.Vb 1
\& virt\-rescue \-d BrokenGuest
.Ve
.SH "Експортувати будь\-який каталог з віртуальної машини"
.IX Header "Експортувати будь-який каталог з віртуальної машини"
To export \f(CW\*(C`/home\*(C'\fR from a \s-1VM\s0 into a local directory use \fIvirt\-copy\-out\fR\|(1):
.PP
.Vb 1
\& virt\-copy\-out \-d Guest /home .
.Ve
.PP
Нотатки:
.IP "\(bu" 4
The final dot of the command is not a printing error.  It means we want to
copy out to the current directory.
.IP "\(bu" 4
This creates a directory called \f(CW\*(C`home\*(C'\fR under the current directory.
.PP
If the guest is a Windows guest then you can use drive letters and
backslashes, but you must prefix the path with \f(CW\*(C`win:\*(C'\fR and quote it to
protect it from the shell, like this:
.PP
.Vb 1
\& virt\-copy\-out \-d WinGuest \*(Aqwin:c:\ewindows\esystem32\econfig\*(Aq .
.Ve
.PP
To get the output as a compressed tarball, do:
.PP
.Vb 1
\& virt\-tar\-out \-d Guest /home \- | gzip \-\-best > home.tar.gz
.Ve
.PP
Although it sounds tempting, this is usually not a reliable way to get a
backup from a running guest.  See the entry in the \s-1FAQ:\s0
http://libguestfs.org/FAQ.html#backup
.SH "Find out which user is using the most space"
.IX Header "Find out which user is using the most space"
This simple script examines a Linux guest to find out which user is using
the most space in their home directory:
.PP
.Vb 1
\& #!/bin/sh \-
\& 
\& set \-e
\& 
\& vm="$1"
\& dir=/home
\& 
\& eval $(guestfish \-\-ro \-d "$vm" \-i \-\-listen)
\& 
\& for d in $(guestfish \-\-remote ls "$dir"); do
\&     echo \-n "$dir/$d"
\&     echo \-ne \*(Aq\et\*(Aq
\&     guestfish \-\-remote du "$dir/$d";
\& done | sort \-nr \-k 2
\& 
\& guestfish \-\-remote exit
.Ve
.SH "Get DHCP address from a VM"
.IX Header "Get DHCP address from a VM"
The link below explains the many different possible techniques for getting
the last assigned \s-1DHCP\s0 address of a virtual machine.
.PP
https://rwmj.wordpress.com/2011/03/31/tip\-code\-for\-getting\-dhcp\-address\-from\-a\-virtual\-machine\-disk\-image/#content
.PP
In the libguestfs source examples directory you will find the latest version
of the \f(CW\*(C`virt\-dhcp\-address.c\*(C'\fR program.
.SH "Get the operating system product name string"
.IX Header "Get the operating system product name string"
Save the following script into a file called \f(CW\*(C`product\-name.sh\*(C'\fR:
.PP
.Vb 6
\& #!/bin/sh \-
\& set \-e
\& eval "$(guestfish \-\-ro \-d "$1" \-\-i \-\-listen)"
\& root="$(guestfish \-\-remote inspect\-get\-roots)"
\& guestfish \-\-remote inspect\-get\-product\-name "$root"
\& guestfish \-\-remote exit
.Ve
.PP
Make the script executable and run it on a named guest:
.PP
.Vb 2
\& # product\-name.sh RHEL60x64
\& Red Hat Enterprise Linux Server release 6.0 (Santiago)
.Ve
.PP
You can also use an XPath query on the \fIvirt\-inspector\fR\|(1) \s-1XML\s0 using the
\&\f(CW\*(C`xpath\*(C'\fR command line tool or from your favourite programming language:
.PP
.Vb 5
\& # virt\-inspector RHEL60x64 > xml
\& # xpath \*(Aq//product_name\*(Aq < xml
\& Found 1 nodes:
\& \-\- NODE \-\-
\& <product_name>Red Hat Enterprise Linux Server release 6.0 (Santiago)</product_name>
.Ve
.SH "Get the default boot kernel for a Linux VM"
.IX Header "Get the default boot kernel for a Linux VM"
The link below contains a program to print the default boot kernel for a
Linux \s-1VM\s0.
.PP
https://rwmj.wordpress.com/2010/10/30/tip\-use\-augeas\-to\-get\-the\-default\-boot\-kernel\-for\-a\-vm/#content
.PP
It uses Augeas, and the technique is generally applicable for many different
tasks, such as:
.IP "\(bu" 4
listing the user accounts in the guest
.IP "\(bu" 4
what repositories is it configured to use
.IP "\(bu" 4
what \s-1NTP\s0 servers does it connect to
.IP "\(bu" 4
what were the boot messages last time it booted
.IP "\(bu" 4
listing who was logged in recently
.PP
http://augeas.net/
.SH "Hanging guests"
.IX Header "Hanging guests"
There are various ways to use libguestfs to find out why a guest is hanging
or unresponsive:
.IP "1." 4
Read the log files using virt-cat:
.Sp
.Vb 1
\& virt\-cat Guest /var/log/messages | less
.Ve
.IP "2." 4
Read the Windows Event Log (Windows Vista or later only):
.Sp
https://rwmj.wordpress.com/2011/04/17/decoding\-the\-windows\-event\-log\-using\-guestfish/#content
.IP "3." 4
Find out which files were last updated in a guest:
.Sp
https://rwmj.wordpress.com/2012/02/27/using\-libguestfs\-to\-find\-out\-why\-a\-windows\-guest\-was\-hanging/#content
.Sp
This might give you a clue as to what program is running.
.SH "Hex-dumping sectors from the guest"
.IX Header "Hex-dumping sectors from the guest"
Hex-dump the boot partition:
.PP
.Vb 2
\& guestfish \-\-ro \-a disk.img run : pread\-device /dev/sda 0x200 0 |
\&   hexdump \-C
.Ve
.SH "Hex-editing sectors in the guest"
.IX Header "Hex-editing sectors in the guest"
Hex-edit the first sector (boot partition):
.PP
.Vb 1
\& guestfish \-\-rw \-a disk.img run : hexedit /dev/sda 0x200
.Ve
.SH "Встановлення RPM у гостьовій системі"
.IX Header "Встановлення RPM у гостьовій системі"
The link below contains a method to install RPMs in a guest.  In fact the
RPMs are just uploaded to the guest along with a \*(L"firstboot\*(R" script that
installs them next time the guest is booted.  You could use this technique
to install vital security updates in an offline guest.
.PP
https://rwmj.wordpress.com/2010/12/01/tip\-install\-rpms\-in\-a\-guest/#content
.SH "Показати список програм, встановлених у віртуальній машині"
.IX Header "Показати список програм, встановлених у віртуальній машині"
Save the following to a file \f(CW\*(C`list\-apps.sh\*(C'\fR:
.PP
.Vb 6
\& #!/bin/sh \-
\& set \-e
\& eval "$(guestfish \-\-ro \-d "$1" \-\-i \-\-listen)"
\& root="$(guestfish \-\-remote inspect\-get\-roots)"
\& guestfish \-\-remote inspect\-list\-applications "$root"
\& guestfish \-\-remote exit
.Ve
.PP
Make the file executable and then you can run it on any named virtual
machine:
.PP
.Vb 10
\& # list\-apps.sh WinGuest
\& [0] = {
\&   app_name: Mozilla Firefox (3.6.12)
\&   app_display_name: Mozilla Firefox (3.6.12)
\&   app_epoch: 0
\&   app_version: 3.6.12 (en\-GB)
\&   app_release:
\&   app_install_path: C:\eProgram Files\eMozilla Firefox
\&   app_trans_path:
\&   app_publisher: Mozilla
\&   app_url: http://www.mozilla.com/en\-GB/
\&   app_source_package:
\&   app_summary:
\&   app_description: Mozilla Firefox
\& }
\& [1] = {
\&   app_name: VLC media player
\&   app_display_name: VLC media player 1.1.5
\&   app_epoch: 0
\&   app_version: 1.1.5
\&   app_release:
\&   app_install_path: C:\eProgram Files\eVideoLAN\eVLC
\&   app_trans_path:
\&   app_publisher: VideoLAN
\&   app_url: http://www.videolan.org/
\&   app_source_package:
\&   app_summary:
\&   app_description:
\& }
.Ve
.PP
If you want to run the script on disk images (instead of libvirt virtual
machines), change \f(CW\*(C`\-d "$1"\*(C'\fR to \f(CW\*(C`\-a "$1"\*(C'\fR.  See also \fIvirt\-inspector\fR\|(1).
.SH "Показати список файлів і каталогів у віртуальній машині"
.IX Header "Показати список файлів і каталогів у віртуальній машині"
Use \fIvirt\-ls\fR\|(1).
.SH "Показати список служб у віртуальній машині Windows"
.IX Header "Показати список служб у віртуальній машині Windows"
The link below contains a script that can be used to list out the services
from a Windows \s-1VM\s0, and whether those services run at boot time or are loaded
on demand.
.PP
https://rwmj.wordpress.com/2010/12/10/tip\-list\-services\-in\-a\-windows\-guest/#content
.SH "Make a disk image sparse"
.IX Header "Make a disk image sparse"
Use \fIvirt\-sparsify\fR\|(1).
.SH "Monitor disk usage over time"
.IX Header "Monitor disk usage over time"
You can use \fIvirt\-df\fR\|(1) to monitor disk usage of your guests over time.
The link below contains a guide.
.PP
http://virt\-tools.org/learning/advanced\-virt\-df/
.SH "Читання журналу подій у Windows з версії Windows Vista"
.IX Header "Читання журналу подій у Windows з версії Windows Vista"
\&\fIguestfish\fR\|(1) plus the tools described in the link below can be used to
read out the Windows Event Log from any virtual machine running Windows
Vista or a later version.
.PP
https://rwmj.wordpress.com/2011/04/17/decoding\-the\-windows\-event\-log\-using\-guestfish/#content
.SH "Вилучення пароля root (Linux)"
.IX Header "Вилучення пароля root (Linux)"
Using the \fIvirt\-edit\fR\|(1) \fI\-e\fR option you can do simple replacements on
files.  One use is to remove the root password from a Linux guest:
.PP
.Vb 1
\& virt\-edit domname /etc/passwd \-e \*(Aqs/^root:.*?:/root::/\*(Aq
.Ve
.SH "Вилучення пароля адміністратора (Windows)"
.IX Header "Вилучення пароля адміністратора (Windows)"
The link below contains one technique for removing the Administrator
password from a Windows \s-1VM\s0, or to be more precise, it gives you a command
prompt the next time you log in which you can use to bypass any security:
.PP
https://mdbooth.wordpress.com/2010/10/18/resetting\-a\-windows\-guests\-administrator\-password\-with\-guestfish/
.SH "Sysprepping a virtual machine (Windows)"
.IX Header "Sysprepping a virtual machine (Windows)"
It is possible to do a \*(L"sysprep\*(R" using libguestfs alone, although not
straightforward.  Currently there is code in the Aeolus Oz project which
does this (using libguestfs).  It is likely we will add this to
\&\fIvirt\-sysprep\fR\|(1) in future.
.PP
https://github.com/clalancette/oz
https://www.redhat.com/archives/virt\-tools\-list/2011\-May/msg00019.html
.SH "Розпакування компакт\-диска з портативною системою"
.IX Header "Розпакування компакт-диска з портативною системою"
Linux live CDs often contain multiple layers of disk images wrapped like a
Russian doll.  You can use \fIguestfish\fR\|(1) to look inside these multiple
layers, as outlined in the guide below.
.PP
https://rwmj.wordpress.com/2009/07/15/unpack\-the\-russian\-doll\-of\-a\-f11\-live\-cd/#content
.SH "Вивантаження і звантаження файлів"
.IX Header "Вивантаження і звантаження файлів"
The link below contains general tips on uploading (copying in)  and
downloading (copying out) files from VMs.
.PP
https://rwmj.wordpress.com/2010/12/02/tip\-uploading\-and\-downloading/#content
.SH "Uploading raw filesystem content"
.IX Header "Uploading raw filesystem content"
You can use \fIguestfish\fR\|(1) to upload whole filesystems into a \s-1VM\s0, even into
a filesystem which is encrypted or buried inside an \s-1LV\s0 or \s-1RAID\s0 device:
.PP
.Vb 1
\& guestfish \-\-rw \-a disk.img run : upload sda1.img /dev/sda1
\&
\& guestfish \-\-rw \-d Guest run : upload lv.img /dev/vg_guest/lv_root
.Ve
.PP
One common problem is that the filesystem isn't the right size for the
target.  If it is too large, there's not much you can do with libguestfs \-
you have to prepare the filesystem differently.  But if the filesystem needs
to expand into the target, you can use guestfish to resize it to the right
size:
.PP
.Vb 3
\& guestfish \-\-rw \-d Guest run : \e
\&   upload lv.img /dev/vg_guest/lv_root : \e
\&   resize2fs /dev/vg_guest/lv_root
.Ve
.PP
(or use \f(CW\*(C`ntfsresize\*(C'\fR if the filesystem is \s-1NTFS\s0).
.SH "Use libguestfs tools on VMware ESX guests"
.IX Header "Use libguestfs tools on VMware ESX guests"
The link below explains how to use libguestfs, \fIguestfish\fR\|(1) and the virt
tools on any VMware \s-1ESX\s0 guests, by first sharing the VMware \s-1VMFS\s0 over sshfs.
.PP
https://rwmj.wordpress.com/2011/05/10/tip\-use\-libguestfs\-on\-vmware\-esx\-guests/#content
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fIguestfs\fR\|(3), \fIguestfish\fR\|(1), \fIguestfs\-examples\fR\|(3),
\&\fIguestfs\-erlang\fR\|(3), \fIguestfs\-java\fR\|(3), \fIguestfs\-ocaml\fR\|(3),
\&\fIguestfs\-perl\fR\|(3), \fIguestfs\-python\fR\|(3), \fIguestfs\-ruby\fR\|(3),
http://libguestfs.org/.
.SH "АВТОРИ"
.IX Header "АВТОРИ"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
© Red Hat Inc., 2009–2012
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
