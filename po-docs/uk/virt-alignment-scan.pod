
=head1 НАЗВА

virt-alignment-scan — перевірити вирівнювання розділів віртуальної машини

=head1 КОРОТКИЙ ОПИС

 virt-alignment-scan [--параметри] -d назва_домену

 virt-alignment-scan [--параметри] -a диск.img [-a диск.img ...]

 virt-alignment-scan [--параметри]

=head1 ОПИС

Під час встановлення застарілих операційних систем засоби розподілу диска
можуть розташувати розділ на секторі з помилковим вирівнюванням відносно
системи зберігання даних (типово, перший розділ починається з сектора
C<63>). Розділи з помилковим вирівнюванням можуть призвести до неоптимальної
кількості запитів щодо виведення та введення даних від операційної системи.

Програма virt-alignment-scan виконує перевірку вирівнювання розділів у
віртуальних машинах та образів дисків і повідомляє вам, якщо буде виявлено
помилки вирівнювання.

У поточній версії не передбачено програми для виправлення помилок,
пов’язаних з вирівнюванням. Ви можете лише перевстановити гостьову
операційну систему. У цьому документі можна знайти короткі описи помилок та
можливі шляхи усування цих помилок:
L<http://media.netapp.com/documents/tr-3747.pdf>

=head1 ВИВЕДЕННЯ

Щоб запустити цю програму безпосередньо для образу диска, скористайтеся
параметром I<-a>:

 $ virt-alignment-scan -a winxp.img
 /dev/sda1        32256          512    bad (alignment < 4K)

 $ virt-alignment-scan -a fedora16.img
 /dev/sda1      1048576         1024K   ok
 /dev/sda2      2097152         2048K   ok
 /dev/sda3    526385152         2048K   ok

Щоб запустити програму на гостьовій системі, відомій libvirt, скористайтеся
параметром I<-d> і, можливо, параметром I<-c>:

 # virt-alignment-scan -d RHEL5
 /dev/sda1        32256          512    bad (alignment < 4K)
 /dev/sda2    106928640          512    bad (alignment < 4K)

 $ virt-alignment-scan -c qemu:///system -d Win7TwoDisks
 /dev/sda1      1048576         1024K   ok
 /dev/sda2    105906176         1024K   ok
 /dev/sdb1        65536           64K   ok

Щоб виконати сканування всіх доменів libvirt, віддайте команду
virt-alignment-scan без параметрів I<-a> та I<-d>.

 # virt-alignment-scan
 F16x64:/dev/sda1      1048576         1024K   ok
 F16x64:/dev/sda2      2097152         2048K   ok
 F16x64:/dev/sda3    526385152         2048K   ok

Дані буде виведено у форматі 4 або більшої кількості стовпчиків,
відокремлених пробілами. Якщо ви маєте намір обробляти ці дані якоюсь
програмою, до уваги слід брати лише перші 4 стовпчики. Ось ці стовпчики:

=over 4

=item стовпчик 1

Назва пристрою і розділу (наприклад, F</dev/sda> означає перший розділ на
першому блоковому пристрої).

У пунктах списків всіх доменів libvirt (без вказаного параметра I<-a> або
I<-d>) записи у цьому стовпчику матимуть префікс назви libvirt або UUID
(якщо вказано I<--uuid>). Приклад: C<WinXP:/dev/sda1>

=item стовпчик 2

позиція початку розділу у байтах

=item стовпчик 3

вирівнювання у байтах або кілобайтах (наприклад C<512> або C<4K>)

=item стовпчик 4

C<ok>, якщо вирівнювання є оптимальним з огляду на швидкодію, або C<bad>,
якщо вирівнювання може призвести до проблем зі швидкодією

=item стовпчик 5 і далі

додаткові пояснення у довільному форматі.

=back

Код виходу програми залежить від того, чи буде знайдено розділи з помилковим
вирівнюванням.  Див. розділ L</СТАН ВИХОДУ> нижче.

Якщо вам потрібен лише код виходу без виведення даних, скористайтеся
параметром I<-q>.

=head1 ПАРАМЕТРИ

=over 4

=item B<--help>

Показати коротку довідку.

=item B<-a> файл

=item B<--add> файл

Додати I<файл>, який має бути образом диска з віртуальної машини.

Формат образу диска визначається автоматично. Щоб перевизначити його і
примусово використати певний формат, скористайтеся параметром
I<--format=..>.

=item B<-a адреса>

=item B<--add адреса>

Додати віддалений диск. Див. L<guestfish(1)/ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА>.

=item B<-c> адреса

=item B<--connect> адреса

Якщо використовується libvirt, встановити з’єднання з вказаним I<URI>. Якщо
пропущено, з’єднання буде встановлено з типовим гіпервізором libvirt.

Якщо вказати блокові пристрої гостьових систем безпосередньо (I<-a>),
libvirt не буде використовуватися взагалі.

=item B<-d> гість

=item B<--domain> гість

Додати всі диски з вказаної гостьової системи libvirt. UUID доменів можна
використовувати замість назв.

=item B<--format=raw|qcow2|..>

=item B<--format>

Типовим значенням для параметра I<-a> є автоматичне визначення формату
образу диска. Використання цього параметра примусово визначає значення
параметрів I<-a> формату диска у наступному рядку команди. Використання
параметра I<--format> без аргументу перемикає програму у режим автоматичного
визначення у наступних параметрах I<-a>.

Приклад:

 virt-alignment-scan --format=raw -a disk.img

примусове встановлення формату без обробки (без автоматичного визначення)
для F<disk.img>.

 virt-cat --format=raw -a disk.img --format -a another.img file

примусове встановлення формату без обробки (без автоматичного визначення)
для F<diskimg> і повернення до автоматичного визначення для F<another.img>.

Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому
форматі, вам слід скористатися цим параметром для визначення формату
диска. Таким чином можна уникнути можливих проблем з захистом для
сформованих зловмисниками гостьових систем (CVE-2010-3851).

=item B<-P> кількість_потоків

З версії libguestfs 1.22 у virt-alignment-scan передбачено обробку у
декілька потоків і паралельне вивчення гостьових систем. Типово кількість
потоків виконання, що використовуються, вибирається на основі доступного
обсягу вільної пам’яті на час запуску virt-alignment-scan. Ви можете
примусово наказати virt-alignment-scan використовувати не більше за
C<кількість_потоків> за допомогою параметра I<-P>.

Зауважте, що I<-P 0> означає автоматичне визначення, а I<-P 1> означає
використання одного потоку виконання.

=item B<-q>

=item B<--quiet>

Не виводити ніяких даних. Просто встановити значення коду виходу
(див. L</СТАН ВИХОДУ> нижче).

=item B<--uuid>

Виводити UUID замість назв. Корисно для слідкування за гостьовою системою,
навіть після перенесення або перейменування, або якщо дві гостьові системи
мають однакові назви.

Цей параметр застосовується лише для побудови списку всіх доменів libvirt
(якщо не вказано параметрів I<-a> і I<-d>).

=item B<-v>

=item B<--verbose>

Увімкнути докладний показ повідомлень з метою діагностики.

=item B<-V>

=item B<--version>

Показати дані щодо версії і завершити роботу.

=item B<-x>

Увімкнути трасування викликів програмного інтерфейсу libguestfs.

=back

=head1 РЕКОМЕНДОВАНЕ ВИРІВНЮВАННЯ

Операційні системи, старіші за Windows 2008, та Linux до приблизно 2010 року
розташовують перший сектор на першому розділі у секторі 63 і використовують
розмір сектору у 512 байтів. Причини суто історичні. Драйвери мають
повідомити дані щодо геометрії (циліндр / голівка / сектор або CHS) до
BIOS. Ця геометрія є повністю непотрібною на сучасних дисках, але, так
трапляється, що повідомлені драйвером дані вказують на те, що у доріжці 63
сектори. Тому операційна система розташовує перший розділ на початку другої
«доріжки» у секторі 63.

Якщо гостьову операційну систему віртуалізовано, основна операційна система
і гіпервізор можуть надавати перевагу доступу, вирівняному за одним з таких
значень:

=over 4

=item * 512 байти

якщо основна операційна система використовує локальне сховище даних
безпосередньо на розділах твердого диска, а на твердому диску розмір
фізичних секторів дорівнює 512 байтам.

=item * 4 кілобайтів

для локальних сховищ даних на нових твердих дисках із фізичними секторами у
4 кілобайти; для файлових сховищ даних на файлових системах із розміром
блоку у 4 кілобайти; або для деяких типів мережевих сховищ даних.

=item * 64 кілобайтів

для висококласних сховищ даних, з’єднаних із мережею. Оптимальний розмір
блоку для апаратного забезпечення NetApp.

=item * 1 мегабайт

див. L</ВИРІВНЮВАННЯ РОЗДІЛІВ НА ПОЗНАЧКИ 1 МБ> нижче.

=back

Розділи, які не вирівняно належним чином щодо основного сховища даних,
можуть спричиняти зайві помилки введення-виведення. Приклад:

                       розділ#63
                       ┌──────────────────────────┬ ─ ─ ─ ─
                       │         блок             │
                       │гостьової файлової системи│
  ─ ┬──────────────────┴──────┬───────────────────┴─────┬ ─ ─
    │  блок основної системи  │  блок основної системи  │
    │                         │                         │
  ─ ┴─────────────────────────┴─────────────────────────┴ ─ ─

У цьому прикладі під час кожного читання блоку у 4 кілобайти гостьової
системи має бути отримати доступ до двох блоків основної системи (отже,
здійснено удвічі більший обмін даними введення-виведення). Якщо у гостьовій
системі записується блок у 4 кілобайти, у основній системі має бути
прочитано два блоки, старі і нові дані має бути поєднано, і має бути
записано назад два блоки (учетверо більший обмін даними введення-виведення).

=head2 БЛОК ОСНОВНОЇ СИСТЕМИ LINUX І РОЗМІР ВВЕДЕННЯ-ВИВЕДЕННЯ

У нових версіях ядра Linux можна регулювати розміри фізичних і логічних
блоків, а такожж мінімальний і рекомендований розмір блоку
введення-виведення.

Для типового жорсткого диска з 512-байтовими секторами:

 $ cat /sys/block/sda/queue/hw_sector_size
 512
 $ cat /sys/block/sda/queue/physical_block_size
 512
 $ cat /sys/block/sda/queue/logical_block_size
 512
 $ cat /sys/block/sda/queue/minimum_io_size
 512
 $ cat /sys/block/sda/queue/optimal_io_size
 0

Для нових звичайних жорстких дисків з секторами у 4 кБ:

 $ cat /sys/block/sda/queue/hw_sector_size
 4096
 $ cat /sys/block/sda/queue/physical_block_size
 4096
 $ cat /sys/block/sda/queue/logical_block_size
 4096
 $ cat /sys/block/sda/queue/minimum_io_size
 4096
 $ cat /sys/block/sda/queue/optimal_io_size
 0

Для NetApp LUN:

 $ cat /sys/block/sdc/queue/logical_block_size
 512
 $ cat /sys/block/sdc/queue/physical_block_size
 512
 $ cat /sys/block/sdc/queue/minimum_io_size
 4096
 $ cat /sys/block/sdc/queue/optimal_io_size
 65536

NetApp дозволяє доступ до блоків у 512 байтів (хоча такий доступ буде дуже
неефективним), надає перевагу мінімальному блоку введення-виведення у 4 кБ,
але оптимальним розміром блоку введення-виведення є 64 кБ.

Щоб дізнатися більше про призначення цих чисел, ознайомтеся зі сторінкою
L<http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/newstorage-iolimits.html>

[Дякуємо Matt Booth за надання даних щодо дисків з блоками у 4 кБ. Дякуємо
Mike Snitzer за надання даних щодо NetApp та додаткову інформацію.]

=head2 ВИРІВНЮВАННЯ РОЗДІЛІВ НА ПОЗНАЧКИ 1 МБ

Microsoft вибрано 1 МБ як типове вирівнювання для усіх розділів, починаючи з
Windows 2008 Server. У Linux також почали використовувати таке вирівнювання.

Припускаючи у гостьовій системі сектори у 512 байтів, маємо перший розділ,
що починається з сектора 2048 і наступні розділи (якщо такі є) будуть
починатися з сектора, номер якого кратний до 2048.

Вирівнювання за 1 МБ є сумісним із усіма поточними варіантами вирівнювання
(4 кБ, 64 кБ) і надає простір для подальшого зростання розмірів фізичних
блоків.

=head2 ВСТАНОВЛЕННЯ ВИРІВНЮВАННЯ

L<virt-resize(1)> може змінювати вирівнювання розділів деяких гостьових
систем. У поточній версії програма здатна повністю вирівняти усі розділи
усіх гостьових систем Windows і виправити завантажувач, де це потрібно. Для
гостьових систем Linux програма може вирівняти другий і наступні розділи,
щоб більшість доступів операційної системи, окрім часу завантаження, було
вирівняно належним чином.

Іншим способом виправлення проблем, пов’язаних із вирівнюванням розділів, є
перевстановлення ваших гостьових операційних систем. Якщо ви встановлюєте
операційні системи з шаблонів, вам також варто переконатися, що із
вирівнюванням розділів усе гаразд.

Для старіших версій Windows корисні відомості можна знайти у цьому документі
NetApp: L<http://media.netapp.com/documents/tr-3747.pdf>

Для Red Hat Enterprise Linux E<le> 5 слід використовувати скрипт Kickstart,
який містить явний розділ C<%pre> для створення вирівняних розділів диска за
допомогою L<parted(8)>. Не використовуйте команду Kickstart C<part>. У
наведеному вище документі NetApp міститься приклад.

=head1 СТАН ВИХОДУ

Ця програма повертає:

=over 4

=item *

0

успішне завершення, всі розділи вирівняно на E<ge> 64 кБ для отримання
найкращої швидкодії

=item *

1

під час сканування образу диска або гостьової системи сталася помилка

=item *

2

успішне завершення роботи, деякі розділи може бути вирівняно на E<lt> 64 кБ,
що може призвести до погіршення швидкодії на високошвидкісних мережевих
сховищах

=item *

3

успішне завершення роботи, деякі розділи може бути вирівняно на E<lt> 4 кБ,
що може призвести до погіршення швидкодії у більшості гіпервізорів

=back

=head1 ТАКОЖ ПЕРЕГЛЯНЬТЕ

L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-rescue(1)>,
L<virt-resize(1)>, L<http://libguestfs.org/>.

=head1 АВТОР

Richard W.M. Jones L<http://people.redhat.com/~rjones/>

=head1 АВТОРСЬКІ ПРАВА

© Red Hat Inc., 2011

