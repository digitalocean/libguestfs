.\" Automatically generated by Podwrapper::Man 1.40.2 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "guestfs-ocaml 3"
.TH guestfs-ocaml 3 "2019-02-07" "libguestfs-1.40.2" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
guestfs-ocaml — як використовувати libguestfs з OCaml
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
Стиль Module:
.PP
.Vb 3
\& let g = Guestfs.create () in
\& Guestfs.add_drive_opts g ~format:"raw" ~readonly:true "disk.img";
\& Guestfs.launch g;
.Ve
.PP
Об’єктно\-орієнтований стиль:
.PP
.Vb 3
\& let g = new Guestfs.guestfs () in
\& g#add_drive_opts ~format:"raw" ~readonly:true "disk.img";
\& g#launch ();
\&
\& ocamlfind opt prog.ml \-package guestfs \-linkpkg \-o prog
\&or:
\& ocamlopt \-I +guestfs mlguestfs.cmxa prog.ml \-o prog
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
На цій сторінці підручника наведено документацію щодо викликів libguestfs з
коду мовою програмування OCaml. На сторінці задокументовано відмінності від
програмного інтерфейсу C та подано декілька прикладів. Якщо ви не дуже
знайомі із користуванням libguestfs, вам також слід прочитати підручник з
\&\fBguestfs\fR\|(3).
.SS "СТИЛІ ПРОГРАМУВАННЯ"
.IX Subsection "СТИЛІ ПРОГРАМУВАННЯ"
Існує два різних стилі програмування, підтримку яких передбачено у
прив'язках до OCaml. Ви можете скористатися модульним стилем, де кожну
функцію C буде прив'язано до функції OCaml:
.PP
.Vb 1
\& int guestfs_set_verbose (guestfs_h *g, int flag);
.Ve
.PP
перетворюється на:
.PP
.Vb 1
\& val Guestfs.set_verbose : Guestfs.t \-> bool \-> unit
.Ve
.PP
Крім того, ви можете скористатися об'єктно\-орієнтованим стилем, викликаючи
методи на класі \f(CW\*(C`Guestfs.guestfs\*(C'\fR:
.PP
.Vb 1
\& method set_verbose : bool \-> unit
.Ve
.PP
Код у об'єктно\-орієнтованому стилі, зазвичай, є коротшим, а незначна втрата
швидкодії є непомітною у загальному потоці виконання функцій libguestfs.
.SS "ЗАКРИТТЯ ДЕСКРИПТОРА"
.IX Subsection "ЗАКРИТТЯ ДЕСКРИПТОРА"
Дескриптор закривається, коли його знищує збирач сміття. Оскільки
дескриптори libguestfs містять багато від стану, їх також можна закривати (і
отже, звільняти) явним чином, викликаючи \f(CW\*(C`Guestfs.close\*(C'\fR або метод
\&\f(CW\*(C`#close\*(C'\fR.
.SS "ВИНЯТКИ"
.IX Subsection "ВИНЯТКИ"
Помилки функцій libguestfs пов'язуються із виключенням \f(CW\*(C`Guestfs.Error\*(C'\fR. Це
виключення має єдиний параметр, яким є повідомлення щодо помилки (рядок).
.PP
Спроба виклику будь\-якої функції чи методу для закритого дескриптора
призводить до \f(CW\*(C`Guestfs.Handle_closed\*(C'\fR. Єдиним параметром цього виключення є
назва функції, яку було викликано.
.SH "ПРИКЛАД. СТВОРЕННЯ ОБРАЗУ ДИСКА"
.IX Header "ПРИКЛАД. СТВОРЕННЯ ОБРАЗУ ДИСКА"
\&\f(CW@CREATE_DISK\fR@
.SH "ПРИКЛАД. ПЕРЕВІРКА ОБРАЗУ ДИСКА ВІРТУАЛЬНОЇ МАШИНИ"
.IX Header "ПРИКЛАД. ПЕРЕВІРКА ОБРАЗУ ДИСКА ВІРТУАЛЬНОЇ МАШИНИ"
\&\f(CW@INSPECT_VM\fR@
.SH "ПРИКЛАД: ВМИКАННЯ ДІАГНОСТИКИ І ЖУРНАЛЮВАННЯ"
.IX Header "ПРИКЛАД: ВМИКАННЯ ДІАГНОСТИКИ І ЖУРНАЛЮВАННЯ"
\&\f(CW@DEBUG_LOGGING\fR@
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fBguestfs\fR\|(3), \fBguestfs\-examples\fR\|(3), \fBguestfs\-erlang\fR\|(3),
\&\fBguestfs\-gobject\fR\|(3), \fBguestfs\-golang\fR\|(3), \fBguestfs\-java\fR\|(3),
\&\fBguestfs\-lua\fR\|(3), \fBguestfs\-perl\fR\|(3), \fBguestfs\-python\fR\|(3),
\&\fBguestfs\-recipes\fR\|(1), \fBguestfs\-ruby\fR\|(3), http://libguestfs.org/,
http://caml.inria.fr/.
.SH "АВТОРИ"
.IX Header "АВТОРИ"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
© Red Hat Inc., 2010–2012
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fBlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
