
=head1 НАЗВА

virt-ls — програма для показу списку файлів у віртуальній машині

=head1 КОРОТКИЙ ОПИС

 virt-ls [--параметри] -d назва_домену каталог [каталог ...]

 virt-ls [--параметри] -a диск.img [-a диск.img ...] каталог [каталог ...]

Старий стиль:

 virt-ls [--параметри] назва_домену каталог

 virt-ls [--параметри] диск.img [диск.img ...] каталог

=head1 ОПИС

C<virt-ls> виводить списки назв файлів, розмірів файлів, контрольних сум,
розширених атрибутів та інші дані з віртуальної машини або образу диска.

Можна вказати декілька назв каталогів. У цьому випадку виведені дані для
кожного з них буде об'єднано.

Щоб отримати список вмісту каталогів з гостьової системи libvirt,
скористайтеся параметром I<-d> для задання назви гостьової системи. Для
роботи з образом диска скористайтеся параметром I<-a>.

C<virt-ls> може створювати багато простих списків файлів. Складніші списки
можна створити за допомогою L<guestfish(1)> або програми, яка безпосередньо
використовує програмний інтерфейс L<guestfs(3)>.

=head1 ПРИКЛАДИ

Отримати список всіх файлів і каталогів у віртуальній машині:

 virt-ls -R -d guest /

Показати список всіх програм з setuid або setgid у віртуальній машині Linux:

 virt-ls -lR -d guest / | grep '^- [42]'

Показати список всіх каталогів з відкритим для всіх доступом на запис у
віртуальній машині Linux:

 virt-ls -lR -d guest / | grep '^d ...7'

Показати список всіх сокетів доменів Unix у віртуальній машині Linux:

 virt-ls -lR -d guest / | grep '^s'

Показати список усіх звичайних файлів, назви яких завершуються на «.png»:

 virt-ls -lR -d guest / | grep -i '^-.*\.png$'

Щоб переглянути список файлів у домашніх каталогах, розмір яких перевищує 10
МБ:

 virt-ls -lR -d guest /home | awk '$3 > 10*1024*1024'

Знайти всі об’єкти, які було змінено протягом попередніх 7 днів:

 virt-ls -lR -d guest --time-days / | awk '$6 <= 7'

Знайти звичайні файли, зміни до яких було внесено протягом попередніх 24
годин:

 virt-ls -lR -d guest --time-days / | grep '^-' | awk '$6 < 1'

=head2 ВІДМІННОСТІ МІЖ ЗНІМКАМИ ТА ФАЙЛАМИ РЕЗЕРВНИХ КОПІЙ

Хоча virt-ls можна скористатися для пошуку відмінностей між каталогами, з
випуску libguestfs E<ge> 1.26 з цією метою краще користуватися новим
інструментом, L<virt-diff(1)>.

=head1 РЕЖИМИ ВИВЕДЕННЯ ДАНИХ

У C<virt-ls> передбачено чотири режими виведення даних, керування якими
здійснюється різними комбінаціями параметрів I<-l> та I<-R>.

=head2 ПРОСТИЙ СПИСОК

Простий список, подібний до списку звичайної команди L<ls(1)>:

 $ virt-ls -d guest /
 bin
 boot
 [тощо]

=head2 ДОВГИЙ СПИСОК

З параметром I<-l> (I<--long>) виведені дані будуть подібними до даних, які
виводить команда C<ls -l> (якщо точніше, функція C<guestfs_ll>).

 $ virt-ls -l -d guest /
 total 204
 dr-xr-xr-x.   2 root root   4096 2009-08-25 19:06 bin
 dr-xr-xr-x.   5 root root   3072 2009-08-25 19:06 boot
 [тощо]

Зауважте, що хоча такий список зручний для перегляду вмісту каталогу, не
варто обробляти його за допомогою іншої програми. Для обробки іншими
програмами слід скористатися варіантом L</РЕКУРСИВНИЙ ДОВГИЙ СПИСОК>.

=head2 РЕКУРСИВНИЙ СПИСОК

Із параметром I<-R> (I<--recursive>) C<virt-ls> виводить список назв файлів
і каталогів рекурсивно:

 $ virt-ls -R -d guest /tmp
 foo
 foo/bar
 [тощо]

Для створення такого списку C<virt-ls> викликає функцію C<guestfs_find0> і
перетворює символи C<\0> на C<\n>.

=head2 РЕКУРСИВНИЙ ДОВГИЙ СПИСОК

Використання параметрів I<-lR> разом змінює виведені дані так, що вміст
каталогів показується рекурсивно, із даними щодо файлів, а також, якщо
використано відповідні параметри, іншими даними, зокрема контрольними сумами
та розширеними атрибутами.

Доступ до більшості цікавих можливостей C<virt-ls> можна отримати лише у
режимі I<-lR>.

Зазвичай, поля відокремлюються пробілами. До назв файлів B<не додаються>
лапки. Отже, ви не зможете скористатися виведеними даними у іншій програмі
(оскільки у назвах файлів можуть міститися пробіли та інші нестандартні
символи). Якщо до гостьової системи мають доступ сторонні люди і відомо, що
ви використовуєте C<virt-ls> для аналізу вмісту гостьової системи,
зловмисники можуть створити файли зі спеціально сконструйованими назвами та
вбудованими до назв символами розриву рядка. Щоб виведені дані можна було
B<безпечно> обробити у сторонній програмі, скористайтеся параметром I<--csv>
для виведення даних у форматі значень, відокремлених комами.

Зауважте, що цей формат виведення є повністю незалежним від формату команди
C<ls -lR>.

 $ virt-ls -lR -d guest /bin
 d 0555       4096 /bin
 - 0755        123 /bin/alsaunmute
 - 0755      28328 /bin/arch
 l 0777          4 /bin/awk -> gawk
 - 0755      27216 /bin/basename
 - 0755     943360 /bin/bash
 [тощо]

Ці основні поля буде показано завжди:

=over 4

=item тип

Тип файла, одне з таких значень: C<-> (звичайний файл), C<d> (каталог), C<c>
(символьний пристрій), C<b> (блокововий пристрій), C<p> (іменований канал),
C<l> (символічне посилання), C<s> (сокет) або C<u> (невідомо).

=item права доступу

Права доступу Unix, показані у форматі вісімкового числа із 4 цифр.

=item розмір

Розмір файла. Його буде показано у байтах, якщо не використано параметр
I<-h> або I<--human-readable>. Якщо такий параметр використано, дані буде
показано у зручному для читанні вигляді.

=item шлях

Шлях до файла або каталогу повністю.

=item посилання

Лише для символічних посилань, призначення посилання.

=back

У режимі I<-lR> додаткові параметри командного рядка уможливлюють показ
додаткових полів.

З прапорцем I<--uids> ці додаткові поля буде показано до шляху:

=over 4

=item uid

=item gid

UID та GID власника файла (буде показано у числовій формі). Зауважте, що ці
дані мають сенс лише у контексті Unix-подібної гостьової системи.

=back

Із прапорцем I<--times> буде показано такі додаткові поля:

=over 4

=item atime

Час останнього доступу.

=item mtime

Час останнього внесення змін.

=item ctime

Час останньої зміни стану.

=back

Вміст полів дат і часу буде показано у форматі рядків, якщо не вказано
одного з таких параметрів: I<--time-t>, I<--time-relative> або
I<--time-days>.

Із прапорцем I<--extra-stats> буде показано такі додаткові поля:

=over 4

=item пристрій

Пристрій на якому міститься файл (буде показано у форматі
основний:підлеглий). Запис пристрою може не збігатися із записом пристрою,
який відомий гостьовій системі.

=item inode

Номер inode.

=item nlink

Кількість жорстких посилань.

=item rdev

Для блоковий і символьних спеціальних файлів пристрій (буде показано у
форматі основний:підлеглий).

=item блоки

Кількість 512-байтових блоків, виділених під файл.

=back

Якщо використано прапорець I<--checksum>, програма покаже контрольну суму
вмісту файла (лише для звичайних файлів). Обчислення контрольної суми може
бути доволі тривалою дією.

=head1 ПАРАМЕТРИ

=over 4

=item B<--help>

Показати коротку довідку.

=item B<-a> файл

=item B<--add> файл

Додати I<файл>, який має бути образом диска з віртуальної машини. Якщо у
віртуальній машині декілька блокових пристроїв, вам слід вказати їх усі за
допомогою окремих записів параметра I<-a>.

Формат образу диска визначається автоматично. Щоб перевизначити його і
примусово використати певний формат, скористайтеся параметром
I<--format=..>.

=item B<-a адреса>

=item B<--add адреса>

Додати віддалений диск. Див. L<guestfish(1)/ДОДАВАННЯ ВІДДАЛЕНОГО СХОВИЩА>.

=item B<--checksum>

=item B<--checksum=crc|md5|sha1|sha224|sha256|sha384|sha512>

Вивести контрольну суму вмісту звичайного файла. Без аргументу для створення
контрольної суми буде використано I<md5>. За допомогою аргументу ви можете
визначити потрібний вам тип контрольної суми.

Цей параметр працюватиме лише у режимі виведення I<-lR>. Див. L</РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК> вище.

=item B<-c> адреса

=item B<--connect> адреса

Якщо використовується libvirt, встановити з’єднання з вказаним I<URI>. Якщо
пропущено, з’єднання буде встановлено з типовим гіпервізором libvirt.

Якщо вказати блокові пристрої гостьових систем безпосередньо (I<-a>),
libvirt не буде використовуватися взагалі.

=item B<--csv>

Вивести результати до формату CSV (записів, відокремлених комами). Дані у
цьому форматі можна просто імпортувати до баз даних і електронних
таблиць. Втім, варто ознайомитися із розділом L</НОТАТКА ЩОДО ФОРМАТУ CSV>,
наведеним нижче.

=item B<-d> гість

=item B<--domain> гість

Додати всі диски з вказаної гостьової системи libvirt. UUID доменів можна
використовувати замість назв.

=item B<--echo-keys>

Типово, якщо virt-ls попросить вас ввести ключ або пароль, програма не
відтворюватиме введені символи на екрані. Якщо ви не боїтеся
TEMPEST-нападів, або у вашій кімнаті нікого, окрім вас, немає, ви можете
скористатися цим прапорцем, щоб бачити, які саме символи ви вводите.

=item B<--extra-stats>

Показати додаткові дані.

Цей параметр працюватиме лише у режимі виведення I<-lR>. Див. L</РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК> вище.

=item B<--format=raw|qcow2|..>

=item B<--format>

Типовим значенням для параметра I<-a> є автоматичне визначення формату
образу диска. Використання цього параметра примусово визначає значення
параметрів I<-a> формату диска у наступному рядку команди. Використання
параметра I<--format> без аргументу перемикає програму у режим автоматичного
визначення у наступних параметрах I<-a>.

Приклад:

 virt-ls --format=raw -a диск.img /каталог

примусове встановлення формату без обробки (без автоматичного визначення)
для F<disk.img>.

 virt-ls --format=raw -a диск.img --format -a інший_диск.img /каталог

примусове встановлення формату без обробки (без автоматичного визначення)
для F<diskimg> і повернення до автоматичного визначення для F<another.img>.

Якщо ви користуєтеся ненадійними образами гостьових систем у необробленому
форматі, вам слід скористатися цим параметром для визначення формату
диска. Таким чином можна уникнути можливих проблем з захистом для
сформованих зловмисниками гостьових систем (CVE-2010-3851).

=item B<-h>

=item B<--human-readable>

Показати розміри файлів у зручному для читання форматі.

Цей параметр працюватиме лише у режимі виведення I<-lR>. Див. L</РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК> вище.

=item B<--keys-from-stdin>

Прочитати параметри ключа або пароля із джерела стандартного
введення. Типово програма намагається читати паролі від користувача
відкриттям F</dev/tty>.

=item B<-m> пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]

=item B<--mount> пристрій[:точка_монтування[:параметри[:тип_файлової_системи]]]

Змонтувати названий розділ або логічний том до вказаної точки монтування.

Якщо точку монтування не вказано, типовим значенням є F</>.

Визначення точки монтування вимикає інспектування гостьової системи і
призводить до монтування її кореневої системи та усіх її точок
монтування. Тому вам слід забезпечити монтування усіх точок монтування,
потрібних для роботи із файлами, назви яких вказано як аргументи.

Якщо ви не знаєте, які саме файлові системи містяться у образі диска, ви
можете або запустити guestfish без цього параметра і ознайомитися зі списком
доступних розділів, файлових систем та логічних томів (див. команди
L</list-partitions>, L</list-filesystems> і L</lvs>), або скористатися
програмою L<virt-filesystems(1)>.

Третьою (і нечасто використовуваною) частиною параметра монтування є список
параметрів монтування, які використовуються для того, щоб змонтувати
підлеглу файлову систему. Якщо такий список не буде задано, параметрами
монтування вважатиметься або порожній рядок, або C<ro> (другий варіант
використовується, якщо використано прапорець I<--ro>). Заданням параметрів
монтування ви перевизначаєте типовий варіант. Ймовірно, єдиним випадком,
коли вам може знадобитися це, є випадок вмикання списків керування доступом
(ACL) і/або розширених атрибутів, якщо у файловій системі передбачено їхню
підтримку:

 -m /dev/sda1:/:acl,user_xattr

Використання цього прапорця є еквівалентним до використання команди
C<mount-options>.

Четвертою частиною параметра є назва драйвера файлової системи, якою слід
скористатися, зокрема C<ext3> або C<ntfs>. У визначенні цієї частини
параметра рідко виникає потреба, але вона може бути корисною, якщо для
файлової системи можна скористатися декількома драйверами (приклад: C<ext2>
і C<ext3>), або libguestfs визначає файлову систему помилково.

=item B<-l>

=item B<--long>

=item B<-R>

=item B<--recursive>

Вибір режиму. Якщо не буде вказано жодного з варіантів, C<virt-ls> створює
простий плоский список файлів у вказаному каталозі. Див. L</ПРОСТИЙ СПИСОК>.

C<virt-ls -l> створює «довгий список», у якому більше
подробиць. Див. L</ДОВГИЙ СПИСОК>.

C<virt-ls -R> створює рекурсивний список файлів, починаючи з вказаного
каталогу. Див. L</РЕКУРСИВНИЙ СПИСОК>.

C<virt-ls -lR> створює рекурсивні довгі списки, які простіше
обробляти. Див. L</РЕКУРСИВНИЙ ДОВГИЙ СПИСОК>.

=item B<--times>

Показати поля часу.

Цей параметр працюватиме лише у режимі виведення I<-lR>. Див. L</РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК> вище.

=item B<--time-days>

Показувати поля часу у форматі днів до поточного (від’ємні значення для днів
у майбутньому).

Зауважте, що C<0> у виведених даних означає «менше 1 одного дня до поточного
моменту» або «вік файла — від 0 до 86399 секунд».

Цей параметр працюватиме лише у режимі виведення I<-lR>. Див. L</РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК> вище.

=item B<--time-relative>

Показувати поля часу у форматі секунд до поточного моменту (від’ємні
значення для часу у майбутньому).

Цей параметр працюватиме лише у режимі виведення I<-lR>. Див. L</РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК> вище.

=item B<--time-t>

Показувати поля часу у форматі секунд з моменту початку епохи UNIX.

Цей параметр працюватиме лише у режимі виведення I<-lR>. Див. L</РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК> вище.

=item B<--uids>

Показати поля UID і GID.

Цей параметр працюватиме лише у режимі виведення I<-lR>. Див. L</РЕКУРСИВНИЙ
ДОВГИЙ СПИСОК> вище.

=item B<-v>

=item B<--verbose>

Увімкнути докладний показ повідомлень з метою діагностики.

=item B<-V>

=item B<--version>

Показати дані щодо версії і завершити роботу.

=item B<-x>

Увімкнути трасування викликів програмного інтерфейсу libguestfs.

=back

=head1 ПАРАМЕТРИ КОМАНДНОГО РЯДКА У ФОРМАТІ ПОПЕРЕДНІХ ВЕРСІЙ

У попередніх версіях virt-ls можна було використовувати або

 virt-ls диск.img [диск.img ...] /каталог

або

 virt-ls назва_гостьової_системи /каталог

тоді як у цій версії вам слід скористатися I<-a> або I<-d>, відповідно, щоб
уникнути помилок у випадках, коли назва образу диска може збігатися із
назвою гостьової системи.

З міркувань зворотної сумісності передбачено підтримку запису параметрів у
застарілому форматі.

=head1 ЗАУВАЖЕННЯ ЩОДО ФОРМАТУ CSV

Формат значень, які відокремлено комами (CSV), є оманливо простим. Може
I<здатися>, що його просто обробляти, але насправді це зовсім не так.

Міф: достатньо розділити поля за комами. Реальність: поділ комами I<не>
працює у надійний спосіб. Ось приклад із двома стовпчиками:

 "foo,bar",baz

Міф: слід читати файл за рядками, один рядок за одну операцію
читання. Реальність: читання за рядками I<не> працює у надійний спосіб. Ось
приклад із одним рядком:

 "foo
 bar",baz

Для скриптів командної оболонки скористайтеся C<csvtool>
(L<https://github.com/Chris00/ocaml-csv> також є серед пакунків основних
дистрибутивів Linux).

Для інших мов програмування використовуйте бібліотеку для обробки даних CSV
(наприклад, C<Text::CSV> для Perl або вбудовану бібліотеку csv Python).

У більшості електронних таблиць та баз даних передбачено можливості
безпосереднього імпортування даних CSV.

=head1 СТАН ВИХОДУ

Ця програма повертає значення 0 у разі успішного завершення і ненульове
значення, якщо сталася помилка.

=head1 ТАКОЖ ПЕРЕГЛЯНЬТЕ

L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>,
L<virt-diff(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>.

=head1 АВТОР

Richard W.M. Jones L<http://people.redhat.com/~rjones/>

=head1 АВТОРСЬКІ ПРАВА

Copyright (C) 2009-2018 Red Hat Inc.

