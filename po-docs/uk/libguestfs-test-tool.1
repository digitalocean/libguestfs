.\" Automatically generated by Podwrapper::Man 1.40.2 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "libguestfs-test-tool 1"
.TH libguestfs-test-tool 1 "2019-02-07" "libguestfs-1.40.2" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
libguestfs-test-tool — діагностика libguestfs
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& libguestfs\-test\-tool [\-\-параметри]
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
libguestfs-test-tool — програма для тестування, яка постачається разом із
libguestfs для уможливлення перевірки того, чи працюють базові можливості
libguestfs. Ця програма потрібна, оскільки функціональність libguestfs може
бути порушено з неконтрольованих розробниками причин: зазвичай, через зміни
у базових пакунках qemu або ядра чи зміни у середовищі основної системи.
.PP
Якщо ви вважаєте, що проблема полягає у libguestfs, просто віддайте таку
команду:
.PP
.Vb 1
\& libguestfs\-test\-tool
.Ve
.PP
У відповідь буде виведено діагностичні повідомлення.
.PP
Якщо дії буде виконано успішно до кінця, ви побачите наприкінці списку
повідомлень таке:
.PP
.Vb 1
\& ===== TEST FINISHED OK =====
.Ve
.PP
і засіб тестування завершить роботу із кодом виходу 0.
.PP
Якщо виконання програми завершиться помилкою (і/або виходом із ненульовим
кодом завершення), будь ласка, додайте \fIповні, нередаговані\fR виведені
засобом тестування дані до звіту щодо вади у програмі. Докладніші дані щодо
звітування про вади наведено на сайті http://libguestfs.org/.
.SH "ПАРАМЕТРИ"
.IX Header "ПАРАМЕТРИ"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Показати коротку довідку з користування і завершити роботу.
.IP "\fB\-\-qemu\fR qemu_binary" 4
.IX Item "--qemu qemu_binary"
Якщо вами було отримано інший виконуваний файл qemu, вкажіть за допомогою
цього параметра повний шлях до цього виконуваного файла, щоб програма
перевірила його.
.IP "\fB\-\-qemudir\fR qemu_source_dir" 4
.IX Item "--qemudir qemu_source_dir"
Якщо вами було зібрано qemu з початкових кодів, вкажіть за допомогою цього
параметра шлях до каталогу з кодом, щоб програма перевірила його.
.IP "\fB\-t\fR N" 4
.IX Item "-t N"
.PD 0
.IP "\fB\-\-timeout\fR N" 4
.IX Item "--timeout N"
.PD
Встановити час очікування на запуск у значення \f(CW\*(C`N\*(C'\fR секунд. Типовим є
значення у 600 секунд (10 хвилин). Зазвичай, це значення не потребує
коригування.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Показати дані щодо версії libguestfs і завершити роботу.
.SH "ТЕСТУВАННЯ ІНШОЇ ВЕРСІЇ QEMU"
.IX Header "ТЕСТУВАННЯ ІНШОЇ ВЕРСІЇ QEMU"
Якщо вами було зібрано якусь іншу версію qemu з початкових кодів і ви хочете
виконати її тестування, ви можете скористатися параметром \fI\-\-qemudir\fR, щоб
вказати каталог з початковими кодами qemu.
.PP
Якщо вами звідкись було отримано інший виконуваний файл qemu, скористайтеся
параметром \fI\-\-qemu\fR, щоб вказати цей виконуваний файл.
.PP
Зауважте, що користуючись цими параметрами, ви можете не перейматися
написанням скриптів\-обгорток qemu (\*(L"ОБГОРТКИ \s-1QEMU\*(R"\s0 in \fBguestfs\fR\|(3)), оскільки
libguestfs-test-tool автоматично створює такий скрипт\-обгортку, якщо він
потрібен.
.SH "ТЕСТУВАННЯ ІНШОГО ЯДРА"
.IX Header "ТЕСТУВАННЯ ІНШОГО ЯДРА"
Ви можете наказати supermin спробувати скористатися іншим ядром. Зробити це
можна за допомогою змінних середовища \f(CW\*(C`SUPERMIN_KERNEL\*(C'\fR,
\&\f(CW\*(C`SUPERMIN_KERNEL_VERSION\*(C'\fR і/або \f(CW\*(C`SUPERMIN_MODULES\*(C'\fR.
.PP
Щоб дізнатися більше про це, зверніться до розділу \*(L"ЗМІННІ
СЕРЕДОВИЩА\*(R" in \fBsupermin\fR\|(1).
.SH "ТЕСТУВАННЯ ІНШОЇ ВЕРСІЇ LIBVIRT"
.IX Header "ТЕСТУВАННЯ ІНШОЇ ВЕРСІЇ LIBVIRT"
Щоб дізнатися, який із модулів обробки є типовим у вашому пакунку
libguestfs, скористайтеся такою командою:
.PP
.Vb 2
\& unset LIBGUESTFS_BACKEND
\& guestfish get\-backend
.Ve
.PP
Якщо ви користуєтеся модулем libvirt, ви можете спробувати іншу (наприклад
створену розробниками) версію libvirt, віддавши такі команди (\fIне\fR від
імені root):
.PP
.Vb 2
\& killall libvirtd lt\-libvirtd
\& ~/шлях/до/libvirt/run libguestfs\-test\-tool
.Ve
.PP
Перша команда припиняє роботу усіх процесів \f(CW\*(C`libvirtd\*(C'\fR сеансу, які могло
бути запущено у системі. Друга команда використовує скрипт \f(CW\*(C`run\*(C'\fR libvirt
(зберігається у кореневому каталозі збирання libvirt) для встановлення
деяких змінних середовища так, щоб для запуску програми використовувалася
альтернативна версія libvirt.
.SH "ТЕСТУВАННЯ З І БЕЗ LIBVIRT"
.IX Header "ТЕСТУВАННЯ З І БЕЗ LIBVIRT"
Щоб дізнатися, який із модулів обробки є типовим у вашому пакунку
libguestfs, скористайтеся такою командою:
.PP
.Vb 2
\& unset LIBGUESTFS_BACKEND
\& guestfish get\-backend
.Ve
.PP
Якщо ви користуєтеся модулем libvirt, ви можете спробувати попрацювати без
нього (тобто наказати libguestfs напряму запускати qemu), ось так:
.PP
.Vb 1
\& export LIBGUESTFS_BACKEND=direct
.Ve
.PP
Або, якщо ви використовуєте типовий модуль обробки (direct), ви можете
перейти на модуль libvirt:
.PP
.Vb 1
\& export LIBGUESTFS_BACKEND=libvirt
.Ve
.PP
або libvirt і специфічну адресу libvirt:
.PP
.Vb 1
\& export LIBGUESTFS_BACKEND=libvirt:qemu:///сеанс
.Ve
.SH "ТЕСТУВАННЯ ІНШИХ ПАРАМЕТРІВ SELINUX"
.IX Header "ТЕСТУВАННЯ ІНШИХ ПАРАМЕТРІВ SELINUX"
Щоб дізнатися, який із модулів обробки є типовим у вашому пакунку
libguestfs, скористайтеся такою командою:
.PP
.Vb 2
\& unset LIBGUESTFS_BACKEND
\& guestfish get\-backend
.Ve
.PP
Щоб перевірити, чи використовується SELinux, віддайте таку команду:
.PP
.Vb 1
\& getenforce
.Ve
.PP
Якщо ви користуєтеся libvirt, SELinux та sVirt, ви можете перевірити, чи
змінить роботу системи встановлення у SELinux режиму
«permissive». Скористайтеся для цього такою командою від імені користувача
root:
.PP
.Vb 1
\& setenforce Permissive
.Ve
.PP
Якщо виникнуть проблеми, пошукайте у журналі аудиту повідомлення про
нещодавні помилки («AVC»):
.PP
.Vb 1
\& ausearch \-m avc \-ts recent
.Ve
.PP
Ви можете перетворити \s-1AVC\s0 у пропоновані правила SELinux за допомогою
програм, подібних до \fBaudit2allow\fR\|(1).   Щоб дізнатися більше, ознайомтеся
із документом «Security Enhanced Linux User Guide».
.PP
Щоб знову увімкнути SELinux і sVirt, зробіть так:
.PP
.Vb 1
\& setenforce Enforcing
.Ve
.SH "САМОДІАГНОСТИКА"
.IX Header "САМОДІАГНОСТИКА"
Зверніться до розділу \*(L"ПРОЦЕС ЗАВАНТАЖЕННЯ БАЗОВОЇ СИСТЕМИ\*(R" in \fBguestfs\fR\|(3), щоб
зрозуміти повідомлення, які виводяться libguestfs-test-tool і/або можливі
причини помилок.
.SH "СТАН ВИХОДУ"
.IX Header "СТАН ВИХОДУ"
libguestfs-test-tool повертає \fI0\fR, якщо команди виконано без помилок, або
\&\fI1\fR, якщо сталася помилка.
.SH "ЗМІННІ СЕРЕДОВИЩА"
.IX Header "ЗМІННІ СЕРЕДОВИЩА"
Повний список змінних середовища, які можуть вплинути на роботу libguestfs,
можна знайти на сторінці підручника \fBguestfs\fR\|(3).
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fBguestfs\fR\|(3), http://libguestfs.org/, http://qemu.org/.
.SH "АВТОРИ"
.IX Header "АВТОРИ"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
Copyright (C) 2009\-2019 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fBlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
