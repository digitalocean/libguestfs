.\" Automatically generated by Podwrapper::Man 1.40.2 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "guestfs-testing 1"
.TH guestfs-testing 1 "2019-02-07" "libguestfs-1.40.2" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
guestfs-testing — тестування libguestfs вручну, ви можете допомогти!
.SH "ОПИС"
.IX Header "ОПИС"
На цій сторінці наведено настанови щодо тестування libguestfs вручну. У всіх
користувачів бібліотеки різні комбінації платформ, обладнання та гостьових
систем, тому таке тестування дуже важливе. Наперед вдячні за вашу допомогу!
.PP
Тести, позначені символом \fB*\fR (зірочкою) можуть \fBзнищити дані\fR, якщо ви не
будете обережними. Решта тестів є безпечними — вони не вносять жодних змін
до важливих даних.
.PP
Для виконання цих перевірок \fBпотрібна libguestfs ≥ 1.22\fR.
.PP
Повідомляти про виявлені вади можна за цим посиланням:
.PP
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
або надішліть допис до списку листування (можете \fBне\fR підписуватися на
список листування, якщо не хочете. Втім, для непідписаних користувачів
повідомлення з'являються у списку із затримкою, потрібною на модерацію.):
.PP
https://www.redhat.com/mailman/listinfo/libguestfs
.SH "ТЕСТИ"
.IX Header "ТЕСТИ"
.SS "Виконання libguestfs-test-tool"
.IX Subsection "Виконання libguestfs-test-tool"
Віддайте команду:
.PP
.Vb 1
\& libguestfs\-test\-tool
.Ve
.PP
Ця команда виконує дуже просте і неруйнівне тестування того, чи є libguestfs
працездатною на базовому рівні. Команду не потрібно віддавати від імені
користувача root.
.PP
Якщо \fIне буде\fR виведено рядок \f(CW\*(C`===== TEST FINISHED OK =====\*(C'\fR, повідомте
про це, як про ваду. Дуже важливим є включення до вашого повідомлення про
ваду \fBповного, нередагованого\fR масиву виведених даних
\&\f(CW\*(C`libguestfs\-test\-tool\*(C'\fR. Див. розділ \*(L"ВАДИ\*(R" наприкінці цієї сторінки
підручника.
.SS "Перевірка використовуваного прискорення \s-1KVM.\s0"
.IX Subsection "Перевірка використовуваного прискорення KVM."
Якщо у вашій основній системі передбачено апаратне прискорення
віртуалізації, із «гарячим» кешем libguestfs повинна запускатися за декілька
секунд. Віддайте вказану нижче команду декілька разів:
.PP
.Vb 1
\& time guestfish \-a /dev/null run
.Ve
.PP
After a few runs, the time should settle down to a few seconds (under 3
seconds on fast 64 bit hardware).
.PP
Якщо вказана вище команда не працюватиме, скористайтеся
\&\fBlibguestfs\-test\-tool\fR\|(1).
.SS "Визначення використовуваних версій libguestfs, qemu, libvirt тощо."
.IX Subsection "Визначення використовуваних версій libguestfs, qemu, libvirt тощо."
Ознайомтеся із виведеними \f(CW\*(C`libguestfs\-test\-tool\*(C'\fR даними і перевірте:
.IP "\(bu" 4
Яка версія libguestfs використовується? На початку виведених даних ви
побачите такий рядок:
.Sp
.Vb 1
\& library version: 1.22.0fedora=19,release=1.fc19,libvirt
.Ve
.IP "\(bu" 4
Чи використовується libvirt? Визначити це можна, пошукавши модуль обробки
(backend):
.Sp
.Vb 1
\& guestfs_get_backend: direct
.Ve
.Sp
або:
.Sp
.Vb 1
\& guestfs_get_backend: libvirt
.Ve
.IP "\(bu" 4
Яка версія qemu використовується? Дані версії може бути виведено ось так:
.Sp
.Vb 1
\& libguestfs: qemu version 1.5
.Ve
.IP "\(bu" 4
Яке ядро використовується? \fBsupermin\fR\|(1) намагається використатися
найсвіжіше ядро зі встановлених у вашій системі. Ви можете побачити дані
щодо версії у виведенні базової системи. Приклад:
.Sp
.Vb 1
\& [    0.000000] Linux version 3.9.2\-200.fc18.x86_64 [...]
.Ve
.SS "Спроба відкриття локального образу гостьової системи за допомогою guestfish."
.IX Subsection "Спроба відкриття локального образу гостьової системи за допомогою guestfish."
Для цього тесту можна скористатися будь\-яким образом диска гостьової
системи. Не забудьте скористатися параметром \f(CW\*(C`\-\-ro\*(C'\fR, щоб програма
\&\fBguestfish\fR\|(1) відкрила образ диска у режимі лише читання.
.PP
.Vb 1
\& guestfish \-\-ro \-a /шлях/до/образу.диска \-i
.Ve
.PP
Якщо команду буде успішно виконано, вона має вивести назву гостьової
операційної системи і відкрити для вас запит щодо команди guestfish
\&\f(CW\*(C`><fs>\*(C'\fR. Ви можете скористатися командами guestfish, подібними
до \f(CW\*(C`ll /\*(C'\fR, щоб зазирнути всередину образу диска. Щоб завершити сеанс
дослідження гостьової системи, введіть команду \f(CW\*(C`exit\*(C'\fR.
.PP
Якщо ви отримуєте повідомлення про помилку, спробуйте увімкнути діагностику
(додати \f(CW\*(C`\-v\*(C'\fR до рядка команди). Також слід переконатися, що програма
\&\fBlibguestfs\-test\-tool\fR\|(1) здатна працювати.
.SS "Спроба відкриття віддаленого образу гостьової системи за допомогою guestfish."
.IX Subsection "Спроба відкриття віддаленого образу гостьової системи за допомогою guestfish."
Ймовірно, вам також доведеться вимкнути libvirt встановленням такої змінної
середовища:
.PP
.Vb 1
\& export LIBGUESTFS_BACKEND=direct
.Ve
.PP
Якщо у вас є образ диска, Доступ до якого можна отримати за допомогою
\&\s-1HTTP/FTP,\s0 спробуйте його відкрити.
.PP
.Vb 1
\& guestfish \-\-ro \-i \-\-format=raw \-a http://www.example.com/диск.img
.Ve
.PP
Якщо використовуватимете \s-1SSH,\s0 вам слід належним чином налаштувати ssh-agent,
щоб для входу до віддаленої машини не довелося вводити пароль. Далі, має
спрацювати команда, подібна до такої:
.PP
.Vb 2
\& guestfish \-\-ro \-i \-\-format=raw \e
\&   \-a ssh://remote.example.com/шлях/до/диск.img
.Ve
.PP
Якщо ви отримуєте повідомлення про помилку, спробуйте увімкнути діагностику
(додати \f(CW\*(C`\-v\*(C'\fR до рядка команди). Також слід переконатися, що програма
\&\fBlibguestfs\-test\-tool\fR\|(1) здатна працювати.
.SS "Запуск virt-alignment-scan на усіх ваших гостьових системах."
.IX Subsection "Запуск virt-alignment-scan на усіх ваших гостьових системах."
Запустіть \fBvirt\-alignment\-scan\fR\|(1) на гостьових системах або образах
дисків:
.PP
.Vb 1
\& virt\-alignment\-scan \-a /шлях/до/образу
.Ve
.PP
або:
.PP
.Vb 1
\& virt\-alignment\-scan \-d Guest
.Ve
.PP
Чи відповідає звіт щодо вирівнювання справжньому вирівнюванню розділів
гостьової системи?
.SS "Запуск virt-cat для деяких файлів у гостьових системах."
.IX Subsection "Запуск virt-cat для деяких файлів у гостьових системах."
\&\fBvirt\-cat\fR\|(1) може показувати файли у гостьових системах. Для гостьової
системи Linux можете спробувати таку команду:
.PP
.Vb 1
\& virt\-cat LinuxGuest /etc/passwd
.Ve
.PP
Нещодавно реалізованою можливістю є підтримка шляхів у Windows. Приклад:
.PP
.Vb 1
\& virt\-cat WindowsGuest \*(Aqc:\ewindows\ewin.ini\*(Aq
.Ve
.PP
Ще потрібнішими будуть результати, якщо у вас є гостьова система Windows із
декількома дисками. Чи працюють як слід шляхи \f(CW\*(C`D:\*(C'\fR, \f(CW\*(C`E:\*(C'\fR тощо?
.SS "\fB*\fP Копіювати файли до \fBвимкненої\fP гостьової системи."
.IX Subsection "* Копіювати файли до вимкненої гостьової системи."
\&\fBvirt\-copy\-in\fR\|(1) може рекурсивно копіювати файли і каталоги до гостьової
системи або образу диска.
.PP
.Vb 1
\& virt\-copy\-in \-d Guest /etc /tmp
.Ve
.PP
Ця команда має скопіювати локальний каталог \fI/etc\fR до \fI/tmp/etc\fR у
гостьовій системі (рекурсивно). Чи можете ви бачити усі скопійовані файли і
каталоги після завантаження гостьової системи?
.PP
Завершіть роботу гостьової системи і спробуйте скопіювати декілька файлів і
каталогів:
.PP
.Vb 1
\& virt\-copy\-in \-d Guest /home /etc/issue /tmp
.Ve
.SS "Копіювання якихось файлів з гостьової системи."
.IX Subsection "Копіювання якихось файлів з гостьової системи."
\&\fBvirt\-copy\-out\fR\|(1) може рекурсивно копіювати файли і каталоги з гостьової
системи або образу диска.
.PP
.Vb 1
\& virt\-copy\-out \-d Guest /home .
.Ve
.PP
Зауважте, що завершальний пробіл і крапка у команді не є друкарською
помилкою.
.PP
Це має скопіювати \fI/home\fR з гостьової системи до поточного каталогу.
.SS "Виконайте virt-df."
.IX Subsection "Виконайте virt-df."
\&\fBvirt\-df\fR\|(1) показує список даних щодо простору на диску. Віддайте команду:
.PP
.Vb 1
\& virt\-df
.Ve
.PP
Ви можете порівняти результати виконання цієї команди із результатами
виконання \fBdf\fR\|(1) всередині гостьової системи, але з урахуванням декількох
особливостей:
.IP "\(bu" 4
Гостьова система має бути бездіяльною.
.IP "\(bu" 4
Диски гостьової системи має бути синхронізовано за допомогою \fBsync\fR\|(1).
.IP "\(bu" 4
Будь\-яка дія, зокрема завантаження гостьової системи, призведе до запису
файлів журналу і зміни числових даних.
.PP
Ми не гарантуємо, що числа будуть ідентичними навіть з урахуванням цих
обставин. Вони можуть бути подібними. Про ваду свідчитиме лише суттєва
відмінність у показаних числових даних.
.SS "Спроба імпортування виведених virt-df даних у форматі \s-1CSV\s0 до електронної таблиці або бази даних."
.IX Subsection "Спроба імпортування виведених virt-df даних у форматі CSV до електронної таблиці або бази даних."
Віддайте команду:
.PP
.Vb 1
\& virt\-df \-\-csv > /tmp/report.csv
.Ve
.PP
Тепер спробуйте завантажити ці дані до вашої улюбленої програми для
керування електронними таблицями або бази даних. Чи відтворюються результати
відповідним чином у електронній таблиці або базі даних?
.PP
http://www.postgresql.org/docs/8.1/static/sql\-copy.html
http://dev.mysql.com/doc/refman/5.1/en/load\-data.html
.SS "\fB*\fP Редагування файла у \fBвимкненій\fP гостьовій системі."
.IX Subsection "* Редагування файла у вимкненій гостьовій системі."
Програма \fBvirt\-edit\fR\|(1) здатна редагувати файли усередині гостьових
систем. Спробуйте цю команду на гостьовій системі \s-1RHEL\s0 або Fedora:
.PP
.Vb 1
\& virt\-edit LinuxGuest /etc/sysconfig/network
.Ve
.PP
У інших гостьових системах Linux спробуйте редагувати інші файли, наприклад
такі:
.PP
.Vb 1
\& virt\-edit LinuxGuest /etc/motd
.Ve
.PP
Чи можна побачити зміни у гостьовій системі після її завантаження?
.SS "Показ файлових систем, розділів, логічних томів у гостьовій системі."
.IX Subsection "Показ файлових систем, розділів, логічних томів у гостьовій системі."
Програмою \fBvirt\-filesystems\fR\|(1) можна скористатися для перегляду файлових
систем у гостьовій системі. Спробуйте цю команду на будь\-якому образі диска
або гостьовій системі:
.PP
.Vb 1
\& virt\-filesystems \-a /шлях/до/образу \-\-all \-\-long \-h
.Ve
.PP
або:
.PP
.Vb 1
\& virt\-filesystems \-d Guest \-\-all \-\-long \-h
.Ve
.PP
Чи збігаються результати із тими, які можна бачити у гостьовій системі?
.SS "Запустіть virt-inspector для всіх ваших гостьових систем."
.IX Subsection "Запустіть virt-inspector для всіх ваших гостьових систем."
Скористайтеся \fBvirt\-inspector\fR\|(1) для отримання звіту щодо усіх ваших
гостьових систем або образів дисків:
.PP
.Vb 1
\& virt\-inspector \-a /шлях/до/образу | less
.Ve
.PP
або:
.PP
.Vb 1
\& virt\-inspector \-d Guest | less
.Ve
.PP
Чи відповідають результати тим, які насправді є у гостьовій системі?
.PP
Якщо у вас є нетипова гостьова система (давній дистрибутив Linux, свіжа
версія Windows), чи розпізнає її virt-inspector? Якщо ні, ймовірно, це вада
у програмі.
.SS "Перевірка можливостей аудиту virt-ls на усіх ваших гостьових системах."
.IX Subsection "Перевірка можливостей аудиту virt-ls на усіх ваших гостьових системах."
Показати список всіх програм з setuid або setgid у віртуальній машині Linux:
.PP
.Vb 1
\& virt\-ls \-lR \-d Guest / | grep \*(Aq^\- [42]\*(Aq
.Ve
.PP
Показати список всіх каталогів з відкритим для всіх доступом на запис у
віртуальній машині Linux:
.PP
.Vb 1
\& virt\-ls \-lR \-d Guest / | grep \*(Aq^d ...7\*(Aq
.Ve
.PP
Показати список всіх сокетів доменів Unix у віртуальній машині Linux:
.PP
.Vb 1
\& virt\-ls \-lR \-d Guest / | grep \*(Aq^s\*(Aq
.Ve
.PP
Показати список усіх звичайних файлів, назви яких завершуються на «.png»:
.PP
.Vb 1
\& virt\-ls \-lR \-d Guest / | grep \-i \*(Aq^\-.*\e.png$\*(Aq
.Ve
.PP
Щоб переглянути список файлів у домашніх каталогах, розмір яких перевищує 10
МБ:
.PP
.Vb 1
\& virt\-ls \-lR \-d Guest /home | awk \*(Aq$3 > 10*1024*1024\*(Aq
.Ve
.PP
Знайти всі об’єкти, які було змінено протягом попередніх 7 днів:
.PP
.Vb 1
\& virt\-ls \-lR \-d Guest \-\-time\-days / | awk \*(Aq$6 <= 7\*(Aq
.Ve
.PP
Знайти звичайні файли, зміни до яких було внесено протягом попередніх 24
годин:
.PP
.Vb 1
\& virt\-ls \-lR \-d Guest \-\-time\-days / | grep \*(Aq^\-\*(Aq | awk \*(Aq$6 < 1\*(Aq
.Ve
.PP
Чи збігаються результати із тими, які можна бачити у гостьовій системі?
.SS "Створення образу диска з архіву tar."
.IX Subsection "Створення образу диска з архіву tar."
Скористайтеся \fBvirt\-make\-fs\fR\|(1) для створення образу диска з будь\-якого
архіву tar, який у вас є:
.PP
.Vb 1
\& virt\-make\-fs \-\-partition=mbr \-\-type=vfat /десь/якийсь.tar.gz образ_результат.img
.Ve
.PP
Додайте «образ_результат.img» як звичайний (raw) диск до наявної гостьової
системи. Перевірте, чи бачить гостьова система файли. Цей тест зокрема
корисний, якщо ви спробуєте зробити це із гостьовою системою Windows.
.PP
Спробуйте інші схеми поділу на диски, наприклад \fI\-\-partition=gpt\fR.
.PP
Спробуйте інші формати файлових систем, наприклад \fI\-\-type=ntfs\fR,
\&\fI\-\-type=ext2\fR.
.SS "\fB*\fP Запуск virt-rescue для обробки \fBвимкненого\fP образу диска або гостьової системи."
.IX Subsection "* Запуск virt-rescue для обробки вимкненого образу диска або гостьової системи."
Скористайтеся \fBvirt\-rescue\fR\|(1) для інспектування, порятунку або відновлення
\&\fBвимкненої\fR гостьової системи або образу диска:
.PP
.Vb 1
\& virt\-rescue \-a /шлях/до/образу.img
.Ve
.PP
або:
.PP
.Vb 1
\& virt\-rescue \-d Guest
.Ve
.PP
Чи можна скористатися звичайними командами оболонки для вивчення гостьової
системи?
.SS "\fB*\fP Зміна розмірів ваших гостьових систем."
.IX Subsection "* Зміна розмірів ваших гостьових систем."
Скористайтеся \fBvirt\-resize\fR\|(1) для надання гостьовій системі додаткового
місця. Наприклад, якщо образ диска менший за 30 ГБ, збільште його до 30 ГБ
такими командами:
.PP
.Vb 4
\& truncate \-s 30G новий_диск.img
\& virt\-filesystems \-a /шлях/до/старий_диск.img \-\-all \-\-long \-h
\& virt\-resize /шлях/до/старий_диск.img новий_диск.img \-\-expand /dev/sda1
\& qemu\-kvm \-m 1024 \-hda новий_диск.img
.Ve
.PP
Чи завантажується після цього гостьова система? Спробуйте розширити інші
розділи.
.SS "\fB*\fP Ущільнення диска у гостьовій системі."
.IX Subsection "* Ущільнення диска у гостьовій системі."
За допомогою \fBvirt\-sparsify\fR\|(1) зменшіть образ диска:
.PP
.Vb 1
\& virt\-sparsify /шлях/до/старий_диск.img новий_диск.img
.Ve
.PP
Чи можна завантажити \fIновий_диск.img\fR після ущільнення? Чи є диск\-результат
меншим (скористайтеся \f(CW\*(C`du\*(C'\fR, щоб перевірити це)?
.SS "Збирання і завантаження гостьової системи"
.IX Subsection "Збирання і завантаження гостьової системи"
За допомогою \fBvirt\-builder\fR\|(1) виберіть гостьову систему зі списку:
.PP
.Vb 1
\& virt\-builder \-l
.Ve
.PP
зберіть її:
.PP
.Vb 1
\& virt\-builder \-o диск.img [версія операційної системи з наведеного вище списку]
.Ve
.PP
і завантажте її:
.PP
.Vb 1
\& qemu\-kvm \-cpu host \-m 2048 \-drive file=диск.img,format=raw
.Ve
.PP
Чи завантажується система?
.SS "\fB*\fP Виконання «sysprep» для \fBвимкненої\fP гостьової системи Linux."
.IX Subsection "* Виконання «sysprep» для вимкненої гостьової системи Linux."
\&\fBЗауважте\fR, ця дія насправді може зашкодити наявній гостьовій системі, отже
варто створити клон гостьової системи, перш ніж намагатися виконати
тестування.
.PP
.Vb 1
\& virt\-sysprep \-\-hostname newhost.example.com \-a /шлях/до/диск.img
.Ve
.PP
Чи успішно виконано sysprep? Які зміни внесено після завантаження і чи були
вони успішними?
.SS "Створення дампу реєстру Windows з ваших гостьових систем Windows."
.IX Subsection "Створення дампу реєстру Windows з ваших гостьових систем Windows."
Скористайтеся \fBvirt\-win\-reg\fR\|(1) для створення дампу реєстру Windows з
наявних у вас гостьових систем Windows.
.PP
.Vb 2
\& virt\-win\-reg \-\-unsafe\-printable\-strings WindowsGuest \*(AqHKLM\eSoftware\*(Aq |
\&   less
\&
\& virt\-win\-reg \-\-unsafe\-printable\-strings WindowsGuest \*(AqHKLM\eSystem\*(Aq |
\&   less
.Ve
.PP
Чи відповідають отримані дані тому, що можна побачити за допомогою
\&\f(CW\*(C`regedit\*(C'\fR у гостьовій системі?
.PP
Нещодавно реалізованою можливістю є можливість створення дампів реєстрів
користувачів. Отже, вам слід перевірити і її, замінивши рядок \fIкористувач\fR
на ім'я локального користувача у гостьовій системі:
.PP
.Vb 2
\& virt\-win\-reg \-\-unsafe\-printable\-strings WindowsGuest \*(AqHKEY_USERS\eкористувач\*(Aq |
\&   less
.Ve
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fBguestfs\fR\|(3), \fBguestfish\fR\|(1), \fBguestfs\-examples\fR\|(3),
http://libguestfs.org/.
.SH "АВТОРИ"
.IX Header "АВТОРИ"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
© Red Hat Inc., 2011–2012
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fBlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
