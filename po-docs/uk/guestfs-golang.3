.\" Automatically generated by Podwrapper::Man 1.40.2 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "guestfs-golang 3"
.TH guestfs-golang 3 "2019-02-07" "libguestfs-1.40.2" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
guestfs-golang — як використовувати libguestfs з Go
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& import "libguestfs.org/guestfs"
\& 
\& g, errno := guestfs.Create ()
\& if errno != nil {
\&     panic (fmt.Sprintf ("could not create handle: %s", errno))
\& }
\& defer g.Close ()
\& if err := g.Add_drive ("test.img"); err != nil {
\&     panic (err)
\& }
\& if err := g.Launch (); err != nil {
\&     panic (err)
\& }
\& if err := g.Shutdown (); err != nil {
\&     panic (err)
\& }
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
На цій сторінці підручника наведено документацію щодо викликів libguestfs з
коду мовою програмування Go. На сторінці задокументовано відмінності від
програмного інтерфейсу C та подано декілька прикладів. Якщо ви не дуже
знайомі із користуванням libguestfs, вам також слід прочитати підручник з
\&\fBguestfs\fR\|(3).
.SS "ІМПОРТУВАННЯ МОДУЛЯ"
.IX Subsection "ІМПОРТУВАННЯ МОДУЛЯ"
Модуль називається \f(CW\*(C`guestfs\*(C'\fR. Повна назва пакунка для імпортування —
\&\f(CW\*(C`libguestfs.org/guestfs\*(C'\fR.
.SS "СТВОРЕННЯ І ЗАКРИТТЯ ДЕСКРИПТОРА"
.IX Subsection "СТВОРЕННЯ І ЗАКРИТТЯ ДЕСКРИПТОРА"
Скористайтеся \f(CW\*(C`guestfs.Create\*(C'\fR або \f(CW\*(C`guestfs.Create_flags\*(C'\fR для створення
дескриптора. Дескриптор буде закрито неявним чином під час збирання
сміття. Втім, ймовірно, непогано було б закривати його явним чином шляхом
виклику \f(CW\*(C`g.Close ()\*(C'\fR або відклавши ту саму команду.
.SS "ПОМИЛКИ"
.IX Subsection "ПОМИЛКИ"
\&\f(CW\*(C`guestfs.Create\*(C'\fR і \f(CW\*(C`guestfs.Create_flags\*(C'\fR повертають простий \f(CW*error\fR,
який насправді є простим \f(CW\*(C`errno\*(C'\fR з C, загорнутим у відповідну структуру
golang.
.PP
Усі інші виклики повертають \f(CW*GuestfsError\fR, яка є (якщо вона непорожня)
ширшою структурою, яка містить рядок помилки від libguestfs, номер помилки
(якщо доступний) та дані щодо дії, яка призвела до помилки. Ці дані також
можна перетворити на рядок для показу.
.SS "ОБМЕЖЕННЯ"
.IX Subsection "ОБМЕЖЕННЯ"
.IP "\(bu" 4
Немає підтримки подій (див. \*(L"ПОДІЇ\*(R" in \fBguestfs\fR\|(3)).
.IP "\(bu" 4
\&\s-1UUID\s0 не повертаються у структурах.
.SH "ПРИКЛАД 1. СТВОРЕННЯ ОБРАЗУ ДИСКА"
.IX Header "ПРИКЛАД 1. СТВОРЕННЯ ОБРАЗУ ДИСКА"
\&\f(CW@EXAMPLE1\fR@
.SH "ПРИКЛАД 2. ПЕРЕВІРКА ОБРАЗУ ДИСКА ВІРТУАЛЬНОЇ МАШИНИ"
.IX Header "ПРИКЛАД 2. ПЕРЕВІРКА ОБРАЗУ ДИСКА ВІРТУАЛЬНОЇ МАШИНИ"
\&\f(CW@EXAMPLE2\fR@
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fBguestfs\fR\|(3), \fBguestfs\-examples\fR\|(3), \fBguestfs\-erlang\fR\|(3),
\&\fBguestfs\-gobject\fR\|(3), \fBguestfs\-java\fR\|(3), \fBguestfs\-lua\fR\|(3),
\&\fBguestfs\-ocaml\fR\|(3), \fBguestfs\-perl\fR\|(3), \fBguestfs\-python\fR\|(3),
\&\fBguestfs\-recipes\fR\|(1), \fBguestfs\-ruby\fR\|(3), http://www.golang.org/,
http://libguestfs.org/.
.SH "АВТОРИ"
.IX Header "АВТОРИ"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
© Red Hat Inc., 2013
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fBlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
