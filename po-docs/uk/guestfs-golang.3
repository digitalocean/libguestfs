.\" Automatically generated by Podwrapper::Man 1.38.0 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "guestfs-golang 3"
.TH guestfs-golang 3 "2018-02-09" "libguestfs-1.38.0" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
guestfs-golang \- How to use libguestfs from Go
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& import "libguestfs.org/guestfs"
\& 
\& g, errno := guestfs.Create ()
\& if errno != nil {
\&     panic (fmt.Sprintf ("could not create handle: %s", errno))
\& }
\& defer g.Close ()
\& if err := g.Add_drive ("test.img"); err != nil {
\&     panic (err)
\& }
\& if err := g.Launch (); err != nil {
\&     panic (err)
\& }
\& if err := g.Shutdown (); err != nil {
\&     panic (err)
\& }
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
This manual page documents how to call libguestfs from the Go programming
language.  This page just documents the differences from the C \s-1API\s0 and gives
some examples.  If you are not familiar with using libguestfs, you also need
to read \fBguestfs\fR\|(3).
.SS "ІМПОРТУВАННЯ МОДУЛЯ"
.IX Subsection "ІМПОРТУВАННЯ МОДУЛЯ"
The module is called \f(CW\*(C`guestfs\*(C'\fR.  The full package name to import is
\&\f(CW\*(C`libguestfs.org/guestfs\*(C'\fR.
.SS "СТВОРЕННЯ І ЗАКРИТТЯ ДЕСКРИПТОРА"
.IX Subsection "СТВОРЕННЯ І ЗАКРИТТЯ ДЕСКРИПТОРА"
Use either \f(CW\*(C`guestfs.Create\*(C'\fR or \f(CW\*(C`guestfs.Create_flags\*(C'\fR to create the
handle.  The handle is closed implicitly if it is garbage collected.
However it is probably a good idea to close it explicitly, either by calling
\&\f(CW\*(C`g.Close ()\*(C'\fR or by deferring the same.
.SS "ПОМИЛКИ"
.IX Subsection "ПОМИЛКИ"
\&\f(CW\*(C`guestfs.Create\*(C'\fR and \f(CW\*(C`guestfs.Create_flags\*(C'\fR return a simple \f(CW*error\fR,
which is really just a C \f(CW\*(C`errno\*(C'\fR wrapped up in the appropriate golang
struct.
.PP
All other calls return a \f(CW*GuestfsError\fR which (if non-nil) is a richer
struct that contains the error string from libguestfs, the errno (if
available) and the operation which failed.  This can also be converted to a
string for display.
.SS "ОБМЕЖЕННЯ"
.IX Subsection "ОБМЕЖЕННЯ"
.IP "\(bu" 4
Немає підтримки подій (див. \*(L"ПОДІЇ\*(R" in \fBguestfs\fR\|(3)).
.IP "\(bu" 4
UUIDs are not returned in structures.
.SH "ПРИКЛАД 1. СТВОРЕННЯ ОБРАЗУ ДИСКА"
.IX Header "ПРИКЛАД 1. СТВОРЕННЯ ОБРАЗУ ДИСКА"
\&\f(CW@EXAMPLE1\fR@
.SH "ПРИКЛАД 2. ПЕРЕВІРКА ОБРАЗУ ДИСКА ВІРТУАЛЬНОЇ МАШИНИ"
.IX Header "ПРИКЛАД 2. ПЕРЕВІРКА ОБРАЗУ ДИСКА ВІРТУАЛЬНОЇ МАШИНИ"
\&\f(CW@EXAMPLE2\fR@
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fBguestfs\fR\|(3), \fBguestfs\-examples\fR\|(3), \fBguestfs\-erlang\fR\|(3),
\&\fBguestfs\-gobject\fR\|(3), \fBguestfs\-java\fR\|(3), \fBguestfs\-lua\fR\|(3),
\&\fBguestfs\-ocaml\fR\|(3), \fBguestfs\-perl\fR\|(3), \fBguestfs\-python\fR\|(3),
\&\fBguestfs\-recipes\fR\|(1), \fBguestfs\-ruby\fR\|(3), http://www.golang.org/,
http://libguestfs.org/.
.SH "АВТОРИ"
.IX Header "АВТОРИ"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
© Red Hat Inc., 2013
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fBlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
