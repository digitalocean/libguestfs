
=head1 НАЗВА

guestfs-testing — тестування libguestfs вручну, ви можете допомогти!

=head1 ОПИС

На цій сторінці наведено настанови щодо тестування libguestfs вручну. У всіх
користувачів бібліотеки різні комбінації платформ, обладнання та гостьових
систем, тому таке тестування дуже важливе. Наперед вдячні за вашу допомогу!

Тести, позначені символом B<*> (зірочкою) можуть B<знищити дані>, якщо ви не
будете обережними. Решта тестів є безпечними — вони не вносять жодних змін
до важливих даних.

Для виконання цих перевірок B<потрібна libguestfs E<ge> 1.22>.

Повідомляти про виявлені вади можна за цим посиланням:

L<https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools>

або надішліть допис до списку листування (можете B<не> підписуватися на
список листування, якщо не хочете. Втім, для непідписаних користувачів
повідомлення з'являються у списку із затримкою, потрібною на модерацію.):

L<https://www.redhat.com/mailman/listinfo/libguestfs>

=head1 ТЕСТИ

=head2 Виконання libguestfs-test-tool

Віддайте команду:

 libguestfs-test-tool

Ця команда виконує дуже просте і неруйнівне тестування того, чи є libguestfs
працездатною на базовому рівні. Команду не потрібно віддавати від імені
користувача root.

Якщо I<не буде> виведено рядок C<===== TEST FINISHED OK =====>, повідомте
про це, як про ваду. Дуже важливим є включення до вашого повідомлення про
ваду B<повного, нередагованого> масиву виведених даних
C<libguestfs-test-tool>. Див. розділ L</ВАДИ> наприкінці цієї сторінки
підручника.

=head2 Перевірка використовуваного прискорення KVM.

Якщо у вашій основній системі передбачено апаратне прискорення
віртуалізації, із «гарячим» кешем libguestfs повинна запускатися за декілька
секунд. Віддайте вказану нижче команду декілька разів:

 time guestfish -a /dev/null run

After a few runs, the time should settle down to a few seconds (under 3
seconds on fast 64 bit hardware).

Якщо вказана вище команда не працюватиме, скористайтеся
L<libguestfs-test-tool(1)>.

=head2 Визначення використовуваних версій libguestfs, qemu, libvirt тощо.

Ознайомтеся із виведеними C<libguestfs-test-tool> даними і перевірте:

=over 4

=item *

Яка версія libguestfs використовується? На початку виведених даних ви
побачите такий рядок:

 library version: 1.22.0fedora=19,release=1.fc19,libvirt

=item *

Чи використовується libvirt? Визначити це можна, пошукавши модуль обробки
(backend):

 guestfs_get_backend: direct

або:

 guestfs_get_backend: libvirt

=item *

Яка версія qemu використовується? Дані версії може бути виведено ось так:

 libguestfs: qemu version 1.5

=item *

Яке ядро використовується? L<supermin(1)> намагається використатися
найсвіжіше ядро зі встановлених у вашій системі. Ви можете побачити дані
щодо версії у виведенні базової системи. Приклад:

 [    0.000000] Linux version 3.9.2-200.fc18.x86_64 [...]

=back

=head2 Спроба відкриття локального образу гостьової системи за допомогою guestfish.

Для цього тесту можна скористатися будь-яким образом диска гостьової
системи. Не забудьте скористатися параметром C<--ro>, щоб програма
L<guestfish(1)> відкрила образ диска у режимі лише читання.

 guestfish --ro -a /шлях/до/образу.диска -i

Якщо команду буде успішно виконано, вона має вивести назву гостьової
операційної системи і відкрити для вас запит щодо команди guestfish
C<E<gt>E<lt>fsE<gt>>. Ви можете скористатися командами guestfish, подібними
до S<C<ll />>, щоб зазирнути всередину образу диска. Щоб завершити сеанс
дослідження гостьової системи, введіть команду C<exit>.

Якщо ви отримуєте повідомлення про помилку, спробуйте увімкнути діагностику
(додати C<-v> до рядка команди). Також слід переконатися, що програма
L<libguestfs-test-tool(1)> здатна працювати.

=head2 Спроба відкриття віддаленого образу гостьової системи за допомогою
guestfish.

Ймовірно, вам також доведеться вимкнути libvirt встановленням такої змінної
середовища:

 export LIBGUESTFS_BACKEND=direct

Якщо у вас є образ диска, Доступ до якого можна отримати за допомогою
HTTP/FTP, спробуйте його відкрити.

 guestfish --ro -i --format=raw -a http://www.example.com/диск.img

Якщо використовуватимете SSH, вам слід належним чином налаштувати ssh-agent,
щоб для входу до віддаленої машини не довелося вводити пароль. Далі, має
спрацювати команда, подібна до такої:

 guestfish --ro -i --format=raw \
   -a ssh://remote.example.com/шлях/до/диск.img

Якщо ви отримуєте повідомлення про помилку, спробуйте увімкнути діагностику
(додати C<-v> до рядка команди). Також слід переконатися, що програма
L<libguestfs-test-tool(1)> здатна працювати.

=head2 Запуск virt-alignment-scan на усіх ваших гостьових системах.

Запустіть L<virt-alignment-scan(1)> на гостьових системах або образах
дисків:

 virt-alignment-scan -a /шлях/до/образу

або:

 virt-alignment-scan -d Guest

Чи відповідає звіт щодо вирівнювання справжньому вирівнюванню розділів
гостьової системи?

=head2 Запуск virt-cat для деяких файлів у гостьових системах.

L<virt-cat(1)> може показувати файли у гостьових системах. Для гостьової
системи Linux можете спробувати таку команду:

 virt-cat LinuxGuest /etc/passwd

Нещодавно реалізованою можливістю є підтримка шляхів у Windows. Приклад:

 virt-cat WindowsGuest 'c:\windows\win.ini'

Ще потрібнішими будуть результати, якщо у вас є гостьова система Windows із
декількома дисками. Чи працюють як слід шляхи C<D:>, C<E:> тощо?

=head2 B<*> Копіювати файли до B<вимкненої> гостьової системи.

L<virt-copy-in(1)> може рекурсивно копіювати файли і каталоги до гостьової
системи або образу диска.

 virt-copy-in -d Guest /etc /tmp

Ця команда має скопіювати локальний каталог F</etc> до F</tmp/etc> у
гостьовій системі (рекурсивно). Чи можете ви бачити усі скопійовані файли і
каталоги після завантаження гостьової системи?

Завершіть роботу гостьової системи і спробуйте скопіювати декілька файлів і
каталогів:

 virt-copy-in -d Guest /home /etc/issue /tmp

=head2 Копіювання якихось файлів з гостьової системи.

L<virt-copy-out(1)> може рекурсивно копіювати файли і каталоги з гостьової
системи або образу диска.

 virt-copy-out -d Guest /home .

Зауважте, що завершальний пробіл і крапка у команді не є друкарською
помилкою.

Це має скопіювати F</home> з гостьової системи до поточного каталогу.

=head2 Виконайте virt-df.

L<virt-df(1)> показує список даних щодо простору на диску. Віддайте команду:

 virt-df

Ви можете порівняти результати виконання цієї команди із результатами
виконання L<df(1)> всередині гостьової системи, але з урахуванням декількох
особливостей:

=over 4

=item *

Гостьова система має бути бездіяльною.

=item *

Диски гостьової системи має бути синхронізовано за допомогою L<sync(1)>.

=item *

Будь-яка дія, зокрема завантаження гостьової системи, призведе до запису
файлів журналу і зміни числових даних.

=back

Ми не гарантуємо, що числа будуть ідентичними навіть з урахуванням цих
обставин. Вони можуть бути подібними. Про ваду свідчитиме лише суттєва
відмінність у показаних числових даних.

=head2 Спроба імпортування виведених virt-df даних у форматі CSV до електронної
таблиці або бази даних.

Віддайте команду:

 virt-df --csv > /tmp/report.csv

Тепер спробуйте завантажити ці дані до вашої улюбленої програми для
керування електронними таблицями або бази даних. Чи відтворюються результати
відповідним чином у електронній таблиці або базі даних?

L<http://www.postgresql.org/docs/8.1/static/sql-copy.html>
L<http://dev.mysql.com/doc/refman/5.1/en/load-data.html>

=head2 B<*> Редагування файла у B<вимкненій> гостьовій системі.

Програма L<virt-edit(1)> здатна редагувати файли усередині гостьових
систем. Спробуйте цю команду на гостьовій системі RHEL або Fedora:

 virt-edit LinuxGuest /etc/sysconfig/network

У інших гостьових системах Linux спробуйте редагувати інші файли, наприклад
такі:

 virt-edit LinuxGuest /etc/motd

Чи можна побачити зміни у гостьовій системі після її завантаження?

=head2 Показ файлових систем, розділів, логічних томів у гостьовій системі.

Програмою L<virt-filesystems(1)> можна скористатися для перегляду файлових
систем у гостьовій системі. Спробуйте цю команду на будь-якому образі диска
або гостьовій системі:

 virt-filesystems -a /шлях/до/образу --all --long -h

або:

 virt-filesystems -d Guest --all --long -h

Чи збігаються результати із тими, які можна бачити у гостьовій системі?

=head2 Запустіть virt-inspector для всіх ваших гостьових систем.

Скористайтеся L<virt-inspector(1)> для отримання звіту щодо усіх ваших
гостьових систем або образів дисків:

 virt-inspector -a /шлях/до/образу | less

або:

 virt-inspector -d Guest | less

Чи відповідають результати тим, які насправді є у гостьовій системі?

Якщо у вас є нетипова гостьова система (давній дистрибутив Linux, свіжа
версія Windows), чи розпізнає її virt-inspector? Якщо ні, ймовірно, це вада
у програмі.

=head2 Перевірка можливостей аудиту virt-ls на усіх ваших гостьових системах.

Показати список всіх програм з setuid або setgid у віртуальній машині Linux:

 virt-ls -lR -d Guest / | grep '^- [42]'

Показати список всіх каталогів з відкритим для всіх доступом на запис у
віртуальній машині Linux:

 virt-ls -lR -d Guest / | grep '^d ...7'

Показати список всіх сокетів доменів Unix у віртуальній машині Linux:

 virt-ls -lR -d Guest / | grep '^s'

Показати список усіх звичайних файлів, назви яких завершуються на «.png»:

 virt-ls -lR -d Guest / | grep -i '^-.*\.png$'

Щоб переглянути список файлів у домашніх каталогах, розмір яких перевищує 10
МБ:

 virt-ls -lR -d Guest /home | awk '$3 > 10*1024*1024'

Знайти всі об’єкти, які було змінено протягом попередніх 7 днів:

 virt-ls -lR -d Guest --time-days / | awk '$6 <= 7'

Знайти звичайні файли, зміни до яких було внесено протягом попередніх 24
годин:

 virt-ls -lR -d Guest --time-days / | grep '^-' | awk '$6 < 1'

Чи збігаються результати із тими, які можна бачити у гостьовій системі?

=head2 Створення образу диска з архіву tar.

Скористайтеся L<virt-make-fs(1)> для створення образу диска з будь-якого
архіву tar, який у вас є:

 virt-make-fs --partition=mbr --type=vfat /десь/якийсь.tar.gz образ_результат.img

Додайте «образ_результат.img» як звичайний (raw) диск до наявної гостьової
системи. Перевірте, чи бачить гостьова система файли. Цей тест зокрема
корисний, якщо ви спробуєте зробити це із гостьовою системою Windows.

Спробуйте інші схеми поділу на диски, наприклад I<--partition=gpt>.

Спробуйте інші формати файлових систем, наприклад I<--type=ntfs>,
I<--type=ext2>.

=head2 B<*> Запуск virt-rescue для обробки B<вимкненого> образу диска або гостьової
системи.

Скористайтеся L<virt-rescue(1)> для інспектування, порятунку або відновлення
B<вимкненої> гостьової системи або образу диска:

 virt-rescue -a /шлях/до/образу.img

або:

 virt-rescue -d Guest

Чи можна скористатися звичайними командами оболонки для вивчення гостьової
системи?

=head2 B<*> Зміна розмірів ваших гостьових систем.

Скористайтеся L<virt-resize(1)> для надання гостьовій системі додаткового
місця. Наприклад, якщо образ диска менший за 30 ГБ, збільште його до 30 ГБ
такими командами:

 truncate -s 30G новий_диск.img
 virt-filesystems -a /шлях/до/старий_диск.img --all --long -h
 virt-resize /шлях/до/старий_диск.img новий_диск.img --expand /dev/sda1
 qemu-kvm -m 1024 -hda новий_диск.img

Чи завантажується після цього гостьова система? Спробуйте розширити інші
розділи.

=head2 B<*> Ущільнення диска у гостьовій системі.

За допомогою L<virt-sparsify(1)> зменшіть образ диска:

 virt-sparsify /шлях/до/старий_диск.img новий_диск.img

Чи можна завантажити F<новий_диск.img> після ущільнення? Чи є диск-результат
меншим (скористайтеся C<du>, щоб перевірити це)?

=head2 Збирання і завантаження гостьової системи

За допомогою L<virt-builder(1)> виберіть гостьову систему зі списку:

 virt-builder -l

зберіть її:

 virt-builder -o диск.img [версія операційної системи з наведеного вище списку]

і завантажте її:

 qemu-kvm -cpu host -m 2048 -drive file=диск.img,format=raw

Чи завантажується система?

=head2 B<*> Виконання «sysprep» для B<вимкненої> гостьової системи Linux.

B<Зауважте>, ця дія насправді може зашкодити наявній гостьовій системі, отже
варто створити клон гостьової системи, перш ніж намагатися виконати
тестування.

 virt-sysprep --hostname newhost.example.com -a /шлях/до/диск.img

Чи успішно виконано sysprep? Які зміни внесено після завантаження і чи були
вони успішними?

=head2 Створення дампу реєстру Windows з ваших гостьових систем Windows.

Скористайтеся L<virt-win-reg(1)> для створення дампу реєстру Windows з
наявних у вас гостьових систем Windows.

 virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\Software' |
   less

 virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\System' |
   less

Чи відповідають отримані дані тому, що можна побачити за допомогою
C<regedit> у гостьовій системі?

Нещодавно реалізованою можливістю є можливість створення дампів реєстрів
користувачів. Отже, вам слід перевірити і її, замінивши рядок I<користувач>
на ім'я локального користувача у гостьовій системі:

 virt-win-reg --unsafe-printable-strings WindowsGuest 'HKEY_USERS\користувач' |
   less

=head1 ТАКОЖ ПЕРЕГЛЯНЬТЕ

L<guestfs(3)>, L<guestfish(1)>, L<guestfs-examples(3)>,
L<http://libguestfs.org/>.

=head1 АВТОРИ

Richard W.M. Jones (C<rjones at redhat dot com>)

=head1 АВТОРСЬКІ ПРАВА

© Red Hat Inc., 2011–2012

