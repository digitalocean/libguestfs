.\" Automatically generated by Podwrapper::Man 1.21.37 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "virt-alignment-scan 1"
.TH virt-alignment-scan 1 "2013-05-02" "libguestfs-1.21.37" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "НАЗВА"
.IX Header "НАЗВА"
virt-alignment-scan — перевірити вирівнювання розділів віртуальної машини
.SH "КОРОТКИЙ ОПИС"
.IX Header "КОРОТКИЙ ОПИС"
.Vb 1
\& virt\-alignment\-scan [\-\-параметри] \-d назва_домену
\&
\& virt\-alignment\-scan [\-\-параметри] \-a диск.img [\-a диск.img ...]
\&
\& virt\-alignment\-scan [\-\-параметри]
.Ve
.SH "ОПИС"
.IX Header "ОПИС"
Під час встановлення застарілих операційних систем засоби розподілу диска
можуть розташувати розділ на секторі з помилковим вирівнюванням відносно
системи зберігання даних (типово, перший розділ починається з сектора
\&\f(CW63\fR). Розділи з помилковим вирівнюванням можуть призвести до неоптимальної
кількості запитів щодо виведення та введення даних від операційної системи.
.PP
Програма virt-alignment-scan виконує перевірку вирівнювання розділів у
віртуальних машинах та образів дисків і повідомляє вам, якщо буде виявлено
помилки вирівнювання.
.PP
У поточній версії не передбачено програми для виправлення помилок,
пов’язаних з вирівнюванням. Ви можете лише перевстановити гостьову
операційну систему. У цьому документі можна знайти короткі описи помилок та
можливі шляхи усування цих помилок:
http://media.netapp.com/documents/tr\-3747.pdf
.SH "ВИВЕДЕННЯ"
.IX Header "ВИВЕДЕННЯ"
Щоб запустити цю програму безпосередньо для образу диска, скористайтеся
параметром \fI\-a\fR:
.PP
.Vb 2
\& $ virt\-alignment\-scan \-a winxp.img
\& /dev/sda1        32256          512    bad (alignment < 4K)
\&
\& $ virt\-alignment\-scan \-a fedora16.img
\& /dev/sda1      1048576         1024K   ok
\& /dev/sda2      2097152         2048K   ok
\& /dev/sda3    526385152         2048K   ok
.Ve
.PP
Щоб запустити програму на гостьовій системі, відомій libvirt, скористайтеся
параметром \fI\-d\fR і, можливо, параметром \fI\-c\fR:
.PP
.Vb 3
\& # virt\-alignment\-scan \-d RHEL5
\& /dev/sda1        32256          512    bad (alignment < 4K)
\& /dev/sda2    106928640          512    bad (alignment < 4K)
\&
\& $ virt\-alignment\-scan \-c qemu:///system \-d Win7TwoDisks
\& /dev/sda1      1048576         1024K   ok
\& /dev/sda2    105906176         1024K   ok
\& /dev/sdb1        65536           64K   ok
.Ve
.PP
Щоб виконати сканування всіх доменів libvirt, віддайте команду
virt-alignment-scan без параметрів \fI\-a\fR та \fI\-d\fR.
.PP
.Vb 4
\& # virt\-alignment\-scan
\& F16x64:/dev/sda1      1048576         1024K   ok
\& F16x64:/dev/sda2      2097152         2048K   ok
\& F16x64:/dev/sda3    526385152         2048K   ok
.Ve
.PP
Дані буде виведено у форматі 4 або більшої кількості стовпчиків,
відокремлених пробілами. Якщо ви маєте намір обробляти ці дані якоюсь
програмою, до уваги слід брати лише перші 4 стовпчики. Ось ці стовпчики:
.IP "стовпчик 1" 4
.IX Item "стовпчик 1"
Назва пристрою і розділу (наприклад, \f(CW\*(C`/dev/sda1\*(C'\fR означає перший розділ на
першому блоковому пристрої).
.Sp
У пунктах списків всіх доменів libvirt (без вказаного параметра \fI\-a\fR або
\&\fI\-d\fR) записи у цьому стовпчику матимуть префікс назви libvirt або \s-1UUID\s0
(якщо вказано \fI\-\-uuid\fR). Приклад: \f(CW\*(C`WinXP:/dev/sda1\*(C'\fR
.IP "стовпчик 2" 4
.IX Item "стовпчик 2"
позиція початку розділу у байтах
.IP "стовпчик 3" 4
.IX Item "стовпчик 3"
вирівнювання у байтах або кілобайтах (наприклад \f(CW512\fR або \f(CW\*(C`4K\*(C'\fR)
.IP "стовпчик 4" 4
.IX Item "стовпчик 4"
\&\f(CW\*(C`ok\*(C'\fR, якщо вирівнювання є оптимальним з огляду на швидкодію, або \f(CW\*(C`bad\*(C'\fR,
якщо вирівнювання може призвести до проблем зі швидкодією
.IP "стовпчик 5 і далі" 4
.IX Item "стовпчик 5 і далі"
додаткові пояснення у довільному форматі.
.PP
Код виходу програми залежить від того, чи буде знайдено розділи з помилковим
вирівнюванням.  Див. розділ \*(L"СТАН ВИХОДУ\*(R" нижче.
.PP
Якщо вам потрібен лише код виходу без виведення даних, скористайтеся
параметром \fI\-q\fR.
.SH "ПАРАМЕТРИ"
.IX Header "ПАРАМЕТРИ"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Показати коротку довідку.
.IP "\fB\-a\fR файл" 4
.IX Item "-a файл"
.PD 0
.IP "\fB\-\-add\fR файл" 4
.IX Item "--add файл"
.PD
Додати \fIфайл\fR, який має бути образом диска з віртуальної машини.
.Sp
Формат образу диска визначається автоматично. Щоб перевизначити його і
примусово використати певний формат, скористайтеся параметром
\&\fI\-\-format=..\fR.
.IP "\fB\-a \s-1URI\s0\fR" 4
.IX Item "-a URI"
.PD 0
.IP "\fB\-\-add \s-1URI\s0\fR" 4
.IX Item "--add URI"
.PD
Add a remote disk.  See \*(L"\s-1ADDING\s0 \s-1REMOTE\s0 \s-1STORAGE\s0\*(R" in \fIguestfish\fR\|(1).
.IP "\fB\-c\fR адреса" 4
.IX Item "-c адреса"
.PD 0
.IP "\fB\-\-connect\fR адреса" 4
.IX Item "--connect адреса"
.PD
Якщо використовується libvirt, встановити з’єднання з вказаним \fI\s-1URI\s0\fR. Якщо
пропущено, з’єднання буде встановлено з типовим гіпервізором libvirt.
.Sp
Якщо вказати блокові пристрої гостьових систем безпосередньо (\fI\-a\fR),
libvirt не буде використовуватися взагалі.
.IP "\fB\-d\fR гість" 4
.IX Item "-d гість"
.PD 0
.IP "\fB\-\-domain\fR гість" 4
.IX Item "--domain гість"
.PD
Додати всі диски з вказаної гостьової системи libvirt. \s-1UUID\s0 доменів можна
використовувати замість назв.
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
The default for the \fI\-a\fR option is to auto-detect the format of the disk
image.  Using this forces the disk format for \fI\-a\fR options which follow on
the command line.  Using \fI\-\-format\fR with no argument switches back to
auto-detection for subsequent \fI\-a\fR options.
.Sp
Приклад:
.Sp
.Vb 1
\& virt\-alignment\-scan \-\-format=raw \-a disk.img
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \f(CW\*(C`disk.img\*(C'\fR.
.Sp
.Vb 1
\& virt\-cat \-\-format=raw \-a disk.img \-\-format \-a another.img file
.Ve
.Sp
примусове встановлення формату без обробки (без автоматичного визначення)
для \f(CW\*(C`disk.img\*(C'\fR і повернення до автоматичного визначення для \f(CW\*(C`another.img\*(C'\fR.
.Sp
If you have untrusted raw-format guest disk images, you should use this
option to specify the disk format.  This avoids a possible security problem
with malicious guests (\s-1CVE\-2010\-3851\s0).
.IP "\fB\-P\fR nr_threads" 4
.IX Item "-P nr_threads"
Since libguestfs 1.22, virt-alignment-scan is multithreaded and examines
guests in parallel.  By default the number of threads to use is chosen based
on the amount of free memory available at the time that virt-alignment-scan
is started.  You can force virt-alignment-scan to use at most \f(CW\*(C`nr_threads\*(C'\fR
by using the \fI\-P\fR option.
.Sp
Note that \fI\-P 0\fR means to autodetect, and \fI\-P 1\fR means to use a single
thread.
.IP "\fB\-q\fR" 4
.IX Item "-q"
.PD 0
.IP "\fB\-\-quiet\fR" 4
.IX Item "--quiet"
.PD
Не виводити ніяких даних. Просто встановити значення коду виходу
(див. \*(L"СТАН ВИХОДУ\*(R" нижче).
.IP "\fB\-\-uuid\fR" 4
.IX Item "--uuid"
Print UUIDs instead of names.  This is useful for following a guest even
when the guest is migrated or renamed, or when two guests happen to have the
same name.
.Sp
This option only applies when listing all libvirt domains (when no \fI\-a\fR or
\&\fI\-d\fR options are specified).
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Увімкнути докладний показ повідомлень з метою діагностики.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Показати дані щодо версії і завершити роботу.
.IP "\fB\-x\fR" 4
.IX Item "-x"
Увімкнути трасування викликів програмного інтерфейсу libguestfs.
.SH "РЕКОМЕНДОВАНЕ ВИРІВНЮВАННЯ"
.IX Header "РЕКОМЕНДОВАНЕ ВИРІВНЮВАННЯ"
Operating systems older than Windows 2008 and Linux before ca.2010 place the
first sector of the first partition at sector 63, with a 512 byte sector
size.  This happens because of a historical accident.  Drives have to report
a cylinder / head / sector (\s-1CHS\s0) geometry to the \s-1BIOS\s0.  The geometry is
completely meaningless on modern drives, but it happens that the geometry
reported always has 63 sectors per track.  The operating system therefore
places the first partition at the start of the second \*(L"track\*(R", at sector 63.
.PP
When the guest \s-1OS\s0 is virtualized, the host operating system and hypervisor
may prefer accesses aligned to one of:
.IP "\(bu" 4
512 байти
.Sp
if the host \s-1OS\s0 uses local storage directly on hard drive partitions, and the
hard drive has 512 byte physical sectors.
.IP "\(bu" 4
4 кілобайтів
.Sp
for local storage on new hard drives with 4Kbyte physical sectors; for
file-backed storage on filesystems with 4Kbyte block size; or for some types
of network-attached storage.
.IP "\(bu" 4
64 кілобайтів
.Sp
for high-end network-attached storage.  This is the optimal block size for
some NetApp hardware.
.IP "\(bu" 4
1 мегабайт
.Sp
див. \*(L"ВИРІВНЮВАННЯ РОЗДІЛІВ НА ПОЗНАЧКИ 1 МБ\*(R" нижче.
.PP
Partitions which are not aligned correctly to the underlying storage cause
extra I/O.  For example:
.PP
.Vb 8
\&                       розділ№63
\&                       +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-
\&                       |   блок файлової системи  |
\&                       |    гостьової системи     |
\& \-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-+\-\-\-
\&    |  блок основної системи  |  блок основної системи  |
\&    |                         |                         |
\& \-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-
.Ve
.PP
In this example, each time a 4K guest block is read, two blocks on the host
must be accessed (so twice as much I/O is done).  When a 4K guest block is
written, two host blocks must first be read, the old and new data combined,
and the two blocks written back (4x I/O).
.SS "\s-1LINUX\s0 \s-1HOST\s0 \s-1BLOCK\s0 \s-1AND\s0 I/O \s-1SIZE\s0"
.IX Subsection "LINUX HOST BLOCK AND I/O SIZE"
New versions of the Linux kernel expose the physical and logical block size,
and minimum and recommended I/O size.
.PP
For a typical consumer hard drive with 512 byte sectors:
.PP
.Vb 10
\& $ cat /sys/block/sda/queue/hw_sector_size
\& 512
\& $ cat /sys/block/sda/queue/physical_block_size
\& 512
\& $ cat /sys/block/sda/queue/logical_block_size
\& 512
\& $ cat /sys/block/sda/queue/minimum_io_size
\& 512
\& $ cat /sys/block/sda/queue/optimal_io_size
\& 0
.Ve
.PP
Для нових звичайних жорстких дисків з секторами у 4 кБ:
.PP
.Vb 10
\& $ cat /sys/block/sda/queue/hw_sector_size
\& 4096
\& $ cat /sys/block/sda/queue/physical_block_size
\& 4096
\& $ cat /sys/block/sda/queue/logical_block_size
\& 4096
\& $ cat /sys/block/sda/queue/minimum_io_size
\& 4096
\& $ cat /sys/block/sda/queue/optimal_io_size
\& 0
.Ve
.PP
Для NetApp \s-1LUN:\s0
.PP
.Vb 8
\& $ cat /sys/block/sdc/queue/logical_block_size
\& 512
\& $ cat /sys/block/sdc/queue/physical_block_size
\& 512
\& $ cat /sys/block/sdc/queue/minimum_io_size
\& 4096
\& $ cat /sys/block/sdc/queue/optimal_io_size
\& 65536
.Ve
.PP
The NetApp allows 512 byte accesses (but they will be very inefficient),
prefers a minimum 4K I/O size, but the optimal I/O size is 64K.
.PP
Щоб дізнатися більше про призначення цих чисел, ознайомтеся зі сторінкою
http://docs.redhat.com/docs/en\-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/newstorage\-iolimits.html
.PP
[Thanks to Matt Booth for providing 4K drive data.  Thanks to Mike Snitzer
for providing NetApp data and additional information.]
.SS "ВИРІВНЮВАННЯ РОЗДІЛІВ НА ПОЗНАЧКИ 1 МБ"
.IX Subsection "ВИРІВНЮВАННЯ РОЗДІЛІВ НА ПОЗНАЧКИ 1 МБ"
Microsoft picked 1 \s-1MB\s0 as the default alignment for all partitions starting
with Windows 2008 Server, and Linux has followed this.
.PP
Assuming 512 byte sectors in the guest, you will now see the first partition
starting at sector 2048, and subsequent partitions (if any)  will start at a
multiple of 2048 sectors.
.PP
1 \s-1MB\s0 alignment is compatible with all current alignment requirements (4K,
64K) and provides room for future growth in physical block sizes.
.SS "ВСТАНОВЛЕННЯ ВИРІВНЮВАННЯ"
.IX Subsection "ВСТАНОВЛЕННЯ ВИРІВНЮВАННЯ"
\&\fIvirt\-resize\fR\|(1) can change the alignment of the partitions of some
guests.  Currently it can fully align all the partitions of all Windows
guests, and it will fix the bootloader where necessary.  For Linux guests,
it can align the second and subsequent partitions, so the majority of \s-1OS\s0
accesses except at boot will be aligned.
.PP
Another way to correct partition alignment problems is to reinstall your
guest operating systems.  If you install operating systems from templates,
ensure these have correct partition alignment too.
.PP
For older versions of Windows, the following NetApp document contains useful
information: http://media.netapp.com/documents/tr\-3747.pdf
.PP
For Red Hat Enterprise Linux ≤ 5, use a Kickstart script that contains
an explicit \f(CW%pre\fR section that creates aligned partitions using
\&\fIparted\fR\|(8).  Do not use the Kickstart \f(CW\*(C`part\*(C'\fR command.  The NetApp
document above contains an example.
.SH "ЕКРАНУВАННЯ СИМВОЛІВ У ОБОЛОНЦІ"
.IX Header "ЕКРАНУВАННЯ СИМВОЛІВ У ОБОЛОНЦІ"
Libvirt guest names can contain arbitrary characters, some of which have
meaning to the shell such as \f(CW\*(C`#\*(C'\fR and space.  You may need to quote or
escape these characters on the command line.  See the shell manual page
\&\fIsh\fR\|(1) for details.
.SH "СТАН ВИХОДУ"
.IX Header "СТАН ВИХОДУ"
Ця програма повертає:
.IP "\(bu" 4
0
.Sp
успішне завершення, всі розділи вирівняно на ≥ 64 кБ для отримання
найкращої швидкодії
.IP "\(bu" 4
1
.Sp
під час сканування образу диска або гостьової системи сталася помилка
.IP "\(bu" 4
2
.Sp
successful exit, some partitions have alignment < 64K which can result
in poor performance on high end network storage
.IP "\(bu" 4
3
.Sp
successful exit, some partitions have alignment < 4K which can result in
poor performance on most hypervisors
.SH "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
.IX Header "ТАКОЖ ПЕРЕГЛЯНЬТЕ"
\&\fIguestfs\fR\|(3), \fIguestfish\fR\|(1), \fIvirt\-filesystems\fR\|(1), \fIvirt\-rescue\fR\|(1),
\&\fIvirt\-resize\fR\|(1), http://libguestfs.org/.
.SH "АВТОР"
.IX Header "АВТОР"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "АВТОРСЬКІ ПРАВА"
.IX Header "АВТОРСЬКІ ПРАВА"
© Red Hat Inc., 2011
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
