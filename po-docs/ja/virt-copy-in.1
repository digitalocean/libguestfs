.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "virt-copy-in 1"
.TH virt-copy-in 1 "2012-04-10" "libguestfs-1.16.16" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
virt-copy-in \- Copy files and directories into a virtual machine disk image.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& virt\-copy\-in \-a disk.img file|dir [file|dir ...] /destination
\&
\& virt\-copy\-in \-d domain file|dir [file|dir ...] /destination
.Ve
.SH "WARNING"
.IX Header "WARNING"
Using \f(CW\*(C`virt\-copy\-in\*(C'\fR on live virtual machines can be dangerous, potentially
causing disk corruption.  The virtual machine must be shut down before you
use this command.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`virt\-copy\-in\*(C'\fR copies files and directories from the local disk into a
virtual machine disk image or named libvirt domain.
.PP
You can give one of more filenames and directories on the command line.
Directories are copied in recursively.  The final parameter must be the
destination directory in the disk image which must be an absolute path
starting with a \f(CW\*(C`/\*(C'\fR character.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Update \f(CW\*(C`/etc/resolv.conf\*(C'\fR in a guest:
.PP
.Vb 1
\& virt\-copy\-in \-d MyGuest resolv.conf /etc
.Ve
.PP
Upload a home directory to a guest:
.PP
.Vb 1
\& virt\-copy\-in \-d MyGuest skel /home
.Ve
.SH "JUST A SHELL SCRIPT WRAPPER AROUND GUESTFISH"
.IX Header "JUST A SHELL SCRIPT WRAPPER AROUND GUESTFISH"
This command is just a simple shell script wrapper around the
\&\fIguestfish\fR\|(1) \f(CW\*(C`copy\-in\*(C'\fR command.  For anything more complex than a
trivial copy, you are probably better off using guestfish directly.
.SH "OPTIONS"
.IX Header "OPTIONS"
Since the shell script just passes options straight to guestfish, read
\&\fIguestfish\fR\|(1) to see the full list of options.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIguestfish\fR\|(1), \fIvirt\-cat\fR\|(1), \fIvirt\-copy\-out\fR\|(1), \fIvirt\-edit\fR\|(1),
\&\fIvirt\-tar\-in\fR\|(1), \fIvirt\-tar\-out\fR\|(1), <http://libguestfs.org/>.
.SH "AUTHORS"
.IX Header "AUTHORS"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2011 Red Hat Inc.  <http://libguestfs.org/>
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT\s0
\&\s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or
\&\s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the \s-1GNU\s0 General Public License for
more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 51
Franklin Street, Fifth Floor, Boston, \s-1MA\s0 02110\-1301 \s-1USA\s0.
