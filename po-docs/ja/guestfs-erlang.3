.\" Automatically generated by Podwrapper::Man 1.36.5 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "guestfs-erlang 3"
.TH guestfs-erlang 3 "2017-06-22" "libguestfs-1.36.5" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
guestfs-erlang \- Erlang から libguestfs を使用する方法
.SH "書式"
.IX Header "書式"
.Vb 6
\& {ok, G} = guestfs:create(),
\& ok = guestfs:add_drive_opts(G, Disk,
\&                             [{format, "raw"}, {readonly, true}]),
\& ok = guestfs:launch(G),
\& [Device] = guestfs:list_devices(G),
\& ok = guestfs:close(G).
.Ve
.SH "説明"
.IX Header "説明"
This manual page documents how to call libguestfs from the Erlang
programming language.  This page just documents the differences from the C
\&\s-1API\s0 and gives some examples.  If you are not familiar with using libguestfs,
you also need to read \fIguestfs\fR\|(3).
.SS "ハンドルのオープン方法およびクローズ方法"
.IX Subsection "ハンドルのオープン方法およびクローズ方法"
The Erlang bindings are implemented using an external program called
\&\f(CW\*(C`erl\-guestfs\*(C'\fR.  This program must be on the current \s-1PATH,\s0 or else you
should specify the full path to the program:
.PP
.Vb 1
\& {ok, G} = guestfs:create().
\&
\& {ok, G} = guestfs:create("/path/to/erl\-guestfs").
.Ve
.PP
\&\f(CW\*(C`G\*(C'\fR は他の関数に渡す libguestfs ハンドルです。
.PP
ハンドルを閉じるには:
.PP
.Vb 1
\& ok = guestfs:close(G).
.Ve
.SS "オプション引数を用いた機能"
.IX Subsection "オプション引数を用いた機能"
For functions that take optional arguments, the first arguments are the
non-optional ones.  The last argument is a list of tuples supplying the
remaining optional arguments.
.PP
.Vb 2
\& ok = guestfs:add_drive_opts(G, Disk,
\&                             [{format, "raw"}, {readonly, true}]).
.Ve
.PP
最後の引数が空の一覧ならば、それを省略できます:
.PP
.Vb 1
\& ok = guestfs:add_drive_opts(G, Disk).
.Ve
.SS "返り値およびエラー"
.IX Subsection "返り値およびエラー"
On success, most functions return a \f(CW\*(C`Result\*(C'\fR term (which could be a list,
string, tuple etc.).  If there is nothing for the function to return, then
the atom \f(CW\*(C`ok\*(C'\fR is returned.
.PP
エラーが発生すると、以下の組のどれかが表示されます:
.ie n .IP """{error, Msg, Errno}""" 4
.el .IP "\f(CW{error, Msg, Errno}\fR" 4
.IX Item "{error, Msg, Errno}"
これは関数からの通常のエラーを意味します。
.Sp
\&\f(CW\*(C`Msg\*(C'\fR はエラーメッセージ（文字列）です。\f(CW\*(C`Errno\*(C'\fR は Unix エラー（整数）です。
.Sp
\&\f(CW\*(C`Errno\*(C'\fR は 0 の可能性があります。 \*(L"guestfs_last_errno\*(R" in \fIguestfs\fR\|(3) 参照。
.ie n .IP """{unknown, Function}""" 4
.el .IP "\f(CW{unknown, Function}\fR" 4
.IX Item "{unknown, Function}"
This indicates that the function you called is not known.  Generally this
means you are mixing \f(CW\*(C`erl\-guestfs\*(C'\fR from another version of libguestfs,
which you should not do.
.Sp
\&\f(CW\*(C`Function\*(C'\fR は未知の関数の名前です。
.ie n .IP """{unknownarg, Arg}""" 4
.el .IP "\f(CW{unknownarg, Arg}\fR" 4
.IX Item "{unknownarg, Arg}"
This indicates that you called a function with optional arguments, with an
unknown argument name.
.Sp
\&\f(CW\*(C`Arg\*(C'\fR は未知の引数の名前です。
.SH "例 1: ディスクイメージの作成"
.IX Header "例 1: ディスクイメージの作成"
\&\f(CW@EXAMPLE1\fR@
.SH "例 2: 仮想マシンのディスクイメージの検査"
.IX Header "例 2: 仮想マシンのディスクイメージの検査"
\&\f(CW@EXAMPLE2\fR@
.SH "関連項目"
.IX Header "関連項目"
\&\fIguestfs\fR\|(3), \fIguestfs\-examples\fR\|(3), \fIguestfs\-golang\fR\|(3),
\&\fIguestfs\-java\fR\|(3), \fIguestfs\-lua\fR\|(3), \fIguestfs\-ocaml\fR\|(3),
\&\fIguestfs\-perl\fR\|(3), \fIguestfs\-python\fR\|(3), \fIguestfs\-recipes\fR\|(1),
\&\fIguestfs\-ruby\fR\|(3), http://www.erlang.org/.  http://libguestfs.org/.
.SH "著者"
.IX Header "著者"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2011\-2012 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
