.\" Automatically generated by Podwrapper::Man 1.36.5 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "virt-cat 1"
.TH virt-cat 1 "2017-06-22" "libguestfs-1.36.5" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
virt-cat \- 仮想マシンにあるファイルの表示
.SH "書式"
.IX Header "書式"
.Vb 1
\& virt\-cat [\-\-options] \-d domname file [file ...]
\&
\& virt\-cat [\-\-options] \-a disk.img [\-a disk.img ...] file [file ...]
.Ve
.PP
古い形式:
.PP
.Vb 1
\& virt\-cat domname file
\&
\& virt\-cat disk.img file
.Ve
.SH "説明"
.IX Header "説明"
\&\f(CW\*(C`virt\-cat\*(C'\fR は \f(CW\*(C`file\*(C'\fR の内容を表示するためにコマンドラインツールです。ここで \f(CW\*(C`file\*(C'\fR は仮想マシン
(またはディスクイメージ) の中に存在します。
.PP
Multiple filenames can be given, in which case they are concatenated
together.  Each filename must be a full path, starting at the root directory
(starting with '/').
.PP
\&\f(CW\*(C`virt\-cat\*(C'\fR can be used to quickly view a file.  To edit a file, use
\&\f(CW\*(C`virt\-edit\*(C'\fR.  For more complex cases you should look at the \fIguestfish\fR\|(1)
tool (see \*(L"\s-1USING GUESTFISH\*(R"\s0 below).
.SH "例"
.IX Header "例"
Display \fI/etc/fstab\fR file from inside the libvirt \s-1VM\s0 called \f(CW\*(C`mydomain\*(C'\fR:
.PP
.Vb 1
\& virt\-cat \-d mydomain /etc/fstab
.Ve
.PP
どのパッケージが最新インストールされたかを見つけるには:
.PP
.Vb 1
\& virt\-cat \-d mydomain /var/log/yum.log | tail
.Ve
.PP
どのユーザーが仮想マシンにログインしているかを見つけるには:
.PP
.Vb 2
\& virt\-cat \-d mydomain /var/run/utmp > /tmp/utmp
\& who /tmp/utmp
.Ve
.PP
または、だれがログオンしたかを見つけるには:
.PP
.Vb 2
\& virt\-cat \-d mydomain /var/log/wtmp > /tmp/wtmp
\& last \-f /tmp/wtmp
.Ve
.SH "オプション"
.IX Header "オプション"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
簡単なヘルプを表示します。
.IP "\fB\-a\fR file" 4
.IX Item "-a file"
.PD 0
.IP "\fB\-\-add\fR file" 4
.IX Item "--add file"
.PD
Add \fIfile\fR which should be a disk image from a virtual machine.  If the
virtual machine has multiple block devices, you must supply all of them with
separate \fI\-a\fR options.
.Sp
ディスクイメージの形式は自動検知されます。 これを上書きして強制的に特定の形式を使用する場合、 \fI\-\-format=..\fR オプションを使用します。
.IP "\fB\-a \s-1URI\s0\fR" 4
.IX Item "-a URI"
.PD 0
.IP "\fB\-\-add \s-1URI\s0\fR" 4
.IX Item "--add URI"
.PD
リモートディスクを追加します。 \*(L"リモートストレージの追加\*(R" in \fIguestfish\fR\|(1) 参照。
.IP "\fB\-c\fR \s-1URI\s0" 4
.IX Item "-c URI"
.PD 0
.IP "\fB\-\-connect\fR \s-1URI\s0" 4
.IX Item "--connect URI"
.PD
libvirt を使用していると、指定された \fI\s-1URI\s0\fR に接続します。  省略すると、デフォルトの libvirt ハイパーバイザーに接続します。
.Sp
ゲストのブロックデバイスを直接指定していると（(\fI\-a\fR)）、libvirt は何も使用されません。
.IP "\fB\-d\fR guest" 4
.IX Item "-d guest"
.PD 0
.IP "\fB\-\-domain\fR guest" 4
.IX Item "--domain guest"
.PD
名前付きの libvirt 仮想マシンからすべてのディスクを追加します。  名前の代わりに仮想マシンの \s-1UUID\s0 を使用できます。
.IP "\fB\-\-echo\-keys\fR" 4
.IX Item "--echo-keys"
キーやパスフレーズを入力するとき、通常 virt-cat はエコーを無効化します。 そのため、入力内容を確認できません。 テンペスト攻撃の心配がなく、
部屋に誰も居なければ、 入力内容を確認するためにこのフラグを指定できます。
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
\&\fI\-a\fR オプションは標準状態でディスクイメージの形式を自動検知します。 これを使用することにより、コマンドラインで後続の \fI\-a\fR
オプションのディスク形式を強制的に指定できます。 引数なしで \fI\-\-format\fR を使用することにより、 後続の \fI\-a\fR
オプションに対して自動検知に戻せます。
.Sp
例:
.Sp
.Vb 1
\& virt\-cat \-\-format=raw \-a disk.img file
.Ve
.Sp
forces raw format (no auto-detection) for \fIdisk.img\fR.
.Sp
.Vb 1
\& virt\-cat \-\-format=raw \-a disk.img \-\-format \-a another.img file
.Ve
.Sp
forces raw format (no auto-detection) for \fIdisk.img\fR and reverts to
auto-detection for \fIanother.img\fR.
.Sp
仮想マシンのディスクイメージが信頼できない raw 形式である場合、 ディスク形式を指定するためにこのオプションを使用すべきです。
これにより、悪意のある仮想マシンにより起こり得る セキュリティ問題を回避できます (\s-1CVE\-2010\-3851\s0)。
.IP "\fB\-\-keys\-from\-stdin\fR" 4
.IX Item "--keys-from-stdin"
Read key or passphrase parameters from stdin.  The default is to try to read
passphrases from the user by opening \fI/dev/tty\fR.
.IP "\fB\-m\fR dev[:mountpoint[:options[:fstype]]]" 4
.IX Item "-m dev[:mountpoint[:options[:fstype]]]"
.PD 0
.IP "\fB\-\-mount\fR dev[:mountpoint[:options[:fstype]]]" 4
.IX Item "--mount dev[:mountpoint[:options[:fstype]]]"
.PD
指定されたマウントポイントにある、 名前付きパーティションまたは論理ボリュームをマウントします。
.Sp
If the mountpoint is omitted, it defaults to \fI/\fR.
.Sp
Specifying any mountpoint disables the inspection of the guest and the mount
of its root and all of its mountpoints, so make sure to mount all the
mountpoints needed to work with the filenames given as arguments.
.Sp
仮想マシンのディスクイメージに含まれるファイルシステムが不明な場合、 guestfish をこのオプションなしで実行することもできます。
そうすると、利用可能なパーティション、ファイルシステム、 論理ボリューム (\s-1LVM\s0) の一覧が表示されます (\*(L"list-partitions\*(R",
\&\*(L"list-filesystems\*(R", \*(L"lvs\*(R" コマンド参照)。 または、 \fIvirt\-filesystems\fR\|(1)
コマンドを使用することもできます。
.Sp
マウントパラメーターの三番目の (ほとんど使用されない) 項目は、 バックエンドのファイルシステムをマウントするために使用される
マウントオプションの一覧です。 これが指定されていない場合、 マウントオプションは空文字列または \f(CW\*(C`ro\*(C'\fR (\fI\-\-ro\fR
フラグが使用されている場合) になります。
.Sp
.Vb 1
\& \-m /dev/sda1:/:acl,user_xattr
.Ve
.Sp
このフラグを使用することは、 \f(CW\*(C`mount\-options\*(C'\fR コマンドを使用することと同等です。
.Sp
パラメーターの四番目の項目は使用するファイルシステムドライバー (\f(CW\*(C`ext3\*(C'\fR や \f(CW\*(C`ntfs\*(C'\fR など) です。 これはほとんど必要ありません。
しかし、複数のドライバーがファイルシステムに対して有効である場合 (例: \f(CW\*(C`ext2\*(C'\fR と \f(CW\*(C`ext3\*(C'\fR)、 または libguestfs
がファイルシステムを誤検知している場合、 これは有用です。
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
デバッグ用の冗長なメッセージを有効にします。
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
バージョン番号を表示して、終了します。
.IP "\fB\-x\fR" 4
.IX Item "-x"
libguestfs \s-1API\s0 呼び出しのトレースを有効にします。
.SH "旧形式のコマンドライン引数"
.IX Header "旧形式のコマンドライン引数"
以前のバージョンの virt-cat はどちらの書き込みもできます:
.PP
.Vb 1
\& virt\-cat disk.img [disk.img ...] file
.Ve
.PP
または
.PP
.Vb 1
\& virt\-cat guestname file
.Ve
.PP
whereas in this version you should use \fI\-a\fR or \fI\-d\fR respectively to avoid
the confusing case where a disk image might have the same name as a guest.
.PP
互換性のため古い形式がまだサポートされています。
.SH "LOG FILES"
.IX Header "LOG FILES"
To list out the log files from guests, see the related tool \fIvirt\-log\fR\|(1).
It understands binary log formats such as the systemd journal.
.PP
To follow (tail) text log files, use \fIvirt\-tail\fR\|(1).
.SH "Windows のパス"
.IX Header "Windows のパス"
\&\f(CW\*(C`virt\-cat\*(C'\fR has a limited ability to understand Windows drive letters and
paths (eg. \fIE:\efoo\ebar.txt\fR).
.PP
仮想マシンが Windows を実行している場合に限り:
.IP "\(bu" 4
Drive letter prefixes like \f(CW\*(C`C:\*(C'\fR are resolved against the Windows Registry
to the correct filesystem.
.IP "\(bu" 4
Any backslash (\f(CW\*(C`\e\*(C'\fR) characters in the path are replaced with forward
slashes so that libguestfs can process it.
.IP "\(bu" 4
The path is resolved case insensitively to locate the file that should be
displayed.
.PP
There are some known shortcomings:
.IP "\(bu" 4
Some \s-1NTFS\s0 symbolic links may not be followed correctly.
.IP "\(bu" 4
\&\s-1NTFS\s0 junction points that cross filesystems are not followed.
.SH "guestfish の使用法"
.IX Header "guestfish の使用法"
\&\fIguestfish\fR\|(1) は \f(CW\*(C`virt\-cat\*(C'\fR がうまく機能しないときに使用できる、より強力な、より低レベルなツールです。
.PP
\&\f(CW\*(C`virt\-cat\*(C'\fR を使用することは、次のこととほぼ同等です:
.PP
.Vb 1
\& guestfish \-\-ro \-i \-d domname download file \-
.Ve
.PP
ここで \f(CW\*(C`domname\*(C'\fR は libvirt 仮想マシンの名前です。また、\f(CW\*(C`file\*(C'\fR はファイルの完全パスです。最後の \f(CW\*(C`\-\*(C'\fR
(\*(L"標準出力に出力\*(R" を意味します) に注意してください。
.PP
上のコマンドは libguestfs の仮想マシン検査機能を使用します。そのため、libguestfs
が検査できない仮想マシンにおいて、または仮想マシンを含んでいない任意のディスクイメージのようなものにおいて、うまく動作しません。ディスクイメージから直接ファイルを表示するには、次を使用します:
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img \-m /dev/sda1 download file \-
.Ve
.PP
where \fIdisk.img\fR is the disk image, \fI/dev/sda1\fR is the filesystem within
the disk image, and \f(CW\*(C`file\*(C'\fR is the full path to the file.
.SH "終了ステータス"
.IX Header "終了ステータス"
このプログラムは、成功すると 0 を、エラーがあると 0 以外を返します。
.SH "関連項目"
.IX Header "関連項目"
\&\fIguestfs\fR\|(3), \fIguestfish\fR\|(1), \fIvirt\-copy\-out\fR\|(1), \fIvirt\-edit\fR\|(1),
\&\fIvirt\-log\fR\|(1), \fIvirt\-tail\fR\|(1), \fIvirt\-tar\-out\fR\|(1),
http://libguestfs.org/.
.SH "著者"
.IX Header "著者"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2010\-2012 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
