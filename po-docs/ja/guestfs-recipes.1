.\" Automatically generated by Podwrapper::Man 1.18.8 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "guestfs-recipes 1"
.TH guestfs-recipes 1 "2012-09-19" "libguestfs-1.18.8" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
guestfs-recipes \- libguestfs, guestfish および仮想化ツールのレシピ
.SH "説明"
.IX Header "説明"
このページには libguestfs, \fIguestfish\fR\|(1) および仮想化ツールを使用してできることのレシピとリンクがあります。
.SH "仮想マシンの setuid ファイルを監査します"
.IX Header "仮想マシンの setuid ファイルを監査します"
See: \*(L"\s-1EXAMPLES\s0\*(R" in \fIvirt\-ls\fR\|(1).
.SH "Windows XP 仮想マシンの背景画像を変更します"
.IX Header "Windows XP 仮想マシンの背景画像を変更します"
以下のリンクは、Windows \s-1XP\s0 仮想マシンのユーザーの背景画像を変更するために \fIguestfish\fR\|(1)
を使用する方法について説明しています。残念ながら、このテクニックは Windows のバージョンによりわずかに異なります。
.PP
https://lists.fedoraproject.org/pipermail/virt/2011\-May/002655.html
https://lists.fedoraproject.org/pipermail/virt/2011\-May/002658.html
.SH "Checksum a file or device within a disk image"
.IX Header "Checksum a file or device within a disk image"
To checksum a whole device, or a partition, \s-1LV\s0 etc within a disk image:
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img run : checksum\-device md5 /dev/sda1
.Ve
.PP
Replace \f(CW\*(C`md5\*(C'\fR with the type of checksum you want.  See
\&\*(L"guestfs_checksum_device\*(R" in \fIguestfs\fR\|(3) for a list of supported types.
.PP
\&\f(CW\*(C`/dev/sda1\*(C'\fR means \*(L"the first partition\*(R".  You could use \f(CW\*(C`/dev/sda\*(C'\fR to
checksum the whole disk image, or the name of a logical volume or \s-1RAID\s0
device.
.PP
To checksum a single file:
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img \-i checksum sha256 /etc/passwd
.Ve
.PP
or for a Windows guest:
.PP
.Vb 2
\& guestfish \-\-ro \-a disk.img \-i \e
\&   checksum sha256 \*(Aqwin:\ewindows\esystem32\econfig\eSOFTWARE\*(Aq
.Ve
.SH "Cloning a virtual machine"
.IX Header "Cloning a virtual machine"
Use a combination of tools like \fIcp\fR\|(1), \fIdd\fR\|(1), and virt tools like
\&\fIvirt\-sysprep\fR\|(1), \fIvirt\-sparsify\fR\|(1) and \fIvirt\-resize\fR\|(1).
.PP
For more details, see: \*(L"\s-1COPYING\s0 \s-1AND\s0 \s-1CLONING\s0\*(R" in \fIvirt\-sysprep\fR\|(1).
.SH "CD-ROM / DVD / ISO を tar ファイルに変換します"
.IX Header "CD-ROM / DVD / ISO を tar ファイルに変換します"
入力 \f(CW\*(C`cd.iso\*(C'\fR を出力 \f(CW\*(C`cd.tar.gz\*(C'\fR に変換します:
.PP
.Vb 1
\& guestfish \-\-ro \-a cd.iso \-m /dev/sda tgz\-out / cd.tar.gz
.Ve
.PP
サブディレクトリ（例: \f(CW\*(C`/files\*(C'\fR）をエクスポートするには:
.PP
.Vb 1
\& guestfish \-\-ro \-a cd.iso \-m /dev/sda tgz\-out /files cd.tar.gz
.Ve
.SH "空のディスクイメージを作成します"
.IX Header "空のディスクイメージを作成します"
The \fIvirt\-format\fR\|(1) tool can do this directly.
.PP
Use \fIvirt\-make\-fs\fR\|(1) to create a disk image with content.  This can also
create some standard disk images such as virtual floppy devices (VFDs).
.PP
You can also use the \fIguestfish\fR\|(1) \fI\-N\fR option to create empty disk
images.  The useful guide below explains the options available.
.PP
https://rwmj.wordpress.com/2010/09/08/new\-guestfish\-n\-options\-in\-1\-5\-9/#content
.SH "Delete a file (or other simple file operations)"
.IX Header "Delete a file (or other simple file operations)"
Use guestfish.  To delete a file:
.PP
.Vb 1
\& guestfish \-a disk.img \-i rm /file/to/delete
.Ve
.PP
To touch a file (bring it up to date or create it):
.PP
.Vb 1
\& guestfish \-a disk.img \-i touch /file/to/touch
.Ve
.PP
To stat a file.  Since this is a read-only operation, we can make it safer
by adding the \fI\-\-ro\fR flag.
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img \-i stat /file/to/stat
.Ve
.PP
There are dozens of these commands.  See \fIguestfish\fR\|(1) or the output of
\&\f(CW\*(C`guestfish \-h\*(C'\fR
.SH "ディスクイメージまたは仮想マシンの中にあるファイルシステムの内容をそのままダンプします"
.IX Header "ディスクイメージまたは仮想マシンの中にあるファイルシステムの内容をそのままダンプします"
You can use the \fIguestfish\fR\|(1) \f(CW\*(C`download\*(C'\fR command to extract the raw
filesystem content from any filesystem in a disk image or a \s-1VM\s0 (even one
which is encrypted or buried inside an \s-1LV\s0 or \s-1RAID\s0 device):
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img run : download /dev/sda1 sda1.img
\&
\& guestfish \-\-ro \-d Guest run : download /dev/vg_guest/lv_root lv.img
.Ve
.PP
To download to stdout, replace the filename with a \f(CW\*(C`\-\*(C'\fR character:
.PP
.Vb 1
\& guestfish \-\-ro \-a disk.img run : download /dev/sda1 \- | hexdump \-C
.Ve
.PP
ディスクイメージにあるファイルシステムを一覧表示するには \fIvirt\-filesystems\fR\|(1) を使用します。
.SH "仮想マシンの GRUB 設定を編集します"
.IX Header "仮想マシンの GRUB 設定を編集します"
次の目的のために実行できます:
.IP "\(bu" 4
起動しない仮想マシンを修正します。
.IP "\(bu" 4
仮想マシンの起動時に使用するカーネルを変更します。
.IP "\(bu" 4
カーネルのコマンドラインオプションを変更します。
.PP
\&\s-1GRUB\s0 設定を編集するには \fIvirt\-edit\fR\|(1) を使用します:
.PP
.Vb 1
\& virt\-edit \-d BrokenGuest /boot/grub2/grub.cfg
.Ve
.PP
もしくは、起動不可能な仮想マシンの中から一般的に修復するために、このように \fIvirt\-rescue\fR\|(1) を使用します:
.PP
.Vb 1
\& virt\-rescue \-d BrokenGuest
.Ve
.SH "仮想マシンから任意のディレクトリをエクスポートします"
.IX Header "仮想マシンから任意のディレクトリをエクスポートします"
仮想マシンから \f(CW\*(C`/home\*(C'\fR をローカルディレクトリにエクスポートするには \fIvirt\-copy\-out\fR\|(1) を使用します:
.PP
.Vb 1
\& virt\-copy\-out \-d Guest /home .
.Ve
.PP
注:
.IP "\(bu" 4
コマンドの最後のドットは表示エラーではありません。現在のディレクトリーにコピーしたいことを意味します。
.IP "\(bu" 4
これは現在のディレクトリーに \f(CW\*(C`home\*(C'\fR というディレクトリーを作成します。
.PP
仮想マシンが Windows ならば、ドライブレターとバックスラッシュを使用できます。しかし、パスを \f(CW\*(C`win:\*(C'\fR
で始める必要があり、シェルから保護するために引用符でくくる必要があります。このようにします:
.PP
.Vb 1
\& virt\-copy\-out \-d WinGuest \*(Aqwin:c:\ewindows\esystem32\econfig\*(Aq .
.Ve
.PP
圧縮された tar ファイルとして出力を取得するには:
.PP
.Vb 1
\& virt\-tar\-out \-d Guest /home \- | gzip \-\-best > home.tar.gz
.Ve
.PP
Although it sounds tempting, this is usually not a reliable way to get a
backup from a running guest.  See the entry in the \s-1FAQ:\s0
http://libguestfs.org/FAQ.html#backup
.SH "もっとも領域を使用しているユーザーを検索します"
.IX Header "もっとも領域を使用しているユーザーを検索します"
この簡単なスクリプトは、ホームディレクトリーにおいてもっとも領域を使用しているユーザーを検索するために、Linux 仮想マシンを検査します。
.PP
.Vb 1
\& #!/bin/sh \-
\& 
\& set \-e
\& 
\& vm="$1"
\& dir=/home
\& 
\& eval $(guestfish \-\-ro \-d "$vm" \-i \-\-listen)
\& 
\& for d in $(guestfish \-\-remote ls "$dir"); do
\&     echo \-n "$dir/$d"
\&     echo \-ne \*(Aq\et\*(Aq
\&     guestfish \-\-remote du "$dir/$d";
\& done | sort \-nr \-k 2
\& 
\& guestfish \-\-remote exit
.Ve
.SH "仮想マシンから DHCP アドレスを取得します"
.IX Header "仮想マシンから DHCP アドレスを取得します"
以下のリンクは、仮想マシンに対して最後に割り当てられた \s-1DHCP\s0 アドレスを取得するために、多くの異なる利用可能なテクニックを説明しています。
.PP
https://rwmj.wordpress.com/2011/03/31/tip\-code\-for\-getting\-dhcp\-address\-from\-a\-virtual\-machine\-disk\-image/#content
.PP
libguestfs のソースのサンプルディレクトリーに、\f(CW\*(C`virt\-dhcp\-address.c\*(C'\fR プログラムの最新バージョンがあります。
.SH "オペレーティングシステムの製品名を取得します"
.IX Header "オペレーティングシステムの製品名を取得します"
以下のスクリプトを \f(CW\*(C`product\-name.sh\*(C'\fR というファイルの中に保存します:
.PP
.Vb 6
\& #!/bin/sh \-
\& set \-e
\& eval "$(guestfish \-\-ro \-d "$1" \-\-i \-\-listen)"
\& root="$(guestfish \-\-remote inspect\-get\-roots)"
\& guestfish \-\-remote inspect\-get\-product\-name "$root"
\& guestfish \-\-remote exit
.Ve
.PP
スクリプトを実行可能にして、名前付き仮想マシンにおいて実行します:
.PP
.Vb 2
\& # product\-name.sh RHEL60x64
\& Red Hat Enterprise Linux Server release 6.0 (Santiago)
.Ve
.PP
\&\f(CW\*(C`xpath\*(C'\fR コマンドラインツールを使用して、またはお気に入りのプログラミング言語から、\fIvirt\-inspector\fR\|(1) \s-1XML\s0 において
XPath クエリーを使用することもできます:
.PP
.Vb 5
\& # virt\-inspector RHEL60x64 > xml
\& # xpath \*(Aq//product_name\*(Aq < xml
\& Found 1 nodes:
\& \-\- NODE \-\-
\& <product_name>Red Hat Enterprise Linux Server release 6.0 (Santiago)</product_name>
.Ve
.SH "Linux 仮想マシンのデフォルトの起動カーネルを取得します"
.IX Header "Linux 仮想マシンのデフォルトの起動カーネルを取得します"
以下のリンクに Linux 仮想マシンのデフォルトの起動カーネルを表示するためのプログラムがあります。
.PP
https://rwmj.wordpress.com/2010/10/30/tip\-use\-augeas\-to\-get\-the\-default\-boot\-kernel\-for\-a\-vm/#content
.PP
Augeas を使用します。また、以下のように、多くのさまざまな作業に対して適用可能な一般的なテクニックがあります:
.IP "\(bu" 4
仮想マシンのユーザーアカウントの一覧
.IP "\(bu" 4
使用するよう設定されたリポジトリー
.IP "\(bu" 4
接続する \s-1NTP\s0 サーバー
.IP "\(bu" 4
前回起動時の起動メッセージ
.IP "\(bu" 4
最近ログインしたユーザーの一覧
.PP
http://augeas.net/
.SH "仮想マシンに RPM をインストールします"
.IX Header "仮想マシンに RPM をインストールします"
以下のリンクは、仮想マシンにおいて \s-1RPM\s0 をインストールする方法があります。実際、仮想マシンの次回起動時にインストールされる \*(L"firstboot\*(R"
スクリプトを用いて仮想マシンに \s-1RPM\s0
がアップロードされます。停止中の仮想マシンにおいて致命的なセキュリティ更新をインストールするためにこのテクニックを使用できます。
.PP
https://rwmj.wordpress.com/2010/12/01/tip\-install\-rpms\-in\-a\-guest/#content
.SH "仮想マシンにインストールされているアプリケーションを一覧表示します"
.IX Header "仮想マシンにインストールされているアプリケーションを一覧表示します"
以下をファイル \f(CW\*(C`list\-apps.sh\*(C'\fR に保存します:
.PP
.Vb 6
\& #!/bin/sh \-
\& set \-e
\& eval "$(guestfish \-\-ro \-d "$1" \-\-i \-\-listen)"
\& root="$(guestfish \-\-remote inspect\-get\-roots)"
\& guestfish \-\-remote inspect\-list\-applications "$root"
\& guestfish \-\-remote exit
.Ve
.PP
ファイルを実行可能にして、あらゆる名前付き仮想マシンにおいて実行できます:
.PP
.Vb 10
\& # list\-apps.sh WinGuest
\& [0] = {
\&   app_name: Mozilla Firefox (3.6.12)
\&   app_display_name: Mozilla Firefox (3.6.12)
\&   app_epoch: 0
\&   app_version: 3.6.12 (en\-GB)
\&   app_release:
\&   app_install_path: C:\eProgram Files\eMozilla Firefox
\&   app_trans_path:
\&   app_publisher: Mozilla
\&   app_url: http://www.mozilla.com/en\-GB/
\&   app_source_package:
\&   app_summary:
\&   app_description: Mozilla Firefox
\& }
\& [1] = {
\&   app_name: VLC media player
\&   app_display_name: VLC media player 1.1.5
\&   app_epoch: 0
\&   app_version: 1.1.5
\&   app_release:
\&   app_install_path: C:\eProgram Files\eVideoLAN\eVLC
\&   app_trans_path:
\&   app_publisher: VideoLAN
\&   app_url: http://www.videolan.org/
\&   app_source_package:
\&   app_summary:
\&   app_description:
\& }
.Ve
.PP
（libvirt 仮想マシンの代わりに）ディスクイメージにおいてスクリプトを実行したいならば、\f(CW\*(C`\-d "$1"\*(C'\fR を \f(CW\*(C`\-a "$1"\*(C'\fR
に変更します。\fIvirt\-inspector\fR\|(1) 参照。
.SH "仮想マシンのファイルおよびディレクトリを一覧表示します"
.IX Header "仮想マシンのファイルおよびディレクトリを一覧表示します"
Use \fIvirt\-ls\fR\|(1).
.SH "Windows 仮想マシンのサービスを一覧表示します"
.IX Header "Windows 仮想マシンのサービスを一覧表示します"
以下のリンクは、Windows
仮想マシンからサービスを、およびそれらのサービスが起動時に実行されるか必要に応じて読み込まれるかを一覧化するために使用できるスクリプトがあります。
.PP
https://rwmj.wordpress.com/2010/12/10/tip\-list\-services\-in\-a\-windows\-guest/#content
.SH "ディスクイメージをスパースにします"
.IX Header "ディスクイメージをスパースにします"
Use \fIvirt\-sparsify\fR\|(1).
.SH "ディスク使用量を時系列に監視します"
.IX Header "ディスク使用量を時系列に監視します"
時系列で仮想マシンのディスク使用量を監視するために \fIvirt\-df\fR\|(1) を使用できます。以下のリンクは仮想マシンを含みます。
.PP
http://virt\-tools.org/learning/advanced\-virt\-df/
.SH "Windows Vista （またそれ以降）から Windows のイベントログを読み出します"
.IX Header "Windows Vista （またそれ以降）から Windows のイベントログを読み出します"
\&\fIguestfish\fR\|(1) に加えて以下のリンクに示されるツールは、実行中の Windows Vista およびそれ以降のあらゆる仮想マシンから
Windows イベントログを読み出すために使用できます。
.PP
https://rwmj.wordpress.com/2011/04/17/decoding\-the\-windows\-event\-log\-using\-guestfish/#content
.SH "root のパスワードを削除します (Linux)"
.IX Header "root のパスワードを削除します (Linux)"
\&\fIvirt\-edit\fR\|(1) \fI\-e\fR を使用することにより、ファイルの内容を簡単に置き換えることができます。一つの使用方法は Linux
仮想マシンから root パスワードを削除することです。
.PP
.Vb 1
\& virt\-edit domname /etc/passwd \-e \*(Aqs/^root:.*?:/root::/\*(Aq
.Ve
.SH "Administrator のパスワードを削除します (Windows)"
.IX Header "Administrator のパスワードを削除します (Windows)"
以下のリンクは、Windows
仮想マシンから管理者パスワードを削除するためのテクニックを含みます。または、より精細にするために、セキュリティを迂回するために使用でき、次回ログイン時にコマンドプロンプトを出します:
.PP
https://mdbooth.wordpress.com/2010/10/18/resetting\-a\-windows\-guests\-administrator\-password\-with\-guestfish/
.SH "Sysprepping a virtual machine (Windows)"
.IX Header "Sysprepping a virtual machine (Windows)"
It is possible to do a \*(L"sysprep\*(R" using libguestfs alone, although not
straightforward.  Currently there is code in the Aeolus Oz project which
does this (using libguestfs).  It is likely we will add this to
\&\fIvirt\-sysprep\fR\|(1) in future.
.PP
https://github.com/clalancette/oz
https://www.redhat.com/archives/virt\-tools\-list/2011\-May/msg00019.html
.SH "Live CD を展開します"
.IX Header "Live CD を展開します"
Linux live \s-1CD\s0
は、ロシア人形のように覆われた複数の層のディスクイメージを含みます。以下のガイドに概要が示されたように、これらの複数の層の内側を見るために
\&\fIguestfish\fR\|(1) を使用できます。
.PP
https://rwmj.wordpress.com/2009/07/15/unpack\-the\-russian\-doll\-of\-a\-f11\-live\-cd/#content
.SH "ファイルのアップロード方法およびダウンロード方法"
.IX Header "ファイルのアップロード方法およびダウンロード方法"
以下のリンクは、仮想マシンにファイルをアップロード、および仮想マシンからファイルをダウンロードすることに関する、一般的なヒントがあります。
.PP
https://rwmj.wordpress.com/2010/12/02/tip\-uploading\-and\-downloading/#content
.SH "VMware ESX 仮想マシンにおいて libguestfs ツールを使用します"
.IX Header "VMware ESX 仮想マシンにおいて libguestfs ツールを使用します"
以下のリンクは、まず最初に sshfs 経由で VMware \s-1VMFS\s0 を共有することにより、VMware \s-1ESX\s0 仮想マシンにおいて
libguestfs, \fIguestfish\fR\|(1) および virt ツールを使用する方法を説明しています。
.PP
https://rwmj.wordpress.com/2011/05/10/tip\-use\-libguestfs\-on\-vmware\-esx\-guests/#content
.SH "関連項目"
.IX Header "関連項目"
\&\fIguestfs\fR\|(3), \fIguestfish\fR\|(1), \fIguestfs\-examples\fR\|(3),
\&\fIguestfs\-erlang\fR\|(3), \fIguestfs\-java\fR\|(3), \fIguestfs\-ocaml\fR\|(3),
\&\fIguestfs\-perl\fR\|(3), \fIguestfs\-python\fR\|(3), \fIguestfs\-ruby\fR\|(3),
http://libguestfs.org/.
.SH "著者"
.IX Header "著者"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2009\-2012 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
