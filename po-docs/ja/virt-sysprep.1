.\" Automatically generated by Podwrapper::Man 1.23.19 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "virt-sysprep 1"
.TH virt-sysprep 1 "2013-08-19" "libguestfs-1.23.19" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
virt-sysprep \- 仮想マシンをクローンできるよう、再設定、設定解除またはカスタマイズします
.SH "書式"
.IX Header "書式"
.Vb 1
\& virt\-sysprep [\-\-options] \-d domname
\&
\& virt\-sysprep [\-\-options] \-a disk.img [\-a disk.img ...]
.Ve
.SH "説明"
.IX Header "説明"
Virt-sysprep can reset or unconfigure a virtual machine so that clones can
be made from it.  Steps in this process include removing \s-1SSH\s0 host keys,
removing persistent network \s-1MAC\s0 configuration, and removing user accounts.
Virt-sysprep can also customize a virtual machine, for instance by adding
\&\s-1SSH\s0 keys, users or logos.  Each step can be enabled or disabled as required.
.PP
Virt-sysprep modifies the guest or disk image \fIin place\fR.  The guest must
be shut down.  If you want to preserve the existing contents of the guest,
\&\fIyou must snapshot, copy or clone the disk first\fR.  See \*(L"\s-1COPYING AND
CLONING\*(R"\s0 below.
.PP
You do \fInot\fR need to run virt-sysprep as root.  In fact we'd generally
recommend that you don't.  The time you might want to run it as root is when
you need root in order to access the disk image, but even in this case it
would be better to change the permissions on the disk image to be writable
as the non-root user running virt-sysprep.
.PP
\&\*(L"Sysprep\*(R" stands for \*(L"system preparation\*(R" tool.  The name comes from the
Microsoft program \f(CW\*(C`sysprep.exe\*(C'\fR which is used to unconfigure Windows
machines in preparation for cloning them.  Having said that, virt-sysprep
does \fInot\fR currently work on Microsoft Windows guests.  We plan to support
Windows sysprepping in a future version, and we already have code to do it.
.SH "オプション"
.IX Header "オプション"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
簡単なヘルプを表示します。
.IP "\fB\-a\fR file" 4
.IX Item "-a file"
.PD 0
.IP "\fB\-\-add\fR file" 4
.IX Item "--add file"
.PD
仮想マシンからディスクイメージの \fIfile\fR を追加します。
.Sp
ディスクイメージの形式は自動的に検出されます。強制的に特定の形式を使用するには \fI\-\-format\fR オプションを使用します。
.IP "\fB\-a \s-1URI\s0\fR" 4
.IX Item "-a URI"
.PD 0
.IP "\fB\-\-add \s-1URI\s0\fR" 4
.IX Item "--add URI"
.PD
Add a remote disk.  The \s-1URI\s0 format is compatible with guestfish.  See
\&\*(L"\s-1ADDING REMOTE STORAGE\*(R"\s0 in \fIguestfish\fR\|(1).
.IP "\fB\-c\fR \s-1URI\s0" 4
.IX Item "-c URI"
.PD 0
.IP "\fB\-\-connect\fR \s-1URI\s0" 4
.IX Item "--connect URI"
.PD
libvirt を使用していると、指定された \fI\s-1URI\s0\fR に接続します。  省略すると、デフォルトの libvirt ハイパーバイザーに接続します。
.Sp
ゲストのブロックデバイスを直接指定していると（(\fI\-a\fR)）、libvirt は何も使用されません。
.IP "\fB\-d\fR guest" 4
.IX Item "-d guest"
.PD 0
.IP "\fB\-\-domain\fR guest" 4
.IX Item "--domain guest"
.PD
名前付きの libvirt 仮想マシンからすべてのディスクを追加します。  ドメインの \s-1UUID\s0 が名前の代わりに使用されます。
.IP "\fB\-n\fR" 4
.IX Item "-n"
.PD 0
.IP "\fB\-\-dry\-run\fR" 4
.IX Item "--dry-run"
.PD
Perform a read-only \*(L"dry run\*(R" on the guest.  This runs the sysprep
operation, but throws away any changes to the disk at the end.
.IP "\fB\-\-enable\fR operations" 4
.IX Item "--enable operations"
Choose which sysprep operations to perform.  Give a comma-separated list of
operations, for example:
.Sp
.Vb 1
\& \-\-enable ssh\-hostkeys,udev\-persistent\-net
.Ve
.Sp
would enable \s-1ONLY \s0\f(CW\*(C`ssh\-hostkeys\*(C'\fR and \f(CW\*(C`udev\-persistent\-net\*(C'\fR operations.
.Sp
If the \fI\-\-enable\fR option is not given, then we default to trying most
sysprep operations (see \fI\-\-list\-operations\fR to show which are enabled).
.Sp
Regardless of the \fI\-\-enable\fR option, sysprep operations are skipped for
some guest types.
.Sp
特定のバージョンの virt-sysprep によりサポートされる操作の一覧を表示するには \fI\-\-list\-operations\fR を使用します。
.Sp
See \*(L"\s-1OPERATIONS\*(R"\s0 below for a list and an explanation of each operation.
.IP "\fB\-\-format\fR raw|qcow2|.." 4
.IX Item "--format raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR auto" 4
.IX Item "--format auto"
.PD
The default for the \fI\-a\fR option is to auto-detect the format of the disk
image.  Using this forces the disk format for \fI\-a\fR options which follow on
the command line.  Using \fI\-\-format auto\fR switches back to auto-detection
for subsequent \fI\-a\fR options.
.Sp
例:
.Sp
.Vb 1
\& virt\-sysprep \-\-format raw \-a disk.img
.Ve
.Sp
\&\f(CW\*(C`disk.img\*(C'\fR に対してローイメージを強制します（自動検出しません）。
.Sp
.Vb 1
\& virt\-sysprep \-\-format raw \-a disk.img \-\-format auto \-a another.img
.Ve
.Sp
\&\f(CW\*(C`disk.img\*(C'\fR に対してロー形式（自動検知なし）を強制し、\f(CW\*(C`another.img\*(C'\fR に対して自動検知に戻します。
.Sp
仮想マシンのディスクイメージが信頼できないロー形式であるならば、ディスク形式を指定するためにこのオプションを使用すべきです。これにより、悪意のある仮想マシンにより起こり得るセキュリティ問題を回避できます
(\s-1CVE\-2010\-3851\s0)。
.IP "\fB\-\-list\-operations\fR" 4
.IX Item "--list-operations"
virt-sysprep プログラムによりサポートされる操作を一覧表示します。
.Sp
These are listed one per line, with one or more single-space-separated
fields, eg:
.Sp
.Vb 6
\& $ virt\-sysprep \-\-list\-operations
\& bash\-history * Remove the bash history in the guest
\& cron\-spool * Remove user at\-jobs and cron\-jobs
\& dhcp\-client\-state * Remove DHCP client leases
\& dhcp\-server\-state * Remove DHCP server leases
\& [etc]
.Ve
.Sp
The first field is the operation name, which can be supplied to
\&\fI\-\-enable\fR.  The second field is a \f(CW\*(C`*\*(C'\fR character if the operation is
enabled by default or blank if not.  Subsequent fields on the same line are
the description of the operation.
.Sp
Before libguestfs 1.17.33 only the first (operation name) field was shown
and all operations were enabled by default.
.IP "\fB\-\-mount\-options\fR mp:opts[;mp:opts;...]" 4
.IX Item "--mount-options mp:opts[;mp:opts;...]"
Set the mount options for each mountpoint in the guest.  Use a
semicolon-separated list of \f(CW\*(C`mountpoint:options\*(C'\fR pairs.  You may need to
quote this list to protect it from the shell.
.Sp
例:
.Sp
.Vb 1
\& \-\-mount\-options "/:noatime"
.Ve
.Sp
will mount the root directory with \f(CW\*(C`notime\*(C'\fR.  This example:
.Sp
.Vb 1
\& \-\-mount\-options "/:noatime;/var:rw,nodiratime"
.Ve
.Sp
will do the same, plus mount \f(CW\*(C`/var\*(C'\fR with \f(CW\*(C`rw,nodiratime\*(C'\fR.
.IP "\fB\-q\fR" 4
.IX Item "-q"
.PD 0
.IP "\fB\-\-quiet\fR" 4
.IX Item "--quiet"
.PD
ログメッセージを表示しません。
.Sp
To enable detailed logging of individual file operations, use \fI\-x\fR.
.IP "\fB\-\-selinux\-relabel\fR" 4
.IX Item "--selinux-relabel"
.PD 0
.IP "\fB\-\-no\-selinux\-relabel\fR" 4
.IX Item "--no-selinux-relabel"
.PD
\&\fI\-\-selinux\-relabel\fR forces SELinux relabelling next time the guest boots.
\&\fI\-\-no\-selinux\-relabel\fR disables relabelling.
.Sp
The default is to try to detect if SELinux relabelling is required.  See
\&\*(L"\s-1SELINUX RELABELLING\*(R"\s0 below for more details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
デバッグ用の冗長なメッセージを有効にします。
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
バージョン番号を表示して終了します。
.IP "\fB\-x\fR" 4
.IX Item "-x"
libguestfs \s-1API\s0 呼び出しのトレースを有効にします。
.ie n .IP "\fB\-\-firstboot\fR firstboot (see ""firstboot"" below)" 4
.el .IP "\fB\-\-firstboot\fR firstboot (see \f(CWfirstboot\fR below)" 4
.IX Item "--firstboot firstboot (see firstboot below)"
Run script(s) once next time the guest boots.  You can supply the
\&\fI\-\-firstboot\fR option as many times as needed.
.ie n .IP "\fB\-\-hostname\fR hostname (以下の ""hostname"" 参照)" 4
.el .IP "\fB\-\-hostname\fR hostname (以下の \f(CWhostname\fR 参照)" 4
.IX Item "--hostname hostname (以下の hostname 参照)"
ホスト名を変更します。指定されないと、デフォルトで \f(CW\*(C`localhost.localdomain\*(C'\fR になります。
.ie n .IP "\fB\-\-password\fR password (see ""password"" below)" 4
.el .IP "\fB\-\-password\fR password (see \f(CWpassword\fR below)" 4
.IX Item "--password password (see password below)"
Set a user password.  The user must exist already (this option does \fInot\fR
create users).  The following formats may be used for this option:
.RS 4
.IP "\fB\-\-password USERNAME:file:FILENAME\fR" 4
.IX Item "--password USERNAME:file:FILENAME"
Change the password for \f(CW\*(C`USERNAME\*(C'\fR.  Read the password from \f(CW\*(C`FILENAME\*(C'\fR.
The whole first line of this file is the replacement password.  Any other
lines are ignored.  You should create the file with mode 0600 to ensure no
one else can read it.
.IP "\fB\-\-password USERNAME:password:PASSWORD\fR" 4
.IX Item "--password USERNAME:password:PASSWORD"
Change the password for \f(CW\*(C`USERNAME\*(C'\fR.  Set the password to the literal string
\&\f(CW\*(C`PASSWORD\*(C'\fR.
.Sp
\&\fBNote: this is not secure\fR since any user on the same machine can see the
cleartext password using \fIps\fR\|(1).
.RE
.RS 4
.RE
.ie n .IP "\fB\-\-password\-crypto\fR password-crypto (see ""password"" below)" 4
.el .IP "\fB\-\-password\-crypto\fR password-crypto (see \f(CWpassword\fR below)" 4
.IX Item "--password-crypto password-crypto (see password below)"
Set the password encryption to \f(CW\*(C`md5\*(C'\fR, \f(CW\*(C`sha256\*(C'\fR or \f(CW\*(C`sha512\*(C'\fR.
.Sp
\&\f(CW\*(C`sha256\*(C'\fR and \f(CW\*(C`sha512\*(C'\fR require glibc ≥ 2.7 (check \fIcrypt\fR\|(3) inside
the guest).
.Sp
\&\f(CW\*(C`md5\*(C'\fR will work with relatively old Linux guests (eg. \s-1RHEL 3\s0), but is not
secure against modern attacks.
.Sp
The default is \f(CW\*(C`sha512\*(C'\fR unless libguestfs detects an old guest that didn't
have support for \s-1SHA\-512,\s0 in which case it will use \f(CW\*(C`md5\*(C'\fR.  You can
override libguestfs by specifying this option.
.ie n .IP "\fB\-\-root\-password\fR root-password (see ""password"" below)" 4
.el .IP "\fB\-\-root\-password\fR root-password (see \f(CWpassword\fR below)" 4
.IX Item "--root-password root-password (see password below)"
Set the root password.  The following formats may be used for this option:
.RS 4
.IP "\fB\-\-root\-password file:FILENAME\fR" 4
.IX Item "--root-password file:FILENAME"
Read the root password from \f(CW\*(C`FILENAME\*(C'\fR.  The whole first line of this file
is the replacement password.  Any other lines are ignored.  You should
create the file with mode 0600 to ensure no one else can read it.
.IP "\fB\-\-root\-password password:PASSWORD\fR" 4
.IX Item "--root-password password:PASSWORD"
Set the root password to the literal string \f(CW\*(C`PASSWORD\*(C'\fR.
.Sp
\&\fBNote: this is not secure\fR since any user on the same machine can see the
cleartext password using \fIps\fR\|(1).
.RE
.RS 4
.RE
.ie n .IP "\fB\-\-script\fR script (以下の ""script"" 参照)" 4
.el .IP "\fB\-\-script\fR script (以下の \f(CWscript\fR 参照)" 4
.IX Item "--script script (以下の script 参照)"
Run the named \f(CW\*(C`script\*(C'\fR (a shell script or program) against the guest.  The
script can be any program on the host.  The script's current directory will
be the guest's root directory.
.Sp
\&\fBNote:\fR If the script is not on the \f(CW$PATH\fR, then you must give the full
absolute path to the script.
.ie n .IP "\fB\-\-scriptdir\fR scriptdir (以下の ""script"" 参照)" 4
.el .IP "\fB\-\-scriptdir\fR scriptdir (以下の \f(CWscript\fR 参照)" 4
.IX Item "--scriptdir scriptdir (以下の script 参照)"
The mount point (an empty directory on the host) used when the \f(CW\*(C`script\*(C'\fR
operation is enabled and one or more scripts are specified using \fI\-\-script\fR
parameter(s).
.Sp
\&\fBNote:\fR \f(CW\*(C`scriptdir\*(C'\fR \fBmust\fR be an absolute path.
.Sp
If \fI\-\-scriptdir\fR is not specified then a temporary mountpoint will be
created.
.SH "OPERATIONS"
.IX Header "OPERATIONS"
If the \fI\-\-enable\fR option is \fInot\fR given, then most sysprep operations are
enabled.
.PP
Use \f(CW\*(C`virt\-sysprep \-\-list\-operations\*(C'\fR to list all operations for your
virt-sysprep binary.  The ones which are enabled by default are marked with
a \f(CW\*(C`*\*(C'\fR character.  Regardless of the \fI\-\-enable\fR option, sysprep operations
are skipped for some guest types.
.PP
Operations can be individually enabled using the \fI\-\-enable\fR option.  Use a
comma-separated list, for example:
.PP
.Vb 1
\& virt\-sysprep \-\-enable=ssh\-hostkeys,udev\-persistent\-net [etc..]
.Ve
.PP
Future versions of virt-sysprep may add more operations.  If you are using
virt-sysprep and want predictable behaviour, specify only the operations
that you want to have enabled.
.PP
\&\f(CW\*(C`*\*(C'\fR = \fI\-\-enable\fR オプションが与えられるとき、デフォルトで有効化されます。
.SS "\fBabrt-data\fP *"
.IX Subsection "abrt-data *"
\&\s-1ABRT\s0 により生成されたクラッシュデータを削除します。
.PP
\&\f(CW\*(C`/var/spool/abrt/\*(C'\fR に自動的に生成された \s-1ABRT\s0 クラッシュデータを削除します。
.SS "\fBbash-history\fP *"
.IX Subsection "bash-history *"
仮想マシンにおいて bash 履歴を削除します。
.PP
ユーザー \*(L"root\*(R" および他のあらゆるユーザーのホームディレクトリーに \f(CW\*(C`.bash_history\*(C'\fR ファイルを持つユーザーの bash
履歴を削除します。
.PP
\fINotes on bash-history\fR
.IX Subsection "Notes on bash-history"
.PP
Currently this only looks in \f(CW\*(C`/root\*(C'\fR and \f(CW\*(C`/home/*\*(C'\fR for home directories,
so users with home directories in other locations won't have the bash
history removed.
.SS "\fBblkid-tab\fP *"
.IX Subsection "blkid-tab *"
ゲストにある blkid テーブルを削除します。
.SS "\fBca-certificates\fP"
.IX Subsection "ca-certificates"
仮想マシンにおいて \s-1CA\s0 証明書を削除します。
.SS "\fBcrash-data\fP *"
.IX Subsection "crash-data *"
kexec-tools により生成されたクラッシュデータを削除します。
.PP
自動的に生成された kdump カーネルクラッシュデータを削除します。
.SS "\fBcron-spool\fP *"
.IX Subsection "cron-spool *"
ユーザーの at ジョブおよび cron ジョブを削除します。
.SS "\fBdhcp-client-state\fP *"
.IX Subsection "dhcp-client-state *"
\&\s-1DHCP\s0 クライアントのリースを削除します。
.SS "\fBdhcp-server-state\fP *"
.IX Subsection "dhcp-server-state *"
\&\s-1DHCP\s0 サーバーのリースを削除します。
.SS "\fBdovecot-data\fP *"
.IX Subsection "dovecot-data *"
Dovecot (メールサーバー) のデータを削除します。
.SS "\fBfirstboot\fP *"
.IX Subsection "firstboot *"
次回起動時に一度だけ実行するスクリプトを追加します。
.PP
一つまたは複数のシェルスクリプトを指定します (\fI\-\-firstboot\fR オプション使用)。
.PP
These are run the first time the guest boots, and then are deleted.  So
these are useful for performing last minute configuration that must run in
the context of the guest operating system, for example \f(CW\*(C`yum update\*(C'\fR.
.PP
Output or errors from the scripts are written to
\&\f(CW\*(C`~root/virt\-sysprep\-firstboot.log\*(C'\fR (in the guest).
.PP
\fINotes on firstboot\fR
.IX Subsection "Notes on firstboot"
.PP
Currently this is only implemented for Linux guests using either
SysVinit-style scripts, Upstart or systemd.
.SS "\fBflag-reconfiguration\fP"
.IX Subsection "flag-reconfiguration"
Flag the system for reconfiguration.
.PP
Note that this may require user intervention when the guest is booted.
.SS "\fBfs-uuids\fP"
.IX Subsection "fs-uuids"
Change filesystem UUIDs.
.PP
On guests and filesystem types where this is supported, new random UUIDs are
generated and assigned to filesystems.
.PP
\fINotes on fs-uuids\fR
.IX Subsection "Notes on fs-uuids"
.PP
The fs-uuids operation is disabled by default because it does not yet find
and update all the places in the guest that use the UUIDs.  For example
\&\f(CW\*(C`/etc/fstab\*(C'\fR or the bootloader.  Enabling this operation is more likely
than not to make your guest unbootable.
.PP
See: https://bugzilla.redhat.com/show_bug.cgi?id=991641
.SS "\fBhostname\fP *"
.IX Subsection "hostname *"
仮想マシンのホスト名を変更します。
.PP
This operation changes the hostname of the guest to the value given in the
\&\fI\-\-hostname\fR parameter.
.PP
\&\fI\-\-hostname\fR パラメーターが指定されていないと、ホスト名が \f(CW\*(C`localhost.localdomain\*(C'\fR に変更されます。
.PP
\fINotes on hostname\fR
.IX Subsection "Notes on hostname"
.PP
Currently this can only set the hostname on Linux guests.
.SS "\fBkerberos-data\fP"
.IX Subsection "kerberos-data"
仮想マシンにおいて Kerberos のデータを削除します。
.SS "\fBlogfiles\fP *"
.IX Subsection "logfiles *"
仮想マシンから多くのログファイルを削除します。
.PP
Linux においては以下のファイルが削除されます:
.PP
.Vb 10
\& /root/anaconda\-ks.cfg
\& /root/install.log
\& /root/install.log.syslog
\& /var/cache/fontconfig/*
\& /var/cache/gdm/*
\& /var/cache/man/*
\& /var/lib/AccountService/users/*
\& /var/lib/fprint/*
\& /var/lib/logrotate.status
\& /var/log/*.log*
\& /var/log/BackupPC/LOG
\& /var/log/apache2/*_log
\& /var/log/apache2/*_log\-*
\& /var/log/audit/*
\& /var/log/audit/audit.log
\& /var/log/btmp*
\& /var/log/ceph/*.log
\& /var/log/chrony/*.log
\& /var/log/cron*
\& /var/log/cups/*_log
\& /var/log/dmesg*
\& /var/log/glusterfs/*glusterd.vol.log
\& /var/log/glusterfs/glusterfs.log
\& /var/log/httpd/*log
\& /var/log/jetty/jetty\-console.log
\& /var/log/lastlog*
\& /var/log/libvirt/libvirtd.log
\& /var/log/libvirt/lxc/*.log
\& /var/log/libvirt/qemu/*.log
\& /var/log/libvirt/uml/*.log
\& /var/log/mail/*
\& /var/log/maillog*
\& /var/log/messages*
\& /var/log/ntp
\& /var/log/ppp/connect\-errors
\& /var/log/secure*
\& /var/log/setroubleshoot/*.log
\& /var/log/spooler*
\& /var/log/squid/*.log
\& /var/log/tallylog*
\& /var/log/wtmp*
\& /var/named/data/named.run
.Ve
.SS "\fBlvm-uuids\fP *"
.IX Subsection "lvm-uuids *"
\&\s-1LVM2\s0 の \s-1PV\s0 および \s-1VG\s0 の \s-1UUID\s0 を変更します。
.PP
\&\s-1LVM2\s0 物理ボリューム (\s-1PV\s0) またはボリュームグループ (\s-1VG\s0) を持つ Linux 仮想マシンにおいて、新しいランダムな \s-1UUID\s0
が生成され、これらの \s-1PV\s0 や \s-1VG\s0 に割り当てられます。
.SS "\fBmachine-id\fP *"
.IX Subsection "machine-id *"
ローカルマシン \s-1ID\s0 を削除します。
.PP
The machine \s-1ID\s0 is usually generated from a random source during system
installation and stays constant for all subsequent boots.  Optionally, for
stateless systems it is generated during runtime at boot if it is found to
be empty.
.SS "\fBmail-spool\fP *"
.IX Subsection "mail-spool *"
ローカルのメールスプールのディレクトリから電子メールを削除します。
.SS "\fBnet-hostname\fP *"
.IX Subsection "net-hostname *"
ネットワークインターフェース設定にある \s-1HOSTNAME\s0 を削除します。
.PP
Fedora および Red Hat Enterprise Linux に対して、これは \f(CW\*(C`ifcfg\-*\*(C'\fR ファイルから削除されます。
.SS "\fBnet-hwaddr\fP *"
.IX Subsection "net-hwaddr *"
\&\s-1HWADDR \s0(ハードコードされた \s-1MAC\s0 アドレス) 設定を削除します。
.PP
Fedora および Red Hat Enterprise Linux に対して、これは \f(CW\*(C`ifcfg\-*\*(C'\fR ファイルから削除されます。
.SS "\fBpacct-log\fP *"
.IX Subsection "pacct-log *"
プロセス・アカウンティングのログファイルを削除します。
.PP
プロセス・アカウンティングが有効になっていると、システム全体のプロセス・アカウンティングが pacct ログファイルに保存されます。
.SS "\fBpackage-manager-cache\fP *"
.IX Subsection "package-manager-cache *"
パッケージマネージャーのキャッシュを削除します。
.SS "\fBpam-data\fP *"
.IX Subsection "pam-data *"
ゲストにある \s-1PAM\s0 データを削除します。
.SS "\fBpassword\fP *"
.IX Subsection "password *"
Set root or user password.
.PP
Set root or another user's password.
.PP
Use the \fI\-\-root\-password\fR option to specify a replacement root password for
the guest.  You can only use this option once.
.PP
Use the \fI\-\-password\fR option to specify replacement user password(s).  You
can use this option as many times as you want.
.PP
Use \fI\-\-password\-crypto\fR to change the password encryption used.
.PP
See \*(L"\s-1OPTIONS\*(R"\s0 above for details of these options.
.PP
This operation is enabled by default, but it only does something if there is
at least one \fI\-\-root\-password\fR or \fI\-\-password\fR argument given.
.PP
\fINotes on password\fR
.IX Subsection "Notes on password"
.PP
Currently this only works for glibc-based Linux guests that use shadow
passwords.
.SS "\fBpuppet-data-log\fP *"
.IX Subsection "puppet-data-log *"
Puppet のデータおよびログファイルを削除します。
.SS "\fBrandom-seed\fP *"
.IX Subsection "random-seed *"
仮想マシンに対して乱数種を生成します。
.PP
Write some random bytes from the host into the random seed file of the
guest.
.PP
以下の \*(L"\s-1RANDOM SEED\*(R"\s0 を参照してください。
.SS "\fBrhn-systemid\fP *"
.IX Subsection "rhn-systemid *"
\&\s-1RHN\s0 システム \s-1ID\s0 を削除します。
.SS "\fBrpm-db\fP *"
.IX Subsection "rpm-db *"
Remove host-specific \s-1RPM\s0 database files.
.PP
Remove host-specific \s-1RPM\s0 database files and locks.  \s-1RPM\s0 will recreate these
files automatically if needed.
.SS "\fBsamba-db-log\fP *"
.IX Subsection "samba-db-log *"
Samba のデータベースおよびログファイルを削除します。
.SS "\fBscript\fP *"
.IX Subsection "script *"
仮想マシンに対して任意のスクリプトを実行します。
.PP
The \f(CW\*(C`script\*(C'\fR module lets you run arbitrary shell scripts or programs
against the guest.
.PP
Note this feature requires \s-1FUSE\s0 support.  You may have to enable this in
your host, for example by adding the current user to the \f(CW\*(C`fuse\*(C'\fR group, or
by loading a kernel module.
.PP
Use one or more \fI\-\-script\fR parameters to specify scripts or programs that
will be run against the guest.
.PP
The script or program is run with its current directory being the guest's
root directory, so relative paths should be used.  For example: \f(CW\*(C`rm
etc/resolv.conf\*(C'\fR in the script would remove a Linux guest's \s-1DNS\s0
configuration file, but \f(CW\*(C`rm /etc/resolv.conf\*(C'\fR would (try to) remove the
host's file.
.PP
Normally a temporary mount point for the guest is used, but you can choose a
specific one by using the \fI\-\-scriptdir\fR parameter.
.PP
\&\fBNote:\fR This is different from \fI\-\-firstboot\fR scripts (which run in the
context of the guest when it is booting first time).  \fI\-\-script\fR scripts
run on the host, not in the guest.
.SS "\fBsmolt-uuid\fP *"
.IX Subsection "smolt-uuid *"
Smolt ハードウェア \s-1UUID\s0 を削除します。
.SS "\fBssh-hostkeys\fP *"
.IX Subsection "ssh-hostkeys *"
仮想マシンの \s-1SSH\s0 ホストキーを削除します。
.PP
仮想マシンの次回起動時に（異なる） \s-1SSH\s0 ホストキーが再生成されます。
.PP
クローン後、仮想マシンが同じ \s-1IP\s0 アドレスを取得すると、ホストキーが変更されたという警告が ssh により表示されます:
.PP
.Vb 4
\& @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
\& @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
\& @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
\& IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
.Ve
.SS "\fBssh-userdir\fP *"
.IX Subsection "ssh-userdir *"
仮想マシンにある \*(L".ssh\*(R" ディレクトリーを削除します。
.PP
ユーザー \*(L"root\*(R" 、およびホームディレクトリーに \f(CW\*(C`.ssh\*(C'\fR ディレクトリーがある他のすべてのユーザーの、\f(CW\*(C`.ssh\*(C'\fR
ディレクトリーを削除します。
.PP
\fINotes on ssh-userdir\fR
.IX Subsection "Notes on ssh-userdir"
.PP
Currently this only looks in \f(CW\*(C`/root\*(C'\fR and \f(CW\*(C`/home/*\*(C'\fR for home directories,
so users with home directories in other locations won't have the ssh files
removed.
.SS "\fBsssd-db-log\fP *"
.IX Subsection "sssd-db-log *"
\&\s-1SSSD\s0 のデータベースとログファイルを削除します。
.SS "\fBudev-persistent-net\fP *"
.IX Subsection "udev-persistent-net *"
udev persistent net ルールを削除します。
.PP
Remove udev persistent net rules which map the guest's existing \s-1MAC\s0 address
to a fixed ethernet device (eg. eth0).
.PP
仮想マシンをクローンした後、通常 \s-1MAC\s0 アドレスは変わります。古い \s-1MAC\s0 アドレスは古い名前（たとえば eth0）を占有するため、このことは新しい
\&\s-1MAC\s0 アドレスが新しい名前（たとえば eth1）に割り当てられることを意味します。それは、一般的に好ましくありません。 udev の永続的な net
ルールを削除することにより、これを避けます。
.SS "\fBuser-account\fP"
.IX Subsection "user-account"
仮想マシンにあるユーザーアカウントを削除します。
.PP
すべてのユーザーアカウントおよびそのホームディレクトリーを削除します。\*(L"root\*(R" アカウントは削除されません。
.PP
\fINotes on user-account\fR
.IX Subsection "Notes on user-account"
.PP
Currently this does not remove the user accounts from \f(CW\*(C`/etc/shadow\*(C'\fR.  This
is because there is no lens for the shadow password file in Augeas.
.SS "\fButmp\fP *"
.IX Subsection "utmp *"
utmp ファイルを削除します。
.PP
このファイルは現在マシンにログインしているユーザーを記録します。最近の Linux
ディストリビューションは、メモリーに保存するため、仮想マシンのディスクにありません。しかし、古いディストリビューションは、ディスクに保存していました。
.SS "\fByum-uuid\fP *"
.IX Subsection "yum-uuid *"
yum \s-1UUID\s0 を削除します。
.PP
yum は元々の \s-1UUID\s0 が削除されたことを通知するとき、次の実行時に新しい \s-1UUID\s0 を作成します。
.SH "コピー方法およびクローン方法"
.IX Header "コピー方法およびクローン方法"
virt-sysprep
は仮想マシンをクローンするプロセスの一部として使用できます。もしくは、クローンされた仮想マシンからテンプレートを準備するために使用できます。仮想化ツールを使用してこれを実現する他の方法がいろいろとあります。このセクションは単に概要を説明します。
.PP
仮想マシン（停止状態の場合）は 2 つの部分からなります:
.IP "\fIconfiguration\fR" 4
.IX Item "configuration"
仮想マシンの設定または説明。  例: libvirt \s-1XML \s0(\f(CW\*(C`virsh dumpxml\*(C'\fR 参照) 、仮想マシンの実行中の設定、または \s-1OVF\s0
のような他の外部形式。
.Sp
いくつかの設定項目は変更する必要があるかもしれません:
.RS 4
.IP "\(bu" 4
名前
.IP "\(bu" 4
\&\s-1UUID\s0
.IP "\(bu" 4
ブロックデバイスへのパス
.IP "\(bu" 4
ネットワークカードの \s-1MAC\s0 アドレス
.RE
.RS 4
.RE
.IP "\fIブロックデバイス\fR" 4
.IX Item "ブロックデバイス"
One or more hard disk images, themselves containing files, directories,
applications, kernels, configuration, etc.
.Sp
Some things inside the block devices that might need to be changed:
.RS 4
.IP "\(bu" 4
ホスト名および他のネットワーク設定
.IP "\(bu" 4
\&\s-1UUID\s0
.IP "\(bu" 4
\&\s-1SSH\s0 ホストキー
.IP "\(bu" 4
Windows の一意なセキュリティ \s-1ID \s0(\s-1SID\s0)
.IP "\(bu" 4
Puppet の登録
.RE
.RS 4
.RE
.SS "ブロックデバイスのコピー法"
.IX Subsection "ブロックデバイスのコピー法"
Starting with an original guest, you probably wish to copy the guest block
device and its configuration to make a template.  Then once you are happy
with the template, you will want to make many clones from it.
.PP
.Vb 7
\&                        virt\-sysprep
\&                             |
\&                             v
\& 元のゲスト \-\-\-\-\-\-\-\-> テンプレート \-\-\-\-\-\-\-\-\-\->
\&                                      \e\-\-\-\-\-\-> クローン
\&                                       \e\-\-\-\-\-> 済みゲスト
\&                                        \e\-\-\-\->
.Ve
.PP
もちろん、ホストにおいて \fIcp\fR\|(1) または \fIdd\fR\|(1) を使用してブロックデバイスをコピーできます。
.PP
.Vb 5
\&               dd                      dd
\& 元のゲスト \-\-\-\-\-\-\-\-> テンプレート \-\-\-\-\-\-\-\-\-\->
\&                                      \e\-\-\-\-\-\-> クローン
\&                                       \e\-\-\-\-\-> 済みゲスト
\&                                        \e\-\-\-\->
.Ve
.PP
よりスマート（かつ高速）な方法もあります:
.PP
.Vb 5
\&                          snapshot
\&            テンプレート \-\-\-\-\-\-\-\-\-\->
\&                            \e\-\-\-\-\-\-> クローン
\&                             \e\-\-\-\-\-> 済みゲスト
\&                              \e\-\-\-\->
.Ve
.PP
You may want to run virt-sysprep twice, once to reset the guest (to make a
template) and a second time to customize the guest for a specific user:
.PP
.Vb 6
\&                    virt\-sysprep        virt\-sysprep
\&                     (リセット)   (ユーザー、キー、ロゴの追加)
\&                         |                   |
\&                 dd      v          dd       v
\& 元の仮想マシン \-\-\-\-> テンプレート \-\-\-\-> コピー済み \-\-\-\-\-\-> カスタム
\&                                        テンプレート       仮想マシン
.Ve
.IP "\(bu" 4
Create a snapshot using qemu-img:
.Sp
.Vb 1
\& qemu\-img create \-f qcow2 \-o backing_file=original snapshot.qcow
.Ve
.Sp
The advantage is that you don't need to copy the original (very fast)  and
only changes are stored (less storage required).
.Sp
Note that writing to the backing file once you have created guests on top of
it is not possible: you will corrupt the guests.
.IP "\(bu" 4
\&\f(CW\*(C`lvcreate \-\-snapshot\*(C'\fR を使用してスナップショットを作成します。
.IP "\(bu" 4
Other ways to create snapshots include using filesystems-level tools (for
filesystems such as btrfs).
.Sp
Most Network Attached Storage (\s-1NAS\s0) devices can also create cheap snapshots
from files or LUNs.
.IP "\(bu" 4
Get your \s-1NAS\s0 to duplicate the \s-1LUN. \s0 Most \s-1NAS\s0 devices can also duplicate LUNs
very cheaply (they copy them on-demand in the background).
.IP "\(bu" 4
\&\fIvirt\-sparsify\fR\|(1) を使用してテンプレートを準備します。以下を参照してください。
.SS "virt-clone"
.IX Subsection "virt-clone"
A separate tool, \fIvirt\-clone\fR\|(1), can be used to duplicate the block device
and/or modify the external libvirt configuration of a guest.  It will reset
the name, \s-1UUID\s0 and \s-1MAC\s0 address of the guest in the libvirt \s-1XML.\s0
.PP
\&\fIvirt\-clone\fR\|(1) does not use libguestfs and cannot look inside the disk
image.  This was the original motivation to write virt-sysprep.
.SS "スパース化"
.IX Subsection "スパース化"
.Vb 2
\&          virt\-sparsify
\& 元のゲスト \-\-\-\-\-\-\-\-> テンプレート
.Ve
.PP
\&\fIvirt\-sparsify\fR\|(1) can be used to make the cloning template smaller, making
it easier to compress and/or faster to copy.
.PP
Notice that since virt-sparsify also copies the image, you can use it to
make the initial copy (instead of \f(CW\*(C`dd\*(C'\fR).
.SS "容量変更"
.IX Subsection "容量変更"
.Vb 5
\&                         virt\-resize
\&            テンプレート \-\-\-\-\-\-\-\-\-\->
\&                            \e\-\-\-\-\-\-> クローン
\&                             \e\-\-\-\-\-> 済みゲスト
\&                              \e\-\-\-\->
.Ve
.PP
If you want to give people cloned guests, but let them pick the size of the
guest themselves (eg. depending on how much they are prepared to pay for
disk space), then instead of copying the template, you can run
\&\fIvirt\-resize\fR\|(1).  Virt-resize performs a copy and resize, and thus is
ideal for cloning guests from a template.
.SH "FIRSTBOOT VS SCRIPT"
.IX Header "FIRSTBOOT VS SCRIPT"
The two options \fI\-\-firstboot\fR and \fI\-\-script\fR both supply shell scripts
that are run against the guest.  However these two options are significantly
different.
.PP
\&\fI\-\-firstboot script\fR uploads the file \f(CW\*(C`script\*(C'\fR into the guest and arranges
that it will run, in the guest, when the guest is next booted.  (The script
will only run once, at the \*(L"first boot\*(R").
.PP
\&\fI\-\-script script\fR runs the shell \f(CW\*(C`script\*(C'\fR \fIon the host\fR, with its current
directory inside the guest filesystem.
.PP
If you needed, for example, to \f(CW\*(C`yum install\*(C'\fR new packages, then you \fImust
not\fR use \fI\-\-script\fR for this, since that would (a) run the \f(CW\*(C`yum\*(C'\fR command
on the host and (b) wouldn't have access to the same resources
(repositories, keys, etc.) as the guest.  Any command that needs to run on
the guest \fImust\fR be run via \fI\-\-firstboot\fR.
.PP
On the other hand if you need to make adjustments to the guest filesystem
(eg. copying in files), then \fI\-\-script\fR is ideal since (a)  it has access
to the host filesystem and (b) you will get immediate feedback on errors.
.PP
Either or both options can be used multiple times on the command line.
.SH "セキュリティ"
.IX Header "セキュリティ"
Although virt-sysprep removes some sensitive information from the guest, it
does not pretend to remove all of it.  You should examine the \*(L"\s-1OPERATIONS\*(R"\s0
above and the guest afterwards.
.PP
Sensitive files are simply removed.  The data they contained may still exist
on the disk, easily recovered with a hex editor or undelete tool.  Use
\&\fIvirt\-sparsify\fR\|(1) as one way to remove this content.  See also the
\&\fIscrub\fR\|(1) command to get rid of deleted content in directory entries and
inodes.
.SS "乱数の種"
.IX Subsection "乱数の種"
\&\fI(このセクションは Linux 仮想マシンのみに適用します)\fR
.PP
The virt-sysprep \f(CW\*(C`random\-seed\*(C'\fR operation writes a few bytes of randomness
from the host into the guest's random seed file.
.PP
If this is just done once and the guest is cloned from the same template,
then each guest will start with the same entropy, and things like \s-1SSH\s0 host
keys and \s-1TCP\s0 sequence numbers may be predictable.
.PP
Therefore you should arrange to add more randomness \fIafter\fR cloning from a
template too, which can be done by just enabling the \f(CW\*(C`random\-seed\*(C'\fR
operation:
.PP
.Vb 2
\& cp template.img newguest.img
\& virt\-sysprep \-\-enable random\-seed \-a newguest.img
.Ve
.SS "SELinux の再ラベル付け"
.IX Subsection "SELinux の再ラベル付け"
\&\fI(このセクションは SELinux を使用している Linux 仮想マシンのみに適用されます。)\fR
.PP
If any new files are created by virt-sysprep, then virt-sysprep touches
\&\f(CW\*(C`/.autorelabel\*(C'\fR so that these will be correctly labelled by SELinux the
next time the guest is booted.  This process interrupts boot and can take
some time.
.PP
\&\fI\-\-selinux\-relabel\fR オプションを指定することにより、すべての仮想マシンに対して強制的に再ラベルできます。
.PP
\&\fI\-\-no\-selinux\-relabel\fR オプションを指定することにより、すべての仮想マシンに対して強制的に再ラベルできます。
.SH "WINDOWS 8"
.IX Header "WINDOWS 8"
Windows 8 \*(L"fast startup\*(R" can prevent virt-sysprep from working.  See
\&\*(L"\s-1WINDOWS HIBERNATION AND WINDOWS 8 FAST STARTUP\*(R"\s0 in \fIguestfs\fR\|(3).
.SH "SHELL QUOTING"
.IX Header "SHELL QUOTING"
Libvirt guest names can contain arbitrary characters, some of which have
meaning to the shell such as \f(CW\*(C`#\*(C'\fR and space.  You may need to quote or
escape these characters on the command line.  See the shell manual page
\&\fIsh\fR\|(1) for details.
.SH "終了ステータス"
.IX Header "終了ステータス"
このプログラムは、成功すると 0 を返します。または、エラーが起きると 1 を返します。
.SH "関連項目"
.IX Header "関連項目"
\&\fIguestfs\fR\|(3), \fIguestfish\fR\|(1), \fIvirt\-clone\fR\|(1), \fIvirt\-rescue\fR\|(1),
\&\fIvirt\-resize\fR\|(1), \fIvirt\-sparsify\fR\|(1), \fIvirsh\fR\|(1), \fIlvcreate\fR\|(8),
\&\fIqemu\-img\fR\|(1), \fIscrub\fR\|(1), http://libguestfs.org/,
http://libvirt.org/.
.SH "著者"
.IX Header "著者"
Richard W.M. Jones http://people.redhat.com/~rjones/
.PP
Wanlong Gao, Fujitsu Ltd.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2011\-2013 Red Hat Inc.
.PP
Copyright (C) 2012 Fujitsu Ltd.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
\&\s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE. \s0 See the \s-1GNU\s0
General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, \s-1MA 02110\-1301 USA.\s0
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
