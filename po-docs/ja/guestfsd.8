.\" Automatically generated by Podwrapper::Man 1.36.5 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "guestfsd 8"
.TH guestfsd 8 "2017-06-22" "libguestfs-1.36.5" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
guestfsd \- guestfs デーモン
.SH "書式"
.IX Header "書式"
.Vb 1
\& guestfsd [\-r] [\-v|\-\-verbose]
.Ve
.SH "説明"
.IX Header "説明"
\&\f(CW\*(C`guestfsd\*(C'\fR は libguestfs
デーモンです。一般ユーザーはこのプログラムを明示的に実行する必要がありません。このマニュアルページは、\f(CW\*(C`guestfsd\*(C'\fR が libguestfs
アプライアンスにおいて、および libguestfs ライブにおいて実行することを説明しています。
.SS "libguestfs アプライアンス"
.IX Subsection "libguestfs アプライアンス"
libguestfs アプライアンスのアーキテクチャーは \*(L"アーキテクチャー\*(R" in \fIguestfs\fR\|(3) を参照してください。
.PP
After the appliance boots, the \fI/init\fR script in the appliance starts
\&\f(CW\*(C`guestfsd\*(C'\fR with no arguments.  \f(CW\*(C`guestfsd\*(C'\fR opens the virtio-serial port on
a known path (see \*(L"\s-1FILES\*(R"\s0).  It initiates the protocol (see
\&\*(L"\s-1COMMUNICATION PROTOCOL\*(R"\s0 in \fIguestfs\fR\|(3)) and processes requests one at a time
from the library until the appliance is destroyed.
.PP
Filesystems are mounted under \fI/sysroot\fR and all filesystem operations
happen relative to this directory.
.SS "\s-1LIBGUESTFS LIVE\s0"
.IX Subsection "LIBGUESTFS LIVE"
In the libguestfs live case, \f(CW\*(C`guestfsd \-r\*(C'\fR is started from the rc-scripts,
systemd, etc.
.PP
The \f(CW\*(C`\-r\*(C'\fR option causes the daemon to operate on the root filesystem instead
of \fI/sysroot\fR.
.PP
Currently (because of limitations in virtio-serial) only one client can
connect at a time, and \f(CW\*(C`guestfsd\*(C'\fR must be restarted after each client
disconnects.  If libguestfs live were changed to use a different transport
such as \s-1TCP/IP\s0 then this limitation could be removed.
.SH "オプション"
.IX Header "オプション"
.IP "\fB\-?\fR" 4
.IX Item "-?"
.PD 0
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
.PD
簡単なヘルプを表示します。
.IP "\fB\-c\fR \s-1CHANNEL\s0" 4
.IX Item "-c CHANNEL"
.PD 0
.IP "\fB\-\-channel\fR \s-1CHANNEL\s0" 4
.IX Item "--channel CHANNEL"
.IP "\fB\-\-channel\fR fd:N" 4
.IX Item "--channel fd:N"
.PD
Pass the name of the virtio-serial channel, serial port, etc.  over which
guestfsd will communicate with the library.  If this parameter is not given,
then an internal default port is used.
.Sp
The \f(CW\*(C`fd:N\*(C'\fR form causes guestfsd to use the file descriptor \f(CW\*(C`N\*(C'\fR directly.
.IP "\fB\-l\fR" 4
.IX Item "-l"
.PD 0
.IP "\fB\-\-listen\fR" 4
.IX Item "--listen"
.PD
Instead of opening the \f(CW\*(C`guestfs_channel\*(C'\fR and thus expecting that it already
exists, create the channel as a Unix domain socket, listen on it, and accept
a single connection.  This is mainly used for testing the daemon.
.IP "\fB\-n\fR" 4
.IX Item "-n"
.PD 0
.IP "\fB\-\-network\fR" 4
.IX Item "--network"
.PD
Enable network features in the daemon.
.IP "\fB\-r\fR" 4
.IX Item "-r"
Set the root filesystem to be \fI/\fR (instead of the default which is
\&\fI/sysroot\fR).  Also do not unmount filesystems when the daemon exits.
.Sp
This option is used to enable libguestfs live.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
デバッグ用の冗長なメッセージを有効にします。
.Sp
The verbose flag is also set if the Linux command line contains the
substring \f(CW\*(C`guestfs_verbose=1\*(C'\fR.
.SH "終了ステータス"
.IX Header "終了ステータス"
このプログラムは、成功すると 0 を、エラーがあると 0 以外を返します。
.SH "ファイル"
.IX Header "ファイル"
.IP "\fI/dev/virtio\-ports/org.libguestfs.channel.0\fR" 4
.IX Item "/dev/virtio-ports/org.libguestfs.channel.0"
\&\f(CW\*(C`guestfsd\*(C'\fR が接続する virtio シリアルポート。
.IP "\fI/proc/cmdline\fR" 4
.IX Item "/proc/cmdline"
The Linux command line is parsed to discover \f(CW\*(C`guestfs_*\*(C'\fR flags.  The
following flags are understood:
.RS 4
.IP "\fBguestfs_verbose=1\fR" 4
.IX Item "guestfs_verbose=1"
Enable verbose messages.  This flag is passed by the libguestfs library to
the appliance to make the daemon more verbose (it acts like the \fI\-v\fR flag
on the command line).  Unrelated to the daemon, it also causes the appliance
init script to print out a lot more debugging information.
.IP "\fBguestfs_channel=PATH\fR" 4
.IX Item "guestfs_channel=PATH"
Set the path to the virtio-serial channel to something other than the
default (which is \fI/dev/virtio\-ports/org.libguestfs.channel.0\fR).  This is
used by the User-Mode Linux backend to use a regular emulated serial port
instead of virtio-serial.
.IP "\fBguestfs_network=1\fR" 4
.IX Item "guestfs_network=1"
This is set if the appliance network is enabled (see
\&\f(CW\*(C`guestfs_set_network\*(C'\fR).
.RE
.RS 4
.RE
.SH "関連項目"
.IX Header "関連項目"
\&\fIguestfs\fR\|(3), http://libguestfs.org/.
.SH "著者"
.IX Header "著者"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2009\-2017 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
