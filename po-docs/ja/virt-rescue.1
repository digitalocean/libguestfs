.\" Automatically generated by Podwrapper::Man 1.36.5 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "virt-rescue 1"
.TH virt-rescue 1 "2017-06-22" "libguestfs-1.36.5" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
virt-rescue \- 仮想マシンにおいてレスキューシェルを実行します
.SH "書式"
.IX Header "書式"
.Vb 1
\& virt\-rescue [\-\-options] \-d domname
\&
\& virt\-rescue [\-\-options] \-a disk.img [\-a disk.img ...]
\&
\& virt\-rescue \-\-suggest (\-d domname | \-a disk.img ...)
.Ve
.PP
古い形式:
.PP
.Vb 1
\& virt\-rescue [\-\-options] domname
\&
\& virt\-rescue [\-\-options] disk.img [disk.img ...]
.Ve
.SH "説明"
.IX Header "説明"
virt-rescue is like a Rescue \s-1CD,\s0 but for virtual machines, and without the
need for a \s-1CD.\s0  virt-rescue gives you a rescue shell and some simple
recovery tools which you can use to examine or rescue a virtual machine or
disk image.
.PP
You can run virt-rescue on any virtual machine known to libvirt, or directly
on disk image(s):
.PP
.Vb 1
\& virt\-rescue \-d GuestName
\&
\& virt\-rescue \-\-ro \-a /path/to/disk.img
\&
\& virt\-rescue \-a /dev/sdc
.Ve
.PP
動作中の仮想マシンには \-\-ro オプションを使用 \fIしなければいけません\fR 。
.PP
When you run virt-rescue on a virtual machine or disk image, you are placed
in an interactive bash shell where you can use many ordinary Linux
commands.  What you see in \fI/\fR (\fI/bin\fR, \fI/lib\fR etc) is the rescue
appliance.  You must mount the virtual machine's filesystems by hand.  There
is an empty directory called \fI/sysroot\fR where you can mount filesystems.
.PP
You can get virt-rescue to suggest mount commands for you by using the
\&\fI\-\-suggest\fR option (in another terminal):
.PP
.Vb 2
\& $ virt\-rescue \-\-suggest \-d Fedora15
\&仮想マシンまたはディスクイメージの検査中 ...
\& 
\& This disk contains one or more operating systems.  You can use these
\& mount commands in virt\-rescue (at the ><rescue> prompt) to mount the
\& filesystems.
\& 
\& # /dev/vg_f15x32/lv_root は linux オペレーティングシステムのルートです
\& # 種別: linux, ディストリビューション: fedora, バージョン: 15.0
\& # Fedora release 15 (Lovelock)
\& 
\& mount /dev/vg_f15x32/lv_root /sysroot/
\& mount /dev/vda1 /sysroot/boot
\& mount \-\-bind /dev /sysroot/dev
\& mount \-\-bind /dev/pts /sysroot/dev/pts
\& mount \-\-bind /proc /sysroot/proc
\& mount \-\-bind /sys /sysroot/sys
.Ve
.PP
Another way is to list the logical volumes (with \fIlvs\fR\|(8)) and partitions
(with \fIparted\fR\|(8)) and mount them by hand:
.PP
.Vb 7
\& ><rescue> lvs
\& LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert
\& lv_root vg_f15x32 \-wi\-a\-   8.83G
\& lv_swap vg_f15x32 \-wi\-a\- 992.00M
\& ><rescue> mount /dev/vg_f15x32/lv_root /sysroot
\& ><rescue> mount /dev/vda1 /sysroot/boot
\& ><rescue> ls /sysroot
.Ve
.PP
利用可能なファイルシステムを一覧表示するためのもう 1 つのコマンドは \fIvirt\-filesystems\fR\|(1) です。
.PP
Linux 仮想マシンにおいてコマンド（たとえば、grub）を実行するには、まず /sysroot ディレクトリーの中に chroot
する必要があります:
.PP
.Vb 1
\& ><rescue> chroot /sysroot
.Ve
.SS "注記"
.IX Subsection "注記"
Virt-rescue can be used on \fIany\fR disk image file or device, not just a
virtual machine.  For example you can use it on a blank file if you want to
partition that file (although we would recommend using \fIguestfish\fR\|(1)
instead as it is more suitable for this purpose).  You can even use
virt-rescue on things like \s-1SD\s0 cards.
.PP
You can get virt-rescue to give you scratch disk(s) to play with.  This is
useful for testing out Linux utilities (see \fI\-\-scratch\fR).
.PP
Virt-rescue does not require root.  You only need to run it as root if you
need root to open the disk image.
.PP
This tool is just designed for quick interactive hacking on a virtual
machine.  For more structured access to a virtual machine disk image, you
should use \fIguestfs\fR\|(3).  To get a structured shell that you can use to
make scripted changes to guests, use \fIguestfish\fR\|(1).
.SH "オプション"
.IX Header "オプション"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
簡単なヘルプを表示します。
.IP "\fB\-a\fR \s-1FILE\s0" 4
.IX Item "-a FILE"
.PD 0
.IP "\fB\-\-add\fR \s-1FILE\s0" 4
.IX Item "--add FILE"
.PD
Add \f(CW\*(C`FILE\*(C'\fR which should be a disk image from a virtual machine.  If the
virtual machine has multiple block devices, you must supply all of them with
separate \fI\-a\fR options.
.Sp
ディスクイメージの形式は自動検知されます。 これを上書きして強制的に特定の形式を使用する場合、 \fI\-\-format=..\fR オプションを使用します。
.IP "\fB\-a\fR \s-1URI\s0" 4
.IX Item "-a URI"
.PD 0
.IP "\fB\-\-add\fR \s-1URI\s0" 4
.IX Item "--add URI"
.PD
リモートディスクを追加します。 \*(L"リモートストレージの追加\*(R" in \fIguestfish\fR\|(1) 参照。
.IP "\fB\-\-append\fR \s-1KERNELOPTS\s0" 4
.IX Item "--append KERNELOPTS"
レスキューカーネルに追加オプションを渡します。
.IP "\fB\-c\fR \s-1URI\s0" 4
.IX Item "-c URI"
.PD 0
.IP "\fB\-\-connect\fR \s-1URI\s0" 4
.IX Item "--connect URI"
.PD
libvirt を使用していると、指定された \fI\s-1URI\s0\fR に接続します。  省略すると、デフォルトの libvirt ハイパーバイザーに接続します。
.Sp
ゲストのブロックデバイスを直接指定していると（(\fI\-a\fR)）、libvirt は何も使用されません。
.IP "\fB\-d\fR guest" 4
.IX Item "-d guest"
.PD 0
.IP "\fB\-\-domain\fR guest" 4
.IX Item "--domain guest"
.PD
名前付きの libvirt 仮想マシンからすべてのディスクを追加します。  名前の代わりに仮想マシンの \s-1UUID\s0 を使用できます。
.IP "\fB\-\-format=raw|qcow2|..\fR" 4
.IX Item "--format=raw|qcow2|.."
.PD 0
.IP "\fB\-\-format\fR" 4
.IX Item "--format"
.PD
\&\fI\-a\fR オプションは標準状態でディスクイメージの形式を自動検知します。 これを使用することにより、コマンドラインで後続の \fI\-a\fR
オプションのディスク形式を強制的に指定できます。 引数なしで \fI\-\-format\fR を使用することにより、 後続の \fI\-a\fR
オプションに対して自動検知に戻せます。
.Sp
例:
.Sp
.Vb 1
\& virt\-rescue \-\-format=raw \-a disk.img
.Ve
.Sp
forces raw format (no auto-detection) for \fIdisk.img\fR.
.Sp
.Vb 1
\& virt\-rescue \-\-format=raw \-a disk.img \-\-format \-a another.img
.Ve
.Sp
forces raw format (no auto-detection) for \fIdisk.img\fR and reverts to
auto-detection for \fIanother.img\fR.
.Sp
仮想マシンのディスクイメージが信頼できない raw 形式である場合、 ディスク形式を指定するためにこのオプションを使用すべきです。
これにより、悪意のある仮想マシンにより起こり得る セキュリティ問題を回避できます (\s-1CVE\-2010\-3851\s0)。
.IP "\fB\-m\fR \s-1MB\s0" 4
.IX Item "-m MB"
.PD 0
.IP "\fB\-\-memsize\fR \s-1MB\s0" 4
.IX Item "--memsize MB"
.PD
Change the amount of memory allocated to the rescue system.  The default is
set by libguestfs and is small but adequate for running system tools.  The
occasional program might need more memory.  The parameter is specified in
megabytes.
.IP "\fB\-\-network\fR" 4
.IX Item "--network"
仮想マシンにおいて \s-1QEMU\s0 のユーザーモードのネットワークを有効にします。 \*(L"\s-1NETWORK\*(R"\s0 参照。
.IP "\fB\-r\fR" 4
.IX Item "-r"
.PD 0
.IP "\fB\-\-ro\fR" 4
.IX Item "--ro"
.PD
イメージを読み込み専用で開きます。
.Sp
ディスクイメージまたは仮想マシンが使用中の場合、 必ずこのオプションを使用する必要があります。 また、ディスクへの書き込みアクセスが不要な場合、
このオプションが一般的に推奨されます。
.Sp
\&\*(L"\s-1OPENING DISKS FOR READ AND WRITE\*(R"\s0 in \fIguestfish\fR\|(1) 参照。
.IP "\fB\-\-scratch\fR" 4
.IX Item "--scratch"
.PD 0
.IP "\fB\-\-scratch=N\fR" 4
.IX Item "--scratch=N"
.PD
\&\fI\-\-scratch\fR オプションにより、大きなスクラッチディスクをレスキュー・アプライアンスに追加できます。\fI\-\-scratch=N\fR
により、\f(CW\*(C`N\*(C'\fR 個のスクラッチディスクを追加できます。virt\-rescue が終了するとき、スクラッチディスクは自動的に削除されます。
.Sp
\&\fI\-a\fR, \fI\-d\fR および \fI\-\-scratch\fR
オプションは混在できます。スクラッチディスクは、これらがコマンドラインに現れる順番で、アプライアンスに追加されます。
.IP "\fB\-\-selinux\fR" 4
.IX Item "--selinux"
This option is provided for backwards compatibility and does nothing.
.IP "\fB\-\-smp\fR N" 4
.IX Item "--smp N"
レスキューアプライアンスにおいて N ≥ 2 仮想 \s-1CPU\s0 を有効にします。
.IP "\fB\-\-suggest\fR" 4
.IX Item "--suggest"
Inspect the disk image and suggest what mount commands should be used to
mount the disks.  You should use the \fI\-\-suggest\fR option in a second
terminal, then paste the commands into another virt-rescue.
.Sp
このオプションは \fI\-\-ro\fR を意味します。仮想マシンが起動していたり、他の virt-rescue を実行しているときでも安全です。
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
デバッグ用の冗長なメッセージを有効にします。
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
バージョン番号を表示して、終了します。
.IP "\fB\-w\fR" 4
.IX Item "-w"
.PD 0
.IP "\fB\-\-rw\fR" 4
.IX Item "--rw"
.PD
This changes the \fI\-a\fR and \fI\-d\fR options so that disks are added and mounts
are done read-write.
.Sp
\&\*(L"\s-1OPENING DISKS FOR READ AND WRITE\*(R"\s0 in \fIguestfish\fR\|(1) 参照。
.IP "\fB\-x\fR" 4
.IX Item "-x"
libguestfs \s-1API\s0 呼び出しのトレースを有効にします。
.SH "旧形式のコマンドライン引数"
.IX Header "旧形式のコマンドライン引数"
Previous versions of virt-rescue allowed you to write either:
.PP
.Vb 1
\& virt\-rescue disk.img [disk.img ...]
.Ve
.PP
または
.PP
.Vb 1
\& virt\-rescue guestname
.Ve
.PP
whereas in this version you should use \fI\-a\fR or \fI\-d\fR respectively to avoid
the confusing case where a disk image might have the same name as a guest.
.PP
互換性のため古い形式がまだサポートされています。
.SH "ネットワーク"
.IX Header "ネットワーク"
Adding the \fI\-\-network\fR option enables \s-1QEMU\s0 user networking in the rescue
appliance.  There are some differences between user networking and ordinary
networking:
.IP "ping does not work" 4
.IX Item "ping does not work"
Because the \s-1ICMP ECHO_REQUEST\s0 protocol generally requires root in order to
send the ping packets, and because virt-rescue must be able to run as
non-root, \s-1QEMU\s0 user networking is not able to emulate the \fIping\fR\|(8)
command.  The ping command will appear to resolve addresses but will not be
able to send or receive any packets.  This does not mean that the network is
not working.
.IP "cannot receive connections" 4
.IX Item "cannot receive connections"
\&\s-1QEMU\s0 user networking cannot receive incoming connections.
.IP "\s-1TCP\s0 接続の作成法" 4
.IX Item "TCP 接続の作成法"
The virt-rescue appliance needs to be small and so does not include many
network tools.  In particular there is no \fItelnet\fR\|(1) command.  You can
make \s-1TCP\s0 connections from the shell using the magical
\&\fI/dev/tcp/<hostname>/<port>\fR syntax:
.Sp
.Vb 3
\& exec 3<>/dev/tcp/redhat.com/80
\& echo "GET /" >&3
\& cat <&3
.Ve
.Sp
詳細は \fIbash\fR\|(1) 参照。
.SH "CAPTURING CORE DUMPS"
.IX Header "CAPTURING CORE DUMPS"
If you are testing a tool inside virt-rescue and the tool (\fBnot\fR
virt-rescue) segfaults, it can be tricky to capture the core dump outside
virt-rescue for later analysis.  This section describes one way to do this.
.IP "1." 4
Create a scratch disk for core dumps:
.Sp
.Vb 3
\& truncate \-s 4G /tmp/corefiles
\& virt\-format \-\-partition=mbr \-\-filesystem=ext2 \-a /tmp/corefiles
\& virt\-filesystems \-a /tmp/corefiles \-\-all \-\-long \-h
.Ve
.IP "2." 4
When starting virt-rescue, attach the core files disk last:
.Sp
.Vb 1
\& virt\-rescue \-\-rw [\-a ...] \-a /tmp/corefiles
.Ve
.Sp
\&\fB\s-1NB.\s0\fR If you use the \fI\-\-ro\fR option, then virt-rescue will silently not
write any core files to \fI/tmp/corefiles\fR.
.IP "3." 4
Inside virt-rescue, mount the core files disk.  Note replace \fI/dev/sdb1\fR
with the last disk index.  For example if the core files disk is the last of
four disks, you would use \fI/dev/sdd1\fR.
.Sp
.Vb 2
\& ><rescue> mkdir /tmp/mnt
\& ><rescue> mount /dev/sdb1 /tmp/mnt
.Ve
.IP "4." 4
Enable core dumps in the rescue kernel:
.Sp
.Vb 3
\& ><rescue> echo \*(Aq/tmp/mnt/core.%p\*(Aq > /proc/sys/kernel/core_pattern
\& ><rescue> ulimit \-Hc unlimited
\& ><rescue> ulimit \-Sc unlimited
.Ve
.IP "5." 4
Run the tool that caused the core dump.  The core dump will be written to
\&\fI/tmp/mnt/core.\fI\s-1PID\s0\fI\fR.
.Sp
.Vb 4
\& ><rescue> ls \-l /tmp/mnt
\& total 1628
\& \-rw\-\-\-\-\-\-\- 1 root root 1941504 Dec  7 13:13 core.130
\& drwx\-\-\-\-\-\- 2 root root   16384 Dec  7 13:00 lost+found
.Ve
.IP "6." 4
Before exiting virt-rescue, unmount (or at least sync) the disks:
.Sp
.Vb 2
\& ><rescue> umount /tmp/mnt
\& ><rescue> exit
.Ve
.IP "7." 4
Outside virt-rescue, the core dump(s) can be removed from the disk using
\&\fIguestfish\fR\|(1).  For example:
.Sp
.Vb 3
\& guestfish \-\-ro \-a /tmp/corefiles \-m /dev/sda1
\& ><fs> ll /
\& ><fs> download /core.NNN /tmp/core.NNN
.Ve
.SH "環境変数"
.IX Header "環境変数"
Several environment variables affect virt-rescue.  See
\&\*(L"\s-1ENVIRONMENT VARIABLES\*(R"\s0 in \fIguestfs\fR\|(3) for the complete list.
.SH "ファイル"
.IX Header "ファイル"
.ie n .IP "$XDG_CONFIG_HOME/libguestfs/libguestfs\-tools.conf" 4
.el .IP "\f(CW$XDG_CONFIG_HOME\fR/libguestfs/libguestfs\-tools.conf" 4
.IX Item "$XDG_CONFIG_HOME/libguestfs/libguestfs-tools.conf"
.PD 0
.ie n .IP "$HOME/.libguestfs\-tools.rc" 4
.el .IP "\f(CW$HOME\fR/.libguestfs\-tools.rc" 4
.IX Item "$HOME/.libguestfs-tools.rc"
.ie n .IP "$XDG_CONFIG_DIRS/libguestfs/libguestfs\-tools.conf" 4
.el .IP "\f(CW$XDG_CONFIG_DIRS\fR/libguestfs/libguestfs\-tools.conf" 4
.IX Item "$XDG_CONFIG_DIRS/libguestfs/libguestfs-tools.conf"
.IP "/etc/libguestfs\-tools.conf" 4
.IX Item "/etc/libguestfs-tools.conf"
.PD
This configuration file controls the default read-only or read-write mode
(\fI\-\-ro\fR or \fI\-\-rw\fR).
.Sp
See \fIlibguestfs\-tools.conf\fR\|(5).
.SH "関連項目"
.IX Header "関連項目"
\&\fIguestfs\fR\|(3), \fIguestfish\fR\|(1), \fIvirt\-cat\fR\|(1), \fIvirt\-edit\fR\|(1),
\&\fIvirt\-filesystems\fR\|(1), \fIlibguestfs\-tools.conf\fR\|(5),
http://libguestfs.org/.
.SH "著者"
.IX Header "著者"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2009\-2017 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
