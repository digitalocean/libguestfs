
=item B<--chmod> PERMISSIONS:FILE (see C<customize> below)

Change the permissions of C<FILE> to C<PERMISSIONS>.

I<Note>: C<PERMISSIONS> by default would be decimal, unless you prefix it
with C<0> to get octal, ie. use C<0700> not C<700>.

=item B<--delete> PATH (see C<customize> below)

Delete a file from the guest.  Or delete a directory (and all its contents,
recursively).

See also: I<--upload>, I<--scrub>.

=item B<--edit> FILE:EXPR (see C<customize> below)

Edit C<FILE> using the Perl expression C<EXPR>.

表現がシェルにより変更されるのを防ぐために、適切に引用符でくくるよう注意してください。

このオプションは Perl 5 がインストールされているときのみ利用可能であることに注意してください。

See L<virt-edit(1)/NON-INTERACTIVE EDITING>.

=item B<--firstboot> SCRIPT (see C<customize> below)

Install C<SCRIPT> inside the guest, so that when the guest first boots up,
the script runs (as root, late in the boot process).

The script is automatically chmod +x after installation in the guest.

The alternative version I<--firstboot-command> is the same, but it
conveniently wraps the command up in a single line script for you.

You can have multiple I<--firstboot> options.  They run in the same order
that they appear on the command line.

See also I<--run>.

=item B<--firstboot-command> 'CMD+ARGS' (see C<customize> below)

Run command (and arguments) inside the guest when the guest first boots up
(as root, late in the boot process).

You can have multiple I<--firstboot> options.  They run in the same order
that they appear on the command line.

See also I<--run>.

=item B<--firstboot-install> PKG,PKG..  (see C<customize> below)

Install the named packages (a comma-separated list).  These are installed
when the guest first boots using the guest's package manager (eg. apt, yum,
etc.) and the guest's network connection.

For an overview on the different ways to install packages, see
L<virt-builder(1)/INSTALLING PACKAGES>.

=item B<--hostname> HOSTNAME (see C<customize> below)

Set the hostname of the guest to C<HOSTNAME>.  You can use a dotted
hostname.domainname (FQDN) if you want.

=item B<--install> PKG,PKG..  (see C<customize> below)

Install the named packages (a comma-separated list).  These are installed
during the image build using the guest's package manager (eg. apt, yum,
etc.) and the host's network connection.

For an overview on the different ways to install packages, see
L<virt-builder(1)/INSTALLING PACKAGES>.

See also I<--update>.

=item B<--keep-user-accounts> USERS (see C<user-account> below)

The user accounts to be kept in the guest.  The value of this option is a
list of user names separated by comma, where specifying an user means it is
going to be kept.  For example:

 --keep-user-accounts mary

would keep the user account C<mary>.

This option can be specified multiple times.

=item B<--link> TARGET:LINK[:LINK..] (see C<customize> below)

Create symbolic link(s) in the guest, starting at C<LINK> and pointing at
C<TARGET>.

=item B<--mkdir> DIR (see C<customize> below)

Create a directory in the guest.

This uses S<C<mkdir -p>> so any intermediate directories are created, and it
also works if the directory already exists.

=item B<--no-logfile> (see C<customize> below)

Scrub C<builder.log> (log file from build commands) from the image after
building is complete.  If you don't want to reveal precisely how the image
was built, use this option.

See also: L</LOG FILE>.

=item B<--password> USER:SELECTOR (see C<customize> below)

Set the password for C<USER>.  (Note this option does I<not> create the user
account).

See L<virt-builder(1)/USERS AND PASSWORDS> for the format of the C<SELECTOR>
field, and also how to set up user accounts.

=item B<--password-crypto> md5|sha256|sha512 (see C<customize> below)

When the virt tools change or set a password in the guest, this option sets
the password encryption of that password to C<md5>, C<sha256> or C<sha512>.

C<sha256> and C<sha512> require glibc E<ge> 2.7 (check crypt(3) inside the
guest).

C<md5> will work with relatively old Linux guests (eg. RHEL 3), but is not
secure against modern attacks.

The default is C<sha512> unless libguestfs detects an old guest that didn't
have support for SHA-512, in which case it will use C<md5>.  You can
override libguestfs by specifying this option.

Note this does not change the default password encryption used by the guest
when you create new user accounts inside the guest.  If you want to do that,
then you should use the I<--edit> option to modify
C</etc/sysconfig/authconfig> (Fedora, RHEL) or C</etc/pam.d/common-password>
(Debian, Ubuntu).

=item B<--remove-user-accounts> USERS (see C<user-account> below)

The user accounts to be removed from the guest.  The value of this option is
a list of user names separated by comma, where specifying an user means it
is going to be removed.  For example:

 --remove-user-accounts bob,eve

would only remove the user accounts C<bob> and C<eve>.

This option can be specified multiple times.

=item B<--root-password> SELECTOR (see C<customize> below)

Set the root password.

See L<virt-builder(1)/USERS AND PASSWORDS> for the format of the C<SELECTOR>
field, and also how to set up user accounts.

Note: In virt-builder, if you I<don't> set I<--root-password> then the guest
is given a I<random> root password.

=item B<--run> SCRIPT (see C<customize> below)

Run the shell script (or any program) called C<SCRIPT> on the disk image.
The script runs virtualized inside a small appliance, chrooted into the
guest filesystem.

The script is automatically chmod +x.

If libguestfs supports it then a limited network connection is available but
it only allows outgoing network connections.  You can also attach data disks
(eg. ISO files) as another way to provide data (eg. software packages) to
the script without needing a network connection (I<--attach>).  You can also
upload data files (I<--upload>).

You can have multiple I<--run> options.  They run in the same order that
they appear on the command line.

See also: I<--firstboot>, I<--attach>, I<--upload>.

=item B<--run-command> 'CMD+ARGS' (see C<customize> below)

Run the command and arguments on the disk image.  The command runs
virtualized inside a small appliance, chrooted into the guest filesystem.

If libguestfs supports it then a limited network connection is available but
it only allows outgoing network connections.  You can also attach data disks
(eg. ISO files) as another way to provide data (eg. software packages) to
the script without needing a network connection (I<--attach>).  You can also
upload data files (I<--upload>).

You can have multiple I<--run-command> options.  They run in the same order
that they appear on the command line.

See also: I<--firstboot>, I<--attach>, I<--upload>.

=item B<--script> SCRIPT (see C<script> below)

Run the named C<SCRIPT> (a shell script or program) against the guest.  The
script can be any program on the host.  The script's current directory will
be the guest's root directory.

B<Note:> If the script is not on the $PATH, then you must give the full
absolute path to the script.

=item B<--scriptdir> SCRIPTDIR (see C<script> below)

The mount point (an empty directory on the host) used when the C<script>
operation is enabled and one or more scripts are specified using I<--script>
parameter(s).

B<Note:> C<SCRIPTDIR> B<must> be an absolute path.

If I<--scriptdir> is not specified then a temporary mountpoint will be
created.

=item B<--scrub> FILE (see C<customize> below)

Scrub a file from the guest.  This is like I<--delete> except that:

=over 4

=item *

It scrubs the data so a guest could not recover it.

=item *

It cannot delete directories, only regular files.

=back

=item B<--selinux-relabel> (see C<customize> below)

Relabel files in the guest so that they have the correct SELinux label.

You should only use this option for guests which support SELinux.

=item B<--timezone> TIMEZONE (see C<customize> below)

Set the default timezone of the guest to C<TIMEZONE>.  Use a location string
like C<Europe/London>

=item B<--update> (see C<customize> below)

Do the equivalent of C<yum update>, C<apt-get upgrade>, or whatever command
is required to update the packages already installed in the template to
their latest versions.

See also I<--install>.

=item B<--upload> FILE:DEST (see C<customize> below)

Upload local file C<FILE> to destination C<DEST> in the disk image.  File
owner and permissions from the original are preserved, so you should set
them to what you want them to be in the disk image.

C<DEST> could be the final filename.  This can be used to rename the file on
upload.

If C<DEST> is a directory name (which must already exist in the guest)  then
the file is uploaded into that directory, and it keeps the same name as on
the local filesystem.

See also: I<--mkdir>, I<--delete>, I<--scrub>.

=item B<--write> FILE:CONTENT (see C<customize> below)

Write C<CONTENT> to C<FILE>.

