.\" Automatically generated by Podwrapper::Man 1.36.5 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "virt-p2v-make-disk 1"
.TH virt-p2v-make-disk 1 "2017-06-22" "libguestfs-1.36.5" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
virt\-p2v\-make\-disk \- Build the virt\-p2v disk using virt-builder
.SH "書式"
.IX Header "書式"
.Vb 1
\& virt\-p2v\-make\-disk \-o /dev/sdX [os\-version]
.Ve
.SH "説明"
.IX Header "説明"
\&\fIvirt\-p2v\fR\|(1) converts a physical machine to run virtualized on \s-1KVM,\s0
managed by libvirt, OpenStack, oVirt, Red Hat Enterprise Virtualisation
(\s-1RHEV\s0), or one of the other targets supported by \fIvirt\-v2v\fR\|(1).
.PP
virt\-p2v\-make\-disk is a script which creates a bootable disk image or \s-1USB\s0
key containing virt\-p2v.  It uses \fIvirt\-builder\fR\|(1) to do this, and is just
a small shell script around virt-builder.
.PP
The required \fI\-o\fR parameter specifies where the output should go, for
example to a \s-1USB\s0 key (eg. \f(CW\*(C`\-o /dev/sdX\*(C'\fR) or to a file.  If you pass a
device name, then \fBthe existing contents of the device will be erased\fR.
.ie n .SS """os\-version"" parameter"
.el .SS "\f(CWos\-version\fP parameter"
.IX Subsection "os-version parameter"
The optional \f(CW\*(C`os\-version\*(C'\fR parameter is the base Linux distro to use for the
operating system on the \s-1ISO.\s0  If you don't set this parameter, the script
tries to choose a suitable default for you.  Most users should \fInot\fR use
the \f(CW\*(C`os\-version\*(C'\fR parameter.
.PP
The base \s-1OS\s0 selected for virt\-p2v is not related in any way to the \s-1OS\s0 of the
physical machine that you are trying to convert.
.PP
To list possible \f(CW\*(C`os\-version\*(C'\fR combinations, do:
.PP
.Vb 1
\& virt\-builder \-l
.Ve
.SH "例"
.IX Header "例"
Write a virt\-p2v bootable \s-1USB\s0 key on \fI/dev/sdX\fR (any existing content on
\&\fI/dev/sdX\fR is erased):
.PP
.Vb 1
\& virt\-p2v\-make\-disk \-o /dev/sdX
.Ve
.PP
Write a virt\-p2v bootable virtual disk image, and boot it under qemu:
.PP
.Vb 4
\& virt\-p2v\-make\-disk \-o /var/tmp/p2v.img
\& qemu\-kvm \-m 1024 \-boot c \e
\&   \-drive file=/var/tmp/p2v.img,if=virtio,index=0 \e
\&   \-drive file=/var/tmp/guest.img,if=virtio,index=1
.Ve
.PP
where \fI/var/tmp/guest.img\fR would be the disk image of some guest that you
want to convert (for testing only).
.SH "ADDING EXTRA PACKAGES"
.IX Header "ADDING EXTRA PACKAGES"
You can install extra packages using the \fI\-\-install\fR option.  This can be
useful for making a more fully-featured virt\-p2v disk with extra tools for
debugging and troubleshooting.  Give a list of packages, separated by
commas.  For example:
.PP
.Vb 1
\& virt\-p2v\-make\-disk \-o /var/tmp/p2v.img \-\-install tcpdump,traceroute
.Ve
.SH "ADDING AN SSH IDENTITY"
.IX Header "ADDING AN SSH IDENTITY"
You can inject an \s-1SSH\s0 identity (private key) file to the image using the
\&\fI\-\-inject\-ssh\-identity\fR option.
.PP
First create a key pair.  It must have an empty passphrase:
.PP
.Vb 1
\& ssh\-keygen \-t rsa \-N \*(Aq\*(Aq \-f id_rsa
.Ve
.PP
This creates a private key (\f(CW\*(C`id_rsa\*(C'\fR) and a public key (\f(CW\*(C`id_rsa.pub\*(C'\fR)
pair.  The public key should be appended to the \f(CW\*(C`authorized_keys\*(C'\fR file on
the virt\-v2v conversion server (usually to \f(CW\*(C`/root/.ssh/authorized_keys\*(C'\fR).
.PP
The private key should be injected into the disk image and then discarded:
.PP
.Vb 2
\& virt\-p2v\-make\-disk [...] \-\-inject\-ssh\-identity id_rsa
\& rm id_rsa
.Ve
.PP
When booting virt\-p2v, specify the \s-1URL\s0 of the injected file like this:
.PP
.Vb 5
\& │         User name: [root_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_] │
\& │                                                        │
\& │          Password: [    <leave this field blank>     ] │
\& │                                                        │
\& │  SSH Identity URL: [file:///var/tmp/id_rsa_\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_] │
.Ve
.PP
or if using the kernel command line, add:
.PP
.Vb 1
\& p2v.identity=file:///var/tmp/id_rsa
.Ve
.PP
For more information, see \*(L"\s-1SSH IDENTITIES\*(R"\s0 in \fIvirt\-p2v\fR\|(1).
.SH "32 BIT VIRT\-P2V"
.IX Header "32 BIT VIRT-P2V"
For improved compatibility with older hardware, virt\-p2v\-make\-disk has an
\&\fI\-\-arch\fR option.  The most useful setting (on x86\-64 hosts) is \fI\-\-arch
i686\fR, which builds a 32 bit virt\-p2v environment that will work on older
hardware.  32 bit virt\-p2v can convert 64 bit physical machines and can
interoperate with 64 bit virt\-v2v and 64 bit hypervisors.
.PP
This option requires that you have built \fIvirt\-p2v.$arch\fR (ie.  usually
\&\fIvirt\-p2v.i686\fR) by some means, and that you install it next to the
ordinary \fIvirt\-p2v\fR binary (eg. in \fI\f(CI$libdir\fI/virt\-p2v/\fR or
\&\f(CW$VIRT_V2V_DATA_DIR\fR).  This is outside the scope of this manual page, but
you can find some tips in \*(L"\s-1BUILDING\s0 i686 32 \s-1BIT
VIRT\-P2V\*(R"\s0 in \fIguestfs\-building\fR\|(1).
.SH "オプション"
.IX Header "オプション"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
ヘルプを表示します。
.IP "\fB\-\-arch\fR \s-1ARCH\s0" 4
.IX Item "--arch ARCH"
Set the architecture of the virt\-p2v \s-1ISO.\s0  See \*(L"32 \s-1BIT VIRT\-P2V\*(R"\s0 above.
.Sp
If this option is not supplied, then the default is to use the same
architecture as the host that is running virt\-p2v\-make\-disk.
.IP "\fB\-\-inject\-ssh\-identity\fR id_rsa" 4
.IX Item "--inject-ssh-identity id_rsa"
Add an \s-1SSH\s0 identity (private key) file into the image.  See \*(L"\s-1ADDING AN SSH
IDENTITY\*(R"\s0 above.
.IP "\fB\-\-install\fR pkg,pkg,..." 4
.IX Item "--install pkg,pkg,..."
Add extra packages to the image.  See \*(L"\s-1ADDING EXTRA PACKAGES\*(R"\s0 above.
.IP "\fB\-\-no\-warn\-if\-partition\fR" 4
.IX Item "--no-warn-if-partition"
Normally you should not write to a partition on a \s-1USB\s0 drive (ie. don't use
\&\f(CW\*(C`\-o /dev/sdX1\*(C'\fR, use \f(CW\*(C`\-o /dev/sdX\*(C'\fR to make a bootable \s-1USB\s0 drive).  If
you do this, virt-builder prints a warning.  This option suppresses that
warning.
.IP "\fB\-o\fR \s-1OUTPUT\s0" 4
.IX Item "-o OUTPUT"
.PD 0
.IP "\fB\-\-output\fR \s-1OUTPUT\s0" 4
.IX Item "--output OUTPUT"
.PD
Write output to \f(CW\*(C`OUTPUT\*(C'\fR, which can be a local file or block device.  \fBThe
existing contents of the device will be erased\fR.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Enable verbose output.  Use this if you need to debug problems with the
script or if you are filing a bug.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
バージョン番号を表示して、終了します。
.SH "ファイル"
.IX Header "ファイル"
.IP "\fI\f(CI$libdir\fI/virt\-p2v/virt\-p2v.xz\fR" 4
.IX Item "$libdir/virt-p2v/virt-p2v.xz"
The \fIvirt\-p2v\fR\|(1) binary which is copied into the bootable disk image.
.Sp
The location of the binary can be changed by setting the
\&\f(CW\*(C`VIRT_P2V_DATA_DIR\*(C'\fR environment variable.
.IP "\fI\f(CI$datadir\fI/virt\-p2v/issue\fR" 4
.IX Item "$datadir/virt-p2v/issue"
.PD 0
.IP "\fI\f(CI$datadir\fI/virt\-p2v/launch\-virt\-p2v.in\fR" 4
.IX Item "$datadir/virt-p2v/launch-virt-p2v.in"
.IP "\fI\f(CI$datadir\fI/virt\-p2v/p2v.service\fR" 4
.IX Item "$datadir/virt-p2v/p2v.service"
.PD
Various data files that are copied into the bootable disk image.
.Sp
The location of these files can be changed by setting the
\&\f(CW\*(C`VIRT_P2V_DATA_DIR\*(C'\fR environment variable.
.SH "環境変数"
.IX Header "環境変数"
.ie n .IP """VIRT_P2V_DATA_DIR""" 4
.el .IP "\f(CWVIRT_P2V_DATA_DIR\fR" 4
.IX Item "VIRT_P2V_DATA_DIR"
The directory where virt\-p2v\-make\-disk looks for data files (see \*(L"\s-1FILES\*(R"\s0
above).  If not set, a compiled-in location is used.
.SH "関連項目"
.IX Header "関連項目"
\&\fIvirt\-p2v\fR\|(1), \fIvirt\-p2v\-make\-kickstart\fR\|(1), \fIvirt\-p2v\-make\-kiwi\fR\|(1),
\&\fIvirt\-v2v\fR\|(1), http://libguestfs.org/.
.SH "著者"
.IX Header "著者"
Richard W.M. Jones http://people.redhat.com/~rjones/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2009\-2017 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
