.\" Automatically generated by Podwrapper::Man 1.18.7 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "libguestfs-make-fixed-appliance 1"
.TH libguestfs-make-fixed-appliance 1 "2012-08-30" "libguestfs-1.18.7" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "名前"
.IX Header "名前"
libguestfs-make-fixed-appliance \- Make a \*(L"fixed appliance\*(R" for libguestfs
.SH "書式"
.IX Header "書式"
.Vb 1
\& libguestfs\-make\-fixed\-appliance [\-\-options] OUTPUTDIR
\&
\& libguestfs\-make\-fixed\-appliance [\-\-options] \-\-xz
.Ve
.SH "説明"
.IX Header "説明"
libguestfs-make-fixed-appliance lets you make a pre-built binary appliance
for libguestfs.
.PP
\&\fBNote that ordinary users should not need to run this tool\fR.  The only
reason to use it is if you want to make a self-contained libguestfs
appliance that can be copied to another machine or platform that doesn't
support \fIfebootstrap\fR\|(8).  To understand why you might need to use this
tool, read the section \*(L"\s-1FIXED\s0 \s-1APPLIANCE\s0\*(R" below.
.PP
Instead of running this tool, you can download fixed appliances from
http://libguestfs.org/download/binaries/appliance/.  These appliances
were made using this tool.
.PP
There are two ways to use this tool.
.IP "\(bu" 4
Specify an output directory, for example:
.Sp
.Vb 1
\& libguestfs\-make\-fixed\-appliance /usr/local/lib/guestfs/appliance
.Ve
.Sp
The output directory is created if it does not exist.  Four files are
created in this directory:
.Sp
.Vb 4
\& <OUTPUTDIR>/kernel
\& <OUTPUTDIR>/initrd
\& <OUTPUTDIR>/root
\& <OUTPUTDIR>/README.fixed
.Ve
.Sp
Note that \f(CW\*(C`\f(CIOUTPUTDIR\f(CW/root\*(C'\fR is a sparse file, so take care when copying
it.
.Sp
You can then run libguestfs (possibly after copying this directory to
another machine) by setting the environment variable \s-1LIBGUESTFS_PATH\s0 to
\&\f(CW\*(C`OUTPUTDIR\*(C'\fR.
.IP "\(bu" 4
The alternative method is to use the \fI\-\-xz\fR option to create a compressed
tarball:
.Sp
.Vb 1
\& libguestfs\-make\-fixed\-appliance \-\-xz
.Ve
.Sp
これは呼び出した \fIカレント\fR ディレクトリーに tar ファイルを作成します:
.Sp
.Vb 1
\& appliance\-<VERSION>.tar.xz
.Ve
.Sp
(ここで \f(CW\*(C`VERSION\*(C'\fR は libguestfs のバージョンです)。  tar ファイルは 4 つのファイルを含みます:
.Sp
.Vb 4
\& appliance/kernel
\& appliance/initrd
\& appliance/root
\& appliance/README.fixed
.Ve
.Sp
\&\f(CW\*(C`appliance/root\*(C'\fR はスパースファイルであるため、コピーするときには気をつける必要があるため、注意してください。
.SH "オプション"
.IX Header "オプション"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Display short usage information and exit.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
バージョン番号を表示して終了します。
.IP "\fB\-\-xz\fR" 4
.IX Item "--xz"
Instead of creating the appliance in an output directory, create a
compressed tarball of the appliance in the current directory called
\&\f(CW\*(C`appliance\-\f(CIVERSION\f(CW.tar.xz\*(C'\fR where \f(CW\*(C`VERSION\*(C'\fR is the version of
libguestfs.
.Sp
Using \fI\-\-xz\fR can take some time.  If working normally, the tool is
completely silent when it is running.
.SH "FIXED APPLIANCE"
.IX Header "FIXED APPLIANCE"
When libguestfs (or libguestfs tools) are run, they search a path looking
for an appliance.  The path is built into libguestfs, or can be set using
the \f(CW\*(C`LIBGUESTFS_PATH\*(C'\fR environment variable.
.PP
Normally a supermin appliance is located on this path (see
\&\*(L"\s-1SUPERMIN\s0 \s-1APPLIANCE\s0\*(R" in \fIfebootstrap\fR\|(8)).  libguestfs reconstructs this into a
full appliance by running \fIfebootstrap\-supermin\-helper\fR\|(8).
.PP
However, a simpler \*(L"fixed appliance\*(R" can also be used.  libguestfs detects
this by looking for a directory on the path containing four files called
\&\f(CW\*(C`kernel\*(C'\fR, \f(CW\*(C`initrd\*(C'\fR, \f(CW\*(C`root\*(C'\fR and \f(CW\*(C`README.fixed\*(C'\fR (note the \f(CW\*(C`README.fixed\*(C'\fR
file must be present as well).
.PP
If the fixed appliance is found, libguestfs skips febootstrap entirely and
just runs qemu with the kernel, initrd and root disk from the fixed
appliance.
.PP
Thus the fixed appliance can be used when a platform or Linux distro does
not support febootstrap.  You build the fixed appliance on a platform that
does support febootstrap, and copy it over, and use that to run libguestfs.
.SH "LICENSING"
.IX Header "LICENSING"
The fixed appliance is a complete Linux binary distro.  If you distribute
it, you may need to distribute corresponding source files to remain in legal
compliance with the licenses of the software in the appliance (such as the
\&\s-1GNU\s0 General Public License).
.SH "終了ステータス"
.IX Header "終了ステータス"
libguestfs-make-fixed-appliance returns \fI0\fR if the appliance was built
without errors.
.SH "環境変数"
.IX Header "環境変数"
For the full list of environment variables which may affect libguestfs,
please see the \fIguestfs\fR\|(3) manual page.
.SH "関連項目"
.IX Header "関連項目"
\&\fIguestfs\fR\|(3), \fIfebootstrap\fR\|(8), \fIfebootstrap\-supermin\-helper\fR\|(8),
\&\fIxz\fR\|(1), http://libguestfs.org/, http://qemu.org/.
.SH "著者"
.IX Header "著者"
Richard W.M. Jones (\f(CW\*(C`rjones at redhat dot com\*(C'\fR)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2009\-2012 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
.SH "BUGS"
.IX Header "BUGS"
To get a list of bugs against libguestfs, use this link:
https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools
.PP
To report a new bug against libguestfs, use this link:
https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools
.PP
When reporting a bug, please supply:
.IP "\(bu" 4
The version of libguestfs.
.IP "\(bu" 4
Where you got libguestfs (eg. which Linux distro, compiled from source, etc)
.IP "\(bu" 4
Describe the bug accurately and give a way to reproduce it.
.IP "\(bu" 4
Run \fIlibguestfs\-test\-tool\fR\|(1) and paste the \fBcomplete, unedited\fR
output into the bug report.
