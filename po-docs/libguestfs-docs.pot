# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Red Hat Inc.
# This file is distributed under the same license as the libguestfs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: libguestfs 1.10.4\n"
"Report-Msgid-Bugs-To: libguestfs@redhat.com\n"
"POT-Creation-Date: 2011-06-13 15:24+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: ../src/guestfs.pod:3 ../fish/guestfish.pod:3 ../test-tool/libguestfs-test-tool.pod:3 ../fuse/guestmount.pod:3 ../tools/virt-edit.pl:32 ../tools/virt-win-reg.pl:35 ../tools/virt-list-filesystems.pl:30 ../tools/virt-tar.pl:31 ../tools/virt-make-fs.pl:35 ../tools/virt-list-partitions.pl:30
msgid "NAME"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:5
msgid "guestfs - Library for accessing and modifying virtual machine images"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:7 ../fish/guestfish.pod:7 ../test-tool/libguestfs-test-tool.pod:7 ../fuse/guestmount.pod:7 ../tools/virt-edit.pl:36 ../tools/virt-win-reg.pl:39 ../tools/virt-list-filesystems.pl:34 ../tools/virt-tar.pl:35 ../tools/virt-make-fs.pl:39 ../tools/virt-list-partitions.pl:34
msgid "SYNOPSIS"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:9
#, no-wrap
msgid ""
" #include <guestfs.h>\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:11
#, no-wrap
msgid ""
" guestfs_h *g = guestfs_create ();\n"
" guestfs_add_drive (g, \"guest.img\");\n"
" guestfs_launch (g);\n"
" guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
" guestfs_touch (g, \"/hello\");\n"
" guestfs_umount (g, \"/\");\n"
" guestfs_close (g);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:19
#, no-wrap
msgid ""
" cc prog.c -o prog -lguestfs\n"
"or:\n"
" cc prog.c -o prog `pkg-config libguestfs --cflags --libs`\n"
"\n"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:23 ../fish/guestfish.pod:30 ../test-tool/libguestfs-test-tool.pod:11 ../fuse/guestmount.pod:20 ../tools/virt-edit.pl:50 ../tools/virt-win-reg.pl:63 ../tools/virt-list-filesystems.pl:40 ../tools/virt-tar.pl:77 ../tools/virt-make-fs.pl:47 ../tools/virt-list-partitions.pl:40
msgid "DESCRIPTION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:25
msgid ""
"Libguestfs is a library for accessing and modifying guest disk images.  "
"Amongst the things this is good for: making batch configuration changes to "
"guests, getting disk used/free statistics (see also: virt-df), migrating "
"between virtualization systems (see also: virt-p2v), performing partial "
"backups, performing partial guest clones, cloning guests and changing "
"registry/UUID/hostname info, and much else besides."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:33
msgid ""
"Libguestfs uses Linux kernel and qemu code, and can access any type of guest "
"filesystem that Linux and qemu can, including but not limited to: ext2/3/4, "
"btrfs, FAT and NTFS, LVM, many different disk partition schemes, qcow, "
"qcow2, vmdk."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:38
msgid ""
"Libguestfs provides ways to enumerate guest storage (eg. partitions, LVs, "
"what filesystem is in each LV, etc.).  It can also run commands in the "
"context of the guest.  Also you can access filesystems over FUSE."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:43
msgid ""
"Libguestfs is a library that can be linked with C and C++ management "
"programs (or management programs written in OCaml, Perl, Python, Ruby, Java, "
"PHP, Haskell or C#).  You can also use it from shell scripts or the command "
"line."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:48
msgid ""
"You don't need to be root to use libguestfs, although obviously you do need "
"enough permissions to access the disk images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:51
msgid ""
"Libguestfs is a large API because it can do many things.  For a gentle "
"introduction, please read the L</API OVERVIEW> section next."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:54
msgid ""
"There are also some example programs in the L<guestfs-examples(3)> manual "
"page."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:57
msgid "API OVERVIEW"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:59
msgid ""
"This section provides a gentler overview of the libguestfs API.  We also try "
"to group API calls together, where that may not be obvious from reading "
"about the individual calls in the main section of this manual."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:64
msgid "HANDLES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:66
msgid ""
"Before you can use libguestfs calls, you have to create a handle.  Then you "
"must add at least one disk image to the handle, followed by launching the "
"handle, then performing whatever operations you want, and finally closing "
"the handle.  By convention we use the single letter C<g> for the name of the "
"handle variable, although of course you can use any name you want."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:73
msgid "The general structure of all libguestfs-using programs looks like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:76
#, no-wrap
msgid ""
" guestfs_h *g = guestfs_create ();\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:78
#, no-wrap
msgid ""
" /* Call guestfs_add_drive additional times if there are\n"
"  * multiple disk images.\n"
"  */\n"
" guestfs_add_drive (g, \"guest.img\");\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:83
#, no-wrap
msgid ""
" /* Most manipulation calls won't work until you've launched\n"
"  * the handle 'g'.  You have to do this _after_ adding drives\n"
"  * and _before_ other commands.\n"
"  */\n"
" guestfs_launch (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:89
#, no-wrap
msgid ""
" /* Now you can examine what partitions, LVs etc are available.\n"
"  */\n"
" char **partitions = guestfs_list_partitions (g);\n"
" char **logvols = guestfs_lvs (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:94
#, no-wrap
msgid ""
" /* To access a filesystem in the image, you must mount it.\n"
"  */\n"
" guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:98
#, no-wrap
msgid ""
" /* Now you can perform filesystem actions on the guest\n"
"  * disk image.\n"
"  */\n"
" guestfs_touch (g, \"/hello\");\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:103
#, no-wrap
msgid ""
" /* This is only needed for libguestfs < 1.5.24.  Since then\n"
"  * it is done automatically when you close the handle.  See\n"
"  * discussion of autosync in this page.\n"
"  */\n"
" guestfs_sync (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:109
#, no-wrap
msgid ""
" /* Close the handle 'g'. */\n"
" guestfs_close (g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:112
msgid ""
"The code above doesn't include any error checking.  In real code you should "
"check return values carefully for errors.  In general all functions that "
"return integers return C<-1> on error, and all functions that return "
"pointers return C<NULL> on error.  See section L</ERROR HANDLING> below for "
"how to handle errors, and consult the documentation for each function call "
"below to see precisely how they return error indications.  See "
"L<guestfs-examples(3)> for fully worked examples."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:121
msgid "DISK IMAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:123
msgid ""
"The image filename (C<\"guest.img\"> in the example above) could be a disk "
"image from a virtual machine, a L<dd(1)> copy of a physical hard disk, an "
"actual block device, or simply an empty file of zeroes that you have created "
"through L<posix_fallocate(3)>.  Libguestfs lets you do useful things to all "
"of these."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:129
msgid ""
"The call you should use in modern code for adding drives is "
"L</guestfs_add_drive_opts>.  To add a disk image, allowing writes, and "
"specifying that the format is raw, do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:133
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:137
msgid "You can add a disk read-only using:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:139
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
"                         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:144
msgid ""
"or by calling the older function L</guestfs_add_drive_ro>.  In either case "
"libguestfs won't modify the file."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:147
msgid ""
"Be extremely cautious if the disk image is in use, eg. if it is being used "
"by a virtual machine.  Adding it read-write will almost certainly cause disk "
"corruption, but adding it read-only is safe."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:151
msgid ""
"You must add at least one disk image, and you may add multiple disk images.  "
"In the API, the disk images are usually referred to as C</dev/sda> (for the "
"first one you added), C</dev/sdb> (for the second one you added), etc."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:156
msgid ""
"Once L</guestfs_launch> has been called you cannot add any more images.  You "
"can call L</guestfs_list_devices> to get a list of the device names, in the "
"order that you added them.  See also L</BLOCK DEVICE NAMING> below."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:161
msgid "MOUNTING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:163
msgid ""
"Before you can read or write files, create directories and so on in a disk "
"image that contains filesystems, you have to mount those filesystems using "
"L</guestfs_mount_options> or L</guestfs_mount_ro>.  If you already know that "
"a disk image contains (for example) one partition with a filesystem on that "
"partition, then you can mount it directly:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:170
#, no-wrap
msgid ""
" guestfs_mount_options (g, \"\", \"/dev/sda1\", \"/\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:172
msgid ""
"where C</dev/sda1> means literally the first partition (C<1>) of the first "
"disk image that we added (C</dev/sda>).  If the disk contains Linux LVM2 "
"logical volumes you could refer to those instead (eg. C</dev/VG/LV>).  Note "
"that these are libguestfs virtual devices, and are nothing to do with host "
"devices."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:178
msgid ""
"If you are given a disk image and you don't know what it contains then you "
"have to find out.  Libguestfs can do that too: use "
"L</guestfs_list_partitions> and L</guestfs_lvs> to list possible partitions "
"and LVs, and either try mounting each to see what is mountable, or else "
"examine them with L</guestfs_vfs_type> or L</guestfs_file>.  To list just "
"filesystems, use L</guestfs_list_filesystems>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:186
msgid ""
"Libguestfs also has a set of APIs for inspection of unknown disk images (see "
"L</INSPECTION> below).  But you might find it easier to look at higher level "
"programs built on top of libguestfs, in particular L<virt-inspector(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:191
msgid ""
"To mount a filesystem read-only, use L</guestfs_mount_ro>.  There are "
"several other variations of the C<guestfs_mount_*> call."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:194
msgid "FILESYSTEM ACCESS AND MODIFICATION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:196
msgid ""
"The majority of the libguestfs API consists of fairly low-level calls for "
"accessing and modifying the files, directories, symlinks etc on mounted "
"filesystems.  There are over a hundred such calls which you can find listed "
"in detail below in this man page, and we don't even pretend to cover them "
"all in this overview."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:202
msgid ""
"Specify filenames as full paths, starting with C<\"/\"> and including the "
"mount point."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:205
msgid ""
"For example, if you mounted a filesystem at C<\"/\"> and you want to read "
"the file called C<\"etc/passwd\"> then you could do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:208
#, no-wrap
msgid ""
" char *data = guestfs_cat (g, \"/etc/passwd\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:210
msgid ""
"This would return C<data> as a newly allocated buffer containing the full "
"content of that file (with some conditions: see also L</DOWNLOADING> below), "
"or C<NULL> if there was an error."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:214
msgid ""
"As another example, to create a top-level directory on that filesystem "
"called C<\"var\"> you would do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:217
#, no-wrap
msgid ""
" guestfs_mkdir (g, \"/var\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:219
msgid "To create a symlink you could do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:221
#, no-wrap
msgid ""
" guestfs_ln_s (g, \"/etc/init.d/portmap\",\n"
"               \"/etc/rc3.d/S30portmap\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:224
msgid ""
"Libguestfs will reject attempts to use relative paths and there is no "
"concept of a current working directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:227
msgid ""
"Libguestfs can return errors in many situations: for example if the "
"filesystem isn't writable, or if a file or directory that you requested "
"doesn't exist.  If you are using the C API (documented here)  you have to "
"check for those error conditions after each call.  (Other language bindings "
"turn these errors into exceptions)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:233
msgid ""
"File writes are affected by the per-handle umask, set by calling "
"L</guestfs_umask> and defaulting to 022.  See L</UMASK>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:236
msgid "PARTITIONING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:238
msgid ""
"Libguestfs contains API calls to read, create and modify partition tables on "
"disk images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:241
msgid ""
"In the common case where you want to create a single partition covering the "
"whole disk, you should use the L</guestfs_part_disk> call:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:245
#, no-wrap
msgid ""
" const char *parttype = \"mbr\";\n"
" if (disk_is_larger_than_2TB)\n"
"   parttype = \"gpt\";\n"
" guestfs_part_disk (g, \"/dev/sda\", parttype);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:250
msgid ""
"Obviously this effectively wipes anything that was on that disk image "
"before."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:253
msgid "LVM2"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:255
msgid ""
"Libguestfs provides access to a large part of the LVM2 API, such as "
"L</guestfs_lvcreate> and L</guestfs_vgremove>.  It won't make much sense "
"unless you familiarize yourself with the concepts of physical volumes, "
"volume groups and logical volumes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:260
msgid ""
"This author strongly recommends reading the LVM HOWTO, online at "
"L<http://tldp.org/HOWTO/LVM-HOWTO/>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:263
msgid "DOWNLOADING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:265
msgid ""
"Use L</guestfs_cat> to download small, text only files.  This call is "
"limited to files which are less than 2 MB and which cannot contain any ASCII "
"NUL (C<\\0>) characters.  However the API is very simple to use."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:269
msgid ""
"L</guestfs_read_file> can be used to read files which contain arbitrary 8 "
"bit data, since it returns a (pointer, size) pair.  However it is still "
"limited to \"small\" files, less than 2 MB."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:273
msgid ""
"L</guestfs_download> can be used to download any file, with no limits on "
"content or size (even files larger than 4 GB)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:276
msgid "To download multiple files, see L</guestfs_tar_out> and L</guestfs_tgz_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:279
msgid "UPLOADING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:281
msgid ""
"It's often the case that you want to write a file or files to the disk "
"image."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:284
msgid ""
"To write a small file with fixed content, use L</guestfs_write>.  To create "
"a file of all zeroes, use L</guestfs_truncate_size> (sparse) or "
"L</guestfs_fallocate64> (with all disk blocks allocated).  There are a "
"variety of other functions for creating test files, for example "
"L</guestfs_fill> and L</guestfs_fill_pattern>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:290
msgid ""
"To upload a single file, use L</guestfs_upload>.  This call has no limits on "
"file content or size (even files larger than 4 GB)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:293
msgid "To upload multiple files, see L</guestfs_tar_in> and L</guestfs_tgz_in>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:295
msgid ""
"However the fastest way to upload I<large numbers of arbitrary files> is to "
"turn them into a squashfs or CD ISO (see L<mksquashfs(8)> and "
"L<mkisofs(8)>), then attach this using L</guestfs_add_drive_ro>.  If you add "
"the drive in a predictable way (eg. adding it last after all other drives) "
"then you can get the device name from L</guestfs_list_devices> and mount it "
"directly using L</guestfs_mount_ro>.  Note that squashfs images are "
"sometimes non-portable between kernel versions, and they don't support "
"labels or UUIDs.  If you want to pre-build an image or you need to mount it "
"using a label or UUID, use an ISO image instead."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:306
msgid "COPYING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:308
msgid ""
"There are various different commands for copying between files and devices "
"and in and out of the guest filesystem.  These are summarised in the table "
"below."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:314
msgid "B<file> to B<file>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:316
msgid ""
"Use L</guestfs_cp> to copy a single file, or L</guestfs_cp_a> to copy "
"directories recursively."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:319
msgid "B<file or device> to B<file or device>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:321
msgid ""
"Use L</guestfs_dd> which efficiently uses L<dd(1)> to copy between files and "
"devices in the guest."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:324
msgid "Example: duplicate the contents of an LV:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:326
#, no-wrap
msgid ""
" guestfs_dd (g, \"/dev/VG/Original\", \"/dev/VG/Copy\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:328
msgid ""
"The destination (C</dev/VG/Copy>) must be at least as large as the source "
"(C</dev/VG/Original>).  To copy less than the whole source device, use "
"L</guestfs_copy_size>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:332
msgid "B<file on the host> to B<file or device>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:334
msgid "Use L</guestfs_upload>.  See L</UPLOADING> above."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:336
msgid "B<file or device> to B<file on the host>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:338
msgid "Use L</guestfs_download>.  See L</DOWNLOADING> above."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:342
msgid "UPLOADING AND DOWNLOADING TO PIPES AND FILE DESCRIPTORS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:344
msgid ""
"Calls like L</guestfs_upload>, L</guestfs_download>, L</guestfs_tar_in>, "
"L</guestfs_tar_out> etc appear to only take filenames as arguments, so it "
"appears you can only upload and download to files.  However many Un*x-like "
"hosts let you use the special device files C</dev/stdin>, C</dev/stdout>, "
"C</dev/stderr> and C</dev/fd/N> to read and write from stdin, stdout, "
"stderr, and arbitrary file descriptor N."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:352
msgid "For example, L<virt-cat(1)> writes its output to stdout by doing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:355
#, no-wrap
msgid ""
" guestfs_download (g, filename, \"/dev/stdout\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:357
msgid "and you can write tar output to a file descriptor C<fd> by doing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:359
#, no-wrap
msgid ""
" char devfd[64];\n"
" snprintf (devfd, sizeof devfd, \"/dev/fd/%d\", fd);\n"
" guestfs_tar_out (g, \"/\", devfd);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:363
msgid "LISTING FILES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:365
msgid ""
"L</guestfs_ll> is just designed for humans to read (mainly when using the "
"L<guestfish(1)>-equivalent command C<ll>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:368
msgid ""
"L</guestfs_ls> is a quick way to get a list of files in a directory from "
"programs, as a flat list of strings."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:371
msgid ""
"L</guestfs_readdir> is a programmatic way to get a list of files in a "
"directory, plus additional information about each one.  It is more "
"equivalent to using the L<readdir(3)> call on a local filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:375
msgid ""
"L</guestfs_find> and L</guestfs_find0> can be used to recursively list "
"files."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:378
msgid "RUNNING COMMANDS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:380
msgid ""
"Although libguestfs is primarily an API for manipulating files inside guest "
"images, we also provide some limited facilities for running commands inside "
"guests."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:384
msgid "There are many limitations to this:"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:388 ../src/guestfs.pod:393 ../src/guestfs.pod:398 ../src/guestfs.pod:402 ../src/guestfs.pod:407 ../src/guestfs.pod:411 ../src/guestfs.pod:416 ../src/guestfs.pod:421 ../src/guestfs.pod:1064 ../src/guestfs.pod:1068 ../src/guestfs.pod:1072 ../src/guestfs.pod:1077 ../src/guestfs.pod:1085 ../src/guestfs.pod:1104 ../src/guestfs.pod:1112 ../src/guestfs.pod:1134 ../src/guestfs.pod:1138 ../src/guestfs.pod:1142 ../src/guestfs.pod:1146 ../src/guestfs.pod:1150 ../src/guestfs.pod:1154 ../src/guestfs.pod:1643 ../src/guestfs.pod:1648 ../src/guestfs.pod:1652 ../src/guestfs.pod:1753 ../src/guestfs.pod:1758 ../src/guestfs.pod:1762 ../src/guestfs.pod:1772 ../src/guestfs.pod:2007 ../src/guestfs.pod:2012 ../src/guestfs.pod:2018 ../src/guestfs.pod:2026 ../src/guestfs.pod:2380 ../src/guestfs.pod:2386 ../src/guestfs.pod:2391 ../src/guestfs.pod:2397 ../src/guestfs.pod:2962 ../src/guestfs.pod:2966 ../src/guestfs.pod:2970 ../src/guestfs.pod:2974 ../src/guestfs-actions.pod:15 ../src/guestfs-actions.pod:22 ../src/guestfs-actions.pod:577 ../src/guestfs-actions.pod:585 ../src/guestfs-actions.pod:592 ../src/guestfs-actions.pod:599 ../src/guestfs-actions.pod:1597 ../src/guestfs-actions.pod:1601 ../src/guestfs-actions.pod:1605 ../src/guestfs-actions.pod:1609 ../src/guestfs-actions.pod:1617 ../src/guestfs-actions.pod:1621 ../src/guestfs-actions.pod:1625 ../src/guestfs-actions.pod:1635 ../src/guestfs-actions.pod:1639 ../src/guestfs-actions.pod:1643 ../src/guestfs-actions.pod:1781 ../src/guestfs-actions.pod:1785 ../src/guestfs-actions.pod:1790 ../src/guestfs-actions.pod:1795 ../src/guestfs-actions.pod:1856 ../src/guestfs-actions.pod:1860 ../src/guestfs-actions.pod:1865 ../fish/guestfish.pod:443 ../fish/guestfish.pod:447 ../fish/guestfish.pod:451 ../fish/guestfish.pod:455 ../fish/guestfish-actions.pod:13 ../fish/guestfish-actions.pod:20 ../fish/guestfish-actions.pod:380 ../fish/guestfish-actions.pod:388 ../fish/guestfish-actions.pod:395 ../fish/guestfish-actions.pod:402 ../fish/guestfish-actions.pod:1069 ../fish/guestfish-actions.pod:1073 ../fish/guestfish-actions.pod:1077 ../fish/guestfish-actions.pod:1081 ../fish/guestfish-actions.pod:1089 ../fish/guestfish-actions.pod:1093 ../fish/guestfish-actions.pod:1097 ../fish/guestfish-actions.pod:1107 ../fish/guestfish-actions.pod:1111 ../fish/guestfish-actions.pod:1115 ../fish/guestfish-actions.pod:1205 ../fish/guestfish-actions.pod:1209 ../fish/guestfish-actions.pod:1214 ../fish/guestfish-actions.pod:1219 ../fish/guestfish-actions.pod:1261 ../fish/guestfish-actions.pod:1265 ../fish/guestfish-actions.pod:1270 ../tools/virt-edit.pl:351 ../tools/virt-edit.pl:356 ../tools/virt-edit.pl:361 ../tools/virt-edit.pl:372 ../tools/virt-edit.pl:376 ../tools/virt-win-reg.pl:536 ../tools/virt-win-reg.pl:542 ../tools/virt-win-reg.pl:548
msgid "*"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:390
msgid ""
"The kernel version that the command runs under will be different from what "
"it expects."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:395
msgid ""
"If the command needs to communicate with daemons, then most likely they "
"won't be running."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:400
msgid "The command will be running in limited memory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:404
msgid ""
"The network may not be available unless you enable it (see "
"L</guestfs_set_network>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:409
msgid "Only supports Linux guests (not Windows, BSD, etc)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:413
msgid "Architecture limitations (eg. won't work for a PPC guest on an X86 host)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:418
msgid ""
"For SELinux guests, you may need to enable SELinux and load policy first.  "
"See L</SELINUX> in this manpage."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:423
msgid ""
"I<Security:> It is not safe to run commands from untrusted, possibly "
"malicious guests.  These commands may attempt to exploit your program by "
"sending unexpected output.  They could also try to exploit the Linux kernel "
"or qemu provided by the libguestfs appliance.  They could use the network "
"provided by the libguestfs appliance to bypass ordinary network partitions "
"and firewalls.  They could use the elevated privileges or different SELinux "
"context of your program to their advantage."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:432
msgid ""
"A secure alternative is to use libguestfs to install a \"firstboot\" script "
"(a script which runs when the guest next boots normally), and to have this "
"script run the commands you want in the normal context of the running guest, "
"network security and so on.  For information about other security issues, "
"see L</SECURITY>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:440
msgid ""
"The two main API calls to run commands are L</guestfs_command> and "
"L</guestfs_sh> (there are also variations)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:443
msgid ""
"The difference is that L</guestfs_sh> runs commands using the shell, so any "
"shell globs, redirections, etc will work."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:446
msgid "CONFIGURATION FILES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:448
msgid ""
"To read and write configuration files in Linux guest filesystems, we "
"strongly recommend using Augeas.  For example, Augeas understands how to "
"read and write, say, a Linux shadow password file or X.org configuration "
"file, and so avoids you having to write that code."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:453
msgid ""
"The main Augeas calls are bound through the C<guestfs_aug_*> APIs.  We don't "
"document Augeas itself here because there is excellent documentation on the "
"L<http://augeas.net/> website."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:457
msgid ""
"If you don't want to use Augeas (you fool!) then try calling "
"L</guestfs_read_lines> to get the file as a list of lines which you can "
"iterate over."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:461
msgid "SELINUX"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:463
msgid ""
"We support SELinux guests.  To ensure that labeling happens correctly in "
"SELinux guests, you need to enable SELinux and load the guest's policy:"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:469 ../src/guestfs.pod:1257 ../src/guestfs.pod:1395 ../src/guestfs.pod:2425
msgid "1."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:471
msgid "Before launching, do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:473
#, no-wrap
msgid ""
" guestfs_set_selinux (g, 1);\n"
"\n"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:475 ../src/guestfs.pod:1261 ../src/guestfs.pod:1399 ../src/guestfs.pod:2450
msgid "2."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:477
msgid ""
"After mounting the guest's filesystem(s), load the policy.  This is best "
"done by running the L<load_policy(8)> command in the guest itself:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:481
#, no-wrap
msgid ""
" guestfs_sh (g, \"/usr/sbin/load_policy\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:483
msgid ""
"(Older versions of C<load_policy> require you to specify the name of the "
"policy file)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:486 ../src/guestfs.pod:1405
msgid "3."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:488
msgid ""
"Optionally, set the security context for the API.  The correct security "
"context to use can only be known by inspecting the guest.  As an example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:492
#, no-wrap
msgid ""
" guestfs_setcon (g, \"unconfined_u:unconfined_r:unconfined_t:s0\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:496
msgid "This will work for running commands and editing existing files."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:498
msgid ""
"When new files are created, you may need to label them explicitly, for "
"example by running the external command C<restorecon pathname>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:502
msgid "UMASK"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:504
msgid ""
"Certain calls are affected by the current file mode creation mask (the "
"\"umask\").  In particular ones which create files or directories, such as "
"L</guestfs_touch>, L</guestfs_mknod> or L</guestfs_mkdir>.  This affects "
"either the default mode that the file is created with or modifies the mode "
"that you supply."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:510
msgid ""
"The default umask is C<022>, so files are created with modes such as C<0644> "
"and directories with C<0755>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:513
msgid ""
"There are two ways to avoid being affected by umask.  Either set umask to 0 "
"(call C<guestfs_umask (g, 0)> early after launching).  Or call "
"L</guestfs_chmod> after creating each file or directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:517
msgid "For more information about umask, see L<umask(2)>."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:519 ../fish/guestfish.pod:765
msgid "ENCRYPTED DISKS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:521
msgid ""
"Libguestfs allows you to access Linux guests which have been encrypted using "
"whole disk encryption that conforms to the Linux Unified Key Setup (LUKS) "
"standard.  This includes nearly all whole disk encryption systems used by "
"modern Linux guests."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:527
msgid ""
"Use L</guestfs_vfs_type> to identify LUKS-encrypted block devices (it "
"returns the string C<crypto_LUKS>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:530
msgid ""
"Then open these devices by calling L</guestfs_luks_open>.  Obviously you "
"will require the passphrase!"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:533
msgid ""
"Opening a LUKS device creates a new device mapper device called "
"C</dev/mapper/mapname> (where C<mapname> is the string you supply to "
"L</guestfs_luks_open>).  Reads and writes to this mapper device are "
"decrypted from and encrypted to the underlying block device respectively."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:539
msgid ""
"LVM volume groups on the device can be made visible by calling "
"L</guestfs_vgscan> followed by L</guestfs_vg_activate_all>.  The logical "
"volume(s) can now be mounted in the usual way."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:543
msgid ""
"Use the reverse process to close a LUKS device.  Unmount any logical volumes "
"on it, deactivate the volume groups by caling C<guestfs_vg_activate (g, 0, "
"[\"/dev/VG\"])>.  Then close the mapper device by calling "
"L</guestfs_luks_close> on the C</dev/mapper/mapname> device (I<not> the "
"underlying encrypted block device)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:550
msgid "INSPECTION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:552
msgid ""
"Libguestfs has APIs for inspecting an unknown disk image to find out if it "
"contains operating systems, an install CD or a live CD.  (These APIs used to "
"be in a separate Perl-only library called L<Sys::Guestfs::Lib(3)> but since "
"version 1.5.3 the most frequently used part of this library has been "
"rewritten in C and moved into the core code)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:559
msgid ""
"Add all disks belonging to the unknown virtual machine and call "
"L</guestfs_launch> in the usual way."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:562
msgid ""
"Then call L</guestfs_inspect_os>.  This function uses other libguestfs calls "
"and certain heuristics, and returns a list of operating systems that were "
"found.  An empty list means none were found.  A single element is the root "
"filesystem of the operating system.  For dual- or multi-boot guests, "
"multiple roots can be returned, each one corresponding to a separate "
"operating system.  (Multi-boot virtual machines are extremely rare in the "
"world of virtualization, but since this scenario can happen, we have built "
"libguestfs to deal with it.)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:571
msgid ""
"For each root, you can then call various C<guestfs_inspect_get_*> functions "
"to get additional details about that operating system.  For example, call "
"L</guestfs_inspect_get_type> to return the string C<windows> or C<linux> for "
"Windows and Linux-based operating systems respectively."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:577
msgid ""
"Un*x-like and Linux-based operating systems usually consist of several "
"filesystems which are mounted at boot time (for example, a separate boot "
"partition mounted on C</boot>).  The inspection rules are able to detect how "
"filesystems correspond to mount points.  Call "
"C<guestfs_inspect_get_mountpoints> to get this mapping.  It might return a "
"hash table like this example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:584
#, no-wrap
msgid ""
" /boot => /dev/sda1\n"
" /     => /dev/vg_guest/lv_root\n"
" /usr  => /dev/vg_guest/lv_usr\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:588
msgid ""
"The caller can then make calls to L</guestfs_mount_options> to mount the "
"filesystems as suggested."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:591
msgid ""
"Be careful to mount filesystems in the right order (eg. C</> before "
"C</usr>).  Sorting the keys of the hash by length, shortest first, should "
"work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:595
msgid ""
"Inspection currently only works for some common operating systems.  "
"Contributors are welcome to send patches for other operating systems that we "
"currently cannot detect."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:599
msgid ""
"Encrypted disks must be opened before inspection.  See L</ENCRYPTED DISKS> "
"for more details.  The L</guestfs_inspect_os> function just ignores any "
"encrypted devices."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:603
msgid ""
"A note on the implementation: The call L</guestfs_inspect_os> performs "
"inspection and caches the results in the guest handle.  Subsequent calls to "
"C<guestfs_inspect_get_*> return this cached information, but I<do not> "
"re-read the disks.  If you change the content of the guest disks, you can "
"redo inspection by calling L</guestfs_inspect_os> again.  "
"(L</guestfs_inspect_list_applications> works a little differently from the "
"other calls and does read the disks.  See documentation for that function "
"for details)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:612
msgid "INSPECTING INSTALL DISKS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:614
msgid ""
"Libguestfs (since 1.9.4) can detect some install disks, install CDs, live "
"CDs and more."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:617
msgid ""
"Call L</guestfs_inspect_get_format> to return the format of the operating "
"system, which currently can be C<installed> (a regular operating system) or "
"C<installer> (some sort of install disk)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:621
msgid ""
"Further information is available about the operating system that can be "
"installed using the regular inspection APIs like "
"L</guestfs_inspect_get_product_name>, L</guestfs_inspect_get_major_version> "
"etc."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:626
msgid ""
"Some additional information specific to installer disks is also available "
"from the L</guestfs_inspect_is_live>, L</guestfs_inspect_is_netinst> and "
"L</guestfs_inspect_is_multipart> calls."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:631
msgid "SPECIAL CONSIDERATIONS FOR WINDOWS GUESTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:633
msgid ""
"Libguestfs can mount NTFS partitions.  It does this using the "
"L<http://www.ntfs-3g.org/> driver."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:636
msgid "DRIVE LETTERS AND PATHS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:638
msgid ""
"DOS and Windows still use drive letters, and the filesystems are always "
"treated as case insensitive by Windows itself, and therefore you might find "
"a Windows configuration file referring to a path like "
"C<c:\\windows\\system32>.  When the filesystem is mounted in libguestfs, "
"that directory might be referred to as C</WINDOWS/System32>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:644
msgid ""
"Drive letter mappings can be found using inspection (see L</INSPECTION> and "
"L</guestfs_inspect_get_drive_mappings>)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:647
msgid ""
"Dealing with separator characters (backslash vs forward slash) is outside "
"the scope of libguestfs, but usually a simple character replacement will "
"work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:651
msgid ""
"To resolve the case insensitivity of paths, call "
"L</guestfs_case_sensitive_path>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:654
msgid "ACCESSING THE WINDOWS REGISTRY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:656
msgid ""
"Libguestfs also provides some help for decoding Windows Registry \"hive\" "
"files, through the library C<hivex> which is part of the libguestfs project "
"although ships as a separate tarball.  You have to locate and download the "
"hive file(s) yourself, and then pass them to C<hivex> functions.  See also "
"the programs L<hivexml(1)>, L<hivexsh(1)>, L<hivexregedit(1)> and "
"L<virt-win-reg(1)> for more help on this issue."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:664
msgid "SYMLINKS ON NTFS-3G FILESYSTEMS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:666
msgid ""
"Ntfs-3g tries to rewrite \"Junction Points\" and NTFS \"symbolic links\" to "
"provide something which looks like a Linux symlink.  The way it tries to do "
"the rewriting is described here:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:670
msgid "L<http://www.tuxera.com/community/ntfs-3g-advanced/junction-points-and-symbolic-links/>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:672
msgid ""
"The essential problem is that ntfs-3g simply does not have enough "
"information to do a correct job.  NTFS links can contain drive letters and "
"references to external device GUIDs that ntfs-3g has no way of resolving.  "
"It is almost certainly the case that libguestfs callers should ignore what "
"ntfs-3g does (ie. don't use L</guestfs_readlink> on NTFS volumes)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:679
msgid ""
"Instead if you encounter a symbolic link on an ntfs-3g filesystem, use "
"L</guestfs_lgetxattr> to read the C<system.ntfs_reparse_data> extended "
"attribute, and read the raw reparse data from that (you can find the format "
"documented in various places around the web)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:684
msgid "EXTENDED ATTRIBUTES ON NTFS-3G FILESYSTEMS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:686
msgid ""
"There are other useful extended attributes that can be read from ntfs-3g "
"filesystems (using L</guestfs_getxattr>).  See:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:689
msgid "L<http://www.tuxera.com/community/ntfs-3g-advanced/extended-attributes/>"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:691
msgid "USING LIBGUESTFS WITH OTHER PROGRAMMING LANGUAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:693
msgid ""
"Although we don't want to discourage you from using the C API, we will "
"mention here that the same API is also available in other languages."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:696
msgid ""
"The API is broadly identical in all supported languages.  This means that "
"the C call C<guestfs_add_drive_ro(g,file)> is C<$g-E<gt>add_drive_ro($file)> "
"in Perl, C<g.add_drive_ro(file)> in Python, and C<g#add_drive_ro file> in "
"OCaml.  In other words, a straightforward, predictable isomorphism between "
"each language."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:702
msgid ""
"Error messages are automatically transformed into exceptions if the language "
"supports it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:705
msgid ""
"We don't try to \"object orientify\" parts of the API in OO languages, "
"although contributors are welcome to write higher level APIs above what we "
"provide in their favourite languages if they wish."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:711
msgid "B<C++>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:713
msgid ""
"You can use the I<guestfs.h> header file from C++ programs.  The C++ API is "
"identical to the C API.  C++ classes and exceptions are not used."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:717
msgid "B<C#>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:719
msgid ""
"The C# bindings are highly experimental.  Please read the warnings at the "
"top of C<csharp/Libguestfs.cs>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:722
msgid "B<Haskell>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:724
msgid ""
"This is the only language binding that is working but incomplete.  Only "
"calls which return simple integers have been bound in Haskell, and we are "
"looking for help to complete this binding."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:728
msgid "B<Java>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:730
msgid ""
"Full documentation is contained in the Javadoc which is distributed with "
"libguestfs."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:733
msgid "B<OCaml>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:735
msgid "See L<guestfs-ocaml(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:737
msgid "B<Perl>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:739
msgid "See L<guestfs-perl(3)> and L<Sys::Guestfs(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:741
msgid "B<PHP>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:743
msgid ""
"For documentation see C<README-PHP> supplied with libguestfs sources or in "
"the php-libguestfs package for your distribution."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:746
msgid "The PHP binding only works correctly on 64 bit machines."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:748
msgid "B<Python>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:750
msgid "See L<guestfs-python(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:752
msgid "B<Ruby>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:754
msgid "See L<guestfs-ruby(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:756
msgid "B<shell scripts>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:758
msgid "See L<guestfish(1)>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:762
msgid "LIBGUESTFS GOTCHAS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:764
msgid ""
"L<http://en.wikipedia.org/wiki/Gotcha_(programming)>: \"A feature of a "
"system [...] that works in the way it is documented but is counterintuitive "
"and almost invites mistakes.\""
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:768
msgid ""
"Since we developed libguestfs and the associated tools, there are several "
"things we would have designed differently, but are now stuck with for "
"backwards compatibility or other reasons.  If there is ever a libguestfs 2.0 "
"release, you can expect these to change.  Beware of them."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:776
msgid "Autosync / forgetting to sync."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:778
msgid ""
"I<Update:> Autosync is enabled by default for all API users starting from "
"libguestfs 1.5.24.  This section only applies to older versions."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:781
msgid ""
"When modifying a filesystem from C or another language, you B<must> unmount "
"all filesystems and call L</guestfs_sync> explicitly before you close the "
"libguestfs handle.  You can also call:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:785
#, no-wrap
msgid ""
" guestfs_set_autosync (g, 1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:787
msgid ""
"to have the unmount/sync done automatically for you when the handle 'g' is "
"closed.  (This feature is called \"autosync\", L</guestfs_set_autosync> "
"q.v.)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:791
msgid ""
"If you forget to do this, then it is entirely possible that your changes "
"won't be written out, or will be partially written, or (very rarely) that "
"you'll get disk corruption."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:795
msgid ""
"Note that in L<guestfish(3)> autosync is the default.  So quick and dirty "
"guestfish scripts that forget to sync will work just fine, which can make "
"this very puzzling if you are trying to debug a problem."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:799
msgid "Mount option C<-o sync> should not be the default."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:801
msgid ""
"If you use L</guestfs_mount>, then C<-o sync,noatime> are added implicitly.  "
"However C<-o sync> does not add any reliability benefit, but does have a "
"very large performance impact."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:805
msgid ""
"The work around is to use L</guestfs_mount_options> and set the mount "
"options that you actually want to use."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:808
msgid "Read-only should be the default."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:810
msgid ""
"In L<guestfish(3)>, I<--ro> should be the default, and you should have to "
"specify I<--rw> if you want to make changes to the image."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:813
msgid "This would reduce the potential to corrupt live VM images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:815
msgid ""
"Note that many filesystems change the disk when you just mount and unmount, "
"even if you didn't perform any writes.  You need to use "
"L</guestfs_add_drive_ro> to guarantee that the disk is not changed."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:819
msgid "guestfish command line is hard to use."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:821
msgid ""
"C<guestfish disk.img> doesn't do what people expect (open C<disk.img> for "
"examination).  It tries to run a guestfish command C<disk.img> which doesn't "
"exist, so it fails.  In earlier versions of guestfish the error message was "
"also unintuitive, but we have corrected this since.  Like the Bourne shell, "
"we should have used C<guestfish -c command> to run commands."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:828
msgid "guestfish megabyte modifiers don't work right on all commands"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:830
msgid ""
"In recent guestfish you can use C<1M> to mean 1 megabyte (and similarly for "
"other modifiers).  What guestfish actually does is to multiply the number "
"part by the modifier part and pass the result to the C API.  However this "
"doesn't work for a few APIs which aren't expecting bytes, but are already "
"expecting some other unit (eg. megabytes)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:837
msgid "The most common is L</guestfs_lvcreate>.  The guestfish command:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:839
#, no-wrap
msgid ""
" lvcreate LV VG 100M\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:841
msgid ""
"does not do what you might expect.  Instead because L</guestfs_lvcreate> is "
"already expecting megabytes, this tries to create a 100 I<terabyte> (100 "
"megabytes * megabytes) logical volume.  The error message you get from this "
"is also a little obscure."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:846
msgid ""
"This could be fixed in the generator by specially marking parameters and "
"return values which take bytes or other units."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:849
msgid "Ambiguity between devices and paths"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:851
msgid ""
"There is a subtle ambiguity in the API between a device name "
"(eg. C</dev/sdb2>) and a similar pathname.  A file might just happen to be "
"called C<sdb2> in the directory C</dev> (consider some non-Unix VM image)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:856
msgid ""
"In the current API we usually resolve this ambiguity by having two separate "
"calls, for example L</guestfs_checksum> and L</guestfs_checksum_device>.  "
"Some API calls are ambiguous and (incorrectly) resolve the problem by "
"detecting if the path supplied begins with C</dev/>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:862
msgid ""
"To avoid both the ambiguity and the need to duplicate some calls, we could "
"make paths/devices into structured names.  One way to do this would be to "
"use a notation like grub (C<hd(0,0)>), although nobody really likes this "
"aspect of grub.  Another way would be to use a structured type, equivalent "
"to this OCaml type:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:868
#, no-wrap
msgid ""
" type path = Path of string | Device of int | Partition of int * int\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:870
msgid "which would allow you to pass arguments like:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:872
#, no-wrap
msgid ""
" Path \"/foo/bar\"\n"
" Device 1            (* /dev/sdb, or perhaps /dev/sda *)\n"
" Partition (1, 2)    (* /dev/sdb2 (or is it /dev/sda2 or /dev/sdb3?) *)\n"
" Path \"/dev/sdb2\"    (* not a device *)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:877
msgid ""
"As you can see there are still problems to resolve even with this "
"representation.  Also consider how it might work in guestfish."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:882
msgid "KEYS AND PASSPHRASES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:884
msgid ""
"Certain libguestfs calls take a parameter that contains sensitive key "
"material, passed in as a C string."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:887
msgid ""
"In the future we would hope to change the libguestfs implementation so that "
"keys are L<mlock(2)>-ed into physical RAM, and thus can never end up in "
"swap.  However this is I<not> done at the moment, because of the complexity "
"of such an implementation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:892
msgid ""
"Therefore you should be aware that any key parameter you pass to libguestfs "
"might end up being written out to the swap partition.  If this is a concern, "
"scrub the swap partition or don't use libguestfs on encrypted devices."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:897
msgid "MULTIPLE HANDLES AND MULTIPLE THREADS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:899
msgid ""
"All high-level libguestfs actions are synchronous.  If you want to use "
"libguestfs asynchronously then you must create a thread."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:902
msgid ""
"Only use the handle from a single thread.  Either use the handle exclusively "
"from one thread, or provide your own mutex so that two threads cannot issue "
"calls on the same handle at the same time."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:906
msgid ""
"See the graphical program guestfs-browser for one possible architecture for "
"multithreaded programs using libvirt and libguestfs."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:909
msgid "PATH"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:911
msgid ""
"Libguestfs needs a supermin appliance, which it finds by looking along an "
"internal path."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:914
msgid ""
"By default it looks for these in the directory C<$libdir/guestfs> "
"(eg. C</usr/local/lib/guestfs> or C</usr/lib64/guestfs>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:917
msgid ""
"Use L</guestfs_set_path> or set the environment variable L</LIBGUESTFS_PATH> "
"to change the directories that libguestfs will search in.  The value is a "
"colon-separated list of paths.  The current directory is I<not> searched "
"unless the path contains an empty element or C<.>.  For example "
"C<LIBGUESTFS_PATH=:/usr/lib/guestfs> would search the current directory and "
"then C</usr/lib/guestfs>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:924
msgid "QEMU WRAPPERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:926
msgid ""
"If you want to compile your own qemu, run qemu from a non-standard location, "
"or pass extra arguments to qemu, then you can write a shell-script wrapper "
"around qemu."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:930
msgid ""
"There is one important rule to remember: you I<must C<exec qemu>> as the "
"last command in the shell script (so that qemu replaces the shell and "
"becomes the direct child of the libguestfs-using program).  If you don't do "
"this, then the qemu process won't be cleaned up correctly."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:935
msgid ""
"Here is an example of a wrapper, where I have built my own copy of qemu from "
"source:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:938
#, no-wrap
msgid ""
" #!/bin/sh -\n"
" qemudir=/home/rjones/d/qemu\n"
" exec $qemudir/x86_64-softmmu/qemu-system-x86_64 -L $qemudir/pc-bios "
"\"$@\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:942
msgid ""
"Save this script as C</tmp/qemu.wrapper> (or wherever), C<chmod +x>, and "
"then use it by setting the LIBGUESTFS_QEMU environment variable.  For "
"example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:946
#, no-wrap
msgid ""
" LIBGUESTFS_QEMU=/tmp/qemu.wrapper guestfish\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:948
msgid ""
"Note that libguestfs also calls qemu with the -help and -version options in "
"order to determine features."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:951
msgid "ATTACHING TO RUNNING DAEMONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:953
msgid ""
"I<Note (1):> This is B<highly experimental> and has a tendency to eat "
"babies.  Use with caution."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:956
msgid ""
"I<Note (2):> This section explains how to attach to a running daemon from a "
"low level perspective.  For most users, simply using virt tools such as "
"L<guestfish(1)> with the I<--live> option will \"just work\"."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:960
msgid "Using guestfs_set_attach_method"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:962
msgid ""
"By calling L</guestfs_set_attach_method> you can change how the library "
"connects to the C<guestfsd> daemon in L</guestfs_launch> (read "
"L</ARCHITECTURE> for some background)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:966
msgid ""
"The normal attach method is C<appliance>, where a small appliance is created "
"containing the daemon, and then the library connects to this."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:969
msgid ""
"Setting attach method to C<unix:I<path>> (where I<path> is the path of a "
"Unix domain socket) causes L</guestfs_launch> to connect to an existing "
"daemon over the Unix domain socket."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:973
msgid ""
"The normal use for this is to connect to a running virtual machine that "
"contains a C<guestfsd> daemon, and send commands so you can read and write "
"files inside the live virtual machine."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:977
msgid "Using guestfs_add_domain with live flag"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:979
msgid ""
"L</guestfs_add_domain> provides some help for getting the correct attach "
"method.  If you pass the C<live> option to this function, then (if the "
"virtual machine is running) it will examine the libvirt XML looking for a "
"virtio-serial channel to connect to:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:985
#, no-wrap
msgid ""
" <domain>\n"
"   ...\n"
"   <devices>\n"
"     ...\n"
"     <channel type='unix'>\n"
"       <source mode='bind' path='/path/to/socket'/>\n"
"       <target type='virtio' name='org.libguestfs.channel.0'/>\n"
"     </channel>\n"
"     ...\n"
"   </devices>\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:997
msgid ""
"L</guestfs_add_domain> extracts C</path/to/socket> and sets the attach "
"method to C<unix:/path/to/socket>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1000
msgid ""
"Some of the libguestfs tools (including guestfish) support a I<--live> "
"option which is passed through to L</guestfs_add_domain> thus allowing you "
"to attach to and modify live virtual machines."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1004
msgid ""
"The virtual machine needs to have been set up beforehand so that it has the "
"virtio-serial channel and so that guestfsd is running inside it."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1008
msgid "ABI GUARANTEE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1010
msgid ""
"We guarantee the libguestfs ABI (binary interface), for public, high-level "
"actions as outlined in this section.  Although we will deprecate some "
"actions, for example if they get replaced by newer calls, we will keep the "
"old actions forever.  This allows you the developer to program in confidence "
"against the libguestfs API."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1016
msgid "BLOCK DEVICE NAMING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1018
msgid ""
"In the kernel there is now quite a profusion of schemata for naming block "
"devices (in this context, by I<block device> I mean a physical or virtual "
"hard drive).  The original Linux IDE driver used names starting with "
"C</dev/hd*>.  SCSI devices have historically used a different naming scheme, "
"C</dev/sd*>.  When the Linux kernel I<libata> driver became a popular "
"replacement for the old IDE driver (particularly for SATA devices) those "
"devices also used the C</dev/sd*> scheme.  Additionally we now have virtual "
"machines with paravirtualized drivers.  This has created several different "
"naming systems, such as C</dev/vd*> for virtio disks and C</dev/xvd*> for "
"Xen PV disks."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1030
msgid ""
"As discussed above, libguestfs uses a qemu appliance running an embedded "
"Linux kernel to access block devices.  We can run a variety of appliances "
"based on a variety of Linux kernels."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1034
msgid ""
"This causes a problem for libguestfs because many API calls use device or "
"partition names.  Working scripts and the recipe (example) scripts that we "
"make available over the internet could fail if the naming scheme changes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1039
msgid ""
"Therefore libguestfs defines C</dev/sd*> as the I<standard naming scheme>.  "
"Internally C</dev/sd*> names are translated, if necessary, to other names as "
"required.  For example, under RHEL 5 which uses the C</dev/hd*> scheme, any "
"device parameter C</dev/sda2> is translated to C</dev/hda2> transparently."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1045
msgid ""
"Note that this I<only> applies to parameters.  The L</guestfs_list_devices>, "
"L</guestfs_list_partitions> and similar calls return the true names of the "
"devices and partitions as known to the appliance."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1050
msgid "ALGORITHM FOR BLOCK DEVICE NAME TRANSLATION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1052
msgid ""
"Usually this translation is transparent.  However in some (very rare)  cases "
"you may need to know the exact algorithm.  Such cases include where you use "
"L</guestfs_config> to add a mixture of virtio and IDE devices to the "
"qemu-based appliance, so have a mixture of C</dev/sd*> and C</dev/vd*> "
"devices."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1058
msgid ""
"The algorithm is applied only to I<parameters> which are known to be either "
"device or partition names.  Return values from functions such as "
"L</guestfs_list_devices> are never changed."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1066
msgid "Is the string a parameter which is a device or partition name?"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1070
msgid "Does the string begin with C</dev/sd>?"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1074
msgid ""
"Does the named device exist? If so, we use that device.  However if I<not> "
"then we continue with this algorithm."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1079
msgid "Replace initial C</dev/sd> string with C</dev/hd>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1081
msgid "For example, change C</dev/sda2> to C</dev/hda2>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1083
msgid "If that named device exists, use it.  If not, continue."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1087
msgid "Replace initial C</dev/sd> string with C</dev/vd>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1089
msgid "If that named device exists, use it.  If not, return an error."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1093
msgid "PORTABILITY CONCERNS WITH BLOCK DEVICE NAMING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1095
msgid ""
"Although the standard naming scheme and automatic translation is useful for "
"simple programs and guestfish scripts, for larger programs it is best not to "
"rely on this mechanism."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1099
msgid ""
"Where possible for maximum future portability programs using libguestfs "
"should use these future-proof techniques:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1106
msgid ""
"Use L</guestfs_list_devices> or L</guestfs_list_partitions> to list actual "
"device names, and then use those names directly."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1109
msgid "Since those device names exist by definition, they will never be translated."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1114
msgid ""
"Use higher level ways to identify filesystems, such as LVM names, UUIDs and "
"filesystem labels."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1119
msgid "SECURITY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1121
msgid ""
"This section discusses security implications of using libguestfs, "
"particularly with untrusted or malicious guests or disk images."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1124
msgid "GENERAL SECURITY CONSIDERATIONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1126
msgid ""
"Be careful with any files or data that you download from a guest (by "
"\"download\" we mean not just the L</guestfs_download> command but any "
"command that reads files, filenames, directories or anything else from a "
"disk image).  An attacker could manipulate the data to fool your program "
"into doing the wrong thing.  Consider cases such as:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1136
msgid "the data (file etc) not being present"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1140
msgid "being present but empty"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1144
msgid "being much larger than normal"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1148
msgid "containing arbitrary 8 bit data"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1152
msgid "being in an unexpected character encoding"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1156
msgid "containing homoglyphs."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1160
msgid "SECURITY OF MOUNTING FILESYSTEMS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1162
msgid ""
"When you mount a filesystem under Linux, mistakes in the kernel filesystem "
"(VFS) module can sometimes be escalated into exploits by deliberately "
"creating a malicious, malformed filesystem.  These exploits are very severe "
"for two reasons.  Firstly there are very many filesystem drivers in the "
"kernel, and many of them are infrequently used and not much developer "
"attention has been paid to the code.  Linux userspace helps potential "
"crackers by detecting the filesystem type and automatically choosing the "
"right VFS driver, even if that filesystem type is obscure or unexpected for "
"the administrator.  Secondly, a kernel-level exploit is like a local root "
"exploit (worse in some ways), giving immediate and total access to the "
"system right down to the hardware level."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1175
msgid ""
"That explains why you should never mount a filesystem from an untrusted "
"guest on your host kernel.  How about libguestfs? We run a Linux kernel "
"inside a qemu virtual machine, usually running as a non-root user.  The "
"attacker would need to write a filesystem which first exploited the kernel, "
"and then exploited either qemu virtualization (eg. a faulty qemu driver) or "
"the libguestfs protocol, and finally to be as serious as the host kernel "
"exploit it would need to escalate its privileges to root.  This multi-step "
"escalation, performed by a static piece of data, is thought to be extremely "
"hard to do, although we never say 'never' about security issues."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1186
msgid ""
"In any case callers can reduce the attack surface by forcing the filesystem "
"type when mounting (use L</guestfs_mount_vfs>)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1189
msgid "PROTOCOL SECURITY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1191
msgid ""
"The protocol is designed to be secure, being based on RFC 4506 (XDR)  with a "
"defined upper message size.  However a program that uses libguestfs must "
"also take care - for example you can write a program that downloads a binary "
"from a disk image and executes it locally, and no amount of protocol "
"security will save you from the consequences."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1197
msgid "INSPECTION SECURITY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1199
msgid ""
"Parts of the inspection API (see L</INSPECTION>) return untrusted strings "
"directly from the guest, and these could contain any 8 bit data.  Callers "
"should be careful to escape these before printing them to a structured file "
"(for example, use HTML escaping if creating a web page)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1205
msgid ""
"Guest configuration may be altered in unusual ways by the administrator of "
"the virtual machine, and may not reflect reality (particularly for untrusted "
"or actively malicious guests).  For example we parse the hostname from "
"configuration files like C</etc/sysconfig/network> that we find in the "
"guest, but the guest administrator can easily manipulate these files to "
"provide the wrong hostname."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1213
msgid ""
"The inspection API parses guest configuration using two external libraries: "
"Augeas (Linux configuration) and hivex (Windows Registry).  Both are "
"designed to be robust in the face of malicious data, although denial of "
"service attacks are still possible, for example with oversized configuration "
"files."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1219
msgid "RUNNING UNTRUSTED GUEST COMMANDS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1221
msgid ""
"Be very cautious about running commands from the guest.  By running a "
"command in the guest, you are giving CPU time to a binary that you do not "
"control, under the same user account as the library, albeit wrapped in qemu "
"virtualization.  More information and alternatives can be found in the "
"section L</RUNNING COMMANDS>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1227
msgid "CVE-2010-3851"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1229
msgid "https://bugzilla.redhat.com/642934"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1231
msgid ""
"This security bug concerns the automatic disk format detection that qemu "
"does on disk images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1234
msgid ""
"A raw disk image is just the raw bytes, there is no header.  Other disk "
"images like qcow2 contain a special header.  Qemu deals with this by looking "
"for one of the known headers, and if none is found then assuming the disk "
"image must be raw."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1239
msgid ""
"This allows a guest which has been given a raw disk image to write some "
"other header.  At next boot (or when the disk image is accessed by "
"libguestfs) qemu would do autodetection and think the disk image format was, "
"say, qcow2 based on the header written by the guest."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1244
msgid ""
"This in itself would not be a problem, but qcow2 offers many features, one "
"of which is to allow a disk image to refer to another image (called the "
"\"backing disk\").  It does this by placing the path to the backing disk "
"into the qcow2 header.  This path is not validated and could point to any "
"host file (eg. \"/etc/passwd\").  The backing disk is then exposed through "
"\"holes\" in the qcow2 disk image, which of course is completely under the "
"control of the attacker."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1252
msgid "In libguestfs this is rather hard to exploit except under two circumstances:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1259
msgid "You have enabled the network or have opened the disk in write mode."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1263
msgid ""
"You are also running untrusted code from the guest (see L</RUNNING "
"COMMANDS>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1268
msgid ""
"The way to avoid this is to specify the expected disk format when adding "
"disks (the optional C<format> option to L</guestfs_add_drive_opts>).  You "
"should always do this if the disk is raw format, and it's a good idea for "
"other cases too."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1273
msgid ""
"For disks added from libvirt using calls like L</guestfs_add_domain>, the "
"format is fetched from libvirt and passed through."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1276
msgid ""
"For libguestfs tools, use the I<--format> command line parameter as "
"appropriate."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1279
msgid "CONNECTION MANAGEMENT"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1281
msgid "guestfs_h *"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1283
msgid ""
"C<guestfs_h> is the opaque type representing a connection handle.  Create a "
"handle by calling L</guestfs_create>.  Call L</guestfs_close> to free the "
"handle and release all resources used."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1287
msgid ""
"For information on using multiple handles and threads, see the section "
"L</MULTIPLE HANDLES AND MULTIPLE THREADS> above."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1290
msgid "guestfs_create"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1292
#, no-wrap
msgid ""
" guestfs_h *guestfs_create (void);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1294
msgid "Create a connection handle."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1296
msgid ""
"On success this returns a non-NULL pointer to a handle.  On error it returns "
"NULL."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1299
msgid ""
"You have to \"configure\" the handle after creating it.  This includes "
"calling L</guestfs_add_drive_opts> (or one of the equivalent calls) on the "
"handle at least once."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1303
msgid "After configuring the handle, you have to call L</guestfs_launch>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1305
msgid ""
"You may also want to configure error handling for the handle.  See the "
"L</ERROR HANDLING> section below."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1308
msgid "guestfs_close"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1310
#, no-wrap
msgid ""
" void guestfs_close (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1312
msgid "This closes the connection handle and frees up all resources used."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1314
msgid ""
"If autosync was set on the handle and the handle was launched, then this "
"implicitly calls various functions to unmount filesystems and sync the "
"disk.  See L</guestfs_set_autosync> for more details."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1318
msgid "If a close callback was set on the handle, then it is called."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1320
msgid "ERROR HANDLING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1322
msgid ""
"API functions can return errors.  For example, almost all functions that "
"return C<int> will return C<-1> to indicate an error."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1325
msgid ""
"Additional information is available for errors: an error message string and "
"optionally an error number (errno) if the thing that failed was a system "
"call."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1329
msgid ""
"You can get at the additional information about the last error on the handle "
"by calling L</guestfs_last_error>, L</guestfs_last_errno>, and/or by setting "
"up an error handler with L</guestfs_set_error_handler>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1334
msgid ""
"When the handle is created, a default error handler is installed which "
"prints the error message string to C<stderr>.  For small short-running "
"command line programs it is sufficient to do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1338
#, no-wrap
msgid ""
" if (guestfs_launch (g) == -1)\n"
"   exit (EXIT_FAILURE);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1341
msgid ""
"since the default error handler will ensure that an error message has been "
"printed to C<stderr> before the program exits."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1344
msgid ""
"For other programs the caller will almost certainly want to install an "
"alternate error handler or do error handling in-line like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1347
#, no-wrap
msgid ""
" g = guestfs_create ();\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1349
#, no-wrap
msgid ""
" /* This disables the default behaviour of printing errors\n"
"    on stderr. */\n"
" guestfs_set_error_handler (g, NULL, NULL);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1353
#, no-wrap
msgid ""
" if (guestfs_launch (g) == -1) {\n"
"   /* Examine the error message and print it etc. */\n"
"   char *msg = guestfs_last_error (g);\n"
"   int errnum = guestfs_last_errno (g);\n"
"   fprintf (stderr, \"%s\\n\", msg);\n"
"   /* ... */\n"
"  }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1361
msgid ""
"Out of memory errors are handled differently.  The default action is to call "
"L<abort(3)>.  If this is undesirable, then you can set a handler using "
"L</guestfs_set_out_of_memory_handler>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1365
msgid ""
"L</guestfs_create> returns C<NULL> if the handle cannot be created, and "
"because there is no handle if this happens there is no way to get additional "
"error information.  However L</guestfs_create> is supposed to be a "
"lightweight operation which can only fail because of insufficient memory (it "
"returns NULL in this case)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1371
msgid "guestfs_last_error"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1373
#, no-wrap
msgid ""
" const char *guestfs_last_error (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1375
msgid ""
"This returns the last error message that happened on C<g>.  If there has not "
"been an error since the handle was created, then this returns C<NULL>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1379
msgid ""
"The lifetime of the returned string is until the next error occurs, or "
"L</guestfs_close> is called."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1382
msgid "guestfs_last_errno"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1384
#, no-wrap
msgid ""
" int guestfs_last_errno (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1386
msgid "This returns the last error number (errno) that happened on C<g>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1388
msgid "If successful, an errno integer not equal to zero is returned."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1390
msgid "If no error, this returns 0.  This call can return 0 in three situations:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1397
msgid "There has not been any error on the handle."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1401
msgid ""
"There has been an error but the errno was meaningless.  This corresponds to "
"the case where the error did not come from a failed system call, but for "
"some other reason."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1407
msgid ""
"There was an error from a failed system call, but for some reason the errno "
"was not captured and returned.  This usually indicates a bug in libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1413
msgid ""
"Libguestfs tries to convert the errno from inside the applicance into a "
"corresponding errno for the caller (not entirely trivial: the appliance "
"might be running a completely different operating system from the library "
"and error numbers are not standardized across Un*xen).  If this could not be "
"done, then the error is translated to C<EINVAL>.  In practice this should "
"only happen in very rare circumstances."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1421
msgid "guestfs_set_error_handler"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1423
#, no-wrap
msgid ""
" typedef void (*guestfs_error_handler_cb) (guestfs_h *g,\n"
"                                           void *opaque,\n"
"                                           const char *msg);\n"
" void guestfs_set_error_handler (guestfs_h *g,\n"
"                                 guestfs_error_handler_cb cb,\n"
"                                 void *opaque);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1430
msgid ""
"The callback C<cb> will be called if there is an error.  The parameters "
"passed to the callback are an opaque data pointer and the error message "
"string."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1434
msgid ""
"C<errno> is not passed to the callback.  To get that the callback must call "
"L</guestfs_last_errno>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1437
msgid ""
"Note that the message string C<msg> is freed as soon as the callback "
"function returns, so if you want to stash it somewhere you must make your "
"own copy."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1441
msgid "The default handler prints messages on C<stderr>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1443
msgid "If you set C<cb> to C<NULL> then I<no> handler is called."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1445
msgid "guestfs_get_error_handler"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1447
#, no-wrap
msgid ""
" guestfs_error_handler_cb guestfs_get_error_handler (guestfs_h *g,\n"
"                                                     void **opaque_rtn);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1450
msgid "Returns the current error handler callback."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1452
msgid "guestfs_set_out_of_memory_handler"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1454
#, no-wrap
msgid ""
" typedef void (*guestfs_abort_cb) (void);\n"
" int guestfs_set_out_of_memory_handler (guestfs_h *g,\n"
"                                        guestfs_abort_cb);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1458
msgid ""
"The callback C<cb> will be called if there is an out of memory situation.  "
"I<Note this callback must not return>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1461
msgid "The default is to call L<abort(3)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1463
msgid "You cannot set C<cb> to C<NULL>.  You can't ignore out of memory situations."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1466
msgid "guestfs_get_out_of_memory_handler"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1468
#, no-wrap
msgid ""
" guestfs_abort_fn guestfs_get_out_of_memory_handler (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1470
msgid "This returns the current out of memory handler."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1472
msgid "API CALLS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1474 ../fish/guestfish.pod:1008
msgid "@ACTIONS@"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1476
msgid "STRUCTURES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1478
msgid "@STRUCTS@"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1480
msgid "AVAILABILITY"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1482
msgid "GROUPS OF FUNCTIONALITY IN THE APPLIANCE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1484
msgid ""
"Using L</guestfs_available> you can test availability of the following "
"groups of functions.  This test queries the appliance to see if the "
"appliance you are currently using supports the functionality."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1489
msgid "@AVAILABILITY@"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1491
msgid "GUESTFISH supported COMMAND"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1493
msgid ""
"In L<guestfish(3)> there is a handy interactive command C<supported> which "
"prints out the available groups and whether they are supported by this build "
"of libguestfs.  Note however that you have to do C<run> first."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1498
msgid "SINGLE CALLS AT COMPILE TIME"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1500
msgid ""
"Since version 1.5.8, C<E<lt>guestfs.hE<gt>> defines symbols for each C API "
"function, such as:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1503
#, no-wrap
msgid ""
" #define LIBGUESTFS_HAVE_DD 1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1505
msgid "if L</guestfs_dd> is available."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1507
msgid ""
"Before version 1.5.8, if you needed to test whether a single libguestfs "
"function is available at compile time, we recommended using build tools such "
"as autoconf or cmake.  For example in autotools you could use:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1512
#, no-wrap
msgid ""
" AC_CHECK_LIB([guestfs],[guestfs_create])\n"
" AC_CHECK_FUNCS([guestfs_dd])\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1515
msgid ""
"which would result in C<HAVE_GUESTFS_DD> being either defined or not defined "
"in your program."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1518
msgid "SINGLE CALLS AT RUN TIME"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1520
msgid ""
"Testing at compile time doesn't guarantee that a function really exists in "
"the library.  The reason is that you might be dynamically linked against a "
"previous I<libguestfs.so> (dynamic library)  which doesn't have the call.  "
"This situation unfortunately results in a segmentation fault, which is a "
"shortcoming of the C dynamic linking system itself."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1527
msgid ""
"You can use L<dlopen(3)> to test if a function is available at run time, as "
"in this example program (note that you still need the compile time check as "
"well):"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1531
#, no-wrap
msgid ""
" #include <stdio.h>\n"
" #include <stdlib.h>\n"
" #include <unistd.h>\n"
" #include <dlfcn.h>\n"
" #include <guestfs.h>\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1537
#, no-wrap
msgid ""
" main ()\n"
" {\n"
" #ifdef LIBGUESTFS_HAVE_DD\n"
"   void *dl;\n"
"   int has_function;\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1543
#, no-wrap
msgid ""
"   /* Test if the function guestfs_dd is really available. */\n"
"   dl = dlopen (NULL, RTLD_LAZY);\n"
"   if (!dl) {\n"
"     fprintf (stderr, \"dlopen: %s\\n\", dlerror ());\n"
"     exit (EXIT_FAILURE);\n"
"   }\n"
"   has_function = dlsym (dl, \"guestfs_dd\") != NULL;\n"
"   dlclose (dl);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1552
#, no-wrap
msgid ""
"   if (!has_function)\n"
"     printf (\"this libguestfs.so does NOT have guestfs_dd function\\n\");\n"
"   else {\n"
"     printf (\"this libguestfs.so has guestfs_dd function\\n\");\n"
"     /* Now it's safe to call\n"
"     guestfs_dd (g, \"foo\", \"bar\");\n"
"     */\n"
"   }\n"
" #else\n"
"   printf (\"guestfs_dd function was not found at compile time\\n\");\n"
" #endif\n"
"  }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1565
msgid ""
"You may think the above is an awful lot of hassle, and it is.  There are "
"other ways outside of the C linking system to ensure that this kind of "
"incompatibility never arises, such as using package versioning:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1570
#, no-wrap
msgid ""
" Requires: libguestfs >= 1.0.80\n"
"\n"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1572
msgid "CALLS WITH OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1574
msgid ""
"A recent feature of the API is the introduction of calls which take optional "
"arguments.  In C these are declared 3 ways.  The main way is as a call which "
"takes variable arguments (ie. C<...>), as in this example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1579
#, no-wrap
msgid ""
" int guestfs_add_drive_opts (guestfs_h *g, const char *filename, ...);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1581
msgid ""
"Call this with a list of optional arguments, terminated by C<-1>.  So to "
"call with no optional arguments specified:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1584
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename, -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1586
msgid "With a single optional argument:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1588
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
"                         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1592
msgid "With two:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1594
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
"                         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1599
msgid ""
"and so forth.  Don't forget the terminating C<-1> otherwise Bad Things will "
"happen!"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1602
msgid "USING va_list FOR OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1604
msgid ""
"The second variant has the same name with the suffix C<_va>, which works the "
"same way but takes a C<va_list>.  See the C manual for details.  For the "
"example function, this is declared:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1608
#, no-wrap
msgid ""
" int guestfs_add_drive_opts_va (guestfs_h *g, const char *filename,\n"
"                                va_list args);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1611
msgid "CONSTRUCTING OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1613
msgid ""
"The third variant is useful where you need to construct these calls.  You "
"pass in a structure where you fill in the optional fields.  The structure "
"has a bitmask as the first element which you must set to indicate which "
"fields you have filled in.  For our example function the structure and call "
"are declared:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1619
#, no-wrap
msgid ""
" struct guestfs_add_drive_opts_argv {\n"
"   uint64_t bitmask;\n"
"   int readonly;\n"
"   const char *format;\n"
"   /* ... */\n"
" };\n"
" int guestfs_add_drive_opts_argv (guestfs_h *g, const char *filename,\n"
"              const struct guestfs_add_drive_opts_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1628
msgid "You could call it like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1630
#, no-wrap
msgid ""
" struct guestfs_add_drive_opts_argv optargs = {\n"
"   .bitmask = GUESTFS_ADD_DRIVE_OPTS_READONLY_BITMASK |\n"
"              GUESTFS_ADD_DRIVE_OPTS_FORMAT_BITMASK,\n"
"   .readonly = 1,\n"
"   .format = \"qcow2\"\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1637
#, no-wrap
msgid ""
" guestfs_add_drive_opts_argv (g, filename, &optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1639 ../src/guestfs-actions.pod:11 ../src/guestfs-actions.pod:1852 ../fish/guestfish-actions.pod:9 ../fish/guestfish-actions.pod:1257 ../tools/virt-win-reg.pl:532
msgid "Notes:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1645
msgid "The C<_BITMASK> suffix on each option name when specifying the bitmask."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1650
msgid "You do not need to fill in all fields of the structure."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1654
msgid ""
"There must be a one-to-one correspondence between fields of the structure "
"that are filled in, and bits set in the bitmask."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1659
msgid "OPTIONAL ARGUMENTS IN OTHER LANGUAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1661
msgid ""
"In other languages, optional arguments are expressed in the way that is "
"natural for that language.  We refer you to the language-specific "
"documentation for more details on that."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1665
msgid "For guestfish, see L<guestfish(1)/OPTIONAL ARGUMENTS>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1667
msgid "SETTING CALLBACKS TO HANDLE EVENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1669
msgid ""
"B<Note:> This section documents the generic event mechanism introduced in "
"libguestfs 1.10, which you should use in new code if possible.  The old "
"functions C<guestfs_set_log_message_callback>, "
"C<guestfs_set_subprocess_quit_callback>, "
"C<guestfs_set_launch_done_callback>, C<guestfs_set_close_callback> and "
"C<guestfs_set_progress_callback> are no longer documented in this manual "
"page."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1677
msgid ""
"Handles generate events when certain things happen, such as log messages "
"being generated, progress messages during long-running operations, or the "
"handle being closed.  The API calls described below let you register a "
"callback to be called when events happen.  You can register multiple "
"callbacks (for the same, different or overlapping sets of events), and "
"individually remove callbacks.  If callbacks are not removed, then they "
"remain in force until the handle is closed."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1685
msgid ""
"In the current implementation, events are only generated synchronously: that "
"means that events (and hence callbacks) can only happen while you are in the "
"middle of making another libguestfs call.  The callback is called in the "
"same thread."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1690
msgid ""
"Events may contain a payload, usually nothing (void), an array of 64 bit "
"unsigned integers, or a message buffer.  Payloads are discussed later on."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1694
msgid "CLASSES OF EVENTS"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1698
msgid "GUESTFS_EVENT_CLOSE (payload type: void)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1701
msgid ""
"The callback function will be called while the handle is being closed "
"(synchronously from L</guestfs_close>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1704
msgid ""
"Note that libguestfs installs an L<atexit(3)> handler to try to clean up "
"handles that are open when the program exits.  This means that this callback "
"might be called indirectly from L<exit(3)>, which can cause unexpected "
"problems in higher-level languages (eg. if your HLL interpreter has already "
"been cleaned up by the time this is called, and if your callback then jumps "
"into some HLL function)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1711
msgid ""
"If no callback is registered: the handle is closed without any callback "
"being invoked."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1714
msgid "GUESTFS_EVENT_SUBPROCESS_QUIT (payload type: void)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1717
msgid ""
"The callback function will be called when the child process quits, either "
"asynchronously or if killed by L</guestfs_kill_subprocess>.  (This "
"corresponds to a transition from any state to the CONFIG state)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1721 ../src/guestfs.pod:1730
msgid "If no callback is registered: the event is ignored."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1723
msgid "GUESTFS_EVENT_LAUNCH_DONE (payload type: void)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1726
msgid ""
"The callback function will be called when the child process becomes ready "
"first time after it has been launched.  (This corresponds to a transition "
"from LAUNCHING to the READY state)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1732
msgid "GUESTFS_EVENT_PROGRESS (payload type: array of 4 x uint64_t)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1735
msgid ""
"Some long-running operations can generate progress messages.  If this "
"callback is registered, then it will be called each time a progress message "
"is generated (usually two seconds after the operation started, and three "
"times per second thereafter until it completes, although the frequency may "
"change in future versions)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1741
msgid ""
"The callback receives in the payload four unsigned 64 bit numbers which are "
"(in order): C<proc_nr>, C<serial>, C<position>, C<total>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1744
msgid ""
"The units of C<total> are not defined, although for some operations C<total> "
"may relate in some way to the amount of data to be transferred (eg. in bytes "
"or megabytes), and C<position> may be the portion which has been "
"transferred."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1749
msgid "The only defined and stable parts of the API are:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1755
msgid ""
"The callback can display to the user some type of progress bar or indicator "
"which shows the ratio of C<position>:C<total>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1760
msgid "0 E<lt>= C<position> E<lt>= C<total>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1764
msgid ""
"If any progress notification is sent during a call, then a final progress "
"notification is always sent when C<position> = C<total> (I<unless> the call "
"fails with an error)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1768
msgid ""
"This is to simplify caller code, so callers can easily set the progress "
"indicator to \"100%\" at the end of the operation, without requiring special "
"code to detect this case."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1774
msgid ""
"For some calls we are unable to estimate the progress of the call, but we "
"can still generate progress messages to indicate activity.  This is known as "
"\"pulse mode\", and is directly supported by certain progress bar "
"implementations (eg. GtkProgressBar)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1779
msgid ""
"For these calls, zero or more progress messages are generated with "
"C<position = 0> and C<total = 1>, followed by a final message with "
"C<position = total = 1>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1783
msgid ""
"As noted above, if the call fails with an error then the final message may "
"not be generated."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1788
msgid ""
"The callback also receives the procedure number (C<proc_nr>) and serial "
"number (C<serial>) of the call.  These are only useful for debugging "
"protocol issues, and the callback can normally ignore them.  The callback "
"may want to print these numbers in error messages or debugging messages."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1794
msgid "If no callback is registered: progress messages are discarded."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1796
msgid "GUESTFS_EVENT_APPLIANCE (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1799
msgid ""
"The callback function is called whenever a log message is generated by qemu, "
"the appliance kernel, guestfsd (daemon), or utility programs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1802
msgid ""
"If the verbose flag (L</guestfs_set_verbose>) is set before launch "
"(L</guestfs_launch>) then additional debug messages are generated."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1805 ../src/guestfs.pod:1819
msgid ""
"If no callback is registered: the messages are discarded unless the verbose "
"flag is set in which case they are sent to stderr.  You can override the "
"printing of verbose messages to stderr by setting up a callback."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1810
msgid "GUESTFS_EVENT_LIBRARY (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1813
msgid ""
"The callback function is called whenever a log message is generated by the "
"library part of libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1816
msgid ""
"If the verbose flag (L</guestfs_set_verbose>) is set then additional debug "
"messages are generated."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1824
msgid "GUESTFS_EVENT_TRACE (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1827
msgid ""
"The callback function is called whenever a trace message is generated.  This "
"only applies if the trace flag (L</guestfs_set_trace>) is set."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1830
msgid ""
"If no callback is registered: the messages are sent to stderr.  You can "
"override the printing of trace messages to stderr by setting up a callback."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1836
msgid "guestfs_set_event_callback"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1838
#, no-wrap
msgid ""
" int guestfs_set_event_callback (guestfs_h *g,\n"
"                                 guestfs_event_callback cb,\n"
"                                 uint64_t event_bitmask,\n"
"                                 int flags,\n"
"                                 void *opaque);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1844
msgid ""
"This function registers a callback (C<cb>) for all event classes in the "
"C<event_bitmask>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1847
msgid ""
"For example, to register for all log message events, you could call this "
"function with the bitmask C<GUESTFS_EVENT_APPLIANCE|GUESTFS_EVENT_LIBRARY>.  "
"To register a single callback for all possible classes of events, use "
"C<GUESTFS_EVENT_ALL>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1853
msgid "C<flags> should always be passed as 0."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1855
msgid ""
"C<opaque> is an opaque pointer which is passed to the callback.  You can use "
"it for any purpose."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1858
msgid ""
"The return value is the event handle (an integer) which you can use to "
"delete the callback (see below)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1861
msgid ""
"If there is an error, this function returns C<-1>, and sets the error in the "
"handle in the usual way (see L</guestfs_last_error> etc.)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1864
msgid ""
"Callbacks remain in effect until they are deleted, or until the handle is "
"closed."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1867
msgid ""
"In the case where multiple callbacks are registered for a particular event "
"class, all of the callbacks are called.  The order in which multiple "
"callbacks are called is not defined."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1871
msgid "guestfs_delete_event_callback"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1873
#, no-wrap
msgid ""
" void guestfs_delete_event_callback (guestfs_h *g, int event_handle);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1875
msgid ""
"Delete a callback that was previously registered.  C<event_handle> should be "
"the integer that was returned by a previous call to "
"C<guestfs_set_event_callback> on the same handle."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1879
msgid "guestfs_event_callback"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1881
#, no-wrap
msgid ""
" typedef void (*guestfs_event_callback) (\n"
"                  guestfs_h *g,\n"
"                  void *opaque,\n"
"                  uint64_t event,\n"
"                  int event_handle,\n"
"                  int flags,\n"
"                  const char *buf, size_t buf_len,\n"
"                  const uint64_t *array, size_t array_len);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1890
msgid "This is the type of the event callback function that you have to provide."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1893
msgid ""
"The basic parameters are: the handle (C<g>), the opaque user pointer "
"(C<opaque>), the event class (eg. C<GUESTFS_EVENT_PROGRESS>), the event "
"handle, and C<flags> which in the current API you should ignore."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1897
msgid ""
"The remaining parameters contain the event payload (if any).  Each event may "
"contain a payload, which usually relates to the event class, but for future "
"proofing your code should be written to handle any payload for any event "
"class."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1902
msgid ""
"C<buf> and C<buf_len> contain a message buffer (if C<buf_len == 0>, then "
"there is no message buffer).  Note that this message buffer can contain "
"arbitrary 8 bit data, including NUL bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1906
msgid ""
"C<array> and C<array_len> is an array of 64 bit unsigned integers.  At the "
"moment this is only used for progress messages."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1909
msgid "EXAMPLE: CAPTURING LOG MESSAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1911
msgid ""
"One motivation for the generic event API was to allow GUI programs to "
"capture debug and other messages.  In libguestfs E<le> 1.8 these were sent "
"unconditionally to C<stderr>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1915
msgid ""
"Events associated with log messages are: C<GUESTFS_EVENT_LIBRARY>, "
"C<GUESTFS_EVENT_APPLIANCE> and C<GUESTFS_EVENT_TRACE>.  (Note that error "
"messages are not events; you must capture error messages separately)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1920
msgid ""
"Programs have to set up a callback to capture the classes of events of "
"interest:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1923
#, no-wrap
msgid ""
" int eh =\n"
"   guestfs_set_event_callback\n"
"     (g, message_callback,\n"
"      GUESTFS_EVENT_LIBRARY|GUESTFS_EVENT_APPLIANCE|\n"
"      GUESTFS_EVENT_TRACE,\n"
"      0, NULL) == -1)\n"
" if (eh == -1) {\n"
"   // handle error in the usual way\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1933
msgid ""
"The callback can then direct messages to the appropriate place.  In this "
"example, messages are directed to syslog:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1936
#, no-wrap
msgid ""
" static void\n"
" message_callback (\n"
"         guestfs_h *g,\n"
"         void *opaque,\n"
"         uint64_t event,\n"
"         int event_handle,\n"
"         int flags,\n"
"         const char *buf, size_t buf_len,\n"
"         const uint64_t *array, size_t array_len)\n"
" {\n"
"   const int priority = LOG_USER|LOG_INFO;\n"
"   if (buf_len > 0)\n"
"     syslog (priority, \"event 0x%lx: %s\", event, buf);\n"
" }\n"
"\n"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1951
msgid "PRIVATE DATA AREA"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1953
msgid ""
"You can attach named pieces of private data to the libguestfs handle, fetch "
"them by name, and walk over them, for the lifetime of the handle.  This is "
"called the private data area and is only available from the C API."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1958
msgid "To attach a named piece of data, use the following call:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1960
#, no-wrap
msgid ""
" void guestfs_set_private (guestfs_h *g, const char *key, void *data);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1962
msgid ""
"C<key> is the name to associate with this data, and C<data> is an arbitrary "
"pointer (which can be C<NULL>).  Any previous item with the same key is "
"overwritten."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1966
msgid ""
"You can use any C<key> you want, but your key should I<not> start with an "
"underscore character.  Keys beginning with an underscore character are "
"reserved for internal libguestfs purposes (eg. for implementing language "
"bindings).  It is recommended that you prefix the key with some unique "
"string to avoid collisions with other users."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1972
msgid "To retrieve the pointer, use:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1974
#, no-wrap
msgid ""
" void *guestfs_get_private (guestfs_h *g, const char *key);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1976
msgid ""
"This function returns C<NULL> if either no data is found associated with "
"C<key>, or if the user previously set the C<key>'s C<data> pointer to "
"C<NULL>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1980
msgid ""
"Libguestfs does not try to look at or interpret the C<data> pointer in any "
"way.  As far as libguestfs is concerned, it need not be a valid pointer at "
"all.  In particular, libguestfs does I<not> try to free the data when the "
"handle is closed.  If the data must be freed, then the caller must either "
"free it before calling L</guestfs_close> or must set up a close callback to "
"do it (see L</GUESTFS_EVENT_CLOSE>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1987
msgid "To walk over all entries, use these two functions:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1989
#, no-wrap
msgid ""
" void *guestfs_first_private (guestfs_h *g, const char **key_rtn);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1991
#, no-wrap
msgid ""
" void *guestfs_next_private (guestfs_h *g, const char **key_rtn);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1993
msgid ""
"C<guestfs_first_private> returns the first key, pointer pair (\"first\" does "
"not have any particular meaning -- keys are not returned in any defined "
"order).  A pointer to the key is returned in C<*key_rtn> and the "
"corresponding data pointer is returned from the function.  C<NULL> is "
"returned if there are no keys stored in the handle."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1999
msgid ""
"C<guestfs_next_private> returns the next key, pointer pair.  The return "
"value of this function is also C<NULL> is there are no further entries to "
"return."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2003
msgid "Notes about walking over entries:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2009
msgid "You must not call C<guestfs_set_private> while walking over the entries."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2014
msgid ""
"The handle maintains an internal iterator which is reset when you call "
"C<guestfs_first_private>.  This internal iterator is invalidated when you "
"call C<guestfs_set_private>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2020
msgid "If you have set the data pointer associated with a key to C<NULL>, ie:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2022
#, no-wrap
msgid ""
" guestfs_set_private (g, key, NULL);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2024
msgid "then that C<key> is not returned when walking."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2028
msgid ""
"C<*key_rtn> is only valid until the next call to C<guestfs_first_private>, "
"C<guestfs_next_private> or C<guestfs_set_private>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2034
msgid ""
"The following example code shows how to print all keys and data pointers "
"that are associated with the handle C<g>:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2037
#, no-wrap
msgid ""
" const char *key;\n"
" void *data = guestfs_first_private (g, &key);\n"
" while (data != NULL)\n"
"   {\n"
"     printf (\"key = %s, data = %p\\n\", key, data);\n"
"     data = guestfs_next_private (g, &key);\n"
"   }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2045
msgid ""
"More commonly you are only interested in keys that begin with an "
"application-specific prefix C<foo_>.  Modify the loop like so:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2048
#, no-wrap
msgid ""
" const char *key;\n"
" void *data = guestfs_first_private (g, &key);\n"
" while (data != NULL)\n"
"   {\n"
"     if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
"       printf (\"key = %s, data = %p\\n\", key, data);\n"
"     data = guestfs_next_private (g, &key);\n"
"   }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2057
msgid ""
"If you need to modify keys while walking, then you have to jump back to the "
"beginning of the loop.  For example, to delete all keys prefixed with "
"C<foo_>:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2061
#, no-wrap
msgid ""
"  const char *key;\n"
"  void *data;\n"
" again:\n"
"  data = guestfs_first_private (g, &key);\n"
"  while (data != NULL)\n"
"    {\n"
"      if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
"        {\n"
"          guestfs_set_private (g, key, NULL);\n"
"          /* note that 'key' pointer is now invalid, and so is\n"
"             the internal iterator */\n"
"          goto again;\n"
"        }\n"
"      data = guestfs_next_private (g, &key);\n"
"    }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2077
msgid ""
"Note that the above loop is guaranteed to terminate because the keys are "
"being deleted, but other manipulations of keys within the loop might not "
"terminate unless you also maintain an indication of which keys have been "
"visited."
msgstr ""

#. type: =end
#: ../src/guestfs.pod:2082 ../src/guestfs.pod:2087
msgid "html"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2084
msgid ""
"<!-- old anchor for the next section --> <a "
"name=\"state_machine_and_low_level_event_api\"/>"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2089
msgid "ARCHITECTURE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2091
msgid ""
"Internally, libguestfs is implemented by running an appliance (a special "
"type of small virtual machine) using L<qemu(1)>.  Qemu runs as a child "
"process of the main program."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2095
#, no-wrap
msgid ""
"  ___________________\n"
" /                   \\\n"
" | main program      |\n"
" |                   |\n"
" |                   |           child process / appliance\n"
" |                   |           __________________________\n"
" |                   |          / qemu                     \\\n"
" +-------------------+   RPC    |      +-----------------+ |\n"
" | libguestfs     <--------------------> guestfsd        | |\n"
" |                   |          |      +-----------------+ |\n"
" \\___________________/          |      | Linux kernel    | |\n"
"                                |      +--^--------------+ |\n"
"                                \\_________|________________/\n"
"                                          |\n"
"                                   _______v______\n"
"                                  /              \\\n"
"                                  | Device or    |\n"
"                                  | disk image   |\n"
"                                  \\______________/\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2115
msgid ""
"The library, linked to the main program, creates the child process and hence "
"the appliance in the L</guestfs_launch> function."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2118
msgid ""
"Inside the appliance is a Linux kernel and a complete stack of userspace "
"tools (such as LVM and ext2 programs) and a small controlling daemon called "
"L</guestfsd>.  The library talks to L</guestfsd> using remote procedure "
"calls (RPC).  There is a mostly one-to-one correspondence between libguestfs "
"API calls and RPC calls to the daemon.  Lastly the disk image(s) are "
"attached to the qemu process which translates device access by the "
"appliance's Linux kernel into accesses to the image."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2127
msgid ""
"A common misunderstanding is that the appliance \"is\" the virtual machine.  "
"Although the disk image you are attached to might also be used by some "
"virtual machine, libguestfs doesn't know or care about this.  (But you will "
"care if both libguestfs's qemu process and your virtual machine are trying "
"to update the disk image at the same time, since these usually results in "
"massive disk corruption)."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2134
msgid "STATE MACHINE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2136
msgid "libguestfs uses a state machine to model the child process:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2138
#, no-wrap
msgid ""
"                         |\n"
"                    guestfs_create\n"
"                         |\n"
"                         |\n"
"                     ____V_____\n"
"                    /          \\\n"
"                    |  CONFIG  |\n"
"                    \\__________/\n"
"                     ^ ^   ^  \\\n"
"                    /  |    \\  \\ guestfs_launch\n"
"                   /   |    _\\__V______\n"
"                  /    |   /           \\\n"
"                 /     |   | LAUNCHING |\n"
"                /      |   \\___________/\n"
"               /       |       /\n"
"              /        |  guestfs_launch\n"
"             /         |     /\n"
"    ______  /        __|____V\n"
"   /      \\ ------> /        \\\n"
"   | BUSY |         | READY  |\n"
"   \\______/ <------ \\________/\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2160
msgid ""
"The normal transitions are (1) CONFIG (when the handle is created, but there "
"is no child process), (2) LAUNCHING (when the child process is booting up), "
"(3) alternating between READY and BUSY as commands are issued to, and "
"carried out by, the child process."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2165
msgid ""
"The guest may be killed by L</guestfs_kill_subprocess>, or may die "
"asynchronously at any time (eg. due to some internal error), and that causes "
"the state to transition back to CONFIG."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2169
msgid ""
"Configuration commands for qemu such as L</guestfs_add_drive> can only be "
"issued when in the CONFIG state."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2172
msgid ""
"The API offers one call that goes from CONFIG through LAUNCHING to READY.  "
"L</guestfs_launch> blocks until the child process is READY to accept "
"commands (or until some failure or timeout).  L</guestfs_launch> internally "
"moves the state from CONFIG to LAUNCHING while it is running."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2178
msgid ""
"API actions such as L</guestfs_mount> can only be issued when in the READY "
"state.  These API calls block waiting for the command to be carried out "
"(ie. the state to transition to BUSY and then back to READY).  There are no "
"non-blocking versions, and no way to issue more than one command per handle "
"at the same time."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2184
msgid ""
"Finally, the child process sends asynchronous messages back to the main "
"program, such as kernel log messages.  You can register a callback to "
"receive these messages."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2188
msgid "INTERNALS"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2190
msgid "COMMUNICATION PROTOCOL"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2192
msgid ""
"Don't rely on using this protocol directly.  This section documents how it "
"currently works, but it may change at any time."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2195
msgid ""
"The protocol used to talk between the library and the daemon running inside "
"the qemu virtual machine is a simple RPC mechanism built on top of XDR (RFC "
"1014, RFC 1832, RFC 4506)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2199
msgid ""
"The detailed format of structures is in C<src/guestfs_protocol.x> (note: "
"this file is automatically generated)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2202
msgid ""
"There are two broad cases, ordinary functions that don't have any C<FileIn> "
"and C<FileOut> parameters, which are handled with very simple request/reply "
"messages.  Then there are functions that have any C<FileIn> or C<FileOut> "
"parameters, which use the same request and reply messages, but they may also "
"be followed by files sent using a chunked encoding."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2209
msgid "ORDINARY FUNCTIONS (NO FILEIN/FILEOUT PARAMS)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2211
msgid "For ordinary functions, the request message is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2213
#, no-wrap
msgid ""
" total length (header + arguments,\n"
"      but not including the length word itself)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_args (encoded as XDR)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2218
msgid ""
"The total length field allows the daemon to allocate a fixed size buffer "
"into which it slurps the rest of the message.  As a result, the total length "
"is limited to C<GUESTFS_MESSAGE_MAX> bytes (currently 4MB), which means the "
"effective size of any request is limited to somewhere under this size."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2224
msgid ""
"Note also that many functions don't take any arguments, in which case the "
"C<guestfs_I<foo>_args> is completely omitted."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2227
msgid ""
"The header contains the procedure number (C<guestfs_proc>) which is how the "
"receiver knows what type of args structure to expect, or none at all."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2231
msgid ""
"For functions that take optional arguments, the optional arguments are "
"encoded in the C<guestfs_I<foo>_args> structure in the same way as ordinary "
"arguments.  A bitmask in the header indicates which optional arguments are "
"meaningful.  The bitmask is also checked to see if it contains bits set "
"which the daemon does not know about (eg. if more optional arguments were "
"added in a later version of the library), and this causes the call to be "
"rejected."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2239
msgid "The reply message for ordinary functions is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2241
#, no-wrap
msgid ""
" total length (header + ret,\n"
"      but not including the length word itself)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_ret (encoded as XDR)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2246
msgid ""
"As above the C<guestfs_I<foo>_ret> structure may be completely omitted for "
"functions that return no formal return values."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2249
msgid "As above the total length of the reply is limited to C<GUESTFS_MESSAGE_MAX>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2252
msgid ""
"In the case of an error, a flag is set in the header, and the reply message "
"is slightly changed:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2255
#, no-wrap
msgid ""
" total length (header + error,\n"
"      but not including the length word itself)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_message_error (encoded as XDR)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2260
msgid ""
"The C<guestfs_message_error> structure contains the error message as a "
"string."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2263
msgid "FUNCTIONS THAT HAVE FILEIN PARAMETERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2265
msgid ""
"A C<FileIn> parameter indicates that we transfer a file I<into> the guest.  "
"The normal request message is sent (see above).  However this is followed by "
"a sequence of file chunks."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2269
#, no-wrap
msgid ""
" total length (header + arguments,\n"
"      but not including the length word itself,\n"
"      and not including the chunks)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_args (encoded as XDR)\n"
" sequence of chunks for FileIn param #0\n"
" sequence of chunks for FileIn param #1 etc.\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2277
msgid "The \"sequence of chunks\" is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2279
#, no-wrap
msgid ""
" length of chunk (not including length word itself)\n"
" struct guestfs_chunk (encoded as XDR)\n"
" length of chunk\n"
" struct guestfs_chunk (encoded as XDR)\n"
"   ...\n"
" length of chunk\n"
" struct guestfs_chunk (with data.data_len == 0)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2287
msgid ""
"The final chunk has the C<data_len> field set to zero.  Additionally a flag "
"is set in the final chunk to indicate either successful completion or early "
"cancellation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2291
msgid ""
"At time of writing there are no functions that have more than one FileIn "
"parameter.  However this is (theoretically) supported, by sending the "
"sequence of chunks for each FileIn parameter one after another (from left to "
"right)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2296
msgid ""
"Both the library (sender) I<and> the daemon (receiver) may cancel the "
"transfer.  The library does this by sending a chunk with a special flag set "
"to indicate cancellation.  When the daemon sees this, it cancels the whole "
"RPC, does I<not> send any reply, and goes back to reading the next request."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2302
msgid ""
"The daemon may also cancel.  It does this by writing a special word "
"C<GUESTFS_CANCEL_FLAG> to the socket.  The library listens for this during "
"the transfer, and if it gets it, it will cancel the transfer (it sends a "
"cancel chunk).  The special word is chosen so that even if cancellation "
"happens right at the end of the transfer (after the library has finished "
"writing and has started listening for the reply), the \"spurious\" cancel "
"flag will not be confused with the reply message."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2311
msgid ""
"This protocol allows the transfer of arbitrary sized files (no 32 bit "
"limit), and also files where the size is not known in advance (eg. from "
"pipes or sockets).  However the chunks are rather small "
"(C<GUESTFS_MAX_CHUNK_SIZE>), so that neither the library nor the daemon need "
"to keep much in memory."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2317
msgid "FUNCTIONS THAT HAVE FILEOUT PARAMETERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2319
msgid ""
"The protocol for FileOut parameters is exactly the same as for FileIn "
"parameters, but with the roles of daemon and library reversed."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2322
#, no-wrap
msgid ""
" total length (header + ret,\n"
"      but not including the length word itself,\n"
"      and not including the chunks)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_ret (encoded as XDR)\n"
" sequence of chunks for FileOut param #0\n"
" sequence of chunks for FileOut param #1 etc.\n"
"\n"
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2330
msgid "INITIAL MESSAGE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2332
msgid ""
"When the daemon launches it sends an initial word (C<GUESTFS_LAUNCH_FLAG>) "
"which indicates that the guest and daemon is alive.  This is what "
"L</guestfs_launch> waits for."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2336
msgid "PROGRESS NOTIFICATION MESSAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2338
msgid ""
"The daemon may send progress notification messages at any time.  These are "
"distinguished by the normal length word being replaced by "
"C<GUESTFS_PROGRESS_FLAG>, followed by a fixed size progress message."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2342
msgid ""
"The library turns them into progress callbacks (see "
"L</GUESTFS_EVENT_PROGRESS>) if there is a callback registered, or discards "
"them if not."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2346
msgid ""
"The daemon self-limits the frequency of progress messages it sends (see "
"C<daemon/proto.c:notify_progress>).  Not all calls generate progress "
"messages."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2350
msgid "LIBGUESTFS VERSION NUMBERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2352
msgid ""
"Since April 2010, libguestfs has started to make separate development and "
"stable releases, along with corresponding branches in our git repository.  "
"These separate releases can be identified by version number:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2357
#, no-wrap
msgid ""
"                 even numbers for stable: 1.2.x, 1.4.x, ...\n"
"       .-------- odd numbers for development: 1.3.x, 1.5.x, ...\n"
"       |\n"
"       v\n"
" 1  .  3  .  5\n"
" ^           ^\n"
" |           |\n"
" |           `-------- sub-version\n"
" |\n"
" `------ always '1' because we don't change the ABI\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2368
msgid "Thus \"1.3.5\" is the 5th update to the development branch \"1.3\"."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2370
msgid ""
"As time passes we cherry pick fixes from the development branch and backport "
"those into the stable branch, the effect being that the stable branch should "
"get more stable and less buggy over time.  So the stable releases are ideal "
"for people who don't need new features but would just like the software to "
"work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2376
msgid "Our criteria for backporting changes are:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2382
msgid ""
"Documentation changes which don't affect any code are backported unless the "
"documentation refers to a future feature which is not in stable."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2388
msgid ""
"Bug fixes which are not controversial, fix obvious problems, and have been "
"well tested are backported."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2393
msgid ""
"Simple rearrangements of code which shouldn't affect how it works get "
"backported.  This is so that the code in the two branches doesn't get too "
"far out of step, allowing us to backport future fixes more easily."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2399
msgid ""
"We I<don't> backport new features, new APIs, new tools etc, except in one "
"exceptional case: the new feature is required in order to implement an "
"important bug fix."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2405
msgid ""
"A new stable branch starts when we think the new features in development are "
"substantial and compelling enough over the current stable branch to warrant "
"it.  When that happens we create new stable and development versions 1.N.0 "
"and 1.(N+1).0 [N is even].  The new dot-oh release won't necessarily be so "
"stable at this point, but by backporting fixes from development, that branch "
"will stabilize over time."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2413
msgid "EXTENDING LIBGUESTFS"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2415
msgid "ADDING A NEW API ACTION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2417
msgid ""
"Large amounts of boilerplate code in libguestfs (RPC, bindings, "
"documentation) are generated, and this makes it easy to extend the "
"libguestfs API."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2421
msgid "To add a new API action there are two changes:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2427
msgid ""
"You need to add a description of the call (name, parameters, return type, "
"tests, documentation) to C<generator/generator_actions.ml>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2430
msgid ""
"There are two sorts of API action, depending on whether the call goes "
"through to the daemon in the appliance, or is serviced entirely by the "
"library (see L</ARCHITECTURE> above).  L</guestfs_sync> is an example of the "
"former, since the sync is done in the appliance.  L</guestfs_set_trace> is "
"an example of the latter, since a trace flag is maintained in the handle and "
"all tracing is done on the library side."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2438
msgid ""
"Most new actions are of the first type, and get added to the "
"C<daemon_functions> list.  Each function has a unique procedure number used "
"in the RPC protocol which is assigned to that action when we publish "
"libguestfs and cannot be reused.  Take the latest procedure number and "
"increment it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2444
msgid ""
"For library-only actions of the second type, add to the "
"C<non_daemon_functions> list.  Since these functions are serviced by the "
"library and do not travel over the RPC mechanism to the daemon, these "
"functions do not need a procedure number, and so the procedure number is set "
"to C<-1>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2452
msgid "Implement the action (in C):"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2454
msgid ""
"For daemon actions, implement the function C<do_E<lt>nameE<gt>> in the "
"C<daemon/> directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2457
msgid ""
"For library actions, implement the function C<guestfs__E<lt>nameE<gt>> "
"(note: double underscore) in the C<src/> directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2460
msgid "In either case, use another function as an example of what to do."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2464
msgid "After making these changes, use C<make> to compile."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2466
msgid ""
"Note that you don't need to implement the RPC, language bindings, manual "
"pages or anything else.  It's all automatically generated from the OCaml "
"description."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2470
msgid "ADDING TESTS FOR AN API ACTION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2472
msgid ""
"You can supply zero or as many tests as you want per API call.  The tests "
"can either be added as part of the API description "
"(C<generator/generator_actions.ml>), or in some rarer cases you may want to "
"drop a script into C<regressions/>.  Note that adding a script to "
"C<regressions/> is slower, so if possible use the first method."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2478
msgid ""
"The following describes the test environment used when you add an API test "
"in C<generator_actions.ml>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2481
msgid "The test environment has 4 block devices:"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2485
msgid "C</dev/sda> 500MB"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2487
msgid "General block device for testing."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2489
msgid "C</dev/sdb> 50MB"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2491
msgid ""
"C</dev/sdb1> is an ext2 filesystem used for testing filesystem write "
"operations."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2494
msgid "C</dev/sdc> 10MB"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2496
msgid "Used in a few tests where two block devices are needed."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2498
msgid "C</dev/sdd>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2500
msgid "ISO with fixed content (see C<images/test.iso>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2504
msgid ""
"To be able to run the tests in a reasonable amount of time, the libguestfs "
"appliance and block devices are reused between tests.  So don't try testing "
"L</guestfs_kill_subprocess> :-x"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2508
msgid ""
"Each test starts with an initial scenario, selected using one of the "
"C<Init*> expressions, described in C<generator/generator_types.ml>.  These "
"initialize the disks mentioned above in a particular way as documented in "
"C<generator_types.ml>.  You should not assume anything about the previous "
"contents of other disks that are not initialized."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2514
msgid ""
"You can add a prerequisite clause to any individual test.  This is a "
"run-time check, which, if it fails, causes the test to be skipped.  Useful "
"if testing a command which might not work on all variations of libguestfs "
"builds.  A test that has prerequisite of C<Always> means to run "
"unconditionally."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2520
msgid ""
"In addition, packagers can skip individual tests by setting environment "
"variables before running C<make check>."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2523
#, no-wrap
msgid ""
" SKIP_TEST_<CMD>_<NUM>=1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2525
msgid "eg: C<SKIP_TEST_COMMAND_3=1> skips test #3 of L</guestfs_command>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2527
msgid "or:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2529
#, no-wrap
msgid ""
" SKIP_TEST_<CMD>=1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2531
msgid "eg: C<SKIP_TEST_ZEROFREE=1> skips all L</guestfs_zerofree> tests."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2533
msgid "Packagers can run only certain tests by setting for example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2535
#, no-wrap
msgid ""
" TEST_ONLY=\"vfs_type zerofree\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2537
msgid ""
"See C<capitests/tests.c> for more details of how these environment variables "
"work."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2540
msgid "DEBUGGING NEW API ACTIONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2542
msgid "Test new actions work before submitting them."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2544
msgid "You can use guestfish to try out new commands."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2546
msgid ""
"Debugging the daemon is a problem because it runs inside a minimal "
"environment.  However you can fprintf messages in the daemon to stderr, and "
"they will show up if you use C<guestfish -v>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2550
msgid "FORMATTING CODE AND OTHER CONVENTIONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2552
msgid ""
"Our C source code generally adheres to some basic code-formatting "
"conventions.  The existing code base is not totally consistent on this "
"front, but we do prefer that contributed code be formatted similarly.  In "
"short, use spaces-not-TABs for indentation, use 2 spaces for each "
"indentation level, and other than that, follow the K&R style."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2558
msgid ""
"If you use Emacs, add the following to one of one of your start-up files "
"(e.g., ~/.emacs), to help ensure that you get indentation right:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2561
#, no-wrap
msgid ""
" ;;; In libguestfs, indent with spaces everywhere (not TABs).\n"
" ;;; Exceptions: Makefile and ChangeLog modes.\n"
" (add-hook 'find-file-hook\n"
"     '(lambda () (if (and buffer-file-name\n"
"                          (string-match \"/libguestfs\\\\>\"\n"
"                              (buffer-file-name))\n"
"                          (not (string-equal mode-name \"Change Log\"))\n"
"                          (not (string-equal mode-name \"Makefile\")))\n"
"                     (setq indent-tabs-mode nil))))\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2571
#, no-wrap
msgid ""
" ;;; When editing C sources in libguestfs, use this style.\n"
" (defun libguestfs-c-mode ()\n"
"   \"C mode with adjusted defaults for use with libguestfs.\"\n"
"   (interactive)\n"
"   (c-set-style \"K&R\")\n"
"   (setq c-indent-level 2)\n"
"   (setq c-basic-offset 2))\n"
" (add-hook 'c-mode-hook\n"
"           '(lambda () (if (string-match \"/libguestfs\\\\>\"\n"
"                               (buffer-file-name))\n"
"                           (libguestfs-c-mode))))\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2583
msgid "Enable warnings when compiling (and fix any problems this finds):"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2586
#, no-wrap
msgid ""
" ./configure --enable-gcc-warnings\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2588
msgid "Useful targets are:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2590
#, no-wrap
msgid ""
" make syntax-check  # checks the syntax of the C code\n"
" make check         # runs the test suite\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2593
msgid "DAEMON CUSTOM PRINTF FORMATTERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2595
msgid ""
"In the daemon code we have created custom printf formatters C<%Q> and C<%R>, "
"which are used to do shell quoting."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2600
msgid "%Q"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2602
msgid ""
"Simple shell quoted string.  Any spaces or other shell characters are "
"escaped for you."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2605
msgid "%R"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2607
msgid ""
"Same as C<%Q> except the string is treated as a path which is prefixed by "
"the sysroot."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2612 ../fish/guestfish.pod:240 ../fish/guestfish.pod:613
msgid "For example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2614
#, no-wrap
msgid ""
" asprintf (&cmd, \"cat %R\", path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2616
msgid "would produce C<cat /sysroot/some\\ path\\ with\\ spaces>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2618
msgid ""
"I<Note:> Do I<not> use these when you are passing parameters to the "
"C<command{,r,v,rv}()> functions.  These parameters do NOT need to be quoted "
"because they are not passed via the shell (instead, straight to exec).  You "
"probably want to use the C<sysroot_path()> function however."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2624
msgid "SUBMITTING YOUR NEW API ACTIONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2626
msgid ""
"Submit patches to the mailing list: "
"L<http://www.redhat.com/mailman/listinfo/libguestfs> and CC to "
"L<rjones@redhat.com>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2630
msgid "INTERNATIONALIZATION (I18N) SUPPORT"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2632
msgid "We support i18n (gettext anyhow) in the library."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2634
msgid ""
"However many messages come from the daemon, and we don't translate those at "
"the moment.  One reason is that the appliance generally has all locale files "
"removed from it, because they take up a lot of space.  So we'd have to readd "
"some of those, as well as copying our PO files into the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2640
msgid ""
"Debugging messages are never translated, since they are intended for the "
"programmers."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2643
msgid "SOURCE CODE SUBDIRECTORIES"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2647 ../src/guestfs-actions.pod:5818 ../fish/guestfish-actions.pod:3912
msgid "C<appliance>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2649
msgid "The libguestfs appliance, build scripts and so on."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2651
msgid "C<capitests>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2653
msgid "Automated tests of the C API."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2655
msgid "C<cat>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2657
msgid ""
"The L<virt-cat(1)>, L<virt-filesystems(1)> and L<virt-ls(1)> commands and "
"documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2660
msgid "C<contrib>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2662
msgid "Outside contributions, experimental parts."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2664
msgid "C<daemon>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2666
msgid ""
"The daemon that runs inside the libguestfs appliance and carries out "
"actions."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2669
msgid "C<df>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2671
msgid "L<virt-df(1)> command and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2673
msgid "C<examples>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2675
msgid "C API example code."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2677
msgid "C<fish>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2679
msgid ""
"L<guestfish(1)>, the command-line shell, and various shell scripts built on "
"top such as L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-tar-in(1)>, "
"L<virt-tar-out(1)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2683
msgid "C<fuse>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2685
msgid "L<guestmount(1)>, FUSE (userspace filesystem) built on top of libguestfs."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2687
msgid "C<generator>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2689
msgid ""
"The crucially important generator, used to automatically generate large "
"amounts of boilerplate C code for things like RPC and bindings."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2692
msgid "C<images>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2694
msgid "Files used by the test suite."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2696
msgid "Some \"phony\" guest images which we test against."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2698
msgid "C<inspector>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2700
msgid "L<virt-inspector(1)>, the virtual machine image inspector."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2702
msgid "C<logo>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2704
msgid "Logo used on the website.  The fish is called Arthur by the way."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2706
msgid "C<m4>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2708
msgid "M4 macros used by autoconf."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2710
msgid "C<po>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2712
msgid "Translations of simple gettext strings."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2714
msgid "C<po-docs>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2716
msgid ""
"The build infrastructure and PO files for translations of manpages and POD "
"files.  Eventually this will be combined with the C<po> directory, but that "
"is rather complicated."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2720
msgid "C<regressions>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2722
msgid "Regression tests."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2724
msgid "C<rescue>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2726
msgid "L<virt-rescue(1)> command and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2728
msgid "C<src>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2730
msgid "Source code to the C library."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2732
msgid "C<tools>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2734
msgid "Command line tools written in Perl (L<virt-resize(1)> and many others)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2736
msgid "C<test-tool>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2738
msgid ""
"Test tool for end users to test if their qemu/kernel combination will work "
"with libguestfs."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2741
msgid "C<csharp>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2743
msgid "C<haskell>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2745
msgid "C<java>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2747
msgid "C<ocaml>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2749
msgid "C<php>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2751
msgid "C<perl>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2753
msgid "C<python>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2755
msgid "C<ruby>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2757
msgid "Language bindings."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2761
msgid "LIMITS"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2763
msgid "PROTOCOL LIMITS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2765
msgid ""
"Internally libguestfs uses a message-based protocol to pass API calls and "
"their responses to and from a small \"appliance\" (see L</INTERNALS> for "
"plenty more detail about this).  The maximum message size used by the "
"protocol is slightly less than 4 MB.  For some API calls you may need to be "
"aware of this limit.  The API calls which may be affected are individually "
"documented, with a link back to this section of the documentation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2773
msgid ""
"A simple call such as L</guestfs_cat> returns its result (the file data) in "
"a simple string.  Because this string is at some point internally encoded as "
"a message, the maximum size that it can return is slightly under 4 MB.  If "
"the requested file is larger than this then you will get an error."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2779
msgid ""
"In order to transfer large files into and out of the guest filesystem, you "
"need to use particular calls that support this.  The sections L</UPLOADING> "
"and L</DOWNLOADING> document how to do this."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2783
msgid ""
"You might also consider mounting the disk image using our FUSE filesystem "
"support (L<guestmount(1)>)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2786
msgid "MAXIMUM NUMBER OF DISKS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2788
msgid "When using virtio disks (the default) the current limit is B<25> disks."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2791
msgid ""
"Virtio itself consumes 1 virtual PCI slot per disk, and PCI is limited to 31 "
"slots.  However febootstrap only understands disks with names C</dev/vda> "
"through C</dev/vdz> (26 letters) and it reserves one disk for its own "
"purposes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2796
msgid ""
"We are working to substantially raise this limit in future versions but it "
"requires complex changes to qemu."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2799
msgid ""
"In future versions of libguestfs it should also be possible to \"hot plug\" "
"disks (add and remove disks after calling L</guestfs_launch>).  This also "
"requires changes to qemu."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2803
msgid "MAXIMUM NUMBER OF PARTITIONS PER DISK"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2805
msgid "Virtio limits the maximum number of partitions per disk to B<15>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2807
msgid ""
"This is because it reserves 4 bits for the minor device number (thus "
"C</dev/vda>, and C</dev/vda1> through C</dev/vda15>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2810
msgid ""
"If you attach a disk with more than 15 partitions, the extra partitions are "
"ignored by libguestfs."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2813
msgid "MAXIMUM SIZE OF A DISK"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2815
msgid "Probably the limit is between 2**63-1 and 2**64-1 bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2817
msgid ""
"We have tested block devices up to 1 exabyte (2**60 or "
"1,152,921,504,606,846,976 bytes) using sparse files backed by an XFS host "
"filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2821
msgid ""
"Although libguestfs probably does not impose any limit, the underlying host "
"storage will.  If you store disk images on a host ext4 filesystem, then the "
"maximum size will be limited by the maximum ext4 file size (currently 16 "
"TB).  If you store disk images as host logical volumes then you are limited "
"by the maximum size of an LV."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2827
msgid ""
"For the hugest disk image files, we recommend using XFS on the host for "
"storage."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2830
msgid "MAXIMUM SIZE OF A PARTITION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2832
msgid ""
"The MBR (ie. classic MS-DOS) partitioning scheme uses 32 bit sector "
"numbers.  Assuming a 512 byte sector size, this means that MBR cannot "
"address a partition located beyond 2 TB on the disk."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2836
msgid ""
"It is recommended that you use GPT partitions on disks which are larger than "
"this size.  GPT uses 64 bit sector numbers and so can address partitions "
"which are theoretically larger than the largest disk we could support."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2841
msgid "MAXIMUM SIZE OF A FILESYSTEM, FILES, DIRECTORIES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2843
msgid ""
"This depends on the filesystem type.  libguestfs itself does not impose any "
"known limit.  Consult Wikipedia or the filesystem documentation to find out "
"what these limits are."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2847
msgid "MAXIMUM UPLOAD AND DOWNLOAD"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2849
msgid ""
"The API functions L</guestfs_upload>, L</guestfs_download>, "
"L</guestfs_tar_in>, L</guestfs_tar_out> and the like allow unlimited sized "
"uploads and downloads."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2853
msgid "INSPECTION LIMITS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2855
msgid ""
"The inspection code has several arbitrary limits on things like the size of "
"Windows Registry hive it will read, and the length of product name.  These "
"are intended to stop a malicious guest from consuming arbitrary amounts of "
"memory and disk space on the host, and should not be reached in practice.  "
"See the source code for more information."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2861 ../fish/guestfish.pod:1015 ../test-tool/libguestfs-test-tool.pod:82 ../tools/virt-edit.pl:476
msgid "ENVIRONMENT VARIABLES"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2865 ../fish/guestfish.pod:1041
msgid "LIBGUESTFS_APPEND"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2867 ../fish/guestfish.pod:1043
msgid "Pass additional options to the guest kernel."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2869 ../fish/guestfish.pod:1045
msgid "LIBGUESTFS_DEBUG"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2871
msgid ""
"Set C<LIBGUESTFS_DEBUG=1> to enable verbose messages.  This has the same "
"effect as calling C<guestfs_set_verbose (g, 1)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2874 ../fish/guestfish.pod:1050
msgid "LIBGUESTFS_MEMSIZE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2876 ../fish/guestfish.pod:1052
msgid "Set the memory allocated to the qemu process, in megabytes.  For example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2879 ../fish/guestfish.pod:1055
#, no-wrap
msgid ""
" LIBGUESTFS_MEMSIZE=700\n"
"\n"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2881 ../fish/guestfish.pod:1057
msgid "LIBGUESTFS_PATH"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2883
msgid ""
"Set the path that libguestfs uses to search for a supermin appliance.  See "
"the discussion of paths in section L</PATH> above."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2886 ../fish/guestfish.pod:1062
msgid "LIBGUESTFS_QEMU"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2888 ../fish/guestfish.pod:1064
msgid ""
"Set the default qemu binary that libguestfs uses.  If not set, then the qemu "
"which was found at compile time by the configure script is used."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2892
msgid "See also L</QEMU WRAPPERS> above."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2894 ../fish/guestfish.pod:1068
msgid "LIBGUESTFS_TRACE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2896
msgid ""
"Set C<LIBGUESTFS_TRACE=1> to enable command traces.  This has the same "
"effect as calling C<guestfs_set_trace (g, 1)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2899 ../fish/guestfish.pod:1077
msgid "TMPDIR"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2901 ../fish/guestfish.pod:1079
msgid ""
"Location of temporary directory, defaults to C</tmp> except for the cached "
"supermin appliance which defaults to C</var/tmp>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2904 ../fish/guestfish.pod:1082
msgid ""
"If libguestfs was compiled to use the supermin appliance then the real "
"appliance is cached in this directory, shared between all handles belonging "
"to the same EUID.  You can use C<$TMPDIR> to configure another directory to "
"use in case C</var/tmp> is not large enough."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2912 ../fish/guestfish.pod:1149 ../test-tool/libguestfs-test-tool.pod:87 ../fuse/guestmount.pod:277 ../tools/virt-edit.pl:496 ../tools/virt-win-reg.pl:572 ../tools/virt-list-filesystems.pl:189 ../tools/virt-tar.pl:286 ../tools/virt-make-fs.pl:539 ../tools/virt-list-partitions.pl:257
msgid "SEE ALSO"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2914
msgid ""
"L<guestfs-examples(3)>, L<guestfs-ocaml(3)>, L<guestfs-python(3)>, "
"L<guestfs-ruby(3)>, L<guestfish(1)>, L<guestmount(1)>, L<virt-cat(1)>, "
"L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-df(1)>, L<virt-edit(1)>, "
"L<virt-filesystems(1)>, L<virt-inspector(1)>, L<virt-list-filesystems(1)>, "
"L<virt-list-partitions(1)>, L<virt-ls(1)>, L<virt-make-fs(1)>, "
"L<virt-rescue(1)>, L<virt-tar(1)>, L<virt-tar-in(1)>, L<virt-tar-out(1)>, "
"L<virt-win-reg(1)>, L<qemu(1)>, L<febootstrap(1)>, L<hivex(3)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2941
msgid ""
"Tools with a similar purpose: L<fdisk(8)>, L<parted(8)>, L<kpartx(8)>, "
"L<lvm(8)>, L<disktype(1)>."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2948 ../tools/virt-win-reg.pl:587 ../tools/virt-make-fs.pl:553
msgid "BUGS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2950
msgid "To get a list of bugs against libguestfs use this link:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2952
msgid "L<https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2954
msgid "To report a new bug against libguestfs use this link:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2956
msgid "L<https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2958
msgid "When reporting a bug, please check:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2964
msgid "That the bug hasn't been reported already."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2968
msgid "That you are testing a recent version."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2972
msgid "Describe the bug accurately, and give a way to reproduce it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2976
msgid ""
"Run libguestfs-test-tool and paste the B<complete, unedited> output into the "
"bug report."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2981 ../fish/guestfish.pod:1172 ../test-tool/libguestfs-test-tool.pod:93 ../fuse/guestmount.pod:288
msgid "AUTHORS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2983 ../fish/guestfish.pod:1174 ../test-tool/libguestfs-test-tool.pod:95 ../fuse/guestmount.pod:290
msgid "Richard W.M. Jones (C<rjones at redhat dot com>)"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2985 ../fish/guestfish.pod:1176 ../test-tool/libguestfs-test-tool.pod:97 ../fuse/guestmount.pod:292 ../tools/virt-edit.pl:514 ../tools/virt-win-reg.pl:602 ../tools/virt-list-filesystems.pl:206 ../tools/virt-tar.pl:305 ../tools/virt-make-fs.pl:568 ../tools/virt-list-partitions.pl:273
msgid "COPYRIGHT"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2987 ../fish/guestfish.pod:1178 ../test-tool/libguestfs-test-tool.pod:99
msgid "Copyright (C) 2009-2011 Red Hat Inc.  L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2990
msgid ""
"This library is free software; you can redistribute it and/or modify it "
"under the terms of the GNU Lesser General Public License as published by the "
"Free Software Foundation; either version 2 of the License, or (at your "
"option) any later version."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2995
msgid ""
"This library is distributed in the hope that it will be useful, but WITHOUT "
"ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or "
"FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License "
"for more details."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3000
msgid ""
"You should have received a copy of the GNU Lesser General Public License "
"along with this library; if not, write to the Free Software Foundation, "
"Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1
msgid "guestfs_add_cdrom"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3
#, no-wrap
msgid ""
" int\n"
" guestfs_add_cdrom (guestfs_h *g,\n"
"                    const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7 ../fish/guestfish-actions.pod:5
msgid "This function adds a virtual CD-ROM disk image to the guest."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9 ../fish/guestfish-actions.pod:7
msgid "This is equivalent to the qemu parameter I<-cdrom filename>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:17
msgid ""
"This call checks for the existence of C<filename>.  This stops you from "
"specifying other types of drive which are supported by qemu such as C<nbd:> "
"and C<http:> URLs.  To specify those, use the general C<guestfs_config> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:24
msgid ""
"If you just want to add an ISO file (often you use this as an efficient way "
"to transfer large files into the guest), then you should probably use "
"C<guestfs_add_drive_ro> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:30 ../src/guestfs-actions.pod:134 ../src/guestfs-actions.pod:195 ../src/guestfs-actions.pod:232 ../src/guestfs-actions.pod:246 ../src/guestfs-actions.pod:267 ../src/guestfs-actions.pod:287 ../src/guestfs-actions.pod:301 ../src/guestfs-actions.pod:416 ../src/guestfs-actions.pod:436 ../src/guestfs-actions.pod:450 ../src/guestfs-actions.pod:495 ../src/guestfs-actions.pod:523 ../src/guestfs-actions.pod:541 ../src/guestfs-actions.pod:608 ../src/guestfs-actions.pod:641 ../src/guestfs-actions.pod:655 ../src/guestfs-actions.pod:670 ../src/guestfs-actions.pod:769 ../src/guestfs-actions.pod:787 ../src/guestfs-actions.pod:801 ../src/guestfs-actions.pod:815 ../src/guestfs-actions.pod:976 ../src/guestfs-actions.pod:996 ../src/guestfs-actions.pod:1014 ../src/guestfs-actions.pod:1098 ../src/guestfs-actions.pod:1116 ../src/guestfs-actions.pod:1135 ../src/guestfs-actions.pod:1149 ../src/guestfs-actions.pod:1169 ../src/guestfs-actions.pod:1239 ../src/guestfs-actions.pod:1270 ../src/guestfs-actions.pod:1295 ../src/guestfs-actions.pod:1337 ../src/guestfs-actions.pod:1443 ../src/guestfs-actions.pod:1477 ../src/guestfs-actions.pod:1692 ../src/guestfs-actions.pod:1714 ../src/guestfs-actions.pod:1801 ../src/guestfs-actions.pod:2263 ../src/guestfs-actions.pod:2407 ../src/guestfs-actions.pod:2468 ../src/guestfs-actions.pod:2503 ../src/guestfs-actions.pod:3456 ../src/guestfs-actions.pod:3471 ../src/guestfs-actions.pod:3496 ../src/guestfs-actions.pod:3651 ../src/guestfs-actions.pod:3665 ../src/guestfs-actions.pod:3678 ../src/guestfs-actions.pod:3692 ../src/guestfs-actions.pod:3707 ../src/guestfs-actions.pod:3743 ../src/guestfs-actions.pod:3815 ../src/guestfs-actions.pod:3835 ../src/guestfs-actions.pod:3852 ../src/guestfs-actions.pod:3875 ../src/guestfs-actions.pod:3898 ../src/guestfs-actions.pod:3930 ../src/guestfs-actions.pod:3949 ../src/guestfs-actions.pod:3968 ../src/guestfs-actions.pod:4003 ../src/guestfs-actions.pod:4015 ../src/guestfs-actions.pod:4051 ../src/guestfs-actions.pod:4067 ../src/guestfs-actions.pod:4080 ../src/guestfs-actions.pod:4095 ../src/guestfs-actions.pod:4112 ../src/guestfs-actions.pod:4205 ../src/guestfs-actions.pod:4225 ../src/guestfs-actions.pod:4238 ../src/guestfs-actions.pod:4289 ../src/guestfs-actions.pod:4307 ../src/guestfs-actions.pod:4325 ../src/guestfs-actions.pod:4341 ../src/guestfs-actions.pod:4355 ../src/guestfs-actions.pod:4369 ../src/guestfs-actions.pod:4386 ../src/guestfs-actions.pod:4401 ../src/guestfs-actions.pod:4421 ../src/guestfs-actions.pod:4479 ../src/guestfs-actions.pod:4552 ../src/guestfs-actions.pod:4583 ../src/guestfs-actions.pod:4602 ../src/guestfs-actions.pod:4621 ../src/guestfs-actions.pod:4633 ../src/guestfs-actions.pod:4650 ../src/guestfs-actions.pod:4663 ../src/guestfs-actions.pod:4678 ../src/guestfs-actions.pod:4693 ../src/guestfs-actions.pod:4728 ../src/guestfs-actions.pod:4750 ../src/guestfs-actions.pod:4770 ../src/guestfs-actions.pod:4784 ../src/guestfs-actions.pod:4801 ../src/guestfs-actions.pod:4850 ../src/guestfs-actions.pod:4887 ../src/guestfs-actions.pod:4901 ../src/guestfs-actions.pod:4929 ../src/guestfs-actions.pod:4946 ../src/guestfs-actions.pod:4964 ../src/guestfs-actions.pod:5098 ../src/guestfs-actions.pod:5155 ../src/guestfs-actions.pod:5177 ../src/guestfs-actions.pod:5195 ../src/guestfs-actions.pod:5227 ../src/guestfs-actions.pod:5293 ../src/guestfs-actions.pod:5310 ../src/guestfs-actions.pod:5323 ../src/guestfs-actions.pod:5337 ../src/guestfs-actions.pod:5626 ../src/guestfs-actions.pod:5645 ../src/guestfs-actions.pod:5664 ../src/guestfs-actions.pod:5676 ../src/guestfs-actions.pod:5688 ../src/guestfs-actions.pod:5702 ../src/guestfs-actions.pod:5714 ../src/guestfs-actions.pod:5728 ../src/guestfs-actions.pod:5744 ../src/guestfs-actions.pod:5765 ../src/guestfs-actions.pod:5784 ../src/guestfs-actions.pod:5803 ../src/guestfs-actions.pod:5833 ../src/guestfs-actions.pod:5849 ../src/guestfs-actions.pod:5872 ../src/guestfs-actions.pod:5890 ../src/guestfs-actions.pod:5909 ../src/guestfs-actions.pod:5930 ../src/guestfs-actions.pod:5949 ../src/guestfs-actions.pod:5966 ../src/guestfs-actions.pod:5994 ../src/guestfs-actions.pod:6018 ../src/guestfs-actions.pod:6037 ../src/guestfs-actions.pod:6061 ../src/guestfs-actions.pod:6080 ../src/guestfs-actions.pod:6095 ../src/guestfs-actions.pod:6114 ../src/guestfs-actions.pod:6151 ../src/guestfs-actions.pod:6181 ../src/guestfs-actions.pod:6214 ../src/guestfs-actions.pod:6336 ../src/guestfs-actions.pod:6457 ../src/guestfs-actions.pod:6469 ../src/guestfs-actions.pod:6482 ../src/guestfs-actions.pod:6495 ../src/guestfs-actions.pod:6517 ../src/guestfs-actions.pod:6530 ../src/guestfs-actions.pod:6543 ../src/guestfs-actions.pod:6556 ../src/guestfs-actions.pod:6571 ../src/guestfs-actions.pod:6630 ../src/guestfs-actions.pod:6647 ../src/guestfs-actions.pod:6663 ../src/guestfs-actions.pod:6679 ../src/guestfs-actions.pod:6696 ../src/guestfs-actions.pod:6709 ../src/guestfs-actions.pod:6729 ../src/guestfs-actions.pod:6765 ../src/guestfs-actions.pod:6779 ../src/guestfs-actions.pod:6820 ../src/guestfs-actions.pod:6833 ../src/guestfs-actions.pod:6851 ../src/guestfs-actions.pod:6885 ../src/guestfs-actions.pod:6921 ../src/guestfs-actions.pod:7040 ../src/guestfs-actions.pod:7058 ../src/guestfs-actions.pod:7072 ../src/guestfs-actions.pod:7127 ../src/guestfs-actions.pod:7140 ../src/guestfs-actions.pod:7185 ../src/guestfs-actions.pod:7218 ../src/guestfs-actions.pod:7279 ../src/guestfs-actions.pod:7305 ../src/guestfs-actions.pod:7371 ../src/guestfs-actions.pod:7390 ../src/guestfs-actions.pod:7419
msgid "This function returns 0 on success or -1 on error."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:32 ../src/guestfs-actions.pod:248 ../src/guestfs-actions.pod:269 ../fish/guestfish-actions.pod:28 ../fish/guestfish-actions.pod:158 ../fish/guestfish-actions.pod:172
msgid ""
"This function is deprecated.  In new code, use the C<add_drive_opts> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:35 ../src/guestfs-actions.pod:251 ../src/guestfs-actions.pod:272 ../src/guestfs-actions.pod:1448 ../src/guestfs-actions.pod:1941 ../src/guestfs-actions.pod:1962 ../src/guestfs-actions.pod:4426 ../src/guestfs-actions.pod:4733 ../src/guestfs-actions.pod:6159 ../src/guestfs-actions.pod:6189 ../src/guestfs-actions.pod:6222 ../src/guestfs-actions.pod:6281 ../src/guestfs-actions.pod:7223 ../src/guestfs-actions.pod:7313 ../src/guestfs-actions.pod:7482 ../fish/guestfish-actions.pod:31 ../fish/guestfish-actions.pod:161 ../fish/guestfish-actions.pod:175 ../fish/guestfish-actions.pod:956 ../fish/guestfish-actions.pod:1316 ../fish/guestfish-actions.pod:1330 ../fish/guestfish-actions.pod:3005 ../fish/guestfish-actions.pod:3202 ../fish/guestfish-actions.pod:4174 ../fish/guestfish-actions.pod:4197 ../fish/guestfish-actions.pod:4219 ../fish/guestfish-actions.pod:4257 ../fish/guestfish-actions.pod:4898 ../fish/guestfish-actions.pod:4995
msgid ""
"Deprecated functions will not be removed from the API, but the fact that "
"they are deprecated indicates that there are problems with correct use of "
"these functions."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:39 ../src/guestfs-actions.pod:136 ../src/guestfs-actions.pod:1100 ../src/guestfs-actions.pod:1913 ../src/guestfs-actions.pod:2011 ../src/guestfs-actions.pod:2114 ../src/guestfs-actions.pod:3458 ../src/guestfs-actions.pod:3478 ../src/guestfs-actions.pod:4737 ../src/guestfs-actions.pod:5851 ../src/guestfs-actions.pod:5968 ../src/guestfs-actions.pod:6082 ../src/guestfs-actions.pod:6573 ../src/guestfs-actions.pod:6698 ../src/guestfs-actions.pod:7227
msgid "(Added in 0.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:41
msgid "guestfs_add_domain"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:43
#, no-wrap
msgid ""
" int\n"
" guestfs_add_domain (guestfs_h *g,\n"
"                     const char *dom,\n"
"                     ...);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:48 ../src/guestfs-actions.pod:145 ../src/guestfs-actions.pod:4440
msgid ""
"You may supply a list of optional arguments to this call.  Use zero or more "
"of the following pairs of parameters, and terminate the list with C<-1> on "
"its own.  See L</CALLS WITH OPTIONAL ARGUMENTS>."
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:53
#, no-wrap
msgid ""
" GUESTFS_ADD_DOMAIN_LIBVIRTURI, const char *libvirturi,\n"
" GUESTFS_ADD_DOMAIN_READONLY, int readonly,\n"
" GUESTFS_ADD_DOMAIN_IFACE, const char *iface,\n"
" GUESTFS_ADD_DOMAIN_LIVE, int live,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:58
msgid ""
"This function adds the disk(s) attached to the named libvirt domain C<dom>.  "
"It works by connecting to libvirt, requesting the domain and domain XML from "
"libvirt, parsing it for disks, and calling C<guestfs_add_drive_opts> on each "
"one."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:63 ../fish/guestfish-actions.pod:46
msgid ""
"The number of disks added is returned.  This operation is atomic: if an "
"error is returned, then no disks are added."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:66 ../fish/guestfish-actions.pod:49
msgid ""
"This function does some minimal checks to make sure the libvirt domain is "
"not running (unless C<readonly> is true).  In a future version we will try "
"to acquire the libvirt lock on each disk."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:70 ../fish/guestfish-actions.pod:53
msgid ""
"Disks must be accessible locally.  This often means that adding disks from a "
"remote libvirt connection (see L<http://libvirt.org/remote.html>)  will fail "
"unless those disks are accessible via the same device path locally too."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:75 ../fish/guestfish-actions.pod:58
msgid ""
"The optional C<libvirturi> parameter sets the libvirt URI (see "
"L<http://libvirt.org/uri.html>).  If this is not set then we connect to the "
"default libvirt URI (or one set through an environment variable, see the "
"libvirt documentation for full details)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:81 ../fish/guestfish-actions.pod:64
msgid ""
"The optional C<live> flag controls whether this call will try to connect to "
"a running virtual machine C<guestfsd> process if it sees a suitable "
"E<lt>channelE<gt> element in the libvirt XML definition.  The default (if "
"the flag is omitted) is never to try.  See L<guestfs(3)/ATTACHING TO RUNNING "
"DAEMONS> for more information."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:88
msgid ""
"The other optional parameters are passed directly through to "
"C<guestfs_add_drive_opts>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:91 ../src/guestfs-actions.pod:344 ../src/guestfs-actions.pod:509 ../src/guestfs-actions.pod:687 ../src/guestfs-actions.pod:718 ../src/guestfs-actions.pod:736 ../src/guestfs-actions.pod:755 ../src/guestfs-actions.pod:1315 ../src/guestfs-actions.pod:1671 ../src/guestfs-actions.pod:1874 ../src/guestfs-actions.pod:1983 ../src/guestfs-actions.pod:2023 ../src/guestfs-actions.pod:2078 ../src/guestfs-actions.pod:2101 ../src/guestfs-actions.pod:2394 ../src/guestfs-actions.pod:2777 ../src/guestfs-actions.pod:2798 ../src/guestfs-actions.pod:4873 ../src/guestfs-actions.pod:5001 ../src/guestfs-actions.pod:5407 ../src/guestfs-actions.pod:5433 ../src/guestfs-actions.pod:6806 ../src/guestfs-actions.pod:7238 ../src/guestfs-actions.pod:7251 ../src/guestfs-actions.pod:7264
msgid "On error this function returns -1."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:93
msgid "(Added in 1.7.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:95
msgid "guestfs_add_domain_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:97
#, no-wrap
msgid ""
" int\n"
" guestfs_add_domain_va (guestfs_h *g,\n"
"                        const char *dom,\n"
"                        va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:102
msgid "This is the \"va_list variant\" of L</guestfs_add_domain>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:104 ../src/guestfs-actions.pod:115 ../src/guestfs-actions.pod:208 ../src/guestfs-actions.pod:219 ../src/guestfs-actions.pod:4493 ../src/guestfs-actions.pod:4505
msgid "See L</CALLS WITH OPTIONAL ARGUMENTS>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:106
msgid "guestfs_add_domain_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:108
#, no-wrap
msgid ""
" int\n"
" guestfs_add_domain_argv (guestfs_h *g,\n"
"                          const char *dom,\n"
"                          const struct guestfs_add_domain_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:113
msgid "This is the \"argv variant\" of L</guestfs_add_domain>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:117
msgid "guestfs_add_drive"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:119
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive (guestfs_h *g,\n"
"                    const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:123
msgid ""
"This function is the equivalent of calling C<guestfs_add_drive_opts> with no "
"optional parameters, so the disk is added writable, with the format being "
"detected automatically."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:127
msgid ""
"Automatic detection of the format opens you up to a potential security hole "
"when dealing with untrusted raw-format images.  See CVE-2010-3851 and "
"RHBZ#642934.  Specifying the format closes this security hole.  Therefore "
"you should think about replacing calls to this function with calls to "
"C<guestfs_add_drive_opts>, and specifying the format."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:138
msgid "guestfs_add_drive_opts"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:140
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_opts (guestfs_h *g,\n"
"                         const char *filename,\n"
"                         ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:150
#, no-wrap
msgid ""
" GUESTFS_ADD_DRIVE_OPTS_READONLY, int readonly,\n"
" GUESTFS_ADD_DRIVE_OPTS_FORMAT, const char *format,\n"
" GUESTFS_ADD_DRIVE_OPTS_IFACE, const char *iface,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:154 ../fish/guestfish-actions.pod:97
msgid ""
"This function adds a virtual machine disk image C<filename> to libguestfs.  "
"The first time you call this function, the disk appears as C</dev/sda>, the "
"second time as C</dev/sdb>, and so on."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:159 ../fish/guestfish-actions.pod:102
msgid ""
"You don't necessarily need to be root when using libguestfs.  However you "
"obviously do need sufficient permissions to access the filename for whatever "
"operations you want to perform (ie. read access if you just want to read the "
"image or write access if you want to modify the image)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:165 ../fish/guestfish-actions.pod:108
msgid "This call checks that C<filename> exists."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:167 ../src/guestfs-actions.pod:4451 ../fish/guestfish-actions.pod:110 ../fish/guestfish-actions.pod:3016
msgid "The optional arguments are:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:171 ../fish/guestfish-actions.pod:114
msgid "C<readonly>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:173 ../fish/guestfish-actions.pod:116
msgid ""
"If true then the image is treated as read-only.  Writes are still allowed, "
"but they are stored in a temporary snapshot overlay which is discarded at "
"the end.  The disk that you add is not modified."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:177 ../fish/guestfish-actions.pod:120
msgid "C<format>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:179
msgid ""
"This forces the image format.  If you omit this (or use C<guestfs_add_drive> "
"or C<guestfs_add_drive_ro>) then the format is automatically detected.  "
"Possible formats include C<raw> and C<qcow2>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:183 ../fish/guestfish-actions.pod:126
msgid ""
"Automatic detection of the format opens you up to a potential security hole "
"when dealing with untrusted raw-format images.  See CVE-2010-3851 and "
"RHBZ#642934.  Specifying the format closes this security hole."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:188 ../fish/guestfish-actions.pod:131
msgid "C<iface>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:190
msgid ""
"This rarely-used option lets you emulate the behaviour of the deprecated "
"C<guestfs_add_drive_with_if> call (q.v.)"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:197
msgid "(Added in 1.5.23)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:199
msgid "guestfs_add_drive_opts_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:201
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_opts_va (guestfs_h *g,\n"
"                            const char *filename,\n"
"                            va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:206
msgid "This is the \"va_list variant\" of L</guestfs_add_drive_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:210
msgid "guestfs_add_drive_opts_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:212
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_opts_argv (guestfs_h *g,\n"
"                              const char *filename,\n"
"                              const struct guestfs_add_drive_opts_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:217
msgid "This is the \"argv variant\" of L</guestfs_add_drive_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:221
msgid "guestfs_add_drive_ro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:223
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_ro (guestfs_h *g,\n"
"                       const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:227
msgid ""
"This function is the equivalent of calling C<guestfs_add_drive_opts> with "
"the optional parameter C<GUESTFS_ADD_DRIVE_OPTS_READONLY> set to 1, so the "
"disk is added read-only, with the format being detected automatically."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:234
msgid "(Added in 1.0.38)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:236
msgid "guestfs_add_drive_ro_with_if"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:238
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_ro_with_if (guestfs_h *g,\n"
"                               const char *filename,\n"
"                               const char *iface);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:243
msgid ""
"This is the same as C<guestfs_add_drive_ro> but it allows you to specify the "
"QEMU interface emulation to use at run time."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:255 ../src/guestfs-actions.pod:276 ../src/guestfs-actions.pod:2353
msgid "(Added in 1.0.84)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:257
msgid "guestfs_add_drive_with_if"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:259
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_with_if (guestfs_h *g,\n"
"                            const char *filename,\n"
"                            const char *iface);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:264
msgid ""
"This is the same as C<guestfs_add_drive> but it allows you to specify the "
"QEMU interface emulation to use at run time."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:278
msgid "guestfs_aug_clear"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:280
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_clear (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:284 ../fish/guestfish-actions.pod:183
msgid ""
"Set the value associated with C<path> to C<NULL>.  This is the same as the "
"L<augtool(1)> C<clear> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:289 ../src/guestfs-actions.pod:2103
msgid "(Added in 1.3.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:291
msgid "guestfs_aug_close"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:293
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_close (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:296
msgid ""
"Close the current Augeas handle and free up any resources used by it.  After "
"calling this, you have to call C<guestfs_aug_init> again before you can use "
"any other Augeas functions."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:303 ../src/guestfs-actions.pod:328 ../src/guestfs-actions.pod:346 ../src/guestfs-actions.pod:360 ../src/guestfs-actions.pod:418 ../src/guestfs-actions.pod:438 ../src/guestfs-actions.pod:452 ../src/guestfs-actions.pod:483 ../src/guestfs-actions.pod:497 ../src/guestfs-actions.pod:511 ../src/guestfs-actions.pod:525 ../src/guestfs-actions.pod:543 ../src/guestfs-actions.pod:5484
msgid "(Added in 0.7)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:305
msgid "guestfs_aug_defnode"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:307
#, no-wrap
msgid ""
" struct guestfs_int_bool *\n"
" guestfs_aug_defnode (guestfs_h *g,\n"
"                      const char *name,\n"
"                      const char *expr,\n"
"                      const char *val);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:313 ../fish/guestfish-actions.pod:199
msgid "Defines a variable C<name> whose value is the result of evaluating C<expr>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:316
msgid ""
"If C<expr> evaluates to an empty nodeset, a node is created, equivalent to "
"calling C<guestfs_aug_set> C<expr>, C<value>.  C<name> will be the nodeset "
"containing that single node."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:320 ../fish/guestfish-actions.pod:206
msgid ""
"On success this returns a pair containing the number of nodes in the "
"nodeset, and a boolean flag if a node was created."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:324
msgid ""
"This function returns a C<struct guestfs_int_bool *>, or NULL if there was "
"an error.  I<The caller must call C<guestfs_free_int_bool> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:330
msgid "guestfs_aug_defvar"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:332
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_defvar (guestfs_h *g,\n"
"                     const char *name,\n"
"                     const char *expr);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:337 ../fish/guestfish-actions.pod:214
msgid ""
"Defines an Augeas variable C<name> whose value is the result of evaluating "
"C<expr>.  If C<expr> is NULL, then C<name> is undefined."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:341 ../fish/guestfish-actions.pod:218
msgid ""
"On success this returns the number of nodes in C<expr>, or C<0> if C<expr> "
"evaluates to something which is not a nodeset."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:348
msgid "guestfs_aug_get"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:350
#, no-wrap
msgid ""
" char *\n"
" guestfs_aug_get (guestfs_h *g,\n"
"                  const char *augpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:354 ../fish/guestfish-actions.pod:225
msgid ""
"Look up the value associated with C<path>.  If C<path> matches exactly one "
"node, the C<value> is returned."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:357 ../src/guestfs-actions.pod:857 ../src/guestfs-actions.pod:875 ../src/guestfs-actions.pod:935 ../src/guestfs-actions.pod:951 ../src/guestfs-actions.pod:1054 ../src/guestfs-actions.pod:1184 ../src/guestfs-actions.pod:1201 ../src/guestfs-actions.pod:1220 ../src/guestfs-actions.pod:1354 ../src/guestfs-actions.pod:1542 ../src/guestfs-actions.pod:1654 ../src/guestfs-actions.pod:1817 ../src/guestfs-actions.pod:1834 ../src/guestfs-actions.pod:1901 ../src/guestfs-actions.pod:1935 ../src/guestfs-actions.pod:1956 ../src/guestfs-actions.pod:2126 ../src/guestfs-actions.pod:2318 ../src/guestfs-actions.pod:2525 ../src/guestfs-actions.pod:2618 ../src/guestfs-actions.pod:2729 ../src/guestfs-actions.pod:2749 ../src/guestfs-actions.pod:2869 ../src/guestfs-actions.pod:2900 ../src/guestfs-actions.pod:2924 ../src/guestfs-actions.pod:2961 ../src/guestfs-actions.pod:3021 ../src/guestfs-actions.pod:3044 ../src/guestfs-actions.pod:3065 ../src/guestfs-actions.pod:3637 ../src/guestfs-actions.pod:3987 ../src/guestfs-actions.pod:4157 ../src/guestfs-actions.pod:4267 ../src/guestfs-actions.pod:5019 ../src/guestfs-actions.pod:5212 ../src/guestfs-actions.pod:5382 ../src/guestfs-actions.pod:5560 ../src/guestfs-actions.pod:5609 ../src/guestfs-actions.pod:6242 ../src/guestfs-actions.pod:6258 ../src/guestfs-actions.pod:6275 ../src/guestfs-actions.pod:6306 ../src/guestfs-actions.pod:6980 ../src/guestfs-actions.pod:6999 ../src/guestfs-actions.pod:7017 ../src/guestfs-actions.pod:7197 ../src/guestfs-actions.pod:7476
msgid ""
"This function returns a string, or NULL on error.  I<The caller must free "
"the returned string after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:362
msgid "guestfs_aug_init"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:364
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_init (guestfs_h *g,\n"
"                   const char *root,\n"
"                   int flags);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:369 ../fish/guestfish-actions.pod:232
msgid ""
"Create a new Augeas handle for editing configuration files.  If there was "
"any previous Augeas handle associated with this guestfs session, then it is "
"closed."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:373
msgid "You must call this before using any other C<guestfs_aug_*> commands."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:376 ../fish/guestfish-actions.pod:239
msgid "C<root> is the filesystem root.  C<root> must not be NULL, use C</> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:379 ../fish/guestfish-actions.pod:242
msgid ""
"The flags are the same as the flags defined in E<lt>augeas.hE<gt>, the "
"logical I<or> of the following integers:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:385 ../fish/guestfish-actions.pod:248
msgid "C<AUG_SAVE_BACKUP> = 1"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:387 ../fish/guestfish-actions.pod:250
msgid "Keep the original file with a C<.augsave> extension."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:389 ../fish/guestfish-actions.pod:252
msgid "C<AUG_SAVE_NEWFILE> = 2"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:391 ../fish/guestfish-actions.pod:254
msgid ""
"Save changes into a file with extension C<.augnew>, and do not overwrite "
"original.  Overrides C<AUG_SAVE_BACKUP>."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:394 ../fish/guestfish-actions.pod:257
msgid "C<AUG_TYPE_CHECK> = 4"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:396 ../fish/guestfish-actions.pod:259
msgid "Typecheck lenses (can be expensive)."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:398 ../fish/guestfish-actions.pod:261
msgid "C<AUG_NO_STDINC> = 8"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:400 ../fish/guestfish-actions.pod:263
msgid "Do not use standard load path for modules."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:402 ../fish/guestfish-actions.pod:265
msgid "C<AUG_SAVE_NOOP> = 16"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:404 ../fish/guestfish-actions.pod:267
msgid "Make save a no-op, just record what would have been changed."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:406 ../fish/guestfish-actions.pod:269
msgid "C<AUG_NO_LOAD> = 32"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:408
msgid "Do not load the tree in C<guestfs_aug_init>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:412
msgid "To close the handle, you can call C<guestfs_aug_close>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:414 ../fish/guestfish-actions.pod:277
msgid "To find out more about Augeas, see L<http://augeas.net/>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:420
msgid "guestfs_aug_insert"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:422
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_insert (guestfs_h *g,\n"
"                     const char *augpath,\n"
"                     const char *label,\n"
"                     int before);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:428 ../fish/guestfish-actions.pod:283
msgid ""
"Create a new sibling C<label> for C<path>, inserting it into the tree before "
"or after C<path> (depending on the boolean flag C<before>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:432 ../fish/guestfish-actions.pod:287
msgid ""
"C<path> must match exactly one existing node in the tree, and C<label> must "
"be a label, ie. not contain C</>, C<*> or end with a bracketed index C<[N]>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:440
msgid "guestfs_aug_load"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:442
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_load (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:445 ../fish/guestfish-actions.pod:295
msgid "Load files into the tree."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:447 ../fish/guestfish-actions.pod:297
msgid "See C<aug_load> in the Augeas documentation for the full gory details."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:454
msgid "guestfs_aug_ls"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:456
#, no-wrap
msgid ""
" char **\n"
" guestfs_aug_ls (guestfs_h *g,\n"
"                 const char *augpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:460
msgid ""
"This is just a shortcut for listing C<guestfs_aug_match> C<path/*> and "
"sorting the resulting nodes into alphabetical order."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:463 ../src/guestfs-actions.pod:479 ../src/guestfs-actions.pod:625 ../src/guestfs-actions.pod:1073 ../src/guestfs-actions.pod:1369 ../src/guestfs-actions.pod:1388 ../src/guestfs-actions.pod:1491 ../src/guestfs-actions.pod:1510 ../src/guestfs-actions.pod:1756 ../src/guestfs-actions.pod:2198 ../src/guestfs-actions.pod:2214 ../src/guestfs-actions.pod:2233 ../src/guestfs-actions.pod:2276 ../src/guestfs-actions.pod:2300 ../src/guestfs-actions.pod:2371 ../src/guestfs-actions.pod:2420 ../src/guestfs-actions.pod:2687 ../src/guestfs-actions.pod:2978 ../src/guestfs-actions.pod:3267 ../src/guestfs-actions.pod:3557 ../src/guestfs-actions.pod:3619 ../src/guestfs-actions.pod:3724 ../src/guestfs-actions.pod:4129 ../src/guestfs-actions.pod:4834 ../src/guestfs-actions.pod:5354 ../src/guestfs-actions.pod:5480 ../src/guestfs-actions.pod:5594 ../src/guestfs-actions.pod:6322 ../src/guestfs-actions.pod:6383 ../src/guestfs-actions.pod:6438 ../src/guestfs-actions.pod:6584 ../src/guestfs-actions.pod:6608 ../src/guestfs-actions.pod:7090 ../src/guestfs-actions.pod:7110 ../src/guestfs-actions.pod:7157 ../src/guestfs-actions.pod:7329 ../src/guestfs-actions.pod:7348 ../src/guestfs-actions.pod:7433 ../src/guestfs-actions.pod:7452 ../src/guestfs-actions.pod:7498 ../src/guestfs-actions.pod:7517
msgid ""
"This function returns a NULL-terminated array of strings (like "
"L<environ(3)>), or NULL if there was an error.  I<The caller must free the "
"strings and the array after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:467 ../src/guestfs-actions.pod:998 ../src/guestfs-actions.pod:1016 ../src/guestfs-actions.pod:1426 ../src/guestfs-actions.pod:3345 ../src/guestfs-actions.pod:3376 ../src/guestfs-actions.pod:3970 ../src/guestfs-actions.pod:4020 ../src/guestfs-actions.pod:4207 ../src/guestfs-actions.pod:4240 ../src/guestfs-actions.pod:4403 ../src/guestfs-actions.pod:4838 ../src/guestfs-actions.pod:5295 ../src/guestfs-actions.pod:5690 ../src/guestfs-actions.pod:5704 ../src/guestfs-actions.pod:5716 ../src/guestfs-actions.pod:6163 ../src/guestfs-actions.pod:6822 ../src/guestfs-actions.pod:6835 ../src/guestfs-actions.pod:7074 ../src/guestfs-actions.pod:7317
msgid "(Added in 0.8)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:469
msgid "guestfs_aug_match"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:471
#, no-wrap
msgid ""
" char **\n"
" guestfs_aug_match (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:475 ../fish/guestfish-actions.pod:311
msgid ""
"Returns a list of paths which match the path expression C<path>.  The "
"returned paths are sufficiently qualified so that they match exactly one "
"node in the current tree."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:485
msgid "guestfs_aug_mv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:487
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_mv (guestfs_h *g,\n"
"                 const char *src,\n"
"                 const char *dest);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:492 ../fish/guestfish-actions.pod:319
msgid ""
"Move the node C<src> to C<dest>.  C<src> must match exactly one node.  "
"C<dest> is overwritten if it exists."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:499
msgid "guestfs_aug_rm"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:501
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_rm (guestfs_h *g,\n"
"                 const char *augpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:505 ../fish/guestfish-actions.pod:326
msgid "Remove C<path> and all of its children."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:507 ../fish/guestfish-actions.pod:328
msgid "On success this returns the number of entries which were removed."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:513
msgid "guestfs_aug_save"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:515
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_save (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:518 ../fish/guestfish-actions.pod:334
msgid "This writes all pending changes to disk."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:520
msgid ""
"The flags which were passed to C<guestfs_aug_init> affect exactly how files "
"are saved."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:527
msgid "guestfs_aug_set"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:529
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_set (guestfs_h *g,\n"
"                  const char *augpath,\n"
"                  const char *val);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:534 ../fish/guestfish-actions.pod:343
msgid "Set the value associated with C<path> to C<val>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:536
msgid ""
"In the Augeas API, it is possible to clear a node by setting the value to "
"NULL.  Due to an oversight in the libguestfs API you cannot do that with "
"this call.  Instead you must use the C<guestfs_aug_clear> call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:545
msgid "guestfs_available"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:547
#, no-wrap
msgid ""
" int\n"
" guestfs_available (guestfs_h *g,\n"
"                    char *const *groups);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:551 ../fish/guestfish-actions.pod:354
msgid ""
"This command is used to check the availability of some groups of "
"functionality in the appliance, which not all builds of the libguestfs "
"appliance will be able to provide."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:555
msgid ""
"The libguestfs groups, and the functions that those groups correspond to, "
"are listed in L<guestfs(3)/AVAILABILITY>.  You can also fetch this list at "
"runtime by calling C<guestfs_available_all_groups>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:560 ../fish/guestfish-actions.pod:363
msgid ""
"The argument C<groups> is a list of group names, eg: C<[\"inotify\", "
"\"augeas\"]> would check for the availability of the Linux inotify functions "
"and Augeas (configuration file editing) functions."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:565 ../fish/guestfish-actions.pod:368
msgid "The command returns no error if I<all> requested groups are available."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:567 ../fish/guestfish-actions.pod:370
msgid ""
"It fails with an error if one or more of the requested groups is unavailable "
"in the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:570 ../fish/guestfish-actions.pod:373
msgid ""
"If an unknown group name is included in the list of groups then an error is "
"always returned."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:573 ../fish/guestfish-actions.pod:376
msgid "I<Notes:>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:579
msgid "You must call C<guestfs_launch> before calling this function."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:581 ../fish/guestfish-actions.pod:384
msgid ""
"The reason is because we don't know what groups are supported by the "
"appliance/daemon until it is running and can be queried."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:587 ../fish/guestfish-actions.pod:390
msgid ""
"If a group of functions is available, this does not necessarily mean that "
"they will work.  You still have to check for errors when calling individual "
"API functions even if they are available."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:594 ../fish/guestfish-actions.pod:397
msgid ""
"It is usually the job of distro packagers to build complete functionality "
"into the libguestfs appliance.  Upstream libguestfs, if built from source "
"with all requirements satisfied, will support everything."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:601
msgid ""
"This call was added in version C<1.0.80>.  In previous versions of "
"libguestfs all you could do would be to speculatively execute a command to "
"find out if the daemon implemented it.  See also C<guestfs_version>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:610 ../src/guestfs-actions.pod:1171
msgid "(Added in 1.0.80)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:612
msgid "guestfs_available_all_groups"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:614
#, no-wrap
msgid ""
" char **\n"
" guestfs_available_all_groups (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:617
msgid ""
"This command returns a list of all optional groups that this daemon knows "
"about.  Note this returns both supported and unsupported groups.  To find "
"out which ones the daemon can actually support you have to call "
"C<guestfs_available> on each member of the returned list."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:623
msgid "See also C<guestfs_available> and L<guestfs(3)/AVAILABILITY>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:629
msgid "(Added in 1.3.15)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:631
msgid "guestfs_base64_in"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:633
#, no-wrap
msgid ""
" int\n"
" guestfs_base64_in (guestfs_h *g,\n"
"                    const char *base64file,\n"
"                    const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:638 ../fish/guestfish-actions.pod:427
msgid "This command uploads base64-encoded data from C<base64file> to C<filename>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:643 ../src/guestfs-actions.pod:657
msgid "(Added in 1.3.5)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:645
msgid "guestfs_base64_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:647
#, no-wrap
msgid ""
" int\n"
" guestfs_base64_out (guestfs_h *g,\n"
"                     const char *filename,\n"
"                     const char *base64file);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:652 ../fish/guestfish-actions.pod:436
msgid ""
"This command downloads the contents of C<filename>, writing it out to local "
"file C<base64file> encoded as base64."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:659
msgid "guestfs_blockdev_flushbufs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:661
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_flushbufs (guestfs_h *g,\n"
"                             const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:665 ../fish/guestfish-actions.pod:445
msgid "This tells the kernel to flush internal buffers associated with C<device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:668 ../src/guestfs-actions.pod:685 ../src/guestfs-actions.pod:700 ../src/guestfs-actions.pod:716 ../src/guestfs-actions.pod:734 ../src/guestfs-actions.pod:753 ../src/guestfs-actions.pod:767 ../src/guestfs-actions.pod:785 ../src/guestfs-actions.pod:799 ../src/guestfs-actions.pod:813 ../fish/guestfish-actions.pod:448 ../fish/guestfish-actions.pod:459 ../fish/guestfish-actions.pod:468 ../fish/guestfish-actions.pod:478 ../fish/guestfish-actions.pod:490 ../fish/guestfish-actions.pod:503 ../fish/guestfish-actions.pod:511 ../fish/guestfish-actions.pod:522 ../fish/guestfish-actions.pod:530 ../fish/guestfish-actions.pod:538
msgid "This uses the L<blockdev(8)> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:672 ../src/guestfs-actions.pod:689 ../src/guestfs-actions.pod:704 ../src/guestfs-actions.pod:720 ../src/guestfs-actions.pod:738 ../src/guestfs-actions.pod:757 ../src/guestfs-actions.pod:771 ../src/guestfs-actions.pod:789 ../src/guestfs-actions.pod:803 ../src/guestfs-actions.pod:817
msgid "(Added in 0.9.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:674
msgid "guestfs_blockdev_getbsz"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:676
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_getbsz (guestfs_h *g,\n"
"                          const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:680 ../fish/guestfish-actions.pod:454
msgid "This returns the block size of a device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:682 ../src/guestfs-actions.pod:782 ../fish/guestfish-actions.pod:456 ../fish/guestfish-actions.pod:519
msgid ""
"(Note this is different from both I<size in blocks> and I<filesystem block "
"size>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:691
msgid "guestfs_blockdev_getro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:693
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_getro (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:697 ../fish/guestfish-actions.pod:465
msgid ""
"Returns a boolean indicating if the block device is read-only (true if "
"read-only, false if not)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:702 ../src/guestfs-actions.pod:1409 ../src/guestfs-actions.pod:1424 ../src/guestfs-actions.pod:1911 ../src/guestfs-actions.pod:1922 ../src/guestfs-actions.pod:1994 ../src/guestfs-actions.pod:2049 ../src/guestfs-actions.pod:2064 ../src/guestfs-actions.pod:2089 ../src/guestfs-actions.pod:2112 ../src/guestfs-actions.pod:3085 ../src/guestfs-actions.pod:3102 ../src/guestfs-actions.pod:3121 ../src/guestfs-actions.pod:3284 ../src/guestfs-actions.pod:3298 ../src/guestfs-actions.pod:3313 ../src/guestfs-actions.pod:3327 ../src/guestfs-actions.pod:3343 ../src/guestfs-actions.pod:3358 ../src/guestfs-actions.pod:3374 ../src/guestfs-actions.pod:3388 ../src/guestfs-actions.pod:3401 ../src/guestfs-actions.pod:3415 ../src/guestfs-actions.pod:3430 ../src/guestfs-actions.pod:3445 ../src/guestfs-actions.pod:4983
msgid "This function returns a C truth value on success or -1 on error."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:706
msgid "guestfs_blockdev_getsize64"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:708
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_blockdev_getsize64 (guestfs_h *g,\n"
"                             const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:712 ../fish/guestfish-actions.pod:474
msgid "This returns the size of the device in bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:714
msgid "See also C<guestfs_blockdev_getsz>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:722
msgid "guestfs_blockdev_getss"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:724
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_getss (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:728 ../fish/guestfish-actions.pod:484
msgid ""
"This returns the size of sectors on a block device.  Usually 512, but can be "
"larger for modern devices."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:731
msgid ""
"(Note, this is not the size in sectors, use C<guestfs_blockdev_getsz> for "
"that)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:740
msgid "guestfs_blockdev_getsz"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:742
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_blockdev_getsz (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:746 ../fish/guestfish-actions.pod:496
msgid ""
"This returns the size of the device in units of 512-byte sectors (even if "
"the sectorsize isn't 512 bytes ... weird)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:749
msgid ""
"See also C<guestfs_blockdev_getss> for the real sector size of the device, "
"and C<guestfs_blockdev_getsize64> for the more useful I<size in bytes>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:759
msgid "guestfs_blockdev_rereadpt"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:761
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_rereadpt (guestfs_h *g,\n"
"                            const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:765 ../fish/guestfish-actions.pod:509
msgid "Reread the partition table on C<device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:773
msgid "guestfs_blockdev_setbsz"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:775
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_setbsz (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int blocksize);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:780 ../fish/guestfish-actions.pod:517
msgid "This sets the block size of a device."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:791
msgid "guestfs_blockdev_setro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:793
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_setro (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:797 ../fish/guestfish-actions.pod:528
msgid "Sets the block device named C<device> to read-only."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:805
msgid "guestfs_blockdev_setrw"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:807
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_setrw (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:811 ../fish/guestfish-actions.pod:536
msgid "Sets the block device named C<device> to read-write."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:819
msgid "guestfs_case_sensitive_path"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:821
#, no-wrap
msgid ""
" char *\n"
" guestfs_case_sensitive_path (guestfs_h *g,\n"
"                              const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:825 ../fish/guestfish-actions.pod:544
msgid ""
"This can be used to resolve case insensitive paths on a filesystem which is "
"case sensitive.  The use case is to resolve paths which you have read from "
"Windows configuration files or the Windows Registry, to the true path."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:830 ../fish/guestfish-actions.pod:549
msgid ""
"The command handles a peculiarity of the Linux ntfs-3g filesystem driver "
"(and probably others), which is that although the underlying filesystem is "
"case-insensitive, the driver exports the filesystem to Linux as "
"case-sensitive."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:835 ../fish/guestfish-actions.pod:554
msgid ""
"One consequence of this is that special directories such as C<c:\\windows> "
"may appear as C</WINDOWS> or C</windows> (or other things) depending on the "
"precise details of how they were created.  In Windows itself this would not "
"be a problem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:841 ../fish/guestfish-actions.pod:560
msgid ""
"Bug or feature? You decide: "
"L<http://www.tuxera.com/community/ntfs-3g-faq/#posixfilenames1>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:844 ../fish/guestfish-actions.pod:563
msgid ""
"This function resolves the true case of each element in the path and returns "
"the case-sensitive path."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:847
msgid ""
"Thus C<guestfs_case_sensitive_path> (\"/Windows/System32\")  might return "
"C<\"/WINDOWS/system32\"> (the exact return value would depend on details of "
"how the directories were originally created under Windows)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:852 ../fish/guestfish-actions.pod:571
msgid "I<Note>: This function does not handle drive names, backslashes etc."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:855
msgid "See also C<guestfs_realpath>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:860 ../src/guestfs-actions.pod:7002
msgid "(Added in 1.0.75)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:862
msgid "guestfs_cat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:864
#, no-wrap
msgid ""
" char *\n"
" guestfs_cat (guestfs_h *g,\n"
"              const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:868 ../src/guestfs-actions.pod:5470 ../fish/guestfish-actions.pod:580 ../fish/guestfish-actions.pod:3671
msgid "Return the contents of the file named C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:870
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of string).  For "
"those you need to use the C<guestfs_read_file> or C<guestfs_download> "
"functions which have a more complex interface."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:878 ../src/guestfs-actions.pod:1057 ../src/guestfs-actions.pod:1077 ../src/guestfs-actions.pod:1373 ../src/guestfs-actions.pod:1392 ../src/guestfs-actions.pod:1495 ../src/guestfs-actions.pod:1514 ../src/guestfs-actions.pod:1760 ../src/guestfs-actions.pod:2218 ../src/guestfs-actions.pod:2237 ../src/guestfs-actions.pod:2280 ../src/guestfs-actions.pod:2304 ../src/guestfs-actions.pod:2321 ../src/guestfs-actions.pod:2350 ../src/guestfs-actions.pod:5252 ../src/guestfs-actions.pod:5278 ../src/guestfs-actions.pod:5409 ../src/guestfs-actions.pod:5435 ../src/guestfs-actions.pod:5459 ../src/guestfs-actions.pod:6387 ../src/guestfs-actions.pod:6442 ../src/guestfs-actions.pod:6588 ../src/guestfs-actions.pod:6612 ../src/guestfs-actions.pod:7281 ../src/guestfs-actions.pod:7307 ../src/guestfs-actions.pod:7333 ../src/guestfs-actions.pod:7352 ../src/guestfs-actions.pod:7437 ../src/guestfs-actions.pod:7456 ../src/guestfs-actions.pod:7502 ../src/guestfs-actions.pod:7521 ../fish/guestfish-actions.pod:587 ../fish/guestfish-actions.pod:722 ../fish/guestfish-actions.pod:734 ../fish/guestfish-actions.pod:910 ../fish/guestfish-actions.pod:920 ../fish/guestfish-actions.pod:987 ../fish/guestfish-actions.pod:997 ../fish/guestfish-actions.pod:1189 ../fish/guestfish-actions.pod:1490 ../fish/guestfish-actions.pod:1500 ../fish/guestfish-actions.pod:1528 ../fish/guestfish-actions.pod:1543 ../fish/guestfish-actions.pod:1553 ../fish/guestfish-actions.pod:1572 ../fish/guestfish-actions.pod:3541 ../fish/guestfish-actions.pod:3556 ../fish/guestfish-actions.pod:3632 ../fish/guestfish-actions.pod:3649 ../fish/guestfish-actions.pod:3664 ../fish/guestfish-actions.pod:4318 ../fish/guestfish-actions.pod:4364 ../fish/guestfish-actions.pod:4449 ../fish/guestfish-actions.pod:4464 ../fish/guestfish-actions.pod:4874 ../fish/guestfish-actions.pod:4892 ../fish/guestfish-actions.pod:4909 ../fish/guestfish-actions.pod:4919 ../fish/guestfish-actions.pod:4967 ../fish/guestfish-actions.pod:4977 ../fish/guestfish-actions.pod:5006 ../fish/guestfish-actions.pod:5016
msgid ""
"Because of the message protocol, there is a transfer limit of somewhere "
"between 2MB and 4MB.  See L<guestfs(3)/PROTOCOL LIMITS>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:881 ../src/guestfs-actions.pod:3561 ../src/guestfs-actions.pod:3623 ../src/guestfs-actions.pod:3640 ../src/guestfs-actions.pod:3728 ../src/guestfs-actions.pod:4133 ../src/guestfs-actions.pod:4147 ../src/guestfs-actions.pod:5358 ../src/guestfs-actions.pod:5372 ../src/guestfs-actions.pod:7161 ../src/guestfs-actions.pod:7175
msgid "(Added in 0.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:883
msgid "guestfs_checksum"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:885
#, no-wrap
msgid ""
" char *\n"
" guestfs_checksum (guestfs_h *g,\n"
"                   const char *csumtype,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:890 ../fish/guestfish-actions.pod:594
msgid "This call computes the MD5, SHAx or CRC checksum of the file named C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:893 ../fish/guestfish-actions.pod:597
msgid ""
"The type of checksum to compute is given by the C<csumtype> parameter which "
"must have one of the following values:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:898 ../fish/guestfish-actions.pod:602
msgid "C<crc>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:900 ../fish/guestfish-actions.pod:604
msgid ""
"Compute the cyclic redundancy check (CRC) specified by POSIX for the "
"C<cksum> command."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:903 ../fish/guestfish-actions.pod:607
msgid "C<md5>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:905 ../fish/guestfish-actions.pod:609
msgid "Compute the MD5 hash (using the C<md5sum> program)."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:907 ../fish/guestfish-actions.pod:611
msgid "C<sha1>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:909 ../fish/guestfish-actions.pod:613
msgid "Compute the SHA1 hash (using the C<sha1sum> program)."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:911 ../fish/guestfish-actions.pod:615
msgid "C<sha224>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:913 ../fish/guestfish-actions.pod:617
msgid "Compute the SHA224 hash (using the C<sha224sum> program)."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:915 ../fish/guestfish-actions.pod:619
msgid "C<sha256>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:917 ../fish/guestfish-actions.pod:621
msgid "Compute the SHA256 hash (using the C<sha256sum> program)."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:919 ../fish/guestfish-actions.pod:623
msgid "C<sha384>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:921 ../fish/guestfish-actions.pod:625
msgid "Compute the SHA384 hash (using the C<sha384sum> program)."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:923 ../fish/guestfish-actions.pod:627
msgid "C<sha512>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:925 ../fish/guestfish-actions.pod:629
msgid "Compute the SHA512 hash (using the C<sha512sum> program)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:929 ../fish/guestfish-actions.pod:633
msgid "The checksum is returned as a printable string."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:931
msgid "To get the checksum for a device, use C<guestfs_checksum_device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:933
msgid "To get the checksums for many files, use C<guestfs_checksums_out>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:938 ../src/guestfs-actions.pod:1246 ../src/guestfs-actions.pod:2080 ../src/guestfs-actions.pod:3300 ../src/guestfs-actions.pod:3329 ../src/guestfs-actions.pod:3390 ../src/guestfs-actions.pod:3417 ../src/guestfs-actions.pod:6858
msgid "(Added in 1.0.2)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:940
msgid "guestfs_checksum_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:942
#, no-wrap
msgid ""
" char *\n"
" guestfs_checksum_device (guestfs_h *g,\n"
"                          const char *csumtype,\n"
"                          const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:947
msgid ""
"This call computes the MD5, SHAx or CRC checksum of the contents of the "
"device named C<device>.  For the types of checksums supported see the "
"C<guestfs_checksum> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:954 ../src/guestfs-actions.pod:4889 ../src/guestfs-actions.pod:4948 ../src/guestfs-actions.pod:4985 ../src/guestfs-actions.pod:5003 ../src/guestfs-actions.pod:5179 ../src/guestfs-actions.pod:6767 ../src/guestfs-actions.pod:6781 ../src/guestfs-actions.pod:7187
msgid "(Added in 1.3.2)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:956
msgid "guestfs_checksums_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:958
#, no-wrap
msgid ""
" int\n"
" guestfs_checksums_out (guestfs_h *g,\n"
"                        const char *csumtype,\n"
"                        const char *directory,\n"
"                        const char *sumsfile);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:964 ../fish/guestfish-actions.pod:651
msgid ""
"This command computes the checksums of all regular files in C<directory> and "
"then emits a list of those checksums to the local output file C<sumsfile>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:968 ../fish/guestfish-actions.pod:655
msgid ""
"This can be used for verifying the integrity of a virtual machine.  However "
"to be properly secure you should pay attention to the output of the checksum "
"command (it uses the ones from GNU coreutils).  In particular when the "
"filename is not printable, coreutils uses a special backslash syntax.  For "
"more information, see the GNU coreutils info file."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:978
msgid "(Added in 1.3.7)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:980
msgid "guestfs_chmod"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:982
#, no-wrap
msgid ""
" int\n"
" guestfs_chmod (guestfs_h *g,\n"
"                int mode,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:987 ../fish/guestfish-actions.pod:669
msgid ""
"Change the mode (permissions) of C<path> to C<mode>.  Only numeric modes are "
"supported."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:990 ../fish/guestfish-actions.pod:672
msgid ""
"I<Note>: When using this command from guestfish, C<mode> by default would be "
"decimal, unless you prefix it with C<0> to get octal, ie. use C<0700> not "
"C<700>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:994 ../src/guestfs-actions.pod:4384 ../src/guestfs-actions.pod:4581 ../src/guestfs-actions.pod:4600 ../src/guestfs-actions.pod:4619 ../fish/guestfish-actions.pod:676 ../fish/guestfish-actions.pod:2980 ../fish/guestfish-actions.pod:3109 ../fish/guestfish-actions.pod:3119 ../fish/guestfish-actions.pod:3129
msgid "The mode actually set is affected by the umask."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1000
msgid "guestfs_chown"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1002
#, no-wrap
msgid ""
" int\n"
" guestfs_chown (guestfs_h *g,\n"
"                int owner,\n"
"                int group,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1008 ../fish/guestfish-actions.pod:682
msgid "Change the file owner to C<owner> and group to C<group>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1010 ../src/guestfs-actions.pod:3492 ../fish/guestfish-actions.pod:684 ../fish/guestfish-actions.pod:2438
msgid ""
"Only numeric uid and gid are supported.  If you want to use names, you will "
"need to locate and parse the password file yourself (Augeas support makes "
"this relatively easy)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1018
msgid "guestfs_command"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1020
#, no-wrap
msgid ""
" char *\n"
" guestfs_command (guestfs_h *g,\n"
"                  char *const *arguments);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1024 ../fish/guestfish-actions.pod:692
msgid ""
"This call runs a command from the guest filesystem.  The filesystem must be "
"mounted, and must contain a compatible operating system (ie. something "
"Linux, with the same or compatible processor architecture)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1029
msgid ""
"The single parameter is an argv-style list of arguments.  The first element "
"is the name of the program to run.  Subsequent elements are parameters.  The "
"list must be non-empty (ie. must contain a program name).  Note that the "
"command runs directly, and is I<not> invoked via the shell (see "
"C<guestfs_sh>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1036 ../fish/guestfish-actions.pod:704
msgid "The return value is anything printed to I<stdout> by the command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1039 ../fish/guestfish-actions.pod:707
msgid ""
"If the command returns a non-zero exit status, then this function returns an "
"error message.  The error message string is the content of I<stderr> from "
"the command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1043 ../fish/guestfish-actions.pod:711
msgid ""
"The C<$PATH> environment variable will contain at least C</usr/bin> and "
"C</bin>.  If you require a program from another location, you should provide "
"the full path in the first parameter."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1048 ../fish/guestfish-actions.pod:716
msgid ""
"Shared libraries and data files required by the program must be available on "
"filesystems which are mounted in the correct places.  It is the caller's "
"responsibility to ensure all filesystems that are needed are mounted at the "
"right locations."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1060 ../src/guestfs-actions.pod:1080 ../src/guestfs-actions.pod:1545
msgid "(Added in 0.9.1)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1062
msgid "guestfs_command_lines"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1064
#, no-wrap
msgid ""
" char **\n"
" guestfs_command_lines (guestfs_h *g,\n"
"                        char *const *arguments);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1068
msgid ""
"This is the same as C<guestfs_command>, but splits the result into a list of "
"lines."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1071
msgid "See also: C<guestfs_sh_lines>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1082
msgid "guestfs_config"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1084
#, no-wrap
msgid ""
" int\n"
" guestfs_config (guestfs_h *g,\n"
"                 const char *qemuparam,\n"
"                 const char *qemuvalue);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1089 ../fish/guestfish-actions.pod:741
msgid ""
"This can be used to add arbitrary qemu command line parameters of the form "
"I<-param value>.  Actually it's not quite arbitrary - we prevent you from "
"setting some parameters which would interfere with parameters that we use."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1094 ../fish/guestfish-actions.pod:746
msgid "The first character of C<param> string must be a C<-> (dash)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1096 ../fish/guestfish-actions.pod:748
msgid "C<value> can be NULL."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1102
msgid "guestfs_copy_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1104
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_size (guestfs_h *g,\n"
"                    const char *src,\n"
"                    const char *dest,\n"
"                    int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1110 ../fish/guestfish-actions.pod:754
msgid ""
"This command copies exactly C<size> bytes from one source device or file "
"C<src> to another destination device or file C<dest>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1113 ../fish/guestfish-actions.pod:757
msgid ""
"Note this will fail if the source is too short or if the destination is not "
"large enough."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1118 ../src/guestfs-actions.pod:1241 ../src/guestfs-actions.pod:1272 ../src/guestfs-actions.pod:1317 ../src/guestfs-actions.pod:1694 ../src/guestfs-actions.pod:1716 ../src/guestfs-actions.pod:3473 ../src/guestfs-actions.pod:6853 ../src/guestfs-actions.pod:6887 ../src/guestfs-actions.pod:7373 ../src/guestfs-actions.pod:7392
msgid ""
"This long-running command can generate progress notification messages so "
"that the caller can display a progress bar or indicator.  To receive these "
"messages, the caller must register a progress event callback.  See "
"L<guestfs(3)/GUESTFS_EVENT_PROGRESS>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1123 ../src/guestfs-actions.pod:4160 ../src/guestfs-actions.pod:5385 ../src/guestfs-actions.pod:7094 ../src/guestfs-actions.pod:7114 ../src/guestfs-actions.pod:7200
msgid "(Added in 1.0.87)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1125
msgid "guestfs_cp"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1127
#, no-wrap
msgid ""
" int\n"
" guestfs_cp (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1132 ../fish/guestfish-actions.pod:764
msgid ""
"This copies a file from C<src> to C<dest> where C<dest> is either a "
"destination filename or destination directory."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1137 ../src/guestfs-actions.pod:1151 ../src/guestfs-actions.pod:1223 ../src/guestfs-actions.pod:1297 ../src/guestfs-actions.pod:1411 ../src/guestfs-actions.pod:4852 ../src/guestfs-actions.pod:5229
msgid "(Added in 1.0.18)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1139
msgid "guestfs_cp_a"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1141
#, no-wrap
msgid ""
" int\n"
" guestfs_cp_a (guestfs_h *g,\n"
"               const char *src,\n"
"               const char *dest);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1146 ../fish/guestfish-actions.pod:771
msgid ""
"This copies a file or directory from C<src> to C<dest> recursively using the "
"C<cp -a> command."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1153
msgid "guestfs_dd"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1155
#, no-wrap
msgid ""
" int\n"
" guestfs_dd (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1160 ../fish/guestfish-actions.pod:778
msgid ""
"This command copies from one source device or file C<src> to another "
"destination device or file C<dest>.  Normally you would use this to copy to "
"or from a device or partition, for example to duplicate a filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1165
msgid ""
"If the destination is a device, it must be as large or larger than the "
"source file or device, otherwise the copy will fail.  This command cannot do "
"partial copies (see C<guestfs_copy_size>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1173
msgid "guestfs_df"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1175
#, no-wrap
msgid ""
" char *\n"
" guestfs_df (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1178 ../fish/guestfish-actions.pod:791
msgid "This command runs the C<df> command to report disk space used."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1180 ../src/guestfs-actions.pod:1197
msgid ""
"This command is mostly useful for interactive sessions.  It is I<not> "
"intended that you try to parse the output string.  Use C<guestfs_statvfs> "
"from programs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1187 ../src/guestfs-actions.pod:1204 ../src/guestfs-actions.pod:1322 ../src/guestfs-actions.pod:2283 ../src/guestfs-actions.pod:2307 ../src/guestfs-actions.pod:2375 ../src/guestfs-actions.pod:4270 ../src/guestfs-actions.pod:4752 ../src/guestfs-actions.pod:6591 ../src/guestfs-actions.pod:6615 ../src/guestfs-actions.pod:7240 ../src/guestfs-actions.pod:7253 ../src/guestfs-actions.pod:7266
msgid "(Added in 1.0.54)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1189
msgid "guestfs_df_h"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1191
#, no-wrap
msgid ""
" char *\n"
" guestfs_df_h (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1194 ../fish/guestfish-actions.pod:801
msgid ""
"This command runs the C<df -h> command to report disk space used in "
"human-readable format."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1206
msgid "guestfs_dmesg"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1208
#, no-wrap
msgid ""
" char *\n"
" guestfs_dmesg (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1211 ../fish/guestfish-actions.pod:812
msgid ""
"This returns the kernel messages (C<dmesg> output) from the guest kernel.  "
"This is sometimes useful for extended debugging of problems."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1215
msgid ""
"Another way to get the same information is to enable verbose messages with "
"C<guestfs_set_verbose> or by setting the environment variable "
"C<LIBGUESTFS_DEBUG=1> before running the program."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1225
msgid "guestfs_download"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1227
#, no-wrap
msgid ""
" int\n"
" guestfs_download (guestfs_h *g,\n"
"                   const char *remotefilename,\n"
"                   const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1232 ../src/guestfs-actions.pod:1257 ../fish/guestfish-actions.pod:825 ../fish/guestfish-actions.pod:838
msgid ""
"Download file C<remotefilename> and save it as C<filename> on the local "
"machine."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1235 ../src/guestfs-actions.pod:6847 ../fish/guestfish-actions.pod:828 ../fish/guestfish-actions.pod:4622
msgid "C<filename> can also be a named pipe."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1237
msgid "See also C<guestfs_upload>, C<guestfs_cat>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1248
msgid "guestfs_download_offset"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1250
#, no-wrap
msgid ""
" int\n"
" guestfs_download_offset (guestfs_h *g,\n"
"                          const char *remotefilename,\n"
"                          const char *filename,\n"
"                          int64_t offset,\n"
"                          int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1260 ../fish/guestfish-actions.pod:841
msgid ""
"C<remotefilename> is read for C<size> bytes starting at C<offset> (this "
"region must be within the file or device)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1263
msgid ""
"Note that there is no limit on the amount of data that can be downloaded "
"with this call, unlike with C<guestfs_pread>, and this call always reads the "
"full amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1268
msgid "See also C<guestfs_download>, C<guestfs_pread>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1277 ../src/guestfs-actions.pod:6892
msgid "(Added in 1.5.17)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1279
msgid "guestfs_drop_caches"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1281
#, no-wrap
msgid ""
" int\n"
" guestfs_drop_caches (guestfs_h *g,\n"
"                      int whattodrop);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1285 ../fish/guestfish-actions.pod:857
msgid ""
"This instructs the guest kernel to drop its page cache, and/or dentries and "
"inode caches.  The parameter C<whattodrop> tells the kernel what precisely "
"to drop, see L<http://linux-mm.org/Drop_Caches>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1290 ../fish/guestfish-actions.pod:862
msgid "Setting C<whattodrop> to 3 should drop everything."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1292 ../fish/guestfish-actions.pod:864
msgid ""
"This automatically calls L<sync(2)> before the operation, so that the "
"maximum guest memory is freed."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1299
msgid "guestfs_du"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1301
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_du (guestfs_h *g,\n"
"             const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1305 ../fish/guestfish-actions.pod:871
msgid ""
"This command runs the C<du -s> command to estimate file space usage for "
"C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1308 ../fish/guestfish-actions.pod:874
msgid ""
"C<path> can be a file or a directory.  If C<path> is a directory then the "
"estimate includes the contents of the directory and all subdirectories "
"(recursively)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1312 ../fish/guestfish-actions.pod:878
msgid "The result is the estimated size in I<kilobytes> (ie. units of 1024 bytes)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1324
msgid "guestfs_e2fsck_f"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1326
#, no-wrap
msgid ""
" int\n"
" guestfs_e2fsck_f (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1330 ../fish/guestfish-actions.pod:885
msgid ""
"This runs C<e2fsck -p -f device>, ie. runs the ext2/ext3 filesystem checker "
"on C<device>, noninteractively (I<-p>), even if the filesystem appears to be "
"clean (I<-f>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1334
msgid ""
"This command is only needed because of C<guestfs_resize2fs> (q.v.).  "
"Normally you should use C<guestfs_fsck>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1339
msgid "(Added in 1.0.29)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1341
msgid "guestfs_echo_daemon"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1343
#, no-wrap
msgid ""
" char *\n"
" guestfs_echo_daemon (guestfs_h *g,\n"
"                      char *const *words);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1347 ../fish/guestfish-actions.pod:896
msgid ""
"This command concatenates the list of C<words> passed with single spaces "
"between them and returns the resulting string."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1350 ../fish/guestfish-actions.pod:899
msgid "You can use this command to test the connection through to the daemon."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1352
msgid "See also C<guestfs_ping_daemon>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1357 ../src/guestfs-actions.pod:2091 ../src/guestfs-actions.pod:6063
msgid "(Added in 1.0.69)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1359
msgid "guestfs_egrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1361
#, no-wrap
msgid ""
" char **\n"
" guestfs_egrep (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1366 ../fish/guestfish-actions.pod:907
msgid "This calls the external C<egrep> program and returns the matching lines."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1376 ../src/guestfs-actions.pod:1395 ../src/guestfs-actions.pod:1452 ../src/guestfs-actions.pod:1498 ../src/guestfs-actions.pod:1517 ../src/guestfs-actions.pod:2221 ../src/guestfs-actions.pod:2240 ../src/guestfs-actions.pod:2396 ../src/guestfs-actions.pod:2409 ../src/guestfs-actions.pod:2424 ../src/guestfs-actions.pod:2470 ../src/guestfs-actions.pod:2492 ../src/guestfs-actions.pod:2505 ../src/guestfs-actions.pod:3653 ../src/guestfs-actions.pod:3667 ../src/guestfs-actions.pod:3680 ../src/guestfs-actions.pod:3694 ../src/guestfs-actions.pod:4680 ../src/guestfs-actions.pod:5563 ../src/guestfs-actions.pod:5612 ../src/guestfs-actions.pod:6459 ../src/guestfs-actions.pod:6471 ../src/guestfs-actions.pod:6484 ../src/guestfs-actions.pod:6497 ../src/guestfs-actions.pod:6519 ../src/guestfs-actions.pod:6532 ../src/guestfs-actions.pod:6545 ../src/guestfs-actions.pod:6558 ../src/guestfs-actions.pod:7336 ../src/guestfs-actions.pod:7355 ../src/guestfs-actions.pod:7440 ../src/guestfs-actions.pod:7459 ../src/guestfs-actions.pod:7505 ../src/guestfs-actions.pod:7524
msgid "(Added in 1.0.66)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1378
msgid "guestfs_egrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1380
#, no-wrap
msgid ""
" char **\n"
" guestfs_egrepi (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1385 ../fish/guestfish-actions.pod:917
msgid "This calls the external C<egrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1397
msgid "guestfs_equal"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1399
#, no-wrap
msgid ""
" int\n"
" guestfs_equal (guestfs_h *g,\n"
"                const char *file1,\n"
"                const char *file2);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1404 ../fish/guestfish-actions.pod:927
msgid ""
"This compares the two files C<file1> and C<file2> and returns true if their "
"content is exactly equal, or false otherwise."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1407 ../fish/guestfish-actions.pod:930
msgid "The external L<cmp(1)> program is used for the comparison."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1413
msgid "guestfs_exists"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1415
#, no-wrap
msgid ""
" int\n"
" guestfs_exists (guestfs_h *g,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1419 ../fish/guestfish-actions.pod:936
msgid ""
"This returns C<true> if and only if there is a file, directory (or anything) "
"with the given C<path> name."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1422
msgid "See also C<guestfs_is_file>, C<guestfs_is_dir>, C<guestfs_stat>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1428
msgid "guestfs_fallocate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1430
#, no-wrap
msgid ""
" int\n"
" guestfs_fallocate (guestfs_h *g,\n"
"                    const char *path,\n"
"                    int len);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1435 ../src/guestfs-actions.pod:1461 ../fish/guestfish-actions.pod:945 ../fish/guestfish-actions.pod:964
msgid ""
"This command preallocates a file (containing zero bytes) named C<path> of "
"size C<len> bytes.  If the file exists already, it is overwritten."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1439 ../fish/guestfish-actions.pod:949
msgid ""
"Do not confuse this with the guestfish-specific C<alloc> command which "
"allocates a file in the host and attaches it as a device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1445 ../fish/guestfish-actions.pod:953
msgid ""
"This function is deprecated.  In new code, use the C<fallocate64> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1454
msgid "guestfs_fallocate64"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1456
#, no-wrap
msgid ""
" int\n"
" guestfs_fallocate64 (guestfs_h *g,\n"
"                      const char *path,\n"
"                      int64_t len);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1465
msgid ""
"Note that this call allocates disk blocks for the file.  To create a sparse "
"file use C<guestfs_truncate_size> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1468
msgid ""
"The deprecated call C<guestfs_fallocate> does the same, but owing to an "
"oversight it only allowed 30 bit lengths to be specified, effectively "
"limiting the maximum size of files created through that call to 1GB."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1473 ../fish/guestfish-actions.pod:976
msgid ""
"Do not confuse this with the guestfish-specific C<alloc> and C<sparse> "
"commands which create a file in the host and attach it as a device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1479
msgid "(Added in 1.3.17)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1481
msgid "guestfs_fgrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1483
#, no-wrap
msgid ""
" char **\n"
" guestfs_fgrep (guestfs_h *g,\n"
"                const char *pattern,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1488 ../fish/guestfish-actions.pod:984
msgid "This calls the external C<fgrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1500
msgid "guestfs_fgrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1502
#, no-wrap
msgid ""
" char **\n"
" guestfs_fgrepi (guestfs_h *g,\n"
"                 const char *pattern,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1507 ../fish/guestfish-actions.pod:994
msgid "This calls the external C<fgrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1519
msgid "guestfs_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1521
#, no-wrap
msgid ""
" char *\n"
" guestfs_file (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1525 ../fish/guestfish-actions.pod:1004
msgid ""
"This call uses the standard L<file(1)> command to determine the type or "
"contents of the file."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1528 ../fish/guestfish-actions.pod:1007
msgid ""
"This call will also transparently look inside various types of compressed "
"file."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1531 ../fish/guestfish-actions.pod:1010
msgid ""
"The exact command which runs is C<file -zb path>.  Note in particular that "
"the filename is not prepended to the output (the I<-b> option)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1535 ../fish/guestfish-actions.pod:1014
msgid ""
"The output depends on the output of the underlying L<file(1)> command and it "
"can change in future in ways beyond our control.  In other words, the output "
"is not guaranteed by the ABI."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1539
msgid ""
"See also: L<file(1)>, C<guestfs_vfs_type>, C<guestfs_lstat>, "
"C<guestfs_is_file>, C<guestfs_is_blockdev> (etc)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1547
msgid "guestfs_file_architecture"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1549
#, no-wrap
msgid ""
" char *\n"
" guestfs_file_architecture (guestfs_h *g,\n"
"                            const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1553 ../fish/guestfish-actions.pod:1025
msgid ""
"This detects the architecture of the binary C<filename>, and returns it if "
"known."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1556 ../fish/guestfish-actions.pod:1028
msgid "Currently defined architectures are:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:1560 ../fish/guestfish-actions.pod:1032
msgid "\"i386\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1562 ../fish/guestfish-actions.pod:1034
msgid ""
"This string is returned for all 32 bit i386, i486, i586, i686 binaries "
"irrespective of the precise processor requirements of the binary."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:1565 ../fish/guestfish-actions.pod:1037
msgid "\"x86_64\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1567 ../fish/guestfish-actions.pod:1039
msgid "64 bit x86-64."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:1569 ../fish/guestfish-actions.pod:1041
msgid "\"sparc\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1571 ../fish/guestfish-actions.pod:1043
msgid "32 bit SPARC."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:1573 ../fish/guestfish-actions.pod:1045
msgid "\"sparc64\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1575 ../fish/guestfish-actions.pod:1047
msgid "64 bit SPARC V9 and above."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:1577 ../fish/guestfish-actions.pod:1049
msgid "\"ia64\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1579 ../fish/guestfish-actions.pod:1051
msgid "Intel Itanium."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:1581 ../fish/guestfish-actions.pod:1053
msgid "\"ppc\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1583 ../fish/guestfish-actions.pod:1055
msgid "32 bit Power PC."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:1585 ../fish/guestfish-actions.pod:1057
msgid "\"ppc64\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1587 ../fish/guestfish-actions.pod:1059
msgid "64 bit Power PC."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1591 ../fish/guestfish-actions.pod:1063
msgid "Libguestfs may return other architecture strings in future."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1593 ../fish/guestfish-actions.pod:1065
msgid "The function works on at least the following types of files:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1599 ../fish/guestfish-actions.pod:1071
msgid "many types of Un*x and Linux binary"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1603 ../fish/guestfish-actions.pod:1075
msgid "many types of Un*x and Linux shared library"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1607 ../fish/guestfish-actions.pod:1079
msgid "Windows Win32 and Win64 binaries"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1611 ../fish/guestfish-actions.pod:1083
msgid "Windows Win32 and Win64 DLLs"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1613 ../fish/guestfish-actions.pod:1085
msgid "Win32 binaries and DLLs return C<i386>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1615 ../fish/guestfish-actions.pod:1087
msgid "Win64 binaries and DLLs return C<x86_64>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1619 ../fish/guestfish-actions.pod:1091
msgid "Linux kernel modules"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1623 ../fish/guestfish-actions.pod:1095
msgid "Linux new-style initrd images"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1627 ../fish/guestfish-actions.pod:1099
msgid "some non-x86 Linux vmlinuz kernels"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1631 ../fish/guestfish-actions.pod:1103
msgid "What it can't do currently:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1637 ../fish/guestfish-actions.pod:1109
msgid "static libraries (libfoo.a)"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1641 ../fish/guestfish-actions.pod:1113
msgid "Linux old-style initrd as compressed ext2 filesystem (RHEL 3)"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1645 ../fish/guestfish-actions.pod:1117
msgid "x86 Linux vmlinuz kernels"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1647 ../fish/guestfish-actions.pod:1119
msgid ""
"x86 vmlinuz images (bzImage format) consist of a mix of 16-, 32- and "
"compressed code, and are horribly hard to unpack.  If you want to find the "
"architecture of a kernel, use the architecture of the associated initrd or "
"kernel module(s) instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1657 ../src/guestfs-actions.pod:1820 ../src/guestfs-actions.pod:1837 ../src/guestfs-actions.pod:2528 ../src/guestfs-actions.pod:2621 ../src/guestfs-actions.pod:2691 ../src/guestfs-actions.pod:2779 ../src/guestfs-actions.pod:2800 ../src/guestfs-actions.pod:2843 ../src/guestfs-actions.pod:2927 ../src/guestfs-actions.pod:3024 ../src/guestfs-actions.pod:3271 ../src/guestfs-actions.pod:3403
msgid "(Added in 1.5.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1659
msgid "guestfs_filesize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1661
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_filesize (guestfs_h *g,\n"
"                   const char *file);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1665 ../fish/guestfish-actions.pod:1130
msgid "This command returns the size of C<file> in bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1667
msgid ""
"To get other stats about a file, use C<guestfs_stat>, C<guestfs_lstat>, "
"C<guestfs_is_dir>, C<guestfs_is_file> etc.  To get the size of block "
"devices, use C<guestfs_blockdev_getsize64>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1673
msgid "(Added in 1.0.82)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1675
msgid "guestfs_fill"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1677
#, no-wrap
msgid ""
" int\n"
" guestfs_fill (guestfs_h *g,\n"
"               int c,\n"
"               int len,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1683 ../fish/guestfish-actions.pod:1140
msgid ""
"This command creates a new file called C<path>.  The initial content of the "
"file is C<len> octets of C<c>, where C<c> must be a number in the range "
"C<[0..255]>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1687
msgid ""
"To fill a file with zero bytes (sparsely), it is much more efficient to use "
"C<guestfs_truncate_size>.  To create a file with a pattern of repeating "
"bytes use C<guestfs_fill_pattern>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1699
msgid "(Added in 1.0.79)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1701
msgid "guestfs_fill_pattern"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1703
#, no-wrap
msgid ""
" int\n"
" guestfs_fill_pattern (guestfs_h *g,\n"
"                       const char *pattern,\n"
"                       int len,\n"
"                       const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1709
msgid ""
"This function is like C<guestfs_fill> except that it creates a new file of "
"length C<len> containing the repeating pattern of bytes in C<pattern>.  The "
"pattern is truncated if necessary to ensure the length of the file is "
"exactly C<len> bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1721
msgid "(Added in 1.3.12)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1723
msgid "guestfs_find"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1725
#, no-wrap
msgid ""
" char **\n"
" guestfs_find (guestfs_h *g,\n"
"               const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1729 ../fish/guestfish-actions.pod:1162
msgid ""
"This command lists out all files and directories, recursively, starting at "
"C<directory>.  It is essentially equivalent to running the shell command "
"C<find directory -print> but some post-processing happens on the output, "
"described below."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1734 ../fish/guestfish-actions.pod:1167
msgid ""
"This returns a list of strings I<without any prefix>.  Thus if the directory "
"structure was:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1737 ../fish/guestfish-actions.pod:1170
#, no-wrap
msgid ""
" /tmp/a\n"
" /tmp/b\n"
" /tmp/c/d\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1741
msgid "then the returned list from C<guestfs_find> C</tmp> would be 4 elements:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1744 ../fish/guestfish-actions.pod:1177
#, no-wrap
msgid ""
" a\n"
" b\n"
" c\n"
" c/d\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1749 ../fish/guestfish-actions.pod:1182
msgid "If C<directory> is not a directory, then this command returns an error."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1752 ../fish/guestfish-actions.pod:1185
msgid "The returned list is sorted."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1754
msgid "See also C<guestfs_find0>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1763 ../src/guestfs-actions.pod:4097 ../src/guestfs-actions.pod:5647
msgid "(Added in 1.0.27)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1765
msgid "guestfs_find0"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1767
#, no-wrap
msgid ""
" int\n"
" guestfs_find0 (guestfs_h *g,\n"
"                const char *directory,\n"
"                const char *files);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1772 ../fish/guestfish-actions.pod:1196
msgid ""
"This command lists out all files and directories, recursively, starting at "
"C<directory>, placing the resulting list in the external file called "
"C<files>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1776
msgid ""
"This command works the same way as C<guestfs_find> with the following "
"exceptions:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1783 ../fish/guestfish-actions.pod:1207
msgid "The resulting list is written to an external file."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1787 ../fish/guestfish-actions.pod:1211
msgid ""
"Items (filenames) in the result are separated by C<\\0> characters.  See "
"L<find(1)> option I<-print0>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1792 ../fish/guestfish-actions.pod:1216
msgid "This command is not limited in the number of names that it can return."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1797 ../fish/guestfish-actions.pod:1221
msgid "The result list is not sorted."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1803
msgid "(Added in 1.0.74)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1805
msgid "guestfs_findfs_label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1807
#, no-wrap
msgid ""
" char *\n"
" guestfs_findfs_label (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1811 ../fish/guestfish-actions.pod:1231
msgid ""
"This command searches the filesystems and returns the one which has the "
"given label.  An error is returned if no such filesystem can be found."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1815
msgid "To find the label of a filesystem, use C<guestfs_vfs_label>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1822
msgid "guestfs_findfs_uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1824
#, no-wrap
msgid ""
" char *\n"
" guestfs_findfs_uuid (guestfs_h *g,\n"
"                      const char *uuid);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1828 ../fish/guestfish-actions.pod:1241
msgid ""
"This command searches the filesystems and returns the one which has the "
"given UUID.  An error is returned if no such filesystem can be found."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1832
msgid "To find the UUID of a filesystem, use C<guestfs_vfs_uuid>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1839
msgid "guestfs_fsck"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1841
#, no-wrap
msgid ""
" int\n"
" guestfs_fsck (guestfs_h *g,\n"
"               const char *fstype,\n"
"               const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1846 ../fish/guestfish-actions.pod:1251
msgid ""
"This runs the filesystem checker (fsck) on C<device> which should have "
"filesystem type C<fstype>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1849 ../fish/guestfish-actions.pod:1254
msgid ""
"The returned integer is the status.  See L<fsck(8)> for the list of status "
"codes from C<fsck>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1858 ../fish/guestfish-actions.pod:1263
msgid "Multiple status codes can be summed together."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1862 ../fish/guestfish-actions.pod:1267
msgid ""
"A non-zero return code can mean \"success\", for example if errors have been "
"corrected on the filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1867 ../fish/guestfish-actions.pod:1272
msgid "Checking or repairing NTFS volumes is not supported (by linux-ntfs)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1872 ../fish/guestfish-actions.pod:1277
msgid "This command is entirely equivalent to running C<fsck -a -t fstype device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1876 ../src/guestfs-actions.pod:7378
msgid "(Added in 1.0.16)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1878
msgid "guestfs_get_append"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1880
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_append (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1883 ../fish/guestfish-actions.pod:1283
msgid ""
"Return the additional kernel options which are added to the guest kernel "
"command line."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1886 ../fish/guestfish-actions.pod:1286
msgid "If C<NULL> then no options are added."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1888
msgid ""
"This function returns a string which may be NULL.  There is no way to return "
"an error from this function.  The string is owned by the guest handle and "
"must I<not> be freed."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1892 ../src/guestfs-actions.pod:5325 ../src/guestfs-actions.pod:5805 ../src/guestfs-actions.pod:6226 ../src/guestfs-actions.pod:6245 ../src/guestfs-actions.pod:6261 ../src/guestfs-actions.pod:6285 ../src/guestfs-actions.pod:7042 ../src/guestfs-actions.pod:7060 ../src/guestfs-actions.pod:7421
msgid "(Added in 1.0.26)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1894
msgid "guestfs_get_attach_method"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1896
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_attach_method (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1899
msgid "Return the current attach method.  See C<guestfs_set_attach_method>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1904
msgid "guestfs_get_autosync"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1906
#, no-wrap
msgid ""
" int\n"
" guestfs_get_autosync (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1909 ../fish/guestfish-actions.pod:1298
msgid "Get the autosync flag."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1915
msgid "guestfs_get_direct"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1917
#, no-wrap
msgid ""
" int\n"
" guestfs_get_direct (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1920 ../fish/guestfish-actions.pod:1304
msgid "Return the direct appliance mode flag."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1924 ../src/guestfs-actions.pod:5874
msgid "(Added in 1.0.72)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1926
msgid "guestfs_get_e2label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1928
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_e2label (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1932 ../fish/guestfish-actions.pod:1310
msgid "This returns the ext2/3/4 filesystem label of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1938 ../fish/guestfish-actions.pod:1313
msgid ""
"This function is deprecated.  In new code, use the C<vfs_label> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1945 ../src/guestfs-actions.pod:1966 ../src/guestfs-actions.pod:5892 ../src/guestfs-actions.pod:5911
msgid "(Added in 1.0.15)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1947
msgid "guestfs_get_e2uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1949
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_e2uuid (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1953 ../fish/guestfish-actions.pod:1324
msgid "This returns the ext2/3/4 filesystem UUID of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1959 ../fish/guestfish-actions.pod:1327
msgid "This function is deprecated.  In new code, use the C<vfs_uuid> call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1968
msgid "guestfs_get_memsize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1970
#, no-wrap
msgid ""
" int\n"
" guestfs_get_memsize (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1973 ../fish/guestfish-actions.pod:1338
msgid "This gets the memory size in megabytes allocated to the qemu subprocess."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1976
msgid ""
"If C<guestfs_set_memsize> was not called on this handle, and if "
"C<LIBGUESTFS_MEMSIZE> was not set, then this returns the compiled-in default "
"value for memsize."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1980 ../src/guestfs-actions.pod:2061 ../src/guestfs-actions.pod:5927 ../src/guestfs-actions.pod:6034 ../fish/guestfish-actions.pod:1345 ../fish/guestfish-actions.pod:1396 ../fish/guestfish-actions.pod:3997 ../fish/guestfish-actions.pod:4084
msgid "For more information on the architecture of libguestfs, see L<guestfs(3)>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1985 ../src/guestfs-actions.pod:4388 ../src/guestfs-actions.pod:4585 ../src/guestfs-actions.pod:4604 ../src/guestfs-actions.pod:4623 ../src/guestfs-actions.pod:4635 ../src/guestfs-actions.pod:4652 ../src/guestfs-actions.pod:4665 ../src/guestfs-actions.pod:5550 ../src/guestfs-actions.pod:5932 ../src/guestfs-actions.pod:6193 ../src/guestfs-actions.pod:6808
msgid "(Added in 1.0.55)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1987
msgid "guestfs_get_network"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1989
#, no-wrap
msgid ""
" int\n"
" guestfs_get_network (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1992 ../fish/guestfish-actions.pod:1352
msgid "This returns the enable network flag."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1996 ../src/guestfs-actions.pod:5951
msgid "(Added in 1.5.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1998
msgid "guestfs_get_path"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2000
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_path (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2003 ../fish/guestfish-actions.pod:1358
msgid "Return the current search path."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2005 ../fish/guestfish-actions.pod:1360
msgid ""
"This is always non-NULL.  If it wasn't set already, then this will return "
"the default path."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2008 ../src/guestfs-actions.pod:2037
msgid ""
"This function returns a string, or NULL on error.  The string is owned by "
"the guest handle and must I<not> be freed."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2013
msgid "guestfs_get_pid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2015
#, no-wrap
msgid ""
" int\n"
" guestfs_get_pid (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2018 ../fish/guestfish-actions.pod:1369
msgid ""
"Return the process ID of the qemu subprocess.  If there is no qemu "
"subprocess, then this will return an error."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2021 ../fish/guestfish-actions.pod:1372
msgid "This is an internal call used for debugging and testing."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2025
msgid "(Added in 1.0.56)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2027
msgid "guestfs_get_qemu"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2029
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_qemu (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2032 ../fish/guestfish-actions.pod:1378
msgid "Return the current qemu binary."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2034 ../fish/guestfish-actions.pod:1380
msgid ""
"This is always non-NULL.  If it wasn't set already, then this will return "
"the default qemu binary name."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2040 ../src/guestfs-actions.pod:5996
msgid "(Added in 1.0.6)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2042
msgid "guestfs_get_recovery_proc"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2044
#, no-wrap
msgid ""
" int\n"
" guestfs_get_recovery_proc (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2047 ../fish/guestfish-actions.pod:1387
msgid "Return the recovery process enabled flag."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2051 ../src/guestfs-actions.pod:3498 ../src/guestfs-actions.pod:3795 ../src/guestfs-actions.pod:4195 ../src/guestfs-actions.pod:4227 ../src/guestfs-actions.pod:5255 ../src/guestfs-actions.pod:5598 ../src/guestfs-actions.pod:6020 ../src/guestfs-actions.pod:6711 ../src/guestfs-actions.pod:6731 ../src/guestfs-actions.pod:6923
msgid "(Added in 1.0.77)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2053
msgid "guestfs_get_selinux"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2055
#, no-wrap
msgid ""
" int\n"
" guestfs_get_selinux (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2058
msgid ""
"This returns the current setting of the selinux flag which is passed to the "
"appliance at boot time.  See C<guestfs_set_selinux>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2066 ../src/guestfs-actions.pod:2129 ../src/guestfs-actions.pod:6039 ../src/guestfs-actions.pod:6097
msgid "(Added in 1.0.67)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2068
msgid "guestfs_get_state"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2070
#, no-wrap
msgid ""
" int\n"
" guestfs_get_state (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2073 ../fish/guestfish-actions.pod:1403
msgid ""
"This returns the current state as an opaque integer.  This is only useful "
"for printing debug and internal error messages."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2076 ../src/guestfs-actions.pod:3296 ../src/guestfs-actions.pod:3325 ../src/guestfs-actions.pod:3386 ../src/guestfs-actions.pod:3413 ../fish/guestfish-actions.pod:1406 ../fish/guestfish-actions.pod:2320 ../fish/guestfish-actions.pod:2338 ../fish/guestfish-actions.pod:2376 ../fish/guestfish-actions.pod:2392
msgid "For more information on states, see L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2082
msgid "guestfs_get_trace"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2084
#, no-wrap
msgid ""
" int\n"
" guestfs_get_trace (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2087 ../fish/guestfish-actions.pod:1412
msgid "Return the command trace flag."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2093
msgid "guestfs_get_umask"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2095
#, no-wrap
msgid ""
" int\n"
" guestfs_get_umask (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2098
msgid ""
"Return the current umask.  By default the umask is C<022> unless it has been "
"set by calling C<guestfs_umask>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2105
msgid "guestfs_get_verbose"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2107
#, no-wrap
msgid ""
" int\n"
" guestfs_get_verbose (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2110 ../fish/guestfish-actions.pod:1425
msgid "This returns the verbose messages flag."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2116
msgid "guestfs_getcon"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2118
#, no-wrap
msgid ""
" char *\n"
" guestfs_getcon (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2121 ../fish/guestfish-actions.pod:1431
msgid "This gets the SELinux security context of the daemon."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2123
msgid "See the documentation about SELINUX in L<guestfs(3)>, and C<guestfs_setcon>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2131
msgid "guestfs_getxattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2133
#, no-wrap
msgid ""
" char *\n"
" guestfs_getxattr (guestfs_h *g,\n"
"                   const char *path,\n"
"                   const char *name,\n"
"                   size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2139
msgid ""
"Get a single extended attribute from file C<path> named C<name>.  This call "
"follows symlinks.  If you want to lookup an extended attribute for the "
"symlink itself, use C<guestfs_lgetxattr>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2143 ../src/guestfs-actions.pod:3512
msgid ""
"Normally it is better to get all extended attributes from a file in one go "
"by calling C<guestfs_getxattrs>.  However some Linux filesystem "
"implementations are buggy and do not provide a way to list out attributes.  "
"For these filesystems (notably ntfs-3g)  you have to know the names of the "
"extended attributes you want in advance and call this function."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2150 ../src/guestfs-actions.pod:3519 ../fish/guestfish-actions.pod:1451 ../fish/guestfish-actions.pod:2457
msgid ""
"Extended attribute values are blobs of binary data.  If there is no extended "
"attribute named C<name>, this returns an error."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2153
msgid "See also: C<guestfs_getxattrs>, C<guestfs_lgetxattr>, L<attr(5)>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2155 ../src/guestfs-actions.pod:2346 ../src/guestfs-actions.pod:3524 ../src/guestfs-actions.pod:5248 ../src/guestfs-actions.pod:5274 ../src/guestfs-actions.pod:5455
msgid ""
"This function returns a buffer, or NULL on error.  The size of the returned "
"buffer is written to C<*size_r>.  I<The caller must free the returned buffer "
"after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2159 ../src/guestfs-actions.pod:3528
msgid "(Added in 1.7.24)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2161
msgid "guestfs_getxattrs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2163
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_getxattrs (guestfs_h *g,\n"
"                    const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2167 ../fish/guestfish-actions.pod:1460
msgid "This call lists the extended attributes of the file or directory C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2170 ../fish/guestfish-actions.pod:1463
msgid ""
"At the system call level, this is a combination of the L<listxattr(2)> and "
"L<getxattr(2)> calls."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2173
msgid "See also: C<guestfs_lgetxattrs>, L<attr(5)>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2175 ../src/guestfs-actions.pod:3540 ../src/guestfs-actions.pod:4191
msgid ""
"This function returns a C<struct guestfs_xattr_list *>, or NULL if there was "
"an error.  I<The caller must call C<guestfs_free_xattr_list> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2179 ../src/guestfs-actions.pod:3544 ../src/guestfs-actions.pod:3709 ../src/guestfs-actions.pod:3745 ../src/guestfs-actions.pod:5628 ../src/guestfs-actions.pod:6116 ../src/guestfs-actions.pod:7486
msgid "(Added in 1.0.59)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2181
msgid "guestfs_glob_expand"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2183
#, no-wrap
msgid ""
" char **\n"
" guestfs_glob_expand (guestfs_h *g,\n"
"                      const char *pattern);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2187 ../fish/guestfish-actions.pod:1472
msgid ""
"This command searches for all the pathnames matching C<pattern> according to "
"the wildcard expansion rules used by the shell."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2191 ../fish/guestfish-actions.pod:1476
msgid "If no paths match, then this returns an empty list (note: not an error)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2194 ../fish/guestfish-actions.pod:1479
msgid ""
"It is just a wrapper around the C L<glob(3)> function with flags "
"C<GLOB_MARK|GLOB_BRACE>.  See that manual page for more details."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2202 ../src/guestfs-actions.pod:6309 ../src/guestfs-actions.pod:6326
msgid "(Added in 1.0.50)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2204
msgid "guestfs_grep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2206
#, no-wrap
msgid ""
" char **\n"
" guestfs_grep (guestfs_h *g,\n"
"               const char *regex,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2211 ../fish/guestfish-actions.pod:1487
msgid "This calls the external C<grep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2223
msgid "guestfs_grepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2225
#, no-wrap
msgid ""
" char **\n"
" guestfs_grepi (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2230 ../fish/guestfish-actions.pod:1497
msgid "This calls the external C<grep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2242
msgid "guestfs_grub_install"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2244
#, no-wrap
msgid ""
" int\n"
" guestfs_grub_install (guestfs_h *g,\n"
"                       const char *root,\n"
"                       const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2249 ../fish/guestfish-actions.pod:1507
msgid ""
"This command installs GRUB (the Grand Unified Bootloader) on C<device>, with "
"the root directory being C<root>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2252 ../fish/guestfish-actions.pod:1510
msgid ""
"Note: If grub-install reports the error \"No suitable drive was found in the "
"generated device map.\" it may be that you need to create a "
"C</boot/grub/device.map> file first that contains the mapping between grub "
"device names and Linux device names.  It is usually sufficient to create a "
"file containing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2259 ../fish/guestfish-actions.pod:1517
#, no-wrap
msgid ""
" (hd0) /dev/vda\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2261 ../fish/guestfish-actions.pod:1519
msgid "replacing C</dev/vda> with the name of the installation device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2265
msgid "(Added in 1.0.17)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2267
msgid "guestfs_head"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2269
#, no-wrap
msgid ""
" char **\n"
" guestfs_head (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2273 ../fish/guestfish-actions.pod:1525
msgid ""
"This command returns up to the first 10 lines of a file as a list of "
"strings."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2285
msgid "guestfs_head_n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2287
#, no-wrap
msgid ""
" char **\n"
" guestfs_head_n (guestfs_h *g,\n"
"                 int nrlines,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2292 ../fish/guestfish-actions.pod:1535
msgid ""
"If the parameter C<nrlines> is a positive number, this returns the first "
"C<nrlines> lines of the file C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2295 ../fish/guestfish-actions.pod:1538
msgid ""
"If the parameter C<nrlines> is a negative number, this returns lines from "
"the file C<path>, excluding the last C<nrlines> lines."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2298 ../src/guestfs-actions.pod:6606 ../fish/guestfish-actions.pod:1541 ../fish/guestfish-actions.pod:4462
msgid "If the parameter C<nrlines> is zero, this returns an empty list."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2309
msgid "guestfs_hexdump"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2311
#, no-wrap
msgid ""
" char *\n"
" guestfs_hexdump (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2315 ../fish/guestfish-actions.pod:1550
msgid ""
"This runs C<hexdump -C> on the given C<path>.  The result is the "
"human-readable, canonical hex dump of the file."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2324 ../src/guestfs-actions.pod:6390 ../src/guestfs-actions.pod:6445
msgid "(Added in 1.0.22)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2326
msgid "guestfs_initrd_cat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2328
#, no-wrap
msgid ""
" char *\n"
" guestfs_initrd_cat (guestfs_h *g,\n"
"                     const char *initrdpath,\n"
"                     const char *filename,\n"
"                     size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2334 ../fish/guestfish-actions.pod:1560
msgid ""
"This command unpacks the file C<filename> from the initrd file called "
"C<initrdpath>.  The filename must be given I<without> the initial C</> "
"character."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2338 ../fish/guestfish-actions.pod:1564
msgid ""
"For example, in guestfish you could use the following command to examine the "
"boot script (usually called C</init>)  contained in a Linux initrd or "
"initramfs image:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2342 ../fish/guestfish-actions.pod:1568
#, no-wrap
msgid ""
" initrd-cat /boot/initrd-<version>.img init\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2344
msgid "See also C<guestfs_initrd_list>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2355
msgid "guestfs_initrd_list"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2357
#, no-wrap
msgid ""
" char **\n"
" guestfs_initrd_list (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2361 ../fish/guestfish-actions.pod:1579
msgid "This command lists out files contained in an initrd."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2363 ../fish/guestfish-actions.pod:1581
msgid ""
"The files are listed without any initial C</> character.  The files are "
"listed in the order they appear (not necessarily alphabetical).  Directory "
"names are listed as separate items."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2367 ../fish/guestfish-actions.pod:1585
msgid ""
"Old Linux kernels (2.4 and earlier) used a compressed ext2 filesystem as "
"initrd.  We I<only> support the newer initramfs format (compressed cpio "
"files)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2377
msgid "guestfs_inotify_add_watch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2379
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_inotify_add_watch (guestfs_h *g,\n"
"                            const char *path,\n"
"                            int mask);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2384 ../fish/guestfish-actions.pod:1593
msgid "Watch C<path> for the events listed in C<mask>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2386 ../fish/guestfish-actions.pod:1595
msgid ""
"Note that if C<path> is a directory then events within that directory are "
"watched, but this does I<not> happen recursively (in subdirectories)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2390 ../fish/guestfish-actions.pod:1599
msgid ""
"Note for non-C or non-Linux callers: the inotify events are defined by the "
"Linux kernel ABI and are listed in C</usr/include/sys/inotify.h>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2398
msgid "guestfs_inotify_close"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2400
#, no-wrap
msgid ""
" int\n"
" guestfs_inotify_close (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2403 ../fish/guestfish-actions.pod:1607
msgid ""
"This closes the inotify handle which was previously opened by inotify_init.  "
"It removes all watches, throws away any pending events, and deallocates all "
"resources."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2411
msgid "guestfs_inotify_files"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2413
#, no-wrap
msgid ""
" char **\n"
" guestfs_inotify_files (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2416
msgid ""
"This function is a helpful wrapper around C<guestfs_inotify_read> which just "
"returns a list of pathnames of objects that were touched.  The returned "
"pathnames are sorted and deduplicated."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2426
msgid "guestfs_inotify_init"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2428
#, no-wrap
msgid ""
" int\n"
" guestfs_inotify_init (guestfs_h *g,\n"
"                       int maxevents);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2432 ../fish/guestfish-actions.pod:1623
msgid ""
"This command creates a new inotify handle.  The inotify subsystem can be "
"used to notify events which happen to objects in the guest filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2436
msgid ""
"C<maxevents> is the maximum number of events which will be queued up between "
"calls to C<guestfs_inotify_read> or C<guestfs_inotify_files>.  If this is "
"passed as C<0>, then the kernel (or previously set)  default is used.  For "
"Linux 2.6.29 the default was 16384 events.  Beyond this limit, the kernel "
"throws away events, but records the fact that it threw them away by setting "
"a flag C<IN_Q_OVERFLOW> in the returned structure list (see "
"C<guestfs_inotify_read>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2446
msgid ""
"Before any events are generated, you have to add some watches to the "
"internal watch list.  See: C<guestfs_inotify_add_watch>, "
"C<guestfs_inotify_rm_watch> and C<guestfs_inotify_watch_all>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2452
msgid ""
"Queued up events should be read periodically by calling "
"C<guestfs_inotify_read> (or C<guestfs_inotify_files> which is just a helpful "
"wrapper around C<guestfs_inotify_read>).  If you don't read the events out "
"often enough then you risk the internal queue overflowing."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2459
msgid ""
"The handle should be closed after use by calling C<guestfs_inotify_close>.  "
"This also removes any watches automatically."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2463 ../fish/guestfish-actions.pod:1654
msgid ""
"See also L<inotify(7)> for an overview of the inotify interface as exposed "
"by the Linux kernel, which is roughly what we expose via libguestfs.  Note "
"that there is one global inotify handle per libguestfs instance."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2472
msgid "guestfs_inotify_read"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2474
#, no-wrap
msgid ""
" struct guestfs_inotify_event_list *\n"
" guestfs_inotify_read (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2477 ../fish/guestfish-actions.pod:1663
msgid ""
"Return the complete queue of events that have happened since the previous "
"read call."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2480 ../fish/guestfish-actions.pod:1666
msgid "If no events have happened, this returns an empty list."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2482 ../fish/guestfish-actions.pod:1668
msgid ""
"I<Note>: In order to make sure that all events have been read, you must call "
"this function repeatedly until it returns an empty list.  The reason is that "
"the call will read events up to the maximum appliance-to-host message size "
"and leave remaining events in the queue."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2488
msgid ""
"This function returns a C<struct guestfs_inotify_event_list *>, or NULL if "
"there was an error.  I<The caller must call "
"C<guestfs_free_inotify_event_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2494
msgid "guestfs_inotify_rm_watch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2496
#, no-wrap
msgid ""
" int\n"
" guestfs_inotify_rm_watch (guestfs_h *g,\n"
"                           int wd);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2500
msgid ""
"Remove a previously defined inotify watch.  See "
"C<guestfs_inotify_add_watch>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2507
msgid "guestfs_inspect_get_arch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2509
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_arch (guestfs_h *g,\n"
"                           const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2513 ../src/guestfs-actions.pod:2536 ../src/guestfs-actions.pod:2629 ../src/guestfs-actions.pod:2673 ../src/guestfs-actions.pod:2699 ../src/guestfs-actions.pod:2738 ../src/guestfs-actions.pod:2760 ../src/guestfs-actions.pod:2787 ../src/guestfs-actions.pod:2808 ../src/guestfs-actions.pod:2851 ../src/guestfs-actions.pod:2880 ../src/guestfs-actions.pod:2911 ../src/guestfs-actions.pod:2935 ../src/guestfs-actions.pod:2990 ../src/guestfs-actions.pod:3032 ../src/guestfs-actions.pod:3053 ../src/guestfs-actions.pod:3076 ../src/guestfs-actions.pod:3093 ../src/guestfs-actions.pod:3110 ../src/guestfs-actions.pod:3129
msgid ""
"This function should only be called with a root device string as returned by "
"C<guestfs_inspect_os>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2516
msgid ""
"This returns the architecture of the inspected operating system.  The "
"possible return values are listed under C<guestfs_file_architecture>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2520 ../fish/guestfish-actions.pod:1692
msgid ""
"If the architecture could not be determined, then the string C<unknown> is "
"returned."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2523 ../src/guestfs-actions.pod:2616 ../src/guestfs-actions.pod:2727 ../src/guestfs-actions.pod:2747 ../src/guestfs-actions.pod:2775 ../src/guestfs-actions.pod:2867 ../src/guestfs-actions.pod:2898 ../src/guestfs-actions.pod:2922 ../src/guestfs-actions.pod:2976 ../src/guestfs-actions.pod:3019 ../src/guestfs-actions.pod:3042 ../src/guestfs-actions.pod:3063 ../src/guestfs-actions.pod:3083 ../src/guestfs-actions.pod:3100 ../src/guestfs-actions.pod:3119 ../src/guestfs-actions.pod:3222 ../src/guestfs-actions.pod:3263 ../fish/guestfish-actions.pod:1695 ../fish/guestfish-actions.pod:1781 ../fish/guestfish-actions.pod:1869 ../fish/guestfish-actions.pod:1884 ../fish/guestfish-actions.pod:1905 ../fish/guestfish-actions.pod:1975 ../fish/guestfish-actions.pod:1999 ../fish/guestfish-actions.pod:2016 ../fish/guestfish-actions.pod:2059 ../fish/guestfish-actions.pod:2094 ../fish/guestfish-actions.pod:2110 ../fish/guestfish-actions.pod:2126 ../fish/guestfish-actions.pod:2139 ../fish/guestfish-actions.pod:2152 ../fish/guestfish-actions.pod:2167 ../fish/guestfish-actions.pod:2266 ../fish/guestfish-actions.pod:2300
msgid "Please read L<guestfs(3)/INSPECTION> for more details."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2530
msgid "guestfs_inspect_get_distro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2532
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_distro (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2539 ../fish/guestfish-actions.pod:1704
msgid "This returns the distro (distribution) of the inspected operating system."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2542 ../fish/guestfish-actions.pod:1707
msgid "Currently defined distros are:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2546 ../fish/guestfish-actions.pod:1711
msgid "\"archlinux\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2548 ../fish/guestfish-actions.pod:1713
msgid "Arch Linux."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2550 ../fish/guestfish-actions.pod:1715
msgid "\"centos\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2552 ../fish/guestfish-actions.pod:1717
msgid "CentOS."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2554 ../fish/guestfish-actions.pod:1719
msgid "\"debian\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2556 ../fish/guestfish-actions.pod:1721
msgid "Debian."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2558 ../fish/guestfish-actions.pod:1723
msgid "\"fedora\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2560 ../fish/guestfish-actions.pod:1725
msgid "Fedora."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2562 ../fish/guestfish-actions.pod:1727
msgid "\"gentoo\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2564 ../fish/guestfish-actions.pod:1729
msgid "Gentoo."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2566 ../fish/guestfish-actions.pod:1731
msgid "\"linuxmint\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2568 ../fish/guestfish-actions.pod:1733
msgid "Linux Mint."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2570 ../fish/guestfish-actions.pod:1735
msgid "\"mandriva\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2572 ../fish/guestfish-actions.pod:1737
msgid "Mandriva."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2574 ../fish/guestfish-actions.pod:1739
msgid "\"meego\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2576 ../fish/guestfish-actions.pod:1741
msgid "MeeGo."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2578 ../fish/guestfish-actions.pod:1743
msgid "\"pardus\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2580 ../fish/guestfish-actions.pod:1745
msgid "Pardus."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2582 ../fish/guestfish-actions.pod:1747
msgid "\"redhat-based\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2584 ../fish/guestfish-actions.pod:1749
msgid "Some Red Hat-derived distro."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2586 ../fish/guestfish-actions.pod:1751
msgid "\"rhel\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2588 ../fish/guestfish-actions.pod:1753
msgid "Red Hat Enterprise Linux."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2590 ../fish/guestfish-actions.pod:1755
msgid "\"scientificlinux\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2592 ../fish/guestfish-actions.pod:1757
msgid "Scientific Linux."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2594 ../fish/guestfish-actions.pod:1759
msgid "\"slackware\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2596 ../fish/guestfish-actions.pod:1761
msgid "Slackware."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2598 ../fish/guestfish-actions.pod:1763
msgid "\"ubuntu\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2600 ../fish/guestfish-actions.pod:1765
msgid "Ubuntu."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2602 ../src/guestfs-actions.pod:2718 ../src/guestfs-actions.pod:3010 ../fish/guestfish-actions.pod:1767 ../fish/guestfish-actions.pod:1860 ../fish/guestfish-actions.pod:2085
msgid "\"unknown\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2604 ../fish/guestfish-actions.pod:1769
msgid "The distro could not be determined."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2606 ../src/guestfs-actions.pod:3002 ../fish/guestfish-actions.pod:1771 ../fish/guestfish-actions.pod:2077
msgid "\"windows\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2608 ../fish/guestfish-actions.pod:1773
msgid ""
"Windows does not have distributions.  This string is returned if the OS type "
"is Windows."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2613 ../src/guestfs-actions.pod:2724 ../src/guestfs-actions.pod:3016 ../fish/guestfish-actions.pod:1778 ../fish/guestfish-actions.pod:1866 ../fish/guestfish-actions.pod:2091
msgid ""
"Future versions of libguestfs may return other strings here.  The caller "
"should be prepared to handle any string."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2623
msgid "guestfs_inspect_get_drive_mappings"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2625
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_drive_mappings (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2632 ../fish/guestfish-actions.pod:1790
msgid ""
"This call is useful for Windows which uses a primitive system of assigning "
"drive letters (like \"C:\") to partitions.  This inspection API examines the "
"Windows Registry to find out how disks/partitions are mapped to drive "
"letters, and returns a hash table as in the example below:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2638 ../fish/guestfish-actions.pod:1796
#, no-wrap
msgid ""
" C      =>     /dev/vda2\n"
" E      =>     /dev/vdb1\n"
" F      =>     /dev/vdc1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2642 ../fish/guestfish-actions.pod:1800
msgid ""
"Note that keys are drive letters.  For Windows, the key is case insensitive "
"and just contains the drive letter, without the customary colon separator "
"character."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2646 ../fish/guestfish-actions.pod:1804
msgid ""
"In future we may support other operating systems that also used drive "
"letters, but the keys for those might not be case insensitive and might be "
"longer than 1 character.  For example in OS-9, hard drives were named C<h0>, "
"C<h1> etc."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2651 ../fish/guestfish-actions.pod:1809
msgid ""
"For Windows guests, currently only hard drive mappings are returned.  "
"Removable disks (eg. DVD-ROMs) are ignored."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2654 ../fish/guestfish-actions.pod:1812
msgid ""
"For guests that do not use drive mappings, or if the drive mappings could "
"not be determined, this returns an empty hash table."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2657
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_mountpoints>, C<guestfs_inspect_get_filesystems>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2661 ../src/guestfs-actions.pod:2837 ../src/guestfs-actions.pod:3597 ../src/guestfs-actions.pod:4814 ../src/guestfs-actions.pod:6747
msgid ""
"This function returns a NULL-terminated array of strings, or NULL if there "
"was an error.  The array of strings will always have length C<2n+1>, where "
"C<n> keys and values alternate, followed by the trailing NULL entry.  I<The "
"caller must free the strings and the array after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2667
msgid "guestfs_inspect_get_filesystems"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2669
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_filesystems (guestfs_h *g,\n"
"                                  const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2676 ../fish/guestfish-actions.pod:1826
msgid ""
"This returns a list of all the filesystems that we think are associated with "
"this operating system.  This includes the root filesystem, other ordinary "
"filesystems, and non-mounted devices like swap partitions."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2681 ../fish/guestfish-actions.pod:1831
msgid ""
"In the case of a multi-boot virtual machine, it is possible for a filesystem "
"to be shared between operating systems."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2684
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_mountpoints>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2693
msgid "guestfs_inspect_get_format"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2695
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_format (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2702 ../fish/guestfish-actions.pod:1844
msgid ""
"This returns the format of the inspected operating system.  You can use it "
"to detect install images, live CDs and similar."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2705 ../fish/guestfish-actions.pod:1847
msgid "Currently defined formats are:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2709 ../fish/guestfish-actions.pod:1851
msgid "\"installed\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2711 ../fish/guestfish-actions.pod:1853
msgid "This is an installed operating system."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2713 ../fish/guestfish-actions.pod:1855
msgid "\"installer\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2715 ../fish/guestfish-actions.pod:1857
msgid ""
"The disk image being inspected is not an installed operating system, but a "
"I<bootable> install disk, live CD, or similar."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2720 ../fish/guestfish-actions.pod:1862
msgid "The format of this disk image is not known."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2732
msgid "guestfs_inspect_get_hostname"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2734
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_hostname (guestfs_h *g,\n"
"                               const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2741 ../fish/guestfish-actions.pod:1878
msgid ""
"This function returns the hostname of the operating system as found by "
"inspection of the guest's configuration files."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2744 ../fish/guestfish-actions.pod:1881
msgid ""
"If the hostname could not be determined, then the string C<unknown> is "
"returned."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2752
msgid "(Added in 1.7.9)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2754
msgid "guestfs_inspect_get_major_version"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2756
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_get_major_version (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2763 ../fish/guestfish-actions.pod:1893
msgid "This returns the major version number of the inspected operating system."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2766 ../fish/guestfish-actions.pod:1896
msgid ""
"Windows uses a consistent versioning scheme which is I<not> reflected in the "
"popular public names used by the operating system.  Notably the operating "
"system known as \"Windows 7\" is really version 6.1 (ie. major = 6, minor = "
"1).  You can find out the real versions corresponding to releases of Windows "
"by consulting Wikipedia or MSDN."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2773 ../src/guestfs-actions.pod:2793 ../fish/guestfish-actions.pod:1903 ../fish/guestfish-actions.pod:1917
msgid "If the version could not be determined, then C<0> is returned."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2781
msgid "guestfs_inspect_get_minor_version"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2783
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_get_minor_version (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2790 ../fish/guestfish-actions.pod:1914
msgid "This returns the minor version number of the inspected operating system."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2795
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_major_version>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2802
msgid "guestfs_inspect_get_mountpoints"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2804
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_mountpoints (guestfs_h *g,\n"
"                                  const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2811 ../fish/guestfish-actions.pod:1929
msgid ""
"This returns a hash of where we think the filesystems associated with this "
"operating system should be mounted.  Callers should note that this is at "
"best an educated guess made by reading configuration files such as "
"C</etc/fstab>.  I<In particular note> that this may return filesystems which "
"are non-existent or not mountable and callers should be prepared to handle "
"or ignore failures if they try to mount them."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2820 ../fish/guestfish-actions.pod:1938
msgid ""
"Each element in the returned hashtable has a key which is the path of the "
"mountpoint (eg. C</boot>) and a value which is the filesystem that would be "
"mounted there (eg. C</dev/sda1>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2825 ../fish/guestfish-actions.pod:1943
msgid "Non-mounted devices such as swap devices are I<not> returned in this list."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2828
msgid ""
"For operating systems like Windows which still use drive letters, this call "
"will only return an entry for the first drive \"mounted on\" C</>.  For "
"information about the mapping of drive letters to partitions, see "
"C<guestfs_inspect_get_drive_mappings>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2834
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_filesystems>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2845
msgid "guestfs_inspect_get_package_format"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2847
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_package_format (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2854
msgid ""
"This function and C<guestfs_inspect_get_package_management> return the "
"package format and package management tool used by the inspected operating "
"system.  For example for Fedora these functions would return C<rpm> (package "
"format) and C<yum> (package management)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2860 ../fish/guestfish-actions.pod:1968
msgid ""
"This returns the string C<unknown> if we could not determine the package "
"format I<or> if the operating system does not have a real packaging system "
"(eg. Windows)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2864 ../fish/guestfish-actions.pod:1972
msgid ""
"Possible strings include: C<rpm>, C<deb>, C<ebuild>, C<pisi>, C<pacman>.  "
"Future versions of libguestfs may return other strings."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2872 ../src/guestfs-actions.pod:2903
msgid "(Added in 1.7.5)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2874
msgid "guestfs_inspect_get_package_management"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2876
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_package_management (guestfs_h *g,\n"
"                                         const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2883
msgid ""
"C<guestfs_inspect_get_package_format> and this function return the package "
"format and package management tool used by the inspected operating system.  "
"For example for Fedora these functions would return C<rpm> (package format) "
"and C<yum> (package management)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2889 ../fish/guestfish-actions.pod:1990
msgid ""
"This returns the string C<unknown> if we could not determine the package "
"management tool I<or> if the operating system does not have a real packaging "
"system (eg. Windows)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2893 ../fish/guestfish-actions.pod:1994
msgid ""
"Possible strings include: C<yum>, C<up2date>, C<apt> (for all Debian "
"derivatives), C<portage>, C<pisi>, C<pacman>, C<urpmi>.  Future versions of "
"libguestfs may return other strings."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2905
msgid "guestfs_inspect_get_product_name"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2907
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_product_name (guestfs_h *g,\n"
"                                   const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2914 ../fish/guestfish-actions.pod:2008
msgid ""
"This returns the product name of the inspected operating system.  The "
"product name is generally some freeform string which can be displayed to the "
"user, but should not be parsed by programs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2919 ../fish/guestfish-actions.pod:2013
msgid ""
"If the product name could not be determined, then the string C<unknown> is "
"returned."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2929
msgid "guestfs_inspect_get_product_variant"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2931
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_product_variant (guestfs_h *g,\n"
"                                      const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2938 ../fish/guestfish-actions.pod:2025
msgid "This returns the product variant of the inspected operating system."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2941 ../fish/guestfish-actions.pod:2028
msgid ""
"For Windows guests, this returns the contents of the Registry key "
"C<HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion> C<InstallationType> "
"which is usually a string such as C<Client> or C<Server> (other values are "
"possible).  This can be used to distinguish consumer and enterprise versions "
"of Windows that have the same version number (for example, Windows 7 and "
"Windows 2008 Server are both version 6.1, but the former is C<Client> and "
"the latter is C<Server>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2950 ../fish/guestfish-actions.pod:2037
msgid ""
"For enterprise Linux guests, in future we intend this to return the product "
"variant such as C<Desktop>, C<Server> and so on.  But this is not "
"implemented at present."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2954 ../fish/guestfish-actions.pod:2041
msgid ""
"If the product variant could not be determined, then the string C<unknown> "
"is returned."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2957
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_product_name>, C<guestfs_inspect_get_major_version>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2964
msgid "guestfs_inspect_get_roots"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2966
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_roots (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2969
msgid ""
"This function is a convenient way to get the list of root devices, as "
"returned from a previous call to C<guestfs_inspect_os>, but without redoing "
"the whole inspection process."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2973
msgid ""
"This returns an empty list if either no root devices were found or the "
"caller has not called C<guestfs_inspect_os>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2982
msgid "(Added in 1.7.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2984
msgid "guestfs_inspect_get_type"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2986
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_type (guestfs_h *g,\n"
"                           const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2993 ../fish/guestfish-actions.pod:2068
msgid ""
"This returns the type of the inspected operating system.  Currently defined "
"types are:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:2998 ../fish/guestfish-actions.pod:2073
msgid "\"linux\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3000 ../fish/guestfish-actions.pod:2075
msgid "Any Linux-based operating system."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3004 ../fish/guestfish-actions.pod:2079
msgid "Any Microsoft Windows operating system."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3006 ../fish/guestfish-actions.pod:2081
msgid "\"freebsd\""
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3008 ../fish/guestfish-actions.pod:2083
msgid "FreeBSD."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3012 ../fish/guestfish-actions.pod:2087
msgid "The operating system type could not be determined."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3026
msgid "guestfs_inspect_get_windows_current_control_set"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3028
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_windows_current_control_set (guestfs_h *g,\n"
"                                                  const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3035 ../fish/guestfish-actions.pod:2103
msgid ""
"This returns the Windows CurrentControlSet of the inspected guest.  The "
"CurrentControlSet is a registry key name such as C<ControlSet001>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3038 ../fish/guestfish-actions.pod:2106
msgid ""
"This call assumes that the guest is Windows and that the Registry could be "
"examined by inspection.  If this is not the case then an error is returned."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3047
msgid "guestfs_inspect_get_windows_systemroot"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3049
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_windows_systemroot (guestfs_h *g,\n"
"                                         const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3056 ../fish/guestfish-actions.pod:2119
msgid ""
"This returns the Windows systemroot of the inspected guest.  The systemroot "
"is a directory path such as C</WINDOWS>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3059 ../fish/guestfish-actions.pod:2122
msgid ""
"This call assumes that the guest is Windows and that the systemroot could be "
"determined by inspection.  If this is not the case then an error is "
"returned."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3068
msgid "(Added in 1.5.25)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3070
msgid "guestfs_inspect_is_live"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3072
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_is_live (guestfs_h *g,\n"
"                          const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3079
msgid ""
"If C<guestfs_inspect_get_format> returns C<installer> (this is an install "
"disk), then this returns true if a live image was detected on the disk."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3087
msgid "guestfs_inspect_is_multipart"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3089
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_is_multipart (guestfs_h *g,\n"
"                               const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3096
msgid ""
"If C<guestfs_inspect_get_format> returns C<installer> (this is an install "
"disk), then this returns true if the disk is part of a set."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3104
msgid "guestfs_inspect_is_netinst"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3106
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_is_netinst (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3113
msgid ""
"If C<guestfs_inspect_get_format> returns C<installer> (this is an install "
"disk), then this returns true if the disk is a network installer, ie. not a "
"self-contained install CD but one which is likely to require network access "
"to complete the install."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3123
msgid "guestfs_inspect_list_applications"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3125
#, no-wrap
msgid ""
" struct guestfs_application_list *\n"
" guestfs_inspect_list_applications (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3132 ../fish/guestfish-actions.pod:2176
msgid "Return the list of applications installed in the operating system."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3134
msgid ""
"I<Note:> This call works differently from other parts of the inspection "
"API.  You have to call C<guestfs_inspect_os>, then "
"C<guestfs_inspect_get_mountpoints>, then mount up the disks, before calling "
"this.  Listing applications is a significantly more difficult operation "
"which requires access to the full filesystem.  Also note that unlike the "
"other C<guestfs_inspect_get_*> calls which are just returning data cached in "
"the libguestfs handle, this call actually reads parts of the mounted "
"filesystems during the call."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3144 ../fish/guestfish-actions.pod:2188
msgid ""
"This returns an empty list if the inspection code was not able to determine "
"the list of applications."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3147 ../fish/guestfish-actions.pod:2191
msgid "The application structure contains the following fields:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3151 ../fish/guestfish-actions.pod:2195
msgid "C<app_name>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3153 ../fish/guestfish-actions.pod:2197
msgid ""
"The name of the application.  For Red Hat-derived and Debian-derived Linux "
"guests, this is the package name."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3156 ../fish/guestfish-actions.pod:2200
msgid "C<app_display_name>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3158 ../fish/guestfish-actions.pod:2202
msgid ""
"The display name of the application, sometimes localized to the install "
"language of the guest operating system."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3161 ../fish/guestfish-actions.pod:2205
msgid ""
"If unavailable this is returned as an empty string C<\"\">.  Callers needing "
"to display something can use C<app_name> instead."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3164 ../fish/guestfish-actions.pod:2208
msgid "C<app_epoch>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3166 ../fish/guestfish-actions.pod:2210
msgid ""
"For package managers which use epochs, this contains the epoch of the "
"package (an integer).  If unavailable, this is returned as C<0>."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3169 ../fish/guestfish-actions.pod:2213
msgid "C<app_version>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3171 ../fish/guestfish-actions.pod:2215
msgid ""
"The version string of the application or package.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3174 ../fish/guestfish-actions.pod:2218
msgid "C<app_release>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3176 ../fish/guestfish-actions.pod:2220
msgid ""
"The release string of the application or package, for package managers that "
"use this.  If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3180 ../fish/guestfish-actions.pod:2224
msgid "C<app_install_path>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3182 ../fish/guestfish-actions.pod:2226
msgid ""
"The installation path of the application (on operating systems such as "
"Windows which use installation paths).  This path is in the format used by "
"the guest operating system, it is not a libguestfs path."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3187 ../fish/guestfish-actions.pod:2231
msgid "If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3189 ../fish/guestfish-actions.pod:2233
msgid "C<app_trans_path>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3191 ../fish/guestfish-actions.pod:2235
msgid ""
"The install path translated into a libguestfs path.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3194 ../fish/guestfish-actions.pod:2238
msgid "C<app_publisher>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3196 ../fish/guestfish-actions.pod:2240
msgid ""
"The name of the publisher of the application, for package managers that use "
"this.  If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3200 ../fish/guestfish-actions.pod:2244
msgid "C<app_url>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3202 ../fish/guestfish-actions.pod:2246
msgid ""
"The URL (eg. upstream URL) of the application.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3205 ../fish/guestfish-actions.pod:2249
msgid "C<app_source_package>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3207 ../fish/guestfish-actions.pod:2251
msgid ""
"For packaging systems which support this, the name of the source package.  "
"If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3210 ../fish/guestfish-actions.pod:2254
msgid "C<app_summary>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3212 ../fish/guestfish-actions.pod:2256
msgid ""
"A short (usually one line) description of the application or package.  If "
"unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:3215 ../fish/guestfish-actions.pod:2259
msgid "C<app_description>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3217 ../fish/guestfish-actions.pod:2261
msgid ""
"A longer description of the application or package.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3224
msgid ""
"This function returns a C<struct guestfs_application_list *>, or NULL if "
"there was an error.  I<The caller must call C<guestfs_free_application_list> "
"after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3228
msgid "(Added in 1.7.8)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3230
msgid "guestfs_inspect_os"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3232
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_os (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3235 ../fish/guestfish-actions.pod:2272
msgid ""
"This function uses other libguestfs functions and certain heuristics to "
"inspect the disk(s) (usually disks belonging to a virtual machine), looking "
"for operating systems."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3239 ../fish/guestfish-actions.pod:2276
msgid "The list returned is empty if no operating systems were found."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3241 ../fish/guestfish-actions.pod:2278
msgid ""
"If one operating system was found, then this returns a list with a single "
"element, which is the name of the root filesystem of this operating system.  "
"It is also possible for this function to return a list containing more than "
"one element, indicating a dual-boot or multi-boot virtual machine, with each "
"element being the root filesystem of one of the operating systems."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3248
msgid ""
"You can pass the root string(s) returned to other C<guestfs_inspect_get_*> "
"functions in order to query further information about each operating system, "
"such as the name and version."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3253
msgid ""
"This function uses other libguestfs features such as C<guestfs_mount_ro> and "
"C<guestfs_umount_all> in order to mount and unmount filesystems and look at "
"the contents.  This should be called with no disks currently mounted.  The "
"function may also use Augeas, so any existing Augeas handle will be closed."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3259 ../fish/guestfish-actions.pod:2296
msgid ""
"This function cannot decrypt encrypted disks.  The caller must do that first "
"(supplying the necessary keys) if the disk is encrypted."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3265 ../src/guestfs-actions.pod:3555 ../src/guestfs-actions.pod:3617
msgid "See also C<guestfs_list_filesystems>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3273
msgid "guestfs_is_blockdev"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3275
#, no-wrap
msgid ""
" int\n"
" guestfs_is_blockdev (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3279 ../fish/guestfish-actions.pod:2308
msgid ""
"This returns C<true> if and only if there is a block device with the given "
"C<path> name."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3282 ../src/guestfs-actions.pod:3311 ../src/guestfs-actions.pod:3341 ../src/guestfs-actions.pod:3356 ../src/guestfs-actions.pod:3372 ../src/guestfs-actions.pod:3428 ../src/guestfs-actions.pod:3443
msgid "See also C<guestfs_stat>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3286 ../src/guestfs-actions.pod:3315 ../src/guestfs-actions.pod:3360 ../src/guestfs-actions.pod:3432 ../src/guestfs-actions.pod:3447
msgid "(Added in 1.5.10)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3288
msgid "guestfs_is_busy"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3290
#, no-wrap
msgid ""
" int\n"
" guestfs_is_busy (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3293 ../fish/guestfish-actions.pod:2317
msgid ""
"This returns true iff this handle is busy processing a command (in the "
"C<BUSY> state)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3302
msgid "guestfs_is_chardev"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3304
#, no-wrap
msgid ""
" int\n"
" guestfs_is_chardev (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3308 ../fish/guestfish-actions.pod:2326
msgid ""
"This returns C<true> if and only if there is a character device with the "
"given C<path> name."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3317
msgid "guestfs_is_config"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3319
#, no-wrap
msgid ""
" int\n"
" guestfs_is_config (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3322 ../fish/guestfish-actions.pod:2335
msgid ""
"This returns true iff this handle is being configured (in the C<CONFIG> "
"state)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3331
msgid "guestfs_is_dir"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3333
#, no-wrap
msgid ""
" int\n"
" guestfs_is_dir (guestfs_h *g,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3337 ../fish/guestfish-actions.pod:2344
msgid ""
"This returns C<true> if and only if there is a directory with the given "
"C<path> name.  Note that it returns false for other objects like files."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3347
msgid "guestfs_is_fifo"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3349
#, no-wrap
msgid ""
" int\n"
" guestfs_is_fifo (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3353 ../fish/guestfish-actions.pod:2354
msgid ""
"This returns C<true> if and only if there is a FIFO (named pipe)  with the "
"given C<path> name."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3362
msgid "guestfs_is_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3364
#, no-wrap
msgid ""
" int\n"
" guestfs_is_file (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3368 ../fish/guestfish-actions.pod:2363
msgid ""
"This returns C<true> if and only if there is a regular file with the given "
"C<path> name.  Note that it returns false for other objects like "
"directories."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3378
msgid "guestfs_is_launching"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3380
#, no-wrap
msgid ""
" int\n"
" guestfs_is_launching (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3383 ../fish/guestfish-actions.pod:2373
msgid ""
"This returns true iff this handle is launching the subprocess (in the "
"C<LAUNCHING> state)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3392
msgid "guestfs_is_lv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3394
#, no-wrap
msgid ""
" int\n"
" guestfs_is_lv (guestfs_h *g,\n"
"                const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3398 ../fish/guestfish-actions.pod:2382
msgid ""
"This command tests whether C<device> is a logical volume, and returns true "
"iff this is the case."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3405
msgid "guestfs_is_ready"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3407
#, no-wrap
msgid ""
" int\n"
" guestfs_is_ready (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3410 ../fish/guestfish-actions.pod:2389
msgid ""
"This returns true iff this handle is ready to accept commands (in the "
"C<READY> state)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3419
msgid "guestfs_is_socket"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3421
#, no-wrap
msgid ""
" int\n"
" guestfs_is_socket (guestfs_h *g,\n"
"                    const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3425 ../fish/guestfish-actions.pod:2398
msgid ""
"This returns C<true> if and only if there is a Unix domain socket with the "
"given C<path> name."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3434
msgid "guestfs_is_symlink"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3436
#, no-wrap
msgid ""
" int\n"
" guestfs_is_symlink (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3440 ../fish/guestfish-actions.pod:2407
msgid ""
"This returns C<true> if and only if there is a symbolic link with the given "
"C<path> name."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3449
msgid "guestfs_kill_subprocess"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3451
#, no-wrap
msgid ""
" int\n"
" guestfs_kill_subprocess (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3454 ../fish/guestfish-actions.pod:2416
msgid "This kills the qemu subprocess.  You should never need to call this."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3460
msgid "guestfs_launch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3462
#, no-wrap
msgid ""
" int\n"
" guestfs_launch (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3465 ../fish/guestfish-actions.pod:2424
msgid ""
"Internally libguestfs is implemented by running a virtual machine using "
"L<qemu(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3468 ../fish/guestfish-actions.pod:2427
msgid ""
"You should call this after configuring the handle (eg. adding drives) but "
"before performing any actions."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3480
msgid "guestfs_lchown"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3482
#, no-wrap
msgid ""
" int\n"
" guestfs_lchown (guestfs_h *g,\n"
"                 int owner,\n"
"                 int group,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3488
msgid ""
"Change the file owner to C<owner> and group to C<group>.  This is like "
"C<guestfs_chown> but if C<path> is a symlink then the link itself is "
"changed, not the target."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3500
msgid "guestfs_lgetxattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3502
#, no-wrap
msgid ""
" char *\n"
" guestfs_lgetxattr (guestfs_h *g,\n"
"                    const char *path,\n"
"                    const char *name,\n"
"                    size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3508 ../fish/guestfish-actions.pod:2446
msgid ""
"Get a single extended attribute from file C<path> named C<name>.  If C<path> "
"is a symlink, then this call returns an extended attribute from the symlink."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3522
msgid "See also: C<guestfs_lgetxattrs>, C<guestfs_getxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3530
msgid "guestfs_lgetxattrs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3532
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_lgetxattrs (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3536
msgid ""
"This is the same as C<guestfs_getxattrs>, but if C<path> is a symbolic link, "
"then it returns the extended attributes of the link itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3546
msgid "guestfs_list_devices"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3548
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_devices (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3551 ../fish/guestfish-actions.pod:2474
msgid "List all the block devices."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3553 ../fish/guestfish-actions.pod:2476
msgid "The full block device names are returned, eg. C</dev/sda>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3563
msgid "guestfs_list_filesystems"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3565
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_filesystems (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3568 ../fish/guestfish-actions.pod:2484
msgid ""
"This inspection command looks for filesystems on partitions, block devices "
"and logical volumes, returning a list of devices containing filesystems and "
"their type."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3572 ../fish/guestfish-actions.pod:2488
msgid ""
"The return value is a hash, where the keys are the devices containing "
"filesystems, and the values are the filesystem types.  For example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3576 ../fish/guestfish-actions.pod:2492
#, no-wrap
msgid ""
" \"/dev/sda1\" => \"ntfs\"\n"
" \"/dev/sda2\" => \"ext2\"\n"
" \"/dev/vg_guest/lv_root\" => \"ext4\"\n"
" \"/dev/vg_guest/lv_swap\" => \"swap\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3581 ../fish/guestfish-actions.pod:2497
msgid ""
"The value can have the special value \"unknown\", meaning the content of the "
"device is undetermined or empty.  \"swap\" means a Linux swap partition."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3585
msgid ""
"This command runs other libguestfs commands, which might include "
"C<guestfs_mount> and C<guestfs_umount>, and therefore you should use this "
"soon after launch and only when nothing is mounted."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3589
msgid ""
"Not all of the filesystems returned will be mountable.  In particular, swap "
"partitions are returned in the list.  Also this command does not check that "
"each filesystem found is valid and mountable, and some filesystems might be "
"mountable but require special options.  Filesystems may not all belong to a "
"single logical operating system (use C<guestfs_inspect_os> to look for "
"OSes)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3603 ../src/guestfs-actions.pod:5215
msgid "(Added in 1.5.15)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3605
msgid "guestfs_list_partitions"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3607
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_partitions (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3610 ../fish/guestfish-actions.pod:2517
msgid "List all the partitions detected on all block devices."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3612 ../fish/guestfish-actions.pod:2519
msgid "The full partition device names are returned, eg. C</dev/sda1>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3614
msgid ""
"This does not return logical volumes.  For that you will need to call "
"C<guestfs_lvs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3625
msgid "guestfs_ll"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3627
#, no-wrap
msgid ""
" char *\n"
" guestfs_ll (guestfs_h *g,\n"
"             const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3631 ../fish/guestfish-actions.pod:2530
msgid ""
"List the files in C<directory> (relative to the root directory, there is no "
"cwd) in the format of 'ls -la'."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3634 ../fish/guestfish-actions.pod:2533
msgid ""
"This command is mostly useful for interactive sessions.  It is I<not> "
"intended that you try to parse the output string."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3642
msgid "guestfs_ln"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3644
#, no-wrap
msgid ""
" int\n"
" guestfs_ln (guestfs_h *g,\n"
"             const char *target,\n"
"             const char *linkname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3649 ../fish/guestfish-actions.pod:2540
msgid "This command creates a hard link using the C<ln> command."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3655
msgid "guestfs_ln_f"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3657
#, no-wrap
msgid ""
" int\n"
" guestfs_ln_f (guestfs_h *g,\n"
"               const char *target,\n"
"               const char *linkname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3662 ../fish/guestfish-actions.pod:2546
msgid ""
"This command creates a hard link using the C<ln -f> command.  The I<-f> "
"option removes the link (C<linkname>) if it exists already."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3669
msgid "guestfs_ln_s"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3671
#, no-wrap
msgid ""
" int\n"
" guestfs_ln_s (guestfs_h *g,\n"
"               const char *target,\n"
"               const char *linkname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3676 ../fish/guestfish-actions.pod:2553
msgid "This command creates a symbolic link using the C<ln -s> command."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3682
msgid "guestfs_ln_sf"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3684
#, no-wrap
msgid ""
" int\n"
" guestfs_ln_sf (guestfs_h *g,\n"
"                const char *target,\n"
"                const char *linkname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3689 ../fish/guestfish-actions.pod:2559
msgid ""
"This command creates a symbolic link using the C<ln -sf> command, The I<-f> "
"option removes the link (C<linkname>) if it exists already."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3696
msgid "guestfs_lremovexattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3698
#, no-wrap
msgid ""
" int\n"
" guestfs_lremovexattr (guestfs_h *g,\n"
"                       const char *xattr,\n"
"                       const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3703
msgid ""
"This is the same as C<guestfs_removexattr>, but if C<path> is a symbolic "
"link, then it removes an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3711
msgid "guestfs_ls"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3713
#, no-wrap
msgid ""
" char **\n"
" guestfs_ls (guestfs_h *g,\n"
"             const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3717 ../fish/guestfish-actions.pod:2574
msgid ""
"List the files in C<directory> (relative to the root directory, there is no "
"cwd).  The '.' and '..' entries are not returned, but hidden files are "
"shown."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3721
msgid ""
"This command is mostly useful for interactive sessions.  Programs should "
"probably use C<guestfs_readdir> instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3730
msgid "guestfs_lsetxattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3732
#, no-wrap
msgid ""
" int\n"
" guestfs_lsetxattr (guestfs_h *g,\n"
"                    const char *xattr,\n"
"                    const char *val,\n"
"                    int vallen,\n"
"                    const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3739
msgid ""
"This is the same as C<guestfs_setxattr>, but if C<path> is a symbolic link, "
"then it sets an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3747
msgid "guestfs_lstat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3749
#, no-wrap
msgid ""
" struct guestfs_stat *\n"
" guestfs_lstat (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3753 ../src/guestfs-actions.pod:6346 ../fish/guestfish-actions.pod:2593 ../fish/guestfish-actions.pod:4297
msgid "Returns file information for the given C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3755
msgid ""
"This is the same as C<guestfs_stat> except that if C<path> is a symbolic "
"link, then the link is stat-ed, not the file it refers to."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3759 ../fish/guestfish-actions.pod:2599
msgid "This is the same as the C<lstat(2)> system call."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3761 ../src/guestfs-actions.pod:6350
msgid ""
"This function returns a C<struct guestfs_stat *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_stat> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3765 ../src/guestfs-actions.pod:6354 ../src/guestfs-actions.pod:6372 ../src/guestfs-actions.pod:6753
msgid "(Added in 0.9.2)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3767
msgid "guestfs_lstatlist"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3769
#, no-wrap
msgid ""
" struct guestfs_stat_list *\n"
" guestfs_lstatlist (guestfs_h *g,\n"
"                    const char *path,\n"
"                    char *const *names);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3774
msgid ""
"This call allows you to perform the C<guestfs_lstat> operation on multiple "
"files, where all files are in the directory C<path>.  C<names> is the list "
"of files from this directory."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3778 ../fish/guestfish-actions.pod:2609
msgid ""
"On return you get a list of stat structs, with a one-to-one correspondence "
"to the C<names> list.  If any name did not exist or could not be lstat'd, "
"then the C<ino> field of that structure is set to C<-1>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3783
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also C<guestfs_lxattrlist> "
"for a similarly efficient call for getting extended attributes.  Very long "
"directory listings might cause the protocol message size to be exceeded, "
"causing this call to fail.  The caller must split up such requests into "
"smaller groups of names."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3791
msgid ""
"This function returns a C<struct guestfs_stat_list *>, or NULL if there was "
"an error.  I<The caller must call C<guestfs_free_stat_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3797
msgid "guestfs_luks_add_key"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3799
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_add_key (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const char *key,\n"
"                       const char *newkey,\n"
"                       int keyslot);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3806 ../fish/guestfish-actions.pod:2626
msgid ""
"This command adds a new key on LUKS device C<device>.  C<key> is any "
"existing key, and is used to access the device.  C<newkey> is the new key to "
"add.  C<keyslot> is the key slot that will be replaced."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3811
msgid ""
"Note that if C<keyslot> already contains a key, then this command will "
"fail.  You have to use C<guestfs_luks_kill_slot> first to remove that key."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3817 ../src/guestfs-actions.pod:3857 ../src/guestfs-actions.pod:3880 ../src/guestfs-actions.pod:3900 ../src/guestfs-actions.pod:3932 ../src/guestfs-actions.pod:3951
msgid ""
"This function takes a key or passphrase parameter which could contain "
"sensitive material.  Read the section L</KEYS AND PASSPHRASES> for more "
"information."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3821 ../src/guestfs-actions.pod:3861 ../src/guestfs-actions.pod:3884 ../src/guestfs-actions.pod:3904
msgid "(Added in 1.5.2)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3823
msgid "guestfs_luks_close"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3825
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_close (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3829
msgid ""
"This closes a LUKS device that was created earlier by C<guestfs_luks_open> "
"or C<guestfs_luks_open_ro>.  The C<device> parameter must be the name of the "
"LUKS mapping device (ie. C</dev/mapper/mapname>) and I<not> the name of the "
"underlying block device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3837 ../src/guestfs-actions.pod:3936 ../src/guestfs-actions.pod:3955 ../src/guestfs-actions.pod:4005 ../src/guestfs-actions.pod:4053
msgid "(Added in 1.5.1)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3839
msgid "guestfs_luks_format"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3841
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_format (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const char *key,\n"
"                      int keyslot);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3847 ../fish/guestfish-actions.pod:2652
msgid ""
"This command erases existing data on C<device> and formats the device as a "
"LUKS encrypted device.  C<key> is the initial key, which is added to key "
"slot C<slot>.  (LUKS supports 8 key slots, numbered 0-7)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3854 ../src/guestfs-actions.pod:3877 ../src/guestfs-actions.pod:4017 ../src/guestfs-actions.pod:4966 ../src/guestfs-actions.pod:5746 ../src/guestfs-actions.pod:6153 ../src/guestfs-actions.pod:6183 ../src/guestfs-actions.pod:6216 ../src/guestfs-actions.pod:7397 ../fish/guestfish-actions.pod:2660 ../fish/guestfish-actions.pod:2673 ../fish/guestfish-actions.pod:2757 ../fish/guestfish-actions.pod:3338 ../fish/guestfish-actions.pod:3858 ../fish/guestfish-actions.pod:4168 ../fish/guestfish-actions.pod:4191 ../fish/guestfish-actions.pod:4213 ../fish/guestfish-actions.pod:4942
msgid ""
"B<This command is dangerous.  Without careful use you can easily destroy all "
"your data>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3863
msgid "guestfs_luks_format_cipher"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3865
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_format_cipher (guestfs_h *g,\n"
"                             const char *device,\n"
"                             const char *key,\n"
"                             int keyslot,\n"
"                             const char *cipher);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3872
msgid ""
"This command is the same as C<guestfs_luks_format> but it also allows you to "
"set the C<cipher> used."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3886
msgid "guestfs_luks_kill_slot"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3888
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_kill_slot (guestfs_h *g,\n"
"                         const char *device,\n"
"                         const char *key,\n"
"                         int keyslot);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3894 ../fish/guestfish-actions.pod:2680
msgid ""
"This command deletes the key in key slot C<keyslot> from the encrypted LUKS "
"device C<device>.  C<key> must be one of the I<other> keys."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3906
msgid "guestfs_luks_open"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3908
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_open (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *key,\n"
"                    const char *mapname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3914 ../fish/guestfish-actions.pod:2691
msgid ""
"This command opens a block device which has been encrypted according to the "
"Linux Unified Key Setup (LUKS) standard."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3917 ../fish/guestfish-actions.pod:2694
msgid "C<device> is the encrypted block device or partition."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3919 ../fish/guestfish-actions.pod:2696
msgid ""
"The caller must supply one of the keys associated with the LUKS block "
"device, in the C<key> parameter."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3922 ../fish/guestfish-actions.pod:2699
msgid ""
"This creates a new block device called C</dev/mapper/mapname>.  Reads and "
"writes to this block device are decrypted from and encrypted to the "
"underlying C<device> respectively."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3926
msgid ""
"If this block device contains LVM volume groups, then calling "
"C<guestfs_vgscan> followed by C<guestfs_vg_activate_all> will make them "
"visible."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3938
msgid "guestfs_luks_open_ro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3940
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_open_ro (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const char *key,\n"
"                       const char *mapname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3946
msgid ""
"This is the same as C<guestfs_luks_open> except that a read-only mapping is "
"created."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3957
msgid "guestfs_lvcreate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3959
#, no-wrap
msgid ""
" int\n"
" guestfs_lvcreate (guestfs_h *g,\n"
"                   const char *logvol,\n"
"                   const char *volgroup,\n"
"                   int mbytes);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3965 ../fish/guestfish-actions.pod:2724
msgid ""
"This creates an LVM logical volume called C<logvol> on the volume group "
"C<volgroup>, with C<size> megabytes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3972
msgid "guestfs_lvm_canonical_lv_name"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3974
#, no-wrap
msgid ""
" char *\n"
" guestfs_lvm_canonical_lv_name (guestfs_h *g,\n"
"                                const char *lvname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3978 ../fish/guestfish-actions.pod:2731
msgid ""
"This converts alternative naming schemes for LVs that you might find to the "
"canonical name.  For example, C</dev/mapper/VG-LV> is converted to "
"C</dev/VG/LV>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3982 ../fish/guestfish-actions.pod:2735
msgid ""
"This command returns an error if the C<lvname> parameter does not refer to a "
"logical volume."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3985
msgid "See also C<guestfs_is_lv>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3990
msgid "(Added in 1.5.24)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3992
msgid "guestfs_lvm_clear_filter"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3994
#, no-wrap
msgid ""
" int\n"
" guestfs_lvm_clear_filter (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3997
msgid ""
"This undoes the effect of C<guestfs_lvm_set_filter>.  LVM will be able to "
"see every block device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4000 ../src/guestfs-actions.pod:4042 ../fish/guestfish-actions.pod:2747 ../fish/guestfish-actions.pod:2778
msgid "This command also clears the LVM cache and performs a volume group scan."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4007
msgid "guestfs_lvm_remove_all"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4009
#, no-wrap
msgid ""
" int\n"
" guestfs_lvm_remove_all (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4012 ../fish/guestfish-actions.pod:2754
msgid ""
"This command removes all LVM logical volumes, volume groups and physical "
"volumes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4022
msgid "guestfs_lvm_set_filter"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4024
#, no-wrap
msgid ""
" int\n"
" guestfs_lvm_set_filter (guestfs_h *g,\n"
"                         char *const *devices);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4028 ../fish/guestfish-actions.pod:2764
msgid ""
"This sets the LVM device filter so that LVM will only be able to \"see\" the "
"block devices in the list C<devices>, and will ignore all other attached "
"block devices."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4032 ../fish/guestfish-actions.pod:2768
msgid ""
"Where disk image(s) contain duplicate PVs or VGs, this command is useful to "
"get LVM to ignore the duplicates, otherwise LVM can get confused.  Note also "
"there are two types of duplication possible: either cloned PVs/VGs which "
"have identical UUIDs; or VGs that are not cloned but just happen to have the "
"same name.  In normal operation you cannot create this situation, but you "
"can do it outside LVM, eg.  by cloning disk images or by bit twiddling "
"inside the LVM metadata."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4045 ../fish/guestfish-actions.pod:2781
msgid "You can filter whole block devices or individual partitions."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4047 ../fish/guestfish-actions.pod:2783
msgid ""
"You cannot use this if any VG is currently in use (eg.  contains a mounted "
"filesystem), even if you are not filtering out that VG."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4055
msgid "guestfs_lvremove"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4057
#, no-wrap
msgid ""
" int\n"
" guestfs_lvremove (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4061 ../fish/guestfish-actions.pod:2791
msgid ""
"Remove an LVM logical volume C<device>, where C<device> is the path to the "
"LV, such as C</dev/VG/LV>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4064 ../fish/guestfish-actions.pod:2794
msgid ""
"You can also remove all LVs in a volume group by specifying the VG name, "
"C</dev/VG>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4069 ../src/guestfs-actions.pod:5312 ../src/guestfs-actions.pod:7129
msgid "(Added in 1.0.13)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4071
msgid "guestfs_lvrename"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4073
#, no-wrap
msgid ""
" int\n"
" guestfs_lvrename (guestfs_h *g,\n"
"                   const char *logvol,\n"
"                   const char *newlogvol);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4078 ../fish/guestfish-actions.pod:2801
msgid "Rename a logical volume C<logvol> with the new name C<newlogvol>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4082 ../src/guestfs-actions.pod:7142
msgid "(Added in 1.0.83)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4084
msgid "guestfs_lvresize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4086
#, no-wrap
msgid ""
" int\n"
" guestfs_lvresize (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int mbytes);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4091 ../fish/guestfish-actions.pod:2807
msgid ""
"This resizes (expands or shrinks) an existing LVM logical volume to "
"C<mbytes>.  When reducing, data in the reduced part is lost."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4099
msgid "guestfs_lvresize_free"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4101
#, no-wrap
msgid ""
" int\n"
" guestfs_lvresize_free (guestfs_h *g,\n"
"                        const char *lv,\n"
"                        int percent);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4106 ../fish/guestfish-actions.pod:2815
msgid ""
"This expands an existing logical volume C<lv> so that it fills C<pc>% of the "
"remaining free space in the volume group.  Commonly you would call this with "
"pc = 100 which expands the logical volume as much as possible, using all "
"remaining free space in the volume group."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4114
msgid "(Added in 1.3.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4116
msgid "guestfs_lvs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4118
#, no-wrap
msgid ""
" char **\n"
" guestfs_lvs (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4121 ../fish/guestfish-actions.pod:2825
msgid ""
"List all the logical volumes detected.  This is the equivalent of the "
"L<lvs(8)> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4124 ../fish/guestfish-actions.pod:2828
msgid ""
"This returns a list of the logical volume device names "
"(eg. C</dev/VolGroup00/LogVol00>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4127
msgid "See also C<guestfs_lvs_full>, C<guestfs_list_filesystems>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4135
msgid "guestfs_lvs_full"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4137
#, no-wrap
msgid ""
" struct guestfs_lvm_lv_list *\n"
" guestfs_lvs_full (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4140 ../fish/guestfish-actions.pod:2837
msgid ""
"List all the logical volumes detected.  This is the equivalent of the "
"L<lvs(8)> command.  The \"full\" version includes all fields."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4143
msgid ""
"This function returns a C<struct guestfs_lvm_lv_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_lvm_lv_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4149
msgid "guestfs_lvuuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4151
#, no-wrap
msgid ""
" char *\n"
" guestfs_lvuuid (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4155 ../fish/guestfish-actions.pod:2844
msgid "This command returns the UUID of the LVM LV C<device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4162
msgid "guestfs_lxattrlist"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4164
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_lxattrlist (guestfs_h *g,\n"
"                     const char *path,\n"
"                     char *const *names);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4169 ../fish/guestfish-actions.pod:2850
msgid ""
"This call allows you to get the extended attributes of multiple files, where "
"all files are in the directory C<path>.  C<names> is the list of files from "
"this directory."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4173 ../fish/guestfish-actions.pod:2854
msgid ""
"On return you get a flat list of xattr structs which must be interpreted "
"sequentially.  The first xattr struct always has a zero-length C<attrname>.  "
"C<attrval> in this struct is zero-length to indicate there was an error "
"doing C<lgetxattr> for this file, I<or> is a C string which is a decimal "
"number (the number of following attributes for this file, which could be "
"C<\"0\">).  Then after the first xattr struct are the zero or more "
"attributes for the first named file.  This repeats for the second and "
"subsequent files."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4183
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also C<guestfs_lstatlist> for "
"a similarly efficient call for getting standard stats.  Very long directory "
"listings might cause the protocol message size to be exceeded, causing this "
"call to fail.  The caller must split up such requests into smaller groups of "
"names."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4197
msgid "guestfs_mkdir"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4199
#, no-wrap
msgid ""
" int\n"
" guestfs_mkdir (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4203 ../fish/guestfish-actions.pod:2876
msgid "Create a directory named C<path>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4209
msgid "guestfs_mkdir_mode"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4211
#, no-wrap
msgid ""
" int\n"
" guestfs_mkdir_mode (guestfs_h *g,\n"
"                     const char *path,\n"
"                     int mode);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4216 ../fish/guestfish-actions.pod:2882
msgid ""
"This command creates a directory, setting the initial permissions of the "
"directory to C<mode>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4219 ../fish/guestfish-actions.pod:2885
msgid ""
"For common Linux filesystems, the actual mode which is set will be C<mode & "
"~umask & 01777>.  Non-native-Linux filesystems may interpret the mode in "
"other ways."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4223
msgid "See also C<guestfs_mkdir>, C<guestfs_umask>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4229
msgid "guestfs_mkdir_p"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4231
#, no-wrap
msgid ""
" int\n"
" guestfs_mkdir_p (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4235 ../fish/guestfish-actions.pod:2895
msgid ""
"Create a directory named C<path>, creating any parent directories as "
"necessary.  This is like the C<mkdir -p> shell command."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4242
msgid "guestfs_mkdtemp"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4244
#, no-wrap
msgid ""
" char *\n"
" guestfs_mkdtemp (guestfs_h *g,\n"
"                  const char *template);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4248 ../fish/guestfish-actions.pod:2902
msgid ""
"This command creates a temporary directory.  The C<template> parameter "
"should be a full pathname for the temporary directory name with the final "
"six characters being \"XXXXXX\"."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4253 ../fish/guestfish-actions.pod:2907
msgid ""
"For example: \"/tmp/myprogXXXXXX\" or \"/Temp/myprogXXXXXX\", the second one "
"being suitable for Windows filesystems."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4256 ../fish/guestfish-actions.pod:2910
msgid "The name of the temporary directory that was created is returned."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4259 ../fish/guestfish-actions.pod:2913
msgid "The temporary directory is created with mode 0700 and is owned by root."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4262 ../fish/guestfish-actions.pod:2916
msgid ""
"The caller is responsible for deleting the temporary directory and its "
"contents after use."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4265 ../fish/guestfish-actions.pod:2919
msgid "See also: L<mkdtemp(3)>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4272
msgid "guestfs_mke2fs_J"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4274
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_J (guestfs_h *g,\n"
"                   const char *fstype,\n"
"                   int blocksize,\n"
"                   const char *device,\n"
"                   const char *journal);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4281 ../fish/guestfish-actions.pod:2925
msgid ""
"This creates an ext2/3/4 filesystem on C<device> with an external journal on "
"C<journal>.  It is equivalent to the command:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4285 ../fish/guestfish-actions.pod:2929
#, no-wrap
msgid ""
" mke2fs -t fstype -b blocksize -J device=<journal> <device>\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4287
msgid "See also C<guestfs_mke2journal>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4291 ../src/guestfs-actions.pod:4309 ../src/guestfs-actions.pod:4327 ../src/guestfs-actions.pod:4343 ../src/guestfs-actions.pod:4357 ../src/guestfs-actions.pod:4371 ../src/guestfs-actions.pod:4430 ../src/guestfs-actions.pod:4695
msgid "(Added in 1.0.68)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4293
msgid "guestfs_mke2fs_JL"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4295
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_JL (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    int blocksize,\n"
"                    const char *device,\n"
"                    const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4302 ../fish/guestfish-actions.pod:2937
msgid ""
"This creates an ext2/3/4 filesystem on C<device> with an external journal on "
"the journal labeled C<label>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4305
msgid "See also C<guestfs_mke2journal_L>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4311
msgid "guestfs_mke2fs_JU"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4313
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_JU (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    int blocksize,\n"
"                    const char *device,\n"
"                    const char *uuid);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4320 ../fish/guestfish-actions.pod:2946
msgid ""
"This creates an ext2/3/4 filesystem on C<device> with an external journal on "
"the journal with UUID C<uuid>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4323
msgid "See also C<guestfs_mke2journal_U>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4329
msgid "guestfs_mke2journal"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4331
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2journal (guestfs_h *g,\n"
"                      int blocksize,\n"
"                      const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4336 ../fish/guestfish-actions.pod:2955
msgid ""
"This creates an ext2 external journal on C<device>.  It is equivalent to the "
"command:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4339 ../fish/guestfish-actions.pod:2958
#, no-wrap
msgid ""
" mke2fs -O journal_dev -b blocksize device\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4345
msgid "guestfs_mke2journal_L"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4347
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2journal_L (guestfs_h *g,\n"
"                        int blocksize,\n"
"                        const char *label,\n"
"                        const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4353 ../fish/guestfish-actions.pod:2964
msgid "This creates an ext2 external journal on C<device> with label C<label>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4359
msgid "guestfs_mke2journal_U"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4361
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2journal_U (guestfs_h *g,\n"
"                        int blocksize,\n"
"                        const char *uuid,\n"
"                        const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4367 ../fish/guestfish-actions.pod:2970
msgid "This creates an ext2 external journal on C<device> with UUID C<uuid>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4373
msgid "guestfs_mkfifo"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4375
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfifo (guestfs_h *g,\n"
"                 int mode,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4380
msgid ""
"This call creates a FIFO (named pipe) called C<path> with mode C<mode>.  It "
"is just a convenient wrapper around C<guestfs_mknod>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4390
msgid "guestfs_mkfs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4392
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs (guestfs_h *g,\n"
"               const char *fstype,\n"
"               const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4397 ../fish/guestfish-actions.pod:2986
msgid ""
"This creates a filesystem on C<device> (usually a partition or LVM logical "
"volume).  The filesystem type is C<fstype>, for example C<ext3>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4405
msgid "guestfs_mkfs_b"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4407
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_b (guestfs_h *g,\n"
"                 const char *fstype,\n"
"                 int blocksize,\n"
"                 const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4413
msgid ""
"This call is similar to C<guestfs_mkfs>, but it allows you to control the "
"block size of the resulting filesystem.  Supported block sizes depend on the "
"filesystem type, but typically they are C<1024>, C<2048> or C<4096> only."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4418 ../src/guestfs-actions.pod:4461 ../fish/guestfish-actions.pod:2999 ../fish/guestfish-actions.pod:3026
msgid ""
"For VFAT and NTFS the C<blocksize> parameter is treated as the requested "
"cluster size."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4423 ../fish/guestfish-actions.pod:3002
msgid ""
"This function is deprecated.  In new code, use the C<mkfs_opts> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4432
msgid "guestfs_mkfs_opts"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4434
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_opts (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    const char *device,\n"
"                    ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4445
#, no-wrap
msgid ""
" GUESTFS_MKFS_OPTS_BLOCKSIZE, int blocksize,\n"
" GUESTFS_MKFS_OPTS_FEATURES, const char *features,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4448 ../fish/guestfish-actions.pod:3013
msgid ""
"This function creates a filesystem on C<device>.  The filesystem type is "
"C<fstype>, for example C<ext3>."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:4455 ../fish/guestfish-actions.pod:3020
msgid "C<blocksize>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4457 ../fish/guestfish-actions.pod:3022
msgid ""
"The filesystem block size.  Supported block sizes depend on the filesystem "
"type, but typically they are C<1024>, C<2048> or C<4096> for Linux ext2/3 "
"filesystems."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4464 ../fish/guestfish-actions.pod:3029
msgid "For UFS block sizes, please see L<mkfs.ufs(8)>."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:4466 ../fish/guestfish-actions.pod:3031
msgid "C<features>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4468 ../fish/guestfish-actions.pod:3033
msgid "This passes the I<-O> parameter to the external mkfs program."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4470 ../fish/guestfish-actions.pod:3035
msgid ""
"For certain filesystem types, this allows extra filesystem features to be "
"selected.  See L<mke2fs(8)> and L<mkfs.ufs(8)> for more details."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4474 ../fish/guestfish-actions.pod:3039
msgid ""
"You cannot use this optional parameter with the C<gfs> or C<gfs2> filesystem "
"type."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4481
msgid "(Added in 1.7.19)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4483
msgid "guestfs_mkfs_opts_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4485
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_opts_va (guestfs_h *g,\n"
"                       const char *fstype,\n"
"                       const char *device,\n"
"                       va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4491
msgid "This is the \"va_list variant\" of L</guestfs_mkfs_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4495
msgid "guestfs_mkfs_opts_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4497
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_opts_argv (guestfs_h *g,\n"
"                         const char *fstype,\n"
"                         const char *device,\n"
"                         const struct guestfs_mkfs_opts_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4503
msgid "This is the \"argv variant\" of L</guestfs_mkfs_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4507
msgid "guestfs_mkmountpoint"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4509
#, no-wrap
msgid ""
" int\n"
" guestfs_mkmountpoint (guestfs_h *g,\n"
"                       const char *exemptpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4513
msgid ""
"C<guestfs_mkmountpoint> and C<guestfs_rmmountpoint> are specialized calls "
"that can be used to create extra mountpoints before mounting the first "
"filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4517 ../fish/guestfish-actions.pod:3054
msgid ""
"These calls are I<only> necessary in some very limited circumstances, mainly "
"the case where you want to mount a mix of unrelated and/or read-only "
"filesystems together."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4521 ../fish/guestfish-actions.pod:3058
msgid ""
"For example, live CDs often contain a \"Russian doll\" nest of filesystems, "
"an ISO outer layer, with a squashfs image inside, with an ext2/3 image "
"inside that.  You can unpack this as follows in guestfish:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4526 ../fish/guestfish-actions.pod:3063
#, no-wrap
msgid ""
" add-ro Fedora-11-i686-Live.iso\n"
" run\n"
" mkmountpoint /cd\n"
" mkmountpoint /sqsh\n"
" mkmountpoint /ext3fs\n"
" mount /dev/sda /cd\n"
" mount-loop /cd/LiveOS/squashfs.img /sqsh\n"
" mount-loop /sqsh/LiveOS/ext3fs.img /ext3fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4535 ../fish/guestfish-actions.pod:3072
msgid "The inner filesystem is now unpacked under the /ext3fs mountpoint."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4537
msgid ""
"C<guestfs_mkmountpoint> is not compatible with C<guestfs_umount_all>.  You "
"may get unexpected errors if you try to mix these calls.  It is safest to "
"manually unmount filesystems and remove mountpoints after use."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4541
msgid ""
"C<guestfs_umount_all> unmounts filesystems by sorting the paths longest "
"first, so for this to work for manual mountpoints, you must ensure that the "
"innermost mountpoints have the longest pathnames, as in the example code "
"above."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4546 ../fish/guestfish-actions.pod:3083
msgid "For more details see L<https://bugzilla.redhat.com/show_bug.cgi?id=599503>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4548
msgid ""
"Autosync [see C<guestfs_set_autosync>, this is set by default on handles] "
"can cause C<guestfs_umount_all> to be called when the handle is closed which "
"can also trigger these issues."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4554 ../src/guestfs-actions.pod:4820 ../src/guestfs-actions.pod:5730
msgid "(Added in 1.0.62)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4556
msgid "guestfs_mknod"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4558
#, no-wrap
msgid ""
" int\n"
" guestfs_mknod (guestfs_h *g,\n"
"                int mode,\n"
"                int devmajor,\n"
"                int devminor,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4565 ../fish/guestfish-actions.pod:3093
msgid ""
"This call creates block or character special devices, or named pipes "
"(FIFOs)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4568 ../fish/guestfish-actions.pod:3096
msgid ""
"The C<mode> parameter should be the mode, using the standard constants.  "
"C<devmajor> and C<devminor> are the device major and minor numbers, only "
"used when creating block and character special devices."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4573
msgid ""
"Note that, just like L<mknod(2)>, the mode must be bitwise OR'd with "
"S_IFBLK, S_IFCHR, S_IFIFO or S_IFSOCK (otherwise this call just creates a "
"regular file).  These constants are available in the standard Linux header "
"files, or you can use C<guestfs_mknod_b>, C<guestfs_mknod_c> or "
"C<guestfs_mkfifo> which are wrappers around this command which bitwise OR in "
"the appropriate constant for you."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4587
msgid "guestfs_mknod_b"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4589
#, no-wrap
msgid ""
" int\n"
" guestfs_mknod_b (guestfs_h *g,\n"
"                  int mode,\n"
"                  int devmajor,\n"
"                  int devminor,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4596
msgid ""
"This call creates a block device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around C<guestfs_mknod>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4606
msgid "guestfs_mknod_c"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4608
#, no-wrap
msgid ""
" int\n"
" guestfs_mknod_c (guestfs_h *g,\n"
"                  int mode,\n"
"                  int devmajor,\n"
"                  int devminor,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4615
msgid ""
"This call creates a char device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around C<guestfs_mknod>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4625
msgid "guestfs_mkswap"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4627
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4631 ../fish/guestfish-actions.pod:3135
msgid "Create a swap partition on C<device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4637
msgid "guestfs_mkswap_L"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4639
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_L (guestfs_h *g,\n"
"                   const char *label,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4644 ../fish/guestfish-actions.pod:3141
msgid "Create a swap partition on C<device> with label C<label>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4646 ../fish/guestfish-actions.pod:3143
msgid ""
"Note that you cannot attach a swap label to a block device "
"(eg. C</dev/sda>), just to a partition.  This appears to be a limitation of "
"the kernel or swap tools."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4654
msgid "guestfs_mkswap_U"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4656
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_U (guestfs_h *g,\n"
"                   const char *uuid,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4661 ../fish/guestfish-actions.pod:3151
msgid "Create a swap partition on C<device> with UUID C<uuid>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4667
msgid "guestfs_mkswap_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4669
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_file (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4673 ../fish/guestfish-actions.pod:3157
msgid "Create a swap file."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4675
msgid ""
"This command just writes a swap file signature to an existing file.  To "
"create the file itself, use something like C<guestfs_fallocate>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4682
msgid "guestfs_modprobe"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4684
#, no-wrap
msgid ""
" int\n"
" guestfs_modprobe (guestfs_h *g,\n"
"                   const char *modulename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4688 ../fish/guestfish-actions.pod:3166
msgid "This loads a kernel module in the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4690 ../fish/guestfish-actions.pod:3168
msgid ""
"The kernel module must have been whitelisted when libguestfs was built (see "
"C<appliance/kmod.whitelist.in> in the source)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4697
msgid "guestfs_mount"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4699
#, no-wrap
msgid ""
" int\n"
" guestfs_mount (guestfs_h *g,\n"
"                const char *device,\n"
"                const char *mountpoint);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4704 ../fish/guestfish-actions.pod:3175
msgid ""
"Mount a guest disk at a position in the filesystem.  Block devices are named "
"C</dev/sda>, C</dev/sdb> and so on, as they were added to the guest.  If "
"those block devices contain partitions, they will have the usual names "
"(eg. C</dev/sda1>).  Also LVM C</dev/VG/LV>-style names can be used."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4710 ../fish/guestfish-actions.pod:3181
msgid ""
"The rules are the same as for L<mount(2)>: A filesystem must first be "
"mounted on C</> before others can be mounted.  Other filesystems can only be "
"mounted on directories which already exist."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4715 ../fish/guestfish-actions.pod:3186
msgid ""
"The mounted filesystem is writable, if we have sufficient permissions on the "
"underlying device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4718
msgid ""
"B<Important note:> When you use this call, the filesystem options C<sync> "
"and C<noatime> are set implicitly.  This was originally done because we "
"thought it would improve reliability, but it turns out that I<-o sync> has a "
"very large negative performance impact and negligible effect on "
"reliability.  Therefore we recommend that you avoid using C<guestfs_mount> "
"in any code that needs performance, and instead use C<guestfs_mount_options> "
"(use an empty string for the first parameter if you don't want any options)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4730 ../fish/guestfish-actions.pod:3199
msgid ""
"This function is deprecated.  In new code, use the C<mount_options> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4739
msgid "guestfs_mount_loop"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4741
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_loop (guestfs_h *g,\n"
"                     const char *file,\n"
"                     const char *mountpoint);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4746 ../fish/guestfish-actions.pod:3210
msgid ""
"This command lets you mount C<file> (a filesystem image in a file) on a "
"mount point.  It is entirely equivalent to the command C<mount -o loop file "
"mountpoint>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4754
msgid "guestfs_mount_options"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4756
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_options (guestfs_h *g,\n"
"                        const char *options,\n"
"                        const char *device,\n"
"                        const char *mountpoint);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4762
msgid ""
"This is the same as the C<guestfs_mount> command, but it allows you to set "
"the mount options as for the L<mount(8)> I<-o> flag."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4766 ../fish/guestfish-actions.pod:3222
msgid ""
"If the C<options> parameter is an empty string, then no options are passed "
"(all options default to whatever the filesystem uses)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4772 ../src/guestfs-actions.pod:4786 ../src/guestfs-actions.pod:4803
msgid "(Added in 1.0.10)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4774
msgid "guestfs_mount_ro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4776
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_ro (guestfs_h *g,\n"
"                   const char *device,\n"
"                   const char *mountpoint);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4781
msgid ""
"This is the same as the C<guestfs_mount> command, but it mounts the "
"filesystem with the read-only (I<-o ro>) flag."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4788
msgid "guestfs_mount_vfs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4790
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_vfs (guestfs_h *g,\n"
"                    const char *options,\n"
"                    const char *vfstype,\n"
"                    const char *device,\n"
"                    const char *mountpoint);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4797
msgid ""
"This is the same as the C<guestfs_mount> command, but it allows you to set "
"both the mount options and the vfstype as for the L<mount(8)> I<-o> and "
"I<-t> flags."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4805
msgid "guestfs_mountpoints"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4807
#, no-wrap
msgid ""
" char **\n"
" guestfs_mountpoints (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4810
msgid ""
"This call is similar to C<guestfs_mounts>.  That call returns a list of "
"devices.  This one returns a hash table (map) of device name to directory "
"where the device is mounted."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4822
msgid "guestfs_mounts"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4824
#, no-wrap
msgid ""
" char **\n"
" guestfs_mounts (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4827 ../fish/guestfish-actions.pod:3253
msgid ""
"This returns the list of currently mounted filesystems.  It returns the list "
"of devices (eg. C</dev/sda1>, C</dev/VG/LV>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4830 ../fish/guestfish-actions.pod:3256
msgid "Some internal mounts are not shown."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4832
msgid "See also: C<guestfs_mountpoints>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4840
msgid "guestfs_mv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4842
#, no-wrap
msgid ""
" int\n"
" guestfs_mv (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4847 ../fish/guestfish-actions.pod:3264
msgid ""
"This moves a file from C<src> to C<dest> where C<dest> is either a "
"destination filename or destination directory."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4854
msgid "guestfs_ntfs_3g_probe"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4856
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfs_3g_probe (guestfs_h *g,\n"
"                        int rw,\n"
"                        const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4861 ../fish/guestfish-actions.pod:3271
msgid ""
"This command runs the L<ntfs-3g.probe(8)> command which probes an NTFS "
"C<device> for mountability.  (Not all NTFS volumes can be mounted "
"read-write, and some cannot be mounted at all)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4865 ../fish/guestfish-actions.pod:3275
msgid ""
"C<rw> is a boolean flag.  Set it to true if you want to test if the volume "
"can be mounted read-write.  Set it to false if you want to test if the "
"volume can be mounted read-only."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4869 ../fish/guestfish-actions.pod:3279
msgid ""
"The return value is an integer which C<0> if the operation would succeed, or "
"some non-zero value documented in the L<ntfs-3g.probe(8)> manual page."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4875
msgid "(Added in 1.0.43)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4877
msgid "guestfs_ntfsresize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4879
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4883 ../fish/guestfish-actions.pod:3287
msgid ""
"This command resizes an NTFS filesystem, expanding or shrinking it to the "
"size of the underlying device.  See also L<ntfsresize(8)>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4891
msgid "guestfs_ntfsresize_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4893
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize_size (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4898
msgid ""
"This command is the same as C<guestfs_ntfsresize> except that it allows you "
"to specify the new size (in bytes) explicitly."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4903 ../src/guestfs-actions.pod:5339 ../src/guestfs-actions.pod:5412 ../src/guestfs-actions.pod:5678 ../src/guestfs-actions.pod:7284
msgid "(Added in 1.3.14)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4905
msgid "guestfs_part_add"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4907
#, no-wrap
msgid ""
" int\n"
" guestfs_part_add (guestfs_h *g,\n"
"                   const char *device,\n"
"                   const char *prlogex,\n"
"                   int64_t startsect,\n"
"                   int64_t endsect);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4914
msgid ""
"This command adds a partition to C<device>.  If there is no partition table "
"on the device, call C<guestfs_part_init> first."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4917 ../fish/guestfish-actions.pod:3305
msgid ""
"The C<prlogex> parameter is the type of partition.  Normally you should pass "
"C<p> or C<primary> here, but MBR partition tables also support C<l> (or "
"C<logical>) and C<e> (or C<extended>) partition types."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4922 ../fish/guestfish-actions.pod:3310
msgid ""
"C<startsect> and C<endsect> are the start and end of the partition in "
"I<sectors>.  C<endsect> may be negative, which means it counts backwards "
"from the end of the disk (C<-1> is the last sector)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4926
msgid ""
"Creating a partition which covers the whole disk is not so easy.  Use "
"C<guestfs_part_disk> to do that."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4931 ../src/guestfs-actions.pod:4969 ../src/guestfs-actions.pod:5022 ../src/guestfs-actions.pod:5100 ../src/guestfs-actions.pod:5138 ../src/guestfs-actions.pod:5157 ../src/guestfs-actions.pod:5197
msgid "(Added in 1.0.78)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4933
msgid "guestfs_part_del"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4935
#, no-wrap
msgid ""
" int\n"
" guestfs_part_del (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int partnum);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4940 ../fish/guestfish-actions.pod:3321
msgid "This command deletes the partition numbered C<partnum> on C<device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4942 ../fish/guestfish-actions.pod:3323
msgid ""
"Note that in the case of MBR partitioning, deleting an extended partition "
"also deletes any logical partitions it contains."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4950
msgid "guestfs_part_disk"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4952
#, no-wrap
msgid ""
" int\n"
" guestfs_part_disk (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *parttype);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4957
msgid ""
"This command is simply a combination of C<guestfs_part_init> followed by "
"C<guestfs_part_add> to create a single primary partition covering the whole "
"disk."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4961
msgid ""
"C<parttype> is the partition table type, usually C<mbr> or C<gpt>, but other "
"possible values are described in C<guestfs_part_init>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4971
msgid "guestfs_part_get_bootable"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4973
#, no-wrap
msgid ""
" int\n"
" guestfs_part_get_bootable (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4978 ../fish/guestfish-actions.pod:3345
msgid ""
"This command returns true if the partition C<partnum> on C<device> has the "
"bootable flag set."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4981
msgid "See also C<guestfs_part_set_bootable>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4987
msgid "guestfs_part_get_mbr_id"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4989
#, no-wrap
msgid ""
" int\n"
" guestfs_part_get_mbr_id (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int partnum);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4994 ../fish/guestfish-actions.pod:3354
msgid ""
"Returns the MBR type byte (also known as the ID byte) from the numbered "
"partition C<partnum>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4997 ../src/guestfs-actions.pod:5173
msgid ""
"Note that only MBR (old DOS-style) partitions have type bytes.  You will get "
"undefined results for other partition table types (see "
"C<guestfs_part_get_parttype>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5005
msgid "guestfs_part_get_parttype"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5007
#, no-wrap
msgid ""
" char *\n"
" guestfs_part_get_parttype (guestfs_h *g,\n"
"                            const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5011 ../fish/guestfish-actions.pod:3365
msgid ""
"This command examines the partition table on C<device> and returns the "
"partition table type (format) being used."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5014
msgid ""
"Common return values include: C<msdos> (a DOS/Windows style MBR partition "
"table), C<gpt> (a GPT/EFI-style partition table).  Other values are "
"possible, although unusual.  See C<guestfs_part_init> for a full list."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5024
msgid "guestfs_part_init"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5026
#, no-wrap
msgid ""
" int\n"
" guestfs_part_init (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *parttype);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5031 ../fish/guestfish-actions.pod:3377
msgid ""
"This creates an empty partition table on C<device> of one of the partition "
"types listed below.  Usually C<parttype> should be either C<msdos> or C<gpt> "
"(for large disks)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5035
msgid ""
"Initially there are no partitions.  Following this, you should call "
"C<guestfs_part_add> for each partition required."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5038 ../fish/guestfish-actions.pod:3384
msgid "Possible values for C<parttype> are:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5042 ../fish/guestfish-actions.pod:3388
msgid "B<efi> | B<gpt>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5044 ../fish/guestfish-actions.pod:3390
msgid "Intel EFI / GPT partition table."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5046 ../fish/guestfish-actions.pod:3392
msgid ""
"This is recommended for >= 2 TB partitions that will be accessed from Linux "
"and Intel-based Mac OS X.  It also has limited backwards compatibility with "
"the C<mbr> format."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5050 ../fish/guestfish-actions.pod:3396
msgid "B<mbr> | B<msdos>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5052 ../fish/guestfish-actions.pod:3398
msgid ""
"The standard PC \"Master Boot Record\" (MBR) format used by MS-DOS and "
"Windows.  This partition type will B<only> work for device sizes up to 2 "
"TB.  For large disks we recommend using C<gpt>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5059 ../fish/guestfish-actions.pod:3405
msgid "Other partition table types that may work but are not supported include:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5064 ../fish/guestfish-actions.pod:3410
msgid "B<aix>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5066 ../fish/guestfish-actions.pod:3412
msgid "AIX disk labels."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5068 ../fish/guestfish-actions.pod:3414
msgid "B<amiga> | B<rdb>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5070 ../fish/guestfish-actions.pod:3416
msgid "Amiga \"Rigid Disk Block\" format."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5072 ../fish/guestfish-actions.pod:3418
msgid "B<bsd>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5074 ../fish/guestfish-actions.pod:3420
msgid "BSD disk labels."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5076 ../fish/guestfish-actions.pod:3422
msgid "B<dasd>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5078 ../fish/guestfish-actions.pod:3424
msgid "DASD, used on IBM mainframes."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5080 ../fish/guestfish-actions.pod:3426
msgid "B<dvh>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5082 ../fish/guestfish-actions.pod:3428
msgid "MIPS/SGI volumes."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5084 ../fish/guestfish-actions.pod:3430
msgid "B<mac>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5086 ../fish/guestfish-actions.pod:3432
msgid "Old Mac partition format.  Modern Macs use C<gpt>."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5088 ../fish/guestfish-actions.pod:3434
msgid "B<pc98>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5090 ../fish/guestfish-actions.pod:3436
msgid "NEC PC-98 format, common in Japan apparently."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5092 ../fish/guestfish-actions.pod:3438
msgid "B<sun>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5094 ../fish/guestfish-actions.pod:3440
msgid "Sun disk labels."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5102
msgid "guestfs_part_list"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5104
#, no-wrap
msgid ""
" struct guestfs_partition_list *\n"
" guestfs_part_list (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5108 ../fish/guestfish-actions.pod:3448
msgid ""
"This command parses the partition table on C<device> and returns the list of "
"partitions found."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5111 ../fish/guestfish-actions.pod:3451
msgid "The fields in the returned structure are:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5115 ../fish/guestfish-actions.pod:3455
msgid "B<part_num>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5117 ../fish/guestfish-actions.pod:3457
msgid "Partition number, counting from 1."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5119 ../fish/guestfish-actions.pod:3459
msgid "B<part_start>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5121
msgid ""
"Start of the partition I<in bytes>.  To get sectors you have to divide by "
"the device's sector size, see C<guestfs_blockdev_getss>."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5124 ../fish/guestfish-actions.pod:3464
msgid "B<part_end>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5126 ../fish/guestfish-actions.pod:3466
msgid "End of the partition in bytes."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5128 ../fish/guestfish-actions.pod:3468
msgid "B<part_size>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5130 ../fish/guestfish-actions.pod:3470
msgid "Size of the partition in bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5134
msgid ""
"This function returns a C<struct guestfs_partition_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_partition_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5140
msgid "guestfs_part_set_bootable"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5142
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_bootable (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum,\n"
"                            int bootable);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5148 ../fish/guestfish-actions.pod:3478
msgid ""
"This sets the bootable flag on partition numbered C<partnum> on device "
"C<device>.  Note that partitions are numbered from 1."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5151 ../fish/guestfish-actions.pod:3481
msgid ""
"The bootable flag is used by some operating systems (notably Windows) to "
"determine which partition to boot from.  It is by no means universally "
"recognized."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5159
msgid "guestfs_part_set_mbr_id"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5161
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_mbr_id (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int partnum,\n"
"                          int idbyte);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5167 ../fish/guestfish-actions.pod:3489
msgid ""
"Sets the MBR type byte (also known as the ID byte) of the numbered partition "
"C<partnum> to C<idbyte>.  Note that the type bytes quoted in most "
"documentation are in fact hexadecimal numbers, but usually documented "
"without any leading \"0x\" which might be confusing."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5181
msgid "guestfs_part_set_name"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5183
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_name (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int partnum,\n"
"                        const char *name);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5189 ../fish/guestfish-actions.pod:3503
msgid ""
"This sets the partition name on partition numbered C<partnum> on device "
"C<device>.  Note that partitions are numbered from 1."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5192 ../fish/guestfish-actions.pod:3506
msgid ""
"The partition name can only be set on certain types of partition table.  "
"This works on C<gpt> but not on C<mbr> partitions."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5199
msgid "guestfs_part_to_dev"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5201
#, no-wrap
msgid ""
" char *\n"
" guestfs_part_to_dev (guestfs_h *g,\n"
"                      const char *partition);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5205 ../fish/guestfish-actions.pod:3513
msgid ""
"This function takes a partition name (eg. \"/dev/sdb1\") and removes the "
"partition number, returning the device name (eg. \"/dev/sdb\")."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5209
msgid ""
"The named partition must exist, for example as a string returned from "
"C<guestfs_list_partitions>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5217
msgid "guestfs_ping_daemon"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5219
#, no-wrap
msgid ""
" int\n"
" guestfs_ping_daemon (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5222 ../fish/guestfish-actions.pod:3524
msgid ""
"This is a test probe into the guestfs daemon running inside the qemu "
"subprocess.  Calling this function checks that the daemon responds to the "
"ping message, without affecting the daemon or attached block device(s) in "
"any other way."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5231
msgid "guestfs_pread"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5233
#, no-wrap
msgid ""
" char *\n"
" guestfs_pread (guestfs_h *g,\n"
"                const char *path,\n"
"                int count,\n"
"                int64_t offset,\n"
"                size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5240 ../fish/guestfish-actions.pod:3533
msgid ""
"This command lets you read part of a file.  It reads C<count> bytes of the "
"file, starting at C<offset>, from file C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5243 ../src/guestfs-actions.pod:5269 ../fish/guestfish-actions.pod:3536 ../fish/guestfish-actions.pod:3551
msgid ""
"This may read fewer bytes than requested.  For further details see the "
"L<pread(2)> system call."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5246
msgid "See also C<guestfs_pwrite>, C<guestfs_pread_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5257
msgid "guestfs_pread_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5259
#, no-wrap
msgid ""
" char *\n"
" guestfs_pread_device (guestfs_h *g,\n"
"                       const char *device,\n"
"                       int count,\n"
"                       int64_t offset,\n"
"                       size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5266 ../fish/guestfish-actions.pod:3548
msgid ""
"This command lets you read part of a file.  It reads C<count> bytes of "
"C<device>, starting at C<offset>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5272
msgid "See also C<guestfs_pread>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5281
msgid "(Added in 1.5.21)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5283
msgid "guestfs_pvcreate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5285
#, no-wrap
msgid ""
" int\n"
" guestfs_pvcreate (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5289 ../fish/guestfish-actions.pod:3563
msgid ""
"This creates an LVM physical volume on the named C<device>, where C<device> "
"should usually be a partition name such as C</dev/sda1>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5297
msgid "guestfs_pvremove"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5299
#, no-wrap
msgid ""
" int\n"
" guestfs_pvremove (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5303 ../fish/guestfish-actions.pod:3571
msgid ""
"This wipes a physical volume C<device> so that LVM will no longer recognise "
"it."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5306 ../fish/guestfish-actions.pod:3574
msgid ""
"The implementation uses the C<pvremove> command which refuses to wipe "
"physical volumes that contain any volume groups, so you have to remove those "
"first."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5314
msgid "guestfs_pvresize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5316
#, no-wrap
msgid ""
" int\n"
" guestfs_pvresize (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5320 ../fish/guestfish-actions.pod:3582
msgid ""
"This resizes (expands or shrinks) an existing LVM physical volume to match "
"the new size of the underlying device."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5327
msgid "guestfs_pvresize_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5329
#, no-wrap
msgid ""
" int\n"
" guestfs_pvresize_size (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5334
msgid ""
"This command is the same as C<guestfs_pvresize> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5341
msgid "guestfs_pvs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5343
#, no-wrap
msgid ""
" char **\n"
" guestfs_pvs (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5346 ../fish/guestfish-actions.pod:3596
msgid ""
"List all the physical volumes detected.  This is the equivalent of the "
"L<pvs(8)> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5349 ../fish/guestfish-actions.pod:3599
msgid ""
"This returns a list of just the device names that contain PVs "
"(eg. C</dev/sda2>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5352
msgid "See also C<guestfs_pvs_full>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5360
msgid "guestfs_pvs_full"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5362
#, no-wrap
msgid ""
" struct guestfs_lvm_pv_list *\n"
" guestfs_pvs_full (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5365 ../fish/guestfish-actions.pod:3608
msgid ""
"List all the physical volumes detected.  This is the equivalent of the "
"L<pvs(8)> command.  The \"full\" version includes all fields."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5368
msgid ""
"This function returns a C<struct guestfs_lvm_pv_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_lvm_pv_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5374
msgid "guestfs_pvuuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5376
#, no-wrap
msgid ""
" char *\n"
" guestfs_pvuuid (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5380 ../fish/guestfish-actions.pod:3615
msgid "This command returns the UUID of the LVM PV C<device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5387
msgid "guestfs_pwrite"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5389
#, no-wrap
msgid ""
" int\n"
" guestfs_pwrite (guestfs_h *g,\n"
"                 const char *path,\n"
"                 const char *content,\n"
"                 size_t content_size,\n"
"                 int64_t offset);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5396 ../fish/guestfish-actions.pod:3621
msgid ""
"This command writes to part of a file.  It writes the data buffer C<content> "
"to the file C<path> starting at offset C<offset>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5399 ../fish/guestfish-actions.pod:3624
msgid ""
"This command implements the L<pwrite(2)> system call, and like that system "
"call it may not write the full data requested.  The return value is the "
"number of bytes that were actually written to the file.  This could even be "
"0, although short writes are unlikely for regular files in ordinary "
"circumstances."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5405
msgid "See also C<guestfs_pread>, C<guestfs_pwrite_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5414
msgid "guestfs_pwrite_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5416
#, no-wrap
msgid ""
" int\n"
" guestfs_pwrite_device (guestfs_h *g,\n"
"                        const char *device,\n"
"                        const char *content,\n"
"                        size_t content_size,\n"
"                        int64_t offset);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5423 ../fish/guestfish-actions.pod:3639
msgid ""
"This command writes to part of a device.  It writes the data buffer "
"C<content> to C<device> starting at offset C<offset>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5426 ../fish/guestfish-actions.pod:3642
msgid ""
"This command implements the L<pwrite(2)> system call, and like that system "
"call it may not write the full data requested (although short writes to disk "
"devices and partitions are probably impossible with standard Linux kernels)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5431
msgid "See also C<guestfs_pwrite>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5438
msgid "(Added in 1.5.20)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5440
msgid "guestfs_read_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5442
#, no-wrap
msgid ""
" char *\n"
" guestfs_read_file (guestfs_h *g,\n"
"                    const char *path,\n"
"                    size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5447 ../fish/guestfish-actions.pod:3656
msgid "This calls returns the contents of the file C<path> as a buffer."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5450
msgid ""
"Unlike C<guestfs_cat>, this function can correctly handle files that contain "
"embedded ASCII NUL characters.  However unlike C<guestfs_download>, this "
"function is limited in the total size of file that can be handled."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5462
msgid "(Added in 1.0.63)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5464
msgid "guestfs_read_lines"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5466
#, no-wrap
msgid ""
" char **\n"
" guestfs_read_lines (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5472 ../fish/guestfish-actions.pod:3673
msgid ""
"The file contents are returned as a list of lines.  Trailing C<LF> and "
"C<CRLF> character sequences are I<not> returned."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5475
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of line).  For "
"those you need to use the C<guestfs_read_file> function which has a more "
"complex interface."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5486
msgid "guestfs_readdir"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5488
#, no-wrap
msgid ""
" struct guestfs_dirent_list *\n"
" guestfs_readdir (guestfs_h *g,\n"
"                  const char *dir);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5492 ../fish/guestfish-actions.pod:3685
msgid "This returns the list of directory entries in directory C<dir>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5494 ../fish/guestfish-actions.pod:3687
msgid ""
"All entries in the directory are returned, including C<.> and C<..>.  The "
"entries are I<not> sorted, but returned in the same order as the underlying "
"filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5498 ../fish/guestfish-actions.pod:3691
msgid ""
"Also this call returns basic file type information about each file.  The "
"C<ftyp> field will contain one of the following characters:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5503 ../fish/guestfish-actions.pod:3696
msgid "'b'"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5505 ../fish/guestfish-actions.pod:3698
msgid "Block special"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5507 ../fish/guestfish-actions.pod:3700
msgid "'c'"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5509 ../fish/guestfish-actions.pod:3702
msgid "Char special"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5511 ../fish/guestfish-actions.pod:3704
msgid "'d'"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5513 ../fish/guestfish-actions.pod:3706
msgid "Directory"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5515 ../fish/guestfish-actions.pod:3708
msgid "'f'"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5517 ../fish/guestfish-actions.pod:3710
msgid "FIFO (named pipe)"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5519 ../fish/guestfish-actions.pod:3712
msgid "'l'"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5521 ../fish/guestfish-actions.pod:3714
msgid "Symbolic link"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5523 ../fish/guestfish-actions.pod:3716
msgid "'r'"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5525 ../fish/guestfish-actions.pod:3718
msgid "Regular file"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5527 ../fish/guestfish-actions.pod:3720
msgid "'s'"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5529 ../fish/guestfish-actions.pod:3722
msgid "Socket"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5531 ../fish/guestfish-actions.pod:3724
msgid "'u'"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5533 ../fish/guestfish-actions.pod:3726
msgid "Unknown file type"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5535 ../fish/guestfish-actions.pod:3728
msgid "'?'"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5537 ../fish/guestfish-actions.pod:3730
msgid "The L<readdir(3)> call returned a C<d_type> field with an unexpected value"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5542
msgid ""
"This function is primarily intended for use by programs.  To get a simple "
"list of names, use C<guestfs_ls>.  To get a printable directory for human "
"consumption, use C<guestfs_ll>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5546
msgid ""
"This function returns a C<struct guestfs_dirent_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_dirent_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5552
msgid "guestfs_readlink"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5554
#, no-wrap
msgid ""
" char *\n"
" guestfs_readlink (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5558 ../fish/guestfish-actions.pod:3743
msgid "This command reads the target of a symbolic link."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5565
msgid "guestfs_readlinklist"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5567
#, no-wrap
msgid ""
" char **\n"
" guestfs_readlinklist (guestfs_h *g,\n"
"                       const char *path,\n"
"                       char *const *names);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5572 ../fish/guestfish-actions.pod:3749
msgid ""
"This call allows you to do a C<readlink> operation on multiple files, where "
"all files are in the directory C<path>.  C<names> is the list of files from "
"this directory."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5576 ../fish/guestfish-actions.pod:3753
msgid ""
"On return you get a list of strings, with a one-to-one correspondence to the "
"C<names> list.  Each string is the value of the symbolic link."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5580 ../fish/guestfish-actions.pod:3757
msgid ""
"If the C<readlink(2)> operation fails on any name, then the corresponding "
"result string is the empty string C<\"\">.  However the whole operation is "
"completed even if there were C<readlink(2)> errors, and so you can call this "
"function with names where you don't know if they are symbolic links already "
"(albeit slightly less efficient)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5587 ../fish/guestfish-actions.pod:3764
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  Very long directory listings "
"might cause the protocol message size to be exceeded, causing this call to "
"fail.  The caller must split up such requests into smaller groups of names."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5600
msgid "guestfs_realpath"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5602
#, no-wrap
msgid ""
" char *\n"
" guestfs_realpath (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5606 ../fish/guestfish-actions.pod:3775
msgid ""
"Return the canonicalized absolute pathname of C<path>.  The returned path "
"has no C<.>, C<..> or symbolic link path elements."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5614
msgid "guestfs_removexattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5616
#, no-wrap
msgid ""
" int\n"
" guestfs_removexattr (guestfs_h *g,\n"
"                      const char *xattr,\n"
"                      const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5621 ../fish/guestfish-actions.pod:3782
msgid "This call removes the extended attribute named C<xattr> of the file C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5624
msgid "See also: C<guestfs_lremovexattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5630
msgid "guestfs_resize2fs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5632
#, no-wrap
msgid ""
" int\n"
" guestfs_resize2fs (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5636 ../fish/guestfish-actions.pod:3791
msgid ""
"This resizes an ext2, ext3 or ext4 filesystem to match the size of the "
"underlying device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5639
msgid ""
"I<Note:> It is sometimes required that you run C<guestfs_e2fsck_f> on the "
"C<device> before calling this command.  For unknown reasons C<resize2fs> "
"sometimes gives an error about this and sometimes not.  In any case, it is "
"always safe to call C<guestfs_e2fsck_f> before calling this function."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5649
msgid "guestfs_resize2fs_M"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5651
#, no-wrap
msgid ""
" int\n"
" guestfs_resize2fs_M (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5655
msgid ""
"This command is the same as C<guestfs_resize2fs>, but the filesystem is "
"resized to its minimum size.  This works like the I<-M> option to the "
"C<resize2fs> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5659
msgid ""
"To get the resulting size of the filesystem you should call "
"C<guestfs_tune2fs_l> and read the C<Block size> and C<Block count> values.  "
"These two numbers, multiplied together, give the resulting size of the "
"minimal filesystem in bytes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5666
msgid "guestfs_resize2fs_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5668
#, no-wrap
msgid ""
" int\n"
" guestfs_resize2fs_size (guestfs_h *g,\n"
"                         const char *device,\n"
"                         int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5673
msgid ""
"This command is the same as C<guestfs_resize2fs> except that it allows you "
"to specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5680
msgid "guestfs_rm"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5682
#, no-wrap
msgid ""
" int\n"
" guestfs_rm (guestfs_h *g,\n"
"             const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5686 ../fish/guestfish-actions.pod:3824
msgid "Remove the single file C<path>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5692
msgid "guestfs_rm_rf"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5694
#, no-wrap
msgid ""
" int\n"
" guestfs_rm_rf (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5698 ../fish/guestfish-actions.pod:3830
msgid ""
"Remove the file or directory C<path>, recursively removing the contents if "
"its a directory.  This is like the C<rm -rf> shell command."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5706
msgid "guestfs_rmdir"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5708
#, no-wrap
msgid ""
" int\n"
" guestfs_rmdir (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5712 ../fish/guestfish-actions.pod:3838
msgid "Remove the single directory C<path>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5718
msgid "guestfs_rmmountpoint"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5720
#, no-wrap
msgid ""
" int\n"
" guestfs_rmmountpoint (guestfs_h *g,\n"
"                       const char *exemptpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5724
msgid ""
"This calls removes a mountpoint that was previously created with "
"C<guestfs_mkmountpoint>.  See C<guestfs_mkmountpoint> for full details."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5732
msgid "guestfs_scrub_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5734
#, no-wrap
msgid ""
" int\n"
" guestfs_scrub_device (guestfs_h *g,\n"
"                       const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5738 ../fish/guestfish-actions.pod:3852
msgid ""
"This command writes patterns over C<device> to make data retrieval more "
"difficult."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5741 ../src/guestfs-actions.pod:5762 ../src/guestfs-actions.pod:5781 ../fish/guestfish-actions.pod:3855 ../fish/guestfish-actions.pod:3870 ../fish/guestfish-actions.pod:3883
msgid ""
"It is an interface to the L<scrub(1)> program.  See that manual page for "
"more details."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5749 ../src/guestfs-actions.pod:5767 ../src/guestfs-actions.pod:5786
msgid "(Added in 1.0.52)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5751
msgid "guestfs_scrub_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5753
#, no-wrap
msgid ""
" int\n"
" guestfs_scrub_file (guestfs_h *g,\n"
"                     const char *file);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5757 ../fish/guestfish-actions.pod:3865
msgid ""
"This command writes patterns over a file to make data retrieval more "
"difficult."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5760 ../fish/guestfish-actions.pod:3868
msgid "The file is I<removed> after scrubbing."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5769
msgid "guestfs_scrub_freespace"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5771
#, no-wrap
msgid ""
" int\n"
" guestfs_scrub_freespace (guestfs_h *g,\n"
"                          const char *dir);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5775
msgid ""
"This command creates the directory C<dir> and then fills it with files until "
"the filesystem is full, and scrubs the files as for C<guestfs_scrub_file>, "
"and deletes them.  The intention is to scrub any free space on the partition "
"containing C<dir>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5788
msgid "guestfs_set_append"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5790
#, no-wrap
msgid ""
" int\n"
" guestfs_set_append (guestfs_h *g,\n"
"                     const char *append);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5794 ../fish/guestfish-actions.pod:3892
msgid ""
"This function is used to add additional options to the guest kernel command "
"line."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5797 ../fish/guestfish-actions.pod:3895
msgid ""
"The default is C<NULL> unless overridden by setting C<LIBGUESTFS_APPEND> "
"environment variable."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5800 ../fish/guestfish-actions.pod:3898
msgid ""
"Setting C<append> to C<NULL> means I<no> additional options are passed "
"(libguestfs always adds a few of its own)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5807
msgid "guestfs_set_attach_method"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5809
#, no-wrap
msgid ""
" int\n"
" guestfs_set_attach_method (guestfs_h *g,\n"
"                            const char *attachmethod);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5813 ../fish/guestfish-actions.pod:3907
msgid ""
"Set the method that libguestfs uses to connect to the back end guestfsd "
"daemon.  Possible methods are:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5820 ../fish/guestfish-actions.pod:3914
msgid ""
"Launch an appliance and connect to it.  This is the ordinary method and the "
"default."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:5823 ../fish/guestfish-actions.pod:3917
msgid "C<unix:I<path>>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5825 ../fish/guestfish-actions.pod:3919
msgid "Connect to the Unix domain socket I<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5827 ../fish/guestfish-actions.pod:3921
msgid ""
"This method lets you connect to an existing daemon or (using virtio-serial) "
"to a live guest.  For more information, see L<guestfs(3)/ATTACHING TO "
"RUNNING DAEMONS>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5835
msgid "guestfs_set_autosync"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5837
#, no-wrap
msgid ""
" int\n"
" guestfs_set_autosync (guestfs_h *g,\n"
"                       int autosync);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5841 ../fish/guestfish-actions.pod:3933
msgid ""
"If C<autosync> is true, this enables autosync.  Libguestfs will make a best "
"effort attempt to make filesystems consistent and synchronized when the "
"handle is closed (also if the program exits without closing handles)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5846 ../fish/guestfish-actions.pod:3938
msgid ""
"This is enabled by default (since libguestfs 1.5.24, previously it was "
"disabled by default)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5853
msgid "guestfs_set_direct"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5855
#, no-wrap
msgid ""
" int\n"
" guestfs_set_direct (guestfs_h *g,\n"
"                     int direct);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5859 ../fish/guestfish-actions.pod:3947
msgid ""
"If the direct appliance mode flag is enabled, then stdin and stdout are "
"passed directly through to the appliance once it is launched."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5863
msgid ""
"One consequence of this is that log messages aren't caught by the library "
"and handled by C<guestfs_set_log_message_callback>, but go straight to "
"stdout."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5867 ../fish/guestfish-actions.pod:3955
msgid "You probably don't want to use this unless you know what you are doing."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5870 ../fish/guestfish-actions.pod:3958
msgid "The default is disabled."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5876
msgid "guestfs_set_e2label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5878
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2label (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5883 ../fish/guestfish-actions.pod:3964
msgid ""
"This sets the ext2/3/4 filesystem label of the filesystem on C<device> to "
"C<label>.  Filesystem labels are limited to 16 characters."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5887
msgid ""
"You can use either C<guestfs_tune2fs_l> or C<guestfs_get_e2label> to return "
"the existing label on a filesystem."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5894
msgid "guestfs_set_e2uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5896
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2uuid (guestfs_h *g,\n"
"                     const char *device,\n"
"                     const char *uuid);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5901 ../fish/guestfish-actions.pod:3975
msgid ""
"This sets the ext2/3/4 filesystem UUID of the filesystem on C<device> to "
"C<uuid>.  The format of the UUID and alternatives such as C<clear>, "
"C<random> and C<time> are described in the L<tune2fs(8)> manpage."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5906
msgid ""
"You can use either C<guestfs_tune2fs_l> or C<guestfs_get_e2uuid> to return "
"the existing UUID of a filesystem."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5913
msgid "guestfs_set_memsize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5915
#, no-wrap
msgid ""
" int\n"
" guestfs_set_memsize (guestfs_h *g,\n"
"                      int memsize);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5919
msgid ""
"This sets the memory size in megabytes allocated to the qemu subprocess.  "
"This only has any effect if called before C<guestfs_launch>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5923 ../fish/guestfish-actions.pod:3993
msgid ""
"You can also change this by setting the environment variable "
"C<LIBGUESTFS_MEMSIZE> before the handle is created."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5934
msgid "guestfs_set_network"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5936
#, no-wrap
msgid ""
" int\n"
" guestfs_set_network (guestfs_h *g,\n"
"                      int network);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5940 ../fish/guestfish-actions.pod:4006
msgid ""
"If C<network> is true, then the network is enabled in the libguestfs "
"appliance.  The default is false."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5943 ../fish/guestfish-actions.pod:4009
msgid ""
"This affects whether commands are able to access the network (see "
"L<guestfs(3)/RUNNING COMMANDS>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5946
msgid ""
"You must call this before calling C<guestfs_launch>, otherwise it has no "
"effect."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5953
msgid "guestfs_set_path"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5955
#, no-wrap
msgid ""
" int\n"
" guestfs_set_path (guestfs_h *g,\n"
"                   const char *searchpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5959 ../fish/guestfish-actions.pod:4021
msgid "Set the path that libguestfs searches for kernel and initrd.img."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5961 ../fish/guestfish-actions.pod:4023
msgid ""
"The default is C<$libdir/guestfs> unless overridden by setting "
"C<LIBGUESTFS_PATH> environment variable."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5964 ../fish/guestfish-actions.pod:4026
msgid "Setting C<path> to C<NULL> restores the default path."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5970
msgid "guestfs_set_qemu"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5972
#, no-wrap
msgid ""
" int\n"
" guestfs_set_qemu (guestfs_h *g,\n"
"                   const char *qemu);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5976 ../fish/guestfish-actions.pod:4034
msgid "Set the qemu binary that we will use."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5978 ../fish/guestfish-actions.pod:4036
msgid "The default is chosen when the library was compiled by the configure script."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5981 ../fish/guestfish-actions.pod:4039
msgid ""
"You can also override this by setting the C<LIBGUESTFS_QEMU> environment "
"variable."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5984 ../fish/guestfish-actions.pod:4042
msgid "Setting C<qemu> to C<NULL> restores the default qemu binary."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5986 ../fish/guestfish-actions.pod:4044
msgid ""
"Note that you should call this function as early as possible after creating "
"the handle.  This is because some pre-launch operations depend on testing "
"qemu features (by running C<qemu -help>).  If the qemu binary changes, we "
"don't retest features, and so you might see inconsistent results.  Using the "
"environment variable C<LIBGUESTFS_QEMU> is safest of all since that picks "
"the qemu binary at the same time as the handle is created."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5998
msgid "guestfs_set_recovery_proc"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6000
#, no-wrap
msgid ""
" int\n"
" guestfs_set_recovery_proc (guestfs_h *g,\n"
"                            int recoveryproc);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6004
msgid ""
"If this is called with the parameter C<false> then C<guestfs_launch> does "
"not create a recovery process.  The purpose of the recovery process is to "
"stop runaway qemu processes in the case where the main program aborts "
"abruptly."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6009
msgid ""
"This only has any effect if called before C<guestfs_launch>, and the default "
"is true."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6012 ../fish/guestfish-actions.pod:4066
msgid ""
"About the only time when you would want to disable this is if the main "
"process will fork itself into the background (\"daemonize\" itself).  In "
"this case the recovery process thinks that the main program has disappeared "
"and so kills qemu, which is not very helpful."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6022
msgid "guestfs_set_selinux"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6024
#, no-wrap
msgid ""
" int\n"
" guestfs_set_selinux (guestfs_h *g,\n"
"                      int selinux);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6028 ../fish/guestfish-actions.pod:4078
msgid ""
"This sets the selinux flag that is passed to the appliance at boot time.  "
"The default is C<selinux=0> (disabled)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6031 ../fish/guestfish-actions.pod:4081
msgid ""
"Note that if SELinux is enabled, it is always in Permissive mode "
"(C<enforcing=0>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6041
msgid "guestfs_set_trace"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6043
#, no-wrap
msgid ""
" int\n"
" guestfs_set_trace (guestfs_h *g,\n"
"                    int trace);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6047 ../fish/guestfish-actions.pod:4093
msgid ""
"If the command trace flag is set to 1, then libguestfs calls, parameters and "
"return values are traced."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6050 ../fish/guestfish-actions.pod:4096
msgid ""
"If you want to trace C API calls into libguestfs (and other libraries) then "
"possibly a better way is to use the external ltrace(1) command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6054 ../fish/guestfish-actions.pod:4100
msgid ""
"Command traces are disabled unless the environment variable "
"C<LIBGUESTFS_TRACE> is defined and set to C<1>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6057
msgid ""
"Trace messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see C<guestfs_set_event_callback>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6065
msgid "guestfs_set_verbose"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6067
#, no-wrap
msgid ""
" int\n"
" guestfs_set_verbose (guestfs_h *g,\n"
"                      int verbose);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6071 ../fish/guestfish-actions.pod:4113
msgid "If C<verbose> is true, this turns on verbose messages."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6073 ../fish/guestfish-actions.pod:4115
msgid ""
"Verbose messages are disabled unless the environment variable "
"C<LIBGUESTFS_DEBUG> is defined and set to C<1>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6076
msgid ""
"Verbose messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see C<guestfs_set_event_callback>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6084
msgid "guestfs_setcon"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6086
#, no-wrap
msgid ""
" int\n"
" guestfs_setcon (guestfs_h *g,\n"
"                 const char *context);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6090 ../fish/guestfish-actions.pod:4126
msgid ""
"This sets the SELinux security context of the daemon to the string "
"C<context>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6093 ../fish/guestfish-actions.pod:4129
msgid "See the documentation about SELINUX in L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6099
msgid "guestfs_setxattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6101
#, no-wrap
msgid ""
" int\n"
" guestfs_setxattr (guestfs_h *g,\n"
"                   const char *xattr,\n"
"                   const char *val,\n"
"                   int vallen,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6108 ../fish/guestfish-actions.pod:4135
msgid ""
"This call sets the extended attribute named C<xattr> of the file C<path> to "
"the value C<val> (of length C<vallen>).  The value is arbitrary 8 bit data."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6112
msgid "See also: C<guestfs_lsetxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6118
msgid "guestfs_sfdisk"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6120
#, no-wrap
msgid ""
" int\n"
" guestfs_sfdisk (guestfs_h *g,\n"
"                 const char *device,\n"
"                 int cyls,\n"
"                 int heads,\n"
"                 int sectors,\n"
"                 char *const *lines);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6128 ../fish/guestfish-actions.pod:4145
msgid ""
"This is a direct interface to the L<sfdisk(8)> program for creating "
"partitions on block devices."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6131 ../fish/guestfish-actions.pod:4148
msgid "C<device> should be a block device, for example C</dev/sda>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6133 ../fish/guestfish-actions.pod:4150
msgid ""
"C<cyls>, C<heads> and C<sectors> are the number of cylinders, heads and "
"sectors on the device, which are passed directly to sfdisk as the I<-C>, "
"I<-H> and I<-S> parameters.  If you pass C<0> for any of these, then the "
"corresponding parameter is omitted.  Usually for 'large' disks, you can just "
"pass C<0> for these, but for small (floppy-sized) disks, sfdisk (or rather, "
"the kernel) cannot work out the right geometry and you will need to tell it."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6141 ../fish/guestfish-actions.pod:4158
msgid ""
"C<lines> is a list of lines that we feed to C<sfdisk>.  For more information "
"refer to the L<sfdisk(8)> manpage."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6144 ../fish/guestfish-actions.pod:4161
msgid ""
"To create a single partition occupying the whole disk, you would pass "
"C<lines> as a single element list, when the single element being the string "
"C<,> (comma)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6148
msgid "See also: C<guestfs_sfdisk_l>, C<guestfs_sfdisk_N>, C<guestfs_part_init>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6156 ../src/guestfs-actions.pod:6186 ../src/guestfs-actions.pod:6219 ../fish/guestfish-actions.pod:4171 ../fish/guestfish-actions.pod:4194 ../fish/guestfish-actions.pod:4216
msgid "This function is deprecated.  In new code, use the C<part_add> call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6165
msgid "guestfs_sfdiskM"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6167
#, no-wrap
msgid ""
" int\n"
" guestfs_sfdiskM (guestfs_h *g,\n"
"                  const char *device,\n"
"                  char *const *lines);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6172
msgid ""
"This is a simplified interface to the C<guestfs_sfdisk> command, where "
"partition sizes are specified in megabytes only (rounded to the nearest "
"cylinder) and you don't need to specify the cyls, heads and sectors "
"parameters which were rarely if ever used anyway."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6178
msgid ""
"See also: C<guestfs_sfdisk>, the L<sfdisk(8)> manpage and "
"C<guestfs_part_disk>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6195
msgid "guestfs_sfdisk_N"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6197
#, no-wrap
msgid ""
" int\n"
" guestfs_sfdisk_N (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int partnum,\n"
"                   int cyls,\n"
"                   int heads,\n"
"                   int sectors,\n"
"                   const char *line);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6206 ../fish/guestfish-actions.pod:4205
msgid ""
"This runs L<sfdisk(8)> option to modify just the single partition C<n> "
"(note: C<n> counts from 1)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6209
msgid ""
"For other parameters, see C<guestfs_sfdisk>.  You should usually pass C<0> "
"for the cyls/heads/sectors parameters."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6212
msgid "See also: C<guestfs_part_add>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6228
msgid "guestfs_sfdisk_disk_geometry"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6230
#, no-wrap
msgid ""
" char *\n"
" guestfs_sfdisk_disk_geometry (guestfs_h *g,\n"
"                               const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6234
msgid ""
"This displays the disk geometry of C<device> read from the partition table.  "
"Especially in the case where the underlying block device has been resized, "
"this can be different from the kernel's idea of the geometry (see "
"C<guestfs_sfdisk_kernel_geometry>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6239 ../src/guestfs-actions.pod:6255 ../fish/guestfish-actions.pod:4232 ../fish/guestfish-actions.pod:4241
msgid "The result is in human-readable format, and not designed to be parsed."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6247
msgid "guestfs_sfdisk_kernel_geometry"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6249
#, no-wrap
msgid ""
" char *\n"
" guestfs_sfdisk_kernel_geometry (guestfs_h *g,\n"
"                                 const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6253 ../fish/guestfish-actions.pod:4239
msgid "This displays the kernel's idea of the geometry of C<device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6263
msgid "guestfs_sfdisk_l"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6265
#, no-wrap
msgid ""
" char *\n"
" guestfs_sfdisk_l (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6269 ../fish/guestfish-actions.pod:4248
msgid ""
"This displays the partition table on C<device>, in the human-readable output "
"of the L<sfdisk(8)> command.  It is not intended to be parsed."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6273
msgid "See also: C<guestfs_part_list>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6278 ../fish/guestfish-actions.pod:4254
msgid ""
"This function is deprecated.  In new code, use the C<part_list> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6287
msgid "guestfs_sh"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6289
#, no-wrap
msgid ""
" char *\n"
" guestfs_sh (guestfs_h *g,\n"
"             const char *command);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6293 ../fish/guestfish-actions.pod:4265
msgid ""
"This call runs a command from the guest filesystem via the guest's "
"C</bin/sh>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6296
msgid "This is like C<guestfs_command>, but passes the command to:"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6298 ../fish/guestfish-actions.pod:4270
#, no-wrap
msgid ""
" /bin/sh -c \"command\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6300 ../fish/guestfish-actions.pod:4272
msgid ""
"Depending on the guest's shell, this usually results in wildcards being "
"expanded, shell expressions being interpolated and so on."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6304
msgid "All the provisos about C<guestfs_command> apply to this call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6311
msgid "guestfs_sh_lines"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6313
#, no-wrap
msgid ""
" char **\n"
" guestfs_sh_lines (guestfs_h *g,\n"
"                   const char *command);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6317
msgid ""
"This is the same as C<guestfs_sh>, but splits the result into a list of "
"lines."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6320
msgid "See also: C<guestfs_command_lines>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6328
msgid "guestfs_sleep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6330
#, no-wrap
msgid ""
" int\n"
" guestfs_sleep (guestfs_h *g,\n"
"                int secs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6334 ../fish/guestfish-actions.pod:4291
msgid "Sleep for C<secs> seconds."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6338
msgid "(Added in 1.0.41)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6340 ../src/guestfs-structs.pod:109
msgid "guestfs_stat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6342
#, no-wrap
msgid ""
" struct guestfs_stat *\n"
" guestfs_stat (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6348 ../fish/guestfish-actions.pod:4299
msgid "This is the same as the C<stat(2)> system call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6356 ../src/guestfs-structs.pod:135
msgid "guestfs_statvfs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6358
#, no-wrap
msgid ""
" struct guestfs_statvfs *\n"
" guestfs_statvfs (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6362 ../fish/guestfish-actions.pod:4305
msgid ""
"Returns file system statistics for any mounted file system.  C<path> should "
"be a file or directory in the mounted file system (typically it is the mount "
"point itself, but it doesn't need to be)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6366 ../fish/guestfish-actions.pod:4309
msgid "This is the same as the C<statvfs(2)> system call."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6368
msgid ""
"This function returns a C<struct guestfs_statvfs *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_statvfs> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6374
msgid "guestfs_strings"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6376
#, no-wrap
msgid ""
" char **\n"
" guestfs_strings (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6380 ../fish/guestfish-actions.pod:4315
msgid ""
"This runs the L<strings(1)> command on a file and returns the list of "
"printable strings found."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6392
msgid "guestfs_strings_e"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6394
#, no-wrap
msgid ""
" char **\n"
" guestfs_strings_e (guestfs_h *g,\n"
"                    const char *encoding,\n"
"                    const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6399
msgid ""
"This is like the C<guestfs_strings> command, but allows you to specify the "
"encoding of strings that are looked for in the source file C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6403 ../fish/guestfish-actions.pod:4329
msgid "Allowed encodings are:"
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:6407 ../fish/guestfish-actions.pod:4333
msgid "s"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6409
msgid ""
"Single 7-bit-byte characters like ASCII and the ASCII-compatible parts of "
"ISO-8859-X (this is what C<guestfs_strings> uses)."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:6412 ../fish/guestfish-actions.pod:4338
msgid "S"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6414 ../fish/guestfish-actions.pod:4340
msgid "Single 8-bit-byte characters."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:6416 ../fish/guestfish-actions.pod:4342
msgid "b"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6418 ../fish/guestfish-actions.pod:4344
msgid "16-bit big endian strings such as those encoded in UTF-16BE or UCS-2BE."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:6421 ../fish/guestfish-actions.pod:4347
msgid "l (lower case letter L)"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6423 ../fish/guestfish-actions.pod:4349
msgid ""
"16-bit little endian such as UTF-16LE and UCS-2LE.  This is useful for "
"examining binaries in Windows guests."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:6426 ../fish/guestfish-actions.pod:4352
msgid "B"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6428 ../fish/guestfish-actions.pod:4354
msgid "32-bit big endian such as UCS-4BE."
msgstr ""

#. type: =item
#: ../src/guestfs-actions.pod:6430 ../fish/guestfish-actions.pod:4356
msgid "L"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6432 ../fish/guestfish-actions.pod:4358
msgid "32-bit little endian such as UCS-4LE."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6436 ../fish/guestfish-actions.pod:4362
msgid "The returned strings are transcoded to UTF-8."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6447
msgid "guestfs_swapoff_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6449
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6453
msgid ""
"This command disables the libguestfs appliance swap device or partition "
"named C<device>.  See C<guestfs_swapon_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6461
msgid "guestfs_swapoff_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6463
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_file (guestfs_h *g,\n"
"                       const char *file);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6467 ../fish/guestfish-actions.pod:4379
msgid "This command disables the libguestfs appliance swap on file."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6473
msgid "guestfs_swapoff_label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6475
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_label (guestfs_h *g,\n"
"                        const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6479 ../fish/guestfish-actions.pod:4385
msgid ""
"This command disables the libguestfs appliance swap on labeled swap "
"partition."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6486
msgid "guestfs_swapoff_uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6488
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_uuid (guestfs_h *g,\n"
"                       const char *uuid);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6492 ../fish/guestfish-actions.pod:4392
msgid ""
"This command disables the libguestfs appliance swap partition with the given "
"UUID."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6499
msgid "guestfs_swapon_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6501
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_device (guestfs_h *g,\n"
"                        const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6505
msgid ""
"This command enables the libguestfs appliance to use the swap device or "
"partition named C<device>.  The increased memory is made available for all "
"commands, for example those run using C<guestfs_command> or C<guestfs_sh>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6510 ../fish/guestfish-actions.pod:4404
msgid ""
"Note that you should not swap to existing guest swap partitions unless you "
"know what you are doing.  They may contain hibernation information, or other "
"information that the guest doesn't want you to trash.  You also risk leaking "
"information about the host to the guest this way.  Instead, attach a new "
"host device to the guest and swap on that."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6521
msgid "guestfs_swapon_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6523
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_file (guestfs_h *g,\n"
"                      const char *file);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6527
msgid ""
"This command enables swap to a file.  See C<guestfs_swapon_device> for other "
"notes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6534
msgid "guestfs_swapon_label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6536
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_label (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6540
msgid ""
"This command enables swap to a labeled swap partition.  See "
"C<guestfs_swapon_device> for other notes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6547
msgid "guestfs_swapon_uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6549
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_uuid (guestfs_h *g,\n"
"                      const char *uuid);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6553
msgid ""
"This command enables swap to a swap partition with the given UUID.  See "
"C<guestfs_swapon_device> for other notes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6560
msgid "guestfs_sync"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6562
#, no-wrap
msgid ""
" int\n"
" guestfs_sync (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6565 ../fish/guestfish-actions.pod:4436
msgid ""
"This syncs the disk, so that any writes are flushed through to the "
"underlying disk image."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6568 ../fish/guestfish-actions.pod:4439
msgid ""
"You should always call this if you have modified a disk image, before "
"closing the handle."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6575
msgid "guestfs_tail"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6577
#, no-wrap
msgid ""
" char **\n"
" guestfs_tail (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6581 ../fish/guestfish-actions.pod:4446
msgid "This command returns up to the last 10 lines of a file as a list of strings."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6593
msgid "guestfs_tail_n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6595
#, no-wrap
msgid ""
" char **\n"
" guestfs_tail_n (guestfs_h *g,\n"
"                 int nrlines,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6600 ../fish/guestfish-actions.pod:4456
msgid ""
"If the parameter C<nrlines> is a positive number, this returns the last "
"C<nrlines> lines of the file C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6603 ../fish/guestfish-actions.pod:4459
msgid ""
"If the parameter C<nrlines> is a negative number, this returns lines from "
"the file C<path>, starting with the C<-nrlines>th line."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6617
msgid "guestfs_tar_in"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6619
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_in (guestfs_h *g,\n"
"                 const char *tarfile,\n"
"                 const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6624 ../fish/guestfish-actions.pod:4471
msgid ""
"This command uploads and unpacks local file C<tarfile> (an I<uncompressed> "
"tar file) into C<directory>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6627
msgid "To upload a compressed tarball, use C<guestfs_tgz_in> or C<guestfs_txz_in>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6632 ../src/guestfs-actions.pod:6649 ../src/guestfs-actions.pod:6665 ../src/guestfs-actions.pod:6681
msgid "(Added in 1.0.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6634
msgid "guestfs_tar_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6636
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarfile);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6641 ../fish/guestfish-actions.pod:4483
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<tarfile>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6644
msgid ""
"To download a compressed tarball, use C<guestfs_tgz_out> or "
"C<guestfs_txz_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6651
msgid "guestfs_tgz_in"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6653
#, no-wrap
msgid ""
" int\n"
" guestfs_tgz_in (guestfs_h *g,\n"
"                 const char *tarball,\n"
"                 const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6658 ../fish/guestfish-actions.pod:4495
msgid ""
"This command uploads and unpacks local file C<tarball> (a I<gzip compressed> "
"tar file) into C<directory>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6661
msgid "To upload an uncompressed tarball, use C<guestfs_tar_in>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6667
msgid "guestfs_tgz_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6669
#, no-wrap
msgid ""
" int\n"
" guestfs_tgz_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarball);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6674 ../fish/guestfish-actions.pod:4506
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<tarball>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6677
msgid "To download an uncompressed tarball, use C<guestfs_tar_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6683
msgid "guestfs_touch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6685
#, no-wrap
msgid ""
" int\n"
" guestfs_touch (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6689 ../fish/guestfish-actions.pod:4517
msgid ""
"Touch acts like the L<touch(1)> command.  It can be used to update the "
"timestamps on a file, or, if the file does not exist, to create a new "
"zero-length file."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6693 ../fish/guestfish-actions.pod:4521
msgid ""
"This command only works on regular files, and will fail on other file types "
"such as directories, symbolic links, block special etc."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6700
msgid "guestfs_truncate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6702
#, no-wrap
msgid ""
" int\n"
" guestfs_truncate (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6706 ../fish/guestfish-actions.pod:4528
msgid ""
"This command truncates C<path> to a zero-length file.  The file must exist "
"already."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6713
msgid "guestfs_truncate_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6715
#, no-wrap
msgid ""
" int\n"
" guestfs_truncate_size (guestfs_h *g,\n"
"                        const char *path,\n"
"                        int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6720 ../fish/guestfish-actions.pod:4535
msgid ""
"This command truncates C<path> to size C<size> bytes.  The file must exist "
"already."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6723
msgid ""
"If the current file size is less than C<size> then the file is extended to "
"the required size with zero bytes.  This creates a sparse file (ie. disk "
"blocks are not allocated for the file until you write to it).  To create a "
"non-sparse file of zeroes, use C<guestfs_fallocate64> instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6733
msgid "guestfs_tune2fs_l"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6735
#, no-wrap
msgid ""
" char **\n"
" guestfs_tune2fs_l (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6739 ../fish/guestfish-actions.pod:4548
msgid ""
"This returns the contents of the ext2, ext3 or ext4 filesystem superblock on "
"C<device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6742 ../fish/guestfish-actions.pod:4551
msgid ""
"It is the same as running C<tune2fs -l device>.  See L<tune2fs(8)> manpage "
"for more details.  The list of fields returned isn't clearly defined, and "
"depends on both the version of C<tune2fs> that libguestfs was built against, "
"and the filesystem itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6755
msgid "guestfs_txz_in"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6757
#, no-wrap
msgid ""
" int\n"
" guestfs_txz_in (guestfs_h *g,\n"
"                 const char *tarball,\n"
"                 const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6762 ../fish/guestfish-actions.pod:4560
msgid ""
"This command uploads and unpacks local file C<tarball> (an I<xz compressed> "
"tar file) into C<directory>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6769
msgid "guestfs_txz_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6771
#, no-wrap
msgid ""
" int\n"
" guestfs_txz_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarball);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6776 ../fish/guestfish-actions.pod:4569
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<tarball> (as an xz compressed tar archive)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6783
msgid "guestfs_umask"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6785
#, no-wrap
msgid ""
" int\n"
" guestfs_umask (guestfs_h *g,\n"
"                int mask);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6789 ../fish/guestfish-actions.pod:4578
msgid ""
"This function sets the mask used for creating new files and device nodes to "
"C<mask & 0777>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6792 ../fish/guestfish-actions.pod:4581
msgid ""
"Typical umask values would be C<022> which creates new files with "
"permissions like \"-rw-r--r--\" or \"-rwxr-xr-x\", and C<002> which creates "
"new files with permissions like \"-rw-rw-r--\" or \"-rwxrwxr-x\"."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6797 ../fish/guestfish-actions.pod:4586
msgid ""
"The default umask is C<022>.  This is important because it means that "
"directories and device nodes will be created with C<0644> or C<0755> mode "
"even if you specify C<0777>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6801
msgid ""
"See also C<guestfs_get_umask>, L<umask(2)>, C<guestfs_mknod>, "
"C<guestfs_mkdir>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6804 ../fish/guestfish-actions.pod:4593
msgid "This call returns the previous umask."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6810
msgid "guestfs_umount"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6812
#, no-wrap
msgid ""
" int\n"
" guestfs_umount (guestfs_h *g,\n"
"                 const char *pathordevice);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6816 ../fish/guestfish-actions.pod:4601
msgid ""
"This unmounts the given filesystem.  The filesystem may be specified either "
"by its mountpoint (path) or the device which contains the filesystem."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6824
msgid "guestfs_umount_all"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6826
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_all (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6829 ../fish/guestfish-actions.pod:4611
msgid "This unmounts all mounted filesystems."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6831 ../fish/guestfish-actions.pod:4613
msgid "Some internal mounts are not unmounted by this call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6837
msgid "guestfs_upload"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6839
#, no-wrap
msgid ""
" int\n"
" guestfs_upload (guestfs_h *g,\n"
"                 const char *filename,\n"
"                 const char *remotefilename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6844 ../src/guestfs-actions.pod:6868 ../fish/guestfish-actions.pod:4619 ../fish/guestfish-actions.pod:4632
msgid "Upload local file C<filename> to C<remotefilename> on the filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6849
msgid "See also C<guestfs_download>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6860
msgid "guestfs_upload_offset"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6862
#, no-wrap
msgid ""
" int\n"
" guestfs_upload_offset (guestfs_h *g,\n"
"                        const char *filename,\n"
"                        const char *remotefilename,\n"
"                        int64_t offset);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6871 ../fish/guestfish-actions.pod:4635
msgid ""
"C<remotefilename> is overwritten starting at the byte C<offset> specified.  "
"The intention is to overwrite parts of existing files or devices, although "
"if a non-existant file is specified then it is created with a \"hole\" "
"before C<offset>.  The size of the data written is implicit in the size of "
"the source C<filename>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6878
msgid ""
"Note that there is no limit on the amount of data that can be uploaded with "
"this call, unlike with C<guestfs_pwrite>, and this call always writes the "
"full amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6883
msgid "See also C<guestfs_upload>, C<guestfs_pwrite>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6894
msgid "guestfs_utimens"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6896
#, no-wrap
msgid ""
" int\n"
" guestfs_utimens (guestfs_h *g,\n"
"                  const char *path,\n"
"                  int64_t atsecs,\n"
"                  int64_t atnsecs,\n"
"                  int64_t mtsecs,\n"
"                  int64_t mtnsecs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6904 ../fish/guestfish-actions.pod:4655
msgid "This command sets the timestamps of a file with nanosecond precision."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6907 ../fish/guestfish-actions.pod:4658
msgid ""
"C<atsecs, atnsecs> are the last access time (atime) in secs and nanoseconds "
"from the epoch."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6910 ../fish/guestfish-actions.pod:4661
msgid ""
"C<mtsecs, mtnsecs> are the last modification time (mtime) in secs and "
"nanoseconds from the epoch."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6913 ../fish/guestfish-actions.pod:4664
msgid ""
"If the C<*nsecs> field contains the special value C<-1> then the "
"corresponding timestamp is set to the current time.  (The C<*secs> field is "
"ignored in this case)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6917 ../fish/guestfish-actions.pod:4668
msgid ""
"If the C<*nsecs> field contains the special value C<-2> then the "
"corresponding timestamp is left unchanged.  (The C<*secs> field is ignored "
"in this case)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6925 ../src/guestfs-structs.pod:175
msgid "guestfs_version"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6927
#, no-wrap
msgid ""
" struct guestfs_version *\n"
" guestfs_version (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6930 ../fish/guestfish-actions.pod:4676
msgid "Return the libguestfs version number that the program is linked against."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6933 ../fish/guestfish-actions.pod:4679
msgid ""
"Note that because of dynamic linking this is not necessarily the version of "
"libguestfs that you compiled against.  You can compile the program, and then "
"at runtime dynamically link against a completely different C<libguestfs.so> "
"library."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6938 ../fish/guestfish-actions.pod:4684
msgid ""
"This call was added in version C<1.0.58>.  In previous versions of "
"libguestfs there was no way to get the version number.  From C code you can "
"use dynamic linker functions to find out if this symbol exists (if it "
"doesn't, then it's an earlier version)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6944 ../fish/guestfish-actions.pod:4690
msgid ""
"The call returns a structure with four elements.  The first three (C<major>, "
"C<minor> and C<release>) are numbers and correspond to the usual version "
"triplet.  The fourth element (C<extra>) is a string and is normally empty, "
"but may be used for distro-specific information."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6950 ../fish/guestfish-actions.pod:4696
msgid "To construct the original version string: C<$major.$minor.$release$extra>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6953 ../fish/guestfish-actions.pod:4699
msgid "See also: L<guestfs(3)/LIBGUESTFS VERSION NUMBERS>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6955
msgid ""
"I<Note:> Don't use this call to test for availability of features.  In "
"enterprise distributions we backport features from later versions into "
"earlier versions, making this an unreliable way to test for features.  Use "
"C<guestfs_available> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6961
msgid ""
"This function returns a C<struct guestfs_version *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_version> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6965
msgid "(Added in 1.0.58)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6967
msgid "guestfs_vfs_label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6969
#, no-wrap
msgid ""
" char *\n"
" guestfs_vfs_label (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6973 ../fish/guestfish-actions.pod:4711
msgid "This returns the filesystem label of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6976 ../fish/guestfish-actions.pod:4714
msgid "If the filesystem is unlabeled, this returns the empty string."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6978
msgid "To find a filesystem from the label, use C<guestfs_findfs_label>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6983 ../src/guestfs-actions.pod:7020
msgid "(Added in 1.3.18)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6985
msgid "guestfs_vfs_type"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6987
#, no-wrap
msgid ""
" char *\n"
" guestfs_vfs_type (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6991 ../fish/guestfish-actions.pod:4722
msgid ""
"This command gets the filesystem type corresponding to the filesystem on "
"C<device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6994 ../fish/guestfish-actions.pod:4725
msgid ""
"For most filesystems, the result is the name of the Linux VFS module which "
"would be used to mount this filesystem if you mounted it without specifying "
"the filesystem type.  For example a string such as C<ext3> or C<ntfs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7004
msgid "guestfs_vfs_uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7006
#, no-wrap
msgid ""
" char *\n"
" guestfs_vfs_uuid (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7010 ../fish/guestfish-actions.pod:4734
msgid "This returns the filesystem UUID of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7013 ../fish/guestfish-actions.pod:4737
msgid "If the filesystem does not have a UUID, this returns the empty string."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7015
msgid "To find a filesystem from the UUID, use C<guestfs_findfs_uuid>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7022
msgid "guestfs_vg_activate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7024
#, no-wrap
msgid ""
" int\n"
" guestfs_vg_activate (guestfs_h *g,\n"
"                      int activate,\n"
"                      char *const *volgroups);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7029 ../fish/guestfish-actions.pod:4745
msgid ""
"This command activates or (if C<activate> is false) deactivates all logical "
"volumes in the listed volume groups C<volgroups>.  If activated, then they "
"are made known to the kernel, ie. they appear as C</dev/mapper> devices.  If "
"deactivated, then those devices disappear."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7035 ../fish/guestfish-actions.pod:4751
msgid "This command is the same as running C<vgchange -a y|n volgroups...>"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7037 ../fish/guestfish-actions.pod:4753
msgid ""
"Note that if C<volgroups> is an empty list then B<all> volume groups are "
"activated or deactivated."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7044
msgid "guestfs_vg_activate_all"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7046
#, no-wrap
msgid ""
" int\n"
" guestfs_vg_activate_all (guestfs_h *g,\n"
"                          int activate);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7050 ../fish/guestfish-actions.pod:4760
msgid ""
"This command activates or (if C<activate> is false) deactivates all logical "
"volumes in all volume groups.  If activated, then they are made known to the "
"kernel, ie. they appear as C</dev/mapper> devices.  If deactivated, then "
"those devices disappear."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7056 ../fish/guestfish-actions.pod:4766
msgid "This command is the same as running C<vgchange -a y|n>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7062
msgid "guestfs_vgcreate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7064
#, no-wrap
msgid ""
" int\n"
" guestfs_vgcreate (guestfs_h *g,\n"
"                   const char *volgroup,\n"
"                   char *const *physvols);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7069 ../fish/guestfish-actions.pod:4772
msgid ""
"This creates an LVM volume group called C<volgroup> from the non-empty list "
"of physical volumes C<physvols>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7076
msgid "guestfs_vglvuuids"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7078
#, no-wrap
msgid ""
" char **\n"
" guestfs_vglvuuids (guestfs_h *g,\n"
"                    const char *vgname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7082 ../fish/guestfish-actions.pod:4779
msgid ""
"Given a VG called C<vgname>, this returns the UUIDs of all the logical "
"volumes created in this volume group."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7085
msgid ""
"You can use this along with C<guestfs_lvs> and C<guestfs_lvuuid> calls to "
"associate logical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7088
msgid "See also C<guestfs_vgpvuuids>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7096
msgid "guestfs_vgpvuuids"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7098
#, no-wrap
msgid ""
" char **\n"
" guestfs_vgpvuuids (guestfs_h *g,\n"
"                    const char *vgname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7102 ../fish/guestfish-actions.pod:4791
msgid ""
"Given a VG called C<vgname>, this returns the UUIDs of all the physical "
"volumes that this volume group resides on."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7105
msgid ""
"You can use this along with C<guestfs_pvs> and C<guestfs_pvuuid> calls to "
"associate physical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7108
msgid "See also C<guestfs_vglvuuids>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7116
msgid "guestfs_vgremove"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7118
#, no-wrap
msgid ""
" int\n"
" guestfs_vgremove (guestfs_h *g,\n"
"                   const char *vgname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7122 ../fish/guestfish-actions.pod:4803
msgid "Remove an LVM volume group C<vgname>, (for example C<VG>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7124 ../fish/guestfish-actions.pod:4805
msgid "This also forcibly removes all logical volumes in the volume group (if any)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7131
msgid "guestfs_vgrename"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7133
#, no-wrap
msgid ""
" int\n"
" guestfs_vgrename (guestfs_h *g,\n"
"                   const char *volgroup,\n"
"                   const char *newvolgroup);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7138 ../fish/guestfish-actions.pod:4812
msgid "Rename a volume group C<volgroup> with the new name C<newvolgroup>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7144
msgid "guestfs_vgs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7146
#, no-wrap
msgid ""
" char **\n"
" guestfs_vgs (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7149 ../fish/guestfish-actions.pod:4818
msgid ""
"List all the volumes groups detected.  This is the equivalent of the "
"L<vgs(8)> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7152 ../fish/guestfish-actions.pod:4821
msgid ""
"This returns a list of just the volume group names that were detected "
"(eg. C<VolGroup00>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7155
msgid "See also C<guestfs_vgs_full>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7163
msgid "guestfs_vgs_full"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7165
#, no-wrap
msgid ""
" struct guestfs_lvm_vg_list *\n"
" guestfs_vgs_full (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7168 ../fish/guestfish-actions.pod:4830
msgid ""
"List all the volumes groups detected.  This is the equivalent of the "
"L<vgs(8)> command.  The \"full\" version includes all fields."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7171
msgid ""
"This function returns a C<struct guestfs_lvm_vg_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_lvm_vg_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7177
msgid "guestfs_vgscan"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7179
#, no-wrap
msgid ""
" int\n"
" guestfs_vgscan (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7182 ../fish/guestfish-actions.pod:4837
msgid ""
"This rescans all block devices and rebuilds the list of LVM physical "
"volumes, volume groups and logical volumes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7189
msgid "guestfs_vguuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7191
#, no-wrap
msgid ""
" char *\n"
" guestfs_vguuid (guestfs_h *g,\n"
"                 const char *vgname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7195 ../fish/guestfish-actions.pod:4844
msgid "This command returns the UUID of the LVM VG named C<vgname>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7202
msgid "guestfs_wait_ready"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7204
#, no-wrap
msgid ""
" int\n"
" guestfs_wait_ready (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7207
msgid "This function is a no op."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7209
msgid ""
"In versions of the API E<lt> 1.0.71 you had to call this function just after "
"calling C<guestfs_launch> to wait for the launch to complete.  However this "
"is no longer necessary because C<guestfs_launch> now does the waiting."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7214
msgid ""
"If you see any calls to this function in code then you can just remove them, "
"unless you want to retain compatibility with older versions of the API."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7220
msgid "This function is deprecated.  In new code, use the C<launch> call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7229
msgid "guestfs_wc_c"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7231
#, no-wrap
msgid ""
" int\n"
" guestfs_wc_c (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7235 ../fish/guestfish-actions.pod:4850
msgid ""
"This command counts the characters in a file, using the C<wc -c> external "
"command."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7242
msgid "guestfs_wc_l"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7244
#, no-wrap
msgid ""
" int\n"
" guestfs_wc_l (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7248 ../fish/guestfish-actions.pod:4857
msgid ""
"This command counts the lines in a file, using the C<wc -l> external "
"command."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7255
msgid "guestfs_wc_w"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7257
#, no-wrap
msgid ""
" int\n"
" guestfs_wc_w (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7261 ../fish/guestfish-actions.pod:4864
msgid ""
"This command counts the words in a file, using the C<wc -w> external "
"command."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7268
msgid "guestfs_write"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7270
#, no-wrap
msgid ""
" int\n"
" guestfs_write (guestfs_h *g,\n"
"                const char *path,\n"
"                const char *content,\n"
"                size_t content_size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7276 ../fish/guestfish-actions.pod:4871
msgid ""
"This call creates a file called C<path>.  The content of the file is the "
"string C<content> (which can contain any 8 bit data)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7286
msgid "guestfs_write_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7288
#, no-wrap
msgid ""
" int\n"
" guestfs_write_file (guestfs_h *g,\n"
"                     const char *path,\n"
"                     const char *content,\n"
"                     int size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7294 ../fish/guestfish-actions.pod:4881
msgid ""
"This call creates a file called C<path>.  The contents of the file is the "
"string C<content> (which can contain any 8 bit data), with length C<size>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7298 ../fish/guestfish-actions.pod:4885
msgid ""
"As a special case, if C<size> is C<0> then the length is calculated using "
"C<strlen> (so in this case the content cannot contain embedded ASCII NULs)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7302 ../fish/guestfish-actions.pod:4889
msgid ""
"I<NB.> Owing to a bug, writing content containing ASCII NUL characters does "
"I<not> work, even if the length is specified."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7310 ../fish/guestfish-actions.pod:4895
msgid "This function is deprecated.  In new code, use the C<write> call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7319
msgid "guestfs_zegrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7321
#, no-wrap
msgid ""
" char **\n"
" guestfs_zegrep (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7326 ../fish/guestfish-actions.pod:4906
msgid "This calls the external C<zegrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7338
msgid "guestfs_zegrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7340
#, no-wrap
msgid ""
" char **\n"
" guestfs_zegrepi (guestfs_h *g,\n"
"                  const char *regex,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7345 ../fish/guestfish-actions.pod:4916
msgid "This calls the external C<zegrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7357
msgid "guestfs_zero"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7359
#, no-wrap
msgid ""
" int\n"
" guestfs_zero (guestfs_h *g,\n"
"               const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7363 ../fish/guestfish-actions.pod:4926
msgid "This command writes zeroes over the first few blocks of C<device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7365 ../fish/guestfish-actions.pod:4928
msgid ""
"How many blocks are zeroed isn't specified (but it's I<not> enough to "
"securely wipe the device).  It should be sufficient to remove any partition "
"tables, filesystem superblocks and so on."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7369
msgid "See also: C<guestfs_zero_device>, C<guestfs_scrub_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7380
msgid "guestfs_zero_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7382
#, no-wrap
msgid ""
" int\n"
" guestfs_zero_device (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7386
msgid ""
"This command writes zeroes over the entire C<device>.  Compare with "
"C<guestfs_zero> which just zeroes the first few blocks of a device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7400
msgid "(Added in 1.3.1)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7402
msgid "guestfs_zerofree"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7404
#, no-wrap
msgid ""
" int\n"
" guestfs_zerofree (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7408 ../fish/guestfish-actions.pod:4949
msgid ""
"This runs the I<zerofree> program on C<device>.  This program claims to zero "
"unused inodes and disk blocks on an ext2/3 filesystem, thus making it "
"possible to compress the filesystem more effectively."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7413 ../fish/guestfish-actions.pod:4954
msgid "You should B<not> run this program if the filesystem is mounted."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7416 ../fish/guestfish-actions.pod:4957
msgid ""
"It is possible that using this program can damage the filesystem or data on "
"the filesystem."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7423
msgid "guestfs_zfgrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7425
#, no-wrap
msgid ""
" char **\n"
" guestfs_zfgrep (guestfs_h *g,\n"
"                 const char *pattern,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7430 ../fish/guestfish-actions.pod:4964
msgid "This calls the external C<zfgrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7442
msgid "guestfs_zfgrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7444
#, no-wrap
msgid ""
" char **\n"
" guestfs_zfgrepi (guestfs_h *g,\n"
"                  const char *pattern,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7449 ../fish/guestfish-actions.pod:4974
msgid "This calls the external C<zfgrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7461
msgid "guestfs_zfile"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7463
#, no-wrap
msgid ""
" char *\n"
" guestfs_zfile (guestfs_h *g,\n"
"                const char *meth,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7468 ../fish/guestfish-actions.pod:4984
msgid "This command runs C<file> after first decompressing C<path> using C<method>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7471 ../fish/guestfish-actions.pod:4987
msgid "C<method> must be one of C<gzip>, C<compress> or C<bzip2>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7473
msgid ""
"Since 1.0.63, use C<guestfs_file> instead which can now process compressed "
"files."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7479 ../fish/guestfish-actions.pod:4992
msgid "This function is deprecated.  In new code, use the C<file> call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7488
msgid "guestfs_zgrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7490
#, no-wrap
msgid ""
" char **\n"
" guestfs_zgrep (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7495 ../fish/guestfish-actions.pod:5003
msgid "This calls the external C<zgrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7507
msgid "guestfs_zgrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7509
#, no-wrap
msgid ""
" char **\n"
" guestfs_zgrepi (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7514 ../fish/guestfish-actions.pod:5013
msgid "This calls the external C<zgrep -i> program and returns the matching lines."
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:3
msgid "B<augeas>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:5
msgid ""
"The following functions: L</guestfs_aug_clear> L</guestfs_aug_close> "
"L</guestfs_aug_defnode> L</guestfs_aug_defvar> L</guestfs_aug_get> "
"L</guestfs_aug_init> L</guestfs_aug_insert> L</guestfs_aug_load> "
"L</guestfs_aug_ls> L</guestfs_aug_match> L</guestfs_aug_mv> "
"L</guestfs_aug_rm> L</guestfs_aug_save> L</guestfs_aug_set>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:21
msgid "B<inotify>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:23
msgid ""
"The following functions: L</guestfs_inotify_add_watch> "
"L</guestfs_inotify_close> L</guestfs_inotify_files> L</guestfs_inotify_init> "
"L</guestfs_inotify_read> L</guestfs_inotify_rm_watch>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:31
msgid "B<linuxfsuuid>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:33
msgid ""
"The following functions: L</guestfs_mke2fs_JU> L</guestfs_mke2journal_U> "
"L</guestfs_mkswap_U> L</guestfs_swapoff_uuid> L</guestfs_swapon_uuid>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:40
msgid "B<linuxmodules>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:42
msgid "The following functions: L</guestfs_modprobe>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:45
msgid "B<linuxxattrs>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:47
msgid ""
"The following functions: L</guestfs_getxattr> L</guestfs_getxattrs> "
"L</guestfs_lgetxattr> L</guestfs_lgetxattrs> L</guestfs_lremovexattr> "
"L</guestfs_lsetxattr> L</guestfs_lxattrlist> L</guestfs_removexattr> "
"L</guestfs_setxattr>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:58
msgid "B<luks>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:60
msgid ""
"The following functions: L</guestfs_luks_add_key> L</guestfs_luks_close> "
"L</guestfs_luks_format> L</guestfs_luks_format_cipher> "
"L</guestfs_luks_kill_slot> L</guestfs_luks_open> L</guestfs_luks_open_ro>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:69
msgid "B<lvm2>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:71
msgid ""
"The following functions: L</guestfs_is_lv> L</guestfs_lvcreate> "
"L</guestfs_lvm_remove_all> L</guestfs_lvm_set_filter> L</guestfs_lvremove> "
"L</guestfs_lvresize> L</guestfs_lvresize_free> L</guestfs_lvs> "
"L</guestfs_lvs_full> L</guestfs_pvcreate> L</guestfs_pvremove> "
"L</guestfs_pvresize> L</guestfs_pvresize_size> L</guestfs_pvs> "
"L</guestfs_pvs_full> L</guestfs_vg_activate> L</guestfs_vg_activate_all> "
"L</guestfs_vgcreate> L</guestfs_vgremove> L</guestfs_vgs> "
"L</guestfs_vgs_full>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:94
msgid "B<mknod>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:96
msgid ""
"The following functions: L</guestfs_mkfifo> L</guestfs_mknod> "
"L</guestfs_mknod_b> L</guestfs_mknod_c>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:102
msgid "B<ntfs3g>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:104
msgid "The following functions: L</guestfs_ntfs_3g_probe>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:107
msgid "B<ntfsprogs>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:109
msgid "The following functions: L</guestfs_ntfsresize> L</guestfs_ntfsresize_size>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:113
msgid "B<realpath>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:115
msgid "The following functions: L</guestfs_realpath>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:118
msgid "B<scrub>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:120
msgid ""
"The following functions: L</guestfs_scrub_device> L</guestfs_scrub_file> "
"L</guestfs_scrub_freespace>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:125
msgid "B<selinux>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:127
msgid "The following functions: L</guestfs_getcon> L</guestfs_setcon>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:131
msgid "B<xz>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:133
msgid "The following functions: L</guestfs_txz_in> L</guestfs_txz_out>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:137
msgid "B<zerofree>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:139
msgid "The following functions: L</guestfs_zerofree>"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:1
msgid "guestfs_int_bool"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:3
#, no-wrap
msgid ""
" struct guestfs_int_bool {\n"
"   int32_t i;\n"
"   int32_t b;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:8
#, no-wrap
msgid ""
" struct guestfs_int_bool_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_int_bool *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:13
#, no-wrap
msgid ""
" void guestfs_free_int_bool (struct guestfs_free_int_bool *);\n"
" void guestfs_free_int_bool_list (struct guestfs_free_int_bool_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:16
msgid "guestfs_lvm_pv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:18
#, no-wrap
msgid ""
" struct guestfs_lvm_pv {\n"
"   char *pv_name;\n"
"   /* The next field is NOT nul-terminated, be careful when printing it: "
"*/\n"
"   char pv_uuid[32];\n"
"   char *pv_fmt;\n"
"   uint64_t pv_size;\n"
"   uint64_t dev_size;\n"
"   uint64_t pv_free;\n"
"   uint64_t pv_used;\n"
"   char *pv_attr;\n"
"   int64_t pv_pe_count;\n"
"   int64_t pv_pe_alloc_count;\n"
"   char *pv_tags;\n"
"   uint64_t pe_start;\n"
"   int64_t pv_mda_count;\n"
"   uint64_t pv_mda_free;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:36
#, no-wrap
msgid ""
" struct guestfs_lvm_pv_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_lvm_pv *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:41
#, no-wrap
msgid ""
" void guestfs_free_lvm_pv (struct guestfs_free_lvm_pv *);\n"
" void guestfs_free_lvm_pv_list (struct guestfs_free_lvm_pv_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:44
msgid "guestfs_lvm_vg"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:46
#, no-wrap
msgid ""
" struct guestfs_lvm_vg {\n"
"   char *vg_name;\n"
"   /* The next field is NOT nul-terminated, be careful when printing it: "
"*/\n"
"   char vg_uuid[32];\n"
"   char *vg_fmt;\n"
"   char *vg_attr;\n"
"   uint64_t vg_size;\n"
"   uint64_t vg_free;\n"
"   char *vg_sysid;\n"
"   uint64_t vg_extent_size;\n"
"   int64_t vg_extent_count;\n"
"   int64_t vg_free_count;\n"
"   int64_t max_lv;\n"
"   int64_t max_pv;\n"
"   int64_t pv_count;\n"
"   int64_t lv_count;\n"
"   int64_t snap_count;\n"
"   int64_t vg_seqno;\n"
"   char *vg_tags;\n"
"   int64_t vg_mda_count;\n"
"   uint64_t vg_mda_free;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:69
#, no-wrap
msgid ""
" struct guestfs_lvm_vg_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_lvm_vg *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:74
#, no-wrap
msgid ""
" void guestfs_free_lvm_vg (struct guestfs_free_lvm_vg *);\n"
" void guestfs_free_lvm_vg_list (struct guestfs_free_lvm_vg_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:77
msgid "guestfs_lvm_lv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:79
#, no-wrap
msgid ""
" struct guestfs_lvm_lv {\n"
"   char *lv_name;\n"
"   /* The next field is NOT nul-terminated, be careful when printing it: "
"*/\n"
"   char lv_uuid[32];\n"
"   char *lv_attr;\n"
"   int64_t lv_major;\n"
"   int64_t lv_minor;\n"
"   int64_t lv_kernel_major;\n"
"   int64_t lv_kernel_minor;\n"
"   uint64_t lv_size;\n"
"   int64_t seg_count;\n"
"   char *origin;\n"
"   /* The next field is [0..100] or -1 meaning 'not present': */\n"
"   float snap_percent;\n"
"   /* The next field is [0..100] or -1 meaning 'not present': */\n"
"   float copy_percent;\n"
"   char *move_pv;\n"
"   char *lv_tags;\n"
"   char *mirror_log;\n"
"   char *modules;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:101
#, no-wrap
msgid ""
" struct guestfs_lvm_lv_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_lvm_lv *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:106
#, no-wrap
msgid ""
" void guestfs_free_lvm_lv (struct guestfs_free_lvm_lv *);\n"
" void guestfs_free_lvm_lv_list (struct guestfs_free_lvm_lv_list *);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:111
#, no-wrap
msgid ""
" struct guestfs_stat {\n"
"   int64_t dev;\n"
"   int64_t ino;\n"
"   int64_t mode;\n"
"   int64_t nlink;\n"
"   int64_t uid;\n"
"   int64_t gid;\n"
"   int64_t rdev;\n"
"   int64_t size;\n"
"   int64_t blksize;\n"
"   int64_t blocks;\n"
"   int64_t atime;\n"
"   int64_t mtime;\n"
"   int64_t ctime;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:127
#, no-wrap
msgid ""
" struct guestfs_stat_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_stat *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:132
#, no-wrap
msgid ""
" void guestfs_free_stat (struct guestfs_free_stat *);\n"
" void guestfs_free_stat_list (struct guestfs_free_stat_list *);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:137
#, no-wrap
msgid ""
" struct guestfs_statvfs {\n"
"   int64_t bsize;\n"
"   int64_t frsize;\n"
"   int64_t blocks;\n"
"   int64_t bfree;\n"
"   int64_t bavail;\n"
"   int64_t files;\n"
"   int64_t ffree;\n"
"   int64_t favail;\n"
"   int64_t fsid;\n"
"   int64_t flag;\n"
"   int64_t namemax;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:151
#, no-wrap
msgid ""
" struct guestfs_statvfs_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_statvfs *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:156
#, no-wrap
msgid ""
" void guestfs_free_statvfs (struct guestfs_free_statvfs *);\n"
" void guestfs_free_statvfs_list (struct guestfs_free_statvfs_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:159
msgid "guestfs_dirent"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:161
#, no-wrap
msgid ""
" struct guestfs_dirent {\n"
"   int64_t ino;\n"
"   char ftyp;\n"
"   char *name;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:167
#, no-wrap
msgid ""
" struct guestfs_dirent_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_dirent *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:172
#, no-wrap
msgid ""
" void guestfs_free_dirent (struct guestfs_free_dirent *);\n"
" void guestfs_free_dirent_list (struct guestfs_free_dirent_list *);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:177
#, no-wrap
msgid ""
" struct guestfs_version {\n"
"   int64_t major;\n"
"   int64_t minor;\n"
"   int64_t release;\n"
"   char *extra;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:184
#, no-wrap
msgid ""
" struct guestfs_version_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_version *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:189
#, no-wrap
msgid ""
" void guestfs_free_version (struct guestfs_free_version *);\n"
" void guestfs_free_version_list (struct guestfs_free_version_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:192
msgid "guestfs_xattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:194
#, no-wrap
msgid ""
" struct guestfs_xattr {\n"
"   char *attrname;\n"
"   /* The next two fields describe a byte array. */\n"
"   uint32_t attrval_len;\n"
"   char *attrval;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:201
#, no-wrap
msgid ""
" struct guestfs_xattr_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_xattr *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:206
#, no-wrap
msgid ""
" void guestfs_free_xattr (struct guestfs_free_xattr *);\n"
" void guestfs_free_xattr_list (struct guestfs_free_xattr_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:209
msgid "guestfs_inotify_event"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:211
#, no-wrap
msgid ""
" struct guestfs_inotify_event {\n"
"   int64_t in_wd;\n"
"   uint32_t in_mask;\n"
"   uint32_t in_cookie;\n"
"   char *in_name;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:218
#, no-wrap
msgid ""
" struct guestfs_inotify_event_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_inotify_event *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:223
#, no-wrap
msgid ""
" void guestfs_free_inotify_event (struct guestfs_free_inotify_event *);\n"
" void guestfs_free_inotify_event_list (struct "
"guestfs_free_inotify_event_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:226
msgid "guestfs_partition"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:228
#, no-wrap
msgid ""
" struct guestfs_partition {\n"
"   int32_t part_num;\n"
"   uint64_t part_start;\n"
"   uint64_t part_end;\n"
"   uint64_t part_size;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:235
#, no-wrap
msgid ""
" struct guestfs_partition_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_partition *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:240
#, no-wrap
msgid ""
" void guestfs_free_partition (struct guestfs_free_partition *);\n"
" void guestfs_free_partition_list (struct guestfs_free_partition_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:243
msgid "guestfs_application"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:245
#, no-wrap
msgid ""
" struct guestfs_application {\n"
"   char *app_name;\n"
"   char *app_display_name;\n"
"   int32_t app_epoch;\n"
"   char *app_version;\n"
"   char *app_release;\n"
"   char *app_install_path;\n"
"   char *app_trans_path;\n"
"   char *app_publisher;\n"
"   char *app_url;\n"
"   char *app_source_package;\n"
"   char *app_summary;\n"
"   char *app_description;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:260
#, no-wrap
msgid ""
" struct guestfs_application_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_application *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:265
#, no-wrap
msgid ""
" void guestfs_free_application (struct guestfs_free_application *);\n"
" void guestfs_free_application_list (struct guestfs_free_application_list "
"*);\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:5
msgid "guestfish - the libguestfs Filesystem Interactive SHell"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:9
#, no-wrap
msgid ""
" guestfish [--options] [commands]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:11
#, no-wrap
msgid ""
" guestfish\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:13
#, no-wrap
msgid ""
" guestfish [--ro|--rw] -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:15
#, no-wrap
msgid ""
" guestfish [--ro|--rw] -a disk.img -m dev[:mountpoint]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:17
#, no-wrap
msgid ""
" guestfish -d libvirt-domain\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:19
#, no-wrap
msgid ""
" guestfish [--ro|--rw] -a disk.img -i\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:21
#, no-wrap
msgid ""
" guestfish -d libvirt-domain -i\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:23 ../fuse/guestmount.pod:15 ../tools/virt-edit.pl:44 ../tools/virt-win-reg.pl:51 ../tools/virt-tar.pl:64
msgid "WARNING"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:25
msgid ""
"Using guestfish in read/write mode on live virtual machines can be "
"dangerous, potentially causing disk corruption.  Use the I<--ro> (read-only) "
"option to use guestfish safely if the disk image or virtual machine might be "
"live."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:32
msgid ""
"Guestfish is a shell and command-line tool for examining and modifying "
"virtual machine filesystems.  It uses libguestfs and exposes all of the "
"functionality of the guestfs API, see L<guestfs(3)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:36
msgid ""
"Guestfish gives you structured access to the libguestfs API, from shell "
"scripts or the command line or interactively.  If you want to rescue a "
"broken virtual machine image, you should look at the L<virt-rescue(1)> "
"command."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:41 ../fish/guestfish.pod:947 ../fuse/guestmount.pod:39 ../tools/virt-edit.pl:63 ../tools/virt-tar.pl:50
msgid "EXAMPLES"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:43
msgid "As an interactive shell"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:45
#, no-wrap
msgid ""
" $ guestfish\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:47
#, no-wrap
msgid ""
" Welcome to guestfish, the libguestfs filesystem interactive shell for\n"
" editing virtual machine filesystems.\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:50
#, no-wrap
msgid ""
" Type: 'help' for a list of commands\n"
"       'man' to read the manual\n"
"       'quit' to quit the shell\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:54
#, no-wrap
msgid ""
" ><fs> add-ro disk.img\n"
" ><fs> run\n"
" ><fs> list-filesystems\n"
" /dev/sda1: ext4\n"
" /dev/vg_guest/lv_root: ext4\n"
" /dev/vg_guest/lv_swap: swap\n"
" ><fs> mount /dev/vg_guest/lv_root /\n"
" ><fs> cat /etc/fstab\n"
" # /etc/fstab\n"
" # Created by anaconda\n"
" [...]\n"
" ><fs> exit\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:67
msgid "From shell scripts"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:69
msgid "Create a new C</etc/motd> file in a guest or disk image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:71
#, no-wrap
msgid ""
" guestfish <<_EOF_\n"
" add disk.img\n"
" run\n"
" mount /dev/vg_guest/lv_root /\n"
" write /etc/motd \"Welcome, new users\"\n"
" _EOF_\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:78
msgid "List the LVM logical volumes in a disk image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:80
#, no-wrap
msgid ""
" guestfish -a disk.img --ro <<_EOF_\n"
" run\n"
" lvs\n"
" _EOF_\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:85
msgid "List all the filesystems in a disk image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:87
#, no-wrap
msgid ""
" guestfish -a disk.img --ro <<_EOF_\n"
" run\n"
" list-filesystems\n"
" _EOF_\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:92
msgid "On one command line"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:94
msgid "Update C</etc/resolv.conf> in a guest:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:96
#, no-wrap
msgid ""
" guestfish \\\n"
"   add disk.img : run : mount /dev/vg_guest/lv_root / : \\\n"
"   write /etc/resolv.conf \"nameserver 1.2.3.4\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:100
msgid "Edit C</boot/grub/grub.conf> interactively:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:102
#, no-wrap
msgid ""
" guestfish --rw --add disk.img \\\n"
"   --mount /dev/vg_guest/lv_root \\\n"
"   --mount /dev/sda1:/boot \\\n"
"   edit /boot/grub/grub.conf\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:107
msgid "Mount disks automatically"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:109
msgid ""
"Use the I<-i> option to automatically mount the disks from a virtual "
"machine:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:112
#, no-wrap
msgid ""
" guestfish --ro -a disk.img -i cat /etc/group\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:114
#, no-wrap
msgid ""
" guestfish --ro -d libvirt-domain -i cat /etc/group\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:116
msgid "Another way to edit C</boot/grub/grub.conf> interactively is:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:118
#, no-wrap
msgid ""
" guestfish --rw -a disk.img -i edit /boot/grub/grub.conf\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:120
msgid "As a script interpreter"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:122
msgid "Create a 100MB disk containing an ext2-formatted partition:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:124
#, no-wrap
msgid ""
" #!/usr/bin/guestfish -f\n"
" sparse test1.img 100M\n"
" run\n"
" part-disk /dev/sda mbr\n"
" mkfs ext2 /dev/sda1\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:130
msgid "Start with a prepared disk"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:132
msgid ""
"An alternate way to create a 100MB disk called C<test1.img> containing a "
"single ext2-formatted partition:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:135
#, no-wrap
msgid ""
" guestfish -N fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:137
msgid "To list what is available do:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:139 ../fish/guestfish.pod:938
#, no-wrap
msgid ""
" guestfish -N help | less\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:141
msgid "Remote control"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:143
#, no-wrap
msgid ""
" eval \"`guestfish --listen`\"\n"
" guestfish --remote add-ro disk.img\n"
" guestfish --remote run\n"
" guestfish --remote lvs\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:148 ../test-tool/libguestfs-test-tool.pod:37 ../fuse/guestmount.pod:83 ../tools/virt-edit.pl:81 ../tools/virt-win-reg.pl:96 ../tools/virt-list-filesystems.pl:53 ../tools/virt-tar.pl:103 ../tools/virt-make-fs.pl:153 ../tools/virt-list-partitions.pl:54
msgid "OPTIONS"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:152 ../fuse/guestmount.pod:141 ../tools/virt-edit.pl:89 ../tools/virt-win-reg.pl:104 ../tools/virt-list-filesystems.pl:61 ../tools/virt-tar.pl:111 ../tools/virt-make-fs.pl:161 ../tools/virt-list-partitions.pl:62
msgid "B<--help>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:154
msgid "Displays general help on options."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:156
msgid "B<-h>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:158
msgid "B<--cmd-help>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:160
msgid "Lists all available guestfish commands."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:162
msgid "B<-h cmd>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:164
msgid "B<--cmd-help cmd>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:166
msgid "Displays detailed help on a single command C<cmd>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:168
msgid "B<-a image>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:170
msgid "B<--add image>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:172
msgid "Add a block device or virtual machine image to the shell."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:174 ../fuse/guestmount.pod:91
msgid ""
"The format of the disk image is auto-detected.  To override this and force a "
"particular format use the I<--format=..> option."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:177
msgid ""
"Using this flag is mostly equivalent to using the C<add> command, with "
"C<readonly:true> if the I<--ro> flag was given, and with C<format:...> if "
"the I<--format=...> flag was given."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:181
msgid "B<-c URI>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:183
msgid "B<--connect URI>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:185 ../fuse/guestmount.pod:96
msgid ""
"When used in conjunction with the I<-d> option, this specifies the libvirt "
"URI to use.  The default is to use the default libvirt connection."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:189
msgid "B<--csh>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:191
msgid ""
"If using the I<--listen> option and a csh-like shell, use this option.  See "
"section L</REMOTE CONTROL AND CSH> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:194
msgid "B<-d libvirt-domain>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:196
msgid "B<--domain libvirt-domain>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:198 ../fuse/guestmount.pod:102
msgid ""
"Add disks from the named libvirt domain.  If the I<--ro> option is also "
"used, then any libvirt domain can be used.  However in write mode, only "
"libvirt domains which are shut down can be named here."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:202
msgid ""
"Using this flag is mostly equivalent to using the C<add-domain> command, "
"with C<readonly:true> if the I<--ro> flag was given, and with C<format:...> "
"if the I<--format:...> flag was given."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:206
msgid "B<-D>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:208
msgid "B<--no-dest-paths>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:210
msgid ""
"Don't tab-complete paths on the guest filesystem.  It is useful to be able "
"to hit the tab key to complete paths on the guest filesystem, but this "
"causes extra \"hidden\" guestfs calls to be made, so this option is here to "
"allow this feature to be disabled."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:215 ../fuse/guestmount.pod:118
msgid "B<--echo-keys>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:217 ../fuse/guestmount.pod:120
msgid ""
"When prompting for keys and passphrases, guestfish normally turns echoing "
"off so you cannot see what you are typing.  If you are not worried about "
"Tempest attacks and there is no one else in the room you can specify this "
"flag to see what you are typing."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:222
msgid "B<-f file>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:224
msgid "B<--file file>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:226
msgid "Read commands from C<file>.  To write pure guestfish scripts, use:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:229
#, no-wrap
msgid ""
" #!/usr/bin/guestfish -f\n"
"\n"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:231
msgid "B<--format=raw|qcow2|..>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:233
msgid "B<--format>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:235 ../fuse/guestmount.pod:127
msgid ""
"The default for the I<-a> option is to auto-detect the format of the disk "
"image.  Using this forces the disk format for I<-a> options which follow on "
"the command line.  Using I<--format> with no argument switches back to "
"auto-detection for subsequent I<-a> options."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:242
#, no-wrap
msgid ""
" guestfish --format=raw -a disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:244
msgid "forces raw format (no auto-detection) for C<disk.img>."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:246
#, no-wrap
msgid ""
" guestfish --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:248
msgid ""
"forces raw format (no auto-detection) for C<disk.img> and reverts to "
"auto-detection for C<another.img>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:251
msgid ""
"If you have untrusted raw-format guest disk images, you should use this "
"option to specify the disk format.  This avoids a possible security problem "
"with malicious guests (CVE-2010-3851).  See also L</add-drive-opts>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:256
msgid "B<-i>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:258
msgid "B<--inspector>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:260 ../fuse/guestmount.pod:147
msgid ""
"Using L<virt-inspector(1)> code, inspect the disks looking for an operating "
"system and mount filesystems as they would be mounted on the real virtual "
"machine."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:264
msgid "Typical usage is either:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:266
#, no-wrap
msgid ""
" guestfish -d myguest -i\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:268
msgid "(for an inactive libvirt domain called I<myguest>), or:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:270
#, no-wrap
msgid ""
" guestfish --ro -d myguest -i\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:272
msgid "(for active domains, readonly), or specify the block device directly:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:274
#, no-wrap
msgid ""
" guestfish --rw -a /dev/Guests/MyGuest -i\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:276
msgid ""
"Note that the command line syntax changed slightly over older versions of "
"guestfish.  You can still use the old syntax:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:279
#, no-wrap
msgid ""
" guestfish [--ro] -i disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:281
#, no-wrap
msgid ""
" guestfish [--ro] -i libvirt-domain\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:283
msgid ""
"Using this flag is mostly equivalent to using the C<inspect-os> command and "
"then using other commands to mount the filesystems that were found."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:287 ../fuse/guestmount.pod:151
msgid "B<--keys-from-stdin>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:289 ../fuse/guestmount.pod:153
msgid ""
"Read key or passphrase parameters from stdin.  The default is to try to read "
"passphrases from the user by opening C</dev/tty>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:292
msgid "B<--listen>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:294
msgid ""
"Fork into the background and listen for remote commands.  See section "
"L</REMOTE CONTROL GUESTFISH OVER A SOCKET> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:297 ../fuse/guestmount.pod:156
msgid "B<--live>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:299 ../fuse/guestmount.pod:158
msgid ""
"Connect to a live virtual machine.  (Experimental, see "
"L<guestfs(3)/ATTACHING TO RUNNING DAEMONS>)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:302 ../fuse/guestmount.pod:161
msgid "B<-m dev[:mountpoint[:options]]>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:304 ../fuse/guestmount.pod:163
msgid "B<--mount dev[:mountpoint[:options]]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:306
msgid "Mount the named partition or logical volume on the given mountpoint."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:308
msgid "If the mountpoint is omitted, it defaults to C</>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:310
msgid "You have to mount something on C</> before most commands will work."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:312
msgid ""
"If any I<-m> or I<--mount> options are given, the guest is automatically "
"launched."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:315
msgid ""
"If you don't know what filesystems a disk image contains, you can either run "
"guestfish without this option, then list the partitions, filesystems and LVs "
"available (see L</list-partitions>, L</list-filesystems> and L</lvs> "
"commands), or you can use the L<virt-filesystems(1)> program."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:321 ../fuse/guestmount.pod:171
msgid ""
"The third (and rarely used) part of the mount parameter is the list of mount "
"options used to mount the underlying filesystem.  If this is not given, then "
"the mount options are either the empty string or C<ro> (the latter if the "
"I<--ro> flag is used).  By specifying the mount options, you override this "
"default choice.  Probably the only time you would use this is to enable ACLs "
"and/or extended attributes if the filesystem can support them:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:329 ../fuse/guestmount.pod:179
#, no-wrap
msgid ""
" -m /dev/sda1:/:acl,user_xattr\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:331
msgid "Using this flag is equivalent to using the C<mount-options> command."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:333
msgid "B<-n>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:335
msgid "B<--no-sync>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:337
msgid ""
"Disable autosync.  This is enabled by default.  See the discussion of "
"autosync in the L<guestfs(3)> manpage."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:340
msgid "B<-N type>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:342
msgid "B<--new type>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:344
msgid "B<-N help>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:346
msgid ""
"Prepare a fresh disk image formatted as \"type\".  This is an alternative to "
"the I<-a> option: whereas I<-a> adds an existing disk, I<-N> creates a "
"preformatted disk with a filesystem and adds it.  See L</PREPARED DISK "
"IMAGES> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:351
msgid "B<--progress-bars>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:353
msgid "Enable progress bars, even when guestfish is used non-interactively."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:355
msgid ""
"Progress bars are enabled by default when guestfish is used as an "
"interactive shell."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:358
msgid "B<--no-progress-bars>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:360
msgid "Disable progress bars."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:362
msgid "B<--remote[=pid]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:364
msgid ""
"Send remote commands to C<$GUESTFISH_PID> or C<pid>.  See section L</REMOTE "
"CONTROL GUESTFISH OVER A SOCKET> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:367
msgid "B<-r>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:369
msgid "B<--ro>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:371
msgid ""
"This changes the I<-a>, I<-d> and I<-m> options so that disks are added and "
"mounts are done read-only."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:374
msgid ""
"The option must always be used if the disk image or virtual machine might be "
"running, and is generally recommended in cases where you don't need write "
"access to the disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:378
msgid ""
"Note that prepared disk images created with I<-N> are not affected by this "
"option.  Also commands like C<add> are not affected - you have to specify "
"the C<readonly:true> option explicitly if you need it."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:382
msgid "See also L</OPENING DISKS FOR READ AND WRITE> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:384 ../fuse/guestmount.pod:235
msgid "B<--selinux>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:386
msgid "Enable SELinux support for the guest.  See L<guestfs(3)/SELINUX>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:388
msgid "B<-v>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:390
msgid "B<--verbose>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:392
msgid ""
"Enable very verbose messages.  This is particularly useful if you find a "
"bug."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:395
msgid "B<-V>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:397 ../tools/virt-edit.pl:97 ../tools/virt-win-reg.pl:112 ../tools/virt-list-filesystems.pl:69 ../tools/virt-tar.pl:119 ../tools/virt-make-fs.pl:169 ../tools/virt-list-partitions.pl:70
msgid "B<--version>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:399
msgid "Display the guestfish / libguestfs version number and exit."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:401
msgid "B<-w>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:403
msgid "B<--rw>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:405 ../fuse/guestmount.pod:249
msgid ""
"This changes the I<-a>, I<-d> and I<-m> options so that disks are added and "
"mounts are done read-write."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:408
msgid "See L</OPENING DISKS FOR READ AND WRITE> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:410
msgid "B<-x>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:412
msgid "Echo each command before executing it."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:416
msgid "COMMANDS ON COMMAND LINE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:418
msgid "Any additional (non-option) arguments are treated as commands to execute."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:421
msgid ""
"Commands to execute should be separated by a colon (C<:>), where the colon "
"is a separate parameter.  Thus:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:424
#, no-wrap
msgid ""
" guestfish cmd [args...] : cmd [args...] : cmd [args...] ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:426
msgid ""
"If there are no additional arguments, then we enter a shell, either an "
"interactive shell with a prompt (if the input is a terminal) or a "
"non-interactive shell."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:430
msgid ""
"In either command line mode or non-interactive shell, the first command that "
"gives an error causes the whole shell to exit.  In interactive mode (with a "
"prompt) if a command fails, you can continue to enter commands."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:435
msgid "USING launch (OR run)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:437
msgid ""
"As with L<guestfs(3)>, you must first configure your guest by adding disks, "
"then launch it, then mount any disks you need, and finally issue "
"actions/commands.  So the general order of the day is:"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:445
msgid "add or -a/--add"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:449
msgid "launch (aka run)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:453
msgid "mount or -m/--mount"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:457
msgid "any other commands"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:461
msgid ""
"C<run> is a synonym for C<launch>.  You must C<launch> (or C<run>)  your "
"guest before mounting or performing any other commands."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:464
msgid ""
"The only exception is that if any of the I<-i>, I<-m>, I<--mount>, I<-N> or "
"I<--new> options were given then C<run> is done automatically, simply "
"because guestfish can't perform the action you asked for without doing this."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:469
msgid "OPENING DISKS FOR READ AND WRITE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:471
msgid ""
"The guestfish, L<guestmount(1)> and L<virt-rescue(1)> options I<--ro> and "
"I<--rw> affect whether the other command line options I<-a>, I<-c>, I<-d>, "
"I<-i> and I<-m> open disk images read-only or for writing."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:476
msgid ""
"In libguestfs E<le> 1.10, guestfish, guestmount and virt-rescue defaulted to "
"opening disk images supplied on the command line for write.  To open a disk "
"image read-only you have to do I<-a image --ro>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:480
msgid ""
"This matters: If you accidentally open a live VM disk image writable then "
"you will cause irreversible disk corruption."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:483
msgid ""
"By libguestfs 1.12 we intend to change the default the other way.  Disk "
"images will be opened read-only.  You will have to either specify "
"I<guestfish --rw>, I<guestmount --rw>, I<virt-rescue --rw>, or change the "
"configuration file C</etc/libguestfs-tools.conf> in order to get write "
"access for disk images specified by those other command line options."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:490
msgid ""
"This version of guestfish, guestmount and virt-rescue has a I<--rw> option "
"which does nothing (it is already the default).  However it is highly "
"recommended that you use this option to indicate that you need write access, "
"and prepare your scripts for the day when this option will be required for "
"write access."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:496
msgid ""
"B<Note:> This does I<not> affect commands like L</add> and L</mount>, or any "
"other libguestfs program apart from guestfish and guestmount."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:499
msgid "QUOTING"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:501
msgid ""
"You can quote ordinary parameters using either single or double quotes.  For "
"example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:504
#, no-wrap
msgid ""
" add \"file with a space.img\"\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:506
#, no-wrap
msgid ""
" rm '/file name'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:508
#, no-wrap
msgid ""
" rm '/\"'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:510
msgid ""
"A few commands require a list of strings to be passed.  For these, use a "
"whitespace-separated list, enclosed in quotes.  Strings containing "
"whitespace to be passed through must be enclosed in single quotes.  A "
"literal single quote must be escaped with a backslash."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:515
#, no-wrap
msgid ""
" vgcreate VG \"/dev/sda1 /dev/sdb1\"\n"
" command \"/bin/echo 'foo      bar'\"\n"
" command \"/bin/echo \\'foo\\'\"\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:519
msgid "OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:521
msgid ""
"Some commands take optional arguments.  These arguments appear in this "
"documentation as C<[argname:..]>.  You can use them as in these examples:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:525
#, no-wrap
msgid ""
" add-drive-opts filename\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:527
#, no-wrap
msgid ""
" add-drive-opts filename readonly:true\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:529
#, no-wrap
msgid ""
" add-drive-opts filename format:qcow2 readonly:false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:531
msgid ""
"Each optional argument can appear at most once.  All optional arguments must "
"appear after the required ones."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:534
msgid "NUMBERS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:536
msgid "This section applies to all commands which can take integers as parameters."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:539
msgid "SIZE SUFFIX"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:541
msgid ""
"When the command takes a parameter measured in bytes, you can use one of the "
"following suffixes to specify kilobytes, megabytes and larger sizes:"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:547
msgid "B<k> or B<K> or B<KiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:549
msgid "The size in kilobytes (multiplied by 1024)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:551
msgid "B<KB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:553
msgid "The size in SI 1000 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:555
msgid "B<M> or B<MiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:557
msgid "The size in megabytes (multiplied by 1048576)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:559
msgid "B<MB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:561
msgid "The size in SI 1000000 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:563
msgid "B<G> or B<GiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:565
msgid "The size in gigabytes (multiplied by 2**30)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:567
msgid "B<GB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:569
msgid "The size in SI 10**9 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:571
msgid "B<T> or B<TiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:573
msgid "The size in terabytes (multiplied by 2**40)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:575
msgid "B<TB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:577
msgid "The size in SI 10**12 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:579
msgid "B<P> or B<PiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:581
msgid "The size in petabytes (multiplied by 2**50)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:583
msgid "B<PB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:585
msgid "The size in SI 10**15 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:587
msgid "B<E> or B<EiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:589
msgid "The size in exabytes (multiplied by 2**60)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:591
msgid "B<EB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:593
msgid "The size in SI 10**18 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:595
msgid "B<Z> or B<ZiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:597
msgid "The size in zettabytes (multiplied by 2**70)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:599
msgid "B<ZB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:601
msgid "The size in SI 10**21 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:603
msgid "B<Y> or B<YiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:605
msgid "The size in yottabytes (multiplied by 2**80)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:607
msgid "B<YB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:609
msgid "The size in SI 10**24 byte units."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:615
#, no-wrap
msgid ""
" truncate-size /file 1G\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:617
msgid "would truncate the file to 1 gigabyte."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:619
msgid ""
"Be careful because a few commands take sizes in kilobytes or megabytes "
"(eg. the parameter to L</memsize> is specified in megabytes already).  "
"Adding a suffix will probably not do what you expect."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:623
msgid "OCTAL AND HEXADECIMAL NUMBERS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:625
msgid ""
"For specifying the radix (base) use the C convention: C<0> to prefix an "
"octal number or C<0x> to prefix a hexadecimal number.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:628
#, no-wrap
msgid ""
" 1234      decimal number 1234\n"
" 02322     octal number, equivalent to decimal 1234\n"
" 0x4d2     hexadecimal number, equivalent to decimal 1234\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:632
msgid ""
"When using the C<chmod> command, you almost always want to specify an octal "
"number for the mode, and you must prefix it with C<0> (unlike the Unix "
"L<chmod(1)> program):"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:636
#, no-wrap
msgid ""
" chmod 0777 /public  # OK\n"
" chmod 777 /public   # WRONG! This is mode 777 decimal = 01411 octal.\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:639
msgid ""
"Commands that return numbers usually print them in decimal, but some "
"commands print numbers in other radices (eg. C<umask> prints the mode in "
"octal, preceeded by C<0>)."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:643
msgid "WILDCARDS AND GLOBBING"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:645
msgid ""
"Neither guestfish nor the underlying guestfs API performs wildcard expansion "
"(globbing) by default.  So for example the following will not do what you "
"expect:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:649
#, no-wrap
msgid ""
" rm-rf /home/*\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:651
msgid ""
"Assuming you don't have a directory called literally C</home/*> then the "
"above command will return an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:654
msgid "To perform wildcard expansion, use the C<glob> command."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:656
#, no-wrap
msgid ""
" glob rm-rf /home/*\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:658
msgid ""
"runs C<rm-rf> on each path that matches (ie. potentially running the command "
"many times), equivalent to:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:661
#, no-wrap
msgid ""
" rm-rf /home/jim\n"
" rm-rf /home/joe\n"
" rm-rf /home/mary\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:665
msgid "C<glob> only works on simple guest paths and not on device names."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:667
msgid ""
"If you have several parameters, each containing a wildcard, then glob will "
"perform a Cartesian product."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:670
msgid "COMMENTS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:672
msgid ""
"Any line which starts with a I<#> character is treated as a comment and "
"ignored.  The I<#> can optionally be preceeded by whitespace, but B<not> by "
"a command.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:676
#, no-wrap
msgid ""
" # this is a comment\n"
"         # this is a comment\n"
" foo # NOT a comment\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:680
msgid "Blank lines are also ignored."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:682
msgid "RUNNING COMMANDS LOCALLY"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:684
msgid ""
"Any line which starts with a I<!> character is treated as a command sent to "
"the local shell (C</bin/sh> or whatever L<system(3)> uses).  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:688
#, no-wrap
msgid ""
" !mkdir local\n"
" tgz-out /remote local/remote-data.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:691
msgid ""
"will create a directory C<local> on the host, and then export the contents "
"of C</remote> on the mounted filesystem to C<local/remote-data.tar.gz>.  "
"(See C<tgz-out>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:695
msgid ""
"To change the local directory, use the C<lcd> command.  C<!cd> will have no "
"effect, due to the way that subprocesses work in Unix."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:698
msgid "LOCAL COMMANDS WITH INLINE EXECUTION"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:700
msgid ""
"If a line starts with I<E<lt>!> then the shell command is executed (as for "
"I<!>), but subsequently any output (stdout) of the shell command is parsed "
"and executed as guestfish commands."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:704
msgid ""
"Thus you can use shell script to construct arbitrary guestfish commands "
"which are then parsed by guestfish."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:707
msgid ""
"For example it is tedious to create a sequence of files (eg. C</foo.1> "
"through C</foo.100>) using guestfish commands alone.  However this is simple "
"if we use a shell script to create the guestfish commands for us:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:712
#, no-wrap
msgid ""
" <! for n in `seq 1 100`; do echo write /foo.$n $n; done\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:714
msgid "or with names like C</foo.001>:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:716
#, no-wrap
msgid ""
" <! for n in `seq 1 100`; do printf \"write /foo.%03d %d\\n\" $n $n; done\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:718
msgid ""
"When using guestfish interactively it can be helpful to just run the shell "
"script first (ie. remove the initial C<E<lt>> character so it is just an "
"ordinary I<!> local command), see what guestfish commands it would run, and "
"when you are happy with those prepend the C<E<lt>> character to run the "
"guestfish commands for real."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:724
msgid "PIPES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:726
msgid ""
"Use C<command E<lt>spaceE<gt> | command> to pipe the output of the first "
"command (a guestfish command) to the second command (any host command).  For "
"example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:730
#, no-wrap
msgid ""
" cat /etc/passwd | awk -F: '$3 == 0 { print }'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:732
msgid ""
"(where C<cat> is the guestfish cat command, but C<awk> is the host awk "
"program).  The above command would list all accounts in the guest filesystem "
"which have UID 0, ie. root accounts including backdoors.  Other examples:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:737
#, no-wrap
msgid ""
" hexdump /bin/ls | head\n"
" list-devices | tail -1\n"
" tgz-out / - | tar ztf -\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:741
msgid ""
"The space before the pipe symbol is required, any space after the pipe "
"symbol is optional.  Everything after the pipe symbol is just passed "
"straight to the host shell, so it can contain redirections, globs and "
"anything else that makes sense on the host side."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:746
msgid ""
"To use a literal argument which begins with a pipe symbol, you have to quote "
"it, eg:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:749
#, no-wrap
msgid ""
" echo \"|\"\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:751
msgid "HOME DIRECTORIES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:753
msgid ""
"If a parameter starts with the character C<~> then the tilde may be expanded "
"as a home directory path (either C<~> for the current user's home directory, "
"or C<~user> for another user)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:757
msgid ""
"Note that home directory expansion happens for users known I<on the host>, "
"not in the guest filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:760
msgid ""
"To use a literal argument which begins with a tilde, you have to quote it, "
"eg:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:763
#, no-wrap
msgid ""
" echo \"~\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:767
msgid ""
"Libguestfs has some support for Linux guests encrypted according to the "
"Linux Unified Key Setup (LUKS) standard, which includes nearly all whole "
"disk encryption systems used by modern Linux guests.  Currently only "
"LVM-on-LUKS is supported."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:772
msgid "Identify encrypted block devices and partitions using L</vfs-type>:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:774
#, no-wrap
msgid ""
" ><fs> vfs-type /dev/sda2\n"
" crypto_LUKS\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:777
msgid ""
"Then open those devices using L</luks-open>.  This creates a device-mapper "
"device called C</dev/mapper/luksdev>."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:780
#, no-wrap
msgid ""
" ><fs> luks-open /dev/sda2 luksdev\n"
" Enter key or passphrase (\"key\"): <enter the passphrase>\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:783
msgid ""
"Finally you have to tell LVM to scan for volume groups on the newly created "
"mapper device:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:786
#, no-wrap
msgid ""
" vgscan\n"
" vg-activate-all true\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:789
msgid "The logical volume(s) can now be mounted in the usual way."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:791
msgid ""
"Before closing a LUKS device you must unmount any logical volumes on it and "
"deactivate the volume groups by calling C<vg-activate false VG> on each "
"one.  Then you can close the mapper device:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:795
#, no-wrap
msgid ""
" vg-activate false /dev/VG\n"
" luks-close /dev/mapper/luksdev\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:798 ../tools/virt-edit.pl:342
msgid "WINDOWS PATHS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:800
msgid ""
"If a path is prefixed with C<win:> then you can use Windows-style drive "
"letters and paths (with some limitations).  The following commands are "
"equivalent:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:804
#, no-wrap
msgid ""
" file /WINDOWS/system32/config/system.LOG\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:806
#, no-wrap
msgid ""
" file win:\\windows\\system32\\config\\system.log\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:808
#, no-wrap
msgid ""
" file WIN:C:\\Windows\\SYSTEM32\\CONFIG\\SYSTEM.LOG\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:810
msgid ""
"The parameter is rewritten \"behind the scenes\" by looking up the position "
"where the drive is mounted, prepending that to the path, changing all "
"backslash characters to forward slash, then resolving the result using "
"L</case-sensitive-path>.  For example if the E: drive was mounted on C</e> "
"then the parameter might be rewritten like this:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:816
#, no-wrap
msgid ""
" win:e:\\foo\\bar => /e/FOO/bar\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:818
msgid "This only works in argument positions that expect a path."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:820
msgid "UPLOADING AND DOWNLOADING FILES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:822
msgid ""
"For commands such as C<upload>, C<download>, C<tar-in>, C<tar-out> and "
"others which upload from or download to a local file, you can use the "
"special filename C<-> to mean \"from stdin\" or \"to stdout\".  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:826
#, no-wrap
msgid ""
" upload - /foo\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:828
msgid "reads stdin and creates from that a file C</foo> in the disk image, and:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:831
#, no-wrap
msgid ""
" tar-out /etc - | tar tf -\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:833
msgid ""
"writes the tarball to stdout and then pipes that into the external \"tar\" "
"command (see L</PIPES>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:836
msgid ""
"When using C<-> to read from stdin, the input is read up to the end of "
"stdin.  You can also use a special \"heredoc\"-like syntax to read up to "
"some arbitrary end marker:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:840
#, no-wrap
msgid ""
" upload -<<END /foo\n"
" input line 1\n"
" input line 2\n"
" input line 3\n"
" END\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:846
msgid ""
"Any string of characters can be used instead of C<END>.  The end marker must "
"appear on a line of its own, without any preceeding or following characters "
"(not even spaces)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:850
msgid ""
"Note that the C<-E<lt>E<lt>> syntax only applies to parameters used to "
"upload local files (so-called \"FileIn\" parameters in the generator)."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:853
msgid "EXIT ON ERROR BEHAVIOUR"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:855
msgid ""
"By default, guestfish will ignore any errors when in interactive mode "
"(ie. taking commands from a human over a tty), and will exit on the first "
"error in non-interactive mode (scripts, commands given on the command line)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:860
msgid ""
"If you prefix a command with a I<-> character, then that command will not "
"cause guestfish to exit, even if that (one) command returns an error."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:864
msgid "REMOTE CONTROL GUESTFISH OVER A SOCKET"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:866
msgid ""
"Guestfish can be remote-controlled over a socket.  This is useful "
"particularly in shell scripts where you want to make several different "
"changes to a filesystem, but you don't want the overhead of starting up a "
"guestfish process each time."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:871
msgid "Start a guestfish server process using:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:873
#, no-wrap
msgid ""
" eval \"`guestfish --listen`\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:875
msgid "and then send it commands by doing:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:877
#, no-wrap
msgid ""
" guestfish --remote cmd [...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:879
msgid "To cause the server to exit, send it the exit command:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:881
#, no-wrap
msgid ""
" guestfish --remote exit\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:883
msgid ""
"Note that the server will normally exit if there is an error in a command.  "
"You can change this in the usual way.  See section L</EXIT ON ERROR "
"BEHAVIOUR>."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:887
msgid "CONTROLLING MULTIPLE GUESTFISH PROCESSES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:889
msgid ""
"The C<eval> statement sets the environment variable C<$GUESTFISH_PID>, which "
"is how the I<--remote> option knows where to send the commands.  You can "
"have several guestfish listener processes running using:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:893
#, no-wrap
msgid ""
" eval \"`guestfish --listen`\"\n"
" pid1=$GUESTFISH_PID\n"
" eval \"`guestfish --listen`\"\n"
" pid2=$GUESTFISH_PID\n"
" ...\n"
" guestfish --remote=$pid1 cmd\n"
" guestfish --remote=$pid2 cmd\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:901
msgid "REMOTE CONTROL AND CSH"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:903
msgid ""
"When using csh-like shells (csh, tcsh etc) you have to add the I<--csh> "
"option:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:906
#, no-wrap
msgid ""
" eval \"`guestfish --listen --csh`\"\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:908
msgid "REMOTE CONTROL DETAILS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:910
msgid ""
"Remote control happens over a Unix domain socket called "
"C</tmp/.guestfish-$UID/socket-$PID>, where C<$UID> is the effective user ID "
"of the process, and C<$PID> is the process ID of the server."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:914
msgid "Guestfish client and server versions must match exactly."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:916
msgid "PREPARED DISK IMAGES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:918
msgid ""
"Use the I<-N type> or I<--new type> parameter to select one of a set of "
"preformatted disk images that guestfish can make for you to save typing.  "
"This is particularly useful for testing purposes.  This option is used "
"instead of the I<-a> option, and like I<-a> can appear multiple times (and "
"can be mixed with I<-a>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:924
msgid ""
"The new disk is called C<test1.img> for the first I<-N>, C<test2.img> for "
"the second and so on.  Existing files in the current directory are "
"I<overwritten>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:928
msgid ""
"The type briefly describes how the disk should be sized, partitioned, how "
"filesystem(s) should be created, and how content should be added.  "
"Optionally the type can be followed by extra parameters, separated by C<:> "
"(colon) characters.  For example, I<-N fs> creates a default 100MB, "
"sparsely-allocated disk, containing a single partition, with the partition "
"formatted as ext2.  I<-N fs:ext4:1G> is the same, but for an ext4 filesystem "
"on a 1GB disk instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:936
msgid "To list the available types and any extra parameters they take, run:"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:940
msgid ""
"Note that the prepared filesystem is not mounted.  You would usually have to "
"use the C<mount /dev/sda1 /> command or add the I<-m /dev/sda1> option."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:944
msgid ""
"If any I<-N> or I<--new> options are given, the guest is automatically "
"launched."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:949
msgid "Create a 100MB disk with an ext4-formatted partition:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:951
#, no-wrap
msgid ""
" guestfish -N fs:ext4\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:953
msgid "Create a 32MB disk with a VFAT-formatted partition, and mount it:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:955
#, no-wrap
msgid ""
" guestfish -N fs:vfat:32M -m /dev/sda1\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:957
msgid "Create a blank 200MB disk:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:959
#, no-wrap
msgid ""
" guestfish -N disk:200M\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:961
msgid "PROGRESS BARS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:963
msgid ""
"Some (not all) long-running commands send progress notification messages as "
"they are running.  Guestfish turns these messages into progress bars."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:967
msgid ""
"When a command that supports progress bars takes longer than two seconds to "
"run, and if progress bars are enabled, then you will see one appearing below "
"the command:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:971
#, no-wrap
msgid ""
" ><fs> copy-size /large-file /another-file 2048M\n"
" / 10% [#####-----------------------------------------] 00:30\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:974
msgid ""
"The spinner on the left hand side moves round once for every progress "
"notification received from the backend.  This is a (reasonably) golden "
"assurance that the command is \"doing something\" even if the progress bar "
"is not moving, because the command is able to send the progress "
"notifications.  When the bar reaches 100% and the command finishes, the "
"spinner disappears."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:981
msgid ""
"Progress bars are enabled by default when guestfish is used interactively.  "
"You can enable them even for non-interactive modes using I<--progress-bars>, "
"and you can disable them completely using I<--no-progress-bars>."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:986
msgid "GUESTFISH COMMANDS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:988
msgid ""
"The commands in this section are guestfish convenience commands, in other "
"words, they are not part of the L<guestfs(3)> API."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:991
msgid "help"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:993
#, no-wrap
msgid ""
" help\n"
" help cmd\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:996
msgid "Without any parameter, this provides general help."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:998
msgid "With a C<cmd> parameter, this displays detailed help for that command."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1000
msgid "quit | exit"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1002
msgid "This exits guestfish.  You can also use C<^D> key."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1004
msgid "@FISH_COMMANDS@"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1006
msgid "COMMANDS"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1010 ../test-tool/libguestfs-test-tool.pod:77
msgid "EXIT CODE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1012
msgid ""
"guestfish returns 0 if the commands completed without error, or 1 if there "
"was an error."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1019
msgid "EDITOR"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1021
msgid ""
"The C<edit> command uses C<$EDITOR> as the editor.  If not set, it uses "
"C<vi>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1024
msgid "GUESTFISH_PID"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1026
msgid ""
"Used with the I<--remote> option to specify the remote guestfish process to "
"control.  See section L</REMOTE CONTROL GUESTFISH OVER A SOCKET>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1030
msgid "HEXEDITOR"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1032
msgid ""
"The L</hexedit> command uses C<$HEXEDITOR> as the external hex editor.  If "
"not specified, the external L<hexedit(1)> program is used."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1036
msgid "HOME"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1038
msgid ""
"If compiled with GNU readline support, various files in the home directory "
"can be used.  See L</FILES>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1047
msgid ""
"Set C<LIBGUESTFS_DEBUG=1> to enable verbose messages.  This has the same "
"effect as using the B<-v> option."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1059
msgid ""
"Set the path that guestfish uses to search for kernel and initrd.img.  See "
"the discussion of paths in L<guestfs(3)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1070
msgid "Set C<LIBGUESTFS_TRACE=1> to enable command traces."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1072
msgid "PAGER"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1074
msgid ""
"The C<more> command uses C<$PAGER> as the pager.  If not set, it uses "
"C<more>."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1090 ../fuse/guestmount.pod:262
msgid "FILES"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1094 ../fuse/guestmount.pod:266
msgid "$HOME/.libguestfs-tools.rc"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1096 ../fuse/guestmount.pod:268
msgid "/etc/libguestfs-tools.conf"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1098 ../fuse/guestmount.pod:270
msgid ""
"This configuration file controls the default read-only or read-write mode "
"(I<--ro> or I<--rw>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1101
msgid "See L</OPENING DISKS FOR READ AND WRITE>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1103
msgid "$HOME/.guestfish"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1105
msgid ""
"If compiled with GNU readline support, then the command history is saved in "
"this file."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1108
msgid "$HOME/.inputrc"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1110
msgid "/etc/inputrc"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1112
msgid ""
"If compiled with GNU readline support, then these files can be used to "
"configure readline.  For further information, please see "
"L<readline(3)/INITIALIZATION FILE>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1116
msgid "To write rules which only apply to guestfish, use:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1118
#, no-wrap
msgid ""
" $if guestfish\n"
" ...\n"
" $endif\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1122
msgid ""
"Variables that you can set in inputrc that change the behaviour of guestfish "
"in useful ways include:"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1127
msgid "completion-ignore-case (default: on)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1129
msgid ""
"By default, guestfish will ignore case when tab-completing paths on the "
"disk.  Use:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1132
#, no-wrap
msgid ""
" set completion-ignore-case off\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1134
msgid "to make guestfish case sensitive."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1138
msgid "test1.img"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1140
msgid "test2.img (etc)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1142
msgid ""
"When using the I<-N> or I<--new> option, the prepared disk or filesystem "
"will be created in the file C<test1.img> in the current directory.  The "
"second use of I<-N> will use C<test2.img> and so on.  Any existing file with "
"the same name will be overwritten."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1151
msgid ""
"L<guestfs(3)>, L<http://libguestfs.org/>, L<virt-cat(1)>, "
"L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-df(1)>, L<virt-edit(1)>, "
"L<virt-filesystems(1)>, L<virt-inspector(1)>, L<virt-list-filesystems(1)>, "
"L<virt-list-partitions(1)>, L<virt-ls(1)>, L<virt-make-fs(1)>, "
"L<virt-rescue(1)>, L<virt-resize(1)>, L<virt-tar(1)>, L<virt-tar-in(1)>, "
"L<virt-tar-out(1)>, L<virt-win-reg(1)>, L<hexedit(1)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1181 ../test-tool/libguestfs-test-tool.pod:102 ../fuse/guestmount.pod:297 ../tools/virt-edit.pl:518 ../tools/virt-win-reg.pl:606 ../tools/virt-list-filesystems.pl:210 ../tools/virt-tar.pl:309 ../tools/virt-make-fs.pl:572 ../tools/virt-list-partitions.pl:277
msgid ""
"This program is free software; you can redistribute it and/or modify it "
"under the terms of the GNU General Public License as published by the Free "
"Software Foundation; either version 2 of the License, or (at your option) "
"any later version."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1186 ../test-tool/libguestfs-test-tool.pod:107 ../fuse/guestmount.pod:302 ../tools/virt-edit.pl:523 ../tools/virt-win-reg.pl:611 ../tools/virt-list-filesystems.pl:215 ../tools/virt-tar.pl:314 ../tools/virt-make-fs.pl:577 ../tools/virt-list-partitions.pl:282
msgid ""
"This program is distributed in the hope that it will be useful, but WITHOUT "
"ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or "
"FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for "
"more details."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1191 ../test-tool/libguestfs-test-tool.pod:112 ../fuse/guestmount.pod:307 ../tools/virt-edit.pl:528 ../tools/virt-win-reg.pl:616 ../tools/virt-list-filesystems.pl:220 ../tools/virt-tar.pl:319 ../tools/virt-make-fs.pl:582 ../tools/virt-list-partitions.pl:287
msgid ""
"You should have received a copy of the GNU General Public License along with "
"this program; if not, write to the Free Software Foundation, Inc., 675 Mass "
"Ave, Cambridge, MA 02139, USA."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1
msgid "add-cdrom"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3
#, no-wrap
msgid ""
" add-cdrom filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:15
msgid ""
"This call checks for the existence of C<filename>.  This stops you from "
"specifying other types of drive which are supported by qemu such as C<nbd:> "
"and C<http:> URLs.  To specify those, use the general L</config> call "
"instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:22
msgid ""
"If you just want to add an ISO file (often you use this as an efficient way "
"to transfer large files into the guest), then you should probably use "
"L</add-drive-ro> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:35
msgid "add-domain"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:37
msgid "domain"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:39
#, no-wrap
msgid ""
" add-domain dom [libvirturi:..] [readonly:..] [iface:..] [live:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:41
msgid ""
"This function adds the disk(s) attached to the named libvirt domain C<dom>.  "
"It works by connecting to libvirt, requesting the domain and domain XML from "
"libvirt, parsing it for disks, and calling L</add-drive-opts> on each one."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:71
msgid ""
"The other optional parameters are passed directly through to "
"L</add-drive-opts>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:74 ../fish/guestfish-actions.pod:138 ../fish/guestfish-actions.pod:3044
msgid ""
"This command has one or more optional arguments.  See L</OPTIONAL "
"ARGUMENTS>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:76
msgid "add-drive"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:78
#, no-wrap
msgid ""
" add-drive filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:80
msgid ""
"This function is the equivalent of calling L</add-drive-opts> with no "
"optional parameters, so the disk is added writable, with the format being "
"detected automatically."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:84
msgid ""
"Automatic detection of the format opens you up to a potential security hole "
"when dealing with untrusted raw-format images.  See CVE-2010-3851 and "
"RHBZ#642934.  Specifying the format closes this security hole.  Therefore "
"you should think about replacing calls to this function with calls to "
"L</add-drive-opts>, and specifying the format."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:91
msgid "add-drive-opts"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:93
msgid "add"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:95
#, no-wrap
msgid ""
" add-drive-opts filename [readonly:..] [format:..] [iface:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:122
msgid ""
"This forces the image format.  If you omit this (or use L</add-drive> or "
"L</add-drive-ro>) then the format is automatically detected.  Possible "
"formats include C<raw> and C<qcow2>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:133
msgid ""
"This rarely-used option lets you emulate the behaviour of the deprecated "
"L</add-drive-with-if> call (q.v.)"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:140
msgid "add-drive-ro"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:142
msgid "add-ro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:144
#, no-wrap
msgid ""
" add-drive-ro filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:146
msgid ""
"This function is the equivalent of calling L</add-drive-opts> with the "
"optional parameter C<GUESTFS_ADD_DRIVE_OPTS_READONLY> set to 1, so the disk "
"is added read-only, with the format being detected automatically."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:151
msgid "add-drive-ro-with-if"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:153
#, no-wrap
msgid ""
" add-drive-ro-with-if filename iface\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:155
msgid ""
"This is the same as L</add-drive-ro> but it allows you to specify the QEMU "
"interface emulation to use at run time."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:165
msgid "add-drive-with-if"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:167
#, no-wrap
msgid ""
" add-drive-with-if filename iface\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:169
msgid ""
"This is the same as L</add-drive> but it allows you to specify the QEMU "
"interface emulation to use at run time."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:179
msgid "aug-clear"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:181
#, no-wrap
msgid ""
" aug-clear augpath\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:186
msgid "aug-close"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:188
#, no-wrap
msgid ""
" aug-close\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:190
msgid ""
"Close the current Augeas handle and free up any resources used by it.  After "
"calling this, you have to call L</aug-init> again before you can use any "
"other Augeas functions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:195
msgid "aug-defnode"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:197
#, no-wrap
msgid ""
" aug-defnode name expr val\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:202
msgid ""
"If C<expr> evaluates to an empty nodeset, a node is created, equivalent to "
"calling L</aug-set> C<expr>, C<value>.  C<name> will be the nodeset "
"containing that single node."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:210
msgid "aug-defvar"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:212
#, no-wrap
msgid ""
" aug-defvar name expr\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:221
msgid "aug-get"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:223
#, no-wrap
msgid ""
" aug-get augpath\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:228
msgid "aug-init"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:230
#, no-wrap
msgid ""
" aug-init root flags\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:236
msgid "You must call this before using any other L</aug-*> commands."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:271
msgid "Do not load the tree in L</aug-init>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:275
msgid "To close the handle, you can call L</aug-close>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:279
msgid "aug-insert"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:281
#, no-wrap
msgid ""
" aug-insert augpath label true|false\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:291
msgid "aug-load"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:293
#, no-wrap
msgid ""
" aug-load\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:300
msgid "aug-ls"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:302
#, no-wrap
msgid ""
" aug-ls augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:304
msgid ""
"This is just a shortcut for listing L</aug-match> C<path/*> and sorting the "
"resulting nodes into alphabetical order."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:307
msgid "aug-match"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:309
#, no-wrap
msgid ""
" aug-match augpath\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:315
msgid "aug-mv"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:317
#, no-wrap
msgid ""
" aug-mv src dest\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:322
msgid "aug-rm"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:324
#, no-wrap
msgid ""
" aug-rm augpath\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:330
msgid "aug-save"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:332
#, no-wrap
msgid ""
" aug-save\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:336
msgid ""
"The flags which were passed to L</aug-init> affect exactly how files are "
"saved."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:339
msgid "aug-set"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:341
#, no-wrap
msgid ""
" aug-set augpath val\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:345
msgid ""
"In the Augeas API, it is possible to clear a node by setting the value to "
"NULL.  Due to an oversight in the libguestfs API you cannot do that with "
"this call.  Instead you must use the L</aug-clear> call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:350
msgid "available"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:352
#, no-wrap
msgid ""
" available 'groups ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:358
msgid ""
"The libguestfs groups, and the functions that those groups correspond to, "
"are listed in L<guestfs(3)/AVAILABILITY>.  You can also fetch this list at "
"runtime by calling L</available-all-groups>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:382
msgid "You must call L</launch> before calling this function."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:404
msgid ""
"This call was added in version C<1.0.80>.  In previous versions of "
"libguestfs all you could do would be to speculatively execute a command to "
"find out if the daemon implemented it.  See also L</version>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:411
msgid "available-all-groups"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:413
#, no-wrap
msgid ""
" available-all-groups\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:415
msgid ""
"This command returns a list of all optional groups that this daemon knows "
"about.  Note this returns both supported and unsupported groups.  To find "
"out which ones the daemon can actually support you have to call "
"L</available> on each member of the returned list."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:421
msgid "See also L</available> and L<guestfs(3)/AVAILABILITY>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:423
msgid "base64-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:425
#, no-wrap
msgid ""
" base64-in (base64file|-) filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:430 ../fish/guestfish-actions.pod:439 ../fish/guestfish-actions.pod:663 ../fish/guestfish-actions.pod:832 ../fish/guestfish-actions.pod:851 ../fish/guestfish-actions.pod:1225 ../fish/guestfish-actions.pod:4477 ../fish/guestfish-actions.pod:4489 ../fish/guestfish-actions.pod:4500 ../fish/guestfish-actions.pod:4511 ../fish/guestfish-actions.pod:4563 ../fish/guestfish-actions.pod:4572 ../fish/guestfish-actions.pod:4626 ../fish/guestfish-actions.pod:4649
msgid "Use C<-> instead of a filename to read/write from stdin/stdout."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:432
msgid "base64-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:434
#, no-wrap
msgid ""
" base64-out filename (base64file|-)\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:441
msgid "blockdev-flushbufs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:443
#, no-wrap
msgid ""
" blockdev-flushbufs device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:450
msgid "blockdev-getbsz"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:452
#, no-wrap
msgid ""
" blockdev-getbsz device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:461
msgid "blockdev-getro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:463
#, no-wrap
msgid ""
" blockdev-getro device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:470
msgid "blockdev-getsize64"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:472
#, no-wrap
msgid ""
" blockdev-getsize64 device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:476
msgid "See also L</blockdev-getsz>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:480
msgid "blockdev-getss"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:482
#, no-wrap
msgid ""
" blockdev-getss device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:487
msgid "(Note, this is not the size in sectors, use L</blockdev-getsz> for that)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:492
msgid "blockdev-getsz"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:494
#, no-wrap
msgid ""
" blockdev-getsz device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:499
msgid ""
"See also L</blockdev-getss> for the real sector size of the device, and "
"L</blockdev-getsize64> for the more useful I<size in bytes>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:505
msgid "blockdev-rereadpt"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:507
#, no-wrap
msgid ""
" blockdev-rereadpt device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:513
msgid "blockdev-setbsz"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:515
#, no-wrap
msgid ""
" blockdev-setbsz device blocksize\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:524
msgid "blockdev-setro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:526
#, no-wrap
msgid ""
" blockdev-setro device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:532
msgid "blockdev-setrw"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:534
#, no-wrap
msgid ""
" blockdev-setrw device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:540
msgid "case-sensitive-path"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:542
#, no-wrap
msgid ""
" case-sensitive-path path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:566
msgid ""
"Thus L</case-sensitive-path> (\"/Windows/System32\")  might return "
"C<\"/WINDOWS/system32\"> (the exact return value would depend on details of "
"how the directories were originally created under Windows)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:574
msgid "See also L</realpath>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:576
msgid "cat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:578
#, no-wrap
msgid ""
" cat path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:582
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of string).  For "
"those you need to use the L</read-file> or L</download> functions which have "
"a more complex interface."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:590
msgid "checksum"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:592
#, no-wrap
msgid ""
" checksum csumtype path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:635
msgid "To get the checksum for a device, use L</checksum-device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:637
msgid "To get the checksums for many files, use L</checksums-out>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:639
msgid "checksum-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:641
#, no-wrap
msgid ""
" checksum-device csumtype device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:643
msgid ""
"This call computes the MD5, SHAx or CRC checksum of the contents of the "
"device named C<device>.  For the types of checksums supported see the "
"L</checksum> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:647
msgid "checksums-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:649
#, no-wrap
msgid ""
" checksums-out csumtype directory (sumsfile|-)\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:665
msgid "chmod"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:667
#, no-wrap
msgid ""
" chmod mode path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:678
msgid "chown"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:680
#, no-wrap
msgid ""
" chown owner group path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:688
msgid "command"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:690
#, no-wrap
msgid ""
" command 'arguments ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:697
msgid ""
"The single parameter is an argv-style list of arguments.  The first element "
"is the name of the program to run.  Subsequent elements are parameters.  The "
"list must be non-empty (ie. must contain a program name).  Note that the "
"command runs directly, and is I<not> invoked via the shell (see L</sh>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:725
msgid "command-lines"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:727
#, no-wrap
msgid ""
" command-lines 'arguments ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:729
msgid "This is the same as L</command>, but splits the result into a list of lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:732
msgid "See also: L</sh-lines>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:737
msgid "config"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:739
#, no-wrap
msgid ""
" config qemuparam qemuvalue\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:750
msgid "copy-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:752
#, no-wrap
msgid ""
" copy-size src dest size\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:760
msgid "cp"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:762
#, no-wrap
msgid ""
" cp src dest\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:767
msgid "cp-a"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:769
#, no-wrap
msgid ""
" cp-a src dest\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:774
msgid "dd"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:776
#, no-wrap
msgid ""
" dd src dest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:783
msgid ""
"If the destination is a device, it must be as large or larger than the "
"source file or device, otherwise the copy will fail.  This command cannot do "
"partial copies (see L</copy-size>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:787
msgid "df"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:789
#, no-wrap
msgid ""
" df\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:793 ../fish/guestfish-actions.pod:804
msgid ""
"This command is mostly useful for interactive sessions.  It is I<not> "
"intended that you try to parse the output string.  Use L</statvfs> from "
"programs."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:797
msgid "df-h"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:799
#, no-wrap
msgid ""
" df-h\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:808
msgid "dmesg"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:810
#, no-wrap
msgid ""
" dmesg\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:816
msgid ""
"Another way to get the same information is to enable verbose messages with "
"L</set-verbose> or by setting the environment variable C<LIBGUESTFS_DEBUG=1> "
"before running the program."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:821
msgid "download"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:823
#, no-wrap
msgid ""
" download remotefilename (filename|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:830
msgid "See also L</upload>, L</cat>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:834
msgid "download-offset"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:836
#, no-wrap
msgid ""
" download-offset remotefilename (filename|-) offset size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:844
msgid ""
"Note that there is no limit on the amount of data that can be downloaded "
"with this call, unlike with L</pread>, and this call always reads the full "
"amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:849
msgid "See also L</download>, L</pread>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:853
msgid "drop-caches"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:855
#, no-wrap
msgid ""
" drop-caches whattodrop\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:867
msgid "du"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:869
#, no-wrap
msgid ""
" du path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:881
msgid "e2fsck-f"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:883
#, no-wrap
msgid ""
" e2fsck-f device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:889
msgid ""
"This command is only needed because of L</resize2fs> (q.v.).  Normally you "
"should use L</fsck>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:892
msgid "echo-daemon"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:894
#, no-wrap
msgid ""
" echo-daemon 'words ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:901
msgid "See also L</ping-daemon>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:903
msgid "egrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:905
#, no-wrap
msgid ""
" egrep regex path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:913
msgid "egrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:915
#, no-wrap
msgid ""
" egrepi regex path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:923
msgid "equal"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:925
#, no-wrap
msgid ""
" equal file1 file2\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:932
msgid "exists"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:934
#, no-wrap
msgid ""
" exists path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:939
msgid "See also L</is-file>, L</is-dir>, L</stat>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:941
msgid "fallocate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:943
#, no-wrap
msgid ""
" fallocate path len\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:960
msgid "fallocate64"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:962
#, no-wrap
msgid ""
" fallocate64 path len\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:968
msgid ""
"Note that this call allocates disk blocks for the file.  To create a sparse "
"file use L</truncate-size> instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:971
msgid ""
"The deprecated call L</fallocate> does the same, but owing to an oversight "
"it only allowed 30 bit lengths to be specified, effectively limiting the "
"maximum size of files created through that call to 1GB."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:980
msgid "fgrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:982
#, no-wrap
msgid ""
" fgrep pattern path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:990
msgid "fgrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:992
#, no-wrap
msgid ""
" fgrepi pattern path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1000
msgid "file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1002
#, no-wrap
msgid ""
" file path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1018
msgid ""
"See also: L<file(1)>, L</vfs-type>, L</lstat>, L</is-file>, L</is-blockdev> "
"(etc)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1021
msgid "file-architecture"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1023
#, no-wrap
msgid ""
" file-architecture filename\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1126
msgid "filesize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1128
#, no-wrap
msgid ""
" filesize file\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1132
msgid ""
"To get other stats about a file, use L</stat>, L</lstat>, L</is-dir>, "
"L</is-file> etc.  To get the size of block devices, use "
"L</blockdev-getsize64>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1136
msgid "fill"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1138
#, no-wrap
msgid ""
" fill c len path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1144
msgid ""
"To fill a file with zero bytes (sparsely), it is much more efficient to use "
"L</truncate-size>.  To create a file with a pattern of repeating bytes use "
"L</fill-pattern>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1149
msgid "fill-pattern"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1151
#, no-wrap
msgid ""
" fill-pattern pattern len path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1153
msgid ""
"This function is like L</fill> except that it creates a new file of length "
"C<len> containing the repeating pattern of bytes in C<pattern>.  The pattern "
"is truncated if necessary to ensure the length of the file is exactly C<len> "
"bytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1158
msgid "find"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1160
#, no-wrap
msgid ""
" find directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1174
msgid "then the returned list from L</find> C</tmp> would be 4 elements:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1187
msgid "See also L</find0>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1192
msgid "find0"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1194
#, no-wrap
msgid ""
" find0 directory (files|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1200
msgid "This command works the same way as L</find> with the following exceptions:"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1227
msgid "findfs-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1229
#, no-wrap
msgid ""
" findfs-label label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1235
msgid "To find the label of a filesystem, use L</vfs-label>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1237
msgid "findfs-uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1239
#, no-wrap
msgid ""
" findfs-uuid uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1245
msgid "To find the UUID of a filesystem, use L</vfs-uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1247
msgid "fsck"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1249
#, no-wrap
msgid ""
" fsck fstype device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1279
msgid "get-append"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1281
#, no-wrap
msgid ""
" get-append\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1288
msgid "get-attach-method"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1290
#, no-wrap
msgid ""
" get-attach-method\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1292
msgid "Return the current attach method.  See L</set-attach-method>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1294
msgid "get-autosync"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1296
#, no-wrap
msgid ""
" get-autosync\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1300
msgid "get-direct"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1302
#, no-wrap
msgid ""
" get-direct\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1306
msgid "get-e2label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1308
#, no-wrap
msgid ""
" get-e2label device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1320
msgid "get-e2uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1322
#, no-wrap
msgid ""
" get-e2uuid device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1334
msgid "get-memsize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1336
#, no-wrap
msgid ""
" get-memsize\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1341
msgid ""
"If L</set-memsize> was not called on this handle, and if "
"C<LIBGUESTFS_MEMSIZE> was not set, then this returns the compiled-in default "
"value for memsize."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1348
msgid "get-network"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1350
#, no-wrap
msgid ""
" get-network\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1354
msgid "get-path"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1356
#, no-wrap
msgid ""
" get-path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1363
msgid "get-pid"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1365
msgid "pid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1367
#, no-wrap
msgid ""
" get-pid\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1374
msgid "get-qemu"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1376
#, no-wrap
msgid ""
" get-qemu\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1383
msgid "get-recovery-proc"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1385
#, no-wrap
msgid ""
" get-recovery-proc\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1389
msgid "get-selinux"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1391
#, no-wrap
msgid ""
" get-selinux\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1393
msgid ""
"This returns the current setting of the selinux flag which is passed to the "
"appliance at boot time.  See L</set-selinux>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1399
msgid "get-state"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1401
#, no-wrap
msgid ""
" get-state\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1408
msgid "get-trace"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1410
#, no-wrap
msgid ""
" get-trace\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1414
msgid "get-umask"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1416
#, no-wrap
msgid ""
" get-umask\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1418
msgid ""
"Return the current umask.  By default the umask is C<022> unless it has been "
"set by calling L</umask>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1421
msgid "get-verbose"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1423
#, no-wrap
msgid ""
" get-verbose\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1427
msgid "getcon"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1429
#, no-wrap
msgid ""
" getcon\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1433
msgid "See the documentation about SELINUX in L<guestfs(3)>, and L</setcon>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1436
msgid "getxattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1438
#, no-wrap
msgid ""
" getxattr path name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1440
msgid ""
"Get a single extended attribute from file C<path> named C<name>.  This call "
"follows symlinks.  If you want to lookup an extended attribute for the "
"symlink itself, use L</lgetxattr>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1444 ../fish/guestfish-actions.pod:2450
msgid ""
"Normally it is better to get all extended attributes from a file in one go "
"by calling L</getxattrs>.  However some Linux filesystem implementations are "
"buggy and do not provide a way to list out attributes.  For these "
"filesystems (notably ntfs-3g)  you have to know the names of the extended "
"attributes you want in advance and call this function."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1454
msgid "See also: L</getxattrs>, L</lgetxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1456
msgid "getxattrs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1458
#, no-wrap
msgid ""
" getxattrs path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1466
msgid "See also: L</lgetxattrs>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1468
msgid "glob-expand"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1470
#, no-wrap
msgid ""
" glob-expand pattern\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1483
msgid "grep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1485
#, no-wrap
msgid ""
" grep regex path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1493
msgid "grepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1495
#, no-wrap
msgid ""
" grepi regex path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1503
msgid "grub-install"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1505
#, no-wrap
msgid ""
" grub-install root device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1521
msgid "head"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1523
#, no-wrap
msgid ""
" head path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1531
msgid "head-n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1533
#, no-wrap
msgid ""
" head-n nrlines path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1546
msgid "hexdump"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1548
#, no-wrap
msgid ""
" hexdump path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1556
msgid "initrd-cat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1558
#, no-wrap
msgid ""
" initrd-cat initrdpath filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1570
msgid "See also L</initrd-list>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1575
msgid "initrd-list"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1577
#, no-wrap
msgid ""
" initrd-list path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1589
msgid "inotify-add-watch"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1591
#, no-wrap
msgid ""
" inotify-add-watch path mask\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1603
msgid "inotify-close"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1605
#, no-wrap
msgid ""
" inotify-close\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1611
msgid "inotify-files"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1613
#, no-wrap
msgid ""
" inotify-files\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1615
msgid ""
"This function is a helpful wrapper around L</inotify-read> which just "
"returns a list of pathnames of objects that were touched.  The returned "
"pathnames are sorted and deduplicated."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1619
msgid "inotify-init"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1621
#, no-wrap
msgid ""
" inotify-init maxevents\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1627
msgid ""
"C<maxevents> is the maximum number of events which will be queued up between "
"calls to L</inotify-read> or L</inotify-files>.  If this is passed as C<0>, "
"then the kernel (or previously set)  default is used.  For Linux 2.6.29 the "
"default was 16384 events.  Beyond this limit, the kernel throws away events, "
"but records the fact that it threw them away by setting a flag "
"C<IN_Q_OVERFLOW> in the returned structure list (see L</inotify-read>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1637
msgid ""
"Before any events are generated, you have to add some watches to the "
"internal watch list.  See: L</inotify-add-watch>, L</inotify-rm-watch> and "
"L</inotify-watch-all>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1643
msgid ""
"Queued up events should be read periodically by calling L</inotify-read> (or "
"L</inotify-files> which is just a helpful wrapper around L</inotify-read>).  "
"If you don't read the events out often enough then you risk the internal "
"queue overflowing."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1650
msgid ""
"The handle should be closed after use by calling L</inotify-close>.  This "
"also removes any watches automatically."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1659
msgid "inotify-read"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1661
#, no-wrap
msgid ""
" inotify-read\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1674
msgid "inotify-rm-watch"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1676
#, no-wrap
msgid ""
" inotify-rm-watch wd\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1678
msgid "Remove a previously defined inotify watch.  See L</inotify-add-watch>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1681
msgid "inspect-get-arch"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1683
#, no-wrap
msgid ""
" inspect-get-arch root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1685 ../fish/guestfish-actions.pod:1701 ../fish/guestfish-actions.pod:1787 ../fish/guestfish-actions.pod:1823 ../fish/guestfish-actions.pod:1841 ../fish/guestfish-actions.pod:1875 ../fish/guestfish-actions.pod:1890 ../fish/guestfish-actions.pod:1911 ../fish/guestfish-actions.pod:1926 ../fish/guestfish-actions.pod:1959 ../fish/guestfish-actions.pod:1981 ../fish/guestfish-actions.pod:2005 ../fish/guestfish-actions.pod:2022 ../fish/guestfish-actions.pod:2065 ../fish/guestfish-actions.pod:2100 ../fish/guestfish-actions.pod:2116 ../fish/guestfish-actions.pod:2132 ../fish/guestfish-actions.pod:2145 ../fish/guestfish-actions.pod:2158 ../fish/guestfish-actions.pod:2173
msgid ""
"This function should only be called with a root device string as returned by "
"L</inspect-os>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1688
msgid ""
"This returns the architecture of the inspected operating system.  The "
"possible return values are listed under L</file-architecture>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1697
msgid "inspect-get-distro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1699
#, no-wrap
msgid ""
" inspect-get-distro root\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1783
msgid "inspect-get-drive-mappings"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1785
#, no-wrap
msgid ""
" inspect-get-drive-mappings root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1815
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-mountpoints>, L</inspect-get-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1819
msgid "inspect-get-filesystems"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1821
#, no-wrap
msgid ""
" inspect-get-filesystems root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1834
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-mountpoints>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1837
msgid "inspect-get-format"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1839
#, no-wrap
msgid ""
" inspect-get-format root\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1871
msgid "inspect-get-hostname"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1873
#, no-wrap
msgid ""
" inspect-get-hostname root\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1886
msgid "inspect-get-major-version"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1888
#, no-wrap
msgid ""
" inspect-get-major-version root\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1907
msgid "inspect-get-minor-version"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1909
#, no-wrap
msgid ""
" inspect-get-minor-version root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1919
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-major-version>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1922
msgid "inspect-get-mountpoints"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1924
#, no-wrap
msgid ""
" inspect-get-mountpoints root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1946
msgid ""
"For operating systems like Windows which still use drive letters, this call "
"will only return an entry for the first drive \"mounted on\" C</>.  For "
"information about the mapping of drive letters to partitions, see "
"L</inspect-get-drive-mappings>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1952
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1955
msgid "inspect-get-package-format"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1957
#, no-wrap
msgid ""
" inspect-get-package-format root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1962
msgid ""
"This function and L</inspect-get-package-management> return the package "
"format and package management tool used by the inspected operating system.  "
"For example for Fedora these functions would return C<rpm> (package format) "
"and C<yum> (package management)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1977
msgid "inspect-get-package-management"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1979
#, no-wrap
msgid ""
" inspect-get-package-management root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1984
msgid ""
"L</inspect-get-package-format> and this function return the package format "
"and package management tool used by the inspected operating system.  For "
"example for Fedora these functions would return C<rpm> (package format) and "
"C<yum> (package management)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2001
msgid "inspect-get-product-name"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2003
#, no-wrap
msgid ""
" inspect-get-product-name root\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2018
msgid "inspect-get-product-variant"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2020
#, no-wrap
msgid ""
" inspect-get-product-variant root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2044
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-product-name>, L</inspect-get-major-version>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2048
msgid "inspect-get-roots"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2050
#, no-wrap
msgid ""
" inspect-get-roots\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2052
msgid ""
"This function is a convenient way to get the list of root devices, as "
"returned from a previous call to L</inspect-os>, but without redoing the "
"whole inspection process."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2056
msgid ""
"This returns an empty list if either no root devices were found or the "
"caller has not called L</inspect-os>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2061
msgid "inspect-get-type"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2063
#, no-wrap
msgid ""
" inspect-get-type root\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2096
msgid "inspect-get-windows-current-control-set"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2098
#, no-wrap
msgid ""
" inspect-get-windows-current-control-set root\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2112
msgid "inspect-get-windows-systemroot"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2114
#, no-wrap
msgid ""
" inspect-get-windows-systemroot root\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2128
msgid "inspect-is-live"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2130
#, no-wrap
msgid ""
" inspect-is-live root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2135
msgid ""
"If L</inspect-get-format> returns C<installer> (this is an install disk), "
"then this returns true if a live image was detected on the disk."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2141
msgid "inspect-is-multipart"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2143
#, no-wrap
msgid ""
" inspect-is-multipart root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2148
msgid ""
"If L</inspect-get-format> returns C<installer> (this is an install disk), "
"then this returns true if the disk is part of a set."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2154
msgid "inspect-is-netinst"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2156
#, no-wrap
msgid ""
" inspect-is-netinst root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2161
msgid ""
"If L</inspect-get-format> returns C<installer> (this is an install disk), "
"then this returns true if the disk is a network installer, ie. not a "
"self-contained install CD but one which is likely to require network access "
"to complete the install."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2169
msgid "inspect-list-applications"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2171
#, no-wrap
msgid ""
" inspect-list-applications root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2178
msgid ""
"I<Note:> This call works differently from other parts of the inspection "
"API.  You have to call L</inspect-os>, then L</inspect-get-mountpoints>, "
"then mount up the disks, before calling this.  Listing applications is a "
"significantly more difficult operation which requires access to the full "
"filesystem.  Also note that unlike the other L</inspect-get-*> calls which "
"are just returning data cached in the libguestfs handle, this call actually "
"reads parts of the mounted filesystems during the call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2268
msgid "inspect-os"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2270
#, no-wrap
msgid ""
" inspect-os\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2285
msgid ""
"You can pass the root string(s) returned to other L</inspect-get-*> "
"functions in order to query further information about each operating system, "
"such as the name and version."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2290
msgid ""
"This function uses other libguestfs features such as L</mount-ro> and "
"L</umount-all> in order to mount and unmount filesystems and look at the "
"contents.  This should be called with no disks currently mounted.  The "
"function may also use Augeas, so any existing Augeas handle will be closed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2302 ../fish/guestfish-actions.pod:2478 ../fish/guestfish-actions.pod:2524
msgid "See also L</list-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2304
msgid "is-blockdev"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2306
#, no-wrap
msgid ""
" is-blockdev path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2311 ../fish/guestfish-actions.pod:2329 ../fish/guestfish-actions.pod:2348 ../fish/guestfish-actions.pod:2357 ../fish/guestfish-actions.pod:2367 ../fish/guestfish-actions.pod:2401 ../fish/guestfish-actions.pod:2410
msgid "See also L</stat>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2313
msgid "is-busy"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2315
#, no-wrap
msgid ""
" is-busy\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2322
msgid "is-chardev"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2324
#, no-wrap
msgid ""
" is-chardev path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2331
msgid "is-config"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2333
#, no-wrap
msgid ""
" is-config\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2340
msgid "is-dir"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2342
#, no-wrap
msgid ""
" is-dir path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2350
msgid "is-fifo"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2352
#, no-wrap
msgid ""
" is-fifo path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2359
msgid "is-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2361
#, no-wrap
msgid ""
" is-file path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2369
msgid "is-launching"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2371
#, no-wrap
msgid ""
" is-launching\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2378
msgid "is-lv"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2380
#, no-wrap
msgid ""
" is-lv device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2385
msgid "is-ready"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2387
#, no-wrap
msgid ""
" is-ready\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2394
msgid "is-socket"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2396
#, no-wrap
msgid ""
" is-socket path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2403
msgid "is-symlink"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2405
#, no-wrap
msgid ""
" is-symlink path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2412
msgid "kill-subprocess"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2414
#, no-wrap
msgid ""
" kill-subprocess\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2418
msgid "launch"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2420
msgid "run"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2422
#, no-wrap
msgid ""
" launch\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2430
msgid "lchown"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2432
#, no-wrap
msgid ""
" lchown owner group path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2434
msgid ""
"Change the file owner to C<owner> and group to C<group>.  This is like "
"L</chown> but if C<path> is a symlink then the link itself is changed, not "
"the target."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2442
msgid "lgetxattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2444
#, no-wrap
msgid ""
" lgetxattr path name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2460
msgid "See also: L</lgetxattrs>, L</getxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2462
msgid "lgetxattrs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2464
#, no-wrap
msgid ""
" lgetxattrs path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2466
msgid ""
"This is the same as L</getxattrs>, but if C<path> is a symbolic link, then "
"it returns the extended attributes of the link itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2470
msgid "list-devices"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2472
#, no-wrap
msgid ""
" list-devices\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2480
msgid "list-filesystems"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2482
#, no-wrap
msgid ""
" list-filesystems\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2501
msgid ""
"This command runs other libguestfs commands, which might include L</mount> "
"and L</umount>, and therefore you should use this soon after launch and only "
"when nothing is mounted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2505
msgid ""
"Not all of the filesystems returned will be mountable.  In particular, swap "
"partitions are returned in the list.  Also this command does not check that "
"each filesystem found is valid and mountable, and some filesystems might be "
"mountable but require special options.  Filesystems may not all belong to a "
"single logical operating system (use L</inspect-os> to look for OSes)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2513
msgid "list-partitions"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2515
#, no-wrap
msgid ""
" list-partitions\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2521
msgid ""
"This does not return logical volumes.  For that you will need to call "
"L</lvs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2526
msgid "ll"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2528
#, no-wrap
msgid ""
" ll directory\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2536
msgid "ln"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2538
#, no-wrap
msgid ""
" ln target linkname\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2542
msgid "ln-f"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2544
#, no-wrap
msgid ""
" ln-f target linkname\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2549
msgid "ln-s"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2551
#, no-wrap
msgid ""
" ln-s target linkname\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2555
msgid "ln-sf"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2557
#, no-wrap
msgid ""
" ln-sf target linkname\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2562
msgid "lremovexattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2564
#, no-wrap
msgid ""
" lremovexattr xattr path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2566
msgid ""
"This is the same as L</removexattr>, but if C<path> is a symbolic link, then "
"it removes an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2570
msgid "ls"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2572
#, no-wrap
msgid ""
" ls directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2578
msgid ""
"This command is mostly useful for interactive sessions.  Programs should "
"probably use L</readdir> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2581
msgid "lsetxattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2583
#, no-wrap
msgid ""
" lsetxattr xattr val vallen path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2585
msgid ""
"This is the same as L</setxattr>, but if C<path> is a symbolic link, then it "
"sets an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2589
msgid "lstat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2591
#, no-wrap
msgid ""
" lstat path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2595
msgid ""
"This is the same as L</stat> except that if C<path> is a symbolic link, then "
"the link is stat-ed, not the file it refers to."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2601
msgid "lstatlist"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2603
#, no-wrap
msgid ""
" lstatlist path 'names ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2605
msgid ""
"This call allows you to perform the L</lstat> operation on multiple files, "
"where all files are in the directory C<path>.  C<names> is the list of files "
"from this directory."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2614
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also L</lxattrlist> for a "
"similarly efficient call for getting extended attributes.  Very long "
"directory listings might cause the protocol message size to be exceeded, "
"causing this call to fail.  The caller must split up such requests into "
"smaller groups of names."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2622
msgid "luks-add-key"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2624
#, no-wrap
msgid ""
" luks-add-key device keyslot\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2631
msgid ""
"Note that if C<keyslot> already contains a key, then this command will "
"fail.  You have to use L</luks-kill-slot> first to remove that key."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2635 ../fish/guestfish-actions.pod:2657 ../fish/guestfish-actions.pod:2670 ../fish/guestfish-actions.pod:2684 ../fish/guestfish-actions.pod:2707 ../fish/guestfish-actions.pod:2717
msgid ""
"This command has one or more key or passphrase parameters.  Guestfish will "
"prompt for these separately."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2638
msgid "luks-close"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2640
#, no-wrap
msgid ""
" luks-close device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2642
msgid ""
"This closes a LUKS device that was created earlier by L</luks-open> or "
"L</luks-open-ro>.  The C<device> parameter must be the name of the LUKS "
"mapping device (ie. C</dev/mapper/mapname>) and I<not> the name of the "
"underlying block device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2648
msgid "luks-format"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2650
#, no-wrap
msgid ""
" luks-format device keyslot\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2663
msgid "luks-format-cipher"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2665
#, no-wrap
msgid ""
" luks-format-cipher device keyslot cipher\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2667
msgid ""
"This command is the same as L</luks-format> but it also allows you to set "
"the C<cipher> used."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2676
msgid "luks-kill-slot"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2678
#, no-wrap
msgid ""
" luks-kill-slot device keyslot\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2687
msgid "luks-open"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2689
#, no-wrap
msgid ""
" luks-open device mapname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2703
msgid ""
"If this block device contains LVM volume groups, then calling L</vgscan> "
"followed by L</vg-activate-all> will make them visible."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2710
msgid "luks-open-ro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2712
#, no-wrap
msgid ""
" luks-open-ro device mapname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2714
msgid ""
"This is the same as L</luks-open> except that a read-only mapping is "
"created."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2720
msgid "lvcreate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2722
#, no-wrap
msgid ""
" lvcreate logvol volgroup mbytes\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2727
msgid "lvm-canonical-lv-name"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2729
#, no-wrap
msgid ""
" lvm-canonical-lv-name lvname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2738
msgid "See also L</is-lv>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2740
msgid "lvm-clear-filter"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2742
#, no-wrap
msgid ""
" lvm-clear-filter\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2744
msgid ""
"This undoes the effect of L</lvm-set-filter>.  LVM will be able to see every "
"block device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2750
msgid "lvm-remove-all"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2752
#, no-wrap
msgid ""
" lvm-remove-all\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2760
msgid "lvm-set-filter"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2762
#, no-wrap
msgid ""
" lvm-set-filter 'devices ...'\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2787
msgid "lvremove"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2789
#, no-wrap
msgid ""
" lvremove device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2797
msgid "lvrename"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2799
#, no-wrap
msgid ""
" lvrename logvol newlogvol\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2803
msgid "lvresize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2805
#, no-wrap
msgid ""
" lvresize device mbytes\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2811
msgid "lvresize-free"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2813
#, no-wrap
msgid ""
" lvresize-free lv percent\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2821
msgid "lvs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2823
#, no-wrap
msgid ""
" lvs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2831
msgid "See also L</lvs-full>, L</list-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2833
msgid "lvs-full"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2835
#, no-wrap
msgid ""
" lvs-full\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2840
msgid "lvuuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2842
#, no-wrap
msgid ""
" lvuuid device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2846
msgid "lxattrlist"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2848
#, no-wrap
msgid ""
" lxattrlist path 'names ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2864
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also L</lstatlist> for a "
"similarly efficient call for getting standard stats.  Very long directory "
"listings might cause the protocol message size to be exceeded, causing this "
"call to fail.  The caller must split up such requests into smaller groups of "
"names."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2872
msgid "mkdir"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2874
#, no-wrap
msgid ""
" mkdir path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2878
msgid "mkdir-mode"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2880
#, no-wrap
msgid ""
" mkdir-mode path mode\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2889
msgid "See also L</mkdir>, L</umask>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2891
msgid "mkdir-p"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2893
#, no-wrap
msgid ""
" mkdir-p path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2898
msgid "mkdtemp"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2900
#, no-wrap
msgid ""
" mkdtemp template\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2921
msgid "mke2fs-J"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2923
#, no-wrap
msgid ""
" mke2fs-J fstype blocksize device journal\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2931
msgid "See also L</mke2journal>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2933
msgid "mke2fs-JL"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2935
#, no-wrap
msgid ""
" mke2fs-JL fstype blocksize device label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2940
msgid "See also L</mke2journal-L>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2942
msgid "mke2fs-JU"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2944
#, no-wrap
msgid ""
" mke2fs-JU fstype blocksize device uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2949
msgid "See also L</mke2journal-U>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2951
msgid "mke2journal"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2953
#, no-wrap
msgid ""
" mke2journal blocksize device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2960
msgid "mke2journal-L"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2962
#, no-wrap
msgid ""
" mke2journal-L blocksize label device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2966
msgid "mke2journal-U"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2968
#, no-wrap
msgid ""
" mke2journal-U blocksize uuid device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2972
msgid "mkfifo"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2974
#, no-wrap
msgid ""
" mkfifo mode path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2976
msgid ""
"This call creates a FIFO (named pipe) called C<path> with mode C<mode>.  It "
"is just a convenient wrapper around L</mknod>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2982
msgid "mkfs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2984
#, no-wrap
msgid ""
" mkfs fstype device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2990
msgid "mkfs-b"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2992
#, no-wrap
msgid ""
" mkfs-b fstype blocksize device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2994
msgid ""
"This call is similar to L</mkfs>, but it allows you to control the block "
"size of the resulting filesystem.  Supported block sizes depend on the "
"filesystem type, but typically they are C<1024>, C<2048> or C<4096> only."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3009
msgid "mkfs-opts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3011
#, no-wrap
msgid ""
" mkfs-opts fstype device [blocksize:..] [features:..]\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3046
msgid "mkmountpoint"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3048
#, no-wrap
msgid ""
" mkmountpoint exemptpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3050
msgid ""
"L</mkmountpoint> and L</rmmountpoint> are specialized calls that can be used "
"to create extra mountpoints before mounting the first filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3074
msgid ""
"L</mkmountpoint> is not compatible with L</umount-all>.  You may get "
"unexpected errors if you try to mix these calls.  It is safest to manually "
"unmount filesystems and remove mountpoints after use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3078
msgid ""
"L</umount-all> unmounts filesystems by sorting the paths longest first, so "
"for this to work for manual mountpoints, you must ensure that the innermost "
"mountpoints have the longest pathnames, as in the example code above."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3085
msgid ""
"Autosync [see L</set-autosync>, this is set by default on handles] can cause "
"L</umount-all> to be called when the handle is closed which can also trigger "
"these issues."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3089
msgid "mknod"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3091
#, no-wrap
msgid ""
" mknod mode devmajor devminor path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3101
msgid ""
"Note that, just like L<mknod(2)>, the mode must be bitwise OR'd with "
"S_IFBLK, S_IFCHR, S_IFIFO or S_IFSOCK (otherwise this call just creates a "
"regular file).  These constants are available in the standard Linux header "
"files, or you can use L</mknod-b>, L</mknod-c> or L</mkfifo> which are "
"wrappers around this command which bitwise OR in the appropriate constant "
"for you."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3111
msgid "mknod-b"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3113
#, no-wrap
msgid ""
" mknod-b mode devmajor devminor path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3115
msgid ""
"This call creates a block device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around L</mknod>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3121
msgid "mknod-c"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3123
#, no-wrap
msgid ""
" mknod-c mode devmajor devminor path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3125
msgid ""
"This call creates a char device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around L</mknod>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3131
msgid "mkswap"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3133
#, no-wrap
msgid ""
" mkswap device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3137
msgid "mkswap-L"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3139
#, no-wrap
msgid ""
" mkswap-L label device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3147
msgid "mkswap-U"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3149
#, no-wrap
msgid ""
" mkswap-U uuid device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3153
msgid "mkswap-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3155
#, no-wrap
msgid ""
" mkswap-file path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3159
msgid ""
"This command just writes a swap file signature to an existing file.  To "
"create the file itself, use something like L</fallocate>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3162
msgid "modprobe"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3164
#, no-wrap
msgid ""
" modprobe modulename\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3171
msgid "mount"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3173
#, no-wrap
msgid ""
" mount device mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3189
msgid ""
"B<Important note:> When you use this call, the filesystem options C<sync> "
"and C<noatime> are set implicitly.  This was originally done because we "
"thought it would improve reliability, but it turns out that I<-o sync> has a "
"very large negative performance impact and negligible effect on "
"reliability.  Therefore we recommend that you avoid using L</mount> in any "
"code that needs performance, and instead use L</mount-options> (use an empty "
"string for the first parameter if you don't want any options)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3206
msgid "mount-loop"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3208
#, no-wrap
msgid ""
" mount-loop file mountpoint\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3214
msgid "mount-options"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3216
#, no-wrap
msgid ""
" mount-options options device mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3218
msgid ""
"This is the same as the L</mount> command, but it allows you to set the "
"mount options as for the L<mount(8)> I<-o> flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3226
msgid "mount-ro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3228
#, no-wrap
msgid ""
" mount-ro device mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3230
msgid ""
"This is the same as the L</mount> command, but it mounts the filesystem with "
"the read-only (I<-o ro>) flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3233
msgid "mount-vfs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3235
#, no-wrap
msgid ""
" mount-vfs options vfstype device mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3237
msgid ""
"This is the same as the L</mount> command, but it allows you to set both the "
"mount options and the vfstype as for the L<mount(8)> I<-o> and I<-t> flags."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3241
msgid "mountpoints"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3243
#, no-wrap
msgid ""
" mountpoints\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3245
msgid ""
"This call is similar to L</mounts>.  That call returns a list of devices.  "
"This one returns a hash table (map) of device name to directory where the "
"device is mounted."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3249
msgid "mounts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3251
#, no-wrap
msgid ""
" mounts\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3258
msgid "See also: L</mountpoints>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3260
msgid "mv"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3262
#, no-wrap
msgid ""
" mv src dest\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3267
msgid "ntfs-3g-probe"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3269
#, no-wrap
msgid ""
" ntfs-3g-probe true|false device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3283
msgid "ntfsresize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3285
#, no-wrap
msgid ""
" ntfsresize device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3291
msgid "ntfsresize-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3293
#, no-wrap
msgid ""
" ntfsresize-size device size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3295
msgid ""
"This command is the same as L</ntfsresize> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3298
msgid "part-add"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3300
#, no-wrap
msgid ""
" part-add device prlogex startsect endsect\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3302
msgid ""
"This command adds a partition to C<device>.  If there is no partition table "
"on the device, call L</part-init> first."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3314
msgid ""
"Creating a partition which covers the whole disk is not so easy.  Use "
"L</part-disk> to do that."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3317
msgid "part-del"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3319
#, no-wrap
msgid ""
" part-del device partnum\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3327
msgid "part-disk"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3329
#, no-wrap
msgid ""
" part-disk device parttype\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3331
msgid ""
"This command is simply a combination of L</part-init> followed by "
"L</part-add> to create a single primary partition covering the whole disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3335
msgid ""
"C<parttype> is the partition table type, usually C<mbr> or C<gpt>, but other "
"possible values are described in L</part-init>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3341
msgid "part-get-bootable"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3343
#, no-wrap
msgid ""
" part-get-bootable device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3348
msgid "See also L</part-set-bootable>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3350
msgid "part-get-mbr-id"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3352
#, no-wrap
msgid ""
" part-get-mbr-id device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3357 ../fish/guestfish-actions.pod:3495
msgid ""
"Note that only MBR (old DOS-style) partitions have type bytes.  You will get "
"undefined results for other partition table types (see "
"L</part-get-parttype>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3361
msgid "part-get-parttype"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3363
#, no-wrap
msgid ""
" part-get-parttype device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3368
msgid ""
"Common return values include: C<msdos> (a DOS/Windows style MBR partition "
"table), C<gpt> (a GPT/EFI-style partition table).  Other values are "
"possible, although unusual.  See L</part-init> for a full list."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3373
msgid "part-init"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3375
#, no-wrap
msgid ""
" part-init device parttype\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3381
msgid ""
"Initially there are no partitions.  Following this, you should call "
"L</part-add> for each partition required."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3444
msgid "part-list"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3446
#, no-wrap
msgid ""
" part-list device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3461
msgid ""
"Start of the partition I<in bytes>.  To get sectors you have to divide by "
"the device's sector size, see L</blockdev-getss>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3474
msgid "part-set-bootable"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3476
#, no-wrap
msgid ""
" part-set-bootable device partnum true|false\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3485
msgid "part-set-mbr-id"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3487
#, no-wrap
msgid ""
" part-set-mbr-id device partnum idbyte\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3499
msgid "part-set-name"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3501
#, no-wrap
msgid ""
" part-set-name device partnum name\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3509
msgid "part-to-dev"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3511
#, no-wrap
msgid ""
" part-to-dev partition\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3517
msgid ""
"The named partition must exist, for example as a string returned from "
"L</list-partitions>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3520
msgid "ping-daemon"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3522
#, no-wrap
msgid ""
" ping-daemon\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3529
msgid "pread"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3531
#, no-wrap
msgid ""
" pread path count offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3539
msgid "See also L</pwrite>, L</pread-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3544
msgid "pread-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3546
#, no-wrap
msgid ""
" pread-device device count offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3554
msgid "See also L</pread>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3559
msgid "pvcreate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3561
#, no-wrap
msgid ""
" pvcreate device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3567
msgid "pvremove"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3569
#, no-wrap
msgid ""
" pvremove device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3578
msgid "pvresize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3580
#, no-wrap
msgid ""
" pvresize device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3585
msgid "pvresize-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3587
#, no-wrap
msgid ""
" pvresize-size device size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3589
msgid ""
"This command is the same as L</pvresize> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3592
msgid "pvs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3594
#, no-wrap
msgid ""
" pvs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3602
msgid "See also L</pvs-full>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3604
msgid "pvs-full"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3606
#, no-wrap
msgid ""
" pvs-full\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3611
msgid "pvuuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3613
#, no-wrap
msgid ""
" pvuuid device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3617
msgid "pwrite"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3619
#, no-wrap
msgid ""
" pwrite path content offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3630
msgid "See also L</pread>, L</pwrite-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3635
msgid "pwrite-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3637
#, no-wrap
msgid ""
" pwrite-device device content offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3647
msgid "See also L</pwrite>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3652
msgid "read-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3654
#, no-wrap
msgid ""
" read-file path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3659
msgid ""
"Unlike L</cat>, this function can correctly handle files that contain "
"embedded ASCII NUL characters.  However unlike L</download>, this function "
"is limited in the total size of file that can be handled."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3667
msgid "read-lines"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3669
#, no-wrap
msgid ""
" read-lines path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3676
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of line).  For "
"those you need to use the L</read-file> function which has a more complex "
"interface."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3681
msgid "readdir"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3683
#, no-wrap
msgid ""
" readdir dir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3735
msgid ""
"This function is primarily intended for use by programs.  To get a simple "
"list of names, use L</ls>.  To get a printable directory for human "
"consumption, use L</ll>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3739
msgid "readlink"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3741
#, no-wrap
msgid ""
" readlink path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3745
msgid "readlinklist"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3747
#, no-wrap
msgid ""
" readlinklist path 'names ...'\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3771
msgid "realpath"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3773
#, no-wrap
msgid ""
" realpath path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3778
msgid "removexattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3780
#, no-wrap
msgid ""
" removexattr xattr path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3785
msgid "See also: L</lremovexattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3787
msgid "resize2fs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3789
#, no-wrap
msgid ""
" resize2fs device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3794
msgid ""
"I<Note:> It is sometimes required that you run L</e2fsck-f> on the C<device> "
"before calling this command.  For unknown reasons C<resize2fs> sometimes "
"gives an error about this and sometimes not.  In any case, it is always safe "
"to call L</e2fsck-f> before calling this function."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3800
msgid "resize2fs-M"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3802
#, no-wrap
msgid ""
" resize2fs-M device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3804
msgid ""
"This command is the same as L</resize2fs>, but the filesystem is resized to "
"its minimum size.  This works like the I<-M> option to the C<resize2fs> "
"command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3808
msgid ""
"To get the resulting size of the filesystem you should call L</tune2fs-l> "
"and read the C<Block size> and C<Block count> values.  These two numbers, "
"multiplied together, give the resulting size of the minimal filesystem in "
"bytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3813
msgid "resize2fs-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3815
#, no-wrap
msgid ""
" resize2fs-size device size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3817
msgid ""
"This command is the same as L</resize2fs> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3820
msgid "rm"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3822
#, no-wrap
msgid ""
" rm path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3826
msgid "rm-rf"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3828
#, no-wrap
msgid ""
" rm-rf path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3834
msgid "rmdir"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3836
#, no-wrap
msgid ""
" rmdir path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3840
msgid "rmmountpoint"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3842
#, no-wrap
msgid ""
" rmmountpoint exemptpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3844
msgid ""
"This calls removes a mountpoint that was previously created with "
"L</mkmountpoint>.  See L</mkmountpoint> for full details."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3848
msgid "scrub-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3850
#, no-wrap
msgid ""
" scrub-device device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3861
msgid "scrub-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3863
#, no-wrap
msgid ""
" scrub-file file\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3873
msgid "scrub-freespace"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3875
#, no-wrap
msgid ""
" scrub-freespace dir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3877
msgid ""
"This command creates the directory C<dir> and then fills it with files until "
"the filesystem is full, and scrubs the files as for L</scrub-file>, and "
"deletes them.  The intention is to scrub any free space on the partition "
"containing C<dir>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3886
msgid "set-append"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3888
msgid "append"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3890
#, no-wrap
msgid ""
" set-append append\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3901
msgid "set-attach-method"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3903
msgid "attach-method"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3905
#, no-wrap
msgid ""
" set-attach-method attachmethod\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3927
msgid "set-autosync"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3929
msgid "autosync"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3931
#, no-wrap
msgid ""
" set-autosync true|false\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3941
msgid "set-direct"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3943
msgid "direct"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3945
#, no-wrap
msgid ""
" set-direct true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3951
msgid ""
"One consequence of this is that log messages aren't caught by the library "
"and handled by L</set-log-message-callback>, but go straight to stdout."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3960
msgid "set-e2label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3962
#, no-wrap
msgid ""
" set-e2label device label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3968
msgid ""
"You can use either L</tune2fs-l> or L</get-e2label> to return the existing "
"label on a filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3971
msgid "set-e2uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3973
#, no-wrap
msgid ""
" set-e2uuid device uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3980
msgid ""
"You can use either L</tune2fs-l> or L</get-e2uuid> to return the existing "
"UUID of a filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3983
msgid "set-memsize"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3985
msgid "memsize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3987
#, no-wrap
msgid ""
" set-memsize memsize\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3989
msgid ""
"This sets the memory size in megabytes allocated to the qemu subprocess.  "
"This only has any effect if called before L</launch>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4000
msgid "set-network"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4002
msgid "network"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4004
#, no-wrap
msgid ""
" set-network true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4012
msgid "You must call this before calling L</launch>, otherwise it has no effect."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4015
msgid "set-path"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4017
msgid "path"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4019
#, no-wrap
msgid ""
" set-path searchpath\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4028
msgid "set-qemu"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4030
msgid "qemu"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4032
#, no-wrap
msgid ""
" set-qemu qemu\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4052
msgid "set-recovery-proc"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4054
msgid "recovery-proc"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4056
#, no-wrap
msgid ""
" set-recovery-proc true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4058
msgid ""
"If this is called with the parameter C<false> then L</launch> does not "
"create a recovery process.  The purpose of the recovery process is to stop "
"runaway qemu processes in the case where the main program aborts abruptly."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4063
msgid ""
"This only has any effect if called before L</launch>, and the default is "
"true."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4072
msgid "set-selinux"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4074
msgid "selinux"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4076
#, no-wrap
msgid ""
" set-selinux true|false\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4087
msgid "set-trace"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4089
msgid "trace"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4091
#, no-wrap
msgid ""
" set-trace true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4103
msgid ""
"Trace messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see L</set-event-callback>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4107
msgid "set-verbose"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4109
msgid "verbose"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4111
#, no-wrap
msgid ""
" set-verbose true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4118
msgid ""
"Verbose messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see L</set-event-callback>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4122
msgid "setcon"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4124
#, no-wrap
msgid ""
" setcon context\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4131
msgid "setxattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4133
#, no-wrap
msgid ""
" setxattr xattr val vallen path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4139
msgid "See also: L</lsetxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4141
msgid "sfdisk"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4143
#, no-wrap
msgid ""
" sfdisk device cyls heads sectors 'lines ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4165
msgid "See also: L</sfdisk-l>, L</sfdisk-N>, L</part-init>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4178
msgid "sfdiskM"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4180
#, no-wrap
msgid ""
" sfdiskM device 'lines ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4182
msgid ""
"This is a simplified interface to the L</sfdisk> command, where partition "
"sizes are specified in megabytes only (rounded to the nearest cylinder) and "
"you don't need to specify the cyls, heads and sectors parameters which were "
"rarely if ever used anyway."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4188
msgid "See also: L</sfdisk>, the L<sfdisk(8)> manpage and L</part-disk>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4201
msgid "sfdisk-N"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4203
#, no-wrap
msgid ""
" sfdisk-N device partnum cyls heads sectors line\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4208
msgid ""
"For other parameters, see L</sfdisk>.  You should usually pass C<0> for the "
"cyls/heads/sectors parameters."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4211
msgid "See also: L</part-add>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4223
msgid "sfdisk-disk-geometry"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4225
#, no-wrap
msgid ""
" sfdisk-disk-geometry device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4227
msgid ""
"This displays the disk geometry of C<device> read from the partition table.  "
"Especially in the case where the underlying block device has been resized, "
"this can be different from the kernel's idea of the geometry (see "
"L</sfdisk-kernel-geometry>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4235
msgid "sfdisk-kernel-geometry"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4237
#, no-wrap
msgid ""
" sfdisk-kernel-geometry device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4244
msgid "sfdisk-l"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4246
#, no-wrap
msgid ""
" sfdisk-l device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4252
msgid "See also: L</part-list>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4261
msgid "sh"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4263
#, no-wrap
msgid ""
" sh command\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4268
msgid "This is like L</command>, but passes the command to:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4276
msgid "All the provisos about L</command> apply to this call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4278
msgid "sh-lines"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4280
#, no-wrap
msgid ""
" sh-lines command\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4282
msgid "This is the same as L</sh>, but splits the result into a list of lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4285
msgid "See also: L</command-lines>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4287
msgid "sleep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4289
#, no-wrap
msgid ""
" sleep secs\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4293
msgid "stat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4295
#, no-wrap
msgid ""
" stat path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4301
msgid "statvfs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4303
#, no-wrap
msgid ""
" statvfs path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4311
msgid "strings"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4313
#, no-wrap
msgid ""
" strings path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4321
msgid "strings-e"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4323
#, no-wrap
msgid ""
" strings-e encoding path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4325
msgid ""
"This is like the L</strings> command, but allows you to specify the encoding "
"of strings that are looked for in the source file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4335
msgid ""
"Single 7-bit-byte characters like ASCII and the ASCII-compatible parts of "
"ISO-8859-X (this is what L</strings> uses)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4367
msgid "swapoff-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4369
#, no-wrap
msgid ""
" swapoff-device device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4371
msgid ""
"This command disables the libguestfs appliance swap device or partition "
"named C<device>.  See L</swapon-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4375
msgid "swapoff-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4377
#, no-wrap
msgid ""
" swapoff-file file\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4381
msgid "swapoff-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4383
#, no-wrap
msgid ""
" swapoff-label label\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4388
msgid "swapoff-uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4390
#, no-wrap
msgid ""
" swapoff-uuid uuid\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4395
msgid "swapon-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4397
#, no-wrap
msgid ""
" swapon-device device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4399
msgid ""
"This command enables the libguestfs appliance to use the swap device or "
"partition named C<device>.  The increased memory is made available for all "
"commands, for example those run using L</command> or L</sh>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4411
msgid "swapon-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4413
#, no-wrap
msgid ""
" swapon-file file\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4415
msgid "This command enables swap to a file.  See L</swapon-device> for other notes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4418
msgid "swapon-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4420
#, no-wrap
msgid ""
" swapon-label label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4422
msgid ""
"This command enables swap to a labeled swap partition.  See "
"L</swapon-device> for other notes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4425
msgid "swapon-uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4427
#, no-wrap
msgid ""
" swapon-uuid uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4429
msgid ""
"This command enables swap to a swap partition with the given UUID.  See "
"L</swapon-device> for other notes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4432
msgid "sync"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4434
#, no-wrap
msgid ""
" sync\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4442
msgid "tail"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4444
#, no-wrap
msgid ""
" tail path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4452
msgid "tail-n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4454
#, no-wrap
msgid ""
" tail-n nrlines path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4467
msgid "tar-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4469
#, no-wrap
msgid ""
" tar-in (tarfile|-) directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4474
msgid "To upload a compressed tarball, use L</tgz-in> or L</txz-in>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4479
msgid "tar-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4481
#, no-wrap
msgid ""
" tar-out directory (tarfile|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4486
msgid "To download a compressed tarball, use L</tgz-out> or L</txz-out>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4491
msgid "tgz-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4493
#, no-wrap
msgid ""
" tgz-in (tarball|-) directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4498
msgid "To upload an uncompressed tarball, use L</tar-in>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4502
msgid "tgz-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4504
#, no-wrap
msgid ""
" tgz-out directory (tarball|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4509
msgid "To download an uncompressed tarball, use L</tar-out>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4513
msgid "touch"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4515
#, no-wrap
msgid ""
" touch path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4524
msgid "truncate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4526
#, no-wrap
msgid ""
" truncate path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4531
msgid "truncate-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4533
#, no-wrap
msgid ""
" truncate-size path size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4538
msgid ""
"If the current file size is less than C<size> then the file is extended to "
"the required size with zero bytes.  This creates a sparse file (ie. disk "
"blocks are not allocated for the file until you write to it).  To create a "
"non-sparse file of zeroes, use L</fallocate64> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4544
msgid "tune2fs-l"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4546
#, no-wrap
msgid ""
" tune2fs-l device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4556
msgid "txz-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4558
#, no-wrap
msgid ""
" txz-in (tarball|-) directory\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4565
msgid "txz-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4567
#, no-wrap
msgid ""
" txz-out directory (tarball|-)\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4574
msgid "umask"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4576
#, no-wrap
msgid ""
" umask mask\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4590
msgid "See also L</get-umask>, L<umask(2)>, L</mknod>, L</mkdir>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4595
msgid "umount"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4597
msgid "unmount"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4599
#, no-wrap
msgid ""
" umount pathordevice\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4605
msgid "umount-all"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4607
msgid "unmount-all"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4609
#, no-wrap
msgid ""
" umount-all\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4615
msgid "upload"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4617
#, no-wrap
msgid ""
" upload (filename|-) remotefilename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4624
msgid "See also L</download>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4628
msgid "upload-offset"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4630
#, no-wrap
msgid ""
" upload-offset (filename|-) remotefilename offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4642
msgid ""
"Note that there is no limit on the amount of data that can be uploaded with "
"this call, unlike with L</pwrite>, and this call always writes the full "
"amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4647
msgid "See also L</upload>, L</pwrite>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4651
msgid "utimens"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4653
#, no-wrap
msgid ""
" utimens path atsecs atnsecs mtsecs mtnsecs\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4672
msgid "version"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4674
#, no-wrap
msgid ""
" version\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4701
msgid ""
"I<Note:> Don't use this call to test for availability of features.  In "
"enterprise distributions we backport features from later versions into "
"earlier versions, making this an unreliable way to test for features.  Use "
"L</available> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4707
msgid "vfs-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4709
#, no-wrap
msgid ""
" vfs-label device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4716
msgid "To find a filesystem from the label, use L</findfs-label>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4718
msgid "vfs-type"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4720
#, no-wrap
msgid ""
" vfs-type device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4730
msgid "vfs-uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4732
#, no-wrap
msgid ""
" vfs-uuid device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4739
msgid "To find a filesystem from the UUID, use L</findfs-uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4741
msgid "vg-activate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4743
#, no-wrap
msgid ""
" vg-activate true|false 'volgroups ...'\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4756
msgid "vg-activate-all"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4758
#, no-wrap
msgid ""
" vg-activate-all true|false\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4768
msgid "vgcreate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4770
#, no-wrap
msgid ""
" vgcreate volgroup 'physvols ...'\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4775
msgid "vglvuuids"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4777
#, no-wrap
msgid ""
" vglvuuids vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4782
msgid ""
"You can use this along with L</lvs> and L</lvuuid> calls to associate "
"logical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4785
msgid "See also L</vgpvuuids>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4787
msgid "vgpvuuids"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4789
#, no-wrap
msgid ""
" vgpvuuids vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4794
msgid ""
"You can use this along with L</pvs> and L</pvuuid> calls to associate "
"physical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4797
msgid "See also L</vglvuuids>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4799
msgid "vgremove"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4801
#, no-wrap
msgid ""
" vgremove vgname\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4808
msgid "vgrename"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4810
#, no-wrap
msgid ""
" vgrename volgroup newvolgroup\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4814
msgid "vgs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4816
#, no-wrap
msgid ""
" vgs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4824
msgid "See also L</vgs-full>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4826
msgid "vgs-full"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4828
#, no-wrap
msgid ""
" vgs-full\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4833
msgid "vgscan"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4835
#, no-wrap
msgid ""
" vgscan\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4840
msgid "vguuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4842
#, no-wrap
msgid ""
" vguuid vgname\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4846
msgid "wc-c"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4848
#, no-wrap
msgid ""
" wc-c path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4853
msgid "wc-l"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4855
#, no-wrap
msgid ""
" wc-l path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4860
msgid "wc-w"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4862
#, no-wrap
msgid ""
" wc-w path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4867
msgid "write"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4869
#, no-wrap
msgid ""
" write path content\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4877
msgid "write-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4879
#, no-wrap
msgid ""
" write-file path content size\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4902
msgid "zegrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4904
#, no-wrap
msgid ""
" zegrep regex path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4912
msgid "zegrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4914
#, no-wrap
msgid ""
" zegrepi regex path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4922
msgid "zero"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4924
#, no-wrap
msgid ""
" zero device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4932
msgid "See also: L</zero-device>, L</scrub-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4934
msgid "zero-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4936
#, no-wrap
msgid ""
" zero-device device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4938
msgid ""
"This command writes zeroes over the entire C<device>.  Compare with L</zero> "
"which just zeroes the first few blocks of a device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4945
msgid "zerofree"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4947
#, no-wrap
msgid ""
" zerofree device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4960
msgid "zfgrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4962
#, no-wrap
msgid ""
" zfgrep pattern path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4970
msgid "zfgrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4972
#, no-wrap
msgid ""
" zfgrepi pattern path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4980
msgid "zfile"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4982
#, no-wrap
msgid ""
" zfile meth path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4989
msgid "Since 1.0.63, use L</file> instead which can now process compressed files."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4999
msgid "zgrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5001
#, no-wrap
msgid ""
" zgrep regex path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5009
msgid "zgrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5011
#, no-wrap
msgid ""
" zgrepi regex path\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:1
msgid "alloc"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:3
msgid "allocate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:5
#, no-wrap
msgid ""
" alloc filename size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:7
msgid ""
"This creates an empty (zeroed) file of the given size, and then adds so it "
"can be further examined."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:10 ../fish/guestfish-commands.pod:168
msgid "For more advanced image creation, see L<qemu-img(1)> utility."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:12 ../fish/guestfish-commands.pod:170
msgid "Size can be specified using standard suffixes, eg. C<1M>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:14
msgid ""
"To create a sparse file, use L</sparse> instead.  To create a prepared disk "
"image, see L</PREPARED DISK IMAGES>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:17
msgid "copy-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:19
#, no-wrap
msgid ""
" copy-in local [local ...] /remotedir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:21
msgid ""
"C<copy-in> copies local files or directories recursively into the disk "
"image, placing them in the directory called C</remotedir> (which must "
"exist).  This guestfish meta-command turns into a sequence of L</tar-in> and "
"other commands as necessary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:26
msgid ""
"Multiple local files and directories can be specified, but the last "
"parameter must always be a remote directory.  Wildcards cannot be used."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:30
msgid "copy-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:32
#, no-wrap
msgid ""
" copy-out remote [remote ...] localdir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:34
msgid ""
"C<copy-out> copies remote files or directories recursively out of the disk "
"image, placing them on the host disk in a local directory called C<localdir> "
"(which must exist).  This guestfish meta-command turns into a sequence of "
"L</download>, L</tar-out> and other commands as necessary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:40
msgid ""
"Multiple remote files and directories can be specified, but the last "
"parameter must always be a local directory.  To download to the current "
"directory, use C<.> as in:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:44
#, no-wrap
msgid ""
" copy-out /home .\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:46
msgid ""
"Wildcards cannot be used in the ordinary command, but you can use them with "
"the help of L</glob> like this:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:49
#, no-wrap
msgid ""
" glob copy-out /home/* .\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:51
msgid "echo"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:53
#, no-wrap
msgid ""
" echo [params ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:55
msgid "This echos the parameters to the terminal."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:57
msgid "edit"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:59
msgid "vi"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:61
msgid "emacs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:63
#, no-wrap
msgid ""
" edit filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:65
msgid ""
"This is used to edit a file.  It downloads the file, edits it locally using "
"your editor, then uploads the result."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:68
msgid ""
"The editor is C<$EDITOR>.  However if you use the alternate commands C<vi> "
"or C<emacs> you will get those corresponding editors."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:72
msgid "glob"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:74
#, no-wrap
msgid ""
" glob command args...\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:76
msgid ""
"Expand wildcards in any paths in the args list, and run C<command> "
"repeatedly on each matching path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:79
msgid "See L</WILDCARDS AND GLOBBING>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:81
msgid "hexedit"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:83
#, no-wrap
msgid ""
" hexedit <filename|device>\n"
" hexedit <filename|device> <max>\n"
" hexedit <filename|device> <start> <max>\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:87
msgid ""
"Use hexedit (a hex editor) to edit all or part of a binary file or block "
"device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:90
msgid ""
"This command works by downloading potentially the whole file or device, "
"editing it locally, then uploading it.  If the file or device is large, you "
"have to specify which part you wish to edit by using C<max> and/or C<start> "
"C<max> parameters.  C<start> and C<max> are specified in bytes, with the "
"usual modifiers allowed such as C<1M> (1 megabyte)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:97
msgid "For example to edit the first few sectors of a disk you might do:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:100
#, no-wrap
msgid ""
" hexedit /dev/sda 1M\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:102
msgid ""
"which would allow you to edit anywhere within the first megabyte of the "
"disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:105
msgid "To edit the superblock of an ext2 filesystem on C</dev/sda1>, do:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:107
#, no-wrap
msgid ""
" hexedit /dev/sda1 0x400 0x400\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:109
msgid "(assuming the superblock is in the standard location)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:111
msgid ""
"This command requires the external L<hexedit(1)> program.  You can specify "
"another program to use by setting the C<HEXEDITOR> environment variable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:115
msgid "See also L</hexdump>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:117
msgid "lcd"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:119
#, no-wrap
msgid ""
" lcd directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:121
msgid "Change the local directory, ie. the current directory of guestfish itself."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:124
msgid "Note that C<!cd> won't do what you might expect."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:126
msgid "man"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:128
msgid "manual"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:130
#, no-wrap
msgid ""
"  man\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:132
msgid "Opens the manual page for guestfish."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:134
msgid "more"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:136
msgid "less"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:138
#, no-wrap
msgid ""
" more filename\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:140
#, no-wrap
msgid ""
" less filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:142
msgid "This is used to view a file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:144
msgid ""
"The default viewer is C<$PAGER>.  However if you use the alternate command "
"C<less> you will get the C<less> command specifically."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:147
msgid "reopen"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:149
#, no-wrap
msgid ""
"  reopen\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:151
msgid ""
"Close and reopen the libguestfs handle.  It is not necessary to use this "
"normally, because the handle is closed properly when guestfish exits.  "
"However this is occasionally useful for testing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:155
msgid "sparse"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:157
#, no-wrap
msgid ""
" sparse filename size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:159
msgid ""
"This creates an empty sparse file of the given size, and then adds so it can "
"be further examined."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:162
msgid ""
"In all respects it works the same as the L</alloc> command, except that the "
"image file is allocated sparsely, which means that disk blocks are not "
"assigned to the file until they are needed.  Sparse disk files only use "
"space when written to, but they are slower and there is a danger you could "
"run out of real disk space during a write operation."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:172
msgid "supported"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:174
#, no-wrap
msgid ""
" supported\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:176
msgid ""
"This command returns a list of the optional groups known to the daemon, and "
"indicates which ones are supported by this build of the libguestfs "
"appliance."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:180
msgid "See also L<guestfs(3)/AVAILABILITY>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:182
msgid "time"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:184
#, no-wrap
msgid ""
" time command args...\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:186
msgid ""
"Run the command as usual, but print the elapsed time afterwards.  This can "
"be useful for benchmarking operations."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:5
msgid "libguestfs-test-tool - End user tests for libguestfs"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:9
#, no-wrap
msgid ""
" libguestfs-test-tool [--options]\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:13
msgid ""
"libguestfs-test-tool is a test program shipped with libguestfs to end users "
"and developers, to allow them to check basic libguestfs functionality is "
"working.  This is needed because libguestfs occasionally breaks for reasons "
"beyond our control: usually because of changes in the underlying qemu or "
"kernel packages, or the host environment."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:20
msgid "If you suspect a problem in libguestfs, then just run:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:22
#, no-wrap
msgid ""
" libguestfs-test-tool\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:24
msgid "It will print lots of diagnostic messages."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:26
msgid "If it runs to completion successfully, you will see this near the end:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:28
#, no-wrap
msgid ""
" ===== TEST FINISHED OK =====\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:30
msgid "and the test tool will exit with code 0."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:32
msgid ""
"If it fails (and/or exits with non-zero error code), please paste the "
"B<complete, unedited> output of the test tool into a bug report.  More "
"information about reporting bugs can be found on the "
"L<http://libguestfs.org/> website."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:41
msgid "I<--help>"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:43
msgid "Display short usage information and exit."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:45
msgid "I<--qemu qemu_binary>"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:47
msgid ""
"If you have downloaded another qemu binary, point this option at the full "
"path of the binary to try it."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:50
msgid "I<--qemudir qemu_source_dir>"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:52
msgid ""
"If you have compiled qemu from source, point this option at the source "
"directory to try it."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:55
msgid "I<--timeout N>"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:57
msgid ""
"Set the launch timeout to C<N> seconds.  The default is 120 seconds which "
"does not usually need to be adjusted unless your machine is very slow."
msgstr ""

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:63
msgid "TRYING OUT A DIFFERENT VERSION OF QEMU"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:65
msgid ""
"If you have compiled another version of qemu from source and would like to "
"try that, then you can use the I<--qemudir> option to point to the qemu "
"source directory."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:69
msgid ""
"If you have downloaded a qemu binary from somewhere, use the I<--qemu> "
"option to point to the binary."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:72
msgid ""
"When using an alternate qemu with libguestfs, usually you would need to "
"write a qemu wrapper script (see section I<QEMU WRAPPERS> in "
"L<guestfs(3)>).  libguestfs-test-tool writes a temporary qemu wrapper script "
"when you use either of the I<--qemudir> or I<--qemu> options."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:79
msgid ""
"libguestfs-test-tool returns I<0> if the tests completed without error, or "
"I<1> if there was an error."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:84
msgid ""
"For the full list of environment variables which may affect libguestfs, "
"please see the L<guestfs(3)> manual page."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:89
msgid "L<guestfs(3)>, L<http://libguestfs.org/>, L<http://qemu.org/>."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:5
msgid "guestmount - Mount a guest filesystem on the host using FUSE and libguestfs"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:9
#, no-wrap
msgid ""
" guestmount [--options] -a disk.img -m device [--ro] mountpoint\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:11
#, no-wrap
msgid ""
" guestmount [--options] -a disk.img -i [--ro] mountpoint\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:13
#, no-wrap
msgid ""
" guestmount [--options] -d Guest -i [--ro] mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:17
msgid ""
"You must I<not> use C<guestmount> in read-write mode on live virtual "
"machines.  If you do this, you risk disk corruption in the VM."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:22
msgid ""
"The guestmount program can be used to mount virtual machine filesystems and "
"other disk images on the host.  It uses libguestfs for access to the guest "
"filesystem, and FUSE (the \"filesystem in userspace\") to make it appear as "
"a mountable device."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:27
msgid ""
"Along with other options, you have to give at least one device (I<-a> "
"option) or libvirt domain (I<-d> option), and at least one mountpoint (I<-m> "
"option) or use the I<-i> inspection option.  How this works is better "
"explained in the L<guestfish(1)> manual page, or by looking at the examples "
"below."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:33
msgid ""
"FUSE lets you mount filesystems as non-root.  The mountpoint must be owned "
"by you, and the filesystem will not be visible to any other users unless you "
"make certain global configuration changes to C</etc/fuse.conf>.  To unmount "
"the filesystem, use the C<fusermount -u> command."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:41
msgid ""
"For a typical Windows guest which has its main filesystem on the first "
"partition:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:44
#, no-wrap
msgid ""
" guestmount -a windows.img -m /dev/sda1 --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:46
msgid ""
"For a typical Linux guest which has a /boot filesystem on the first "
"partition, and the root filesystem on a logical volume:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:49
#, no-wrap
msgid ""
" guestmount -a linux.img -m /dev/VG/LV -m /dev/sda1:/boot --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:51
msgid "To get libguestfs to detect guest mountpoints for you:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:53
#, no-wrap
msgid ""
" guestmount -a guest.img -i --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:55
msgid "For a libvirt guest called \"Guest\" you could do:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:57
#, no-wrap
msgid ""
" guestmount -d Guest -i --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:59
msgid ""
"If you don't know what filesystems are contained in a guest or disk image, "
"use L<virt-filesystems(1)> first:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:62
#, no-wrap
msgid ""
" virt-filesystems MyGuest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:64
msgid ""
"If you want to trace the libguestfs calls but without excessive debugging "
"information, we recommend:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:67
#, no-wrap
msgid ""
" guestmount [...] --trace /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:69
msgid "If you want to debug the program, we recommend:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:71
#, no-wrap
msgid ""
" guestmount [...] --trace --verbose /mnt\n"
"\n"
msgstr ""

#. type: =head1
#: ../fuse/guestmount.pod:73
msgid "NOTES"
msgstr ""

#. type: =head2
#: ../fuse/guestmount.pod:75
msgid "Other users cannot see the filesystem by default"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:77
msgid ""
"If you mount a filesystem as one user (eg. root), then other users will not "
"be able to see it by default.  The fix is to add the FUSE C<allow_other> "
"option when mounting:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:81
#, no-wrap
msgid ""
" sudo guestmount [...] -o allow_other /mnt\n"
"\n"
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:87
msgid "B<-a image> | B<--add image>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:89
msgid "Add a block device or virtual machine image."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:94
msgid "B<-c URI> | B<--connect URI>"
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:100
msgid "B<-d libvirt-domain> | B<--domain libvirt-domain>"
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:106
msgid "B<--dir-cache-timeout N>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:108
msgid ""
"Set the readdir cache timeout to I<N> seconds, the default being 60 "
"seconds.  The readdir cache [actually, there are several semi-independent "
"caches] is populated after a readdir(2) call with the stat and extended "
"attributes of the files in the directory, in anticipation that they will be "
"requested soon after."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:114
msgid ""
"There is also a different attribute cache implemented by FUSE (see the FUSE "
"option I<-o attr_timeout>), but the FUSE cache does not anticipate future "
"requests, only cache existing ones."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:125
msgid "B<--format=raw|qcow2|..> | B<--format>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:132
msgid ""
"If you have untrusted raw-format guest disk images, you should use this "
"option to specify the disk format.  This avoids a possible security problem "
"with malicious guests (CVE-2010-3851).  See also "
"L<guestfs(3)/guestfs_add_drive_opts>."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:137
msgid "B<--fuse-help>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:139
msgid "Display help on special FUSE options (see I<-o> below)."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:143
msgid "Display brief help and exit."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:145
msgid "B<-i> | B<--inspector>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:165
msgid ""
"Mount the named partition or logical volume on the given mountpoint B<in the "
"guest> (this has nothing to do with mountpoints in the host)."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:168
msgid ""
"If the mountpoint is omitted, it defaults to C</>.  You have to mount "
"something on C</>."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:181
msgid "B<-n> | B<--no-sync>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:183
msgid ""
"By default, we attempt to sync the guest disk when the FUSE mountpoint is "
"unmounted.  If you specify this option, then we don't attempt to sync the "
"disk.  See the discussion of autosync in the L<guestfs(3)> manpage."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:188
msgid "B<-o option> | B<--option option>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:190
msgid "Pass extra options to FUSE."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:192
msgid ""
"To get a list of all the extra options supported by FUSE, use the command "
"below.  Note that only the FUSE I<-o> options can be passed, and only some "
"of them are a good idea."
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:196
#, no-wrap
msgid ""
" guestmount --fuse-help\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:198
msgid "Some potentially useful FUSE options:"
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:202
msgid "B<-o allow_other>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:204
msgid "Allow other users to see the filesystem."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:206
msgid "B<-o attr_timeout=N>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:208
msgid "Enable attribute caching by FUSE, and set the timeout to I<N> seconds."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:210
msgid "B<-o kernel_cache>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:212
msgid ""
"Allow the kernel to cache files (reduces the number of reads that have to go "
"through the L<guestfs(3)> API).  This is generally a good idea if you can "
"afford the extra memory usage."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:216
msgid "B<-o uid=N> B<-o gid=N>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:218
msgid ""
"Use these options to map all UIDs and GIDs inside the guest filesystem to "
"the chosen values."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:223
msgid "B<-r> | B<--ro>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:225
msgid ""
"Add devices and mount everything read-only.  Also disallow writes and make "
"the disk appear read-only to FUSE."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:228
msgid ""
"This is highly recommended if you are not going to edit the guest disk.  If "
"the guest is running and this option is I<not> supplied, then there is a "
"strong risk of disk corruption in the guest.  We try to prevent this from "
"happening, but it is not always possible."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:233
msgid "See also L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:237
msgid "Enable SELinux support for the guest."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:239
msgid "B<-v> | B<--verbose>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:241
msgid "Enable verbose messages from underlying libguestfs."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:243
msgid "B<-V> | B<--version>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:245
msgid "Display the program version and exit."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:247
msgid "B<-w> | B<--rw>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:252 ../fuse/guestmount.pod:273
msgid "See L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:254
msgid "B<-x> | B<--trace>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:256
msgid "Trace libguestfs calls and entry into each FUSE function."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:258
msgid "This also stops the daemon from forking into the background."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:279
msgid ""
"L<guestfish(1)>, L<virt-inspector(1)>, L<virt-cat(1)>, L<virt-edit(1)>, "
"L<virt-tar(1)>, L<guestfs(3)>, L<http://libguestfs.org/>, "
"L<http://fuse.sf.net/>."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:294
msgid "Copyright (C) 2009-2010 Red Hat Inc.  L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:34
msgid "virt-edit - Edit a file in a virtual machine"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:38
#, no-wrap
msgid ""
" virt-edit [--options] domname file\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:40
#, no-wrap
msgid ""
" virt-edit [--options] disk.img [disk.img ...] file\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:42
#, no-wrap
msgid ""
" virt-edit [domname|disk.img] file -e 'expr'\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:46
msgid ""
"You must I<not> use C<virt-edit> on live virtual machines.  If you do this, "
"you risk disk corruption in the VM.  C<virt-edit> tries to stop you from "
"doing this, but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:52
msgid ""
"C<virt-edit> is a command line tool to edit C<file> where C<file> exists in "
"the named virtual machine (or disk image)."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:55
msgid "If you want to just view a file, use L<virt-cat(1)>."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:57
msgid ""
"For more complex cases you should look at the L<guestfish(1)> tool (see "
"L</USING GUESTFISH> below)."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:60
msgid ""
"C<virt-edit> cannot be used to create a new file, nor to edit multiple "
"files.  L<guestfish(1)> can do that and much more."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:65
msgid "Edit the named files interactively:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:67
#, no-wrap
msgid ""
" virt-edit mydomain /boot/grub/grub.conf\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:69
#, no-wrap
msgid ""
" virt-edit mydomain /etc/passwd\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:71
msgid "For Windows guests, some Windows paths are understood:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:73
#, no-wrap
msgid ""
" virt-edit mywindomain 'c:\\autoexec.bat'\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:75
msgid ""
"You can also edit files non-interactively (see L</NON-INTERACTIVE EDITING> "
"below).  To change the init default level to 5:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:79
#, no-wrap
msgid ""
" virt-edit mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:91 ../tools/virt-win-reg.pl:106 ../tools/virt-list-filesystems.pl:63 ../tools/virt-tar.pl:113 ../tools/virt-make-fs.pl:163 ../tools/virt-list-partitions.pl:64
msgid "Display brief help."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:99 ../tools/virt-win-reg.pl:114 ../tools/virt-list-filesystems.pl:71 ../tools/virt-tar.pl:121 ../tools/virt-make-fs.pl:171 ../tools/virt-list-partitions.pl:72
msgid "Display version number and exit."
msgstr ""

#. type: =item
#: ../tools/virt-edit.pl:105
msgid "B<--backup extension> | B<-b extension>"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:107
msgid ""
"Create a backup of the original file I<in the guest disk image>.  The backup "
"has the original filename with C<extension> added."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:110
msgid ""
"Usually the first character of C<extension> would be a dot C<.> so you would "
"write:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:113
#, no-wrap
msgid ""
" virt-edit -b .orig [etc]\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:115
msgid "By default, no backup file is made."
msgstr ""

#. type: =item
#: ../tools/virt-edit.pl:121 ../tools/virt-win-reg.pl:128 ../tools/virt-list-filesystems.pl:77 ../tools/virt-tar.pl:127 ../tools/virt-list-partitions.pl:78
msgid "B<--connect URI> | B<-c URI>"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:123 ../tools/virt-win-reg.pl:130 ../tools/virt-list-filesystems.pl:79 ../tools/virt-tar.pl:129 ../tools/virt-list-partitions.pl:80
msgid ""
"If using libvirt, connect to the given I<URI>.  If omitted, then we connect "
"to the default libvirt hypervisor."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:126 ../tools/virt-win-reg.pl:133 ../tools/virt-list-filesystems.pl:82 ../tools/virt-tar.pl:132 ../tools/virt-list-partitions.pl:83
msgid ""
"If you specify guest block devices directly, then libvirt is not used at "
"all."
msgstr ""

#. type: =item
#: ../tools/virt-edit.pl:133 ../tools/virt-win-reg.pl:140 ../tools/virt-list-filesystems.pl:89 ../tools/virt-tar.pl:139 ../tools/virt-list-partitions.pl:90
msgid "B<--format> raw"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:135 ../tools/virt-win-reg.pl:142 ../tools/virt-list-filesystems.pl:91 ../tools/virt-tar.pl:141 ../tools/virt-list-partitions.pl:92
msgid ""
"Specify the format of disk images given on the command line.  If this is "
"omitted then the format is autodetected from the content of the disk image."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:139 ../tools/virt-win-reg.pl:146 ../tools/virt-list-filesystems.pl:95 ../tools/virt-tar.pl:145 ../tools/virt-list-partitions.pl:96
msgid ""
"If disk images are requested from libvirt, then this program asks libvirt "
"for this information.  In this case, the value of the format parameter is "
"ignored."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:143 ../tools/virt-win-reg.pl:150 ../tools/virt-list-filesystems.pl:99 ../tools/virt-tar.pl:149 ../tools/virt-list-partitions.pl:100
msgid ""
"If working with untrusted raw-format guest disk images, you should ensure "
"the format is always specified."
msgstr ""

#. type: =item
#: ../tools/virt-edit.pl:150
msgid "B<--expr EXPR> | B<-e EXPR>"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:152
msgid ""
"Instead of launching the external editor, non-interactively apply the Perl "
"expression C<EXPR> to each line in the file.  See L</NON-INTERACTIVE "
"EDITING> below."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:156
msgid ""
"Be careful to properly quote the expression to prevent it from being altered "
"by the shell."
msgstr ""

#. type: =head1
#: ../tools/virt-edit.pl:280
msgid "NON-INTERACTIVE EDITING"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:282
msgid ""
"C<virt-edit> normally calls out to C<$EDITOR> (or vi) so the system "
"administrator can interactively edit the file."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:285
msgid ""
"There are two ways also to use C<virt-edit> from scripts in order to make "
"automated edits to files.  (Note that although you I<can> use C<virt-edit> "
"like this, it's less error-prone to write scripts directly using the "
"libguestfs API and Augeas for configuration file editing.)"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:291
msgid ""
"The first method is to temporarily set C<$EDITOR> to any script or program "
"you want to run.  The script is invoked as C<$EDITOR tmpfile> and it should "
"update C<tmpfile> in place however it likes."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:295
msgid ""
"The second method is to use the I<-e> parameter of C<virt-edit> to run a "
"short Perl snippet in the style of L<sed(1)>.  For example to replace all "
"instances of C<foo> with C<bar> in a file:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:299
#, no-wrap
msgid ""
" virt-edit domname filename -e 's/foo/bar/'\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:301
msgid ""
"The full power of Perl regular expressions can be used (see L<perlre(1)>).  "
"For example to delete root's password you could do:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:304
#, no-wrap
msgid ""
" virt-edit domname /etc/passwd -e 's/^root:.*?:/root::/'\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:306
msgid ""
"What really happens is that the snippet is evaluated as a Perl expression "
"for each line of the file.  The line, including the final C<\\n>, is passed "
"in C<$_> and the expression should update C<$_> or leave it unchanged."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:311
msgid ""
"To delete a line, set C<$_> to the empty string.  For example, to delete the "
"C<apache> user account from the password file you can do:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:314
#, no-wrap
msgid ""
" virt-edit mydomain /etc/passwd -e '$_ = \"\" if /^apache:/'\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:316
msgid ""
"To insert a line, prepend or append it to C<$_>.  However appending lines to "
"the end of the file is rather difficult this way since there is no concept "
"of \"last line of the file\" - your expression just doesn't get called "
"again.  You might want to use the first method (setting C<$EDITOR>) if you "
"want to do this."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:322
msgid ""
"The variable C<$lineno> contains the current line number.  As is "
"traditional, the first line in the file is number C<1>."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:325
msgid ""
"The return value from the expression is ignored, but the expression may call "
"C<die> in order to abort the whole program, leaving the original file "
"untouched."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:329
msgid ""
"Remember when matching the end of a line that C<$_> may contain the final "
"C<\\n>, or (for DOS files) C<\\r\\n>, or if the file does not end with a "
"newline then neither of these.  Thus to match or substitute some text at the "
"end of a line, use this regular expression:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:334
#, no-wrap
msgid ""
" /some text(\\r?\\n)?$/\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:336
msgid ""
"Alternately, use the perl C<chomp> function, being careful not to chomp "
"C<$_> itself (since that would remove all newlines from the file):"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:340
#, no-wrap
msgid ""
" my $m = $_; chomp $m; $m =~ /some text$/\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:344
msgid ""
"C<virt-edit> has a limited ability to understand Windows drive letters and "
"paths (eg. C<E:\\foo\\bar.txt>)."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:347
msgid "If and only if the guest is running Windows then:"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:353
msgid ""
"Drive letter prefixes like C<C:> are resolved against the Windows Registry "
"to the correct filesystem."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:358
msgid ""
"Any backslash (C<\\>) characters in the path are replaced with forward "
"slashes so that libguestfs can process it."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:363
msgid ""
"The path is resolved case insensitively to locate the file that should be "
"edited."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:368
msgid "There are some known shortcomings:"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:374
msgid "Some NTFS symbolic links may not be followed correctly."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:378
msgid "NTFS junction points that cross filesystems are not followed."
msgstr ""

#. type: =head1
#: ../tools/virt-edit.pl:435
msgid "USING GUESTFISH"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:437
msgid ""
"L<guestfish(1)> is a more powerful, lower level tool which you can use when "
"C<virt-edit> doesn't work."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:440
msgid "Using C<virt-edit> is approximately equivalent to doing:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:442
#, no-wrap
msgid ""
" guestfish --rw -i -d domname edit /file\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:444
msgid ""
"where C<domname> is the name of the libvirt guest, and C</file> is the full "
"path to the file."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:447
msgid ""
"The command above uses libguestfs's guest inspection feature and so does not "
"work on guests that libguestfs cannot inspect, or on things like arbitrary "
"disk images that don't contain guests.  To edit a file on a disk image "
"directly, use:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:452
#, no-wrap
msgid ""
" guestfish --rw -a disk.img -m /dev/sda1 edit /file\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:454
msgid ""
"where C<disk.img> is the disk image, C</dev/sda1> is the filesystem within "
"the disk image to edit, and C</file> is the full path to the file."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:458
msgid ""
"C<virt-edit> cannot create new files.  Use the guestfish commands C<touch>, "
"C<write> or C<upload> instead:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:461
#, no-wrap
msgid ""
" guestfish --rw -i -d domname touch /newfile\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:463
#, no-wrap
msgid ""
" guestfish --rw -i -d domname write /newfile \"new content\"\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:465
#, no-wrap
msgid ""
" guestfish --rw -i -d domname upload localfile /newfile\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:467
msgid "C<virt-edit> cannot edit multiple files, but guestfish can do it like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-edit.pl:470
#, no-wrap
msgid ""
" guestfish --rw -i -d domname edit /file1 : edit /file2\n"
"\n"
msgstr ""

#. type: =item
#: ../tools/virt-edit.pl:480
msgid "C<EDITOR>"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:482
msgid ""
"If set, this string is used as the editor.  It may contain arguments, "
"eg. C<\"emacs -nw\">"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:485
msgid "If not set, C<vi> is used."
msgstr ""

#. type: =head1
#: ../tools/virt-edit.pl:489 ../tools/virt-win-reg.pl:559 ../tools/virt-list-filesystems.pl:182 ../tools/virt-tar.pl:279 ../tools/virt-make-fs.pl:532 ../tools/virt-list-partitions.pl:250
msgid "SHELL QUOTING"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:491 ../tools/virt-win-reg.pl:567 ../tools/virt-list-filesystems.pl:184 ../tools/virt-tar.pl:281 ../tools/virt-make-fs.pl:534 ../tools/virt-list-partitions.pl:252
msgid ""
"Libvirt guest names can contain arbitrary characters, some of which have "
"meaning to the shell such as C<#> and space.  You may need to quote or "
"escape these characters on the command line.  See the shell manual page "
"L<sh(1)> for details."
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:498
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, "
"L<virt-tar-in(1)>, L<Sys::Guestfs(3)>, L<Sys::Guestfs::Lib(3)>, "
"L<Sys::Virt(3)>, L<http://libguestfs.org/>, L<perl(1)>, L<perlre(1)>."
msgstr ""

#. type: =head1
#: ../tools/virt-edit.pl:510 ../tools/virt-win-reg.pl:598 ../tools/virt-list-filesystems.pl:202 ../tools/virt-tar.pl:301 ../tools/virt-make-fs.pl:564 ../tools/virt-list-partitions.pl:269
msgid "AUTHOR"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:512 ../tools/virt-win-reg.pl:600 ../tools/virt-list-filesystems.pl:204 ../tools/virt-tar.pl:303 ../tools/virt-make-fs.pl:566 ../tools/virt-list-partitions.pl:271
msgid "Richard W.M. Jones L<http://people.redhat.com/~rjones/>"
msgstr ""

#. type: textblock
#: ../tools/virt-edit.pl:516
msgid "Copyright (C) 2009-2011 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:37
msgid ""
"virt-win-reg - Export and merge Windows Registry entries from a Windows "
"guest"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:41
#, no-wrap
msgid ""
" virt-win-reg domname 'HKLM\\Path\\To\\Subkey'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:43
#, no-wrap
msgid ""
" virt-win-reg domname 'HKLM\\Path\\To\\Subkey' name\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:45
#, no-wrap
msgid ""
" virt-win-reg domname 'HKLM\\Path\\To\\Subkey' @\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:47
#, no-wrap
msgid ""
" virt-win-reg --merge domname [input.reg ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:49
#, no-wrap
msgid ""
" virt-win-reg [--options] disk.img ... # instead of domname\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:53
msgid ""
"You must I<not> use C<virt-win-reg> with the I<--merge> option on live "
"virtual machines.  If you do this, you I<will> get irreversible disk "
"corruption in the VM.  C<virt-win-reg> tries to stop you from doing this, "
"but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:58
msgid ""
"Modifying the Windows Registry is an inherently risky operation.  The format "
"is deliberately obscure and undocumented, and Registry changes can leave the "
"system unbootable.  Therefore when using the I<--merge> option, make sure "
"you have a reliable backup first."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:65
msgid ""
"This program can export and merge Windows Registry entries from a Windows "
"guest."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:68
msgid ""
"The first parameter is the libvirt guest name or the raw disk image of a "
"Windows guest."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:71
msgid ""
"If I<--merge> is I<not> specified, then the chosen registry key is "
"displayed/exported (recursively).  For example:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:74
#, no-wrap
msgid ""
" $ virt-win-reg Windows7 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft'\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:76
msgid "You can also display single values from within registry keys, for example:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:79
#, no-wrap
msgid ""
" $ cvkey='HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'\n"
" $ virt-win-reg Windows7 $cvkey ProductName\n"
" Windows 7 Enterprise\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:83
msgid ""
"With I<--merge>, you can merge a textual regedit file into the Windows "
"Registry:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:86
#, no-wrap
msgid ""
" $ virt-win-reg --merge Windows7 changes.reg\n"
"\n"
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:88 ../tools/virt-tar.pl:45
msgid "NOTE"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:90
msgid ""
"This program is only meant for simple access to the registry.  If you want "
"to do complicated things with the registry, we suggest you download the "
"Registry hive files from the guest using L<libguestfs(3)> or L<guestfish(1)> "
"and access them locally, eg. using L<hivex(3)>, L<hivexsh(1)> or "
"L<hivexregedit(1)>."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:120 ../tools/virt-make-fs.pl:177
msgid "B<--debug>"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:122
msgid "Enable debugging messages."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:157
msgid "B<--merge>"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:159
msgid ""
"In merge mode, this merges a textual regedit file into the Windows Registry "
"of the virtual machine.  If this flag is I<not> given then virt-win-reg "
"displays or exports Registry entries instead."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:163
msgid ""
"Note that I<--merge> is I<unsafe> to use on live virtual machines, and will "
"result in disk corruption.  However exporting (without this flag)  is always "
"safe."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:171
msgid "B<--encoding> UTF-16LE|ASCII"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:173
msgid ""
"When merging (only), you may need to specify the encoding for strings to be "
"used in the hive file.  This is explained in detail in "
"L<Win::Hivex::Regedit(3)/ENCODING STRINGS>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:177
msgid ""
"The default is to use UTF-16LE, which should work with recent versions of "
"Windows."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:402
msgid "SUPPORTED SYSTEMS"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:404
msgid ""
"The program currently supports Windows NT-derived guests starting with "
"Windows XP through to at least Windows 7."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:407
msgid ""
"Registry support is done for C<HKEY_LOCAL_MACHINE\\SAM>, "
"C<HKEY_LOCAL_MACHINE\\SECURITY>, C<HKEY_LOCAL_MACHINE\\SOFTWARE>, "
"C<HKEY_LOCAL_MACHINE\\SYSTEM> and C<HKEY_USERS\\.DEFAULT>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:411
msgid ""
"You can use C<HKLM> as a shorthand for C<HKEY_LOCAL_MACHINE>, and C<HKU> for "
"C<HKEY_USERS>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:414
msgid ""
"C<HKEY_USERS\\$SID> and C<HKEY_CURRENT_USER> are B<not> supported at this "
"time."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:417
msgid "ENCODING"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:419
msgid ""
"C<virt-win-reg> expects that regedit files have already been reencoded in "
"the local encoding.  Usually on Linux hosts, this means UTF-8 with "
"Unix-style line endings.  Since Windows regedit files are often in UTF-16LE "
"with Windows-style line endings, you may need to reencode the whole file "
"before or after processing."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:425
msgid ""
"To reencode a file from Windows format to Linux (before processing it with "
"the I<--merge> option), you would do something like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:428
#, no-wrap
msgid ""
" iconv -f utf-16le -t utf-8 < win.reg | dos2unix > linux.reg\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:430
msgid ""
"To go in the opposite direction, after exporting and before sending the file "
"to a Windows user, do something like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:433
#, no-wrap
msgid ""
" unix2dos linux.reg | iconv -f utf-8 -t utf-16le > win.reg\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:435
msgid "For more information about encoding, see L<Win::Hivex::Regedit(3)>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:437
msgid ""
"If you are unsure about the current encoding, use the L<file(1)> command.  "
"Recent versions of Windows regedit.exe produce a UTF-16LE file with "
"Windows-style (CRLF) line endings, like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:441
#, no-wrap
msgid ""
" $ file software.reg\n"
" software.reg: Little-endian UTF-16 Unicode text, with very long lines,\n"
" with CRLF line terminators\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:445
msgid "This file would need conversion before you could I<--merge> it."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:447
msgid "CurrentControlSet etc."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:449
msgid ""
"Registry keys like C<CurrentControlSet> don't really exist in the Windows "
"Registry at the level of the hive file, and therefore you cannot modify "
"these."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:453
msgid ""
"C<CurrentControlSet> is usually an alias for C<ControlSet001>.  In some "
"circumstances it might refer to another control set.  The way to find out is "
"to look at the C<HKLM\\SYSTEM\\Select> key:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:457
#, no-wrap
msgid ""
" # virt-win-reg WindowsGuest 'HKLM\\SYSTEM\\Select'\n"
" [HKEY_LOCAL_MACHINE\\SYSTEM\\Select]\n"
" \"Current\"=dword:00000001\n"
" \"Default\"=dword:00000001\n"
" \"Failed\"=dword:00000000\n"
" \"LastKnownGood\"=dword:00000002\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:464
msgid "\"Current\" is the one which Windows will choose when it boots."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:466
msgid "Similarly, other C<Current...> keys in the path may need to be replaced."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:469
msgid "WINDOWS TIPS"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:471
msgid ""
"Note that some of these tips modify the guest disk image.  The guest I<must> "
"be shut off, else you will get disk corruption."
msgstr ""

#. type: =head2
#: ../tools/virt-win-reg.pl:474
msgid "RUNNING A BATCH SCRIPT WHEN A USER LOGS IN"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:476
msgid ""
"Prepare a DOS batch script, VBScript or executable.  Upload this using "
"L<guestfish(1)>.  For this example the script is called C<test.bat> and it "
"is uploaded into C<C:\\>:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:480
#, no-wrap
msgid ""
" guestfish -i -d WindowsGuest upload test.bat /test.bat\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:482
msgid "Prepare a regedit file containing the registry change:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:484
#, no-wrap
msgid ""
" cat > test.reg <<'EOF'\n"
" [HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce]\n"
" \"Test\"=\"c:\\\\test.bat\"\n"
" EOF\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:489
msgid ""
"In this example we use the key C<RunOnce> which means that the script will "
"run precisely once when the first user logs in.  If you want it to run every "
"time a user logs in, replace C<RunOnce> with C<Run>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:493
msgid "Now update the registry:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:495
#, no-wrap
msgid ""
" virt-win-reg --merge WindowsGuest test.reg\n"
"\n"
msgstr ""

#. type: =head2
#: ../tools/virt-win-reg.pl:497
msgid "INSTALLING A SERVICE"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:499
msgid ""
"This section assumes you are familiar with Windows services, and you either "
"have a program which handles the Windows Service Control Protocol directly "
"or you want to run any program using a service wrapper like SrvAny or the "
"free RHSrvAny."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:504
msgid ""
"First upload the program and optionally the service wrapper.  In this case "
"the test program is called C<test.exe> and we are using the RHSrvAny "
"wrapper:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:508
#, no-wrap
msgid ""
" guestfish -i -d WindowsGuest <<EOF\n"
"   upload rhsrvany.exe /rhsrvany.exe\n"
"   upload test.exe /test.exe\n"
" EOF\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:513
msgid ""
"Prepare a regedit file containing the registry changes.  In this example, "
"the first registry change is needed for the service itself or the service "
"wrapper (if used).  The second registry change is only needed because I am "
"using the RHSrvAny service wrapper."
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:518
#, no-wrap
msgid ""
" cat > service.reg <<'EOF'\n"
" [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny]\n"
" \"Type\"=dword:00000010\n"
" \"Start\"=dword:00000002\n"
" \"ErrorControl\"=dword:00000001\n"
" \"ImagePath\"=\"c:\\\\rhsrvany.exe\"\n"
" \"DisplayName\"=\"RHSrvAny\"\n"
" \"ObjectName\"=\"NetworkService\"\n"
" \n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:527
#, no-wrap
msgid ""
" [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny\\Parameters]\n"
" \"CommandLine\"=\"c:\\\\test.exe\"\n"
" \"PWD\"=\"c:\\\\Temp\"\n"
" EOF\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:538
msgid ""
"For use of C<ControlSet001> see the section above in this manual page.  You "
"may need to adjust this according to the control set that is in use by the "
"guest."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:544
msgid ""
"C<\"ObjectName\"> controls the privileges that the service will have.  An "
"alternative is C<\"ObjectName\"=\"LocalSystem\"> which would be the most "
"privileged account."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:550
msgid ""
"For the meaning of the magic numbers, see this Microsoft KB article: "
"L<http://support.microsoft.com/kb/103000>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:555
msgid "Update the registry:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:557
#, no-wrap
msgid ""
" virt-win-reg --merge WindowsGuest service.reg\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:561
msgid ""
"Be careful when passing parameters containing C<\\> (backslash) in the "
"shell.  Usually you will have to use 'single quotes' or double backslashes "
"(but not both) to protect them from the shell."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:565
msgid "Paths and value names are case-insensitive."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:574
msgid ""
"L<hivex(3)>, L<hivexsh(1)>, L<hivexregedit(1)>, L<guestfs(3)>, "
"L<guestfish(1)>, L<virt-cat(1)>, L<Sys::Guestfs(3)>, "
"L<Sys::Guestfs::Lib(3)>, L<Win::Hivex(3)>, L<Win::Hivex::Regedit(3)>, "
"L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:589 ../tools/virt-make-fs.pl:555
msgid ""
"When reporting bugs, please enable debugging and capture the I<complete> "
"output:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:592
#, no-wrap
msgid ""
" export LIBGUESTFS_DEBUG=1\n"
" virt-win-reg --debug [... rest ...] > /tmp/virt-win-reg.log 2>&1\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:595
msgid ""
"Attach /tmp/virt-win-reg.log to a new bug report at "
"L<https://bugzilla.redhat.com/>"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:604 ../tools/virt-make-fs.pl:570
msgid "Copyright (C) 2010 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:32
msgid "virt-list-filesystems - List filesystems in a virtual machine or disk image"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-filesystems.pl:36
#, no-wrap
msgid ""
" virt-list-filesystems [--options] domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-filesystems.pl:38
#, no-wrap
msgid ""
" virt-list-filesystems [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:42 ../tools/virt-list-partitions.pl:42
msgid ""
"This tool is obsolete.  Use L<virt-filesystems(1)> as a more flexible "
"replacement."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:45
msgid ""
"C<virt-list-filesystems> is a command line tool to list the filesystems that "
"are contained in a virtual machine or disk image."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:49
msgid ""
"C<virt-list-filesystems> is just a simple wrapper around L<libguestfs(3)> "
"functionality.  For more complex cases you should look at the "
"L<guestfish(1)> tool."
msgstr ""

#. type: =item
#: ../tools/virt-list-filesystems.pl:106 ../tools/virt-list-partitions.pl:115
msgid "B<-l> | B<--long>"
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:108
msgid ""
"With this option, C<virt-list-filesystems> displays the type of each "
"filesystem too (where \"type\" means C<ext3>, C<xfs> etc.)"
msgstr ""

#. type: =item
#: ../tools/virt-list-filesystems.pl:115
msgid "B<-a> | B<--all>"
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:117
msgid ""
"Normally we only show mountable filesystems.  If this option is given then "
"swap devices are shown too."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:191
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-tar(1)>, "
"L<virt-filesystems(1)>, L<virt-list-partitions(1)>, L<Sys::Guestfs(3)>, "
"L<Sys::Guestfs::Lib(3)>, L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:208 ../tools/virt-tar.pl:307
msgid "Copyright (C) 2009 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:33
msgid "virt-tar - Extract or upload files to a virtual machine"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:37
#, no-wrap
msgid ""
" virt-tar [--options] -x domname directory tarball\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:39
#, no-wrap
msgid ""
" virt-tar [--options] -u domname tarball directory\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:41
#, no-wrap
msgid ""
" virt-tar [--options] disk.img [disk.img ...] -x directory tarball\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:43
#, no-wrap
msgid ""
" virt-tar [--options] disk.img [disk.img ...] -u tarball directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:47
msgid ""
"This tool is obsolete.  Use L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
"L<virt-tar-in(1)>, L<virt-tar-out(1)> as replacements."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:52
msgid "Download C</home> from the VM into a local tarball:"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:54
#, no-wrap
msgid ""
" virt-tar -x domname /home home.tar\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:56
#, no-wrap
msgid ""
" virt-tar -zx domname /home home.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:58
msgid "Upload a local tarball and unpack it inside C</tmp> in the VM:"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:60
#, no-wrap
msgid ""
" virt-tar -u domname uploadstuff.tar /tmp\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:62
#, no-wrap
msgid ""
" virt-tar -zu domname uploadstuff.tar.gz /tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:66
msgid ""
"You must I<not> use C<virt-tar> with the I<-u> option (upload) on live "
"virtual machines.  If you do this, you risk disk corruption in the VM.  "
"C<virt-tar> tries to stop you from doing this, but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:71
msgid ""
"You can use I<-x> (extract) on live virtual machines, but you might get "
"inconsistent results or errors if there is filesystem activity inside the "
"VM.  If the live VM is synched and quiescent, then C<virt-tar> will usually "
"work, but the only way to guarantee consistent results is if the virtual "
"machine is shut down."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:79
msgid ""
"C<virt-tar> is a general purpose archive tool for downloading and uploading "
"parts of a guest filesystem.  There are many possibilities: making backups, "
"uploading data files, snooping on guest activity, fixing or customizing "
"guests, etc."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:84
msgid ""
"If you want to just view a single file, use L<virt-cat(1)>.  If you just "
"want to edit a single file, use L<virt-edit(1)>.  For more complex cases you "
"should look at the L<guestfish(1)> tool."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:88
msgid ""
"There are two modes of operation: I<-x> (eXtract) downloads a directory and "
"its contents (recursively) from the virtual machine into a local tarball.  "
"I<-u> uploads from a local tarball, unpacking it into a directory inside the "
"virtual machine.  You cannot use these two options together."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:94
msgid ""
"In addition, you may need to use the I<-z> (gZip) option to enable "
"compression.  When uploading, you have to specify I<-z> if the upload file "
"is compressed because virt-tar won't detect this on its own."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:98
msgid ""
"C<virt-tar> can only handle tar (optionally gzipped) format tarballs.  For "
"example it cannot do PKZip files or bzip2 compression.  If you want that "
"then you'll have to rebuild the tarballs yourself.  (This is a limitation of "
"the L<libguestfs(3)> API)."
msgstr ""

#. type: =item
#: ../tools/virt-tar.pl:156
msgid "B<-x> | B<--extract> | B<--download>"
msgstr ""

#. type: =item
#: ../tools/virt-tar.pl:158
msgid "B<-u> | B<--upload>"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:160
msgid ""
"Use I<-x> to extract (download) a directory from a virtual machine to a "
"local tarball."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:163
msgid ""
"Use I<-u> to upload and unpack from a local tarball into a virtual machine.  "
"Please read the L</WARNING> section above before using this option."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:167
msgid "You must specify exactly one of these options."
msgstr ""

#. type: =item
#: ../tools/virt-tar.pl:173
msgid "B<-z> | B<--gzip>"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:175
msgid "Specify that the input or output tarball is gzip-compressed."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:288
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-edit(1)>, "
"L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-tar-in(1)>, "
"L<virt-tar-out(1)>, L<Sys::Guestfs(3)>, L<Sys::Guestfs::Lib(3)>, "
"L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:37
msgid "virt-make-fs - Make a filesystem from a tar archive or files"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:41
#, no-wrap
msgid ""
" virt-make-fs [--options] input.tar output.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:43
#, no-wrap
msgid ""
" virt-make-fs [--options] input.tar.gz output.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:45
#, no-wrap
msgid ""
" virt-make-fs [--options] directory output.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:49
msgid ""
"Virt-make-fs is a command line tool for creating a filesystem from a tar "
"archive or some files in a directory.  It is similar to tools like "
"L<mkisofs(1)>, L<genisoimage(1)> and L<mksquashfs(1)>.  Unlike those tools, "
"it can create common filesystem types like ext2/3 or NTFS, which can be "
"useful if you want to attach these filesystems to existing virtual machines "
"(eg. to import large amounts of read-only data to a VM)."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:57
msgid "Basic usage is:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:59
#, no-wrap
msgid ""
" virt-make-fs input output\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:61
msgid ""
"where C<input> is either a directory containing files that you want to add, "
"or a tar archive (either uncompressed tar or gzip-compressed tar); and "
"C<output> is a disk image.  The input type is detected automatically.  The "
"output disk image defaults to a raw ext2 image unless you specify extra "
"flags (see L</OPTIONS> below)."
msgstr ""

#. type: =head2
#: ../tools/virt-make-fs.pl:67
msgid "EXTRA SPACE"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:69
msgid ""
"Unlike formats such as tar and squashfs, a filesystem does not \"just fit\" "
"the files that it contains, but might have extra space.  Depending on how "
"you are going to use the output, you might think this extra space is wasted "
"and want to minimize it, or you might want to leave space so that more files "
"can be added later.  Virt-make-fs defaults to minimizing the extra space, "
"but you can use the I<--size> flag to leave space in the filesystem if you "
"want it."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:77
msgid ""
"An alternative way to leave extra space but not make the output image any "
"bigger is to use an alternative disk image format (instead of the default "
"\"raw\" format).  Using I<--format=qcow2> will use the native QEmu/KVM qcow2 "
"image format (check your hypervisor supports this before using it).  This "
"allows you to choose a large I<--size> but the extra space won't actually be "
"allocated in the image until you try to store something in it."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:85
msgid ""
"Don't forget that you can also use local commands including L<resize2fs(8)> "
"and L<virt-resize(1)> to resize existing filesystems, or rerun virt-make-fs "
"to build another image from scratch."
msgstr ""

#. type: =head3
#: ../tools/virt-make-fs.pl:89 ../tools/virt-make-fs.pl:123 ../tools/virt-make-fs.pl:142
msgid "EXAMPLE"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:91
#, no-wrap
msgid ""
" virt-make-fs --format=qcow2 --size=+200M input output.img\n"
"\n"
msgstr ""

#. type: =head2
#: ../tools/virt-make-fs.pl:93
msgid "FILESYSTEM TYPE"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:95
msgid ""
"The default filesystem type is C<ext2>.  Just about any filesystem type that "
"libguestfs supports can be used (but I<not> read-only formats like "
"ISO9660).  Here are some of the more common choices:"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:101
msgid "I<ext3>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:103
msgid ""
"Note that ext3 filesystems contain a journal, typically 1-32 MB in size.  If "
"you are not going to use the filesystem in a way that requires the journal, "
"then this is just wasted overhead."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:107
msgid "I<ntfs> or I<vfat>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:109
msgid "Useful if exporting data to a Windows guest."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:111
msgid ""
"I<Note for vfat>: The tar archive or local directory must only contain files "
"which are owned by root (ie. UID:GID = 0:0).  The reason is that the tar "
"program running within libguestfs is unable to change the ownership of "
"non-root files, since vfat itself does not support this."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:116
msgid "I<minix>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:118
msgid ""
"Lower overhead than C<ext2>, but certain limitations on filename length and "
"total filesystem size."
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:125
#, no-wrap
msgid ""
" virt-make-fs --type=minix input minixfs.img\n"
"\n"
msgstr ""

#. type: =head2
#: ../tools/virt-make-fs.pl:127
msgid "TO PARTITION OR NOT TO PARTITION"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:129
msgid "Optionally virt-make-fs can add a partition table to the output disk."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:131
msgid ""
"Adding a partition can make the disk image more compatible with certain "
"virtualized operating systems which don't expect to see a filesystem "
"directly located on a block device (Linux doesn't care and will happily "
"handle both types)."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:136
msgid ""
"On the other hand, if you have a partition table then the output image is no "
"longer a straight filesystem.  For example you cannot run L<fsck(8)> "
"directly on a partitioned disk image.  (However libguestfs tools such as "
"L<guestfish(1)> and L<virt-resize(1)> can still be used)."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:144
msgid "Add an MBR partition:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:146
#, no-wrap
msgid ""
" virt-make-fs --partition -- input disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:148
msgid ""
"If the output disk image could be terabyte-sized or larger, it's better to "
"use an EFI/GPT-compatible partition table:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:151
#, no-wrap
msgid ""
" virt-make-fs --partition=gpt --size=+4T --format=qcow2 input disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:179
msgid "Enable debugging information."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:185
msgid "B<--size=E<lt>NE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:187
msgid "B<--size=+E<lt>NE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:189
msgid "B<-s E<lt>NE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:191
msgid "B<-s +E<lt>NE<gt>>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:193
msgid "Use the I<--size> (or I<-s>) option to choose the size of the output image."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:196
msgid ""
"If this option is I<not> given, then the output image will be just large "
"enough to contain all the files, with not much wasted space."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:199
msgid ""
"To choose a fixed size output disk, specify an absolute number followed by "
"b/K/M/G/T/P/E to mean bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, "
"Petabytes or Exabytes.  This must be large enough to contain all the input "
"files, else you will get an error."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:204
msgid ""
"To leave extra space, specify C<+> (plus sign) and a number followed by "
"b/K/M/G/T/P/E to mean bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, "
"Petabytes or Exabytes.  For example: I<--size=+200M> means enough space for "
"the input files, and (approximately) an extra 200 MB free space."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:210
msgid ""
"Note that virt-make-fs estimates free space, and therefore will not produce "
"filesystems containing precisely the free space requested.  (It is much more "
"expensive and time-consuming to produce a filesystem which has precisely the "
"desired free space)."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:219
msgid "B<--format=E<lt>fmtE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:221
msgid "B<-F E<lt>fmtE<gt>>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:223
msgid "Choose the output disk image format."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:225
msgid "The default is C<raw> (raw disk image)."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:227
msgid ""
"For other choices, see the L<qemu-img(1)> manpage.  The only other choice "
"that would really make sense here is C<qcow2>."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:234
msgid "B<--type=E<lt>fsE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:236
msgid "B<-t E<lt>fsE<gt>>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:238
msgid "Choose the output filesystem type."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:240
msgid "The default is C<ext2>."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:242
msgid "Any filesystem which is supported read-write by libguestfs can be used here."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:249
msgid "B<--partition>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:251
msgid "B<--partition=E<lt>parttypeE<gt>>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:253
msgid ""
"If specified, this flag adds an MBR partition table to the output disk "
"image."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:256
msgid ""
"You can change the partition table type, eg. I<--partition=gpt> for large "
"disks."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:259
msgid ""
"Note that if you just use a lonesome I<--partition>, the Perl option parser "
"might consider the next parameter to be the partition type.  For example:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:263
#, no-wrap
msgid ""
" virt-make-fs --partition input.tar ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:265
msgid ""
"would cause virt-make-fs to think you wanted to use a partition type of "
"C<input.tar> which is completely wrong.  To avoid this, use I<--> (a double "
"dash) between options and the input file argument:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:269
#, no-wrap
msgid ""
" virt-make-fs --partition -- input.tar ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:541
msgid ""
"L<guestfish(1)>, L<virt-resize(1)>, L<virt-tar-in(1)>, L<mkisofs(1)>, "
"L<genisoimage(1)>, L<mksquashfs(1)>, L<mke2fs(8)>, L<resize2fs(8)>, "
"L<guestfs(3)>, L<Sys::Guestfs(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:558
#, no-wrap
msgid ""
" export LIBGUESTFS_DEBUG=1\n"
" virt-make-fs --debug [...] > /tmp/virt-make-fs.log 2>&1\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:561
msgid ""
"Attach /tmp/virt-make-fs.log to a new bug report at "
"L<https://bugzilla.redhat.com/>"
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:32
msgid "virt-list-partitions - List partitions in a virtual machine or disk image"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-partitions.pl:36
#, no-wrap
msgid ""
" virt-list-partitions [--options] domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-partitions.pl:38
#, no-wrap
msgid ""
" virt-list-partitions [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:45
msgid ""
"C<virt-list-partitions> is a command line tool to list the partitions that "
"are contained in a virtual machine or disk image.  It is mainly useful as a "
"first step to using L<virt-resize(1)>."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:50
msgid ""
"C<virt-list-partitions> is just a simple wrapper around L<libguestfs(3)> "
"functionality.  For more complex cases you should look at the "
"L<guestfish(1)> tool."
msgstr ""

#. type: =item
#: ../tools/virt-list-partitions.pl:107
msgid "B<-h> | B<--human-readable>"
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:109
msgid "Show sizes in human-readable form (eg. \"1G\")."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:117
msgid ""
"With this option, C<virt-list-partitions> displays the type and size of each "
"partition too (where \"type\" means C<ext3>, C<pv> etc.)"
msgstr ""

#. type: =item
#: ../tools/virt-list-partitions.pl:124
msgid "B<-t> | B<--total>"
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:126
msgid "Display the total size of each block device (as a separate row or rows)."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:259
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, "
"L<virt-list-filesystems(1)>, L<virt-resize(1)>, L<Sys::Guestfs(3)>, "
"L<Sys::Guestfs::Lib(3)>, L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:275
msgid "Copyright (C) 2009-2010 Red Hat Inc."
msgstr ""
