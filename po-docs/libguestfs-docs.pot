# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Red Hat Inc.
# This file is distributed under the same license as the libguestfs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: libguestfs 1.18.0\n"
"Report-Msgid-Bugs-To: libguestfs@redhat.com\n"
"POT-Creation-Date: 2012-05-21 16:16+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: ../align/virt-alignment-scan.pod:3 ../appliance/libguestfs-make-fixed-appliance.pod:3 ../cat/virt-cat.pod:3 ../cat/virt-filesystems.pod:3 ../cat/virt-ls.pod:3 ../df/virt-df.pod:3 ../edit/virt-edit.pod:3 ../erlang/examples/guestfs-erlang.pod:3 ../examples/guestfs-examples.pod:3 ../examples/guestfs-faq.pod:3 ../examples/guestfs-performance.pod:3 ../examples/guestfs-recipes.pod:14 ../examples/guestfs-testing.pod:3 ../fish/guestfish.pod:3 ../fish/virt-copy-in.pod:3 ../fish/virt-copy-out.pod:3 ../fish/virt-tar-in.pod:3 ../fish/virt-tar-out.pod:3 ../format/virt-format.pod:3 ../fuse/guestmount.pod:3 ../inspector/virt-inspector.pod:3 ../java/examples/guestfs-java.pod:3 ../ocaml/examples/guestfs-ocaml.pod:3 ../perl/examples/guestfs-perl.pod:3 ../python/examples/guestfs-python.pod:3 ../rescue/virt-rescue.pod:3 ../resize/virt-resize.pod:3 ../ruby/examples/guestfs-ruby.pod:3 ../sparsify/virt-sparsify.pod:3 ../src/guestfs.pod:3 ../sysprep/virt-sysprep.pod:3 ../test-tool/libguestfs-test-tool.pod:3 ../tools/virt-list-filesystems.pl:30 ../tools/virt-list-partitions.pl:30 ../tools/virt-make-fs.pl:35 ../tools/virt-tar.pl:31 ../tools/virt-win-reg.pl:35
msgid "NAME"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:5
msgid "virt-alignment-scan - Check alignment of virtual machine partitions"
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:7 ../appliance/libguestfs-make-fixed-appliance.pod:7 ../cat/virt-cat.pod:7 ../cat/virt-filesystems.pod:7 ../cat/virt-ls.pod:7 ../df/virt-df.pod:7 ../edit/virt-edit.pod:7 ../erlang/examples/guestfs-erlang.pod:7 ../examples/guestfs-examples.pod:7 ../fish/guestfish.pod:7 ../fish/virt-copy-in.pod:7 ../fish/virt-copy-out.pod:7 ../fish/virt-tar-in.pod:7 ../fish/virt-tar-out.pod:7 ../format/virt-format.pod:7 ../fuse/guestmount.pod:7 ../inspector/virt-inspector.pod:7 ../java/examples/guestfs-java.pod:7 ../ocaml/examples/guestfs-ocaml.pod:7 ../perl/examples/guestfs-perl.pod:7 ../python/examples/guestfs-python.pod:7 ../rescue/virt-rescue.pod:7 ../resize/virt-resize.pod:7 ../ruby/examples/guestfs-ruby.pod:7 ../sparsify/virt-sparsify.pod:7 ../src/guestfs.pod:7 ../sysprep/virt-sysprep.pod:7 ../test-tool/libguestfs-test-tool.pod:7 ../tools/virt-list-filesystems.pl:34 ../tools/virt-list-partitions.pl:34 ../tools/virt-make-fs.pl:39 ../tools/virt-tar.pl:35 ../tools/virt-win-reg.pl:39
msgid "SYNOPSIS"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:9
#, no-wrap
msgid ""
" virt-alignment-scan [--options] -d domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:11
#, no-wrap
msgid ""
" virt-alignment-scan [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:13
#, no-wrap
msgid ""
" virt-alignment-scan [--options]\n"
"\n"
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:15 ../appliance/libguestfs-make-fixed-appliance.pod:13 ../cat/virt-cat.pod:19 ../cat/virt-filesystems.pod:13 ../cat/virt-ls.pod:19 ../df/virt-df.pod:21 ../edit/virt-edit.pod:27 ../erlang/examples/guestfs-erlang.pod:16 ../examples/guestfs-examples.pod:19 ../examples/guestfs-performance.pod:7 ../examples/guestfs-recipes.pod:18 ../examples/guestfs-testing.pod:7 ../fish/guestfish.pod:30 ../fish/virt-copy-in.pod:19 ../fish/virt-copy-out.pod:13 ../fish/virt-tar-in.pod:21 ../fish/virt-tar-out.pod:15 ../format/virt-format.pod:11 ../fuse/guestmount.pod:20 ../inspector/virt-inspector.pod:19 ../java/examples/guestfs-java.pod:15 ../ocaml/examples/guestfs-ocaml.pod:25 ../perl/examples/guestfs-perl.pod:18 ../python/examples/guestfs-python.pod:14 ../rescue/virt-rescue.pod:31 ../resize/virt-resize.pod:13 ../ruby/examples/guestfs-ruby.pod:15 ../sparsify/virt-sparsify.pod:11 ../src/guestfs.pod:23 ../sysprep/virt-sysprep.pod:13 ../test-tool/libguestfs-test-tool.pod:11 ../tools/virt-list-filesystems.pl:45 ../tools/virt-list-partitions.pl:45 ../tools/virt-make-fs.pl:47 ../tools/virt-tar.pl:77 ../tools/virt-win-reg.pl:63
msgid "DESCRIPTION"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:17
msgid ""
"When older operating systems install themselves, the partitioning tools "
"place partitions at a sector misaligned with the underlying storage "
"(commonly the first partition starts on sector C<63>).  Misaligned "
"partitions can result in an operating system issuing more I/O than should be "
"necessary."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:23
msgid ""
"The virt-alignment-scan tool checks the alignment of partitions in virtual "
"machines and disk images and warns you if there are alignment problems."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:27
msgid ""
"Currently there is no virt tool for fixing alignment problems.  You can only "
"reinstall the guest operating system.  The following NetApp document "
"summarises the problem and possible solutions: "
"L<http://media.netapp.com/documents/tr-3747.pdf>"
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:32
msgid "OUTPUT"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:34
msgid "To run this tool on a disk image directly, use the I<-a> option:"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:36
#, no-wrap
msgid ""
" $ virt-alignment-scan -a winxp.img\n"
" /dev/sda1        32256          512    bad (alignment < 4K)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:39
#, no-wrap
msgid ""
" $ virt-alignment-scan -a fedora16.img\n"
" /dev/sda1      1048576         1024K   ok\n"
" /dev/sda2      2097152         2048K   ok\n"
" /dev/sda3    526385152         2048K   ok\n"
"\n"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:44
msgid ""
"To run the tool on a guest known to libvirt, use the I<-d> option and "
"possibly the I<-c> option:"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:47
#, no-wrap
msgid ""
" # virt-alignment-scan -d RHEL5\n"
" /dev/sda1        32256          512    bad (alignment < 4K)\n"
" /dev/sda2    106928640          512    bad (alignment < 4K)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:51
#, no-wrap
msgid ""
" $ virt-alignment-scan -c qemu:///system -d Win7TwoDisks\n"
" /dev/sda1      1048576         1024K   ok\n"
" /dev/sda2    105906176         1024K   ok\n"
" /dev/sdb1        65536           64K   ok\n"
"\n"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:56
msgid ""
"Run virt-alignment-scan without any I<-a> or I<-d> options to scan all "
"libvirt domains."
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:59
#, no-wrap
msgid ""
" # virt-alignment-scan\n"
" F16x64:/dev/sda1      1048576         1024K   ok\n"
" F16x64:/dev/sda2      2097152         2048K   ok\n"
" F16x64:/dev/sda3    526385152         2048K   ok\n"
"\n"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:64
msgid ""
"The output consists of 4 or more whitespace-separated columns.  Only the "
"first 4 columns are significant if you want to parse this from a program.  "
"The columns are:"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:70
msgid "col 1"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:72
msgid ""
"The device and partition name (eg. C</dev/sda1> meaning the first partition "
"on the first block device)."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:75
msgid ""
"When listing all libvirt domains (no I<-a> or I<-d> option given) this "
"column is prefixed by the libvirt name or UUID (if I<--uuid> is given).  eg: "
"C<WinXP:/dev/sda1>"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:79
msgid "col 2"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:81
msgid "the start of the partition in bytes"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:83
msgid "col 3"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:85
msgid "the alignment in bytes or Kbytes (eg. C<512> or C<4K>)"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:87
msgid "col 4"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:89
msgid ""
"C<ok> if the alignment is best for performance, or C<bad> if the alignment "
"can cause performance problems"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:92
msgid "cols 5+"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:94
msgid "optional free-text explanation."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:98
msgid ""
"The exit code from the program changes depending on whether poorly aligned "
"partitions were found.  See L</EXIT STATUS> below."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:101
msgid "If you just want the exit code with no output, use the I<-q> option."
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:103 ../appliance/libguestfs-make-fixed-appliance.pod:77 ../cat/virt-cat.pod:62 ../cat/virt-filesystems.pod:91 ../cat/virt-ls.pod:261 ../df/virt-df.pod:59 ../edit/virt-edit.pod:62 ../fish/guestfish.pod:148 ../fish/virt-copy-in.pod:45 ../fish/virt-copy-out.pod:34 ../fish/virt-tar-in.pod:42 ../fish/virt-tar-out.pod:36 ../format/virt-format.pod:59 ../fuse/guestmount.pod:92 ../inspector/virt-inspector.pod:54 ../rescue/virt-rescue.pod:115 ../resize/virt-resize.pod:262 ../sparsify/virt-sparsify.pod:94 ../sysprep/virt-sysprep.pod:39 ../test-tool/libguestfs-test-tool.pod:36 ../tools/virt-list-filesystems.pl:55 ../tools/virt-list-partitions.pl:56 ../tools/virt-make-fs.pl:155 ../tools/virt-tar.pl:103 ../tools/virt-win-reg.pl:96
msgid "OPTIONS"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:107 ../appliance/libguestfs-make-fixed-appliance.pod:81 ../cat/virt-cat.pod:66 ../cat/virt-filesystems.pod:95 ../cat/virt-ls.pod:265 ../df/virt-df.pod:63 ../edit/virt-edit.pod:66 ../fish/guestfish.pod:152 ../format/virt-format.pod:63 ../fuse/guestmount.pod:160 ../inspector/virt-inspector.pod:58 ../rescue/virt-rescue.pod:119 ../resize/virt-resize.pod:266 ../sparsify/virt-sparsify.pod:98 ../sysprep/virt-sysprep.pod:43 ../test-tool/libguestfs-test-tool.pod:40 ../tools/virt-list-filesystems.pl:63 ../tools/virt-list-partitions.pl:64 ../tools/virt-make-fs.pl:163 ../tools/virt-tar.pl:111 ../tools/virt-win-reg.pl:104
msgid "B<--help>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:109 ../cat/virt-cat.pod:68 ../cat/virt-filesystems.pod:97 ../cat/virt-ls.pod:267 ../df/virt-df.pod:65 ../edit/virt-edit.pod:68 ../format/virt-format.pod:65 ../inspector/virt-inspector.pod:60 ../rescue/virt-rescue.pod:121 ../sysprep/virt-sysprep.pod:45 ../tools/virt-list-filesystems.pl:65 ../tools/virt-list-partitions.pl:66 ../tools/virt-make-fs.pl:165 ../tools/virt-tar.pl:113 ../tools/virt-win-reg.pl:106
msgid "Display brief help."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:111 ../cat/virt-cat.pod:70 ../cat/virt-filesystems.pod:99 ../cat/virt-ls.pod:269 ../df/virt-df.pod:67 ../edit/virt-edit.pod:70 ../format/virt-format.pod:67 ../inspector/virt-inspector.pod:62 ../rescue/virt-rescue.pod:123 ../sysprep/virt-sysprep.pod:47
msgid "B<-a> file"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:113 ../cat/virt-cat.pod:72 ../cat/virt-filesystems.pod:101 ../cat/virt-ls.pod:271 ../df/virt-df.pod:69 ../edit/virt-edit.pod:72 ../format/virt-format.pod:69 ../inspector/virt-inspector.pod:64 ../rescue/virt-rescue.pod:125 ../sysprep/virt-sysprep.pod:49
msgid "B<--add> file"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:115 ../sysprep/virt-sysprep.pod:51
msgid "Add I<file> which should be a disk image from a virtual machine."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:117 ../cat/virt-cat.pod:78 ../cat/virt-filesystems.pod:107 ../cat/virt-ls.pod:277 ../df/virt-df.pod:75 ../edit/virt-edit.pod:78 ../fish/guestfish.pod:174 ../format/virt-format.pod:73 ../fuse/guestmount.pod:102 ../inspector/virt-inspector.pod:70 ../rescue/virt-rescue.pod:131
msgid ""
"The format of the disk image is auto-detected.  To override this and force a "
"particular format use the I<--format=..> option."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:120 ../cat/virt-cat.pod:81 ../cat/virt-filesystems.pod:125 ../cat/virt-ls.pod:291 ../df/virt-df.pod:78 ../rescue/virt-rescue.pod:138 ../sysprep/virt-sysprep.pod:56
msgid "B<-c> URI"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:122 ../cat/virt-cat.pod:83 ../cat/virt-filesystems.pod:127 ../cat/virt-ls.pod:293 ../df/virt-df.pod:80 ../rescue/virt-rescue.pod:140 ../sysprep/virt-sysprep.pod:58
msgid "B<--connect> URI"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:124 ../cat/virt-cat.pod:85 ../cat/virt-filesystems.pod:129 ../cat/virt-ls.pod:295 ../df/virt-df.pod:82 ../edit/virt-edit.pod:99 ../inspector/virt-inspector.pod:77 ../rescue/virt-rescue.pod:142 ../sysprep/virt-sysprep.pod:60 ../tools/virt-list-filesystems.pl:83 ../tools/virt-list-partitions.pl:84 ../tools/virt-tar.pl:131 ../tools/virt-win-reg.pl:132
msgid ""
"If using libvirt, connect to the given I<URI>.  If omitted, then we connect "
"to the default libvirt hypervisor."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:127 ../cat/virt-cat.pod:88 ../cat/virt-filesystems.pod:132 ../cat/virt-ls.pod:298 ../df/virt-df.pod:85 ../rescue/virt-rescue.pod:145 ../sysprep/virt-sysprep.pod:63
msgid ""
"If you specify guest block devices directly (I<-a>), then libvirt is not "
"used at all."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:130 ../cat/virt-cat.pod:91 ../cat/virt-filesystems.pod:141 ../cat/virt-ls.pod:307 ../df/virt-df.pod:94 ../edit/virt-edit.pod:105 ../inspector/virt-inspector.pod:84 ../rescue/virt-rescue.pod:148 ../sysprep/virt-sysprep.pod:66
msgid "B<-d> guest"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:132 ../cat/virt-cat.pod:93 ../cat/virt-filesystems.pod:143 ../cat/virt-ls.pod:309 ../df/virt-df.pod:96 ../edit/virt-edit.pod:107 ../inspector/virt-inspector.pod:86 ../rescue/virt-rescue.pod:150 ../sysprep/virt-sysprep.pod:68
msgid "B<--domain> guest"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:134 ../cat/virt-cat.pod:95 ../cat/virt-filesystems.pod:145 ../cat/virt-ls.pod:311 ../df/virt-df.pod:98 ../edit/virt-edit.pod:109 ../inspector/virt-inspector.pod:88 ../rescue/virt-rescue.pod:152 ../sysprep/virt-sysprep.pod:70
msgid ""
"Add all the disks from the named libvirt guest.  Domain UUIDs can be used "
"instead of names."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:137 ../cat/virt-cat.pod:105 ../cat/virt-filesystems.pod:170 ../cat/virt-ls.pod:328 ../df/virt-df.pod:101 ../fish/guestfish.pod:233 ../format/virt-format.pod:87 ../fuse/guestmount.pod:142 ../inspector/virt-inspector.pod:98 ../rescue/virt-rescue.pod:155
msgid "B<--format=raw|qcow2|..>"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:139 ../cat/virt-cat.pod:107 ../cat/virt-filesystems.pod:172 ../cat/virt-ls.pod:330 ../df/virt-df.pod:103 ../edit/virt-edit.pod:134 ../fish/guestfish.pod:235 ../format/virt-format.pod:89 ../fuse/guestmount.pod:144 ../inspector/virt-inspector.pod:100 ../rescue/virt-rescue.pod:157
msgid "B<--format>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:141 ../cat/virt-cat.pod:109 ../cat/virt-filesystems.pod:174 ../cat/virt-ls.pod:332 ../df/virt-df.pod:105 ../edit/virt-edit.pod:136 ../fish/guestfish.pod:237 ../format/virt-format.pod:91 ../fuse/guestmount.pod:146 ../rescue/virt-rescue.pod:159
msgid ""
"The default for the I<-a> option is to auto-detect the format of the disk "
"image.  Using this forces the disk format for I<-a> options which follow on "
"the command line.  Using I<--format> with no argument switches back to "
"auto-detection for subsequent I<-a> options."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:146 ../cat/virt-cat.pod:114 ../cat/virt-filesystems.pod:179 ../cat/virt-ls.pod:337 ../df/virt-df.pod:110 ../edit/virt-edit.pod:141 ../fish/guestfish.pod:242 ../fish/guestfish.pod:685 ../format/virt-format.pod:96 ../inspector/virt-inspector.pod:350 ../rescue/virt-rescue.pod:164 ../src/guestfs.pod:2945 ../sysprep/virt-sysprep.pod:111
msgid "For example:"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:148
#, no-wrap
msgid ""
" virt-alignment-scan --format=raw -a disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:150 ../cat/virt-cat.pod:118 ../cat/virt-filesystems.pod:183 ../cat/virt-ls.pod:341 ../df/virt-df.pod:114 ../edit/virt-edit.pod:145 ../fish/guestfish.pod:246 ../format/virt-format.pod:100 ../rescue/virt-rescue.pod:168 ../sysprep/virt-sysprep.pod:115
msgid "forces raw format (no auto-detection) for C<disk.img>."
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:152
#, no-wrap
msgid ""
" virt-alignment-scan --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:154 ../cat/virt-cat.pod:122 ../cat/virt-filesystems.pod:187 ../cat/virt-ls.pod:345 ../df/virt-df.pod:118 ../edit/virt-edit.pod:149 ../fish/guestfish.pod:250 ../format/virt-format.pod:104 ../rescue/virt-rescue.pod:172 ../sysprep/virt-sysprep.pod:119
msgid ""
"forces raw format (no auto-detection) for C<disk.img> and reverts to "
"auto-detection for C<another.img>."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:157 ../cat/virt-cat.pod:125 ../cat/virt-filesystems.pod:190 ../cat/virt-ls.pod:348 ../df/virt-df.pod:121 ../edit/virt-edit.pod:152 ../format/virt-format.pod:107 ../rescue/virt-rescue.pod:175 ../sysprep/virt-sysprep.pod:122
msgid ""
"If you have untrusted raw-format guest disk images, you should use this "
"option to specify the disk format.  This avoids a possible security problem "
"with malicious guests (CVE-2010-3851)."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:161 ../resize/virt-resize.pod:497 ../sparsify/virt-sparsify.pod:172 ../sysprep/virt-sysprep.pod:148
msgid "B<-q>"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:163 ../resize/virt-resize.pod:499 ../sparsify/virt-sparsify.pod:174 ../sysprep/virt-sysprep.pod:150
msgid "B<--quiet>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:165
msgid ""
"Don't produce any output.  Just set the exit code (see L</EXIT STATUS> "
"below)."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:168 ../cat/virt-filesystems.pod:255 ../df/virt-df.pod:163
msgid "B<--uuid>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:170 ../df/virt-df.pod:165
msgid ""
"Print UUIDs instead of names.  This is useful for following a guest even "
"when the guest is migrated or renamed, or when two guests happen to have the "
"same name."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:174
msgid ""
"This option only applies when listing all libvirt domains (when no I<-a> or "
"I<-d> options are specified)."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:177 ../cat/virt-cat.pod:134 ../cat/virt-filesystems.pod:261 ../cat/virt-ls.pod:425 ../df/virt-df.pod:173 ../edit/virt-edit.pod:161 ../fish/guestfish.pod:402 ../format/virt-format.pod:145 ../fuse/guestmount.pod:266 ../inspector/virt-inspector.pod:118 ../rescue/virt-rescue.pod:234 ../sparsify/virt-sparsify.pod:178 ../sysprep/virt-sysprep.pod:166
msgid "B<-v>"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:179 ../cat/virt-cat.pod:136 ../cat/virt-filesystems.pod:263 ../cat/virt-ls.pod:427 ../df/virt-df.pod:175 ../edit/virt-edit.pod:163 ../fish/guestfish.pod:404 ../format/virt-format.pod:147 ../fuse/guestmount.pod:268 ../inspector/virt-inspector.pod:120 ../rescue/virt-rescue.pod:236 ../sparsify/virt-sparsify.pod:180 ../sysprep/virt-sysprep.pod:168
msgid "B<--verbose>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:181 ../cat/virt-cat.pod:138 ../cat/virt-filesystems.pod:265 ../cat/virt-ls.pod:429 ../df/virt-df.pod:177 ../edit/virt-edit.pod:165 ../format/virt-format.pod:149 ../inspector/virt-inspector.pod:122 ../rescue/virt-rescue.pod:238 ../sparsify/virt-sparsify.pod:182 ../sysprep/virt-sysprep.pod:170
msgid "Enable verbose messages for debugging."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:183 ../appliance/libguestfs-make-fixed-appliance.pod:85 ../cat/virt-cat.pod:140 ../cat/virt-filesystems.pod:267 ../cat/virt-ls.pod:431 ../df/virt-df.pod:179 ../edit/virt-edit.pod:167 ../fish/guestfish.pod:409 ../format/virt-format.pod:151 ../fuse/guestmount.pod:272 ../inspector/virt-inspector.pod:124 ../rescue/virt-rescue.pod:240 ../resize/virt-resize.pod:567 ../sparsify/virt-sparsify.pod:184 ../sysprep/virt-sysprep.pod:172 ../test-tool/libguestfs-test-tool.pod:61
msgid "B<-V>"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:185 ../appliance/libguestfs-make-fixed-appliance.pod:87 ../cat/virt-cat.pod:142 ../cat/virt-filesystems.pod:269 ../cat/virt-ls.pod:433 ../df/virt-df.pod:181 ../edit/virt-edit.pod:169 ../fish/guestfish.pod:411 ../format/virt-format.pod:153 ../fuse/guestmount.pod:274 ../inspector/virt-inspector.pod:126 ../rescue/virt-rescue.pod:242 ../resize/virt-resize.pod:569 ../sparsify/virt-sparsify.pod:186 ../sysprep/virt-sysprep.pod:174 ../test-tool/libguestfs-test-tool.pod:63 ../tools/virt-list-filesystems.pl:71 ../tools/virt-list-partitions.pl:72 ../tools/virt-make-fs.pl:171 ../tools/virt-tar.pl:119 ../tools/virt-win-reg.pl:112
msgid "B<--version>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:187 ../cat/virt-cat.pod:144 ../cat/virt-filesystems.pod:271 ../cat/virt-ls.pod:435 ../df/virt-df.pod:183 ../edit/virt-edit.pod:171 ../format/virt-format.pod:155 ../inspector/virt-inspector.pod:128 ../rescue/virt-rescue.pod:244 ../resize/virt-resize.pod:571 ../sparsify/virt-sparsify.pod:188 ../sysprep/virt-sysprep.pod:176 ../tools/virt-list-filesystems.pl:73 ../tools/virt-list-partitions.pl:74 ../tools/virt-make-fs.pl:173 ../tools/virt-tar.pl:121 ../tools/virt-win-reg.pl:114
msgid "Display version number and exit."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:189 ../cat/virt-cat.pod:146 ../cat/virt-filesystems.pod:281 ../cat/virt-ls.pod:437 ../df/virt-df.pod:185 ../edit/virt-edit.pod:173 ../fish/guestfish.pod:424 ../format/virt-format.pod:167 ../fuse/guestmount.pod:287 ../inspector/virt-inspector.pod:130 ../rescue/virt-rescue.pod:255 ../sparsify/virt-sparsify.pod:190 ../sysprep/virt-sysprep.pod:178 ../tools/virt-tar.pl:158
msgid "B<-x>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:191 ../cat/virt-cat.pod:148 ../cat/virt-filesystems.pod:283 ../cat/virt-ls.pod:439 ../df/virt-df.pod:187 ../edit/virt-edit.pod:175 ../format/virt-format.pod:169 ../inspector/virt-inspector.pod:132 ../rescue/virt-rescue.pod:257 ../sparsify/virt-sparsify.pod:192 ../sysprep/virt-sysprep.pod:180
msgid "Enable tracing of libguestfs API calls."
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:195
msgid "RECOMMENDED ALIGNMENT"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:197
msgid ""
"Operating systems older than Windows 2008 and Linux before ca.2010 place the "
"first sector of the first partition at sector 63, with a 512 byte sector "
"size.  This happens because of a historical accident.  Drives have to report "
"a cylinder / head / sector (CHS) geometry to the BIOS.  The geometry is "
"completely meaningless on modern drives, but it happens that the geometry "
"reported always has 63 sectors per track.  The operating system therefore "
"places the first partition at the start of the second \"track\", at sector "
"63."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:206
msgid ""
"When the guest OS is virtualized, the host operating system and hypervisor "
"may prefer accesses aligned to one of:"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:211
msgid "* 512 bytes"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:213
msgid ""
"if the host OS uses local storage directly on hard drive partitions, and the "
"hard drive has 512 byte physical sectors."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:216
msgid "* 4 Kbytes"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:218
msgid ""
"for local storage on new hard drives with 4Kbyte physical sectors; for "
"file-backed storage on filesystems with 4Kbyte block size; or for some types "
"of network-attached storage."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:222
msgid "* 64 Kbytes"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:224
msgid ""
"for high-end network-attached storage.  This is the optimal block size for "
"some NetApp hardware."
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:227
msgid "* 1 Mbyte"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:229
msgid "see L</1 MB PARTITION ALIGNMENT> below."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:233
msgid ""
"Partitions which are not aligned correctly to the underlying storage cause "
"extra I/O.  For example:"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:236
#, no-wrap
msgid ""
"                       sect#63\n"
"                       +--------------------------+------\n"
"                       |         guest            |\n"
"                       |    filesystem block      |\n"
" ---+------------------+------+-------------------+-----+---\n"
"    |  host block             |  host block             |\n"
"    |                         |                         |\n"
" ---+-------------------------+-------------------------+---\n"
"\n"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:245
msgid ""
"In this example, each time a 4K guest block is read, two blocks on the host "
"must be accessed (so twice as much I/O is done).  When a 4K guest block is "
"written, two host blocks must first be read, the old and new data combined, "
"and the two blocks written back (4x I/O)."
msgstr ""

#. type: =head2
#: ../align/virt-alignment-scan.pod:250
msgid "LINUX HOST BLOCK AND I/O SIZE"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:252
msgid ""
"New versions of the Linux kernel expose the physical and logical block size, "
"and minimum and recommended I/O size."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:255
msgid "For a typical consumer hard drive with 512 byte sectors:"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:257
#, no-wrap
msgid ""
" $ cat /sys/block/sda/queue/hw_sector_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/physical_block_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/logical_block_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/minimum_io_size\n"
" 512\n"
" $ cat /sys/block/sda/queue/optimal_io_size\n"
" 0\n"
"\n"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:268
msgid "For a new consumer hard drive with 4Kbyte sectors:"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:270
#, no-wrap
msgid ""
" $ cat /sys/block/sda/queue/hw_sector_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/physical_block_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/logical_block_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/minimum_io_size\n"
" 4096\n"
" $ cat /sys/block/sda/queue/optimal_io_size\n"
" 0\n"
"\n"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:281
msgid "For a NetApp LUN:"
msgstr ""

#. type: verbatim
#: ../align/virt-alignment-scan.pod:283
#, no-wrap
msgid ""
" $ cat /sys/block/sdc/queue/logical_block_size\n"
" 512\n"
" $ cat /sys/block/sdc/queue/physical_block_size\n"
" 512\n"
" $ cat /sys/block/sdc/queue/minimum_io_size\n"
" 4096\n"
" $ cat /sys/block/sdc/queue/optimal_io_size\n"
" 65536\n"
"\n"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:292
msgid ""
"The NetApp allows 512 byte accesses (but they will be very inefficient), "
"prefers a minimum 4K I/O size, but the optimal I/O size is 64K."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:296
msgid ""
"For detailed information about what these numbers mean, see "
"L<http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/newstorage-iolimits.html>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:299
msgid ""
"[Thanks to Matt Booth for providing 4K drive data.  Thanks to Mike Snitzer "
"for providing NetApp data and additional information.]"
msgstr ""

#. type: =head2
#: ../align/virt-alignment-scan.pod:302
msgid "1 MB PARTITION ALIGNMENT"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:304
msgid ""
"Microsoft picked 1 MB as the default alignment for all partitions starting "
"with Windows 2008 Server, and Linux has followed this."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:307
msgid ""
"Assuming 512 byte sectors in the guest, you will now see the first partition "
"starting at sector 2048, and subsequent partitions (if any)  will start at a "
"multiple of 2048 sectors."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:311
msgid ""
"1 MB alignment is compatible with all current alignment requirements (4K, "
"64K) and provides room for future growth in physical block sizes."
msgstr ""

#. type: =head2
#: ../align/virt-alignment-scan.pod:314
msgid "SETTING ALIGNMENT"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:316
msgid ""
"L<virt-resize(1)> can change the alignment of the partitions of some "
"guests.  Currently it can fully align all the partitions of all Windows "
"guests, and it will fix the bootloader where necessary.  For Linux guests, "
"it can align the second and subsequent partitions, so the majority of OS "
"accesses except at boot will be aligned."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:322
msgid ""
"Another way to correct partition alignment problems is to reinstall your "
"guest operating systems.  If you install operating systems from templates, "
"ensure these have correct partition alignment too."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:326
msgid ""
"For older versions of Windows, the following NetApp document contains useful "
"information: L<http://media.netapp.com/documents/tr-3747.pdf>"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:329
msgid ""
"For Red Hat Enterprise Linux E<le> 5, use a Kickstart script that contains "
"an explicit C<%pre> section that creates aligned partitions using "
"L<parted(8)>.  Do not use the Kickstart C<part> command.  The NetApp "
"document above contains an example."
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:334 ../cat/virt-cat.pod:231 ../cat/virt-filesystems.pod:377 ../cat/virt-ls.pod:483 ../df/virt-df.pod:241 ../edit/virt-edit.pod:342 ../inspector/virt-inspector.pod:366 ../rescue/virt-rescue.pod:318 ../resize/virt-resize.pod:690 ../sysprep/virt-sysprep.pod:421 ../tools/virt-list-filesystems.pl:190 ../tools/virt-list-partitions.pl:260 ../tools/virt-make-fs.pl:563 ../tools/virt-tar.pl:289 ../tools/virt-win-reg.pl:744
msgid "SHELL QUOTING"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:336 ../cat/virt-cat.pod:233 ../cat/virt-filesystems.pod:379 ../cat/virt-ls.pod:485 ../df/virt-df.pod:243 ../edit/virt-edit.pod:344 ../inspector/virt-inspector.pod:368 ../rescue/virt-rescue.pod:320 ../resize/virt-resize.pod:692 ../sysprep/virt-sysprep.pod:423 ../tools/virt-list-filesystems.pl:192 ../tools/virt-list-partitions.pl:262 ../tools/virt-make-fs.pl:565 ../tools/virt-tar.pl:291 ../tools/virt-win-reg.pl:752
msgid ""
"Libvirt guest names can contain arbitrary characters, some of which have "
"meaning to the shell such as C<#> and space.  You may need to quote or "
"escape these characters on the command line.  See the shell manual page "
"L<sh(1)> for details."
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:341 ../appliance/libguestfs-make-fixed-appliance.pod:134 ../cat/virt-cat.pod:238 ../cat/virt-filesystems.pod:384 ../cat/virt-ls.pod:490 ../df/virt-df.pod:248 ../edit/virt-edit.pod:349 ../fish/guestfish.pod:1126 ../format/virt-format.pod:173 ../fuse/guestmount.pod:312 ../inspector/virt-inspector.pod:496 ../resize/virt-resize.pod:697 ../sparsify/virt-sparsify.pod:254 ../sysprep/virt-sysprep.pod:428 ../test-tool/libguestfs-test-tool.pod:96
msgid "EXIT STATUS"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:343
msgid "This program returns:"
msgstr ""

#. type: =item
#: ../align/virt-alignment-scan.pod:347 ../align/virt-alignment-scan.pod:353 ../align/virt-alignment-scan.pod:359 ../align/virt-alignment-scan.pod:366 ../appliance/libguestfs-make-fixed-appliance.pod:32 ../appliance/libguestfs-make-fixed-appliance.pod:53 ../cat/virt-cat.pod:177 ../cat/virt-cat.pod:182 ../cat/virt-cat.pod:187 ../cat/virt-cat.pod:198 ../cat/virt-cat.pod:202 ../df/virt-df.pod:148 ../df/virt-df.pod:154 ../edit/virt-edit.pod:266 ../edit/virt-edit.pod:271 ../edit/virt-edit.pod:276 ../edit/virt-edit.pod:287 ../edit/virt-edit.pod:291 ../examples/guestfs-performance.pod:107 ../examples/guestfs-performance.pod:113 ../examples/guestfs-performance.pod:118 ../examples/guestfs-performance.pod:253 ../examples/guestfs-performance.pod:258 ../examples/guestfs-performance.pod:263 ../examples/guestfs-recipes.pod:98 ../examples/guestfs-recipes.pod:102 ../examples/guestfs-recipes.pod:106 ../examples/guestfs-recipes.pod:132 ../examples/guestfs-recipes.pod:137 ../examples/guestfs-recipes.pod:227 ../examples/guestfs-recipes.pod:231 ../examples/guestfs-recipes.pod:235 ../examples/guestfs-recipes.pod:239 ../examples/guestfs-recipes.pod:243 ../examples/guestfs-testing.pod:110 ../examples/guestfs-testing.pod:114 ../examples/guestfs-testing.pod:118 ../fish/guestfish-actions.pod:13 ../fish/guestfish-actions.pod:20 ../fish/guestfish-actions.pod:441 ../fish/guestfish-actions.pod:449 ../fish/guestfish-actions.pod:456 ../fish/guestfish-actions.pod:463 ../fish/guestfish-actions.pod:1404 ../fish/guestfish-actions.pod:1408 ../fish/guestfish-actions.pod:1412 ../fish/guestfish-actions.pod:1416 ../fish/guestfish-actions.pod:1424 ../fish/guestfish-actions.pod:1428 ../fish/guestfish-actions.pod:1432 ../fish/guestfish-actions.pod:1442 ../fish/guestfish-actions.pod:1446 ../fish/guestfish-actions.pod:1450 ../fish/guestfish-actions.pod:1540 ../fish/guestfish-actions.pod:1544 ../fish/guestfish-actions.pod:1549 ../fish/guestfish-actions.pod:1554 ../fish/guestfish-actions.pod:1596 ../fish/guestfish-actions.pod:1600 ../fish/guestfish-actions.pod:1605 ../fish/guestfish-actions.pod:1991 ../fish/guestfish-actions.pod:1998 ../fish/guestfish-actions.pod:2005 ../fish/guestfish-actions.pod:2418 ../fish/guestfish-actions.pod:2424 ../fish/guestfish-actions.pod:2432 ../fish/guestfish-actions.pod:2439 ../fish/guestfish-actions.pod:2446 ../fish/guestfish.pod:457 ../fish/guestfish.pod:461 ../fish/guestfish.pod:465 ../fish/guestfish.pod:469 ../inspector/virt-inspector.pod:514 ../inspector/virt-inspector.pod:518 ../resize/virt-resize.pod:365 ../resize/virt-resize.pod:369 ../resize/virt-resize.pod:378 ../resize/virt-resize.pod:384 ../sparsify/virt-sparsify.pod:32 ../sparsify/virt-sparsify.pod:39 ../sparsify/virt-sparsify.pod:43 ../sparsify/virt-sparsify.pod:49 ../sparsify/virt-sparsify.pod:54 ../sparsify/virt-sparsify.pod:59 ../src/guestfs-actions.pod:22 ../src/guestfs-actions.pod:29 ../src/guestfs-actions.pod:641 ../src/guestfs-actions.pod:649 ../src/guestfs-actions.pod:656 ../src/guestfs-actions.pod:663 ../src/guestfs-actions.pod:2368 ../src/guestfs-actions.pod:2372 ../src/guestfs-actions.pod:2376 ../src/guestfs-actions.pod:2380 ../src/guestfs-actions.pod:2388 ../src/guestfs-actions.pod:2392 ../src/guestfs-actions.pod:2396 ../src/guestfs-actions.pod:2406 ../src/guestfs-actions.pod:2410 ../src/guestfs-actions.pod:2414 ../src/guestfs-actions.pod:2552 ../src/guestfs-actions.pod:2556 ../src/guestfs-actions.pod:2561 ../src/guestfs-actions.pod:2566 ../src/guestfs-actions.pod:2627 ../src/guestfs-actions.pod:2631 ../src/guestfs-actions.pod:2636 ../src/guestfs-actions.pod:3194 ../src/guestfs-actions.pod:3201 ../src/guestfs-actions.pod:3208 ../src/guestfs-actions.pod:3763 ../src/guestfs-actions.pod:3769 ../src/guestfs-actions.pod:3777 ../src/guestfs-actions.pod:3784 ../src/guestfs-actions.pod:3791 ../src/guestfs.pod:390 ../src/guestfs.pod:395 ../src/guestfs.pod:400 ../src/guestfs.pod:404 ../src/guestfs.pod:409 ../src/guestfs.pod:413 ../src/guestfs.pod:418 ../src/guestfs.pod:423 ../src/guestfs.pod:1177 ../src/guestfs.pod:1181 ../src/guestfs.pod:1185 ../src/guestfs.pod:1190 ../src/guestfs.pod:1198 ../src/guestfs.pod:1217 ../src/guestfs.pod:1225 ../src/guestfs.pod:1247 ../src/guestfs.pod:1251 ../src/guestfs.pod:1255 ../src/guestfs.pod:1259 ../src/guestfs.pod:1263 ../src/guestfs.pod:1267 ../src/guestfs.pod:1757 ../src/guestfs.pod:1762 ../src/guestfs.pod:1766 ../src/guestfs.pod:1868 ../src/guestfs.pod:1873 ../src/guestfs.pod:1877 ../src/guestfs.pod:1887 ../src/guestfs.pod:2176 ../src/guestfs.pod:2181 ../src/guestfs.pod:2187 ../src/guestfs.pod:2195 ../src/guestfs.pod:2712 ../src/guestfs.pod:2718 ../src/guestfs.pod:2723 ../src/guestfs.pod:2729 ../src/guestfs.pod:3120 ../src/guestfs.pod:3125 ../src/guestfs.pod:3129 ../src/guestfs.pod:3133 ../src/guestfs.pod:3137 ../src/guestfs.pod:3151 ../src/guestfs.pod:3156 ../src/guestfs.pod:3393 ../src/guestfs.pod:3397 ../src/guestfs.pod:3401 ../src/guestfs.pod:3405 ../sysprep/virt-sysprep.pod:230 ../sysprep/virt-sysprep.pod:234 ../sysprep/virt-sysprep.pod:238 ../sysprep/virt-sysprep.pod:242 ../sysprep/virt-sysprep.pod:257 ../sysprep/virt-sysprep.pod:261 ../sysprep/virt-sysprep.pod:265 ../sysprep/virt-sysprep.pod:269 ../sysprep/virt-sysprep.pod:273 ../sysprep/virt-sysprep.pod:309 ../sysprep/virt-sysprep.pod:331 ../sysprep/virt-sysprep.pod:335 ../tools/virt-win-reg.pl:197 ../tools/virt-win-reg.pl:202 ../tools/virt-win-reg.pl:208 ../tools/virt-win-reg.pl:721 ../tools/virt-win-reg.pl:727 ../tools/virt-win-reg.pl:733
msgid "*"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:349
msgid "0"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:351
msgid "successful exit, all partitions are aligned E<ge> 64K for best performance"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:355
msgid "1"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:357
msgid "an error scanning the disk image or guest"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:361
msgid "2"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:363
msgid ""
"successful exit, some partitions have alignment E<lt> 64K which can result "
"in poor performance on high end network storage"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:368
msgid "3"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:370
msgid ""
"successful exit, some partitions have alignment E<lt> 4K which can result in "
"poor performance on most hypervisors"
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:375 ../appliance/libguestfs-make-fixed-appliance.pod:144 ../cat/virt-cat.pod:243 ../cat/virt-filesystems.pod:389 ../cat/virt-ls.pod:495 ../df/virt-df.pod:253 ../edit/virt-edit.pod:354 ../erlang/examples/guestfs-erlang.pod:97 ../examples/guestfs-examples.pod:33 ../examples/guestfs-faq.pod:530 ../examples/guestfs-performance.pod:364 ../examples/guestfs-recipes.pod:384 ../examples/guestfs-testing.pod:291 ../fish/guestfish.pod:1280 ../fish/virt-copy-in.pod:50 ../fish/virt-copy-out.pod:39 ../fish/virt-tar-in.pod:47 ../fish/virt-tar-out.pod:41 ../format/virt-format.pod:177 ../fuse/guestmount.pod:317 ../inspector/virt-inspector.pod:501 ../java/examples/guestfs-java.pod:45 ../ocaml/examples/guestfs-ocaml.pod:78 ../perl/examples/guestfs-perl.pod:39 ../python/examples/guestfs-python.pod:42 ../rescue/virt-rescue.pod:340 ../resize/virt-resize.pod:702 ../ruby/examples/guestfs-ruby.pod:36 ../sparsify/virt-sparsify.pod:286 ../src/guestfs.pod:3328 ../sysprep/virt-sysprep.pod:432 ../test-tool/libguestfs-test-tool.pod:106 ../tools/virt-list-filesystems.pl:197 ../tools/virt-list-partitions.pl:267 ../tools/virt-make-fs.pl:570 ../tools/virt-tar.pl:296 ../tools/virt-win-reg.pl:757
msgid "SEE ALSO"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:377
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-rescue(1)>, "
"L<virt-resize(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:384 ../cat/virt-cat.pod:252 ../cat/virt-filesystems.pod:400 ../cat/virt-ls.pod:507 ../df/virt-df.pod:261 ../edit/virt-edit.pod:368 ../format/virt-format.pod:187 ../rescue/virt-rescue.pod:349 ../resize/virt-resize.pod:725 ../sparsify/virt-sparsify.pod:299 ../tools/virt-list-filesystems.pl:210 ../tools/virt-list-partitions.pl:279 ../tools/virt-make-fs.pl:596 ../tools/virt-tar.pl:311 ../tools/virt-win-reg.pl:783
msgid "AUTHOR"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:386 ../cat/virt-cat.pod:254 ../cat/virt-filesystems.pod:402 ../cat/virt-ls.pod:509 ../df/virt-df.pod:263 ../edit/virt-edit.pod:370 ../format/virt-format.pod:189 ../inspector/virt-inspector.pod:516 ../rescue/virt-rescue.pod:351 ../resize/virt-resize.pod:727 ../sparsify/virt-sparsify.pod:301 ../sysprep/virt-sysprep.pod:449 ../tools/virt-list-filesystems.pl:212 ../tools/virt-list-partitions.pl:281 ../tools/virt-make-fs.pl:598 ../tools/virt-tar.pl:313 ../tools/virt-win-reg.pl:785
msgid "Richard W.M. Jones L<http://people.redhat.com/~rjones/>"
msgstr ""

#. type: =head1
#: ../align/virt-alignment-scan.pod:388 ../appliance/libguestfs-make-fixed-appliance.pod:157 ../cat/virt-cat.pod:256 ../cat/virt-filesystems.pod:404 ../cat/virt-ls.pod:511 ../df/virt-df.pod:265 ../edit/virt-edit.pod:372 ../erlang/examples/guestfs-erlang.pod:114 ../examples/guestfs-examples.pod:49 ../examples/guestfs-faq.pod:540 ../examples/guestfs-performance.pod:379 ../examples/guestfs-recipes.pod:401 ../examples/guestfs-testing.pod:302 ../fish/guestfish.pod:1312 ../fish/virt-copy-in.pod:64 ../fish/virt-copy-out.pod:53 ../fish/virt-tar-in.pod:62 ../fish/virt-tar-out.pod:55 ../format/virt-format.pod:191 ../fuse/guestmount.pod:332 ../inspector/virt-inspector.pod:524 ../java/examples/guestfs-java.pod:62 ../ocaml/examples/guestfs-ocaml.pod:95 ../perl/examples/guestfs-perl.pod:56 ../python/examples/guestfs-python.pod:58 ../rescue/virt-rescue.pod:353 ../resize/virt-resize.pod:729 ../ruby/examples/guestfs-ruby.pod:52 ../sparsify/virt-sparsify.pod:303 ../src/guestfs.pod:3416 ../sysprep/virt-sysprep.pod:453 ../test-tool/libguestfs-test-tool.pod:116 ../tools/virt-list-filesystems.pl:214 ../tools/virt-list-partitions.pl:283 ../tools/virt-make-fs.pl:600 ../tools/virt-tar.pl:315 ../tools/virt-win-reg.pl:787
msgid "COPYRIGHT"
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:390 ../sparsify/virt-sparsify.pod:305
msgid "Copyright (C) 2011 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:392 ../appliance/libguestfs-make-fixed-appliance.pod:162 ../cat/virt-cat.pod:260 ../cat/virt-filesystems.pod:408 ../cat/virt-ls.pod:515 ../df/virt-df.pod:269 ../edit/virt-edit.pod:376 ../fish/guestfish.pod:1317 ../fish/virt-copy-in.pod:69 ../fish/virt-copy-out.pod:58 ../fish/virt-tar-in.pod:67 ../fish/virt-tar-out.pod:60 ../format/virt-format.pod:195 ../fuse/guestmount.pod:337 ../inspector/virt-inspector.pod:528 ../rescue/virt-rescue.pod:357 ../resize/virt-resize.pod:733 ../sparsify/virt-sparsify.pod:307 ../sysprep/virt-sysprep.pod:459 ../test-tool/libguestfs-test-tool.pod:121 ../tools/virt-list-filesystems.pl:218 ../tools/virt-list-partitions.pl:287 ../tools/virt-make-fs.pl:604 ../tools/virt-tar.pl:319 ../tools/virt-win-reg.pl:791
msgid ""
"This program is free software; you can redistribute it and/or modify it "
"under the terms of the GNU General Public License as published by the Free "
"Software Foundation; either version 2 of the License, or (at your option) "
"any later version."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:397 ../appliance/libguestfs-make-fixed-appliance.pod:167 ../cat/virt-cat.pod:265 ../cat/virt-filesystems.pod:413 ../cat/virt-ls.pod:520 ../df/virt-df.pod:274 ../edit/virt-edit.pod:381 ../fish/guestfish.pod:1322 ../fish/virt-copy-in.pod:74 ../fish/virt-copy-out.pod:63 ../fish/virt-tar-in.pod:72 ../fish/virt-tar-out.pod:65 ../format/virt-format.pod:200 ../fuse/guestmount.pod:342 ../inspector/virt-inspector.pod:533 ../rescue/virt-rescue.pod:362 ../resize/virt-resize.pod:738 ../sparsify/virt-sparsify.pod:312 ../sysprep/virt-sysprep.pod:464 ../test-tool/libguestfs-test-tool.pod:126 ../tools/virt-list-filesystems.pl:223 ../tools/virt-list-partitions.pl:292 ../tools/virt-make-fs.pl:609 ../tools/virt-tar.pl:324 ../tools/virt-win-reg.pl:796
msgid ""
"This program is distributed in the hope that it will be useful, but WITHOUT "
"ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or "
"FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for "
"more details."
msgstr ""

#. type: textblock
#: ../align/virt-alignment-scan.pod:402 ../appliance/libguestfs-make-fixed-appliance.pod:172 ../cat/virt-cat.pod:270 ../cat/virt-filesystems.pod:418 ../cat/virt-ls.pod:525 ../df/virt-df.pod:279 ../edit/virt-edit.pod:386 ../fish/guestfish.pod:1327 ../fish/virt-copy-in.pod:79 ../fish/virt-copy-out.pod:68 ../fish/virt-tar-in.pod:77 ../fish/virt-tar-out.pod:70 ../format/virt-format.pod:205 ../fuse/guestmount.pod:347 ../inspector/virt-inspector.pod:538 ../rescue/virt-rescue.pod:367 ../resize/virt-resize.pod:743 ../sparsify/virt-sparsify.pod:317 ../sysprep/virt-sysprep.pod:469 ../test-tool/libguestfs-test-tool.pod:131 ../tools/virt-list-filesystems.pl:228 ../tools/virt-list-partitions.pl:297 ../tools/virt-make-fs.pl:614 ../tools/virt-tar.pl:329 ../tools/virt-win-reg.pl:801
msgid ""
"You should have received a copy of the GNU General Public License along with "
"this program; if not, write to the Free Software Foundation, Inc., 51 "
"Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:5
msgid "libguestfs-make-fixed-appliance - Make a \"fixed appliance\" for libguestfs"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:9
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance [--options] OUTPUTDIR\n"
"\n"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:11
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance [--options] --xz\n"
"\n"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:15
msgid ""
"libguestfs-make-fixed-appliance lets you make a pre-built binary appliance "
"for libguestfs."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:18
msgid ""
"B<Note that ordinary users should not need to run this tool>.  The only "
"reason to use it is if you want to make a self-contained libguestfs "
"appliance that can be copied to another machine or platform that doesn't "
"support L<febootstrap(8)>.  To understand why you might need to use this "
"tool, read the section L</FIXED APPLIANCE> below."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:24
msgid ""
"Instead of running this tool, you can download fixed appliances from "
"L<http://libguestfs.org/download/binaries/appliance/>.  These appliances "
"were made using this tool."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:28
msgid "There are two ways to use this tool."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:34
msgid "Specify an output directory, for example:"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:36
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
"\n"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:38
msgid ""
"The output directory is created if it does not exist.  Four files are "
"created in this directory:"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:41
#, no-wrap
msgid ""
" <OUTPUTDIR>/kernel\n"
" <OUTPUTDIR>/initrd\n"
" <OUTPUTDIR>/root\n"
" <OUTPUTDIR>/README.fixed\n"
"\n"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:46
msgid ""
"Note that C<I<OUTPUTDIR>/root> is a sparse file, so take care when copying "
"it."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:49
msgid ""
"You can then run libguestfs (possibly after copying this directory to "
"another machine) by setting the environment variable LIBGUESTFS_PATH to "
"C<OUTPUTDIR>."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:55
msgid ""
"The alternative method is to use the I<--xz> option to create a compressed "
"tarball:"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:58
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance --xz\n"
"\n"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:60
msgid "This creates a tarball in the I<current> directory called:"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:62
#, no-wrap
msgid ""
" appliance-<VERSION>.tar.xz\n"
"\n"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:64
msgid ""
"(where C<VERSION> is the version of libguestfs).  The tarball contains the "
"four files:"
msgstr ""

#. type: verbatim
#: ../appliance/libguestfs-make-fixed-appliance.pod:67
#, no-wrap
msgid ""
" appliance/kernel\n"
" appliance/initrd\n"
" appliance/root\n"
" appliance/README.fixed\n"
"\n"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:72
msgid "Note that C<appliance/root> is a sparse file, so take care when copying it."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:83 ../test-tool/libguestfs-test-tool.pod:42
msgid "Display short usage information and exit."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:89
msgid "Display the version number and exit."
msgstr ""

#. type: =item
#: ../appliance/libguestfs-make-fixed-appliance.pod:91
msgid "B<--xz>"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:93
msgid ""
"Instead of creating the appliance in an output directory, create a "
"compressed tarball of the appliance in the current directory called "
"C<appliance-I<VERSION>.tar.xz> where C<VERSION> is the version of "
"libguestfs."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:98
msgid ""
"Using I<--xz> can take some time.  If working normally, the tool is "
"completely silent when it is running."
msgstr ""

#. type: =head1
#: ../appliance/libguestfs-make-fixed-appliance.pod:103
msgid "FIXED APPLIANCE"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:105
msgid ""
"When libguestfs (or libguestfs tools) are run, they search a path looking "
"for an appliance.  The path is built into libguestfs, or can be set using "
"the C<LIBGUESTFS_PATH> environment variable."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:109
msgid ""
"Normally a supermin appliance is located on this path (see "
"L<febootstrap(8)/SUPERMIN APPLIANCE>).  libguestfs reconstructs this into a "
"full appliance by running L<febootstrap-supermin-helper(8)>."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:113
msgid ""
"However, a simpler \"fixed appliance\" can also be used.  libguestfs detects "
"this by looking for a directory on the path containing four files called "
"C<kernel>, C<initrd>, C<root> and C<README.fixed> (note the C<README.fixed> "
"file must be present as well)."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:118
msgid ""
"If the fixed appliance is found, libguestfs skips febootstrap entirely and "
"just runs qemu with the kernel, initrd and root disk from the fixed "
"appliance."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:122
msgid ""
"Thus the fixed appliance can be used when a platform or Linux distro does "
"not support febootstrap.  You build the fixed appliance on a platform that "
"does support febootstrap, and copy it over, and use that to run libguestfs."
msgstr ""

#. type: =head1
#: ../appliance/libguestfs-make-fixed-appliance.pod:127
msgid "LICENSING"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:129
msgid ""
"The fixed appliance is a complete Linux binary distro.  If you distribute "
"it, you may need to distribute corresponding source files to remain in legal "
"compliance with the licenses of the software in the appliance (such as the "
"GNU General Public License)."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:136
msgid ""
"libguestfs-make-fixed-appliance returns I<0> if the appliance was built "
"without errors."
msgstr ""

#. type: =head1
#: ../appliance/libguestfs-make-fixed-appliance.pod:139 ../edit/virt-edit.pod:329 ../fish/guestfish.pod:1131 ../rescue/virt-rescue.pod:313 ../sparsify/virt-sparsify.pod:259 ../src/guestfs.pod:3267 ../test-tool/libguestfs-test-tool.pod:101
msgid "ENVIRONMENT VARIABLES"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:141 ../test-tool/libguestfs-test-tool.pod:103
msgid ""
"For the full list of environment variables which may affect libguestfs, "
"please see the L<guestfs(3)> manual page."
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:146
msgid ""
"L<guestfs(3)>, L<febootstrap(8)>, L<febootstrap-supermin-helper(8)>, "
"L<xz(1)>, L<http://libguestfs.org/>, L<http://qemu.org/>."
msgstr ""

#. type: =head1
#: ../appliance/libguestfs-make-fixed-appliance.pod:153 ../erlang/examples/guestfs-erlang.pod:110 ../examples/guestfs-examples.pod:45 ../examples/guestfs-faq.pod:536 ../examples/guestfs-performance.pod:375 ../examples/guestfs-recipes.pod:397 ../examples/guestfs-testing.pod:298 ../fish/guestfish.pod:1308 ../fish/virt-copy-in.pod:60 ../fish/virt-copy-out.pod:49 ../fish/virt-tar-in.pod:58 ../fish/virt-tar-out.pod:51 ../fuse/guestmount.pod:328 ../inspector/virt-inspector.pod:510 ../java/examples/guestfs-java.pod:58 ../ocaml/examples/guestfs-ocaml.pod:91 ../perl/examples/guestfs-perl.pod:52 ../python/examples/guestfs-python.pod:54 ../ruby/examples/guestfs-ruby.pod:48 ../src/guestfs.pod:3412 ../sysprep/virt-sysprep.pod:447 ../test-tool/libguestfs-test-tool.pod:112
msgid "AUTHORS"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:155 ../erlang/examples/guestfs-erlang.pod:112 ../examples/guestfs-examples.pod:47 ../examples/guestfs-faq.pod:538 ../examples/guestfs-performance.pod:377 ../examples/guestfs-recipes.pod:399 ../examples/guestfs-testing.pod:300 ../fish/guestfish.pod:1310 ../fish/virt-copy-in.pod:62 ../fish/virt-copy-out.pod:51 ../fish/virt-tar-in.pod:60 ../fish/virt-tar-out.pod:53 ../fuse/guestmount.pod:330 ../java/examples/guestfs-java.pod:60 ../ocaml/examples/guestfs-ocaml.pod:93 ../perl/examples/guestfs-perl.pod:54 ../python/examples/guestfs-python.pod:56 ../ruby/examples/guestfs-ruby.pod:50 ../src/guestfs.pod:3414 ../test-tool/libguestfs-test-tool.pod:114
msgid "Richard W.M. Jones (C<rjones at redhat dot com>)"
msgstr ""

#. type: textblock
#: ../appliance/libguestfs-make-fixed-appliance.pod:159 ../fish/guestfish.pod:1314 ../fuse/guestmount.pod:334 ../src/guestfs.pod:3418 ../test-tool/libguestfs-test-tool.pod:118
msgid "Copyright (C) 2009-2012 Red Hat Inc.  L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:5
msgid "virt-cat - Display files in a virtual machine"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:9
#, no-wrap
msgid ""
" virt-cat [--options] -d domname file [file ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:11
#, no-wrap
msgid ""
" virt-cat [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:13 ../edit/virt-edit.pod:15 ../inspector/virt-inspector.pod:13
msgid "Old-style:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:15
#, no-wrap
msgid ""
" virt-cat domname file\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:17
#, no-wrap
msgid ""
" virt-cat disk.img file\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:21
msgid ""
"C<virt-cat> is a command line tool to display the contents of C<file> where "
"C<file> exists in the named virtual machine (or disk image)."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:24
msgid ""
"Multiple filenames can be given, in which case they are concatenated "
"together.  Each filename must be a full path, starting at the root directory "
"(starting with '/')."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:28
msgid ""
"C<virt-cat> can be used to quickly view a file.  To edit a file, use "
"C<virt-edit>.  For more complex cases you should look at the L<guestfish(1)> "
"tool (see L</USING GUESTFISH> below)."
msgstr ""

#. type: =head1
#: ../cat/virt-cat.pod:32 ../cat/virt-ls.pod:35 ../df/virt-df.pod:43 ../edit/virt-edit.pod:44 ../fish/guestfish.pod:41 ../fish/guestfish.pod:1063 ../fish/virt-copy-in.pod:29 ../fish/virt-copy-out.pod:21 ../fish/virt-tar-in.pod:30 ../fish/virt-tar-out.pod:24 ../fuse/guestmount.pod:39 ../resize/virt-resize.pod:27 ../sparsify/virt-sparsify.pod:70 ../tools/virt-tar.pl:50
msgid "EXAMPLES"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:34
msgid "Display C</etc/fstab> file from inside the libvirt VM called C<mydomain>:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:37
#, no-wrap
msgid ""
" virt-cat -d mydomain /etc/fstab\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:39
msgid "List syslog messages from a VM disk image file:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:41
#, no-wrap
msgid ""
" virt-cat -a disk.img /var/log/messages | tail\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:43
msgid "Find out what DHCP IP address a VM acquired:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:45
#, no-wrap
msgid ""
" virt-cat -d mydomain /var/log/messages | \\\n"
"   grep 'dhclient: bound to' | tail\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:48
msgid "Find out what packages were recently installed:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:50
#, no-wrap
msgid ""
" virt-cat -d mydomain /var/log/yum.log | tail\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:52
msgid "Find out who is logged on inside a virtual machine:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:54
#, no-wrap
msgid ""
" virt-cat -d mydomain /var/run/utmp > /tmp/utmp\n"
" who /tmp/utmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:57
msgid "or who was logged on:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:59
#, no-wrap
msgid ""
" virt-cat -d mydomain /var/log/wtmp > /tmp/wtmp\n"
" last -f /tmp/wtmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:74 ../cat/virt-filesystems.pod:103 ../cat/virt-ls.pod:273 ../df/virt-df.pod:71 ../edit/virt-edit.pod:74 ../inspector/virt-inspector.pod:66 ../rescue/virt-rescue.pod:127
msgid ""
"Add I<file> which should be a disk image from a virtual machine.  If the "
"virtual machine has multiple block devices, you must supply all of them with "
"separate I<-a> options."
msgstr ""

#. type: =item
#: ../cat/virt-cat.pod:98 ../cat/virt-filesystems.pod:148 ../cat/virt-ls.pod:314 ../edit/virt-edit.pod:112 ../fish/guestfish.pod:217 ../fuse/guestmount.pod:135 ../inspector/virt-inspector.pod:91
msgid "B<--echo-keys>"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:100
msgid ""
"When prompting for keys and passphrases, virt-cat normally turns echoing off "
"so you cannot see what you are typing.  If you are not worried about Tempest "
"attacks and there is no one else in the room you can specify this flag to "
"see what you are typing."
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:116
#, no-wrap
msgid ""
" virt-cat --format=raw -a disk.img file\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:120
#, no-wrap
msgid ""
" virt-cat --format=raw -a disk.img --format -a another.img file\n"
"\n"
msgstr ""

#. type: =item
#: ../cat/virt-cat.pod:129 ../cat/virt-filesystems.pod:200 ../cat/virt-ls.pod:361 ../edit/virt-edit.pod:156 ../fish/guestfish.pod:289 ../fuse/guestmount.pod:172 ../inspector/virt-inspector.pod:113
msgid "B<--keys-from-stdin>"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:131 ../cat/virt-filesystems.pod:202 ../cat/virt-ls.pod:363 ../edit/virt-edit.pod:158 ../fish/guestfish.pod:291 ../fuse/guestmount.pod:174 ../inspector/virt-inspector.pod:115
msgid ""
"Read key or passphrase parameters from stdin.  The default is to try to read "
"passphrases from the user by opening C</dev/tty>."
msgstr ""

#. type: =head1
#: ../cat/virt-cat.pod:152 ../cat/virt-ls.pod:443 ../edit/virt-edit.pod:179 ../inspector/virt-inspector.pod:143 ../rescue/virt-rescue.pod:261
msgid "OLD-STYLE COMMAND LINE ARGUMENTS"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:154
msgid "Previous versions of virt-cat allowed you to write either:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:156
#, no-wrap
msgid ""
" virt-cat disk.img [disk.img ...] file\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:158 ../cat/virt-ls.pod:449 ../edit/virt-edit.pod:185 ../inspector/virt-inspector.pod:149 ../rescue/virt-rescue.pod:267
msgid "or"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:160
#, no-wrap
msgid ""
" virt-cat guestname file\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:162 ../cat/virt-ls.pod:453 ../edit/virt-edit.pod:189 ../inspector/virt-inspector.pod:153 ../rescue/virt-rescue.pod:271
msgid ""
"whereas in this version you should use I<-a> or I<-d> respectively to avoid "
"the confusing case where a disk image might have the same name as a guest."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:166 ../cat/virt-ls.pod:457 ../edit/virt-edit.pod:193 ../inspector/virt-inspector.pod:157 ../rescue/virt-rescue.pod:275
msgid "For compatibility the old style is still supported."
msgstr ""

#. type: =head1
#: ../cat/virt-cat.pod:168 ../edit/virt-edit.pod:257 ../fish/guestfish.pod:870
msgid "WINDOWS PATHS"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:170
msgid ""
"C<virt-cat> has a limited ability to understand Windows drive letters and "
"paths (eg. C<E:\\foo\\bar.txt>)."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:173 ../edit/virt-edit.pod:262
msgid "If and only if the guest is running Windows then:"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:179 ../edit/virt-edit.pod:268
msgid ""
"Drive letter prefixes like C<C:> are resolved against the Windows Registry "
"to the correct filesystem."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:184 ../edit/virt-edit.pod:273
msgid ""
"Any backslash (C<\\>) characters in the path are replaced with forward "
"slashes so that libguestfs can process it."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:189
msgid ""
"The path is resolved case insensitively to locate the file that should be "
"displayed."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:194 ../edit/virt-edit.pod:283
msgid "There are some known shortcomings:"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:200 ../edit/virt-edit.pod:289
msgid "Some NTFS symbolic links may not be followed correctly."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:204 ../edit/virt-edit.pod:293
msgid "NTFS junction points that cross filesystems are not followed."
msgstr ""

#. type: =head1
#: ../cat/virt-cat.pod:208 ../edit/virt-edit.pod:297
msgid "USING GUESTFISH"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:210
msgid ""
"L<guestfish(1)> is a more powerful, lower level tool which you can use when "
"C<virt-cat> doesn't work."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:213
msgid "Using C<virt-cat> is approximately equivalent to doing:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:215
#, no-wrap
msgid ""
" guestfish --ro -i -d domname download file -\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:217
msgid ""
"where C<domname> is the name of the libvirt guest, and C<file> is the full "
"path to the file.  Note the final C<-> (meaning \"output to stdout\")."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:221
msgid ""
"The command above uses libguestfs's guest inspection feature and so does not "
"work on guests that libguestfs cannot inspect, or on things like arbitrary "
"disk images that don't contain guests.  To display a file from a disk image "
"directly, use:"
msgstr ""

#. type: verbatim
#: ../cat/virt-cat.pod:226
#, no-wrap
msgid ""
" guestfish --ro -a disk.img -m /dev/sda1 download file -\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:228
msgid ""
"where C<disk.img> is the disk image, C</dev/sda1> is the filesystem within "
"the disk image, and C<file> is the full path to the file."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:240 ../cat/virt-filesystems.pod:386 ../cat/virt-ls.pod:492 ../df/virt-df.pod:250 ../edit/virt-edit.pod:351 ../fuse/guestmount.pod:314 ../inspector/virt-inspector.pod:498 ../resize/virt-resize.pod:699 ../sparsify/virt-sparsify.pod:256
msgid "This program returns 0 if successful, or non-zero if there was an error."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:245
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-copy-out(1)>, L<virt-edit(1)>, "
"L<virt-tar-out(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../cat/virt-cat.pod:258 ../inspector/virt-inspector.pod:526 ../resize/virt-resize.pod:731 ../tools/virt-make-fs.pl:602
msgid "Copyright (C) 2010-2012 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:5
msgid ""
"virt-filesystems - List filesystems, partitions, block devices, LVM in a "
"virtual machine or disk image"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:9
#, no-wrap
msgid ""
" virt-filesystems [--options] -d domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:11
#, no-wrap
msgid ""
" virt-filesystems [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:15
msgid ""
"This tool allows you to discover filesystems, partitions, logical volumes, "
"and their sizes in a disk image or virtual machine.  It is a replacement for "
"L<virt-list-filesystems(1)> and L<virt-list-partitions(1)>."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:20
msgid ""
"One use for this tool is from shell scripts to iterate over all filesystems "
"from a disk image:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:23
#, no-wrap
msgid ""
" for fs in $(virt-filesystems -a disk.img); do\n"
"   # ...\n"
" done\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:27
msgid ""
"Another use is to list partitions before using another tool to modify those "
"partitions (such as L<virt-resize(1)>).  If you are curious about what an "
"unknown disk image contains, use this tool along with L<virt-inspector(1)>."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:32
msgid ""
"Various command line options control what this program displays.  You need "
"to give either I<-a> or I<-d> options to specify the disk image or libvirt "
"guest respectively.  If you just specify that then the program shows "
"filesystems found, one per line, like this:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:37
#, no-wrap
msgid ""
" $ virt-filesystems -a disk.img\n"
" /dev/sda1\n"
" /dev/vg_guest/lv_root\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:41
msgid "If you add I<-l> or I<--long> then the output includes extra information:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:44
#, no-wrap
msgid ""
" $ virt-filesystems -a disk.img -l\n"
" Name                   Type         VFS   Label  Size\n"
" /dev/sda1              filesystem   ext4  boot   524288000\n"
" /dev/vg_guest/lv_root  filesystem   ext4  root   10212081664\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:49
msgid ""
"If you add I<--extra> then non-mountable (swap, unknown) filesystems are "
"shown as well:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:52
#, no-wrap
msgid ""
" $ virt-filesystems -a disk.img --extra\n"
" /dev/sda1\n"
" /dev/vg_guest/lv_root\n"
" /dev/vg_guest/lv_swap\n"
" /dev/vg_guest/lv_data\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:58
msgid "If you add I<--partitions> then partitions are shown instead of filesystems:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:60
#, no-wrap
msgid ""
" $ virt-filesystems -a disk.img --partitions\n"
" /dev/sda1\n"
" /dev/sda2\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:64
msgid ""
"Similarly you can use I<--logical-volumes>, I<--volume-groups>, "
"I<--physical-volumes>, I<--block-devices> to list those items."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:67
msgid ""
"You can use these options in combination as well (if you want a combination "
"including filesystems, you have to add I<--filesystems>).  Notice that some "
"items fall into several categories (eg. C</dev/sda1> might be both a "
"partition and a filesystem).  These items are listed several times.  To get "
"a list which includes absolutely everything that virt-filesystems knows "
"about, use the I<--all> option."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:74
msgid ""
"UUIDs (because they are quite long) are not shown by default.  Add the "
"I<--uuid> option to display device and filesystem UUIDs in the long output."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:78
msgid ""
"I<--all --long --uuid> is a useful combination to display all possible "
"information about everything."
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:81
#, no-wrap
msgid ""
" $ virt-filesystems -a win.img --all --long --uuid -h\n"
" Name      Type       VFS  Label           Size Parent   UUID\n"
" /dev/sda1 filesystem ntfs System Reserved 100M -        F81C92571C92112C\n"
" /dev/sda2 filesystem ntfs -               20G  -        F2E8996AE8992E3B\n"
" /dev/sda1 partition  -    -               100M /dev/sda -\n"
" /dev/sda2 partition  -    -               20G  /dev/sda -\n"
" /dev/sda  device     -    -               20G  -        -\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:89
msgid "For machine-readable output, use I<--csv> to get Comma-Separated Values."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:110 ../tools/virt-list-filesystems.pl:123
msgid "B<--all>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:112
msgid ""
"Display everything.  This is currently the same as specifying these options: "
"I<--filesystems>, I<--extra>, I<--partitions>, I<--block-devices>, "
"I<--logical-volumes>, I<--volume-groups>, I<--physical-volumes>.  (More may "
"be added to this list in future)."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:117
msgid "See also I<--long>."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:119
msgid "B<--blkdevs>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:121
msgid "B<--block-devices>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:123
msgid "Display block devices."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:135 ../cat/virt-ls.pod:301 ../df/virt-df.pod:88
msgid "B<--csv>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:137 ../cat/virt-ls.pod:303 ../df/virt-df.pod:90
msgid ""
"Write out the results in CSV format (comma-separated values).  This format "
"can be imported easily into databases and spreadsheets, but read L</NOTE "
"ABOUT CSV FORMAT> below."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:150
msgid ""
"When prompting for keys and passphrases, virt-filesystems normally turns "
"echoing off so you cannot see what you are typing.  If you are not worried "
"about Tempest attacks and there is no one else in the room you can specify "
"this flag to see what you are typing."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:155
msgid "B<--extra>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:157
msgid ""
"This causes filesystems that are not ordinary, mountable filesystems to be "
"displayed.  This category includes swapspace, and filesystems that are empty "
"or contain unknown data."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:161
msgid "This option implies I<--filesystems>."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:163
msgid "B<--filesystems>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:165
msgid ""
"Display mountable filesystems.  If no display option was selected then this "
"option is implied."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:168
msgid "With I<--extra>, non-mountable filesystems are shown too."
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:181
#, no-wrap
msgid ""
" virt-filesystems --format=raw -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:185
#, no-wrap
msgid ""
" virt-filesystems --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:194 ../cat/virt-ls.pod:352 ../df/virt-df.pod:125 ../fish/guestfish.pod:156 ../tools/virt-list-partitions.pl:111
msgid "B<-h>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:196 ../cat/virt-ls.pod:354 ../df/virt-df.pod:127 ../tools/virt-list-partitions.pl:113
msgid "B<--human-readable>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:198
msgid "In I<--long> mode, display sizes in human-readable format."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:205 ../cat/virt-ls.pod:366 ../tools/virt-list-filesystems.pl:110 ../tools/virt-list-partitions.pl:121
msgid "B<-l>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:207 ../cat/virt-ls.pod:368 ../tools/virt-list-filesystems.pl:112 ../tools/virt-list-partitions.pl:123
msgid "B<--long>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:209
msgid "Display extra columns of data (\"long format\")."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:211
msgid "A title row is added unless you also specify I<--no-title>."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:213
msgid ""
"The extra columns displayed depend on what output you select, and the "
"ordering of columns may change in future versions.  Use the title row, "
"I<--csv> output and/or L<csvtool(1)> to match columns to data in external "
"programs."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:218
msgid ""
"Use I<-h> if you want sizes to be displayed in human-readable format.  The "
"default is to show raw numbers of I<bytes>."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:221
msgid "Use I<--uuid> to display UUIDs too."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:223
msgid "B<--lvs>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:225
msgid "B<--logvols>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:227
msgid "B<--logical-volumes>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:229
msgid ""
"Display LVM logical volumes.  In this mode, these are displayed irrespective "
"of whether the LVs contain filesystems."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:232
msgid "B<--no-title>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:234
msgid "In I<--long> mode, don't add a title row."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:236
msgid ""
"Note that the order of the columns is not fixed, and may change in future "
"versions of virt-filesystems, so using this option may give you unexpected "
"surprises."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:240
msgid "B<--parts>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:242
msgid "B<--partitions>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:244
msgid ""
"Display partitions.  In this mode, these are displayed irrespective of "
"whether the partitions contain filesystems."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:247
msgid "B<--pvs>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:249
msgid "B<--physvols>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:251
msgid "B<--physical-volumes>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:253
msgid "Display LVM physical volumes."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:257
msgid "B<--uuids>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:259
msgid "In I<--long> mode, display UUIDs as well."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:273
msgid "B<--vgs>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:275
msgid "B<--volgroups>"
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:277
msgid "B<--volume-groups>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:279
msgid "Display LVM volume groups."
msgstr ""

#. type: =head1
#: ../cat/virt-filesystems.pod:287
msgid "COLUMNS"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:289
msgid ""
"Note that columns in the output are subject to reordering and change in "
"future versions of this tool."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:294
msgid "B<Name>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:296
msgid "The filesystem, partition, block device or LVM name."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:298
msgid ""
"For device and partition names these are displayed as canonical libguestfs "
"names, so that for example C</dev/sda2> is the second partition on the first "
"device."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:302
msgid ""
"If the I<--long> option is B<not> specified, then only the name column is "
"shown in the output."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:305
msgid "B<Type>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:307
msgid "The object type, for example C<filesystem>, C<lv>, C<device> etc."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:309
msgid "B<VFS>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:311
msgid ""
"If there is a filesystem, then this column displays the filesystem type if "
"one could be detected, eg. C<ext4>."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:314
msgid "B<Label>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:316
msgid ""
"If the object has a label (used for identifying and mounting filesystems) "
"then this column contains the label."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:319
msgid "B<MBR>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:321
msgid ""
"The partition type byte, displayed as a two digit hexadecimal number.  A "
"comprehensive list of partition types can be found here: "
"L<http://www.win.tue.nl/~aeb/partitions/partition_types-1.html>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:325
msgid "This is only applicable for DOS (MBR) partitions."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:327
msgid "B<Size>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:329
msgid ""
"The size of the object in bytes.  If the I<--human> option is used then the "
"size is displayed in a human-readable form."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:332
msgid "B<Parent>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:334
msgid "The parent column records the parent relationship between objects."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:336
msgid ""
"For example, if the object is a partition, then this column contains the "
"name of the containing device.  If the object is a logical volume, then this "
"column is the name of the volume group."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:340
msgid ""
"If there is more than one parent, then this column is (internal to the "
"column) a comma-separated list, eg. C</dev/sda,/dev/sdb>."
msgstr ""

#. type: =item
#: ../cat/virt-filesystems.pod:343
msgid "B<UUID>"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:345
msgid ""
"If the object has a UUID (used for identifying and mounting filesystems and "
"block devices) then this column contains the UUID as a string."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:349
msgid "The UUID is only displayed if the I<--uuid> option is given."
msgstr ""

#. type: =head1
#: ../cat/virt-filesystems.pod:353 ../cat/virt-ls.pod:459 ../df/virt-df.pod:217
msgid "NOTE ABOUT CSV FORMAT"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:355 ../cat/virt-ls.pod:461 ../df/virt-df.pod:219
msgid ""
"Comma-separated values (CSV) is a deceptive format.  It I<seems> like it "
"should be easy to parse, but it is definitely not easy to parse."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:358 ../cat/virt-ls.pod:464 ../df/virt-df.pod:222
msgid ""
"Myth: Just split fields at commas.  Reality: This does I<not> work "
"reliably.  This example has two columns:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:361 ../cat/virt-ls.pod:467 ../df/virt-df.pod:225
#, no-wrap
msgid ""
" \"foo,bar\",baz\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:363 ../cat/virt-ls.pod:469 ../df/virt-df.pod:227
msgid ""
"Myth: Read the file one line at a time.  Reality: This does I<not> work "
"reliably.  This example has one row:"
msgstr ""

#. type: verbatim
#: ../cat/virt-filesystems.pod:366 ../cat/virt-ls.pod:472 ../df/virt-df.pod:230
#, no-wrap
msgid ""
" \"foo\n"
" bar\",baz\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:369 ../cat/virt-ls.pod:475 ../df/virt-df.pod:233
msgid ""
"For shell scripts, use C<csvtool> (L<http://merjis.com/developers/csv> also "
"packaged in major Linux distributions)."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:372 ../cat/virt-ls.pod:478 ../df/virt-df.pod:236
msgid ""
"For other languages, use a CSV processing library (eg. C<Text::CSV> for Perl "
"or Python's built-in csv library)."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:375 ../cat/virt-ls.pod:481 ../df/virt-df.pod:239
msgid "Most spreadsheets and databases can import CSV directly."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:391
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-df(1)>, "
"L<virt-list-filesystems(1)>, L<virt-list-partitions(1)>, L<csvtool(1)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../cat/virt-filesystems.pod:406 ../tools/virt-win-reg.pl:789
msgid "Copyright (C) 2010 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:5
msgid "virt-ls - List files in a virtual machine"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:9
#, no-wrap
msgid ""
" virt-ls [--options] -d domname directory [directory ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:11
#, no-wrap
msgid ""
" virt-ls [--options] -a disk.img [-a disk.img ...] directory [directory "
"...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:13 ../df/virt-df.pod:15 ../rescue/virt-rescue.pod:15
msgid "Old style:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:15
#, no-wrap
msgid ""
" virt-ls [--options] domname directory\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:17
#, no-wrap
msgid ""
" virt-ls [--options] disk.img [disk.img ...] directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:21
msgid ""
"C<virt-ls> lists filenames, file sizes, checksums, extended attributes and "
"more from a virtual machine or disk image."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:24
msgid ""
"Multiple directory names can be given, in which case the output from each is "
"concatenated."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:27
msgid ""
"To list directories from a libvirt guest use the I<-d> option to specify the "
"name of the guest.  For a disk image, use the I<-a> option."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:31
msgid ""
"C<virt-ls> can do many simple file listings.  For more complicated cases you "
"may need to use L<guestfish(1)>, or write a program directly to the "
"L<guestfs(3)> API."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:37
msgid "Get a list of all files and directories in a virtual machine:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:39
#, no-wrap
msgid ""
" virt-ls -R -d guest /\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:41 ../examples/guestfs-testing.pod:182
msgid "List all setuid or setgid programs in a Linux virtual machine:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:43
#, no-wrap
msgid ""
" virt-ls -lR -d guest / | grep '^- [42]'\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:45 ../examples/guestfs-testing.pod:186
msgid "List all public-writable directories in a Linux virtual machine:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:47
#, no-wrap
msgid ""
" virt-ls -lR -d guest / | grep '^d ...7'\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:49 ../examples/guestfs-testing.pod:190
msgid "List all Unix domain sockets in a Linux virtual machine:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:51
#, no-wrap
msgid ""
" virt-ls -lR -d guest / | grep '^s'\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:53 ../examples/guestfs-testing.pod:194
msgid "List all regular files with filenames ending in '.png':"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:55
#, no-wrap
msgid ""
" virt-ls -lR -d guest / | grep -i '^-.*\\.png$'\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:57
msgid "To display files larger than 10MB in home directories:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:59
#, no-wrap
msgid ""
" virt-ls -lR -d guest /home | awk '$3 > 10*1024*1024'\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:61 ../examples/guestfs-testing.pod:202
msgid "Find everything modified in the last 7 days:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:63
#, no-wrap
msgid ""
" virt-ls -lR -d guest --time-days / | awk '$6 <= 7'\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:65 ../examples/guestfs-testing.pod:206
msgid "Find regular files modified in the last 24 hours:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:67
#, no-wrap
msgid ""
" virt-ls -lR -d guest --time-days / | grep '^-' | awk '$6 < 1'\n"
"\n"
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:69
msgid "DIFFERENCES IN SNAPSHOTS AND BACKING FILES"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:71
msgid ""
"Find the differences between files in a guest and an earlier snapshot of the "
"same guest."
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:74
#, no-wrap
msgid ""
" virt-ls -lR -a snapshot.img / --uids --time-t > old\n"
" virt-ls -lR -a current.img / --uids --time-t > new\n"
" diff -u old new | less\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:78
msgid ""
"The commands above won't find files where the content has changed but the "
"metadata (eg. file size and modification date) is the same.  To do that, you "
"need to add the I<--checksum> parameter to both C<virt-ls> commands.  "
"I<--checksum> can be quite slow since it has to read and compute a checksum "
"of every regular file in the virtual machine."
msgstr ""

#. type: =head1
#: ../cat/virt-ls.pod:84
msgid "OUTPUT MODES"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:86
msgid ""
"C<virt-ls> has four output modes, controlled by different combinations of "
"the I<-l> and I<-R> options."
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:89
msgid "SIMPLE LISTING"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:91
msgid "A simple listing is like the ordinary L<ls(1)> command:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:93
#, no-wrap
msgid ""
" $ virt-ls -d guest /\n"
" bin\n"
" boot\n"
" [etc.]\n"
"\n"
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:98
msgid "LONG LISTING"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:100
msgid ""
"With the I<-l> (I<--long>) option, the output is like the C<ls -l> command "
"(more specifically, like the C<guestfs_ll> function)."
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:103
#, no-wrap
msgid ""
" $ virt-ls -l -d guest /\n"
" total 204\n"
" dr-xr-xr-x.   2 root root   4096 2009-08-25 19:06 bin\n"
" dr-xr-xr-x.   5 root root   3072 2009-08-25 19:06 boot\n"
" [etc.]\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:109
msgid ""
"Note that while this is useful for displaying a directory, do not try "
"parsing this output in another program.  Use L</RECURSIVE LONG LISTING> "
"instead."
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:113
msgid "RECURSIVE LISTING"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:115
msgid ""
"With the I<-R> (I<--recursive>) option, C<virt-ls> lists the names of files "
"and directories recursively:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:118
#, no-wrap
msgid ""
" $ virt-ls -R -d guest /tmp\n"
" foo\n"
" foo/bar\n"
" [etc.]\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:123
msgid ""
"To generate this output, C<virt-ls> runs the C<guestfs_find0> function and "
"converts C<\\0> characters to C<\\n>."
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:126
msgid "RECURSIVE LONG LISTING"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:128
msgid ""
"Using I<-lR> options together changes the output to display directories "
"recursively, with file stats, and optionally other features such as "
"checksums and extended attributes."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:132
msgid ""
"Most of the interesting features of C<virt-ls> are only available when using "
"I<-lR> mode."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:135
msgid ""
"The fields are normally space-separated.  Filenames are B<not> quoted, so "
"you cannot use the output in another program (because filenames can contain "
"spaces and other unsafe characters).  If the guest was untrusted and someone "
"knew you were using C<virt-ls> to analyze the guest, they could play tricks "
"on you by creating filenames with embedded newline characters.  To B<safely> "
"parse the output in another program, use the I<--csv> (Comma-Separated "
"Values) option."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:143
msgid ""
"Note that this output format is completely unrelated to the C<ls -lR> "
"command."
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:146
#, no-wrap
msgid ""
" $ virt-ls -lR -d guest /bin\n"
" d 0555       4096 /bin\n"
" - 0755        123 /bin/alsaunmute\n"
" - 0755      28328 /bin/arch\n"
" l 0777          4 /bin/awk -> gawk\n"
" - 0755      27216 /bin/basename\n"
" - 0755     943360 /bin/bash\n"
" [etc.]\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:155
msgid "These basic fields are always shown:"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:159
msgid "type"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:161
msgid ""
"The file type, one of: C<-> (regular file), C<d> (directory), C<c> "
"(character device), C<b> (block device), C<p> (named pipe), C<l> (symbolic "
"link), C<s> (socket) or C<u> (unknown)."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:171
msgid "permissions"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:173
msgid "The Unix permissions, displayed as a 4 digit octal number."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:175
msgid "size"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:177
msgid ""
"The size of the file.  This is shown in bytes unless I<-h> or "
"I<--human-readable> option is given, in which case this is shown as a "
"human-readable number."
msgstr ""

#. type: =head2
#: ../cat/virt-ls.pod:181 ../fish/guestfish-actions.pod:5029
msgid "path"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:183
msgid "The full path of the file or directory."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:185
msgid "link"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:187
msgid "For symbolic links only, the link target."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:191
msgid ""
"In I<-lR> mode, additional command line options enable the display of more "
"fields."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:194
msgid ""
"With the I<--uids> flag, these additional fields are displayed before the "
"path:"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:199
msgid "uid"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:201
msgid "gid"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:203
msgid ""
"The UID and GID of the owner of the file (displayed numerically).  Note "
"these only make sense in the context of a Unix-like guest."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:208
msgid "With the I<--times> flag, these additional fields are displayed:"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:212
msgid "atime"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:214
msgid "The time of last access."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:216
msgid "mtime"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:218
msgid "The time of last modification."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:220
msgid "ctime"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:222
msgid "The time of last status change."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:226
msgid ""
"The time fields are displayed as string dates and times, unless one of the "
"I<--time-t>, I<--time-relative> or I<--time-days> flags is given."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:229
msgid "With the I<--extra-stats> flag, these additional fields are displayed:"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:233
msgid "device"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:235
msgid ""
"The device containing the file (displayed as major:minor).  This may not "
"match devices as known to the guest."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:238
msgid "inode"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:240
msgid "The inode number."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:242
msgid "nlink"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:244
msgid "The number of hard links."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:246
msgid "rdev"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:248
msgid "For block and char special files, the device (displayed as major:minor)."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:251
msgid "blocks"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:253
msgid "The number of 512 byte blocks allocated to the file."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:257
msgid ""
"With the I<--checksum> flag, the checksum of the file contents is shown "
"(only for regular files).  Computing file checksums can take a considerable "
"amount of time."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:280
msgid "B<--checksum>"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:282
msgid "B<--checksum=crc|md5|sha1|sha224|sha256|sha384|sha512>"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:284
msgid ""
"Display checksum over file contents for regular files.  With no argument, "
"this defaults to using I<md5>.  Using an argument, you can select the "
"checksum type to use."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:288 ../cat/virt-ls.pod:325 ../cat/virt-ls.pod:358 ../cat/virt-ls.pod:391 ../cat/virt-ls.pod:401 ../cat/virt-ls.pod:408 ../cat/virt-ls.pod:415 ../cat/virt-ls.pod:422
msgid ""
"This option only has effect in I<-lR> output mode.  See L</RECURSIVE LONG "
"LISTING> above."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:316
msgid ""
"When prompting for keys and passphrases, virt-ls normally turns echoing off "
"so you cannot see what you are typing.  If you are not worried about Tempest "
"attacks and there is no one else in the room you can specify this flag to "
"see what you are typing."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:321
msgid "B<--extra-stats>"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:323
msgid "Display extra stats."
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:339
#, no-wrap
msgid ""
" virt-ls --format=raw -a disk.img /dir\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:343
#, no-wrap
msgid ""
" virt-ls --format=raw -a disk.img --format -a another.img /dir\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:356
msgid "Display file sizes in human-readable format."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:370
msgid "B<-R>"
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:372
msgid "B<--recursive>"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:374
msgid ""
"Select the mode.  With neither of these options, C<virt-ls> produces a "
"simple, flat list of the files in the named directory.  See L</SIMPLE "
"LISTING>."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:378
msgid ""
"C<virt-ls -l> produces a \"long listing\", which shows more detail.  See "
"L</LONG LISTING>."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:381
msgid ""
"C<virt-ls -R> produces a recursive list of files starting at the named "
"directory.  See L</RECURSIVE LISTING>."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:384
msgid ""
"C<virt-ls -lR> produces a recursive long listing which can be more easily "
"parsed.  See L</RECURSIVE LONG LISTING>."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:387
msgid "B<--times>"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:389
msgid "Display time fields."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:394
msgid "B<--time-days>"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:396
msgid "Display time fields as days before now (negative if in the future)."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:398
msgid ""
"Note that C<0> in output means \"up to 1 day before now\", or that the age "
"of the file is between 0 and 86399 seconds."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:404
msgid "B<--time-relative>"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:406
msgid "Display time fields as seconds before now (negative if in the future)."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:411
msgid "B<--time-t>"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:413
msgid "Display time fields as seconds since the Unix epoch."
msgstr ""

#. type: =item
#: ../cat/virt-ls.pod:418
msgid "B<--uids>"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:420
msgid "Display UID and GID fields."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:445
msgid "Previous versions of virt-ls allowed you to write either:"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:447
#, no-wrap
msgid ""
" virt-ls disk.img [disk.img ...] /dir\n"
"\n"
msgstr ""

#. type: verbatim
#: ../cat/virt-ls.pod:451
#, no-wrap
msgid ""
" virt-ls guestname /dir\n"
"\n"
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:497
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>, "
"L<virt-tar-out(1)>, L<Sys::Guestfs(3)>, L<Sys::Guestfs::Lib(3)>, "
"L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../cat/virt-ls.pod:513 ../df/virt-df.pod:267 ../edit/virt-edit.pod:374 ../rescue/virt-rescue.pod:355 ../tools/virt-list-partitions.pl:285
msgid "Copyright (C) 2009-2012 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:5
msgid "virt-df - Display free space on virtual filesystems"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:9
#, no-wrap
msgid ""
" virt-df [--options]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:11
#, no-wrap
msgid ""
" virt-df [--options] -d domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:13
#, no-wrap
msgid ""
" virt-df [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:17
#, no-wrap
msgid ""
" virt-df [--options] domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:19
#, no-wrap
msgid ""
" virt-df [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:23
msgid ""
"C<virt-df> is a command line tool to display free space on virtual machine "
"filesystems.  Unlike other tools, it doesn't just display the size of disk "
"allocated to a virtual machine, but can look inside disk images to see how "
"much space is really being used."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:28
msgid ""
"If used without any I<-a> or I<-d> arguments, C<virt-df> checks with libvirt "
"to get a list of all active and inactive guests, and performs a C<df>-type "
"operation on each one in turn, printing out the results."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:32
msgid ""
"If any I<-a> or I<-d> arguments are specified, C<virt-df> performs a "
"C<df>-type operation on either the single named libvirt domain, or on the "
"disk image(s) listed on the command line (which must all belong to a single "
"VM).  In this mode (with arguments), C<virt-df> will I<only work for a "
"single guest>.  If you want to run on multiple guests, then you have to "
"invoke C<virt-df> multiple times."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:39
msgid ""
"Use the I<--csv> option to get a format which can be easily parsed by other "
"programs.  Other options are similar to the standard L<df(1)> command."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:45
msgid ""
"Show disk usage for a single libvirt guest called C<F14x64>.  Make the "
"output human-readable:"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:48
#, no-wrap
msgid ""
" # virt-df -d F14x64 -h\n"
" Filesystem                       Size     Used  Available  Use%\n"
" F14x64:/dev/sda1                 484M      66M       393M   14%\n"
" F14x64:/dev/vg_f13x64/lv_root    7.4G     3.4G       4.0G   46%\n"
"\n"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:53
msgid "Show disk usage for a disk image file called C<test.img>:"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:55
#, no-wrap
msgid ""
" $ virt-df -a test1.img\n"
" Filesystem                  1K-blocks     Used  Available  Use%\n"
" test1.img:/dev/sda1             99099     1551      92432    2%\n"
"\n"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:112
#, no-wrap
msgid ""
" virt-df --format=raw -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:116
#, no-wrap
msgid ""
" virt-df --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:129
msgid "Print sizes in human-readable format."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:131
msgid "You are not allowed to use I<-h> and I<--csv> at the same time."
msgstr ""

#. type: =item
#: ../df/virt-df.pod:133 ../fish/guestfish.pod:258 ../fuse/guestmount.pod:164
msgid "B<-i>"
msgstr ""

#. type: =item
#: ../df/virt-df.pod:135
msgid "B<--inodes>"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:137
msgid "Print inodes instead of blocks."
msgstr ""

#. type: =item
#: ../df/virt-df.pod:139
msgid "B<--one-per-guest>"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:141
msgid ""
"Run one libguestfs appliance per guest.  Normally C<virt-df> will add the "
"disks from several guests to a single libguestfs appliance."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:144
msgid "You might use this option in the following circumstances:"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:150
msgid ""
"If you think an untrusted guest might actively try to exploit the libguestfs "
"appliance kernel, then this prevents one guest from interfering with the "
"stats printed for another guest."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:156
msgid ""
"If the kernel has a bug which stops it from accessing a filesystem in one "
"guest (see for example RHBZ#635373) then this allows libguestfs to continue "
"and report stats for further guests."
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:169
msgid ""
"Note that only domains that we fetch from libvirt come with UUIDs.  For disk "
"images, we still print the disk image name even when this option is "
"specified."
msgstr ""

#. type: =head1
#: ../df/virt-df.pod:191
msgid "STATVFS NUMBERS"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:193
msgid ""
"C<virt-df> (and L<df(1)>) get information by issuing a L<statvfs(3)> system "
"call.  You can get the same information directly, either from the host "
"(using libguestfs) or inside the guest:"
msgstr ""

#. type: =item
#: ../df/virt-df.pod:199
msgid "From the host"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:201 ../df/virt-df.pod:209
msgid "Run this command:"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:203
#, no-wrap
msgid ""
" guestfish --ro -d GuestName -i statvfs /\n"
"\n"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:205 ../df/virt-df.pod:213
msgid "(change C</> to see stats for other filesystems)."
msgstr ""

#. type: =item
#: ../df/virt-df.pod:207
msgid "From inside the guest"
msgstr ""

#. type: verbatim
#: ../df/virt-df.pod:211
#, no-wrap
msgid ""
" python -c 'import os; s = os.statvfs (\"/\"); print s'\n"
"\n"
msgstr ""

#. type: textblock
#: ../df/virt-df.pod:255
msgid ""
"L<df(1)>, L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:5
msgid "virt-edit - Edit a file in a virtual machine"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:9
#, no-wrap
msgid ""
" virt-edit [--options] -d domname file [file ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:11
#, no-wrap
msgid ""
" virt-edit [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:13
#, no-wrap
msgid ""
" virt-edit [-d domname|-a disk.img] file -e 'expr'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:17
#, no-wrap
msgid ""
" virt-edit domname file\n"
"\n"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:19 ../edit/virt-edit.pod:183
#, no-wrap
msgid ""
" virt-edit disk.img [disk.img ...] file\n"
"\n"
msgstr ""

#. type: =head1
#: ../edit/virt-edit.pod:21 ../fish/guestfish.pod:23 ../fish/virt-copy-in.pod:13 ../fish/virt-tar-in.pod:15 ../fuse/guestmount.pod:15 ../rescue/virt-rescue.pod:21 ../tools/virt-tar.pl:64 ../tools/virt-win-reg.pl:51
msgid "WARNING"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:23
msgid ""
"You must I<not> use C<virt-edit> on live virtual machines.  If you do this, "
"you risk disk corruption in the VM.  C<virt-edit> tries to stop you from "
"doing this, but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:29
msgid ""
"C<virt-edit> is a command line tool to edit C<file> where each C<file> "
"exists in the named virtual machine (or disk image)."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:32
msgid ""
"Multiple filenames can be given, in which case they are each edited in "
"turn.  Each filename must be a full path, starting at the root directory "
"(starting with '/')."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:36
msgid "If you want to just view a file, use L<virt-cat(1)>."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:38
msgid ""
"For more complex cases you should look at the L<guestfish(1)> tool (see "
"L</USING GUESTFISH> below)."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:41
msgid ""
"C<virt-edit> cannot be used to create a new file.  L<guestfish(1)> can do "
"that and much more."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:46
msgid "Edit the named files interactively:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:48
#, no-wrap
msgid ""
" virt-edit -d mydomain /boot/grub/grub.conf\n"
"\n"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:50
#, no-wrap
msgid ""
" virt-edit -d mydomain /etc/passwd\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:52
msgid "For Windows guests, some Windows paths are understood:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:54
#, no-wrap
msgid ""
" virt-edit -d mywindomain 'c:\\autoexec.bat'\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:56
msgid ""
"If Perl is installed, you can also edit files non-interactively (see "
"L</NON-INTERACTIVE EDITING> below).  To change the init default level to 5:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:60
#, no-wrap
msgid ""
" virt-edit -d mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'\n"
"\n"
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:81
msgid "B<-b> extension"
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:83
msgid "B<--backup> extension"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:85
msgid ""
"Create a backup of the original file I<in the guest disk image>.  The backup "
"has the original filename with C<extension> added."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:88
msgid ""
"Usually the first character of C<extension> would be a dot C<.> so you would "
"write:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:91
#, no-wrap
msgid ""
" virt-edit -b .orig [etc]\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:93
msgid "By default, no backup file is made."
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:95 ../fish/guestfish.pod:181 ../fuse/guestmount.pod:105 ../inspector/virt-inspector.pod:73 ../tools/virt-list-filesystems.pl:79 ../tools/virt-list-partitions.pl:80 ../tools/virt-tar.pl:127 ../tools/virt-win-reg.pl:128
msgid "B<-c URI>"
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:97 ../fish/guestfish.pod:183 ../fuse/guestmount.pod:107 ../inspector/virt-inspector.pod:75 ../tools/virt-list-filesystems.pl:81 ../tools/virt-list-partitions.pl:82 ../tools/virt-tar.pl:129 ../tools/virt-win-reg.pl:130
msgid "B<--connect URI>"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:102 ../tools/virt-list-filesystems.pl:86 ../tools/virt-list-partitions.pl:87 ../tools/virt-tar.pl:134 ../tools/virt-win-reg.pl:135
msgid ""
"If you specify guest block devices directly, then libvirt is not used at "
"all."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:114
msgid ""
"When prompting for keys and passphrases, virt-edit normally turns echoing "
"off so you cannot see what you are typing.  If you are not worried about "
"Tempest attacks and there is no one else in the room you can specify this "
"flag to see what you are typing."
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:119
msgid "B<-e> EXPR"
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:121
msgid "B<--expr> EXPR"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:123
msgid ""
"Instead of launching the external editor, non-interactively apply the Perl "
"expression C<EXPR> to each line in the file.  See L</NON-INTERACTIVE "
"EDITING> below."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:127
msgid ""
"Be careful to properly quote the expression to prevent it from being altered "
"by the shell."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:130
msgid "Note that this option is only available when Perl 5 is installed."
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:132
msgid "B<--format> raw|qcow2|..."
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:143
#, no-wrap
msgid ""
" virt-edit --format=raw -a disk.img file\n"
"\n"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:147
#, no-wrap
msgid ""
" virt-edit --format=raw -a disk.img --format -a another.img file\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:181
msgid "Previous versions of virt-edit allowed you to write either:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:187
#, no-wrap
msgid ""
" virt-edit guestname file\n"
"\n"
msgstr ""

#. type: =head1
#: ../edit/virt-edit.pod:195
msgid "NON-INTERACTIVE EDITING"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:197
msgid ""
"C<virt-edit> normally calls out to C<$EDITOR> (or vi) so the system "
"administrator can interactively edit the file."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:200
msgid ""
"There are two ways also to use C<virt-edit> from scripts in order to make "
"automated edits to files.  (Note that although you I<can> use C<virt-edit> "
"like this, it's less error-prone to write scripts directly using the "
"libguestfs API and Augeas for configuration file editing.)"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:206
msgid ""
"The first method is to temporarily set C<$EDITOR> to any script or program "
"you want to run.  The script is invoked as C<$EDITOR tmpfile> and it should "
"update C<tmpfile> in place however it likes."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:210
msgid ""
"The second method is to use the I<-e> parameter of C<virt-edit> to run a "
"short Perl snippet in the style of L<sed(1)>.  For example to replace all "
"instances of C<foo> with C<bar> in a file:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:214
#, no-wrap
msgid ""
" virt-edit -d domname filename -e 's/foo/bar/'\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:216
msgid ""
"The full power of Perl regular expressions can be used (see L<perlre(1)>).  "
"For example to delete root's password you could do:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:219
#, no-wrap
msgid ""
" virt-edit -d domname /etc/passwd -e 's/^root:.*?:/root::/'\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:221
msgid ""
"What really happens is that the snippet is evaluated as a Perl expression "
"for each line of the file.  The line, including the final C<\\n>, is passed "
"in C<$_> and the expression should update C<$_> or leave it unchanged."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:226
msgid ""
"To delete a line, set C<$_> to the empty string.  For example, to delete the "
"C<apache> user account from the password file you can do:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:229
#, no-wrap
msgid ""
" virt-edit -d mydomain /etc/passwd -e '$_ = \"\" if /^apache:/'\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:231
msgid ""
"To insert a line, prepend or append it to C<$_>.  However appending lines to "
"the end of the file is rather difficult this way since there is no concept "
"of \"last line of the file\" - your expression just doesn't get called "
"again.  You might want to use the first method (setting C<$EDITOR>) if you "
"want to do this."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:237
msgid ""
"The variable C<$lineno> contains the current line number.  As is "
"traditional, the first line in the file is number C<1>."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:240
msgid ""
"The return value from the expression is ignored, but the expression may call "
"C<die> in order to abort the whole program, leaving the original file "
"untouched."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:244
msgid ""
"Remember when matching the end of a line that C<$_> may contain the final "
"C<\\n>, or (for DOS files) C<\\r\\n>, or if the file does not end with a "
"newline then neither of these.  Thus to match or substitute some text at the "
"end of a line, use this regular expression:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:249
#, no-wrap
msgid ""
" /some text(\\r?\\n)?$/\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:251
msgid ""
"Alternately, use the perl C<chomp> function, being careful not to chomp "
"C<$_> itself (since that would remove all newlines from the file):"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:255
#, no-wrap
msgid ""
" my $m = $_; chomp $m; $m =~ /some text$/\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:259
msgid ""
"C<virt-edit> has a limited ability to understand Windows drive letters and "
"paths (eg. C<E:\\foo\\bar.txt>)."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:278
msgid ""
"The path is resolved case insensitively to locate the file that should be "
"edited."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:299
msgid ""
"L<guestfish(1)> is a more powerful, lower level tool which you can use when "
"C<virt-edit> doesn't work."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:302
msgid "Using C<virt-edit> is approximately equivalent to doing:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:304
#, no-wrap
msgid ""
" guestfish --rw -i -d domname edit /file\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:306
msgid ""
"where C<domname> is the name of the libvirt guest, and C</file> is the full "
"path to the file."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:309
msgid ""
"The command above uses libguestfs's guest inspection feature and so does not "
"work on guests that libguestfs cannot inspect, or on things like arbitrary "
"disk images that don't contain guests.  To edit a file on a disk image "
"directly, use:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:314
#, no-wrap
msgid ""
" guestfish --rw -a disk.img -m /dev/sda1 edit /file\n"
"\n"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:316
msgid ""
"where C<disk.img> is the disk image, C</dev/sda1> is the filesystem within "
"the disk image to edit, and C</file> is the full path to the file."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:320
msgid ""
"C<virt-edit> cannot create new files.  Use the guestfish commands C<touch>, "
"C<write> or C<upload> instead:"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:323
#, no-wrap
msgid ""
" guestfish --rw -i -d domname touch /newfile\n"
"\n"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:325
#, no-wrap
msgid ""
" guestfish --rw -i -d domname write /newfile \"new content\"\n"
"\n"
msgstr ""

#. type: verbatim
#: ../edit/virt-edit.pod:327
#, no-wrap
msgid ""
" guestfish --rw -i -d domname upload localfile /newfile\n"
"\n"
msgstr ""

#. type: =item
#: ../edit/virt-edit.pod:333
msgid "C<EDITOR>"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:335
msgid ""
"If set, this string is used as the editor.  It may contain arguments, "
"eg. C<\"emacs -nw\">"
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:338
msgid "If not set, C<vi> is used."
msgstr ""

#. type: textblock
#: ../edit/virt-edit.pod:356
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, "
"L<virt-tar-in(1)>, L<Sys::Guestfs(3)>, L<Sys::Guestfs::Lib(3)>, "
"L<Sys::Virt(3)>, L<http://libguestfs.org/>, L<perl(1)>, L<perlre(1)>."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:5
msgid "guestfs-erlang - How to use libguestfs from Erlang"
msgstr ""

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:9
#, no-wrap
msgid ""
" {ok, G} = guestfs:create(),\n"
" ok = guestfs:add_drive_opts(G, Disk,\n"
"                             [{format, \"raw\"}, {readonly, true}]),\n"
" ok = guestfs:launch(G),\n"
" [Device] = guestfs:list_devices(G),\n"
" ok = guestfs:close(G).\n"
"\n"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:18
msgid ""
"This manual page documents how to call libguestfs from the Erlang "
"programming language.  This page just documents the differences from the C "
"API and gives some examples.  If you are not familiar with using libguestfs, "
"you also need to read L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../erlang/examples/guestfs-erlang.pod:23
msgid "OPENING AND CLOSING THE HANDLE"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:25
msgid ""
"The Erlang bindings are implemented using an external program called "
"C<erl-guestfs>.  This program must be on the current PATH, or else you "
"should specify the full path to the program:"
msgstr ""

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:29
#, no-wrap
msgid ""
" {ok, G} = guestfs:create().\n"
"\n"
msgstr ""

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:31
#, no-wrap
msgid ""
" {ok, G} = guestfs:create(\"/path/to/erl-guestfs\").\n"
"\n"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:33
msgid "C<G> is the libguestfs handle which you should pass to other functions."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:36
msgid "To close the handle:"
msgstr ""

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:38
#, no-wrap
msgid ""
" ok = guestfs:close(G).\n"
"\n"
msgstr ""

#. type: =head2
#: ../erlang/examples/guestfs-erlang.pod:40
msgid "FUNCTIONS WITH OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:42
msgid ""
"For functions that take optional arguments, the first arguments are the "
"non-optional ones.  The last argument is a list of tuples supplying the "
"remaining optional arguments."
msgstr ""

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:46
#, no-wrap
msgid ""
" ok = guestfs:add_drive_opts(G, Disk,\n"
"                             [{format, \"raw\"}, {readonly, true}]).\n"
"\n"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:49
msgid "If the last argument would be an empty list, you can also omit it:"
msgstr ""

#. type: verbatim
#: ../erlang/examples/guestfs-erlang.pod:51
#, no-wrap
msgid ""
" ok = guestfs:add_drive_opts(G, Disk).\n"
"\n"
msgstr ""

#. type: =head2
#: ../erlang/examples/guestfs-erlang.pod:53
msgid "RETURN VALUES AND ERRORS"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:55
msgid ""
"On success, most functions return a C<Result> term (which could be a list, "
"string, tuple etc.).  If there is nothing for the function to return, then "
"the atom C<ok> is returned."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:59
msgid "On error, you would see one of the following tuples:"
msgstr ""

#. type: =item
#: ../erlang/examples/guestfs-erlang.pod:63
msgid "C<{error, Msg, Errno}>"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:65
msgid "This indicates an ordinary error from the function."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:67
msgid ""
"C<Msg> is the error message (string) and C<Errno> is the Unix error "
"(integer)."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:70
msgid "C<Errno> can be zero.  See L<guestfs(3)/guestfs_last_errno>."
msgstr ""

#. type: =item
#: ../erlang/examples/guestfs-erlang.pod:72
msgid "C<{unknown, Function}>"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:74
msgid ""
"This indicates that the function you called is not known.  Generally this "
"means you are mixing C<erl-guestfs> from another version of libguestfs, "
"which you should not do."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:78
msgid "C<Function> is the name of the unknown function."
msgstr ""

#. type: =item
#: ../erlang/examples/guestfs-erlang.pod:80
msgid "C<{unknownarg, Arg}>"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:82
msgid ""
"This indicates that you called a function with optional arguments, with an "
"unknown argument name."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:85
msgid "C<Arg> is the name of the unknown argument."
msgstr ""

#. type: =head1
#: ../erlang/examples/guestfs-erlang.pod:89 ../examples/guestfs-examples.pod:25 ../java/examples/guestfs-java.pod:37 ../ocaml/examples/guestfs-ocaml.pod:70 ../perl/examples/guestfs-perl.pod:31 ../python/examples/guestfs-python.pod:34 ../ruby/examples/guestfs-ruby.pod:28
msgid "EXAMPLE 1: CREATE A DISK IMAGE"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:91 ../examples/guestfs-examples.pod:27 ../java/examples/guestfs-java.pod:39 ../ocaml/examples/guestfs-ocaml.pod:72 ../perl/examples/guestfs-perl.pod:33 ../python/examples/guestfs-python.pod:36 ../ruby/examples/guestfs-ruby.pod:30
msgid "@EXAMPLE1@"
msgstr ""

#. type: =head1
#: ../erlang/examples/guestfs-erlang.pod:93 ../examples/guestfs-examples.pod:29 ../java/examples/guestfs-java.pod:41 ../ocaml/examples/guestfs-ocaml.pod:74 ../perl/examples/guestfs-perl.pod:35 ../python/examples/guestfs-python.pod:38 ../ruby/examples/guestfs-ruby.pod:32
msgid "EXAMPLE 2: INSPECT A VIRTUAL MACHINE DISK IMAGE"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:95 ../examples/guestfs-examples.pod:31 ../java/examples/guestfs-java.pod:43 ../ocaml/examples/guestfs-ocaml.pod:76 ../perl/examples/guestfs-perl.pod:37 ../python/examples/guestfs-python.pod:40 ../ruby/examples/guestfs-ruby.pod:34
msgid "@EXAMPLE2@"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:99
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-java(3)>, "
"L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, L<guestfs-python(3)>, "
"L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://www.erlang.org/>.  "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:116 ../examples/guestfs-testing.pod:304 ../java/examples/guestfs-java.pod:64 ../perl/examples/guestfs-perl.pod:58
msgid "Copyright (C) 2011 Red Hat Inc. L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:118 ../examples/guestfs-examples.pod:53 ../examples/guestfs-recipes.pod:405 ../java/examples/guestfs-java.pod:66 ../ocaml/examples/guestfs-ocaml.pod:99 ../perl/examples/guestfs-perl.pod:60 ../python/examples/guestfs-python.pod:62 ../ruby/examples/guestfs-ruby.pod:56
msgid ""
"The examples in this manual page may be freely copied, modified and "
"distributed without any restrictions."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:121 ../examples/guestfs-examples.pod:56 ../examples/guestfs-faq.pod:544 ../examples/guestfs-performance.pod:383 ../examples/guestfs-recipes.pod:408 ../examples/guestfs-testing.pod:306 ../java/examples/guestfs-java.pod:69 ../ocaml/examples/guestfs-ocaml.pod:102 ../perl/examples/guestfs-perl.pod:63 ../python/examples/guestfs-python.pod:65 ../ruby/examples/guestfs-ruby.pod:59 ../src/guestfs.pod:3421
msgid ""
"This library is free software; you can redistribute it and/or modify it "
"under the terms of the GNU Lesser General Public License as published by the "
"Free Software Foundation; either version 2 of the License, or (at your "
"option) any later version."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:126 ../examples/guestfs-examples.pod:61 ../examples/guestfs-faq.pod:549 ../examples/guestfs-performance.pod:388 ../examples/guestfs-recipes.pod:413 ../examples/guestfs-testing.pod:311 ../java/examples/guestfs-java.pod:74 ../ocaml/examples/guestfs-ocaml.pod:107 ../perl/examples/guestfs-perl.pod:68 ../python/examples/guestfs-python.pod:70 ../ruby/examples/guestfs-ruby.pod:64 ../src/guestfs.pod:3426
msgid ""
"This library is distributed in the hope that it will be useful, but WITHOUT "
"ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or "
"FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License "
"for more details."
msgstr ""

#. type: textblock
#: ../erlang/examples/guestfs-erlang.pod:131 ../examples/guestfs-examples.pod:66 ../examples/guestfs-faq.pod:554 ../examples/guestfs-performance.pod:393 ../examples/guestfs-recipes.pod:418 ../examples/guestfs-testing.pod:316 ../java/examples/guestfs-java.pod:79 ../ocaml/examples/guestfs-ocaml.pod:112 ../perl/examples/guestfs-perl.pod:73 ../python/examples/guestfs-python.pod:75 ../ruby/examples/guestfs-ruby.pod:69 ../src/guestfs.pod:3431
msgid ""
"You should have received a copy of the GNU Lesser General Public License "
"along with this library; if not, write to the Free Software Foundation, "
"Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA"
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:5
msgid "guestfs-examples - Examples of using libguestfs from C"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-examples.pod:9 ../src/guestfs.pod:9
#, no-wrap
msgid ""
" #include <guestfs.h>\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-examples.pod:11
#, no-wrap
msgid ""
" guestfs_h *g = guestfs_create ();\n"
" guestfs_add_drive_ro (g, \"disk.img\");\n"
" guestfs_launch (g);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-examples.pod:15 ../src/guestfs.pod:19
#, no-wrap
msgid ""
" cc prog.c -o prog -lguestfs\n"
"or:\n"
" cc prog.c -o prog `pkg-config libguestfs --cflags --libs`\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:21
msgid ""
"This manual page contains examples of calling libguestfs from the C "
"programming language.  If you are not familiar with using libguestfs, you "
"also need to read L<guestfs(3)>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:35
msgid ""
"L<guestfs(3)>, L<guestfs-erlang(3)>, L<guestfs-java(3)>, "
"L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, L<guestfs-python(3)>, "
"L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-examples.pod:51 ../ocaml/examples/guestfs-ocaml.pod:97 ../python/examples/guestfs-python.pod:60 ../ruby/examples/guestfs-ruby.pod:54
msgid "Copyright (C) 2010 Red Hat Inc. L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:5
msgid "guestfs-faq - libguestfs Frequently Asked Questions (FAQ)"
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:7
msgid "ABOUT LIBGUESTFS"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:9
msgid "What is libguestfs?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:11
msgid ""
"libguestfs is a way to create, access and modify disk images.  You can look "
"inside disk images, modify the files they contain, create them from scratch, "
"resize them, and much more.  It's especially useful from scripts and "
"programs and from the command line."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:16
msgid ""
"libguestfs is a C library (hence \"lib-\"), and a set of tools built on this "
"library, and a set of bindings in many different programming languages."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:20
msgid ""
"For more information about what libguestfs can do read the introduction on "
"the home page (L<http://libguestfs.org>)."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:23
msgid "What are the virt tools?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:25
msgid ""
"Virt tools (website: L<http://virt-tools.org>) are a whole set of "
"virtualization management tools aimed at system administrators.  Some of "
"them come from libguestfs, some from libvirt and many others from other open "
"source projects.  So virt tools is a superset of libguestfs.  However "
"libguestfs comes with many important tools.  See L<http://libguestfs.org> "
"for a full list."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:32
msgid "Does libguestfs need { libvirt / KVM / Red Hat / Fedora }?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:34
msgid "No!"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:36
msgid "libvirt is not a requirement for libguestfs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:38
msgid ""
"libguestfs works with any disk image, including ones created in VMware, KVM, "
"qemu, VirtualBox, Xen, and many other hypervisors, and ones which you have "
"created from scratch."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:42
msgid ""
"Red Hat sponsors (ie. pays for) development of libguestfs and a huge number "
"of other open source projects.  But you can run libguestfs and the virt "
"tools on many different Linux distros and Mac OS X.  Some virt tools have "
"been ported to Windows."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:47
msgid "How does libguestfs compare to other tools?"
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:51
msgid "I<vs. kpartx>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:53
msgid ""
"Libguestfs takes a different approach from kpartx.  kpartx needs root, and "
"mounts filesystems on the host kernel (which can be insecure - see "
"L<guestfs(3)/SECURITY>).  Libguestfs isolates your host kernel from guests, "
"is more flexible, scriptable, supports LVM, doesn't require root, is "
"isolated from other processes, and cleans up after itself.  Libguestfs is "
"more than just file access because you can use it to create images from "
"scratch."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:61
msgid "I<vs. vdfuse>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:63
msgid ""
"vdfuse is like kpartx but for VirtualBox images.  See the kpartx comparison "
"above.  You can use libguestfs on the partition files exposed by vdfuse, "
"although it's not necessary since libguestfs can access VirtualBox images "
"directly."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:68
msgid "I<vs. qemu-nbd>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:70
msgid ""
"nbd is like kpartx but for qcow2 images.  See the kpartx comparison above.  "
"You can use libguestfs and qemu-nbd together for access to block devices "
"over the network."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:74
msgid "I<vs. mounting filesystems in the host>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:76
msgid ""
"Mounting guest filesystems in the host is insecure and should be avoided "
"completely for untrusted guests.  Use libguestfs to provide a layer of "
"protection against filesystem exploits.  See also L<guestmount(1)>."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:81
msgid "I<vs. parted>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:83
msgid ""
"Libguestfs supports LVM.  Libguestfs uses parted and provides most parted "
"features through the libguestfs API."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:88
msgid "GETTING HELP AND REPORTING BUGS"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:90
msgid "How do I know what version I'm using?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:92
msgid "The simplest method is:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:94
#, no-wrap
msgid ""
" guestfish --version\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:96
msgid ""
"Libguestfs development happens along an unstable branch and we periodically "
"create a stable branch which we backport stable patches to.  To find out "
"more, read L<guestfs(3)/LIBGUESTFS VERSION NUMBERS>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:100
msgid "How can I get help? What mailing lists or chat rooms are available?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:103
msgid ""
"If you are a Red Hat customer using Red Hat Enterprise Linux, please contact "
"Red Hat Support: L<http://redhat.com/support>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:106
msgid ""
"There is a mailing list, mainly for development, but users are also welcome "
"to ask questions about libguestfs and the virt tools: "
"L<https://www.redhat.com/mailman/listinfo/libguestfs>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:110
msgid ""
"You can also talk to us on IRC channel C<#libguestfs> on FreeNode.  We're "
"not always around, so please stay in the channel after asking your question "
"and someone will get back to you."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:114
msgid ""
"For other virt tools (not ones supplied with libguestfs) there is a general "
"virt tools mailing list: "
"L<https://www.redhat.com/mailman/listinfo/virt-tools-list>"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:118
msgid "How do I report bugs?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:120
msgid "Please use the following link to enter a bug in Bugzilla:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:122
#, no-wrap
msgid ""
" "
"https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:124
msgid "Include as much detail as you can and a way to reproduce the problem."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:126
msgid "Include the full output of L<libguestfs-test-tool(1)>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:128
msgid "DOWNLOADING, INSTALLING, COMPILING LIBGUESTFS"
msgstr ""

#. type: =end
#: ../examples/guestfs-faq.pod:130 ../examples/guestfs-faq.pod:135 ../examples/guestfs-faq.pod:312 ../examples/guestfs-faq.pod:317 ../src/guestfs.pod:2322 ../src/guestfs.pod:2327
msgid "html"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:132
msgid "<!-- old anchor for the next section --> <a name=\"binaries\"/>"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:137
msgid "Where can I get the latest binaries for ...?"
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:141
msgid "Fedora E<ge> 11, RHEL E<ge> 5.3, EPEL 5"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:143
msgid "Use:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:145
#, no-wrap
msgid ""
" yum install '*guestf*'\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:147
msgid ""
"For the latest builds, see: "
"L<http://koji.fedoraproject.org/koji/packageinfo?packageID=8391>"
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:150
msgid "Red Hat Enterprise Linux 6"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:152
msgid ""
"It is part of the default install.  On RHEL 6 (only) you have to install "
"C<libguestfs-winsupport> to get Windows guest support."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:155
msgid "RHEL 6.3"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:157
msgid ""
"Preview packages are available here: "
"L<http://people.redhat.com/~rjones/libguestfs-RHEL-6.3-preview/>"
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:160
msgid "Debian Squeeze (6)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:162
msgid ""
"Use Hilko Bengen's backport repository: "
"L<http://people.debian.org/~bengen/libguestfs/>"
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:165
msgid "Debian Wheezy and later (7+)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:167
msgid ""
"Official Debian packages are available: "
"L<http://packages.debian.org/search?keywords=libguestfs> (thanks Hilko "
"Bengen)."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:171
msgid "Ubuntu"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:173
msgid ""
"We don't have an Ubuntu maintainer, and the packages supplied by Canonical "
"(which are outside our control) are broken.  Try compiling from source (next "
"section)."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:177
msgid "Ubuntu 10.04"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:179
msgid "See: L<http://libguestfs.org/download/binaries/ubuntu1004-packages/>"
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:182
msgid "Ubuntu 12.04"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:184
msgid ""
"The packages supplied by Canonical are broken.  See: "
"L<https://www.redhat.com/archives/libguestfs/2012-April/thread.html#00028>"
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:187
msgid "Other Linux distro"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:189
msgid "Compile from source (next section)."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:191
msgid "Other non-Linux distro"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:193
msgid "You'll have to compile from source, and port it."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:197
msgid "How can I compile and install libguestfs from source?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:199
msgid ""
"If your Linux distro has a working port of febootstrap (that is, Fedora, Red "
"Hat Enterprise Linux >= 6.3, Debian, Ubuntu and ArchLinux)  then you should "
"just be able to compile from source in the usual way.  Download the latest "
"tarball from L<http://libguestfs.org/download>, unpack it, and start by "
"reading the README file."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:205
msgid ""
"If you I<don't> have febootstrap, you will need to use the \"fixed appliance "
"method\".  See: L<http://libguestfs.org/download/binaries/appliance/>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:209
msgid "Patches to port febootstrap to more Linux distros are welcome."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:211
msgid ""
"Why do I get an error when I try to rebuild from the source RPMs supplied by "
"Red Hat / Fedora?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:214
msgid ""
"Because of the complexity of building the libguestfs appliance, the source "
"RPMs provided cannot be rebuilt directly using C<rpmbuild> or C<mock>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:218
msgid ""
"If you use Koji (which is open source software and may be installed "
"locally), then the SRPMs can be rebuilt in Koji.  "
"L<https://fedoraproject.org/wiki/Koji>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:222
msgid ""
"If you don't have or want to use Koji, then you have to give libguestfs "
"access to the network so it can download the RPMs for building the "
"appliance.  You also need to set an RPM macro to tell libguestfs to use the "
"network.  Put the following line into a file called C<$HOME/.rpmmacros>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:228
#, no-wrap
msgid ""
" %libguestfs_buildnet   1\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:230
msgid "If you are using mock, do:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:232
#, no-wrap
msgid ""
" mock -D '%libguestfs_buildnet 1' [etc]\n"
"\n"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:234
msgid "Libguestfs has a really long list of dependencies!"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:236
msgid "That's because it does a lot of things."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:238
msgid "How can I speed up libguestfs builds?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:240
msgid ""
"By far the most important thing you can do is to install and properly "
"configure Squid.  Note that the default configuration that ships with Squid "
"is rubbish, so configuring it is not optional."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:244
msgid ""
"A very good place to start with Squid configuration is here: "
"L<https://fedoraproject.org/wiki/Extras/MockTricks#Using_Squid_to_Speed_Up_Mock_package_downloads>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:247
msgid ""
"Make sure Squid is running, and that the environment variables "
"C<$http_proxy> and C<$ftp_proxy> are pointing to it."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:250
msgid ""
"With Squid running and correctly configured, appliance builds should be "
"reduced to a few minutes."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:253
msgid "SPEED, DISK SPACE USED BY LIBGUESTFS"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:255
msgid ""
"Note: Most of the information in this section has moved: "
"L<guestfs-performance(1)>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:258
msgid "Upload or write seem very slow."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:260
msgid ""
"In libguestfs E<lt> 1.13.16, the mount command (L<guestfs(3)/guestfs_mount>) "
"enabled option C<-o sync> implicitly.  This causes very poor write "
"performance, and was one of the main gotchas for new libguestfs users."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:265
msgid ""
"For libguestfs E<lt> 1.13.16, replace mount with C<mount-options>, leaving "
"the first parameter as an empty string."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:268
msgid ""
"You can also do this with more recent versions of libguestfs, but if you "
"know that you are using libguestfs ≥ 1.13.16 then it's safe to use plain "
"mount."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:272
msgid ""
"If the underlying disk is not fully allocated (eg. sparse raw or qcow2) then "
"writes can be slow because the host operating system has to do costly disk "
"allocations while you are writing. The solution is to use a fully allocated "
"format instead, ie. non-sparse raw, or qcow2 with the "
"C<preallocation=metadata> option."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:278
msgid "Libguestfs uses too much disk space!"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:280
msgid "libguestfs caches a large-ish appliance in:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:282
#, no-wrap
msgid ""
" /var/tmp/.guestfs-<UID>\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:284
msgid ""
"If the environment variable C<TMPDIR> is defined, then "
"C<$TMPDIR/.guestfs-E<lt>UIDE<gt>> is used instead."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:287
msgid "It is safe to delete this directory when you are not using libguestfs."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:289
msgid "USING LIBGUESTFS IN YOUR OWN PROGRAMS"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:291
msgid "The API has hundreds of methods, where do I start?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:293
msgid ""
"We recommend you start by reading the API overview: L<guestfs(3)/API "
"OVERVIEW>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:296
msgid ""
"Although the API overview covers the C API, it is still worth reading even "
"if you are going to use another programming language, because the API is the "
"same, just with simple logical changes to the names of the calls:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:301
#, no-wrap
msgid ""
"                  C  guestfs_ln_sf (g, target, linkname);\n"
"             Python  g.ln_sf (target, linkname);\n"
"              OCaml  g#ln_sf target linkname;\n"
"               Perl  $g->ln_sf (target, linkname);\n"
"  Shell (guestfish)  ln-sf target linkname\n"
"                PHP  guestfs_ln_sf ($g, $target, $linkname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:308
msgid ""
"Once you're familiar with the API overview, you should look at this list of "
"starting points for other language bindings: L<guestfs(3)/USING LIBGUESTFS "
"WITH OTHER PROGRAMMING LANGUAGES>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:314
msgid "<!-- old anchor for the next section --> <a name=\"debug\"/>"
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:319
msgid "DEBUGGING LIBGUESTFS"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:321
msgid ""
"How do I debug when using any libguestfs program or tool (eg. virt-v2v or "
"virt-df)?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:324
msgid ""
"There are two C<LIBGUESTFS_*> environment variables you can set in order to "
"get more information from libguestfs."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:329
msgid "C<LIBGUESTFS_TRACE>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:331
msgid ""
"Set this to 1 and libguestfs will print out each command / API call in a "
"format which is similar to guestfish commands."
msgstr ""

#. type: =item
#: ../examples/guestfs-faq.pod:334
msgid "C<LIBGUESTFS_DEBUG>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:336
msgid ""
"Set this to 1 in order to enable massive amounts of debug messages.  If you "
"think there is some problem inside the libguestfs appliance, then you should "
"use this option."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:342
msgid "To set these from the shell, do this before running the program:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:344
#, no-wrap
msgid ""
" export LIBGUESTFS_TRACE=1\n"
" export LIBGUESTFS_DEBUG=1\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:347
msgid "For csh/tcsh the equivalent commands would be:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:349
#, no-wrap
msgid ""
" setenv LIBGUESTFS_TRACE 1\n"
" setenv LIBGUESTFS_DEBUG 1\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:352
msgid "For further information, see: L<guestfs(3)/ENVIRONMENT VARIABLES>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:354
msgid "How do I debug when using guestfish?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:356
msgid ""
"You can use the same environment variables above.  Alternatively use the "
"guestfish options -x (to trace commands) or -v (to get the full debug "
"output), or both."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:360
msgid "For further information, see: L<guestfish(1)>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:362
msgid "How do I debug when using the API?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:364
msgid ""
"Call L<guestfs(3)/guestfs_set_trace> to enable command traces, and/or "
"L<guestfs(3)/guestfs_set_verbose> to enable debug messages."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:367
msgid ""
"For best results, call these functions as early as possible, just after "
"creating the guestfs handle if you can, and definitely before calling "
"launch."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:371
msgid "How do I capture debug output and put it into my logging system?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:373
msgid ""
"Use the event API.  For examples, see: L<guestfs(3)/SETTING CALLBACKS TO "
"HANDLE EVENTS>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:376
msgid "Digging deeper into the appliance boot process."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:378
msgid ""
"Enable debugging and then read this documentation on the appliance boot "
"process: L<guestfs(3)/INTERNALS>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:381
msgid "libguestfs hangs or fails during run/launch."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:383
msgid ""
"Enable debugging and look at the full output.  If you cannot work out what "
"is going on, file a bug report, including the I<complete> output of "
"L<libguestfs-test-tool(1)>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-faq.pod:387
msgid "DESIGN/INTERNALS OF LIBGUESTFS"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:389
msgid "Why don't you do everything through the FUSE / filesystem interface?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:392
msgid ""
"We offer a command called L<guestmount(1)> which lets you mount guest "
"filesystems on the host.  This is implemented as a FUSE module.  Why don't "
"we just implement the whole of libguestfs using this mechanism, instead of "
"having the large and rather complicated API?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:397
msgid ""
"The reasons are twofold.  Firstly, libguestfs offers API calls for doing "
"things like creating and deleting partitions and logical volumes, which "
"don't fit into a filesystem model very easily.  Or rather, you could fit "
"them in: for example, creating a partition could be mapped to C<mkdir "
"/fs/hda1> but then you'd have to specify some method to choose the size of "
"the partition (maybe C<echo 100M E<gt> /fs/hda1/.size>), and the partition "
"type, start and end sectors etc., but once you've done that the "
"filesystem-based API starts to look more complicated than the call-based API "
"we currently have."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:407
msgid ""
"The second reason is for efficiency.  FUSE itself is reasonably efficient, "
"but it does make lots of small, independent calls into the FUSE module.  In "
"guestmount these have to be translated into messages to the libguestfs "
"appliance which has a big overhead (in time and round trips).  For example, "
"reading a file in 64 KB chunks is inefficient because each chunk would turn "
"into a single round trip.  In the libguestfs API it is much more efficient "
"to download an entire file or directory through one of the streaming calls "
"like C<guestfs_download> or C<guestfs_tar_out>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:417
msgid "Why don't you do everything through GVFS?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:419
msgid "The problems are similar to the problems with FUSE."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:421
msgid ""
"GVFS is a better abstraction than POSIX/FUSE.  There is an FTP backend for "
"GVFS, which is encouraging because FTP is conceptually similar to the "
"libguestfs API.  However the GVFS FTP backend makes multiple simultaneous "
"connections in order to keep interactivity, which we can't easily do with "
"libguestfs."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:427
msgid "Can I use C<guestfish --ro> as a way to backup my virtual machines?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:429
msgid ""
"Usually this is not a good idea.  The question is answered in more detail in "
"this mailing list posting: "
"L<https://www.redhat.com/archives/libguestfs/2010-August/msg00024.html>"
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:433
msgid "What's the difference between guestfish and virt-rescue?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:435
msgid ""
"A lot of people are confused by the two superficially similar tools we "
"provide:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:438
#, no-wrap
msgid ""
" $ guestfish --ro -a guest.img\n"
" ><fs> run\n"
" ><fs> fsck /dev/sda1\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:442
#, no-wrap
msgid ""
" $ virt-rescue --ro guest.img\n"
" ><rescue> /sbin/fsck /dev/sda1\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:445
msgid ""
"And the related question which then arises is why you can't type in full "
"shell commands with all the --options in guestfish (but you can in "
"L<virt-rescue(1)>)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:449
msgid ""
"L<guestfish(1)> is a program providing structured access to the "
"L<guestfs(3)> API.  It happens to be a nice interactive shell too, but its "
"primary purpose is structured access from shell scripts.  Think of it more "
"like a language binding, like Python and other bindings, but for shell.  The "
"key differentiating factor of guestfish (and the libguestfs API in general) "
"is the ability to automate changes."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:456
msgid ""
"L<virt-rescue(1)> is a free-for-all freeform way to boot the libguestfs "
"appliance and make arbitrary changes to your VM. It's not structured, you "
"can't automate it, but for making quick ad-hoc fixes to your guests, it can "
"be quite useful."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:461
msgid ""
"But, libguestfs also has a \"backdoor\" into the appliance allowing you to "
"send arbitrary shell commands.  It's not as flexible as virt-rescue, because "
"you can't interact with the shell commands, but here it is anyway:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:466
#, no-wrap
msgid ""
" ><fs> debug sh \"cmd arg1 arg2 ...\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:468
msgid ""
"Note that you should B<not> rely on this.  It could be removed or changed in "
"future. If your program needs some operation, please add it to the "
"libguestfs API instead."
msgstr ""

#. type: =head2
#: ../examples/guestfs-faq.pod:472
msgid ""
"What's the deal with C<guestfish -i>? Why does virt-cat only work on a real "
"VM image, but virt-df works on any disk image? What does \"no root device "
"found in this operating system image\" mean?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:477
msgid ""
"These questions are all related at a fundamental level which may not be "
"immediately obvious."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:480
msgid ""
"At the L<guestfs(3)> API level, a \"disk image\" is just a pile of "
"partitions and filesystems."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:483
msgid ""
"In contrast, when the virtual machine boots, it mounts those filesystems "
"into a consistent hierarchy such as:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:486
#, no-wrap
msgid ""
" /          (/dev/sda2)\n"
" |\n"
" +-- /boot  (/dev/sda1)\n"
" |\n"
" +-- /home  (/dev/vg_external/Homes)\n"
" |\n"
" +-- /usr   (/dev/vg_os/lv_usr)\n"
" |\n"
" +-- /var   (/dev/vg_os/lv_var)\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:496
msgid "(or drive letters on Windows)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:498
msgid ""
"The API first of all sees the disk image at the \"pile of filesystems\" "
"level.  But it also has a way to inspect the disk image to see if it "
"contains an operating system, and how the disks are mounted when the "
"operating system boots: L<guestfs(3)/INSPECTION>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:503
msgid "Users expect some tools (like L<virt-cat(1)>) to work with VM paths:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-faq.pod:505
#, no-wrap
msgid ""
" virt-cat fedora.img /var/log/messages\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:507
msgid ""
"How does virt-cat know that C</var> is a separate partition? The trick is "
"that virt-cat performs inspection on the disk image, and uses that to "
"translate the path correctly."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:511
msgid ""
"Some tools (including L<virt-cat(1)>, L<virt-edit(1)>, L<virt-ls(1)>)  use "
"inspection to map VM paths.  Other tools, such as L<virt-df(1)> and "
"L<virt-filesystems(1)> operate entirely at the raw \"big pile of "
"filesystems\" level of the libguestfs API, and don't use inspection."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:516
msgid ""
"L<guestfish(1)> is in an interesting middle ground.  If you use the I<-a> "
"and I<-m> command line options, then you have to tell guestfish exactly how "
"to add disk images and where to mount partitions. This is the raw API level."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:521
msgid ""
"If you use the I<-i> option, libguestfs performs inspection and mounts the "
"filesystems for you."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:524
msgid ""
"The error C<no root device found in this operating system image> is related "
"to this.  It means inspection was unable to locate an operating system "
"within the disk image you gave it.  You might see this from programs like "
"virt-cat if you try to run them on something which is just a disk image, not "
"a virtual machine disk image."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:532
msgid "L<guestfish(1)>, L<guestfs(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-faq.pod:542 ../examples/guestfs-performance.pod:381
msgid "Copyright (C) 2012 Red Hat Inc. L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:5
msgid "guestfs-performance - engineering libguestfs for greatest performance"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:9
msgid ""
"This page documents how to get the greatest performance out of libguestfs, "
"especially when you expect to use libguestfs to manipulate thousands of "
"virtual machines or disk images."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:13
msgid ""
"Three main areas are covered. Libguestfs runs an appliance (a small Linux "
"distribution) inside qemu/KVM.  The first two areas are: minimizing the time "
"taken to start this appliance, and the number of times the appliance has to "
"be started.  The third area is shortening the time taken for inspection of "
"VMs."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:19
msgid "BASELINE MEASUREMENTS"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:21
msgid "Before making changes to how you use libguestfs, take baseline measurements."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:24
msgid "BASELINE: STARTING THE APPLIANCE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:26
msgid "On an unloaded machine, time how long it takes to start up the appliance:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:29 ../examples/guestfs-performance.pod:180 ../examples/guestfs-testing.pod:36
#, no-wrap
msgid ""
" time guestfish -a /dev/null run\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:31
msgid ""
"Run this command several times in a row and discard the first few runs, so "
"that you are measuring a typical \"hot cache\" case."
msgstr ""

#. type: =head3
#: ../examples/guestfs-performance.pod:34 ../examples/guestfs-performance.pod:67
msgid "Explanation"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:36
msgid ""
"This command starts up the libguestfs appliance on a null disk, and then "
"immediately shuts it down.  The first time you run the command, it will "
"create an appliance and cache it (usually under C</var/tmp/.guestfs-*>).  "
"Subsequent runs should reuse the cached appliance."
msgstr ""

#. type: =head3
#: ../examples/guestfs-performance.pod:42 ../examples/guestfs-performance.pod:78
msgid "Expected results"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:44
msgid ""
"You should expect to be getting times under 6 seconds.  If the times you see "
"on an unloaded machine are above this, then see the section "
"L</TROUBLESHOOTING POOR PERFORMANCE> below."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:48
msgid "BASELINE: PERFORMING INSPECTION OF A GUEST"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:50
msgid ""
"For this test you will need an unloaded machine and at least one real guest "
"or disk image.  If you are planning to use libguestfs against only X guests "
"(eg. X = Windows), then using an X guest here would be most appropriate.  If "
"you are planning to run libguestfs against a mix of guests, then use a mix "
"of guests for testing here."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:56
msgid ""
"Time how long it takes to perform inspection and mount the disks of the "
"guest.  Use the first command if you will be using disk images, and the "
"second command if you will be using libvirt."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:60
#, no-wrap
msgid ""
" time guestfish --ro -a disk.img -i exit\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:62
#, no-wrap
msgid ""
" time guestfish --ro -d GuestName -i exit\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:64
msgid ""
"Run the command several times in a row and discard the first few runs, so "
"that you are measuring a typical \"hot cache\" case."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:69
msgid ""
"This command starts up the libguestfs appliance on the named disk image or "
"libvirt guest, performs libguestfs inspection on it (see "
"L<guestfs(3)/INSPECTION>), mounts the guest's disks, then discards all these "
"results and shuts down."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:74
msgid ""
"The first time you run the command, it will create an appliance and cache it "
"(usually under C</var/tmp/.guestfs-*>).  Subsequent runs should reuse the "
"cached appliance."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:80
msgid ""
"You should expect times which are E<le> 5 seconds greater than measured in "
"the first baseline test above.  (For example, if the first baseline test ran "
"in 5 seconds, then this test should run in E<le> 10 seconds)."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:85
msgid "UNDERSTANDING THE APPLIANCE AND WHEN IT IS BUILT/CACHED"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:87
msgid ""
"The first time you use libguestfs, it will build and cache an appliance.  "
"This is usually in C</var/tmp/.guestfs-*>, unless you have set C<$TMPDIR> in "
"which case it will be under that temporary directory."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:92
msgid ""
"For more information about how the appliance is constructed, see "
"L<febootstrap(8)/SUPERMIN APPLIANCES>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:95
msgid ""
"Every time libguestfs runs it will check that no host files used by the "
"appliance have changed.  If any have, then the appliance is rebuilt.  This "
"usually happens when a package is installed or updated on the host "
"(eg. using programs like C<yum> or C<apt-get>).  The reason for "
"reconstructing the appliance is security: the new program that has been "
"installed might contain a security fix, and so we want to include the fixed "
"program in the appliance automatically."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:103
msgid "These are the performance implications:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:109
msgid ""
"The process of building (or rebuilding) the cached appliance is slow, and "
"you can avoid this happening by using a fixed appliance (see below)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:115
msgid ""
"If not using a fixed appliance, be aware that updating software on the host "
"will cause a one time rebuild of the appliance."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:120
msgid ""
"C</var/tmp> (or C<$TMPDIR>) should be on a fast disk, and have plenty of "
"space for the appliance."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:125
msgid "USING A FIXED APPLIANCE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:127
msgid ""
"To fully control when the appliance is built, you can build a fixed "
"appliance.  This appliance can and should be stored on a fast, local disk."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:131
msgid "To build the appliance, run the command:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:133
#, no-wrap
msgid ""
" libguestfs-make-fixed-appliance <directory>\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:135
msgid ""
"replacing C<E<lt>directoryE<gt>> with the name of a directory where the "
"appliance will be stored (normally you would name a subdirectory, for "
"example: C</usr/local/lib/guestfs/appliance> or C</dev/shm/appliance>)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:140
msgid ""
"Then set C<$LIBGUESTFS_PATH> (and ensure this environment variable is set in "
"your libguestfs program), or modify your program so it calls "
"C<guestfs_set_path>.  For example:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:144
#, no-wrap
msgid ""
" export LIBGUESTFS_PATH=/usr/local/lib/guestfs/appliance\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:146
msgid ""
"Now you can run libguestfs programs, virt tools, guestfish etc. as normal.  "
"The programs will use your fixed appliance, and will not ever build, "
"rebuild, or cache their own appliance."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:150
msgid ""
"(For detailed information on this subject, see: "
"L<libguestfs-make-fixed-appliance(1)>)."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:153
msgid "PERFORMANCE OF THE FIXED APPLIANCE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:155
msgid ""
"In our testing we did not find that using a fixed appliance gave any "
"measurable performance benefit, even when the appliance was located in "
"memory (ie. on C</dev/shm>).  However there are three points to consider:"
msgstr ""

#. type: =item
#: ../examples/guestfs-performance.pod:162 ../examples/guestfs-performance.pod:211 ../resize/virt-resize.pod:31 ../resize/virt-resize.pod:603 ../sparsify/virt-sparsify.pod:230 ../src/guestfs.pod:471 ../src/guestfs.pod:1370 ../src/guestfs.pod:1509 ../src/guestfs.pod:2757
msgid "1."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:164
msgid ""
"Using a fixed appliance stops libguestfs from ever rebuilding the appliance, "
"meaning that libguestfs will have more predictable start-up times."
msgstr ""

#. type: =item
#: ../examples/guestfs-performance.pod:168 ../examples/guestfs-performance.pod:218 ../resize/virt-resize.pod:44 ../resize/virt-resize.pod:610 ../sparsify/virt-sparsify.pod:237 ../src/guestfs.pod:477 ../src/guestfs.pod:1374 ../src/guestfs.pod:1513 ../src/guestfs.pod:2782
msgid "2."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:170
msgid ""
"By default libguestfs (or rather, L<febootstrap-supermin-helper(8)>)  "
"searches over the root filesystem to find out if any host files have changed "
"and if it needs to rebuild the appliance.  If these files are not cached and "
"the root filesystem is on an HDD, then this generates lots of seeks.  Using "
"a fixed appliance avoids all this."
msgstr ""

#. type: =item
#: ../examples/guestfs-performance.pod:176 ../examples/guestfs-performance.pod:224 ../resize/virt-resize.pod:52 ../resize/virt-resize.pod:616 ../sparsify/virt-sparsify.pod:243 ../src/guestfs.pod:488 ../src/guestfs.pod:1519
msgid "3."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:178
msgid "The appliance is loaded on demand.  A simple test such as:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:182
msgid ""
"does not load very much of the appliance.  A real libguestfs program using "
"complicated API calls would demand-load a lot more of the appliance.  Being "
"able to store the appliance in a specified location makes the performance "
"more predictable."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:189
msgid "REDUCING THE NUMBER OF TIMES THE APPLIANCE IS LAUNCHED"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:191
msgid ""
"By far the most effective, though not always the simplest way to get good "
"performance is to ensure that the appliance is launched the minimum number "
"of times.  This will probably involve changing your libguestfs application."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:196
msgid "Try to call C<guestfs_launch> at most once per virtual machine."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:198
msgid ""
"Instead of using a separate instance of L<guestfish(1)> to make a series of "
"changes to the same guest, use a single instance of guestfish and/or use the "
"guestfish I<--listen> option."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:202
msgid ""
"Consider writing your program as a daemon which holds a guest open while "
"making a series of changes.  Or marshal all the operations you want to "
"perform before opening the guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:206
msgid ""
"You can also try adding disks from multiple guests to a single appliance.  "
"Before trying this, note the following points:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:213
msgid ""
"Adding multiple guests to one appliance is a security problem because it may "
"allow one guest to interfere with the disks of another guest.  Only do it if "
"you trust all the guests, or if you can group guests by trust."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:220
msgid ""
"In current qemu, there is a limit of around 26 disks that can be added to "
"the appliance.  In future versions of qemu (and hence libguestfs)  we hope "
"to lift this limit."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:226
msgid ""
"Using libguestfs this way is complicated.  Disks can have unexpected "
"interactions: for example, if two guests use the same UUID for a filesystem "
"(because they were cloned), or have volume groups with the same name (but "
"see C<guestfs_lvm_set_filter>)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:233
msgid ""
"L<virt-df(1)> adds multiple disks by default, so the source code for this "
"program would be a good place to start."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:236
msgid "SHORTENING THE TIME TAKEN FOR INSPECTION OF VMs"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:238
msgid ""
"The main advice is obvious: Do not perform inspection (which is expensive) "
"unless you need the results."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:241
msgid ""
"If you previously performed inspection on the guest, then it may be safe to "
"cache and reuse the results from last time."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:244
msgid ""
"Some disks don't need to be inspected at all: for example, if you are "
"creating a disk image, or if the disk image is not a VM, or if the disk "
"image has a known layout."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:248
msgid ""
"Even when basic inspection (C<guestfs_inspect_os>) is required, auxiliary "
"inspection operations may be avoided:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:255
msgid "Mounting disks is only necessary to get further filesystem information."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:260
msgid ""
"Listing applications (C<guestfs_inspect_list_applications>) is an expensive "
"operation on Linux, but almost free on Windows."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:265
msgid ""
"Generating a guest icon (C<guestfs_inspect_get_icon>) is cheap on Linux but "
"expensive on Windows."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:270
msgid "TROUBLESHOOTING POOR PERFORMANCE"
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:272
msgid "ENSURE HARDWARE VIRTUALIZATION IS AVAILABLE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:274
msgid "Use C</proc/cpuinfo> and this page:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:276 ../examples/guestfs-testing.pod:43
msgid "http://virt-tools.org/learning/check-hardware-virt/"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:278
msgid ""
"to ensure that hardware virtualization is available.  Note that you may need "
"to enable it in your BIOS."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:281
msgid ""
"Hardware virt is not usually available inside VMs, and libguestfs will run "
"slowly inside another virtual machine whatever you do.  Nested "
"virtualization does not work well in our experience, and is certainly no "
"substitute for running libguestfs on baremetal."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:286
msgid "ENSURE KVM IS AVAILABLE"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:288
msgid ""
"Ensure that KVM is enabled and available to the user that will run "
"libguestfs.  It should be safe to set 0666 permissions on C</dev/kvm> and "
"most distributions now do this."
msgstr ""

#. type: =head2
#: ../examples/guestfs-performance.pod:292
msgid "PROCESSORS TO AVOID"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:294
msgid ""
"Avoid processors that don't have hardware virtualization, and some "
"processors which are simply very slow (AMD Geode being a great example)."
msgstr ""

#. type: =head1
#: ../examples/guestfs-performance.pod:298
msgid "DETAILED TIMINGS USING SYSTEMTAP"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:300
msgid ""
"You can use SystemTap (L<stap(1)>) to get detailed timings from libguestfs "
"programs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:303
msgid "Save the following script as C<time.stap>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:305 ../src/guestfs.pod:2270
#, no-wrap
msgid ""
" global last;\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:307 ../src/guestfs.pod:2272
#, no-wrap
msgid ""
" function display_time () {\n"
"       now = gettimeofday_us ();\n"
"       delta = 0;\n"
"       if (last > 0)\n"
"             delta = now - last;\n"
"       last = now;\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:314 ../src/guestfs.pod:2279
#, no-wrap
msgid ""
"       printf (\"%d (+%d):\", now, delta);\n"
" }\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:317 ../src/guestfs.pod:2282
#, no-wrap
msgid ""
" probe begin {\n"
"       last = 0;\n"
"       printf (\"ready\\n\");\n"
" }\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:322 ../src/guestfs.pod:2287
#, no-wrap
msgid ""
" /* Display all calls to static markers. */\n"
" probe process(\"/usr/lib*/libguestfs.so.0\")\n"
"           .provider(\"guestfs\").mark(\"*\") ? {\n"
"       display_time();\n"
"       printf (\"\\t%s %s\\n\", $$name, $$parms);\n"
" }\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:329
#, no-wrap
msgid ""
" /* Display all calls to guestfs_* functions. */\n"
" probe process(\"/usr/lib*/libguestfs.so.0\")\n"
"           .function(\"guestfs_[a-z]*\") ? {\n"
"       display_time();\n"
"       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:336
msgid "Run it as root in one window:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:338
#, no-wrap
msgid ""
" # stap time.stap\n"
" ready\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:341
msgid ""
"It prints \"ready\" when SystemTap has loaded the program.  Run your "
"libguestfs program, guestfish or a virt tool in another window.  For "
"example:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:345
#, no-wrap
msgid ""
" $ guestfish -a /dev/null run\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:347
msgid ""
"In the stap window you will see a large amount of output, with the time "
"taken for each step shown (microseconds in parenthesis).  For example:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-performance.pod:351
#, no-wrap
msgid ""
" xxxx (+0):\tguestfs_create \n"
" xxxx (+29):\tguestfs_set_pgroup g=0x17a9de0 pgroup=0x1\n"
" xxxx (+9):\tguestfs_add_drive_opts_argv g=0x17a9de0 [...]\n"
" xxxx (+8):\tguestfs_safe_strdup g=0x17a9de0 str=0x7f8a153bed5d\n"
" xxxx (+19):\tguestfs_safe_malloc g=0x17a9de0 nbytes=0x38\n"
" xxxx (+5):\tguestfs_safe_strdup g=0x17a9de0 str=0x17a9f60\n"
" xxxx (+10):\tguestfs_launch g=0x17a9de0\n"
" xxxx (+4):\tlaunch_start \n"
" [etc]\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:361
msgid ""
"You will need to consult, and even modify, the source to libguestfs to fully "
"understand the output."
msgstr ""

#. type: textblock
#: ../examples/guestfs-performance.pod:366
msgid ""
"L<febootstrap(8)>, L<febootstrap-supermin-helper(8)>, L<guestfish(1)>, "
"L<guestfs(3)>, L<guestfs-examples(3)>, "
"L<libguestfs-make-fixed-appliance(1)>, L<stap(1)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: =end
#: ../examples/guestfs-recipes.pod:3 ../examples/guestfs-recipes.pod:12
msgid "comment"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:5
msgid ""
"pod2man and pod2html have differing bugs which makes it hard to write URLs "
"here.  The only way which works for both sorts of output is to just write "
"the URL directly.  Do NOT use L<...> for URLs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:9
msgid ""
"We break with tradition here and don't use ALL CAPS for the section "
"headings, as this makes them much easier to read."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:16
msgid "guestfs-recipes - libguestfs, guestfish and virt tools recipes"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:20
msgid ""
"This page contains recipes for and links to things you can do using "
"libguestfs, L<guestfish(1)> and the virt tools."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:23
msgid "Audit a virtual machine for setuid files"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:25
msgid ""
"The link below contains a small program which can be used to audit a Linux "
"virtual machine to see what setuid and setgid files it contains."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:28
msgid "https://rwmj.wordpress.com/2010/12/15/tip-audit-virtual-machine-for-setuid-files/#content"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:30
msgid "Change the background image in a Windows XP VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:32
msgid ""
"The links below explain how to use L<guestfish(1)> to change the background "
"image for a user of a Windows XP VM.  Unfortunately the technique appears to "
"be substantially different for each version of Windows."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:37
msgid ""
"https://lists.fedoraproject.org/pipermail/virt/2011-May/002655.html "
"https://lists.fedoraproject.org/pipermail/virt/2011-May/002658.html"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:40
msgid "Cloning a virtual machine (Linux)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:42
msgid ""
"The guestfish technique described in the link below works well for most "
"Linux VMs.  Depending on the Linux distro you may need to change the paths "
"slightly."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:46
msgid "https://rwmj.wordpress.com/2010/09/24/tip-my-procedure-for-cloning-a-fedora-vm/#content"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:48
msgid ""
"Avoid L<virt-clone(1)>.  Currently what to do about virt-clone is under "
"discussion."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:51
msgid "https://www.redhat.com/archives/virt-tools-list/2011-May/msg00019.html"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:53
msgid "Cloning a virtual machine (Windows)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:55
msgid ""
"It is possible to do a \"sysprep\" using libguestfs alone, although not "
"straightforward.  Currently there is code in the Aeolus Oz project which "
"does this (using libguestfs).  As part of our review of the virt-clone tool, "
"we may add sysprepping ability."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:60
msgid ""
"https://github.com/clalancette/oz "
"https://www.redhat.com/archives/virt-tools-list/2011-May/msg00019.html"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:63
msgid "Convert a CD-ROM / DVD / ISO to a tarball"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:65
msgid "This converts input C<cd.iso> to output C<cd.tar.gz>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:67
#, no-wrap
msgid ""
" guestfish --ro -a cd.iso -m /dev/sda tgz-out / cd.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:69
msgid "To export just a subdirectory, eg. C</files>, do:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:71
#, no-wrap
msgid ""
" guestfish --ro -a cd.iso -m /dev/sda tgz-out /files cd.tar.gz\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:73
msgid "Create empty disk images"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:75
msgid ""
"You can use the L<guestfish(1)> I<-N> option to create empty disk images.  "
"The useful guide below explains the options available."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:78
msgid "https://rwmj.wordpress.com/2010/09/08/new-guestfish-n-options-in-1-5-9/#content"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:80
msgid "Dump raw filesystem content from inside a disk image or VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:82
msgid ""
"You can use the L<guestfish(1)> C<download> command to extract the raw "
"filesystem content from any filesystem in a disk image or a VM (even one "
"which is encrypted or buried inside an LV):"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:86
#, no-wrap
msgid ""
" guestfish --ro -a disk.img run : download /dev/sda1 sda1.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:88
#, no-wrap
msgid ""
" guestfish --ro -d Guest run : download /dev/vg_guest/lv_root lv.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:90
msgid "To list the filesystems in a disk image, use L<virt-filesystems(1)>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:92
msgid "Edit grub configuration in a VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:94
msgid "You can use this to:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:100
msgid "Fix a virtual machine that does not boot."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:104
msgid "Change which kernel is used to boot the VM."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:108
msgid "Change kernel command line options."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:112
msgid "Use L<virt-edit(1)> to edit the grub configuration:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:114
#, no-wrap
msgid ""
" virt-edit -d BrokenGuest /boot/grub/grub.conf\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:116
msgid ""
"or for general tinkering inside an unbootable VM use L<virt-rescue(1)> like "
"this:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:119
#, no-wrap
msgid ""
" virt-rescue -d BrokenGuest\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:121
msgid "Export any directory from a VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:123
msgid "To export C</home> from a VM into a local directory use L<virt-copy-out(1)>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:126 ../examples/guestfs-testing.pod:93
#, no-wrap
msgid ""
" virt-copy-out -d Guest /home .\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:128 ../fish/guestfish-actions.pod:9 ../fish/guestfish-actions.pod:1592 ../fish/guestfish-actions.pod:1987 ../fish/guestfish-actions.pod:2414 ../src/guestfs-actions.pod:18 ../src/guestfs-actions.pod:2623 ../src/guestfs-actions.pod:3190 ../src/guestfs-actions.pod:3759 ../src/guestfs.pod:1753 ../tools/virt-win-reg.pl:717
msgid "Notes:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:134
msgid ""
"The final dot of the command is not a printing error.  It means we want to "
"copy out to the current directory."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:139
msgid "This creates a directory called C<home> under the current directory."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:143
msgid ""
"If the guest is a Windows guest then you can use drive letters and "
"backslashes, but you must prefix the path with C<win:> and quote it to "
"protect it from the shell, like this:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:147
#, no-wrap
msgid ""
" virt-copy-out -d WinGuest 'win:c:\\windows\\system32\\config' .\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:149
msgid "To get the output as a compressed tarball, do:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:151
#, no-wrap
msgid ""
" virt-tar-out -d Guest /home - | gzip --best > home.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:153
msgid ""
"Although it sounds tempting, this is usually not a reliable way to get a "
"backup from a running guest.  See the entry in the FAQ: "
"http://libguestfs.org/FAQ.html#backup"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:157
msgid "Find out which user is using the most space"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:159
msgid ""
"This simple script examines a Linux guest to find out which user is using "
"the most space in their home directory:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:162
#, no-wrap
msgid ""
" #!/bin/sh -\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:164 ../fish/guestfish.pod:996
#, no-wrap
msgid ""
" set -e\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:166
#, no-wrap
msgid ""
" vm=\"$1\"\n"
" dir=/home\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:169
#, no-wrap
msgid ""
" eval $(guestfish --ro -d \"$vm\" -i --listen)\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:171
#, no-wrap
msgid ""
" for d in $(guestfish --remote ls \"$dir\"); do\n"
"     echo -n \"$dir/$d\"\n"
"     echo -ne '\\t'\n"
"     guestfish --remote du \"$dir/$d\";\n"
" done | sort -nr -k 2\n"
" \n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:177 ../fish/guestfish.pod:953
#, no-wrap
msgid ""
" guestfish --remote exit\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:179
msgid "Get DHCP address from a VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:181
msgid ""
"The link below explains the many different possible techniques for getting "
"the last assigned DHCP address of a virtual machine."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:184
msgid "https://rwmj.wordpress.com/2011/03/31/tip-code-for-getting-dhcp-address-from-a-virtual-machine-disk-image/#content"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:186
msgid ""
"In the libguestfs source examples directory you will find the latest version "
"of the C<virt-dhcp-address.c> program."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:189
msgid "Get the operating system product name string"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:191
msgid "Save the following script into a file called C<product-name.sh>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:193
#, no-wrap
msgid ""
" #!/bin/sh -\n"
" set -e\n"
" eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
" root=\"$(guestfish --remote inspect-get-roots)\"\n"
" guestfish --remote inspect-get-product-name \"$root\"\n"
" guestfish --remote exit\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:200
msgid "Make the script executable and run it on a named guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:202
#, no-wrap
msgid ""
" # product-name.sh RHEL60x64\n"
" Red Hat Enterprise Linux Server release 6.0 (Santiago)\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:205
msgid ""
"You can also use an XPath query on the L<virt-inspector(1)> XML using the "
"C<xpath> command line tool or from your favourite programming language:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:209
#, no-wrap
msgid ""
" # virt-inspector RHEL60x64 > xml\n"
" # xpath '//product_name' < xml\n"
" Found 1 nodes:\n"
" -- NODE --\n"
" <product_name>Red Hat Enterprise Linux Server release 6.0 "
"(Santiago)</product_name>\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:215
msgid "Get the default boot kernel for a Linux VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:217
msgid ""
"The link below contains a program to print the default boot kernel for a "
"Linux VM."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:220
msgid "https://rwmj.wordpress.com/2010/10/30/tip-use-augeas-to-get-the-default-boot-kernel-for-a-vm/#content"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:222
msgid ""
"It uses Augeas, and the technique is generally applicable for many different "
"tasks, such as:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:229
msgid "listing the user accounts in the guest"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:233
msgid "what repositories is it configured to use"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:237
msgid "what NTP servers does it connect to"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:241
msgid "what were the boot messages last time it booted"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:245
msgid "listing who was logged in recently"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:249
msgid "http://augeas.net/"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:251
msgid "Install RPMs in a guest"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:253
msgid ""
"The link below contains a method to install RPMs in a guest.  In fact the "
"RPMs are just uploaded to the guest along with a \"firstboot\" script that "
"installs them next time the guest is booted.  You could use this technique "
"to install vital security updates in an offline guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:259
msgid "https://rwmj.wordpress.com/2010/12/01/tip-install-rpms-in-a-guest/#content"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:261
msgid "List applications installed in a VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:263
msgid "Save the following to a file C<list-apps.sh>:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:265
#, no-wrap
msgid ""
" #!/bin/sh -\n"
" set -e\n"
" eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
" root=\"$(guestfish --remote inspect-get-roots)\"\n"
" guestfish --remote inspect-list-applications \"$root\"\n"
" guestfish --remote exit\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:272
msgid ""
"Make the file executable and then you can run it on any named virtual "
"machine:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:275
#, no-wrap
msgid ""
" # list-apps.sh WinGuest\n"
" [0] = {\n"
"   app_name: Mozilla Firefox (3.6.12)\n"
"   app_display_name: Mozilla Firefox (3.6.12)\n"
"   app_epoch: 0\n"
"   app_version: 3.6.12 (en-GB)\n"
"   app_release:\n"
"   app_install_path: C:\\Program Files\\Mozilla Firefox\n"
"   app_trans_path:\n"
"   app_publisher: Mozilla\n"
"   app_url: http://www.mozilla.com/en-GB/\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description: Mozilla Firefox\n"
" }\n"
" [1] = {\n"
"   app_name: VLC media player\n"
"   app_display_name: VLC media player 1.1.5\n"
"   app_epoch: 0\n"
"   app_version: 1.1.5\n"
"   app_release:\n"
"   app_install_path: C:\\Program Files\\VideoLAN\\VLC\n"
"   app_trans_path:\n"
"   app_publisher: VideoLAN\n"
"   app_url: http://www.videolan.org/\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description:\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:305
msgid ""
"If you want to run the script on disk images (instead of libvirt virtual "
"machines), change C<-d \"$1\"> to C<-a \"$1\">.  See also "
"L<virt-inspector(1)>."
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:309
msgid "List files and directories in a VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:311
msgid "This involves using the L<guestfish(1)> C<find0> command like this:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:313
#, no-wrap
msgid ""
" guestfish --ro -d Guest -i find0 / - | tr '\\0' '\\n' | sort\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:315
msgid "List services in a Windows VM"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:317
msgid ""
"The link below contains a script that can be used to list out the services "
"from a Windows VM, and whether those services run at boot time or are loaded "
"on demand."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:321
msgid "https://rwmj.wordpress.com/2010/12/10/tip-list-services-in-a-windows-guest/#content"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:323
msgid "Make a disk image sparse"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:325
msgid ""
"The link below contains some guides for making a disk image sparse (or "
"reintroducing sparseness)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:328
msgid "https://rwmj.wordpress.com/2010/10/19/tip-making-a-disk-image-sparse/#content"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:330
msgid "Monitor disk usage over time"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:332
msgid ""
"You can use L<virt-df(1)> to monitor disk usage of your guests over time.  "
"The link below contains a guide."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:335
msgid "http://virt-tools.org/learning/advanced-virt-df/"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:337
msgid "Reading the Windows Event Log from Windows Vista (or later)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:339
msgid ""
"L<guestfish(1)> plus the tools described in the link below can be used to "
"read out the Windows Event Log from any virtual machine running Windows "
"Vista or a later version."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:343
msgid "https://rwmj.wordpress.com/2011/04/17/decoding-the-windows-event-log-using-guestfish/#content"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:345
msgid "Remove root password (Linux)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:347
msgid ""
"Using the L<virt-edit(1)> I<-e> option you can do simple replacements on "
"files.  One use is to remove the root password from a Linux guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-recipes.pod:350
#, no-wrap
msgid ""
" virt-edit domname /etc/passwd -e 's/^root:.*?:/root::/'\n"
"\n"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:352
msgid "Remove Administrator password (Windows)"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:354
msgid ""
"The link below contains one technique for removing the Administrator "
"password from a Windows VM, or to be more precise, it gives you a command "
"prompt the next time you log in which you can use to bypass any security:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:359
msgid "https://mdbooth.wordpress.com/2010/10/18/resetting-a-windows-guests-administrator-password-with-guestfish/"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:361
msgid "Unpack a live CD"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:363
msgid ""
"Linux live CDs often contain multiple layers of disk images wrapped like a "
"Russian doll.  You can use L<guestfish(1)> to look inside these multiple "
"layers, as outlined in the guide below."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:367
msgid "https://rwmj.wordpress.com/2009/07/15/unpack-the-russian-doll-of-a-f11-live-cd/#content"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:369
msgid "Uploading and downloading files"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:371
msgid ""
"The link below contains general tips on uploading (copying in)  and "
"downloading (copying out) files from VMs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:374
msgid "https://rwmj.wordpress.com/2010/12/02/tip-uploading-and-downloading/#content"
msgstr ""

#. type: =head1
#: ../examples/guestfs-recipes.pod:376
msgid "Use libguestfs tools on VMware ESX guests"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:378
msgid ""
"The link below explains how to use libguestfs, L<guestfish(1)> and the virt "
"tools on any VMware ESX guests, by first sharing the VMware VMFS over sshfs."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:382
msgid "https://rwmj.wordpress.com/2011/05/10/tip-use-libguestfs-on-vmware-esx-guests/#content"
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:386
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<guestfs-examples(3)>, "
"L<guestfs-erlang(3)>, L<guestfs-java(3)>, L<guestfs-ocaml(3)>, "
"L<guestfs-perl(3)>, L<guestfs-python(3)>, L<guestfs-ruby(3)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-recipes.pod:403
msgid "Copyright (C) 2009-2012 Red Hat Inc. L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:5
msgid "guestfs-testing - manual testing of libguestfs, you can help!"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:9
msgid ""
"This page has manual tests you can try on libguestfs.  Everyone has a "
"slightly different combination of platform, hardware and guests, so this "
"testing is very valuable.  Thanks for helping out!"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:13
msgid "These tests require libguestfs E<ge> 1.14."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:15
msgid ""
"Tests marked with a B<*> (asterisk) can B<destroy data> if you're not "
"careful.  The others are safe and won't modify anything."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:18
msgid "You can report bugs you find through this link:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:20
msgid "https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:22
msgid ""
"or post on the mailing list (registration is B<not> required, but if you're "
"not registered then you'll have to wait for a moderator to manually approve "
"your message):"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:26
msgid "https://www.redhat.com/mailman/listinfo/libguestfs"
msgstr ""

#. type: =head1
#: ../examples/guestfs-testing.pod:28
msgid "TESTS"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:30
msgid "Check KVM acceleration is being used."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:32
msgid ""
"If your host has hardware virt acceleration, then with a hot cache "
"libguestfs should be able to start up in a few seconds.  Run the following "
"command a few times:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:38
msgid ""
"After a few runs, the time should settle down to a few seconds (under 5 "
"seconds on fast 64 bit hardware)."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:41
msgid "How to check for hardware virt:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:45
msgid "If the command above does not work at all, use L<libguestfs-test-tool(1)>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:48
msgid "Run virt-alignment-scan on all your guests."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:50
msgid "Run L<virt-alignment-scan(1)> on guests or disk images:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:52
#, no-wrap
msgid ""
" virt-alignment-scan -a /path/to/disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:54 ../examples/guestfs-testing.pod:161 ../examples/guestfs-testing.pod:174 ../examples/guestfs-testing.pod:234 ../src/guestfs.pod:2860
msgid "or:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:56
#, no-wrap
msgid ""
" virt-alignment-scan -d Guest\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:58
msgid "Does the alignment report match how the guest partitions are aligned?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:60
msgid "Run virt-cat on some files in guests."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:62
msgid "L<virt-cat(1)> can display files from guests.  For a Linux guest, try:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:64
#, no-wrap
msgid ""
" virt-cat LinuxGuest /etc/passwd\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:66
msgid "A recent feature is support for Windows paths, for example:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:68
#, no-wrap
msgid ""
" virt-cat WindowsGuest 'c:\\windows\\win.ini'\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:70
msgid ""
"An even better test is if you have a Windows guest with multiple drives.  Do "
"C<D:>, C<E:> etc paths work correctly?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:73
msgid "B<*> Copy some files into a B<shut off> guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:75
msgid ""
"L<virt-copy-in(1)> can recursively copy files and directories into a guest "
"or disk image."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:78
#, no-wrap
msgid ""
" virt-copy-in -d Guest /etc /tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:80
msgid ""
"This should copy local directory C</etc> to C</tmp/etc> in the guest "
"(recursively).  If you boot the guest, can you see all of the copied files "
"and directories?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:84
msgid "Shut the guest down and try copying multiple files and directories:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:86
#, no-wrap
msgid ""
" virt-copy-in -d Guest /home /etc/issue /tmp\n"
"\n"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:88
msgid "Copy some files out of a guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:90
msgid ""
"L<virt-copy-out(1)> can recursively copy files and directories out of a "
"guest or disk image."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:95
msgid "Note the final space and period in the command is not a typo."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:97
msgid "This should copy C</home> from the guest into the current directory."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:99
msgid "Run virt-df."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:101
msgid "L<virt-df(1)> lists disk space.  Run:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:103
#, no-wrap
msgid ""
" virt-df\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:105
msgid ""
"You can try comparing this to the results from L<df(1)> inside the guest, "
"but there are some provisos:"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:112
msgid "The guest must be idle."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:116
msgid "The guest disks must be synched using L<sync(1)>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:120
msgid ""
"Any action such as booting the guest will write log files causing the "
"numbers to change."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:125
msgid ""
"We don't guarantee that the numbers will be identical even under these "
"circumstances.  They should be similar.  It would indicate a bug if you saw "
"greatly differing numbers."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:129
msgid "Try importing virt-df CSV output into a spreadsheet or database."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:131 ../src/guestfs.pod:3141
msgid "Run:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:133
#, no-wrap
msgid ""
" virt-df --csv > /tmp/report.csv\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:135
msgid ""
"Now try to load this into your favorite spreadsheet or database.  Are the "
"results reproduced faithfully in the spreadsheet/database?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:138
msgid ""
"http://www.postgresql.org/docs/8.1/static/sql-copy.html "
"http://dev.mysql.com/doc/refman/5.1/en/load-data.html"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:141
msgid "B<*> Edit a file in a B<shut off> guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:143
msgid ""
"L<virt-edit(1)> can edit files in guests.  Try this command on a RHEL or "
"Fedora guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:146
#, no-wrap
msgid ""
" virt-edit LinuxGuest /etc/sysconfig/network\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:148
msgid "On other Linux guests try editing other files such as:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:150
#, no-wrap
msgid ""
" virt-edit LinuxGuest /etc/motd\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:152
msgid "Are the changes seen inside the guest when it is booted?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:154
msgid "Display the filesystems / partitions / LVs in a guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:156
msgid ""
"L<virt-filesystems(1)> can be used to display filesystems in a guest.  Try "
"this command on any disk image or guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:159
#, no-wrap
msgid ""
" virt-filesystems -a /path/to/disk.img --all --long -h\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:163
#, no-wrap
msgid ""
" virt-filesystems -d Guest --all --long -h\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:165
msgid "Do the results match what is seen in the guest?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:167
msgid "Run virt-inspector on all your guests."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:169
msgid ""
"Use L<virt-inspector(1)> to get a report on all of your guests or disk "
"images:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:172
#, no-wrap
msgid ""
" virt-inspector -a /path/to/disk.img | less\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:176
#, no-wrap
msgid ""
" virt-inspector -d Guest | less\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:178
msgid "Do the results match what is actually in the guest?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:180
msgid "Try the auditing features of virt-ls on all your guests."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:184
#, no-wrap
msgid ""
" virt-ls -lR -d Guest / | grep '^- [42]'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:188
#, no-wrap
msgid ""
" virt-ls -lR -d Guest / | grep '^d ...7'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:192
#, no-wrap
msgid ""
" virt-ls -lR -d Guest / | grep '^s'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:196
#, no-wrap
msgid ""
" virt-ls -lR -d Guest / | grep -i '^-.*\\.png$'\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:198
msgid "Display files larger than 10MB in home directories:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:200
#, no-wrap
msgid ""
" virt-ls -lR -d Guest /home | awk '$3 > 10*1024*1024'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:204
#, no-wrap
msgid ""
" virt-ls -lR -d Guest --time-days / | awk '$6 <= 7'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:208
#, no-wrap
msgid ""
" virt-ls -lR -d Guest --time-days / | grep '^-' | awk '$6 < 1'\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:210
msgid "Do the results match what is in the guest?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:212
msgid "Create a disk image from a tarball."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:214
msgid ""
"Use L<virt-make-fs(1)> to create a disk image from any tarball that you "
"happen to have:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:217
#, no-wrap
msgid ""
" virt-make-fs --partition=mbr --type=vfat /any/tarball.tar.gz output.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:219
msgid ""
"Add 'output.img' as a raw disk to an existing guest.  Check the guest can "
"see the files.  This test is particularly useful if you try it with a "
"Windows guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:223
msgid "Try other partitioning schemes, eg. I<--partition=gpt>."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:225
msgid "Try other filesystem formats, eg. I<--type=ntfs>, I<--type=ext2>."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:227
msgid "B<*> Run virt-rescue on a B<shut off> disk image or guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:229
msgid ""
"Use L<virt-rescue(1)> to examine, rescue or repair a B<shut off> guest or "
"disk image:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:232
#, no-wrap
msgid ""
" virt-rescue -a /path/to/disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:236
#, no-wrap
msgid ""
" virt-rescue -d Guest\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:238
msgid "Can you use ordinary shell commands to examine the guest?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:240
msgid "B<*> Resize your guests."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:242
msgid ""
"Use L<virt-resize(1)> to give a guest some more disk space.  For example, if "
"you have a disk image that is smaller than 30G, increase it to 30G by doing:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:246
#, no-wrap
msgid ""
" truncate -s 30G newdisk.img\n"
" virt-filesystems -a /path/to/olddisk.img --all --long -h\n"
" virt-resize /path/to/olddisk.img newdisk.img --expand /dev/sda1\n"
" qemu-kvm -m 1024 -hda newdisk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:251
msgid "Does the guest still boot? Try expanding other partitions."
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:253
msgid "B<*> Sparsify a guest disk."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:255
msgid "Using L<virt-sparsify(1)>, make a disk image more sparse:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:257
#, no-wrap
msgid ""
" virt-sparsify /path/to/olddisk.img newdisk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:259
msgid ""
"Is C<newdisk.img> still bootable after sparsifying? Is the resulting disk "
"image smaller (use C<du> to check)?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:262
msgid "B<*> \"sysprep\" a B<shut off> Linux guest."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:264
msgid ""
"Note that this really will mess up an existing guest, so it's better to "
"clone the guest before trying this."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:267
#, no-wrap
msgid ""
" virt-sysprep --hostname newhost.example.com -a /path/to/disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:269
msgid ""
"Was the sysprep successful? After booting, what changes were made and were "
"they successful?"
msgstr ""

#. type: =head2
#: ../examples/guestfs-testing.pod:272
msgid "Dump the Windows Registry from your Windows guests."
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:274
msgid ""
"Use L<virt-win-reg(1)> to dump out the Windows Registry from any Windows "
"guests that you have."
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:277
#, no-wrap
msgid ""
" virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\Software' |\n"
"   less\n"
"\n"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:280
#, no-wrap
msgid ""
" virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\System' |\n"
"   less\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:283
msgid "Does the output match running C<regedit> inside the guest?"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:285
msgid ""
"A recent feature is the ability to dump user registries, so try this, "
"replacing I<username> with the name of a local user in the guest:"
msgstr ""

#. type: verbatim
#: ../examples/guestfs-testing.pod:288
#, no-wrap
msgid ""
" virt-win-reg --unsafe-printable-strings WindowsGuest 'HKEY_USERS\\username' "
"|\n"
"   less\n"
"\n"
msgstr ""

#. type: textblock
#: ../examples/guestfs-testing.pod:293
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<guestfs-examples(3)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1
msgid "add-cdrom"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3
#, no-wrap
msgid ""
" add-cdrom filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5 ../src/guestfs-actions.pod:14
msgid "This function adds a virtual CD-ROM disk image to the guest."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:7 ../src/guestfs-actions.pod:16
msgid "This is equivalent to the qemu parameter I<-cdrom filename>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:15
msgid ""
"This call checks for the existence of C<filename>.  This stops you from "
"specifying other types of drive which are supported by qemu such as C<nbd:> "
"and C<http:> URLs.  To specify those, use the general L</config> call "
"instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:22
msgid ""
"If you just want to add an ISO file (often you use this as an efficient way "
"to transfer large files into the guest), then you should probably use "
"L</add-drive-ro> instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:28 ../fish/guestfish-actions.pod:214 ../fish/guestfish-actions.pod:228
msgid ""
"I<This function is deprecated.> In new code, use the L</add_drive_opts> call "
"instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:31 ../fish/guestfish-actions.pod:217 ../fish/guestfish-actions.pod:231 ../fish/guestfish-actions.pod:1051 ../fish/guestfish-actions.pod:1086 ../fish/guestfish-actions.pod:1223 ../fish/guestfish-actions.pod:1291 ../fish/guestfish-actions.pod:1777 ../fish/guestfish-actions.pod:1791 ../fish/guestfish-actions.pod:3762 ../fish/guestfish-actions.pod:4188 ../fish/guestfish-actions.pod:4236 ../fish/guestfish-actions.pod:4964 ../fish/guestfish-actions.pod:5212 ../fish/guestfish-actions.pod:5232 ../fish/guestfish-actions.pod:5251 ../fish/guestfish-actions.pod:5289 ../fish/guestfish-actions.pod:6051 ../fish/guestfish-actions.pod:6167 ../src/guestfs-actions.pod:10 ../src/guestfs-actions.pod:305 ../src/guestfs-actions.pod:326 ../src/guestfs-actions.pod:1802 ../src/guestfs-actions.pod:1859 ../src/guestfs-actions.pod:2100 ../src/guestfs-actions.pod:2209 ../src/guestfs-actions.pod:2847 ../src/guestfs-actions.pod:2868 ../src/guestfs-actions.pod:5812 ../src/guestfs-actions.pod:6610 ../src/guestfs-actions.pod:6710 ../src/guestfs-actions.pod:7804 ../src/guestfs-actions.pod:8115 ../src/guestfs-actions.pod:8156 ../src/guestfs-actions.pod:8187 ../src/guestfs-actions.pod:8247 ../src/guestfs-actions.pod:9362 ../src/guestfs-actions.pod:9490 ../src/guestfs-actions.pod:9694
msgid ""
"Deprecated functions will not be removed from the API, but the fact that "
"they are deprecated indicates that there are problems with correct use of "
"these functions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:35
msgid "add-domain"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:37
msgid "domain"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:39
#, no-wrap
msgid ""
" add-domain dom [libvirturi:..] [readonly:true|false] [iface:..] "
"[live:true|false] [allowuuid:true|false] [readonlydisk:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:41
msgid ""
"This function adds the disk(s) attached to the named libvirt domain C<dom>.  "
"It works by connecting to libvirt, requesting the domain and domain XML from "
"libvirt, parsing it for disks, and calling L</add-drive-opts> on each one."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:46 ../src/guestfs-actions.pod:65
msgid ""
"The number of disks added is returned.  This operation is atomic: if an "
"error is returned, then no disks are added."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:49 ../src/guestfs-actions.pod:68
msgid ""
"This function does some minimal checks to make sure the libvirt domain is "
"not running (unless C<readonly> is true).  In a future version we will try "
"to acquire the libvirt lock on each disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:53 ../src/guestfs-actions.pod:72
msgid ""
"Disks must be accessible locally.  This often means that adding disks from a "
"remote libvirt connection (see L<http://libvirt.org/remote.html>)  will fail "
"unless those disks are accessible via the same device path locally too."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:58 ../src/guestfs-actions.pod:77
msgid ""
"The optional C<libvirturi> parameter sets the libvirt URI (see "
"L<http://libvirt.org/uri.html>).  If this is not set then we connect to the "
"default libvirt URI (or one set through an environment variable, see the "
"libvirt documentation for full details)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:64 ../src/guestfs-actions.pod:83
msgid ""
"The optional C<live> flag controls whether this call will try to connect to "
"a running virtual machine C<guestfsd> process if it sees a suitable "
"E<lt>channelE<gt> element in the libvirt XML definition.  The default (if "
"the flag is omitted) is never to try.  See L<guestfs(3)/ATTACHING TO RUNNING "
"DAEMONS> for more information."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:71 ../src/guestfs-actions.pod:90
msgid ""
"If the C<allowuuid> flag is true (default is false) then a UUID I<may> be "
"passed instead of the domain name.  The C<dom> string is treated as a UUID "
"first and looked up, and if that lookup fails then we treat C<dom> as a name "
"as usual."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:76 ../src/guestfs-actions.pod:95
msgid ""
"The optional C<readonlydisk> parameter controls what we do for disks which "
"are marked E<lt>readonly/E<gt> in the libvirt XML.  Possible values are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:82 ../src/guestfs-actions.pod:101
msgid "readonlydisk = \"error\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:84 ../fish/guestfish-actions.pod:95 ../fish/guestfish-actions.pod:106 ../src/guestfs-actions.pod:103 ../src/guestfs-actions.pod:114 ../src/guestfs-actions.pod:125
msgid "If C<readonly> is false:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:86 ../src/guestfs-actions.pod:105
msgid ""
"The whole call is aborted with an error if any disk with the "
"E<lt>readonly/E<gt> flag is found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:89 ../fish/guestfish-actions.pod:100 ../fish/guestfish-actions.pod:110 ../src/guestfs-actions.pod:108 ../src/guestfs-actions.pod:119 ../src/guestfs-actions.pod:129
msgid "If C<readonly> is true:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:91 ../fish/guestfish-actions.pod:102 ../fish/guestfish-actions.pod:112 ../src/guestfs-actions.pod:110 ../src/guestfs-actions.pod:121 ../src/guestfs-actions.pod:131
msgid "Disks with the E<lt>readonly/E<gt> flag are added read-only."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:93 ../src/guestfs-actions.pod:112
msgid "readonlydisk = \"read\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:97 ../src/guestfs-actions.pod:116
msgid ""
"Disks with the E<lt>readonly/E<gt> flag are added read-only.  Other disks "
"are added read/write."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:104 ../src/guestfs-actions.pod:123
msgid "readonlydisk = \"write\" (default)"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:108 ../src/guestfs-actions.pod:127
msgid "Disks with the E<lt>readonly/E<gt> flag are added read/write."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:114 ../src/guestfs-actions.pod:133
msgid "readonlydisk = \"ignore\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:116 ../src/guestfs-actions.pod:135
msgid "If C<readonly> is true or false:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:118 ../src/guestfs-actions.pod:137
msgid "Disks with the E<lt>readonly/E<gt> flag are skipped."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:122
msgid ""
"The other optional parameters are passed directly through to "
"L</add-drive-opts>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:125 ../fish/guestfish-actions.pod:194 ../fish/guestfish-actions.pod:676 ../fish/guestfish-actions.pod:691 ../fish/guestfish-actions.pod:945 ../fish/guestfish-actions.pod:966 ../fish/guestfish-actions.pod:1004 ../fish/guestfish-actions.pod:1013 ../fish/guestfish-actions.pod:1022 ../fish/guestfish-actions.pod:1036 ../fish/guestfish-actions.pod:1210 ../fish/guestfish-actions.pod:2453 ../fish/guestfish-actions.pod:3539 ../fish/guestfish-actions.pod:3778 ../fish/guestfish-actions.pod:3825 ../fish/guestfish-actions.pod:3988 ../fish/guestfish-actions.pod:4018 ../fish/guestfish-actions.pod:4150 ../fish/guestfish-actions.pod:4166 ../fish/guestfish-actions.pod:4224 ../fish/guestfish-actions.pod:4940 ../fish/guestfish-actions.pod:5653 ../fish/guestfish-actions.pod:5735
msgid ""
"This command has one or more optional arguments.  See L</OPTIONAL "
"ARGUMENTS>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:127
msgid "add-drive"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:129
#, no-wrap
msgid ""
" add-drive filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:131
msgid ""
"This function is the equivalent of calling L</add-drive-opts> with no "
"optional parameters, so the disk is added writable, with the format being "
"detected automatically."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:135
msgid ""
"Automatic detection of the format opens you up to a potential security hole "
"when dealing with untrusted raw-format images.  See CVE-2010-3851 and "
"RHBZ#642934.  Specifying the format closes this security hole.  Therefore "
"you should think about replacing calls to this function with calls to "
"L</add-drive-opts>, and specifying the format."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:142
msgid "add-drive-opts"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:144
msgid "add"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:146
#, no-wrap
msgid ""
" add-drive-opts filename [readonly:true|false] [format:..] [iface:..] "
"[name:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:148 ../src/guestfs-actions.pod:208
msgid ""
"This function adds a virtual machine disk image C<filename> to libguestfs.  "
"The first time you call this function, the disk appears as C</dev/sda>, the "
"second time as C</dev/sdb>, and so on."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:153 ../src/guestfs-actions.pod:213
msgid ""
"You don't necessarily need to be root when using libguestfs.  However you "
"obviously do need sufficient permissions to access the filename for whatever "
"operations you want to perform (ie. read access if you just want to read the "
"image or write access if you want to modify the image)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:159 ../src/guestfs-actions.pod:219
msgid "This call checks that C<filename> exists."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:161 ../fish/guestfish-actions.pod:3787 ../src/guestfs-actions.pod:221 ../src/guestfs-actions.pod:5904
msgid "The optional arguments are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:165 ../src/guestfs-actions.pod:225
msgid "C<readonly>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:167 ../src/guestfs-actions.pod:227
msgid ""
"If true then the image is treated as read-only.  Writes are still allowed, "
"but they are stored in a temporary snapshot overlay which is discarded at "
"the end.  The disk that you add is not modified."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:171 ../src/guestfs-actions.pod:231 ../src/guestfs.pod:3020
msgid "C<format>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:173
msgid ""
"This forces the image format.  If you omit this (or use L</add-drive> or "
"L</add-drive-ro>) then the format is automatically detected.  Possible "
"formats include C<raw> and C<qcow2>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:177 ../src/guestfs-actions.pod:237
msgid ""
"Automatic detection of the format opens you up to a potential security hole "
"when dealing with untrusted raw-format images.  See CVE-2010-3851 and "
"RHBZ#642934.  Specifying the format closes this security hole."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:182 ../src/guestfs-actions.pod:242
msgid "C<iface>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:184
msgid ""
"This rarely-used option lets you emulate the behaviour of the deprecated "
"L</add-drive-with-if> call (q.v.)"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:187 ../fish/guestfish-actions.pod:3567 ../src/guestfs-actions.pod:247 ../src/guestfs-actions.pod:5509
msgid "C<name>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:189 ../src/guestfs-actions.pod:249
msgid ""
"The name the drive had in the original guest, e.g. /dev/sdb. This is used as "
"a hint to the guest inspection process if it is available."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:196
msgid "add-drive-ro"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:198
msgid "add-ro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:200
#, no-wrap
msgid ""
" add-drive-ro filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:202
msgid ""
"This function is the equivalent of calling L</add-drive-opts> with the "
"optional parameter C<GUESTFS_ADD_DRIVE_OPTS_READONLY> set to 1, so the disk "
"is added read-only, with the format being detected automatically."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:207
msgid "add-drive-ro-with-if"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:209
#, no-wrap
msgid ""
" add-drive-ro-with-if filename iface\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:211
msgid ""
"This is the same as L</add-drive-ro> but it allows you to specify the QEMU "
"interface emulation to use at run time."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:221
msgid "add-drive-with-if"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:223
#, no-wrap
msgid ""
" add-drive-with-if filename iface\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:225
msgid ""
"This is the same as L</add-drive> but it allows you to specify the QEMU "
"interface emulation to use at run time."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:235
msgid "aug-clear"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:237
#, no-wrap
msgid ""
" aug-clear augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:239 ../src/guestfs-actions.pod:343
msgid ""
"Set the value associated with C<path> to C<NULL>.  This is the same as the "
"L<augtool(1)> C<clear> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:242
msgid "aug-close"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:244
#, no-wrap
msgid ""
" aug-close\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:246
msgid ""
"Close the current Augeas handle and free up any resources used by it.  After "
"calling this, you have to call L</aug-init> again before you can use any "
"other Augeas functions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:251
msgid "aug-defnode"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:253
#, no-wrap
msgid ""
" aug-defnode name expr val\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:255 ../src/guestfs-actions.pod:372
msgid "Defines a variable C<name> whose value is the result of evaluating C<expr>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:258
msgid ""
"If C<expr> evaluates to an empty nodeset, a node is created, equivalent to "
"calling L</aug-set> C<expr>, C<value>.  C<name> will be the nodeset "
"containing that single node."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:262 ../src/guestfs-actions.pod:379
msgid ""
"On success this returns a pair containing the number of nodes in the "
"nodeset, and a boolean flag if a node was created."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:266
msgid "aug-defvar"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:268
#, no-wrap
msgid ""
" aug-defvar name expr\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:270 ../src/guestfs-actions.pod:396
msgid ""
"Defines an Augeas variable C<name> whose value is the result of evaluating "
"C<expr>.  If C<expr> is NULL, then C<name> is undefined."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:274 ../src/guestfs-actions.pod:400
msgid ""
"On success this returns the number of nodes in C<expr>, or C<0> if C<expr> "
"evaluates to something which is not a nodeset."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:277
msgid "aug-get"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:279
#, no-wrap
msgid ""
" aug-get augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:281 ../src/guestfs-actions.pod:413
msgid ""
"Look up the value associated with C<path>.  If C<path> matches exactly one "
"node, the C<value> is returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:284
msgid "aug-init"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:286
#, no-wrap
msgid ""
" aug-init root flags\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:288 ../src/guestfs-actions.pod:428
msgid ""
"Create a new Augeas handle for editing configuration files.  If there was "
"any previous Augeas handle associated with this guestfs session, then it is "
"closed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:292
msgid "You must call this before using any other L</aug-*> commands."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:295 ../src/guestfs-actions.pod:435
msgid "C<root> is the filesystem root.  C<root> must not be NULL, use C</> instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:298 ../src/guestfs-actions.pod:438
msgid ""
"The flags are the same as the flags defined in E<lt>augeas.hE<gt>, the "
"logical I<or> of the following integers:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:304 ../src/guestfs-actions.pod:444
msgid "C<AUG_SAVE_BACKUP> = 1"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:306 ../src/guestfs-actions.pod:446
msgid "Keep the original file with a C<.augsave> extension."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:308 ../src/guestfs-actions.pod:448
msgid "C<AUG_SAVE_NEWFILE> = 2"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:310 ../src/guestfs-actions.pod:450
msgid ""
"Save changes into a file with extension C<.augnew>, and do not overwrite "
"original.  Overrides C<AUG_SAVE_BACKUP>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:313 ../src/guestfs-actions.pod:453
msgid "C<AUG_TYPE_CHECK> = 4"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:315 ../src/guestfs-actions.pod:455
msgid "Typecheck lenses."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:317
msgid ""
"This option is only useful when debugging Augeas lenses.  Use of this option "
"may require additional memory for the libguestfs appliance.  You may need to "
"set the C<LIBGUESTFS_MEMSIZE> environment variable or call L</set-memsize>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:322 ../src/guestfs-actions.pod:462
msgid "C<AUG_NO_STDINC> = 8"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:324 ../src/guestfs-actions.pod:464
msgid "Do not use standard load path for modules."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:326 ../src/guestfs-actions.pod:466
msgid "C<AUG_SAVE_NOOP> = 16"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:328 ../src/guestfs-actions.pod:468
msgid "Make save a no-op, just record what would have been changed."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:330 ../src/guestfs-actions.pod:470
msgid "C<AUG_NO_LOAD> = 32"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:332
msgid "Do not load the tree in L</aug-init>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:336
msgid "To close the handle, you can call L</aug-close>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:338 ../src/guestfs-actions.pod:478
msgid "To find out more about Augeas, see L<http://augeas.net/>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:340
msgid "aug-insert"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:342
#, no-wrap
msgid ""
" aug-insert augpath label true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:344 ../src/guestfs-actions.pod:492
msgid ""
"Create a new sibling C<label> for C<path>, inserting it into the tree before "
"or after C<path> (depending on the boolean flag C<before>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:348 ../src/guestfs-actions.pod:496
msgid ""
"C<path> must match exactly one existing node in the tree, and C<label> must "
"be a label, ie. not contain C</>, C<*> or end with a bracketed index C<[N]>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:352
msgid "aug-load"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:354
#, no-wrap
msgid ""
" aug-load\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:356 ../src/guestfs-actions.pod:509
msgid "Load files into the tree."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:358 ../src/guestfs-actions.pod:511
msgid "See C<aug_load> in the Augeas documentation for the full gory details."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:361
msgid "aug-ls"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:363
#, no-wrap
msgid ""
" aug-ls augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:365
msgid ""
"This is just a shortcut for listing L</aug-match> C<path/*> and sorting the "
"resulting nodes into alphabetical order."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:368
msgid "aug-match"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:370
#, no-wrap
msgid ""
" aug-match augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:372 ../src/guestfs-actions.pod:539
msgid ""
"Returns a list of paths which match the path expression C<path>.  The "
"returned paths are sufficiently qualified so that they match exactly one "
"node in the current tree."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:376
msgid "aug-mv"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:378
#, no-wrap
msgid ""
" aug-mv src dest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:380 ../src/guestfs-actions.pod:556
msgid ""
"Move the node C<src> to C<dest>.  C<src> must match exactly one node.  "
"C<dest> is overwritten if it exists."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:383
msgid "aug-rm"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:385
#, no-wrap
msgid ""
" aug-rm augpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:387 ../src/guestfs-actions.pod:569
msgid "Remove C<path> and all of its children."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:389 ../src/guestfs-actions.pod:571
msgid "On success this returns the number of entries which were removed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:391
msgid "aug-save"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:393
#, no-wrap
msgid ""
" aug-save\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:395 ../src/guestfs-actions.pod:582
msgid "This writes all pending changes to disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:397
msgid ""
"The flags which were passed to L</aug-init> affect exactly how files are "
"saved."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:400
msgid "aug-set"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:402
#, no-wrap
msgid ""
" aug-set augpath val\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:404 ../src/guestfs-actions.pod:598
msgid "Set the value associated with C<path> to C<val>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:406
msgid ""
"In the Augeas API, it is possible to clear a node by setting the value to "
"NULL.  Due to an oversight in the libguestfs API you cannot do that with "
"this call.  Instead you must use the L</aug-clear> call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:411
msgid "available"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:413
#, no-wrap
msgid ""
" available 'groups ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:415 ../src/guestfs-actions.pod:615
msgid ""
"This command is used to check the availability of some groups of "
"functionality in the appliance, which not all builds of the libguestfs "
"appliance will be able to provide."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:419
msgid ""
"The libguestfs groups, and the functions that those groups correspond to, "
"are listed in L<guestfs(3)/AVAILABILITY>.  You can also fetch this list at "
"runtime by calling L</available-all-groups>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:424 ../src/guestfs-actions.pod:624
msgid ""
"The argument C<groups> is a list of group names, eg: C<[\"inotify\", "
"\"augeas\"]> would check for the availability of the Linux inotify functions "
"and Augeas (configuration file editing) functions."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:429 ../src/guestfs-actions.pod:629
msgid "The command returns no error if I<all> requested groups are available."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:431 ../src/guestfs-actions.pod:631
msgid ""
"It fails with an error if one or more of the requested groups is unavailable "
"in the appliance."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:434 ../src/guestfs-actions.pod:634
msgid ""
"If an unknown group name is included in the list of groups then an error is "
"always returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:437 ../src/guestfs-actions.pod:637
msgid "I<Notes:>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:443
msgid "You must call L</launch> before calling this function."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:445 ../src/guestfs-actions.pod:645
msgid ""
"The reason is because we don't know what groups are supported by the "
"appliance/daemon until it is running and can be queried."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:451 ../src/guestfs-actions.pod:651
msgid ""
"If a group of functions is available, this does not necessarily mean that "
"they will work.  You still have to check for errors when calling individual "
"API functions even if they are available."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:458 ../src/guestfs-actions.pod:658
msgid ""
"It is usually the job of distro packagers to build complete functionality "
"into the libguestfs appliance.  Upstream libguestfs, if built from source "
"with all requirements satisfied, will support everything."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:465
msgid ""
"This call was added in version C<1.0.80>.  In previous versions of "
"libguestfs all you could do would be to speculatively execute a command to "
"find out if the daemon implemented it.  See also L</version>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:472
msgid "available-all-groups"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:474
#, no-wrap
msgid ""
" available-all-groups\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:476
msgid ""
"This command returns a list of all optional groups that this daemon knows "
"about.  Note this returns both supported and unsupported groups.  To find "
"out which ones the daemon can actually support you have to call "
"L</available> on each member of the returned list."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:482
msgid "See also L</available> and L<guestfs(3)/AVAILABILITY>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:484
msgid "base64-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:486
#, no-wrap
msgid ""
" base64-in (base64file|-) filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:488 ../src/guestfs-actions.pod:702
msgid "This command uploads base64-encoded data from C<base64file> to C<filename>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:491 ../fish/guestfish-actions.pod:500 ../fish/guestfish-actions.pod:859 ../fish/guestfish-actions.pod:943 ../fish/guestfish-actions.pod:964 ../fish/guestfish-actions.pod:1135 ../fish/guestfish-actions.pod:1154 ../fish/guestfish-actions.pod:1560 ../fish/guestfish-actions.pod:4127 ../fish/guestfish-actions.pod:4148 ../fish/guestfish-actions.pod:5509 ../fish/guestfish-actions.pod:5521 ../fish/guestfish-actions.pod:5532 ../fish/guestfish-actions.pod:5543 ../fish/guestfish-actions.pod:5674 ../fish/guestfish-actions.pod:5683 ../fish/guestfish-actions.pod:5748 ../fish/guestfish-actions.pod:5771
msgid "Use C<-> instead of a filename to read/write from stdin/stdout."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:493
msgid "base64-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:495
#, no-wrap
msgid ""
" base64-out filename (base64file|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:497 ../src/guestfs-actions.pod:716
msgid ""
"This command downloads the contents of C<filename>, writing it out to local "
"file C<base64file> encoded as base64."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:502
msgid "blkid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:504
#, no-wrap
msgid ""
" blkid device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:506 ../src/guestfs-actions.pod:729
msgid ""
"This command returns block device attributes for C<device>. The following "
"fields are usually present in the returned hash. Other fields may also be "
"present."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:511 ../src/guestfs-actions.pod:734
msgid "C<UUID>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:513 ../src/guestfs-actions.pod:736
msgid "The uuid of this device."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:515 ../src/guestfs-actions.pod:738
msgid "C<LABEL>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:517 ../src/guestfs-actions.pod:740
msgid "The label of this device."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:519 ../src/guestfs-actions.pod:742
msgid "C<VERSION>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:521 ../src/guestfs-actions.pod:744
msgid "The version of blkid command."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:523 ../src/guestfs-actions.pod:746
msgid "C<TYPE>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:525 ../src/guestfs-actions.pod:748
msgid "The filesystem type or RAID of this device."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:527 ../src/guestfs-actions.pod:750
msgid "C<USAGE>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:529 ../src/guestfs-actions.pod:752
msgid "The usage of this device, for example C<filesystem> or C<raid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:533
msgid "blockdev-flushbufs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:535
#, no-wrap
msgid ""
" blockdev-flushbufs device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:537 ../src/guestfs-actions.pod:770
msgid "This tells the kernel to flush internal buffers associated with C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:540 ../fish/guestfish-actions.pod:551 ../fish/guestfish-actions.pod:560 ../fish/guestfish-actions.pod:570 ../fish/guestfish-actions.pod:582 ../fish/guestfish-actions.pod:595 ../fish/guestfish-actions.pod:603 ../fish/guestfish-actions.pod:614 ../fish/guestfish-actions.pod:622 ../fish/guestfish-actions.pod:630 ../src/guestfs-actions.pod:773 ../src/guestfs-actions.pod:790 ../src/guestfs-actions.pod:805 ../src/guestfs-actions.pod:821 ../src/guestfs-actions.pod:839 ../src/guestfs-actions.pod:858 ../src/guestfs-actions.pod:872 ../src/guestfs-actions.pod:890 ../src/guestfs-actions.pod:904 ../src/guestfs-actions.pod:918
msgid "This uses the L<blockdev(8)> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:542
msgid "blockdev-getbsz"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:544
#, no-wrap
msgid ""
" blockdev-getbsz device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:546 ../src/guestfs-actions.pod:785
msgid "This returns the block size of a device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:548 ../fish/guestfish-actions.pod:611 ../src/guestfs-actions.pod:787 ../src/guestfs-actions.pod:887
msgid ""
"(Note this is different from both I<size in blocks> and I<filesystem block "
"size>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:553
msgid "blockdev-getro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:555
#, no-wrap
msgid ""
" blockdev-getro device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:557 ../src/guestfs-actions.pod:802
msgid ""
"Returns a boolean indicating if the block device is read-only (true if "
"read-only, false if not)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:562
msgid "blockdev-getsize64"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:564
#, no-wrap
msgid ""
" blockdev-getsize64 device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:566 ../src/guestfs-actions.pod:817
msgid "This returns the size of the device in bytes."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:568
msgid "See also L</blockdev-getsz>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:572
msgid "blockdev-getss"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:574
#, no-wrap
msgid ""
" blockdev-getss device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:576 ../src/guestfs-actions.pod:833
msgid ""
"This returns the size of sectors on a block device.  Usually 512, but can be "
"larger for modern devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:579
msgid "(Note, this is not the size in sectors, use L</blockdev-getsz> for that)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:584
msgid "blockdev-getsz"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:586
#, no-wrap
msgid ""
" blockdev-getsz device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:588 ../src/guestfs-actions.pod:851
msgid ""
"This returns the size of the device in units of 512-byte sectors (even if "
"the sectorsize isn't 512 bytes ... weird)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:591
msgid ""
"See also L</blockdev-getss> for the real sector size of the device, and "
"L</blockdev-getsize64> for the more useful I<size in bytes>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:597
msgid "blockdev-rereadpt"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:599
#, no-wrap
msgid ""
" blockdev-rereadpt device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:601 ../src/guestfs-actions.pod:870
msgid "Reread the partition table on C<device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:605
msgid "blockdev-setbsz"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:607
#, no-wrap
msgid ""
" blockdev-setbsz device blocksize\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:609 ../src/guestfs-actions.pod:885
msgid "This sets the block size of a device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:616
msgid "blockdev-setro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:618
#, no-wrap
msgid ""
" blockdev-setro device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:620 ../src/guestfs-actions.pod:902
msgid "Sets the block device named C<device> to read-only."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:624
msgid "blockdev-setrw"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:626
#, no-wrap
msgid ""
" blockdev-setrw device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:628 ../src/guestfs-actions.pod:916
msgid "Sets the block device named C<device> to read-write."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:632
msgid "btrfs-device-add"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:634
#, no-wrap
msgid ""
" btrfs-device-add 'devices ...' fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:636 ../src/guestfs-actions.pod:931
msgid ""
"Add the list of device(s) in C<devices> to the btrfs filesystem mounted at "
"C<fs>.  If C<devices> is an empty list, this does nothing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:639
msgid "btrfs-device-delete"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:641
#, no-wrap
msgid ""
" btrfs-device-delete 'devices ...' fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:643 ../src/guestfs-actions.pod:945
msgid ""
"Remove the C<devices> from the btrfs filesystem mounted at C<fs>.  If "
"C<devices> is an empty list, this does nothing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:646
msgid "btrfs-filesystem-balance"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:648
#, no-wrap
msgid ""
" btrfs-filesystem-balance fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:650 ../src/guestfs-actions.pod:958
msgid ""
"Balance the chunks in the btrfs filesystem mounted at C<fs> across the "
"underlying devices."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:653
msgid "btrfs-filesystem-resize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:655
#, no-wrap
msgid ""
" btrfs-filesystem-resize mountpoint [size:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:657 ../src/guestfs-actions.pod:979
msgid "This command resizes a btrfs filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:659 ../src/guestfs-actions.pod:981
msgid ""
"Note that unlike other resize calls, the filesystem has to be mounted and "
"the parameter is the mountpoint not the device (this is a requirement of "
"btrfs itself)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:663 ../fish/guestfish-actions.pod:3488 ../fish/guestfish-actions.pod:4199 ../fish/guestfish-actions.pod:5583 ../src/guestfs-actions.pod:985 ../src/guestfs-actions.pod:5402 ../src/guestfs-actions.pod:6649 ../src/guestfs-actions.pod:8734
msgid "The optional parameters are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:667 ../fish/guestfish-actions.pod:4203 ../src/guestfs-actions.pod:989 ../src/guestfs-actions.pod:6653
msgid "C<size>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:669 ../src/guestfs-actions.pod:991
msgid ""
"The new size (in bytes) of the filesystem.  If omitted, the filesystem is "
"resized to the maximum size."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:674 ../src/guestfs-actions.pod:996
msgid "See also L<btrfs(8)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:678
msgid "btrfs-filesystem-sync"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:680
#, no-wrap
msgid ""
" btrfs-filesystem-sync fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:682 ../src/guestfs-actions.pod:1030
msgid "Force sync on the btrfs filesystem mounted at C<fs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:684
msgid "btrfs-fsck"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:686
#, no-wrap
msgid ""
" btrfs-fsck device [superblock:N] [repair:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:688 ../src/guestfs-actions.pod:1051
msgid ""
"Used to check a btrfs filesystem, C<device> is the device file where the "
"filesystem is stored."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:693
msgid "btrfs-set-seeding"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:695
#, no-wrap
msgid ""
" btrfs-set-seeding device true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:697 ../src/guestfs-actions.pod:1087
msgid ""
"Enable or disable the seeding feature of a device that contains a btrfs "
"filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:700
msgid "btrfs-subvolume-create"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:702
#, no-wrap
msgid ""
" btrfs-subvolume-create dest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:704 ../src/guestfs-actions.pod:1100
msgid ""
"Create a btrfs subvolume.  The C<dest> argument is the destination directory "
"and the name of the snapshot, in the form C</path/to/dest/name>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:707
msgid "btrfs-subvolume-delete"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:709
#, no-wrap
msgid ""
" btrfs-subvolume-delete subvolume\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:711 ../src/guestfs-actions.pod:1113
msgid "Delete the named btrfs subvolume."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:713
msgid "btrfs-subvolume-list"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:715
#, no-wrap
msgid ""
" btrfs-subvolume-list fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:717 ../src/guestfs-actions.pod:1125
msgid ""
"List the btrfs snapshots and subvolumes of the btrfs filesystem which is "
"mounted at C<fs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:720
msgid "btrfs-subvolume-set-default"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:722
#, no-wrap
msgid ""
" btrfs-subvolume-set-default id fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:724
msgid ""
"Set the subvolume of the btrfs filesystem C<fs> which will be mounted by "
"default.  See L</btrfs-subvolume-list> to get a list of subvolumes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:728
msgid "btrfs-subvolume-snapshot"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:730
#, no-wrap
msgid ""
" btrfs-subvolume-snapshot source dest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:732 ../src/guestfs-actions.pod:1156
msgid ""
"Create a writable snapshot of the btrfs subvolume C<source>.  The C<dest> "
"argument is the destination directory and the name of the snapshot, in the "
"form C</path/to/dest/name>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:736
msgid "case-sensitive-path"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:738
#, no-wrap
msgid ""
" case-sensitive-path path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:740 ../src/guestfs-actions.pod:1170
msgid ""
"This can be used to resolve case insensitive paths on a filesystem which is "
"case sensitive.  The use case is to resolve paths which you have read from "
"Windows configuration files or the Windows Registry, to the true path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:745 ../src/guestfs-actions.pod:1175
msgid ""
"The command handles a peculiarity of the Linux ntfs-3g filesystem driver "
"(and probably others), which is that although the underlying filesystem is "
"case-insensitive, the driver exports the filesystem to Linux as "
"case-sensitive."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:750 ../src/guestfs-actions.pod:1180
msgid ""
"One consequence of this is that special directories such as C<c:\\windows> "
"may appear as C</WINDOWS> or C</windows> (or other things) depending on the "
"precise details of how they were created.  In Windows itself this would not "
"be a problem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:756 ../src/guestfs-actions.pod:1186
msgid ""
"Bug or feature? You decide: "
"L<http://www.tuxera.com/community/ntfs-3g-faq/#posixfilenames1>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:759 ../src/guestfs-actions.pod:1189
msgid ""
"This function resolves the true case of each element in the path and returns "
"the case-sensitive path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:762
msgid ""
"Thus L</case-sensitive-path> (\"/Windows/System32\")  might return "
"C<\"/WINDOWS/system32\"> (the exact return value would depend on details of "
"how the directories were originally created under Windows)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:767 ../src/guestfs-actions.pod:1197
msgid "I<Note>: This function does not handle drive names, backslashes etc."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:770
msgid "See also L</realpath>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:772
msgid "cat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:774
#, no-wrap
msgid ""
" cat path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:776 ../fish/guestfish-actions.pod:4630 ../src/guestfs-actions.pod:1213 ../src/guestfs-actions.pod:7309
msgid "Return the contents of the file named C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:778
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of string).  For "
"those you need to use the L</read-file> or L</download> functions which have "
"a more complex interface."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:783 ../fish/guestfish-actions.pod:918 ../fish/guestfish-actions.pod:930 ../fish/guestfish-actions.pod:1245 ../fish/guestfish-actions.pod:1255 ../fish/guestfish-actions.pod:1322 ../fish/guestfish-actions.pod:1332 ../fish/guestfish-actions.pod:1524 ../fish/guestfish-actions.pod:1967 ../fish/guestfish-actions.pod:1977 ../fish/guestfish-actions.pod:2027 ../fish/guestfish-actions.pod:2042 ../fish/guestfish-actions.pod:2052 ../fish/guestfish-actions.pod:2071 ../fish/guestfish-actions.pod:4500 ../fish/guestfish-actions.pod:4515 ../fish/guestfish-actions.pod:4591 ../fish/guestfish-actions.pod:4608 ../fish/guestfish-actions.pod:4623 ../fish/guestfish-actions.pod:5350 ../fish/guestfish-actions.pod:5396 ../fish/guestfish-actions.pod:5481 ../fish/guestfish-actions.pod:5496 ../fish/guestfish-actions.pod:6015 ../fish/guestfish-actions.pod:6027 ../fish/guestfish-actions.pod:6045 ../fish/guestfish-actions.pod:6062 ../fish/guestfish-actions.pod:6072 ../fish/guestfish-actions.pod:6139 ../fish/guestfish-actions.pod:6149 ../fish/guestfish-actions.pod:6178 ../fish/guestfish-actions.pod:6188 ../src/guestfs-actions.pod:1223 ../src/guestfs-actions.pod:1402 ../src/guestfs-actions.pod:1422 ../src/guestfs-actions.pod:2144 ../src/guestfs-actions.pod:2163 ../src/guestfs-actions.pod:2266 ../src/guestfs-actions.pod:2285 ../src/guestfs-actions.pod:2531 ../src/guestfs-actions.pod:3156 ../src/guestfs-actions.pod:3175 ../src/guestfs-actions.pod:3240 ../src/guestfs-actions.pod:3264 ../src/guestfs-actions.pod:3281 ../src/guestfs-actions.pod:3310 ../src/guestfs-actions.pod:7091 ../src/guestfs-actions.pod:7117 ../src/guestfs-actions.pod:7248 ../src/guestfs-actions.pod:7274 ../src/guestfs-actions.pod:7298 ../src/guestfs-actions.pod:8362 ../src/guestfs-actions.pod:8417 ../src/guestfs-actions.pod:8563 ../src/guestfs-actions.pod:8587 ../src/guestfs-actions.pod:9454 ../src/guestfs-actions.pod:9474 ../src/guestfs-actions.pod:9507 ../src/guestfs-actions.pod:9526 ../src/guestfs-actions.pod:9545 ../src/guestfs-actions.pod:9660 ../src/guestfs-actions.pod:9679 ../src/guestfs-actions.pod:9725 ../src/guestfs-actions.pod:9744
msgid ""
"Because of the message protocol, there is a transfer limit of somewhere "
"between 2MB and 4MB.  See L<guestfs(3)/PROTOCOL LIMITS>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:786
msgid "checksum"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:788
#, no-wrap
msgid ""
" checksum csumtype path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:790 ../src/guestfs-actions.pod:1235
msgid "This call computes the MD5, SHAx or CRC checksum of the file named C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:793 ../src/guestfs-actions.pod:1238
msgid ""
"The type of checksum to compute is given by the C<csumtype> parameter which "
"must have one of the following values:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:798 ../src/guestfs-actions.pod:1243
msgid "C<crc>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:800 ../src/guestfs-actions.pod:1245
msgid ""
"Compute the cyclic redundancy check (CRC) specified by POSIX for the "
"C<cksum> command."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:803 ../src/guestfs-actions.pod:1248
msgid "C<md5>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:805 ../src/guestfs-actions.pod:1250
msgid "Compute the MD5 hash (using the C<md5sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:807 ../src/guestfs-actions.pod:1252
msgid "C<sha1>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:809 ../src/guestfs-actions.pod:1254
msgid "Compute the SHA1 hash (using the C<sha1sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:811 ../src/guestfs-actions.pod:1256
msgid "C<sha224>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:813 ../src/guestfs-actions.pod:1258
msgid "Compute the SHA224 hash (using the C<sha224sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:815 ../src/guestfs-actions.pod:1260
msgid "C<sha256>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:817 ../src/guestfs-actions.pod:1262
msgid "Compute the SHA256 hash (using the C<sha256sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:819 ../src/guestfs-actions.pod:1264
msgid "C<sha384>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:821 ../src/guestfs-actions.pod:1266
msgid "Compute the SHA384 hash (using the C<sha384sum> program)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:823 ../src/guestfs-actions.pod:1268
msgid "C<sha512>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:825 ../src/guestfs-actions.pod:1270
msgid "Compute the SHA512 hash (using the C<sha512sum> program)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:829 ../src/guestfs-actions.pod:1274
msgid "The checksum is returned as a printable string."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:831
msgid "To get the checksum for a device, use L</checksum-device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:833
msgid "To get the checksums for many files, use L</checksums-out>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:835
msgid "checksum-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:837
#, no-wrap
msgid ""
" checksum-device csumtype device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:839
msgid ""
"This call computes the MD5, SHAx or CRC checksum of the contents of the "
"device named C<device>.  For the types of checksums supported see the "
"L</checksum> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:843
msgid "checksums-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:845
#, no-wrap
msgid ""
" checksums-out csumtype directory (sumsfile|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:847 ../src/guestfs-actions.pod:1309
msgid ""
"This command computes the checksums of all regular files in C<directory> and "
"then emits a list of those checksums to the local output file C<sumsfile>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:851 ../src/guestfs-actions.pod:1313
msgid ""
"This can be used for verifying the integrity of a virtual machine.  However "
"to be properly secure you should pay attention to the output of the checksum "
"command (it uses the ones from GNU coreutils).  In particular when the "
"filename is not printable, coreutils uses a special backslash syntax.  For "
"more information, see the GNU coreutils info file."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:861
msgid "chmod"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:863
#, no-wrap
msgid ""
" chmod mode path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:865 ../src/guestfs-actions.pod:1332
msgid ""
"Change the mode (permissions) of C<path> to C<mode>.  Only numeric modes are "
"supported."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:868 ../src/guestfs-actions.pod:1335
msgid ""
"I<Note>: When using this command from guestfish, C<mode> by default would be "
"decimal, unless you prefix it with C<0> to get octal, ie. use C<0700> not "
"C<700>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:872 ../fish/guestfish-actions.pod:3737 ../fish/guestfish-actions.pod:3890 ../fish/guestfish-actions.pod:3900 ../fish/guestfish-actions.pod:3910 ../src/guestfs-actions.pod:1339 ../src/guestfs-actions.pod:5780 ../src/guestfs-actions.pod:6044 ../src/guestfs-actions.pod:6063 ../src/guestfs-actions.pod:6082
msgid "The mode actually set is affected by the umask."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:874
msgid "chown"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:876
#, no-wrap
msgid ""
" chown owner group path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:878 ../src/guestfs-actions.pod:1353
msgid "Change the file owner to C<owner> and group to C<group>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:880 ../fish/guestfish-actions.pod:3009 ../src/guestfs-actions.pod:1355 ../src/guestfs-actions.pod:4601
msgid ""
"Only numeric uid and gid are supported.  If you want to use names, you will "
"need to locate and parse the password file yourself (Augeas support makes "
"this relatively easy)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:884
msgid "command"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:886
#, no-wrap
msgid ""
" command 'arguments ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:888 ../src/guestfs-actions.pod:1369
msgid ""
"This call runs a command from the guest filesystem.  The filesystem must be "
"mounted, and must contain a compatible operating system (ie. something "
"Linux, with the same or compatible processor architecture)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:893
msgid ""
"The single parameter is an argv-style list of arguments.  The first element "
"is the name of the program to run.  Subsequent elements are parameters.  The "
"list must be non-empty (ie. must contain a program name).  Note that the "
"command runs directly, and is I<not> invoked via the shell (see L</sh>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:900 ../src/guestfs-actions.pod:1381
msgid "The return value is anything printed to I<stdout> by the command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:903 ../src/guestfs-actions.pod:1384
msgid ""
"If the command returns a non-zero exit status, then this function returns an "
"error message.  The error message string is the content of I<stderr> from "
"the command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:907 ../src/guestfs-actions.pod:1388
msgid ""
"The C<$PATH> environment variable will contain at least C</usr/bin> and "
"C</bin>.  If you require a program from another location, you should provide "
"the full path in the first parameter."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:912 ../src/guestfs-actions.pod:1393
msgid ""
"Shared libraries and data files required by the program must be available on "
"filesystems which are mounted in the correct places.  It is the caller's "
"responsibility to ensure all filesystems that are needed are mounted at the "
"right locations."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:921
msgid "command-lines"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:923
#, no-wrap
msgid ""
" command-lines 'arguments ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:925
msgid "This is the same as L</command>, but splits the result into a list of lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:928
msgid "See also: L</sh-lines>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:933
msgid "compress-device-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:935
#, no-wrap
msgid ""
" compress-device-out ctype device (zdevice|-) [level:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:937 ../src/guestfs-actions.pod:1443
msgid ""
"This command compresses C<device> and writes it out to the local file "
"C<zdevice>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:940
msgid ""
"The C<ctype> and optional C<level> parameters have the same meaning as in "
"L</compress-out>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:947
msgid "compress-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:949
#, no-wrap
msgid ""
" compress-out ctype file (zfile|-) [level:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:951 ../src/guestfs-actions.pod:1495
msgid ""
"This command compresses C<file> and writes it out to the local file "
"C<zfile>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:954 ../src/guestfs-actions.pod:1498
msgid ""
"The compression program used is controlled by the C<ctype> parameter.  "
"Currently this includes: C<compress>, C<gzip>, C<bzip2>, C<xz> or C<lzop>.  "
"Some compression types may not be supported by particular builds of "
"libguestfs, in which case you will get an error containing the substring "
"\"not supported\"."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:960 ../src/guestfs-actions.pod:1504
msgid ""
"The optional C<level> parameter controls compression level.  The meaning and "
"default for this parameter depends on the compression program being used."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:968
msgid "config"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:970
#, no-wrap
msgid ""
" config qemuparam qemuvalue\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:972 ../src/guestfs-actions.pod:1545
msgid ""
"This can be used to add arbitrary qemu command line parameters of the form "
"I<-param value>.  Actually it's not quite arbitrary - we prevent you from "
"setting some parameters which would interfere with parameters that we use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:977 ../src/guestfs-actions.pod:1550
msgid "The first character of C<param> string must be a C<-> (dash)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:979 ../src/guestfs-actions.pod:1552
msgid "C<value> can be NULL."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:981
msgid "copy-device-to-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:983
#, no-wrap
msgid ""
" copy-device-to-device src dest [srcoffset:N] [destoffset:N] [size:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:985
msgid ""
"The four calls L</copy-device-to-device>, L</copy-device-to-file>, "
"L</copy-file-to-device>, and L</copy-file-to-file> let you copy from a "
"source (device|file) to a destination (device|file)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:992 ../src/guestfs-actions.pod:1582
msgid ""
"Partial copies can be made since you can specify optionally the source "
"offset, destination offset and size to copy.  These values are all specified "
"in bytes.  If not given, the offsets both default to zero, and the size "
"defaults to copying as much as possible until we hit the end of the source."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:998 ../src/guestfs-actions.pod:1588
msgid ""
"The source and destination may be the same object.  However overlapping "
"regions may not be copied correctly."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1001 ../src/guestfs-actions.pod:1591
msgid ""
"If the destination is a file, it is created if required.  If the destination "
"file is not large enough, it is extended."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1006
msgid "copy-device-to-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1008
#, no-wrap
msgid ""
" copy-device-to-file src dest [srcoffset:N] [destoffset:N] [size:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1010 ../fish/guestfish-actions.pod:1019 ../fish/guestfish-actions.pod:1028
msgid "See L</copy-device-to-device> for a general overview of this call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1015
msgid "copy-file-to-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1017
#, no-wrap
msgid ""
" copy-file-to-device src dest [srcoffset:N] [destoffset:N] [size:N]\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1024
msgid "copy-file-to-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1026
#, no-wrap
msgid ""
" copy-file-to-file src dest [srcoffset:N] [destoffset:N] [size:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1031
msgid ""
"This is B<not> the function you want for copying files.  This is for copying "
"blocks within existing files.  See L</cp>, L</cp-a> and L</mv> for general "
"file copying and moving functions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1038
msgid "copy-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1040
#, no-wrap
msgid ""
" copy-size src dest size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1042 ../src/guestfs-actions.pod:1806
msgid ""
"This command copies exactly C<size> bytes from one source device or file "
"C<src> to another destination device or file C<dest>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1045 ../src/guestfs-actions.pod:1809
msgid ""
"Note this will fail if the source is too short or if the destination is not "
"large enough."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1048 ../fish/guestfish-actions.pod:1083
msgid ""
"I<This function is deprecated.> In new code, use the "
"L</copy_device_to_device> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1055
msgid "cp"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1057
#, no-wrap
msgid ""
" cp src dest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1059 ../src/guestfs-actions.pod:1828
msgid ""
"This copies a file from C<src> to C<dest> where C<dest> is either a "
"destination filename or destination directory."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1062
msgid "cp-a"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1064
#, no-wrap
msgid ""
" cp-a src dest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1066 ../src/guestfs-actions.pod:1842
msgid ""
"This copies a file or directory from C<src> to C<dest> recursively using the "
"C<cp -a> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1069
msgid "dd"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1071
#, no-wrap
msgid ""
" dd src dest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1073 ../src/guestfs-actions.pod:1863
msgid ""
"This command copies from one source device or file C<src> to another "
"destination device or file C<dest>.  Normally you would use this to copy to "
"or from a device or partition, for example to duplicate a filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1078
msgid ""
"If the destination is a device, it must be as large or larger than the "
"source file or device, otherwise the copy will fail.  This command cannot do "
"partial copies (see L</copy-device-to-device>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1090
msgid "df"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1092
#, no-wrap
msgid ""
" df\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1094 ../src/guestfs-actions.pod:1882
msgid "This command runs the C<df> command to report disk space used."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1096 ../fish/guestfish-actions.pod:1107
msgid ""
"This command is mostly useful for interactive sessions.  It is I<not> "
"intended that you try to parse the output string.  Use L</statvfs> from "
"programs."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1100
msgid "df-h"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1102
#, no-wrap
msgid ""
" df-h\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1104 ../src/guestfs-actions.pod:1898
msgid ""
"This command runs the C<df -h> command to report disk space used in "
"human-readable format."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1111
msgid "dmesg"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1113
#, no-wrap
msgid ""
" dmesg\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1115 ../src/guestfs-actions.pod:1915
msgid ""
"This returns the kernel messages (C<dmesg> output) from the guest kernel.  "
"This is sometimes useful for extended debugging of problems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1119
msgid ""
"Another way to get the same information is to enable verbose messages with "
"L</set-verbose> or by setting the environment variable C<LIBGUESTFS_DEBUG=1> "
"before running the program."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1124
msgid "download"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1126
#, no-wrap
msgid ""
" download remotefilename (filename|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1128 ../fish/guestfish-actions.pod:1141 ../src/guestfs-actions.pod:1936 ../src/guestfs-actions.pod:1961
msgid ""
"Download file C<remotefilename> and save it as C<filename> on the local "
"machine."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1131 ../fish/guestfish-actions.pod:5744 ../src/guestfs-actions.pod:1939 ../src/guestfs-actions.pod:8986
msgid "C<filename> can also be a named pipe."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1133
msgid "See also L</upload>, L</cat>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1137
msgid "download-offset"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1139
#, no-wrap
msgid ""
" download-offset remotefilename (filename|-) offset size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1144 ../src/guestfs-actions.pod:1964
msgid ""
"C<remotefilename> is read for C<size> bytes starting at C<offset> (this "
"region must be within the file or device)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1147
msgid ""
"Note that there is no limit on the amount of data that can be downloaded "
"with this call, unlike with L</pread>, and this call always reads the full "
"amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1152
msgid "See also L</download>, L</pread>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1156
msgid "drop-caches"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1158
#, no-wrap
msgid ""
" drop-caches whattodrop\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1160 ../src/guestfs-actions.pod:1989
msgid ""
"This instructs the guest kernel to drop its page cache, and/or dentries and "
"inode caches.  The parameter C<whattodrop> tells the kernel what precisely "
"to drop, see L<http://linux-mm.org/Drop_Caches>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1165 ../src/guestfs-actions.pod:1994
msgid "Setting C<whattodrop> to 3 should drop everything."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1167 ../src/guestfs-actions.pod:1996
msgid ""
"This automatically calls L<sync(2)> before the operation, so that the "
"maximum guest memory is freed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1170
msgid "du"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1172
#, no-wrap
msgid ""
" du path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1174 ../src/guestfs-actions.pod:2009
msgid ""
"This command runs the C<du -s> command to estimate file space usage for "
"C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1177 ../src/guestfs-actions.pod:2012
msgid ""
"C<path> can be a file or a directory.  If C<path> is a directory then the "
"estimate includes the contents of the directory and all subdirectories "
"(recursively)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1181 ../src/guestfs-actions.pod:2016
msgid "The result is the estimated size in I<kilobytes> (ie. units of 1024 bytes)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1184
msgid "e2fsck"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1186
#, no-wrap
msgid ""
" e2fsck device [correct:true|false] [forceall:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1188 ../src/guestfs-actions.pod:2043
msgid ""
"This runs the ext2/ext3 filesystem checker on C<device>.  It can take the "
"following optional arguments:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1193 ../src/guestfs-actions.pod:2048
msgid "C<correct>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1195 ../src/guestfs-actions.pod:2050
msgid ""
"Automatically repair the file system. This option will cause e2fsck to "
"automatically fix any filesystem problems that can be safely fixed without "
"human intervention."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1199 ../src/guestfs-actions.pod:2054
msgid "This option may not be specified at the same time as the C<forceall> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1201 ../src/guestfs-actions.pod:2056
msgid "C<forceall>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1203 ../src/guestfs-actions.pod:2058
msgid ""
"Assume an answer of 'yes' to all questions; allows e2fsck to be used "
"non-interactively."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1206 ../src/guestfs-actions.pod:2061
msgid "This option may not be specified at the same time as the C<correct> option."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1212
msgid "e2fsck-f"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1214
#, no-wrap
msgid ""
" e2fsck-f device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1216 ../src/guestfs-actions.pod:2104
msgid ""
"This runs C<e2fsck -p -f device>, ie. runs the ext2/ext3 filesystem checker "
"on C<device>, noninteractively (I<-p>), even if the filesystem appears to be "
"clean (I<-f>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1220
msgid ""
"I<This function is deprecated.> In new code, use the L</e2fsck> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1227
msgid "echo-daemon"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1229
#, no-wrap
msgid ""
" echo-daemon 'words ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1231 ../src/guestfs-actions.pod:2118
msgid ""
"This command concatenates the list of C<words> passed with single spaces "
"between them and returns the resulting string."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1234 ../src/guestfs-actions.pod:2121
msgid "You can use this command to test the connection through to the daemon."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1236
msgid "See also L</ping-daemon>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1238
msgid "egrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1240
#, no-wrap
msgid ""
" egrep regex path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1242 ../src/guestfs-actions.pod:2137
msgid "This calls the external C<egrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1248
msgid "egrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1250
#, no-wrap
msgid ""
" egrepi regex path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1252 ../src/guestfs-actions.pod:2156
msgid "This calls the external C<egrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1258
msgid "equal"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1260
#, no-wrap
msgid ""
" equal file1 file2\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1262 ../src/guestfs-actions.pod:2175
msgid ""
"This compares the two files C<file1> and C<file2> and returns true if their "
"content is exactly equal, or false otherwise."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1265 ../src/guestfs-actions.pod:2178
msgid "The external L<cmp(1)> program is used for the comparison."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1267
msgid "exists"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1269
#, no-wrap
msgid ""
" exists path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1271 ../src/guestfs-actions.pod:2190
msgid ""
"This returns C<true> if and only if there is a file, directory (or anything) "
"with the given C<path> name."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1274
msgid "See also L</is-file>, L</is-dir>, L</stat>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1276
msgid "fallocate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1278
#, no-wrap
msgid ""
" fallocate path len\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1280 ../fish/guestfish-actions.pod:1299 ../src/guestfs-actions.pod:2213 ../src/guestfs-actions.pod:2232
msgid ""
"This command preallocates a file (containing zero bytes) named C<path> of "
"size C<len> bytes.  If the file exists already, it is overwritten."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1284 ../src/guestfs-actions.pod:2217
msgid ""
"Do not confuse this with the guestfish-specific C<alloc> command which "
"allocates a file in the host and attaches it as a device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1288
msgid ""
"I<This function is deprecated.> In new code, use the L</fallocate64> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1295
msgid "fallocate64"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1297
#, no-wrap
msgid ""
" fallocate64 path len\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1303
msgid ""
"Note that this call allocates disk blocks for the file.  To create a sparse "
"file use L</truncate-size> instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1306
msgid ""
"The deprecated call L</fallocate> does the same, but owing to an oversight "
"it only allowed 30 bit lengths to be specified, effectively limiting the "
"maximum size of files created through that call to 1GB."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1311 ../src/guestfs-actions.pod:2244
msgid ""
"Do not confuse this with the guestfish-specific C<alloc> and C<sparse> "
"commands which create a file in the host and attach it as a device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1315
msgid "fgrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1317
#, no-wrap
msgid ""
" fgrep pattern path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1319 ../src/guestfs-actions.pod:2259
msgid "This calls the external C<fgrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1325
msgid "fgrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1327
#, no-wrap
msgid ""
" fgrepi pattern path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1329 ../src/guestfs-actions.pod:2278
msgid "This calls the external C<fgrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1335
msgid "file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1337
#, no-wrap
msgid ""
" file path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1339 ../src/guestfs-actions.pod:2296
msgid ""
"This call uses the standard L<file(1)> command to determine the type or "
"contents of the file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1342 ../src/guestfs-actions.pod:2299
msgid ""
"This call will also transparently look inside various types of compressed "
"file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1345 ../src/guestfs-actions.pod:2302
msgid ""
"The exact command which runs is C<file -zb path>.  Note in particular that "
"the filename is not prepended to the output (the I<-b> option)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1349 ../src/guestfs-actions.pod:2306
msgid ""
"The output depends on the output of the underlying L<file(1)> command and it "
"can change in future in ways beyond our control.  In other words, the output "
"is not guaranteed by the ABI."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1353
msgid ""
"See also: L<file(1)>, L</vfs-type>, L</lstat>, L</is-file>, L</is-blockdev> "
"(etc), L</is-zero>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1356
msgid "file-architecture"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1358
#, no-wrap
msgid ""
" file-architecture filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1360 ../src/guestfs-actions.pod:2324
msgid ""
"This detects the architecture of the binary C<filename>, and returns it if "
"known."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1363 ../src/guestfs-actions.pod:2327
msgid "Currently defined architectures are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1367 ../src/guestfs-actions.pod:2331
msgid "\"i386\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1369 ../src/guestfs-actions.pod:2333
msgid ""
"This string is returned for all 32 bit i386, i486, i586, i686 binaries "
"irrespective of the precise processor requirements of the binary."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1372 ../src/guestfs-actions.pod:2336
msgid "\"x86_64\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1374 ../src/guestfs-actions.pod:2338
msgid "64 bit x86-64."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1376 ../src/guestfs-actions.pod:2340
msgid "\"sparc\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1378 ../src/guestfs-actions.pod:2342
msgid "32 bit SPARC."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1380 ../src/guestfs-actions.pod:2344
msgid "\"sparc64\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1382 ../src/guestfs-actions.pod:2346
msgid "64 bit SPARC V9 and above."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1384 ../src/guestfs-actions.pod:2348
msgid "\"ia64\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1386 ../src/guestfs-actions.pod:2350
msgid "Intel Itanium."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1388 ../src/guestfs-actions.pod:2352
msgid "\"ppc\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1390 ../src/guestfs-actions.pod:2354
msgid "32 bit Power PC."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1392 ../src/guestfs-actions.pod:2356
msgid "\"ppc64\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1394 ../src/guestfs-actions.pod:2358
msgid "64 bit Power PC."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1398 ../src/guestfs-actions.pod:2362
msgid "Libguestfs may return other architecture strings in future."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1400 ../src/guestfs-actions.pod:2364
msgid "The function works on at least the following types of files:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1406 ../src/guestfs-actions.pod:2370
msgid "many types of Un*x and Linux binary"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1410 ../src/guestfs-actions.pod:2374
msgid "many types of Un*x and Linux shared library"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1414 ../src/guestfs-actions.pod:2378
msgid "Windows Win32 and Win64 binaries"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1418 ../src/guestfs-actions.pod:2382
msgid "Windows Win32 and Win64 DLLs"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1420 ../src/guestfs-actions.pod:2384
msgid "Win32 binaries and DLLs return C<i386>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1422 ../src/guestfs-actions.pod:2386
msgid "Win64 binaries and DLLs return C<x86_64>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1426 ../src/guestfs-actions.pod:2390
msgid "Linux kernel modules"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1430 ../src/guestfs-actions.pod:2394
msgid "Linux new-style initrd images"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1434 ../src/guestfs-actions.pod:2398
msgid "some non-x86 Linux vmlinuz kernels"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1438 ../src/guestfs-actions.pod:2402
msgid "What it can't do currently:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1444 ../src/guestfs-actions.pod:2408
msgid "static libraries (libfoo.a)"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1448 ../src/guestfs-actions.pod:2412
msgid "Linux old-style initrd as compressed ext2 filesystem (RHEL 3)"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1452 ../src/guestfs-actions.pod:2416
msgid "x86 Linux vmlinuz kernels"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1454 ../src/guestfs-actions.pod:2418
msgid ""
"x86 vmlinuz images (bzImage format) consist of a mix of 16-, 32- and "
"compressed code, and are horribly hard to unpack.  If you want to find the "
"architecture of a kernel, use the architecture of the associated initrd or "
"kernel module(s) instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1461
msgid "filesize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1463
#, no-wrap
msgid ""
" filesize file\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1465 ../src/guestfs-actions.pod:2436
msgid "This command returns the size of C<file> in bytes."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1467
msgid ""
"To get other stats about a file, use L</stat>, L</lstat>, L</is-dir>, "
"L</is-file> etc.  To get the size of block devices, use "
"L</blockdev-getsize64>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1471
msgid "fill"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1473
#, no-wrap
msgid ""
" fill c len path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1475 ../src/guestfs-actions.pod:2454
msgid ""
"This command creates a new file called C<path>.  The initial content of the "
"file is C<len> octets of C<c>, where C<c> must be a number in the range "
"C<[0..255]>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1479
msgid ""
"To fill a file with zero bytes (sparsely), it is much more efficient to use "
"L</truncate-size>.  To create a file with a pattern of repeating bytes use "
"L</fill-pattern>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1484
msgid "fill-pattern"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1486
#, no-wrap
msgid ""
" fill-pattern pattern len path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1488
msgid ""
"This function is like L</fill> except that it creates a new file of length "
"C<len> containing the repeating pattern of bytes in C<pattern>.  The pattern "
"is truncated if necessary to ensure the length of the file is exactly C<len> "
"bytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1493
msgid "find"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1495
#, no-wrap
msgid ""
" find directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1497 ../src/guestfs-actions.pod:2500
msgid ""
"This command lists out all files and directories, recursively, starting at "
"C<directory>.  It is essentially equivalent to running the shell command "
"C<find directory -print> but some post-processing happens on the output, "
"described below."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1502 ../src/guestfs-actions.pod:2505
msgid ""
"This returns a list of strings I<without any prefix>.  Thus if the directory "
"structure was:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1505 ../src/guestfs-actions.pod:2508
#, no-wrap
msgid ""
" /tmp/a\n"
" /tmp/b\n"
" /tmp/c/d\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1509
msgid "then the returned list from L</find> C</tmp> would be 4 elements:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1512 ../src/guestfs-actions.pod:2515
#, no-wrap
msgid ""
" a\n"
" b\n"
" c\n"
" c/d\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1517 ../src/guestfs-actions.pod:2520
msgid "If C<directory> is not a directory, then this command returns an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1520 ../src/guestfs-actions.pod:2523
msgid "The returned list is sorted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1522
msgid "See also L</find0>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1527
msgid "find0"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1529
#, no-wrap
msgid ""
" find0 directory (files|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1531 ../src/guestfs-actions.pod:2543
msgid ""
"This command lists out all files and directories, recursively, starting at "
"C<directory>, placing the resulting list in the external file called "
"C<files>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1535
msgid "This command works the same way as L</find> with the following exceptions:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1542 ../src/guestfs-actions.pod:2554
msgid "The resulting list is written to an external file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1546 ../src/guestfs-actions.pod:2558
msgid ""
"Items (filenames) in the result are separated by C<\\0> characters.  See "
"L<find(1)> option I<-print0>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1551 ../src/guestfs-actions.pod:2563
msgid "This command is not limited in the number of names that it can return."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1556 ../src/guestfs-actions.pod:2568
msgid "The result list is not sorted."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1562
msgid "findfs-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1564
#, no-wrap
msgid ""
" findfs-label label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1566 ../src/guestfs-actions.pod:2582
msgid ""
"This command searches the filesystems and returns the one which has the "
"given label.  An error is returned if no such filesystem can be found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1570
msgid "To find the label of a filesystem, use L</vfs-label>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1572
msgid "findfs-uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1574
#, no-wrap
msgid ""
" findfs-uuid uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1576 ../src/guestfs-actions.pod:2599
msgid ""
"This command searches the filesystems and returns the one which has the "
"given UUID.  An error is returned if no such filesystem can be found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1580
msgid "To find the UUID of a filesystem, use L</vfs-uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1582
msgid "fsck"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1584
#, no-wrap
msgid ""
" fsck fstype device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1586 ../src/guestfs-actions.pod:2617
msgid ""
"This runs the filesystem checker (fsck) on C<device> which should have "
"filesystem type C<fstype>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1589 ../src/guestfs-actions.pod:2620
msgid ""
"The returned integer is the status.  See L<fsck(8)> for the list of status "
"codes from C<fsck>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1598 ../src/guestfs-actions.pod:2629
msgid "Multiple status codes can be summed together."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1602 ../src/guestfs-actions.pod:2633
msgid ""
"A non-zero return code can mean \"success\", for example if errors have been "
"corrected on the filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1607 ../src/guestfs-actions.pod:2638
msgid "Checking or repairing NTFS volumes is not supported (by linux-ntfs)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1612 ../src/guestfs-actions.pod:2643
msgid "This command is entirely equivalent to running C<fsck -a -t fstype device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1614
msgid "get-append"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1616
#, no-wrap
msgid ""
" get-append\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1618 ../src/guestfs-actions.pod:2654
msgid ""
"Return the additional kernel options which are added to the guest kernel "
"command line."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1621 ../src/guestfs-actions.pod:2657
msgid "If C<NULL> then no options are added."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1623
msgid "get-attach-method"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1625
#, no-wrap
msgid ""
" get-attach-method\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1627
msgid "Return the current attach method.  See L</set-attach-method>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1629
msgid "get-autosync"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1631
#, no-wrap
msgid ""
" get-autosync\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1633 ../src/guestfs-actions.pod:2682
msgid "Get the autosync flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1635
msgid "get-direct"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1637
#, no-wrap
msgid ""
" get-direct\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1639 ../src/guestfs-actions.pod:2693
msgid "Return the direct appliance mode flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1641
msgid "get-e2attrs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1643
#, no-wrap
msgid ""
" get-e2attrs file\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1645 ../src/guestfs-actions.pod:2705
msgid "This returns the file attributes associated with C<file>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1647 ../src/guestfs-actions.pod:2707
msgid ""
"The attributes are a set of bits associated with each inode which affect the "
"behaviour of the file.  The attributes are returned as a string of letters "
"(described below).  The string may be empty, indicating that no file "
"attributes are set for this file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1653 ../fish/guestfish-actions.pod:4936 ../src/guestfs-actions.pod:2713 ../src/guestfs-actions.pod:7747
msgid ""
"These attributes are only present when the file is located on an ext2/3/4 "
"filesystem.  Using this call on other filesystem types will result in an "
"error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1657 ../src/guestfs-actions.pod:2717
msgid "The characters (file attributes) in the returned string are currently:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1662 ../src/guestfs-actions.pod:2722
msgid "'A'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1664 ../src/guestfs-actions.pod:2724
msgid "When the file is accessed, its atime is not modified."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1666 ../src/guestfs-actions.pod:2726
msgid "'a'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1668 ../src/guestfs-actions.pod:2728
msgid "The file is append-only."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1670 ../fish/guestfish-actions.pod:4659 ../src/guestfs-actions.pod:2730 ../src/guestfs-actions.pod:7346
msgid "'c'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1672 ../src/guestfs-actions.pod:2732
msgid "The file is compressed on-disk."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1674 ../src/guestfs-actions.pod:2734
msgid "'D'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1676 ../src/guestfs-actions.pod:2736
msgid ""
"(Directories only.)  Changes to this directory are written synchronously to "
"disk."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1679 ../fish/guestfish-actions.pod:4663 ../src/guestfs-actions.pod:2739 ../src/guestfs-actions.pod:7350
msgid "'d'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1681 ../src/guestfs-actions.pod:2741
msgid "The file is not a candidate for backup (see L<dump(8)>)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1683 ../src/guestfs-actions.pod:2743
msgid "'E'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1685 ../src/guestfs-actions.pod:2745
msgid "The file has compression errors."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1687 ../src/guestfs-actions.pod:2747
msgid "'e'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1689 ../src/guestfs-actions.pod:2749
msgid "The file is using extents."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1691 ../src/guestfs-actions.pod:2751
msgid "'h'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1693 ../src/guestfs-actions.pod:2753
msgid ""
"The file is storing its blocks in units of the filesystem blocksize instead "
"of sectors."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1696 ../src/guestfs-actions.pod:2756
msgid "'I'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1698 ../src/guestfs-actions.pod:2758
msgid "(Directories only.)  The directory is using hashed trees."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1700 ../src/guestfs-actions.pod:2760
msgid "'i'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1702 ../src/guestfs-actions.pod:2762
msgid ""
"The file is immutable.  It cannot be modified, deleted or renamed.  No link "
"can be created to this file."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1705 ../src/guestfs-actions.pod:2765
msgid "'j'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1707 ../src/guestfs-actions.pod:2767
msgid "The file is data-journaled."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1709 ../fish/guestfish-actions.pod:4679 ../src/guestfs-actions.pod:2769 ../src/guestfs-actions.pod:7366
msgid "'s'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1711 ../src/guestfs-actions.pod:2771
msgid "When the file is deleted, all its blocks will be zeroed."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1713 ../src/guestfs-actions.pod:2773
msgid "'S'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1715 ../src/guestfs-actions.pod:2775
msgid "Changes to this file are written synchronously to disk."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1717 ../src/guestfs-actions.pod:2777
msgid "'T'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1719 ../src/guestfs-actions.pod:2779
msgid ""
"(Directories only.)  This is a hint to the block allocator that "
"subdirectories contained in this directory should be spread across blocks.  "
"If not present, the block allocator will try to group subdirectories "
"together."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1724 ../src/guestfs-actions.pod:2784
msgid "'t'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1726 ../src/guestfs-actions.pod:2786
msgid ""
"For a file, this disables tail-merging.  (Not used by upstream "
"implementations of ext2.)"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1729 ../fish/guestfish-actions.pod:4683 ../src/guestfs-actions.pod:2789 ../src/guestfs-actions.pod:7370
msgid "'u'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1731 ../src/guestfs-actions.pod:2791
msgid ""
"When the file is deleted, its blocks will be saved, allowing the file to be "
"undeleted."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1734 ../src/guestfs-actions.pod:2794
msgid "'X'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1736 ../src/guestfs-actions.pod:2796
msgid "The raw contents of the compressed file may be accessed."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:1738 ../src/guestfs-actions.pod:2798
msgid "'Z'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1740 ../src/guestfs-actions.pod:2800
msgid "The compressed file is dirty."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1744 ../src/guestfs-actions.pod:2804
msgid ""
"More file attributes may be added to this list later.  Not all file "
"attributes may be set for all kinds of files.  For detailed information, "
"consult the L<chattr(1)> man page."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1748
msgid "See also L</set-e2attrs>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1750
msgid "Don't confuse these attributes with extended attributes (see L</getxattr>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1753
msgid "get-e2generation"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1755
#, no-wrap
msgid ""
" get-e2generation file\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1757 ../src/guestfs-actions.pod:2824
msgid ""
"This returns the ext2 file generation of a file.  The generation (which used "
"to be called the \"version\") is a number associated with an inode.  This is "
"most commonly used by NFS servers."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1761 ../src/guestfs-actions.pod:2828
msgid ""
"The generation is only present when the file is located on an ext2/3/4 "
"filesystem.  Using this call on other filesystem types will result in an "
"error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1765
msgid "See L</set-e2generation>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1767
msgid "get-e2label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1769
#, no-wrap
msgid ""
" get-e2label device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1771 ../src/guestfs-actions.pod:2851
msgid "This returns the ext2/3/4 filesystem label of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1774
msgid ""
"I<This function is deprecated.> In new code, use the L</vfs_label> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1781
msgid "get-e2uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1783
#, no-wrap
msgid ""
" get-e2uuid device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1785 ../src/guestfs-actions.pod:2872
msgid "This returns the ext2/3/4 filesystem UUID of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1788
msgid ""
"I<This function is deprecated.> In new code, use the L</vfs_uuid> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1795
msgid "get-memsize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1797
#, no-wrap
msgid ""
" get-memsize\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1799 ../src/guestfs-actions.pod:2885
msgid "This gets the memory size in megabytes allocated to the qemu subprocess."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1802
msgid ""
"If L</set-memsize> was not called on this handle, and if "
"C<LIBGUESTFS_MEMSIZE> was not set, then this returns the compiled-in default "
"value for memsize."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1806 ../fish/guestfish-actions.pod:1863 ../fish/guestfish-actions.pod:5009 ../fish/guestfish-actions.pod:5113 ../src/guestfs-actions.pod:2892 ../src/guestfs-actions.pod:2984 ../src/guestfs-actions.pod:7874 ../src/guestfs-actions.pod:8002
msgid "For more information on the architecture of libguestfs, see L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1809
msgid "get-network"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1811
#, no-wrap
msgid ""
" get-network\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1813 ../src/guestfs-actions.pod:2904
msgid "This returns the enable network flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1815
msgid "get-path"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1817
#, no-wrap
msgid ""
" get-path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1819 ../src/guestfs-actions.pod:2915
msgid "Return the current search path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1821 ../src/guestfs-actions.pod:2917
msgid ""
"This is always non-NULL.  If it wasn't set already, then this will return "
"the default path."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1824
msgid "get-pgroup"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1826
#, no-wrap
msgid ""
" get-pgroup\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1828 ../src/guestfs-actions.pod:2930
msgid "This returns the process group flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1830
msgid "get-pid"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1832
msgid "pid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1834
#, no-wrap
msgid ""
" get-pid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1836 ../src/guestfs-actions.pod:2941
msgid ""
"Return the process ID of the qemu subprocess.  If there is no qemu "
"subprocess, then this will return an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1839 ../src/guestfs-actions.pod:2944
msgid "This is an internal call used for debugging and testing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1841
msgid "get-qemu"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1843
#, no-wrap
msgid ""
" get-qemu\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1845 ../src/guestfs-actions.pod:2955
msgid "Return the current qemu binary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1847 ../src/guestfs-actions.pod:2957
msgid ""
"This is always non-NULL.  If it wasn't set already, then this will return "
"the default qemu binary name."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1850
msgid "get-recovery-proc"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1852
#, no-wrap
msgid ""
" get-recovery-proc\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1854 ../src/guestfs-actions.pod:2970
msgid "Return the recovery process enabled flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1856
msgid "get-selinux"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1858
#, no-wrap
msgid ""
" get-selinux\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1860
msgid ""
"This returns the current setting of the selinux flag which is passed to the "
"appliance at boot time.  See L</set-selinux>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1866
msgid "get-smp"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1868
#, no-wrap
msgid ""
" get-smp\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1870 ../src/guestfs-actions.pod:2996
msgid "This returns the number of virtual CPUs assigned to the appliance."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1872
msgid "get-state"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1874
#, no-wrap
msgid ""
" get-state\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1876 ../src/guestfs-actions.pod:3007
msgid ""
"This returns the current state as an opaque integer.  This is only useful "
"for printing debug and internal error messages."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1879 ../fish/guestfish-actions.pod:2869 ../fish/guestfish-actions.pod:2907 ../fish/guestfish-actions.pod:2923 ../src/guestfs-actions.pod:3010 ../src/guestfs-actions.pod:4366 ../src/guestfs-actions.pod:4427 ../src/guestfs-actions.pod:4454
msgid "For more information on states, see L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1881
msgid "get-trace"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1883
#, no-wrap
msgid ""
" get-trace\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1885 ../src/guestfs-actions.pod:3021
msgid "Return the command trace flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1887
msgid "get-umask"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1889
#, no-wrap
msgid ""
" get-umask\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1891
msgid ""
"Return the current umask.  By default the umask is C<022> unless it has been "
"set by calling L</umask>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1894
msgid "get-verbose"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1896
#, no-wrap
msgid ""
" get-verbose\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1898 ../src/guestfs-actions.pod:3044
msgid "This returns the verbose messages flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1900
msgid "getcon"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1902
#, no-wrap
msgid ""
" getcon\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1904 ../src/guestfs-actions.pod:3055
msgid "This gets the SELinux security context of the daemon."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1906
msgid "See the documentation about SELINUX in L<guestfs(3)>, and L</setcon>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1909
msgid "getxattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1911
#, no-wrap
msgid ""
" getxattr path name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1913
msgid ""
"Get a single extended attribute from file C<path> named C<name>.  This call "
"follows symlinks.  If you want to lookup an extended attribute for the "
"symlink itself, use L</lgetxattr>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1917 ../fish/guestfish-actions.pod:3021
msgid ""
"Normally it is better to get all extended attributes from a file in one go "
"by calling L</getxattrs>.  However some Linux filesystem implementations are "
"buggy and do not provide a way to list out attributes.  For these "
"filesystems (notably ntfs-3g)  you have to know the names of the extended "
"attributes you want in advance and call this function."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1924 ../fish/guestfish-actions.pod:3028 ../src/guestfs-actions.pod:3084 ../src/guestfs-actions.pod:4628
msgid ""
"Extended attribute values are blobs of binary data.  If there is no extended "
"attribute named C<name>, this returns an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1927
msgid "See also: L</getxattrs>, L</lgetxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1929
msgid "getxattrs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1931
#, no-wrap
msgid ""
" getxattrs path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1933 ../src/guestfs-actions.pod:3101
msgid "This call lists the extended attributes of the file or directory C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1936 ../src/guestfs-actions.pod:3104
msgid ""
"At the system call level, this is a combination of the L<listxattr(2)> and "
"L<getxattr(2)> calls."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1939
msgid "See also: L</lgetxattrs>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1941
msgid "glob-expand"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1943
#, no-wrap
msgid ""
" glob-expand pattern\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1945 ../src/guestfs-actions.pod:3121
msgid ""
"This command searches for all the pathnames matching C<pattern> according to "
"the wildcard expansion rules used by the shell."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1949 ../src/guestfs-actions.pod:3125
msgid "If no paths match, then this returns an empty list (note: not an error)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1952 ../src/guestfs-actions.pod:3128
msgid ""
"It is just a wrapper around the C L<glob(3)> function with flags "
"C<GLOB_MARK|GLOB_BRACE>.  See that manual page for more details."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1956
msgid ""
"Notice that there is no equivalent command for expanding a device name "
"(eg. C</dev/sd*>).  Use L</list-devices>, L</list-partitions> etc functions "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1960
msgid "grep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1962
#, no-wrap
msgid ""
" grep regex path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1964 ../src/guestfs-actions.pod:3149
msgid "This calls the external C<grep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1970
msgid "grepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1972
#, no-wrap
msgid ""
" grepi regex path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1974 ../src/guestfs-actions.pod:3168
msgid "This calls the external C<grep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:1980
msgid "grub-install"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:1982
#, no-wrap
msgid ""
" grub-install root device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1984 ../src/guestfs-actions.pod:3187
msgid ""
"This command installs GRUB 1 (the Grand Unified Bootloader) on C<device>, "
"with the root directory being C<root>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:1993 ../src/guestfs-actions.pod:3196
msgid ""
"There is currently no way in the API to install grub2, which is used by most "
"modern Linux guests.  It is possible to run the grub2 command from the "
"guest, although see the caveats in L<guestfs(3)/RUNNING COMMANDS>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2000 ../src/guestfs-actions.pod:3203
msgid ""
"This uses C<grub-install> from the host.  Unfortunately grub is not always "
"compatible with itself, so this only works in rather narrow circumstances.  "
"Careful testing with each guest version is advisable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2007 ../src/guestfs-actions.pod:3210
msgid ""
"If grub-install reports the error \"No suitable drive was found in the "
"generated device map.\" it may be that you need to create a "
"C</boot/grub/device.map> file first that contains the mapping between grub "
"device names and Linux device names.  It is usually sufficient to create a "
"file containing:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2014 ../src/guestfs-actions.pod:3217
#, no-wrap
msgid ""
" (hd0) /dev/vda\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2016 ../src/guestfs-actions.pod:3219
msgid "replacing C</dev/vda> with the name of the installation device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2020
msgid "head"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2022
#, no-wrap
msgid ""
" head path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2024 ../src/guestfs-actions.pod:3233
msgid ""
"This command returns up to the first 10 lines of a file as a list of "
"strings."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2030
msgid "head-n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2032
#, no-wrap
msgid ""
" head-n nrlines path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2034 ../src/guestfs-actions.pod:3252
msgid ""
"If the parameter C<nrlines> is a positive number, this returns the first "
"C<nrlines> lines of the file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2037 ../src/guestfs-actions.pod:3255
msgid ""
"If the parameter C<nrlines> is a negative number, this returns lines from "
"the file C<path>, excluding the last C<nrlines> lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2040 ../fish/guestfish-actions.pod:5494 ../src/guestfs-actions.pod:3258 ../src/guestfs-actions.pod:8581
msgid "If the parameter C<nrlines> is zero, this returns an empty list."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2045
msgid "hexdump"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2047
#, no-wrap
msgid ""
" hexdump path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2049 ../src/guestfs-actions.pod:3275
msgid ""
"This runs C<hexdump -C> on the given C<path>.  The result is the "
"human-readable, canonical hex dump of the file."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2055
msgid "initrd-cat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2057
#, no-wrap
msgid ""
" initrd-cat initrdpath filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2059 ../src/guestfs-actions.pod:3294
msgid ""
"This command unpacks the file C<filename> from the initrd file called "
"C<initrdpath>.  The filename must be given I<without> the initial C</> "
"character."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2063 ../src/guestfs-actions.pod:3298
msgid ""
"For example, in guestfish you could use the following command to examine the "
"boot script (usually called C</init>)  contained in a Linux initrd or "
"initramfs image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2067 ../src/guestfs-actions.pod:3302
#, no-wrap
msgid ""
" initrd-cat /boot/initrd-<version>.img init\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2069
msgid "See also L</initrd-list>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2074
msgid "initrd-list"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2076
#, no-wrap
msgid ""
" initrd-list path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2078 ../src/guestfs-actions.pod:3321
msgid "This command lists out files contained in an initrd."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2080 ../src/guestfs-actions.pod:3323
msgid ""
"The files are listed without any initial C</> character.  The files are "
"listed in the order they appear (not necessarily alphabetical).  Directory "
"names are listed as separate items."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2084 ../src/guestfs-actions.pod:3327
msgid ""
"Old Linux kernels (2.4 and earlier) used a compressed ext2 filesystem as "
"initrd.  We I<only> support the newer initramfs format (compressed cpio "
"files)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2088
msgid "inotify-add-watch"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2090
#, no-wrap
msgid ""
" inotify-add-watch path mask\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2092 ../src/guestfs-actions.pod:3344
msgid "Watch C<path> for the events listed in C<mask>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2094 ../src/guestfs-actions.pod:3346
msgid ""
"Note that if C<path> is a directory then events within that directory are "
"watched, but this does I<not> happen recursively (in subdirectories)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2098 ../src/guestfs-actions.pod:3350
msgid ""
"Note for non-C or non-Linux callers: the inotify events are defined by the "
"Linux kernel ABI and are listed in C</usr/include/sys/inotify.h>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2102
msgid "inotify-close"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2104
#, no-wrap
msgid ""
" inotify-close\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2106 ../src/guestfs-actions.pod:3363
msgid ""
"This closes the inotify handle which was previously opened by inotify_init.  "
"It removes all watches, throws away any pending events, and deallocates all "
"resources."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2110
msgid "inotify-files"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2112
#, no-wrap
msgid ""
" inotify-files\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2114
msgid ""
"This function is a helpful wrapper around L</inotify-read> which just "
"returns a list of pathnames of objects that were touched.  The returned "
"pathnames are sorted and deduplicated."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2118
msgid "inotify-init"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2120
#, no-wrap
msgid ""
" inotify-init maxevents\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2122 ../src/guestfs-actions.pod:3392
msgid ""
"This command creates a new inotify handle.  The inotify subsystem can be "
"used to notify events which happen to objects in the guest filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2126
msgid ""
"C<maxevents> is the maximum number of events which will be queued up between "
"calls to L</inotify-read> or L</inotify-files>.  If this is passed as C<0>, "
"then the kernel (or previously set)  default is used.  For Linux 2.6.29 the "
"default was 16384 events.  Beyond this limit, the kernel throws away events, "
"but records the fact that it threw them away by setting a flag "
"C<IN_Q_OVERFLOW> in the returned structure list (see L</inotify-read>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2136
msgid ""
"Before any events are generated, you have to add some watches to the "
"internal watch list.  See: L</inotify-add-watch> and L</inotify-rm-watch>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2140
msgid ""
"Queued up events should be read periodically by calling L</inotify-read> (or "
"L</inotify-files> which is just a helpful wrapper around L</inotify-read>).  "
"If you don't read the events out often enough then you risk the internal "
"queue overflowing."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2147
msgid ""
"The handle should be closed after use by calling L</inotify-close>.  This "
"also removes any watches automatically."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2151 ../src/guestfs-actions.pod:3421
msgid ""
"See also L<inotify(7)> for an overview of the inotify interface as exposed "
"by the Linux kernel, which is roughly what we expose via libguestfs.  Note "
"that there is one global inotify handle per libguestfs instance."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2156
msgid "inotify-read"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2158
#, no-wrap
msgid ""
" inotify-read\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2160 ../src/guestfs-actions.pod:3435
msgid ""
"Return the complete queue of events that have happened since the previous "
"read call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2163 ../src/guestfs-actions.pod:3438
msgid "If no events have happened, this returns an empty list."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2165 ../src/guestfs-actions.pod:3440
msgid ""
"I<Note>: In order to make sure that all events have been read, you must call "
"this function repeatedly until it returns an empty list.  The reason is that "
"the call will read events up to the maximum appliance-to-host message size "
"and leave remaining events in the queue."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2171
msgid "inotify-rm-watch"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2173
#, no-wrap
msgid ""
" inotify-rm-watch wd\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2175
msgid "Remove a previously defined inotify watch.  See L</inotify-add-watch>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2178
msgid "inspect-get-arch"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2180
#, no-wrap
msgid ""
" inspect-get-arch root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2182
msgid ""
"This returns the architecture of the inspected operating system.  The "
"possible return values are listed under L</file-architecture>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2186 ../src/guestfs-actions.pod:3475
msgid ""
"If the architecture could not be determined, then the string C<unknown> is "
"returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2189 ../fish/guestfish-actions.pod:2296 ../fish/guestfish-actions.pod:2375 ../fish/guestfish-actions.pod:2387 ../fish/guestfish-actions.pod:2471 ../fish/guestfish-actions.pod:2533 ../fish/guestfish-actions.pod:2554 ../fish/guestfish-actions.pod:2568 ../fish/guestfish-actions.pod:2608 ../fish/guestfish-actions.pod:2652 ../fish/guestfish-actions.pod:2665 ../fish/guestfish-actions.pod:2678 ../fish/guestfish-actions.pod:2688 ../fish/guestfish-actions.pod:2698 ../fish/guestfish-actions.pod:2710 ../fish/guestfish-actions.pod:2806 ../fish/guestfish-actions.pod:2840 ../src/guestfs-actions.pod:3478 ../src/guestfs-actions.pod:3592 ../src/guestfs-actions.pod:3696 ../src/guestfs-actions.pod:3715 ../src/guestfs-actions.pod:3846 ../src/guestfs-actions.pod:3930 ../src/guestfs-actions.pod:3958 ../src/guestfs-actions.pod:3979 ../src/guestfs-actions.pod:4032 ../src/guestfs-actions.pod:4084 ../src/guestfs-actions.pod:4104 ../src/guestfs-actions.pod:4124 ../src/guestfs-actions.pod:4141 ../src/guestfs-actions.pod:4157 ../src/guestfs-actions.pod:4175 ../src/guestfs-actions.pod:4277 ../src/guestfs-actions.pod:4318
msgid "Please read L<guestfs(3)/INSPECTION> for more details."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2191
msgid "inspect-get-distro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2193
#, no-wrap
msgid ""
" inspect-get-distro root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2195 ../src/guestfs-actions.pod:3491
msgid "This returns the distro (distribution) of the inspected operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2198 ../src/guestfs-actions.pod:3494
msgid "Currently defined distros are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2202 ../src/guestfs-actions.pod:3498
msgid "\"archlinux\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2204 ../src/guestfs-actions.pod:3500
msgid "Arch Linux."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2206 ../src/guestfs-actions.pod:3502
msgid "\"buildroot\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2208 ../src/guestfs-actions.pod:3504
msgid "Buildroot-derived distro, but not one we specifically recognize."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2210 ../src/guestfs-actions.pod:3506
msgid "\"centos\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2212 ../src/guestfs-actions.pod:3508
msgid "CentOS."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2214 ../src/guestfs-actions.pod:3510
msgid "\"cirros\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2216 ../src/guestfs-actions.pod:3512
msgid "Cirros."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2218 ../src/guestfs-actions.pod:3514
msgid "\"debian\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2220 ../src/guestfs-actions.pod:3516
msgid "Debian."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2222 ../src/guestfs-actions.pod:3518
msgid "\"fedora\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2224 ../src/guestfs-actions.pod:3520
msgid "Fedora."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2226 ../src/guestfs-actions.pod:3522
msgid "\"freedos\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2228 ../src/guestfs-actions.pod:3524
msgid "FreeDOS."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2230 ../src/guestfs-actions.pod:3526
msgid "\"gentoo\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2232 ../src/guestfs-actions.pod:3528
msgid "Gentoo."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2234 ../src/guestfs-actions.pod:3530
msgid "\"linuxmint\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2236 ../src/guestfs-actions.pod:3532
msgid "Linux Mint."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2238 ../src/guestfs-actions.pod:3534
msgid "\"mageia\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2240 ../src/guestfs-actions.pod:3536
msgid "Mageia."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2242 ../src/guestfs-actions.pod:3538
msgid "\"mandriva\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2244 ../src/guestfs-actions.pod:3540
msgid "Mandriva."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2246 ../src/guestfs-actions.pod:3542
msgid "\"meego\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2248 ../src/guestfs-actions.pod:3544
msgid "MeeGo."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2250 ../src/guestfs-actions.pod:3546
msgid "\"opensuse\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2252 ../src/guestfs-actions.pod:3548
msgid "OpenSUSE."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2254 ../src/guestfs-actions.pod:3550
msgid "\"pardus\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2256 ../src/guestfs-actions.pod:3552
msgid "Pardus."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2258 ../src/guestfs-actions.pod:3554
msgid "\"redhat-based\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2260 ../src/guestfs-actions.pod:3556
msgid "Some Red Hat-derived distro."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2262 ../src/guestfs-actions.pod:3558
msgid "\"rhel\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2264 ../src/guestfs-actions.pod:3560
msgid "Red Hat Enterprise Linux."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2266 ../src/guestfs-actions.pod:3562
msgid "\"scientificlinux\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2268 ../src/guestfs-actions.pod:3564
msgid "Scientific Linux."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2270 ../src/guestfs-actions.pod:3566
msgid "\"slackware\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2272 ../src/guestfs-actions.pod:3568
msgid "Slackware."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2274 ../src/guestfs-actions.pod:3570
msgid "\"ttylinux\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2276 ../src/guestfs-actions.pod:3572
msgid "ttylinux."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2278 ../src/guestfs-actions.pod:3574
msgid "\"ubuntu\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2280 ../src/guestfs-actions.pod:3576
msgid "Ubuntu."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2282 ../fish/guestfish-actions.pod:2366 ../fish/guestfish-actions.pod:2643 ../src/guestfs-actions.pod:3578 ../src/guestfs-actions.pod:3687 ../src/guestfs-actions.pod:4075
msgid "\"unknown\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2284 ../src/guestfs-actions.pod:3580
msgid "The distro could not be determined."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2286 ../fish/guestfish-actions.pod:2623 ../src/guestfs-actions.pod:3582 ../src/guestfs-actions.pod:4055
msgid "\"windows\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2288 ../src/guestfs-actions.pod:3584
msgid ""
"Windows does not have distributions.  This string is returned if the OS type "
"is Windows."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2293 ../fish/guestfish-actions.pod:2372 ../fish/guestfish-actions.pod:2649 ../src/guestfs-actions.pod:3589 ../src/guestfs-actions.pod:3693 ../src/guestfs-actions.pod:4081
msgid ""
"Future versions of libguestfs may return other strings here.  The caller "
"should be prepared to handle any string."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2298
msgid "inspect-get-drive-mappings"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2300
#, no-wrap
msgid ""
" inspect-get-drive-mappings root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2302 ../src/guestfs-actions.pod:3605
msgid ""
"This call is useful for Windows which uses a primitive system of assigning "
"drive letters (like \"C:\") to partitions.  This inspection API examines the "
"Windows Registry to find out how disks/partitions are mapped to drive "
"letters, and returns a hash table as in the example below:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2308 ../src/guestfs-actions.pod:3611
#, no-wrap
msgid ""
" C      =>     /dev/vda2\n"
" E      =>     /dev/vdb1\n"
" F      =>     /dev/vdc1\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2312 ../src/guestfs-actions.pod:3615
msgid ""
"Note that keys are drive letters.  For Windows, the key is case insensitive "
"and just contains the drive letter, without the customary colon separator "
"character."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2316 ../src/guestfs-actions.pod:3619
msgid ""
"In future we may support other operating systems that also used drive "
"letters, but the keys for those might not be case insensitive and might be "
"longer than 1 character.  For example in OS-9, hard drives were named C<h0>, "
"C<h1> etc."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2321 ../src/guestfs-actions.pod:3624
msgid ""
"For Windows guests, currently only hard drive mappings are returned.  "
"Removable disks (eg. DVD-ROMs) are ignored."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2324 ../src/guestfs-actions.pod:3627
msgid ""
"For guests that do not use drive mappings, or if the drive mappings could "
"not be determined, this returns an empty hash table."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2327
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-mountpoints>, L</inspect-get-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2331
msgid "inspect-get-filesystems"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2333
#, no-wrap
msgid ""
" inspect-get-filesystems root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2335 ../src/guestfs-actions.pod:3648
msgid ""
"This returns a list of all the filesystems that we think are associated with "
"this operating system.  This includes the root filesystem, other ordinary "
"filesystems, and non-mounted devices like swap partitions."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2340 ../src/guestfs-actions.pod:3653
msgid ""
"In the case of a multi-boot virtual machine, it is possible for a filesystem "
"to be shared between operating systems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2343
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-mountpoints>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2346
msgid "inspect-get-format"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2348
#, no-wrap
msgid ""
" inspect-get-format root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2350 ../src/guestfs-actions.pod:3671
msgid ""
"This returns the format of the inspected operating system.  You can use it "
"to detect install images, live CDs and similar."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2353 ../src/guestfs-actions.pod:3674
msgid "Currently defined formats are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2357 ../src/guestfs-actions.pod:3678
msgid "\"installed\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2359 ../src/guestfs-actions.pod:3680
msgid "This is an installed operating system."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2361 ../src/guestfs-actions.pod:3682
msgid "\"installer\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2363 ../src/guestfs-actions.pod:3684
msgid ""
"The disk image being inspected is not an installed operating system, but a "
"I<bootable> install disk, live CD, or similar."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2368 ../src/guestfs-actions.pod:3689
msgid "The format of this disk image is not known."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2377
msgid "inspect-get-hostname"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2379
#, no-wrap
msgid ""
" inspect-get-hostname root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2381 ../src/guestfs-actions.pod:3709
msgid ""
"This function returns the hostname of the operating system as found by "
"inspection of the guest's configuration files."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2384 ../src/guestfs-actions.pod:3712
msgid ""
"If the hostname could not be determined, then the string C<unknown> is "
"returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2389
msgid "inspect-get-icon"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2391
#, no-wrap
msgid ""
" inspect-get-icon root [favicon:true|false] [highquality:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2393 ../src/guestfs-actions.pod:3738
msgid ""
"This function returns an icon corresponding to the inspected operating "
"system.  The icon is returned as a buffer containing a PNG image (re-encoded "
"to PNG if necessary)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2397 ../src/guestfs-actions.pod:3742
msgid ""
"If it was not possible to get an icon this function returns a zero-length "
"(non-NULL) buffer.  I<Callers must check for this case>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2400 ../src/guestfs-actions.pod:3745
msgid ""
"Libguestfs will start by looking for a file called C</etc/favicon.png> or "
"C<C:\\etc\\favicon.png> and if it has the correct format, the contents of "
"this file will be returned.  You can disable favicons by passing the "
"optional C<favicon> boolean as false (default is true)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2406 ../src/guestfs-actions.pod:3751
msgid ""
"If finding the favicon fails, then we look in other places in the guest for "
"a suitable icon."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2409 ../src/guestfs-actions.pod:3754
msgid ""
"If the optional C<highquality> boolean is true then only high quality icons "
"are returned, which means only icons of high resolution with an alpha "
"channel.  The default (false) is to return any icon we can, even if it is of "
"substandard quality."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2420 ../src/guestfs-actions.pod:3765
msgid ""
"Unlike most other inspection API calls, the guest's disks must be mounted up "
"before you call this, since it needs to read information from the guest "
"filesystem during the call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2426 ../src/guestfs-actions.pod:3771
msgid ""
"B<Security:> The icon data comes from the untrusted guest, and should be "
"treated with caution.  PNG files have been known to contain exploits.  "
"Ensure that libpng (or other relevant libraries) are fully up to date before "
"trying to process or display the icon."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2434 ../src/guestfs-actions.pod:3779
msgid ""
"The PNG image returned can be any size.  It might not be square.  Libguestfs "
"tries to return the largest, highest quality icon available.  The "
"application must scale the icon to the required size."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2441 ../src/guestfs-actions.pod:3786
msgid ""
"Extracting icons from Windows guests requires the external C<wrestool> "
"program from the C<icoutils> package, and several programs (C<bmptopnm>, "
"C<pnmtopng>, C<pamcut>)  from the C<netpbm> package.  These must be "
"installed separately."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2448 ../src/guestfs-actions.pod:3793
msgid ""
"Operating system icons are usually trademarks.  Seek legal advice before "
"using trademarks in applications."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2455
msgid "inspect-get-major-version"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2457
#, no-wrap
msgid ""
" inspect-get-major-version root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2459 ../src/guestfs-actions.pod:3834
msgid "This returns the major version number of the inspected operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2462 ../src/guestfs-actions.pod:3837
msgid ""
"Windows uses a consistent versioning scheme which is I<not> reflected in the "
"popular public names used by the operating system.  Notably the operating "
"system known as \"Windows 7\" is really version 6.1 (ie. major = 6, minor = "
"1).  You can find out the real versions corresponding to releases of Windows "
"by consulting Wikipedia or MSDN."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2469 ../fish/guestfish-actions.pod:2480 ../src/guestfs-actions.pod:3844 ../src/guestfs-actions.pod:3861
msgid "If the version could not be determined, then C<0> is returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2473
msgid "inspect-get-minor-version"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2475
#, no-wrap
msgid ""
" inspect-get-minor-version root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2477 ../src/guestfs-actions.pod:3858
msgid "This returns the minor version number of the inspected operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2482
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-major-version>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2485
msgid "inspect-get-mountpoints"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2487
#, no-wrap
msgid ""
" inspect-get-mountpoints root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2489 ../src/guestfs-actions.pod:3876
msgid ""
"This returns a hash of where we think the filesystems associated with this "
"operating system should be mounted.  Callers should note that this is at "
"best an educated guess made by reading configuration files such as "
"C</etc/fstab>.  I<In particular note> that this may return filesystems which "
"are non-existent or not mountable and callers should be prepared to handle "
"or ignore failures if they try to mount them."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2498 ../src/guestfs-actions.pod:3885
msgid ""
"Each element in the returned hashtable has a key which is the path of the "
"mountpoint (eg. C</boot>) and a value which is the filesystem that would be "
"mounted there (eg. C</dev/sda1>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2503 ../src/guestfs-actions.pod:3890
msgid "Non-mounted devices such as swap devices are I<not> returned in this list."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2506
msgid ""
"For operating systems like Windows which still use drive letters, this call "
"will only return an entry for the first drive \"mounted on\" C</>.  For "
"information about the mapping of drive letters to partitions, see "
"L</inspect-get-drive-mappings>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2512
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2515
msgid "inspect-get-package-format"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2517
#, no-wrap
msgid ""
" inspect-get-package-format root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2519
msgid ""
"This function and L</inspect-get-package-management> return the package "
"format and package management tool used by the inspected operating system.  "
"For example for Fedora these functions would return C<rpm> (package format) "
"and C<yum> (package management)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2525 ../src/guestfs-actions.pod:3922
msgid ""
"This returns the string C<unknown> if we could not determine the package "
"format I<or> if the operating system does not have a real packaging system "
"(eg. Windows)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2529 ../src/guestfs-actions.pod:3926
msgid ""
"Possible strings include: C<rpm>, C<deb>, C<ebuild>, C<pisi>, C<pacman>, "
"C<pkgsrc>.  Future versions of libguestfs may return other strings."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2535
msgid "inspect-get-package-management"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2537
#, no-wrap
msgid ""
" inspect-get-package-management root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2539
msgid ""
"L</inspect-get-package-format> and this function return the package format "
"and package management tool used by the inspected operating system.  For "
"example for Fedora these functions would return C<rpm> (package format) and "
"C<yum> (package management)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2545 ../src/guestfs-actions.pod:3949
msgid ""
"This returns the string C<unknown> if we could not determine the package "
"management tool I<or> if the operating system does not have a real packaging "
"system (eg. Windows)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2549 ../src/guestfs-actions.pod:3953
msgid ""
"Possible strings include: C<yum>, C<up2date>, C<apt> (for all Debian "
"derivatives), C<portage>, C<pisi>, C<pacman>, C<urpmi>, C<zypper>.  Future "
"versions of libguestfs may return other strings."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2556
msgid "inspect-get-product-name"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2558
#, no-wrap
msgid ""
" inspect-get-product-name root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2560 ../src/guestfs-actions.pod:3971
msgid ""
"This returns the product name of the inspected operating system.  The "
"product name is generally some freeform string which can be displayed to the "
"user, but should not be parsed by programs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2565 ../src/guestfs-actions.pod:3976
msgid ""
"If the product name could not be determined, then the string C<unknown> is "
"returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2570
msgid "inspect-get-product-variant"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2572
#, no-wrap
msgid ""
" inspect-get-product-variant root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2574 ../src/guestfs-actions.pod:3992
msgid "This returns the product variant of the inspected operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2577 ../src/guestfs-actions.pod:3995
msgid ""
"For Windows guests, this returns the contents of the Registry key "
"C<HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion> C<InstallationType> "
"which is usually a string such as C<Client> or C<Server> (other values are "
"possible).  This can be used to distinguish consumer and enterprise versions "
"of Windows that have the same version number (for example, Windows 7 and "
"Windows 2008 Server are both version 6.1, but the former is C<Client> and "
"the latter is C<Server>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2586 ../src/guestfs-actions.pod:4004
msgid ""
"For enterprise Linux guests, in future we intend this to return the product "
"variant such as C<Desktop>, C<Server> and so on.  But this is not "
"implemented at present."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2590 ../src/guestfs-actions.pod:4008
msgid ""
"If the product variant could not be determined, then the string C<unknown> "
"is returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2593
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"L</inspect-get-product-name>, L</inspect-get-major-version>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2597
msgid "inspect-get-roots"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2599
#, no-wrap
msgid ""
" inspect-get-roots\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2601
msgid ""
"This function is a convenient way to get the list of root devices, as "
"returned from a previous call to L</inspect-os>, but without redoing the "
"whole inspection process."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2605
msgid ""
"This returns an empty list if either no root devices were found or the "
"caller has not called L</inspect-os>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2610
msgid "inspect-get-type"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2612
#, no-wrap
msgid ""
" inspect-get-type root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2614 ../src/guestfs-actions.pod:4046
msgid ""
"This returns the type of the inspected operating system.  Currently defined "
"types are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2619 ../src/guestfs-actions.pod:4051
msgid "\"linux\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2621 ../src/guestfs-actions.pod:4053
msgid "Any Linux-based operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2625 ../src/guestfs-actions.pod:4057
msgid "Any Microsoft Windows operating system."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2627 ../src/guestfs-actions.pod:4059
msgid "\"freebsd\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2629 ../src/guestfs-actions.pod:4061
msgid "FreeBSD."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2631 ../src/guestfs-actions.pod:4063
msgid "\"netbsd\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2633 ../src/guestfs-actions.pod:4065
msgid "NetBSD."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2635 ../src/guestfs-actions.pod:4067
msgid "\"hurd\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2637 ../src/guestfs-actions.pod:4069
msgid "GNU/Hurd."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2639 ../src/guestfs-actions.pod:4071
msgid "\"dos\""
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2641 ../src/guestfs-actions.pod:4073
msgid "MS-DOS, FreeDOS and others."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2645 ../src/guestfs-actions.pod:4077
msgid "The operating system type could not be determined."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2654
msgid "inspect-get-windows-current-control-set"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2656
#, no-wrap
msgid ""
" inspect-get-windows-current-control-set root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2658 ../src/guestfs-actions.pod:4097
msgid ""
"This returns the Windows CurrentControlSet of the inspected guest.  The "
"CurrentControlSet is a registry key name such as C<ControlSet001>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2661 ../src/guestfs-actions.pod:4100
msgid ""
"This call assumes that the guest is Windows and that the Registry could be "
"examined by inspection.  If this is not the case then an error is returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2667
msgid "inspect-get-windows-systemroot"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2669
#, no-wrap
msgid ""
" inspect-get-windows-systemroot root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2671 ../src/guestfs-actions.pod:4117
msgid ""
"This returns the Windows systemroot of the inspected guest.  The systemroot "
"is a directory path such as C</WINDOWS>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2674 ../src/guestfs-actions.pod:4120
msgid ""
"This call assumes that the guest is Windows and that the systemroot could be "
"determined by inspection.  If this is not the case then an error is "
"returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2680
msgid "inspect-is-live"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2682
#, no-wrap
msgid ""
" inspect-is-live root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2684
msgid ""
"If L</inspect-get-format> returns C<installer> (this is an install disk), "
"then this returns true if a live image was detected on the disk."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2690
msgid "inspect-is-multipart"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2692
#, no-wrap
msgid ""
" inspect-is-multipart root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2694
msgid ""
"If L</inspect-get-format> returns C<installer> (this is an install disk), "
"then this returns true if the disk is part of a set."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2700
msgid "inspect-is-netinst"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2702
#, no-wrap
msgid ""
" inspect-is-netinst root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2704
msgid ""
"If L</inspect-get-format> returns C<installer> (this is an install disk), "
"then this returns true if the disk is a network installer, ie. not a "
"self-contained install CD but one which is likely to require network access "
"to complete the install."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2712
msgid "inspect-list-applications"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2714
#, no-wrap
msgid ""
" inspect-list-applications root\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2716 ../src/guestfs-actions.pod:4187
msgid "Return the list of applications installed in the operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2718
msgid ""
"I<Note:> This call works differently from other parts of the inspection "
"API.  You have to call L</inspect-os>, then L</inspect-get-mountpoints>, "
"then mount up the disks, before calling this.  Listing applications is a "
"significantly more difficult operation which requires access to the full "
"filesystem.  Also note that unlike the other L</inspect-get-*> calls which "
"are just returning data cached in the libguestfs handle, this call actually "
"reads parts of the mounted filesystems during the call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2728 ../src/guestfs-actions.pod:4199
msgid ""
"This returns an empty list if the inspection code was not able to determine "
"the list of applications."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2731 ../src/guestfs-actions.pod:4202
msgid "The application structure contains the following fields:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2735 ../src/guestfs-actions.pod:4206
msgid "C<app_name>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2737 ../src/guestfs-actions.pod:4208
msgid ""
"The name of the application.  For Red Hat-derived and Debian-derived Linux "
"guests, this is the package name."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2740 ../src/guestfs-actions.pod:4211
msgid "C<app_display_name>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2742 ../src/guestfs-actions.pod:4213
msgid ""
"The display name of the application, sometimes localized to the install "
"language of the guest operating system."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2745 ../src/guestfs-actions.pod:4216
msgid ""
"If unavailable this is returned as an empty string C<\"\">.  Callers needing "
"to display something can use C<app_name> instead."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2748 ../src/guestfs-actions.pod:4219
msgid "C<app_epoch>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2750 ../src/guestfs-actions.pod:4221
msgid ""
"For package managers which use epochs, this contains the epoch of the "
"package (an integer).  If unavailable, this is returned as C<0>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2753 ../src/guestfs-actions.pod:4224
msgid "C<app_version>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2755 ../src/guestfs-actions.pod:4226
msgid ""
"The version string of the application or package.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2758 ../src/guestfs-actions.pod:4229
msgid "C<app_release>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2760 ../src/guestfs-actions.pod:4231
msgid ""
"The release string of the application or package, for package managers that "
"use this.  If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2764 ../src/guestfs-actions.pod:4235
msgid "C<app_install_path>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2766 ../src/guestfs-actions.pod:4237
msgid ""
"The installation path of the application (on operating systems such as "
"Windows which use installation paths).  This path is in the format used by "
"the guest operating system, it is not a libguestfs path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2771 ../src/guestfs-actions.pod:4242
msgid "If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2773 ../src/guestfs-actions.pod:4244
msgid "C<app_trans_path>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2775 ../src/guestfs-actions.pod:4246
msgid ""
"The install path translated into a libguestfs path.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2778 ../src/guestfs-actions.pod:4249
msgid "C<app_publisher>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2780 ../src/guestfs-actions.pod:4251
msgid ""
"The name of the publisher of the application, for package managers that use "
"this.  If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2784 ../src/guestfs-actions.pod:4255
msgid "C<app_url>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2786 ../src/guestfs-actions.pod:4257
msgid ""
"The URL (eg. upstream URL) of the application.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2789 ../src/guestfs-actions.pod:4260
msgid "C<app_source_package>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2791 ../src/guestfs-actions.pod:4262
msgid ""
"For packaging systems which support this, the name of the source package.  "
"If unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2794 ../src/guestfs-actions.pod:4265
msgid "C<app_summary>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2796 ../src/guestfs-actions.pod:4267
msgid ""
"A short (usually one line) description of the application or package.  If "
"unavailable this is returned as an empty string C<\"\">."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:2799 ../src/guestfs-actions.pod:4270
msgid "C<app_description>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2801 ../src/guestfs-actions.pod:4272
msgid ""
"A longer description of the application or package.  If unavailable this is "
"returned as an empty string C<\"\">."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2808
msgid "inspect-os"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2810
#, no-wrap
msgid ""
" inspect-os\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2812 ../src/guestfs-actions.pod:4290
msgid ""
"This function uses other libguestfs functions and certain heuristics to "
"inspect the disk(s) (usually disks belonging to a virtual machine), looking "
"for operating systems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2816 ../src/guestfs-actions.pod:4294
msgid "The list returned is empty if no operating systems were found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2818 ../src/guestfs-actions.pod:4296
msgid ""
"If one operating system was found, then this returns a list with a single "
"element, which is the name of the root filesystem of this operating system.  "
"It is also possible for this function to return a list containing more than "
"one element, indicating a dual-boot or multi-boot virtual machine, with each "
"element being the root filesystem of one of the operating systems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2825
msgid ""
"You can pass the root string(s) returned to other L</inspect-get-*> "
"functions in order to query further information about each operating system, "
"such as the name and version."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2830
msgid ""
"This function uses other libguestfs features such as L</mount-ro> and "
"L</umount-all> in order to mount and unmount filesystems and look at the "
"contents.  This should be called with no disks currently mounted.  The "
"function may also use Augeas, so any existing Augeas handle will be closed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2836 ../src/guestfs-actions.pod:4314
msgid ""
"This function cannot decrypt encrypted disks.  The caller must do that first "
"(supplying the necessary keys) if the disk is encrypted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2842 ../fish/guestfish-actions.pod:3056 ../fish/guestfish-actions.pod:3121
msgid "See also L</list-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2844
msgid "is-blockdev"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2846
#, no-wrap
msgid ""
" is-blockdev path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2848 ../src/guestfs-actions.pod:4334
msgid ""
"This returns C<true> if and only if there is a block device with the given "
"C<path> name."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2851 ../fish/guestfish-actions.pod:2860 ../fish/guestfish-actions.pod:2879 ../fish/guestfish-actions.pod:2888 ../fish/guestfish-actions.pod:2898 ../fish/guestfish-actions.pod:2932 ../fish/guestfish-actions.pod:2941
msgid "See also L</stat>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2853
msgid "is-chardev"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2855
#, no-wrap
msgid ""
" is-chardev path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2857 ../src/guestfs-actions.pod:4349
msgid ""
"This returns C<true> if and only if there is a character device with the "
"given C<path> name."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2862
msgid "is-config"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2864
#, no-wrap
msgid ""
" is-config\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2866 ../src/guestfs-actions.pod:4363
msgid ""
"This returns true iff this handle is being configured (in the C<CONFIG> "
"state)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2871
msgid "is-dir"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2873
#, no-wrap
msgid ""
" is-dir path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2875 ../src/guestfs-actions.pod:4378
msgid ""
"This returns C<true> if and only if there is a directory with the given "
"C<path> name.  Note that it returns false for other objects like files."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2881
msgid "is-fifo"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2883
#, no-wrap
msgid ""
" is-fifo path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2885 ../src/guestfs-actions.pod:4394
msgid ""
"This returns C<true> if and only if there is a FIFO (named pipe)  with the "
"given C<path> name."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2890
msgid "is-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2892
#, no-wrap
msgid ""
" is-file path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2894 ../src/guestfs-actions.pod:4409
msgid ""
"This returns C<true> if and only if there is a regular file with the given "
"C<path> name.  Note that it returns false for other objects like "
"directories."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2900
msgid "is-launching"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2902
#, no-wrap
msgid ""
" is-launching\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2904 ../src/guestfs-actions.pod:4424
msgid ""
"This returns true iff this handle is launching the subprocess (in the "
"C<LAUNCHING> state)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2909
msgid "is-lv"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2911
#, no-wrap
msgid ""
" is-lv device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2913 ../src/guestfs-actions.pod:4439
msgid ""
"This command tests whether C<device> is a logical volume, and returns true "
"iff this is the case."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2916
msgid "is-ready"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2918
#, no-wrap
msgid ""
" is-ready\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2920 ../src/guestfs-actions.pod:4451
msgid ""
"This returns true iff this handle is ready to accept commands (in the "
"C<READY> state)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2925
msgid "is-socket"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2927
#, no-wrap
msgid ""
" is-socket path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2929 ../src/guestfs-actions.pod:4466
msgid ""
"This returns C<true> if and only if there is a Unix domain socket with the "
"given C<path> name."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2934
msgid "is-symlink"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2936
#, no-wrap
msgid ""
" is-symlink path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2938 ../src/guestfs-actions.pod:4481
msgid ""
"This returns C<true> if and only if there is a symbolic link with the given "
"C<path> name."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2943
msgid "is-zero"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2945
#, no-wrap
msgid ""
" is-zero path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2947 ../src/guestfs-actions.pod:4496
msgid ""
"This returns true iff the file exists and the file is empty or it contains "
"all zero bytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2950
msgid "is-zero-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2952
#, no-wrap
msgid ""
" is-zero-device device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2954 ../src/guestfs-actions.pod:4509
msgid "This returns true iff the device exists and contains all zero bytes."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2956 ../src/guestfs-actions.pod:4511
msgid "Note that for large devices this can take a long time to run."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2958
msgid "isoinfo"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2960
#, no-wrap
msgid ""
" isoinfo isofile\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2962
msgid ""
"This is the same as L</isoinfo-device> except that it works for an ISO file "
"located inside some other mounted filesystem.  Note that in the common case "
"where you have added an ISO file as a libguestfs device, you would I<not> "
"call this.  Instead you would call L</isoinfo-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2968
msgid "isoinfo-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2970
#, no-wrap
msgid ""
" isoinfo-device device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2972 ../src/guestfs-actions.pod:4541
msgid ""
"C<device> is an ISO device.  This returns a struct of information read from "
"the primary volume descriptor (the ISO equivalent of the superblock) of the "
"device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2976 ../src/guestfs-actions.pod:4545
msgid ""
"Usually it is more efficient to use the L<isoinfo(1)> command with the I<-d> "
"option on the host to analyze ISO files, instead of going through "
"libguestfs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2980 ../src/guestfs-actions.pod:4549
msgid ""
"For information on the primary volume descriptor fields, see "
"L<http://wiki.osdev.org/ISO_9660#The_Primary_Volume_Descriptor>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2983
msgid "kill-subprocess"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2985
#, no-wrap
msgid ""
" kill-subprocess\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2987 ../src/guestfs-actions.pod:4563
msgid "This kills the qemu subprocess.  You should never need to call this."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2989
msgid "launch"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:2991
msgid "run"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:2993
#, no-wrap
msgid ""
" launch\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2995 ../src/guestfs-actions.pod:4574
msgid ""
"Internally libguestfs is implemented by running a virtual machine using "
"L<qemu(1)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:2998 ../src/guestfs-actions.pod:4577
msgid ""
"You should call this after configuring the handle (eg. adding drives) but "
"before performing any actions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3001
msgid "lchown"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3003
#, no-wrap
msgid ""
" lchown owner group path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3005
msgid ""
"Change the file owner to C<owner> and group to C<group>.  This is like "
"L</chown> but if C<path> is a symlink then the link itself is changed, not "
"the target."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3013
msgid "lgetxattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3015
#, no-wrap
msgid ""
" lgetxattr path name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3017 ../src/guestfs-actions.pod:4617
msgid ""
"Get a single extended attribute from file C<path> named C<name>.  If C<path> "
"is a symlink, then this call returns an extended attribute from the symlink."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3031
msgid "See also: L</lgetxattrs>, L</getxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3033
msgid "lgetxattrs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3035
#, no-wrap
msgid ""
" lgetxattrs path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3037
msgid ""
"This is the same as L</getxattrs>, but if C<path> is a symbolic link, then "
"it returns the extended attributes of the link itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3041
msgid "list-9p"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3043
#, no-wrap
msgid ""
" list-9p\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3045 ../src/guestfs-actions.pod:4660
msgid ""
"List all 9p filesystems attached to the guest.  A list of mount tags is "
"returned."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3048
msgid "list-devices"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3050
#, no-wrap
msgid ""
" list-devices\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3052 ../src/guestfs-actions.pod:4674
msgid "List all the block devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3054 ../src/guestfs-actions.pod:4676
msgid "The full block device names are returned, eg. C</dev/sda>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3058
msgid "list-dm-devices"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3060
#, no-wrap
msgid ""
" list-dm-devices\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3062 ../src/guestfs-actions.pod:4691
msgid "List all device mapper devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3064
msgid ""
"The returned list contains C</dev/mapper/*> devices, eg. ones created by a "
"previous call to L</luks-open>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3067
msgid ""
"Device mapper devices which correspond to logical volumes are I<not> "
"returned in this list.  Call L</lvs> if you want to list logical volumes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3071
msgid "list-filesystems"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3073
#, no-wrap
msgid ""
" list-filesystems\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3075 ../src/guestfs-actions.pod:4711
msgid ""
"This inspection command looks for filesystems on partitions, block devices "
"and logical volumes, returning a list of devices containing filesystems and "
"their type."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3079 ../src/guestfs-actions.pod:4715
msgid ""
"The return value is a hash, where the keys are the devices containing "
"filesystems, and the values are the filesystem types.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3083 ../src/guestfs-actions.pod:4719
#, no-wrap
msgid ""
" \"/dev/sda1\" => \"ntfs\"\n"
" \"/dev/sda2\" => \"ext2\"\n"
" \"/dev/vg_guest/lv_root\" => \"ext4\"\n"
" \"/dev/vg_guest/lv_swap\" => \"swap\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3088 ../src/guestfs-actions.pod:4724
msgid ""
"The value can have the special value \"unknown\", meaning the content of the "
"device is undetermined or empty.  \"swap\" means a Linux swap partition."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3092
msgid ""
"This command runs other libguestfs commands, which might include L</mount> "
"and L</umount>, and therefore you should use this soon after launch and only "
"when nothing is mounted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3096
msgid ""
"Not all of the filesystems returned will be mountable.  In particular, swap "
"partitions are returned in the list.  Also this command does not check that "
"each filesystem found is valid and mountable, and some filesystems might be "
"mountable but require special options.  Filesystems may not all belong to a "
"single logical operating system (use L</inspect-os> to look for OSes)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3104
msgid "list-md-devices"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3106
#, no-wrap
msgid ""
" list-md-devices\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3108 ../src/guestfs-actions.pod:4753
msgid "List all Linux md devices."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3110
msgid "list-partitions"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3112
#, no-wrap
msgid ""
" list-partitions\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3114 ../src/guestfs-actions.pod:4766
msgid "List all the partitions detected on all block devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3116 ../src/guestfs-actions.pod:4768
msgid "The full partition device names are returned, eg. C</dev/sda1>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3118
msgid ""
"This does not return logical volumes.  For that you will need to call "
"L</lvs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3123
msgid "ll"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3125
#, no-wrap
msgid ""
" ll directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3127 ../src/guestfs-actions.pod:4787
msgid ""
"List the files in C<directory> (relative to the root directory, there is no "
"cwd) in the format of 'ls -la'."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3130 ../fish/guestfish-actions.pod:3139 ../src/guestfs-actions.pod:4790 ../src/guestfs-actions.pod:4806
msgid ""
"This command is mostly useful for interactive sessions.  It is I<not> "
"intended that you try to parse the output string."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3133
msgid "llz"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3135
#, no-wrap
msgid ""
" llz directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3137 ../src/guestfs-actions.pod:4804
msgid "List the files in C<directory> in the format of 'ls -laZ'."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3142
msgid "ln"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3144
#, no-wrap
msgid ""
" ln target linkname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3146 ../src/guestfs-actions.pod:4821
msgid "This command creates a hard link using the C<ln> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3148
msgid "ln-f"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3150
#, no-wrap
msgid ""
" ln-f target linkname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3152 ../src/guestfs-actions.pod:4834
msgid ""
"This command creates a hard link using the C<ln -f> command.  The I<-f> "
"option removes the link (C<linkname>) if it exists already."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3155
msgid "ln-s"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3157
#, no-wrap
msgid ""
" ln-s target linkname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3159 ../src/guestfs-actions.pod:4848
msgid "This command creates a symbolic link using the C<ln -s> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3161
msgid "ln-sf"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3163
#, no-wrap
msgid ""
" ln-sf target linkname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3165 ../src/guestfs-actions.pod:4861
msgid ""
"This command creates a symbolic link using the C<ln -sf> command, The I<-f> "
"option removes the link (C<linkname>) if it exists already."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3168
msgid "lremovexattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3170
#, no-wrap
msgid ""
" lremovexattr xattr path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3172
msgid ""
"This is the same as L</removexattr>, but if C<path> is a symbolic link, then "
"it removes an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3176
msgid "ls"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3178
#, no-wrap
msgid ""
" ls directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3180 ../src/guestfs-actions.pod:4889
msgid ""
"List the files in C<directory> (relative to the root directory, there is no "
"cwd).  The '.' and '..' entries are not returned, but hidden files are "
"shown."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3184
msgid ""
"This command is mostly useful for interactive sessions.  Programs should "
"probably use L</readdir> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3187
msgid "lsetxattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3189
#, no-wrap
msgid ""
" lsetxattr xattr val vallen path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3191
msgid ""
"This is the same as L</setxattr>, but if C<path> is a symbolic link, then it "
"sets an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3195
msgid "lstat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3197
#, no-wrap
msgid ""
" lstat path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3199 ../fish/guestfish-actions.pod:5329 ../src/guestfs-actions.pod:4925 ../src/guestfs-actions.pod:8321
msgid "Returns file information for the given C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3201
msgid ""
"This is the same as L</stat> except that if C<path> is a symbolic link, then "
"the link is stat-ed, not the file it refers to."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3205 ../src/guestfs-actions.pod:4931
msgid "This is the same as the C<lstat(2)> system call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3207
msgid "lstatlist"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3209
#, no-wrap
msgid ""
" lstatlist path 'names ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3211
msgid ""
"This call allows you to perform the L</lstat> operation on multiple files, "
"where all files are in the directory C<path>.  C<names> is the list of files "
"from this directory."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3215 ../src/guestfs-actions.pod:4950
msgid ""
"On return you get a list of stat structs, with a one-to-one correspondence "
"to the C<names> list.  If any name did not exist or could not be lstat'd, "
"then the C<ino> field of that structure is set to C<-1>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3220
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also L</lxattrlist> for a "
"similarly efficient call for getting extended attributes.  Very long "
"directory listings might cause the protocol message size to be exceeded, "
"causing this call to fail.  The caller must split up such requests into "
"smaller groups of names."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3228
msgid "luks-add-key"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3230
#, no-wrap
msgid ""
" luks-add-key device keyslot\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3232 ../src/guestfs-actions.pod:4978
msgid ""
"This command adds a new key on LUKS device C<device>.  C<key> is any "
"existing key, and is used to access the device.  C<newkey> is the new key to "
"add.  C<keyslot> is the key slot that will be replaced."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3237
msgid ""
"Note that if C<keyslot> already contains a key, then this command will "
"fail.  You have to use L</luks-kill-slot> first to remove that key."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3241 ../fish/guestfish-actions.pod:3263 ../fish/guestfish-actions.pod:3273 ../fish/guestfish-actions.pod:3284 ../fish/guestfish-actions.pod:3310 ../fish/guestfish-actions.pod:3320
msgid ""
"This command has one or more key or passphrase parameters.  Guestfish will "
"prompt for these separately."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3244
msgid "luks-close"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3246
#, no-wrap
msgid ""
" luks-close device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3248
msgid ""
"This closes a LUKS device that was created earlier by L</luks-open> or "
"L</luks-open-ro>.  The C<device> parameter must be the name of the LUKS "
"mapping device (ie. C</dev/mapper/mapname>) and I<not> the name of the "
"underlying block device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3254
msgid "luks-format"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3256
#, no-wrap
msgid ""
" luks-format device keyslot\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3258 ../src/guestfs-actions.pod:5019
msgid ""
"This command erases existing data on C<device> and formats the device as a "
"LUKS encrypted device.  C<key> is the initial key, which is added to key "
"slot C<slot>.  (LUKS supports 8 key slots, numbered 0-7)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3266
msgid "luks-format-cipher"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3268
#, no-wrap
msgid ""
" luks-format-cipher device keyslot cipher\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3270
msgid ""
"This command is the same as L</luks-format> but it also allows you to set "
"the C<cipher> used."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3276
msgid "luks-kill-slot"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3278
#, no-wrap
msgid ""
" luks-kill-slot device keyslot\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3280 ../src/guestfs-actions.pod:5060
msgid ""
"This command deletes the key in key slot C<keyslot> from the encrypted LUKS "
"device C<device>.  C<key> must be one of the I<other> keys."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3287
msgid "luks-open"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3289
#, no-wrap
msgid ""
" luks-open device mapname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3291 ../src/guestfs-actions.pod:5080
msgid ""
"This command opens a block device which has been encrypted according to the "
"Linux Unified Key Setup (LUKS) standard."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3294 ../src/guestfs-actions.pod:5083
msgid "C<device> is the encrypted block device or partition."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3296 ../src/guestfs-actions.pod:5085
msgid ""
"The caller must supply one of the keys associated with the LUKS block "
"device, in the C<key> parameter."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3299 ../src/guestfs-actions.pod:5088
msgid ""
"This creates a new block device called C</dev/mapper/mapname>.  Reads and "
"writes to this block device are decrypted from and encrypted to the "
"underlying C<device> respectively."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3303
msgid ""
"If this block device contains LVM volume groups, then calling L</vgscan> "
"followed by L</vg-activate-all> will make them visible."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3307
msgid "Use L</list-dm-devices> to list all device mapper devices."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3313
msgid "luks-open-ro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3315
#, no-wrap
msgid ""
" luks-open-ro device mapname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3317
msgid ""
"This is the same as L</luks-open> except that a read-only mapping is "
"created."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3323
msgid "lvcreate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3325
#, no-wrap
msgid ""
" lvcreate logvol volgroup mbytes\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3327 ../src/guestfs-actions.pod:5134
msgid ""
"This creates an LVM logical volume called C<logvol> on the volume group "
"C<volgroup>, with C<size> megabytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3330
msgid "lvcreate-free"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3332
#, no-wrap
msgid ""
" lvcreate-free logvol volgroup percent\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3334 ../src/guestfs-actions.pod:5149
msgid ""
"Create an LVM logical volume called C</dev/volgroup/logvol>, using "
"approximately C<percent> % of the free space remaining in the volume group.  "
"Most usefully, when C<percent> is C<100> this will create the largest "
"possible LV."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3339
msgid "lvm-canonical-lv-name"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3341
#, no-wrap
msgid ""
" lvm-canonical-lv-name lvname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3343 ../src/guestfs-actions.pod:5164
msgid ""
"This converts alternative naming schemes for LVs that you might find to the "
"canonical name.  For example, C</dev/mapper/VG-LV> is converted to "
"C</dev/VG/LV>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3347 ../src/guestfs-actions.pod:5168
msgid ""
"This command returns an error if the C<lvname> parameter does not refer to a "
"logical volume."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3350
msgid "See also L</is-lv>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3352
msgid "lvm-clear-filter"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3354
#, no-wrap
msgid ""
" lvm-clear-filter\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3356
msgid ""
"This undoes the effect of L</lvm-set-filter>.  LVM will be able to see every "
"block device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3359 ../fish/guestfish-actions.pod:3387 ../src/guestfs-actions.pod:5186 ../src/guestfs-actions.pod:5225
msgid "This command also clears the LVM cache and performs a volume group scan."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3362
msgid "lvm-remove-all"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3364
#, no-wrap
msgid ""
" lvm-remove-all\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3366 ../src/guestfs-actions.pod:5198
msgid ""
"This command removes all LVM logical volumes, volume groups and physical "
"volumes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3369
msgid "lvm-set-filter"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3371
#, no-wrap
msgid ""
" lvm-set-filter 'devices ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3373 ../src/guestfs-actions.pod:5211
msgid ""
"This sets the LVM device filter so that LVM will only be able to \"see\" the "
"block devices in the list C<devices>, and will ignore all other attached "
"block devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3377 ../src/guestfs-actions.pod:5215
msgid ""
"Where disk image(s) contain duplicate PVs or VGs, this command is useful to "
"get LVM to ignore the duplicates, otherwise LVM can get confused.  Note also "
"there are two types of duplication possible: either cloned PVs/VGs which "
"have identical UUIDs; or VGs that are not cloned but just happen to have the "
"same name.  In normal operation you cannot create this situation, but you "
"can do it outside LVM, eg.  by cloning disk images or by bit twiddling "
"inside the LVM metadata."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3390 ../src/guestfs-actions.pod:5228
msgid "You can filter whole block devices or individual partitions."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3392 ../src/guestfs-actions.pod:5230
msgid ""
"You cannot use this if any VG is currently in use (eg.  contains a mounted "
"filesystem), even if you are not filtering out that VG."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3396
msgid "lvremove"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3398
#, no-wrap
msgid ""
" lvremove device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3400 ../src/guestfs-actions.pod:5244
msgid ""
"Remove an LVM logical volume C<device>, where C<device> is the path to the "
"LV, such as C</dev/VG/LV>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3403 ../src/guestfs-actions.pod:5247
msgid ""
"You can also remove all LVs in a volume group by specifying the VG name, "
"C</dev/VG>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3406
msgid "lvrename"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3408
#, no-wrap
msgid ""
" lvrename logvol newlogvol\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3410 ../src/guestfs-actions.pod:5261
msgid "Rename a logical volume C<logvol> with the new name C<newlogvol>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3412
msgid "lvresize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3414
#, no-wrap
msgid ""
" lvresize device mbytes\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3416 ../src/guestfs-actions.pod:5274
msgid ""
"This resizes (expands or shrinks) an existing LVM logical volume to "
"C<mbytes>.  When reducing, data in the reduced part is lost."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3420
msgid "lvresize-free"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3422
#, no-wrap
msgid ""
" lvresize-free lv percent\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3424 ../src/guestfs-actions.pod:5289
msgid ""
"This expands an existing logical volume C<lv> so that it fills C<pc>% of the "
"remaining free space in the volume group.  Commonly you would call this with "
"pc = 100 which expands the logical volume as much as possible, using all "
"remaining free space in the volume group."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3430
msgid "lvs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3432
#, no-wrap
msgid ""
" lvs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3434 ../src/guestfs-actions.pod:5304
msgid ""
"List all the logical volumes detected.  This is the equivalent of the "
"L<lvs(8)> command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3437 ../src/guestfs-actions.pod:5307
msgid ""
"This returns a list of the logical volume device names "
"(eg. C</dev/VolGroup00/LogVol00>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3440
msgid "See also L</lvs-full>, L</list-filesystems>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3442
msgid "lvs-full"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3444
#, no-wrap
msgid ""
" lvs-full\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3446 ../src/guestfs-actions.pod:5323
msgid ""
"List all the logical volumes detected.  This is the equivalent of the "
"L<lvs(8)> command.  The \"full\" version includes all fields."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3449
msgid "lvuuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3451
#, no-wrap
msgid ""
" lvuuid device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3453 ../src/guestfs-actions.pod:5338
msgid "This command returns the UUID of the LVM LV C<device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3455
msgid "lxattrlist"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3457
#, no-wrap
msgid ""
" lxattrlist path 'names ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3459 ../src/guestfs-actions.pod:5352
msgid ""
"This call allows you to get the extended attributes of multiple files, where "
"all files are in the directory C<path>.  C<names> is the list of files from "
"this directory."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3463 ../src/guestfs-actions.pod:5356
msgid ""
"On return you get a flat list of xattr structs which must be interpreted "
"sequentially.  The first xattr struct always has a zero-length C<attrname>.  "
"C<attrval> in this struct is zero-length to indicate there was an error "
"doing C<lgetxattr> for this file, I<or> is a C string which is a decimal "
"number (the number of following attributes for this file, which could be "
"C<\"0\">).  Then after the first xattr struct are the zero or more "
"attributes for the first named file.  This repeats for the second and "
"subsequent files."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3473
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also L</lstatlist> for a "
"similarly efficient call for getting standard stats.  Very long directory "
"listings might cause the protocol message size to be exceeded, causing this "
"call to fail.  The caller must split up such requests into smaller groups of "
"names."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3481
msgid "md-create"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3483
#, no-wrap
msgid ""
" md-create name 'devices ...' [missingbitmap:N] [nrdevices:N] [spare:N] "
"[chunk:N] [level:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3485 ../src/guestfs-actions.pod:5399
msgid ""
"Create a Linux md (RAID) device named C<name> on the devices in the list "
"C<devices>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3492 ../src/guestfs-actions.pod:5406
msgid "C<missingbitmap>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3494 ../src/guestfs-actions.pod:5408
msgid ""
"A bitmap of missing devices.  If a bit is set it means that a missing device "
"is added to the array.  The least significant bit corresponds to the first "
"device in the array."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3498 ../src/guestfs-actions.pod:5412
msgid "As examples:"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3500 ../src/guestfs-actions.pod:5414
msgid ""
"If C<devices = [\"/dev/sda\"]> and C<missingbitmap = 0x1> then the resulting "
"array would be C<[E<lt>missingE<gt>, \"/dev/sda\"]>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3503 ../src/guestfs-actions.pod:5417
msgid ""
"If C<devices = [\"/dev/sda\"]> and C<missingbitmap = 0x2> then the resulting "
"array would be C<[\"/dev/sda\", E<lt>missingE<gt>]>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3506 ../src/guestfs-actions.pod:5420
msgid "This defaults to C<0> (no missing devices)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3508 ../src/guestfs-actions.pod:5422
msgid ""
"The length of C<devices> + the number of bits set in C<missingbitmap> must "
"equal C<nrdevices> + C<spare>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3511 ../src/guestfs-actions.pod:5425
msgid "C<nrdevices>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3513 ../src/guestfs-actions.pod:5427
msgid "The number of active RAID devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3515 ../src/guestfs-actions.pod:5429
msgid ""
"If not set, this defaults to the length of C<devices> plus the number of "
"bits set in C<missingbitmap>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3518 ../src/guestfs-actions.pod:5432
msgid "C<spare>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3520 ../src/guestfs-actions.pod:5434
msgid "The number of spare devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3522 ../src/guestfs-actions.pod:5436
msgid "If not set, this defaults to C<0>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3524 ../src/guestfs-actions.pod:5438
msgid "C<chunk>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3526 ../src/guestfs-actions.pod:5440
msgid "The chunk size in bytes."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3528 ../fish/guestfish-actions.pod:3551 ../src/guestfs-actions.pod:5442 ../src/guestfs-actions.pod:5493
msgid "C<level>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3530 ../src/guestfs-actions.pod:5444
msgid ""
"The RAID level, which can be one of: I<linear>, I<raid0>, I<0>, I<stripe>, "
"I<raid1>, I<1>, I<mirror>, I<raid4>, I<4>, I<raid5>, I<5>, I<raid6>, I<6>, "
"I<raid10>, I<10>.  Some of these are synonymous, and more levels may be "
"added in future."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3535 ../src/guestfs-actions.pod:5449
msgid "If not set, this defaults to C<raid1>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3541
msgid "md-detail"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3543
#, no-wrap
msgid ""
" md-detail md\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3545 ../src/guestfs-actions.pod:5487
msgid ""
"This command exposes the output of 'mdadm -DY E<lt>mdE<gt>'.  The following "
"fields are usually present in the returned hash.  Other fields may also be "
"present."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3553 ../src/guestfs-actions.pod:5495
msgid "The raid level of the MD device."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3555 ../src/guestfs-actions.pod:5497
msgid "C<devices>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3557 ../src/guestfs-actions.pod:5499
msgid "The number of underlying devices in the MD device."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3559 ../src/guestfs-actions.pod:5501
msgid "C<metadata>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3561 ../src/guestfs-actions.pod:5503
msgid "The metadata version used."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3563 ../src/guestfs-actions.pod:5505
msgid "C<uuid>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3565 ../src/guestfs-actions.pod:5507
msgid "The UUID of the MD device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3569 ../src/guestfs-actions.pod:5511
msgid "The name of the MD device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3573
msgid "md-stat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3575
#, no-wrap
msgid ""
" md-stat md\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3577 ../src/guestfs-actions.pod:5529
msgid ""
"This call returns a list of the underlying devices which make up the single "
"software RAID array device C<md>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3580
msgid "To get a list of software RAID devices, call L</list-md-devices>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3582 ../src/guestfs-actions.pod:5534
msgid ""
"Each structure returned corresponds to one device along with additional "
"status information:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3587 ../src/guestfs-actions.pod:5539
msgid "C<mdstat_device>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3589 ../src/guestfs-actions.pod:5541
msgid "The name of the underlying device."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3591 ../src/guestfs-actions.pod:5543
msgid "C<mdstat_index>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3593 ../src/guestfs-actions.pod:5545
msgid "The index of this device within the array."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3595 ../src/guestfs-actions.pod:5547
msgid "C<mdstat_flags>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3597 ../src/guestfs-actions.pod:5549
msgid ""
"Flags associated with this device.  This is a string containing (in no "
"specific order) zero or more of the following flags:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3602 ../src/guestfs-actions.pod:5554
msgid "C<W>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3604 ../src/guestfs-actions.pod:5556
msgid "write-mostly"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3606 ../src/guestfs-actions.pod:5558
msgid "C<F>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3608 ../src/guestfs-actions.pod:5560
msgid "device is faulty"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3610 ../src/guestfs-actions.pod:5562
msgid "C<S>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3612 ../src/guestfs-actions.pod:5564
msgid "device is a RAID spare"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3614 ../src/guestfs-actions.pod:5566
msgid "C<R>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3616 ../src/guestfs-actions.pod:5568
msgid "replacement"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3622
msgid "md-stop"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3624
#, no-wrap
msgid ""
" md-stop md\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3626 ../src/guestfs-actions.pod:5586
msgid ""
"This command deactivates the MD array named C<md>.  The device is stopped, "
"but it is not destroyed or zeroed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3629
msgid "mkdir"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3631
#, no-wrap
msgid ""
" mkdir path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3633 ../src/guestfs-actions.pod:5599
msgid "Create a directory named C<path>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3635
msgid "mkdir-mode"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3637
#, no-wrap
msgid ""
" mkdir-mode path mode\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3639 ../src/guestfs-actions.pod:5612
msgid ""
"This command creates a directory, setting the initial permissions of the "
"directory to C<mode>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3642 ../src/guestfs-actions.pod:5615
msgid ""
"For common Linux filesystems, the actual mode which is set will be C<mode & "
"~umask & 01777>.  Non-native-Linux filesystems may interpret the mode in "
"other ways."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3646
msgid "See also L</mkdir>, L</umask>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3648
msgid "mkdir-p"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3650
#, no-wrap
msgid ""
" mkdir-p path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3652 ../src/guestfs-actions.pod:5631
msgid ""
"Create a directory named C<path>, creating any parent directories as "
"necessary.  This is like the C<mkdir -p> shell command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3655
msgid "mkdtemp"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3657
#, no-wrap
msgid ""
" mkdtemp tmpl\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3659 ../src/guestfs-actions.pod:5644
msgid ""
"This command creates a temporary directory.  The C<tmpl> parameter should be "
"a full pathname for the temporary directory name with the final six "
"characters being \"XXXXXX\"."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3664 ../src/guestfs-actions.pod:5649
msgid ""
"For example: \"/tmp/myprogXXXXXX\" or \"/Temp/myprogXXXXXX\", the second one "
"being suitable for Windows filesystems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3667 ../src/guestfs-actions.pod:5652
msgid "The name of the temporary directory that was created is returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3670 ../src/guestfs-actions.pod:5655
msgid "The temporary directory is created with mode 0700 and is owned by root."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3673 ../src/guestfs-actions.pod:5658
msgid ""
"The caller is responsible for deleting the temporary directory and its "
"contents after use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3676 ../src/guestfs-actions.pod:5661
msgid "See also: L<mkdtemp(3)>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3678
msgid "mke2fs-J"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3680
#, no-wrap
msgid ""
" mke2fs-J fstype blocksize device journal\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3682 ../src/guestfs-actions.pod:5677
msgid ""
"This creates an ext2/3/4 filesystem on C<device> with an external journal on "
"C<journal>.  It is equivalent to the command:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3686 ../src/guestfs-actions.pod:5681
#, no-wrap
msgid ""
" mke2fs -t fstype -b blocksize -J device=<journal> <device>\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3688
msgid "See also L</mke2journal>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3690
msgid "mke2fs-JL"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3692
#, no-wrap
msgid ""
" mke2fs-JL fstype blocksize device label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3694 ../src/guestfs-actions.pod:5698
msgid ""
"This creates an ext2/3/4 filesystem on C<device> with an external journal on "
"the journal labeled C<label>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3697
msgid "See also L</mke2journal-L>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3699
msgid "mke2fs-JU"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3701
#, no-wrap
msgid ""
" mke2fs-JU fstype blocksize device uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3703 ../src/guestfs-actions.pod:5716
msgid ""
"This creates an ext2/3/4 filesystem on C<device> with an external journal on "
"the journal with UUID C<uuid>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3706
msgid "See also L</mke2journal-U>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3708
msgid "mke2journal"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3710
#, no-wrap
msgid ""
" mke2journal blocksize device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3712 ../src/guestfs-actions.pod:5732
msgid ""
"This creates an ext2 external journal on C<device>.  It is equivalent to the "
"command:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3715 ../src/guestfs-actions.pod:5735
#, no-wrap
msgid ""
" mke2fs -O journal_dev -b blocksize device\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3717
msgid "mke2journal-L"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3719
#, no-wrap
msgid ""
" mke2journal-L blocksize label device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3721 ../src/guestfs-actions.pod:5749
msgid "This creates an ext2 external journal on C<device> with label C<label>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3723
msgid "mke2journal-U"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3725
#, no-wrap
msgid ""
" mke2journal-U blocksize uuid device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3727 ../src/guestfs-actions.pod:5763
msgid "This creates an ext2 external journal on C<device> with UUID C<uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3729
msgid "mkfifo"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3731
#, no-wrap
msgid ""
" mkfifo mode path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3733
msgid ""
"This call creates a FIFO (named pipe) called C<path> with mode C<mode>.  It "
"is just a convenient wrapper around L</mknod>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3739
msgid "mkfs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3741
#, no-wrap
msgid ""
" mkfs fstype device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3743 ../src/guestfs-actions.pod:5793
msgid ""
"This creates a filesystem on C<device> (usually a partition or LVM logical "
"volume).  The filesystem type is C<fstype>, for example C<ext3>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3747
msgid "mkfs-b"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3749
#, no-wrap
msgid ""
" mkfs-b fstype blocksize device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3751
msgid ""
"This call is similar to L</mkfs>, but it allows you to control the block "
"size of the resulting filesystem.  Supported block sizes depend on the "
"filesystem type, but typically they are C<1024>, C<2048> or C<4096> only."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3756 ../fish/guestfish-actions.pod:3797 ../src/guestfs-actions.pod:5821 ../src/guestfs-actions.pod:5914
msgid ""
"For VFAT and NTFS the C<blocksize> parameter is treated as the requested "
"cluster size."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3759
msgid ""
"I<This function is deprecated.> In new code, use the L</mkfs_opts> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3766
msgid "mkfs-btrfs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3768
#, no-wrap
msgid ""
" mkfs-btrfs 'devices ...' [allocstart:N] [bytecount:N] [datatype:..] "
"[leafsize:N] [label:..] [metadata:..] [nodesize:N] [sectorsize:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3770 ../src/guestfs-actions.pod:5849
msgid ""
"Create a btrfs filesystem, allowing all configurables to be set.  For more "
"information on the optional arguments, see L<mkfs.btrfs(8)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3773 ../src/guestfs-actions.pod:5852
msgid ""
"Since btrfs filesystems can span multiple devices, this takes a non-empty "
"list of devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3776
msgid "To create general filesystems, use L</mkfs-opts>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3780
msgid "mkfs-opts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3782
#, no-wrap
msgid ""
" mkfs-opts fstype device [blocksize:N] [features:..] [inode:N] "
"[sectorsize:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3784 ../src/guestfs-actions.pod:5901
msgid ""
"This function creates a filesystem on C<device>.  The filesystem type is "
"C<fstype>, for example C<ext3>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3791 ../src/guestfs-actions.pod:5908
msgid "C<blocksize>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3793 ../src/guestfs-actions.pod:5910
msgid ""
"The filesystem block size.  Supported block sizes depend on the filesystem "
"type, but typically they are C<1024>, C<2048> or C<4096> for Linux ext2/3 "
"filesystems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3800 ../src/guestfs-actions.pod:5917
msgid "For UFS block sizes, please see L<mkfs.ufs(8)>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3802 ../src/guestfs-actions.pod:5919
msgid "C<features>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3804 ../src/guestfs-actions.pod:5921
msgid "This passes the I<-O> parameter to the external mkfs program."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3806 ../src/guestfs-actions.pod:5923
msgid ""
"For certain filesystem types, this allows extra filesystem features to be "
"selected.  See L<mke2fs(8)> and L<mkfs.ufs(8)> for more details."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3810 ../src/guestfs-actions.pod:5927
msgid ""
"You cannot use this optional parameter with the C<gfs> or C<gfs2> filesystem "
"type."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3813 ../src/guestfs-actions.pod:5930
msgid "C<inode>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3815 ../src/guestfs-actions.pod:5932
msgid ""
"This passes the I<-I> parameter to the external L<mke2fs(8)> program which "
"sets the inode size (only for ext2/3/4 filesystems at present)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:3818 ../src/guestfs-actions.pod:5935
msgid "C<sectorsize>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3820 ../src/guestfs-actions.pod:5937
msgid ""
"This passes the I<-S> parameter to external L<mkfs.ufs(8)> program, which "
"sets sector size for ufs filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3827
msgid "mkmountpoint"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3829
#, no-wrap
msgid ""
" mkmountpoint exemptpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3831
msgid ""
"L</mkmountpoint> and L</rmmountpoint> are specialized calls that can be used "
"to create extra mountpoints before mounting the first filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3835 ../src/guestfs-actions.pod:5980
msgid ""
"These calls are I<only> necessary in some very limited circumstances, mainly "
"the case where you want to mount a mix of unrelated and/or read-only "
"filesystems together."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3839 ../src/guestfs-actions.pod:5984
msgid ""
"For example, live CDs often contain a \"Russian doll\" nest of filesystems, "
"an ISO outer layer, with a squashfs image inside, with an ext2/3 image "
"inside that.  You can unpack this as follows in guestfish:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3844 ../src/guestfs-actions.pod:5989
#, no-wrap
msgid ""
" add-ro Fedora-11-i686-Live.iso\n"
" run\n"
" mkmountpoint /cd\n"
" mkmountpoint /sqsh\n"
" mkmountpoint /ext3fs\n"
" mount /dev/sda /cd\n"
" mount-loop /cd/LiveOS/squashfs.img /sqsh\n"
" mount-loop /sqsh/LiveOS/ext3fs.img /ext3fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3853 ../src/guestfs-actions.pod:5998
msgid "The inner filesystem is now unpacked under the /ext3fs mountpoint."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3855
msgid ""
"L</mkmountpoint> is not compatible with L</umount-all>.  You may get "
"unexpected errors if you try to mix these calls.  It is safest to manually "
"unmount filesystems and remove mountpoints after use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3859
msgid ""
"L</umount-all> unmounts filesystems by sorting the paths longest first, so "
"for this to work for manual mountpoints, you must ensure that the innermost "
"mountpoints have the longest pathnames, as in the example code above."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3864 ../src/guestfs-actions.pod:6009
msgid "For more details see L<https://bugzilla.redhat.com/show_bug.cgi?id=599503>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3866
msgid ""
"Autosync [see L</set-autosync>, this is set by default on handles] can cause "
"L</umount-all> to be called when the handle is closed which can also trigger "
"these issues."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3870
msgid "mknod"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3872
#, no-wrap
msgid ""
" mknod mode devmajor devminor path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3874 ../src/guestfs-actions.pod:6028
msgid ""
"This call creates block or character special devices, or named pipes "
"(FIFOs)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3877 ../src/guestfs-actions.pod:6031
msgid ""
"The C<mode> parameter should be the mode, using the standard constants.  "
"C<devmajor> and C<devminor> are the device major and minor numbers, only "
"used when creating block and character special devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3882
msgid ""
"Note that, just like L<mknod(2)>, the mode must be bitwise OR'd with "
"S_IFBLK, S_IFCHR, S_IFIFO or S_IFSOCK (otherwise this call just creates a "
"regular file).  These constants are available in the standard Linux header "
"files, or you can use L</mknod-b>, L</mknod-c> or L</mkfifo> which are "
"wrappers around this command which bitwise OR in the appropriate constant "
"for you."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3892
msgid "mknod-b"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3894
#, no-wrap
msgid ""
" mknod-b mode devmajor devminor path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3896
msgid ""
"This call creates a block device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around L</mknod>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3902
msgid "mknod-c"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3904
#, no-wrap
msgid ""
" mknod-c mode devmajor devminor path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3906
msgid ""
"This call creates a char device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around L</mknod>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3912
msgid "mkswap"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3914
#, no-wrap
msgid ""
" mkswap device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3916 ../src/guestfs-actions.pod:6094
msgid "Create a swap partition on C<device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3918
msgid "mkswap-L"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3920
#, no-wrap
msgid ""
" mkswap-L label device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3922 ../src/guestfs-actions.pod:6107
msgid "Create a swap partition on C<device> with label C<label>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3924 ../src/guestfs-actions.pod:6109
msgid ""
"Note that you cannot attach a swap label to a block device "
"(eg. C</dev/sda>), just to a partition.  This appears to be a limitation of "
"the kernel or swap tools."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3928
msgid "mkswap-U"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3930
#, no-wrap
msgid ""
" mkswap-U uuid device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3932 ../src/guestfs-actions.pod:6124
msgid "Create a swap partition on C<device> with UUID C<uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3934
msgid "mkswap-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3936
#, no-wrap
msgid ""
" mkswap-file path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3938 ../src/guestfs-actions.pod:6136
msgid "Create a swap file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3940
msgid ""
"This command just writes a swap file signature to an existing file.  To "
"create the file itself, use something like L</fallocate>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3943
msgid "modprobe"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3945
#, no-wrap
msgid ""
" modprobe modulename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3947 ../src/guestfs-actions.pod:6151
msgid "This loads a kernel module in the appliance."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3949 ../src/guestfs-actions.pod:6153
msgid ""
"The kernel module must have been whitelisted when libguestfs was built (see "
"C<appliance/kmod.whitelist.in> in the source)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3952
msgid "mount"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3954
#, no-wrap
msgid ""
" mount device mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3956 ../src/guestfs-actions.pod:6167
msgid ""
"Mount a guest disk at a position in the filesystem.  Block devices are named "
"C</dev/sda>, C</dev/sdb> and so on, as they were added to the guest.  If "
"those block devices contain partitions, they will have the usual names "
"(eg. C</dev/sda1>).  Also LVM C</dev/VG/LV>-style names can be used."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3962 ../src/guestfs-actions.pod:6173
msgid ""
"The rules are the same as for L<mount(2)>: A filesystem must first be "
"mounted on C</> before others can be mounted.  Other filesystems can only be "
"mounted on directories which already exist."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3967 ../src/guestfs-actions.pod:6178
msgid ""
"The mounted filesystem is writable, if we have sufficient permissions on the "
"underlying device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3970
msgid ""
"Before libguestfs 1.13.16, this call implicitly added the options C<sync> "
"and C<noatime>.  The C<sync> option greatly slowed writes and caused many "
"problems for users.  If your program might need to work with older versions "
"of libguestfs, use L</mount-options> instead (using an empty string for the "
"first parameter if you don't want any options)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3977
msgid "mount-9p"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3979
#, no-wrap
msgid ""
" mount-9p mounttag mountpoint [options:..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3981 ../src/guestfs-actions.pod:6207
msgid ""
"Mount the virtio-9p filesystem with the tag C<mounttag> on the directory "
"C<mountpoint>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3984 ../src/guestfs-actions.pod:6210
msgid ""
"If required, C<trans=virtio> will be automatically added to the options.  "
"Any other options required can be passed in the optional C<options> "
"parameter."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:3990
msgid "mount-local"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:3992
#, no-wrap
msgid ""
" mount-local localmountpoint [readonly:true|false] [options:..] "
"[cachetimeout:N] [debugcalls:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3994 ../src/guestfs-actions.pod:6259
msgid ""
"This call exports the libguestfs-accessible filesystem to a local mountpoint "
"(directory) called C<localmountpoint>.  Ordinary reads and writes to files "
"and directories under C<localmountpoint> are redirected through libguestfs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:3999 ../src/guestfs-actions.pod:6264
msgid ""
"If the optional C<readonly> flag is set to true, then writes to the "
"filesystem return error C<EROFS>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4002 ../src/guestfs-actions.pod:6267
msgid ""
"C<options> is a comma-separated list of mount options.  See L<guestmount(1)> "
"for some useful options."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4005 ../src/guestfs-actions.pod:6270
msgid ""
"C<cachetimeout> sets the timeout (in seconds) for cached directory entries.  "
"The default is 60 seconds.  See L<guestmount(1)> for further information."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4009 ../src/guestfs-actions.pod:6274
msgid ""
"If C<debugcalls> is set to true, then additional debugging information is "
"generated for every FUSE call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4012
msgid ""
"When L</mount-local> returns, the filesystem is ready, but is not processing "
"requests (access to it will block).  You have to call L</mount-local-run> to "
"run the main loop."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4016 ../fish/guestfish-actions.pod:4040 ../fish/guestfish-actions.pod:5733 ../src/guestfs-actions.pod:6281 ../src/guestfs-actions.pod:6330 ../src/guestfs-actions.pod:8950
msgid "See L<guestfs(3)/MOUNT LOCAL> for full documentation."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4020
msgid "mount-local-run"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4022
#, no-wrap
msgid ""
" mount-local-run\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4024 ../src/guestfs-actions.pod:6314
msgid "Run the main loop which translates kernel calls to libguestfs calls."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4027
msgid ""
"This should only be called after L</mount-local> returns successfully.  The "
"call will not return until the filesystem is unmounted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4031
msgid ""
"B<Note> you must I<not> make concurrent libguestfs calls on the same handle "
"from another thread, with the exception of L</umount-local>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4035
msgid ""
"You may call this from a different thread than the one which called "
"L</mount-local>, subject to the usual rules for threads and libguestfs (see "
"L<guestfs(3)/MULTIPLE HANDLES AND MULTIPLE THREADS>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4042
msgid "mount-loop"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4044
#, no-wrap
msgid ""
" mount-loop file mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4046 ../src/guestfs-actions.pod:6343
msgid ""
"This command lets you mount C<file> (a filesystem image in a file) on a "
"mount point.  It is entirely equivalent to the command C<mount -o loop file "
"mountpoint>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4050
msgid "mount-options"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4052
#, no-wrap
msgid ""
" mount-options options device mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4054
msgid ""
"This is the same as the L</mount> command, but it allows you to set the "
"mount options as for the L<mount(8)> I<-o> flag."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4058 ../src/guestfs-actions.pod:6363
msgid ""
"If the C<options> parameter is an empty string, then no options are passed "
"(all options default to whatever the filesystem uses)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4062
msgid "mount-ro"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4064
#, no-wrap
msgid ""
" mount-ro device mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4066
msgid ""
"This is the same as the L</mount> command, but it mounts the filesystem with "
"the read-only (I<-o ro>) flag."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4069
msgid "mount-vfs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4071
#, no-wrap
msgid ""
" mount-vfs options vfstype device mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4073
msgid ""
"This is the same as the L</mount> command, but it allows you to set both the "
"mount options and the vfstype as for the L<mount(8)> I<-o> and I<-t> flags."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4077
msgid "mountpoints"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4079
#, no-wrap
msgid ""
" mountpoints\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4081
msgid ""
"This call is similar to L</mounts>.  That call returns a list of devices.  "
"This one returns a hash table (map) of device name to directory where the "
"device is mounted."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4085
msgid "mounts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4087
#, no-wrap
msgid ""
" mounts\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4089 ../src/guestfs-actions.pod:6424
msgid ""
"This returns the list of currently mounted filesystems.  It returns the list "
"of devices (eg. C</dev/sda1>, C</dev/VG/LV>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4092 ../src/guestfs-actions.pod:6427
msgid "Some internal mounts are not shown."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4094
msgid "See also: L</mountpoints>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4096
msgid "mv"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4098
#, no-wrap
msgid ""
" mv src dest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4100 ../src/guestfs-actions.pod:6444
msgid ""
"This moves a file from C<src> to C<dest> where C<dest> is either a "
"destination filename or destination directory."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4103
msgid "ntfs-3g-probe"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4105
#, no-wrap
msgid ""
" ntfs-3g-probe true|false device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4107 ../src/guestfs-actions.pod:6458
msgid ""
"This command runs the L<ntfs-3g.probe(8)> command which probes an NTFS "
"C<device> for mountability.  (Not all NTFS volumes can be mounted "
"read-write, and some cannot be mounted at all)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4111 ../src/guestfs-actions.pod:6462
msgid ""
"C<rw> is a boolean flag.  Set it to true if you want to test if the volume "
"can be mounted read-write.  Set it to false if you want to test if the "
"volume can be mounted read-only."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4115 ../src/guestfs-actions.pod:6466
msgid ""
"The return value is an integer which C<0> if the operation would succeed, or "
"some non-zero value documented in the L<ntfs-3g.probe(8)> manual page."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4119
msgid "ntfsclone-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4121
#, no-wrap
msgid ""
" ntfsclone-in (backupfile|-) device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4123
msgid ""
"Restore the C<backupfile> (from a previous call to L</ntfsclone-out>) to "
"C<device>, overwriting any existing contents of this device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4129
msgid "ntfsclone-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4131
#, no-wrap
msgid ""
" ntfsclone-out device (backupfile|-) [metadataonly:true|false] "
"[rescue:true|false] [ignorefscheck:true|false] "
"[preservetimestamps:true|false] [force:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4133 ../src/guestfs-actions.pod:6508
msgid ""
"Stream the NTFS filesystem C<device> to the local file C<backupfile>.  The "
"format used for the backup file is a special format used by the "
"L<ntfsclone(8)> tool."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4137 ../src/guestfs-actions.pod:6512
msgid ""
"If the optional C<metadataonly> flag is true, then I<only> the metadata is "
"saved, losing all the user data (this is useful for diagnosing some "
"filesystem problems)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4141 ../src/guestfs-actions.pod:6516
msgid ""
"The optional C<rescue>, C<ignorefscheck>, C<preservetimestamps> and C<force> "
"flags have precise meanings detailed in the L<ntfsclone(8)> man page."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4145
msgid "Use L</ntfsclone-in> to restore the file back to a libguestfs device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4152
msgid "ntfsfix"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4154
#, no-wrap
msgid ""
" ntfsfix device [clearbadsectors:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4156 ../src/guestfs-actions.pod:6565
msgid ""
"This command repairs some fundamental NTFS inconsistencies, resets the NTFS "
"journal file, and schedules an NTFS consistency check for the first boot "
"into Windows."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4160 ../src/guestfs-actions.pod:6569
msgid ""
"This is I<not> an equivalent of Windows C<chkdsk>.  It does I<not> scan the "
"filesystem for inconsistencies."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4163 ../src/guestfs-actions.pod:6572
msgid ""
"The optional C<clearbadsectors> flag clears the list of bad sectors.  This "
"is useful after cloning a disk with bad sectors to a new disk."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4168
msgid "ntfsresize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4170
#, no-wrap
msgid ""
" ntfsresize device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4172 ../fish/guestfish-actions.pod:4196 ../src/guestfs-actions.pod:6614 ../src/guestfs-actions.pod:6646
msgid ""
"This command resizes an NTFS filesystem, expanding or shrinking it to the "
"size of the underlying device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4175 ../src/guestfs-actions.pod:6617
msgid ""
"I<Note:> After the resize operation, the filesystem is marked as requiring a "
"consistency check (for safety).  You have to boot into Windows to perform "
"this check and clear this condition.  Furthermore, ntfsresize refuses to "
"resize filesystems which have been marked in this way.  So in effect it is "
"not possible to call ntfsresize multiple times on a single filesystem "
"without booting into Windows between each resize."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4183 ../fish/guestfish-actions.pod:4222 ../src/guestfs-actions.pod:6625 ../src/guestfs-actions.pod:6672
msgid "See also L<ntfsresize(8)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4185 ../fish/guestfish-actions.pod:4233
msgid ""
"I<This function is deprecated.> In new code, use the L</ntfsresize_opts> "
"call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4192
msgid "ntfsresize-opts"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4194
#, no-wrap
msgid ""
" ntfsresize-opts device [size:N] [force:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4205 ../src/guestfs-actions.pod:6655
msgid ""
"The new size (in bytes) of the filesystem.  If omitted, the filesystem is "
"resized to fit the container (eg. partition)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4208 ../fish/guestfish-actions.pod:5587 ../src/guestfs-actions.pod:6658 ../src/guestfs-actions.pod:8738
msgid "C<force>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4210 ../src/guestfs-actions.pod:6660
msgid ""
"If this option is true, then force the resize of the filesystem even if the "
"filesystem is marked as requiring a consistency check."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4213
msgid ""
"After the resize operation, the filesystem is always marked as requiring a "
"consistency check (for safety).  You have to boot into Windows to perform "
"this check and clear this condition.  If you I<don't> set the C<force> "
"option then it is not possible to call L</ntfsresize-opts> multiple times on "
"a single filesystem without booting into Windows between each resize."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4226
msgid "ntfsresize-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4228
#, no-wrap
msgid ""
" ntfsresize-size device size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4230
msgid ""
"This command is the same as L</ntfsresize> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4240
msgid "part-add"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4242
#, no-wrap
msgid ""
" part-add device prlogex startsect endsect\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4244
msgid ""
"This command adds a partition to C<device>.  If there is no partition table "
"on the device, call L</part-init> first."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4247 ../src/guestfs-actions.pod:6733
msgid ""
"The C<prlogex> parameter is the type of partition.  Normally you should pass "
"C<p> or C<primary> here, but MBR partition tables also support C<l> (or "
"C<logical>) and C<e> (or C<extended>) partition types."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4252 ../src/guestfs-actions.pod:6738
msgid ""
"C<startsect> and C<endsect> are the start and end of the partition in "
"I<sectors>.  C<endsect> may be negative, which means it counts backwards "
"from the end of the disk (C<-1> is the last sector)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4256
msgid ""
"Creating a partition which covers the whole disk is not so easy.  Use "
"L</part-disk> to do that."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4259
msgid "part-del"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4261
#, no-wrap
msgid ""
" part-del device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4263 ../src/guestfs-actions.pod:6756
msgid "This command deletes the partition numbered C<partnum> on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4265 ../src/guestfs-actions.pod:6758
msgid ""
"Note that in the case of MBR partitioning, deleting an extended partition "
"also deletes any logical partitions it contains."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4269
msgid "part-disk"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4271
#, no-wrap
msgid ""
" part-disk device parttype\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4273
msgid ""
"This command is simply a combination of L</part-init> followed by "
"L</part-add> to create a single primary partition covering the whole disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4277
msgid ""
"C<parttype> is the partition table type, usually C<mbr> or C<gpt>, but other "
"possible values are described in L</part-init>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4280
msgid "part-get-bootable"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4282
#, no-wrap
msgid ""
" part-get-bootable device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4284 ../src/guestfs-actions.pod:6791
msgid ""
"This command returns true if the partition C<partnum> on C<device> has the "
"bootable flag set."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4287
msgid "See also L</part-set-bootable>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4289
msgid "part-get-mbr-id"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4291
#, no-wrap
msgid ""
" part-get-mbr-id device partnum\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4293 ../src/guestfs-actions.pod:6807
msgid ""
"Returns the MBR type byte (also known as the ID byte) from the numbered "
"partition C<partnum>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4296 ../fish/guestfish-actions.pod:4440
msgid ""
"Note that only MBR (old DOS-style) partitions have type bytes.  You will get "
"undefined results for other partition table types (see "
"L</part-get-parttype>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4300
msgid "part-get-parttype"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4302
#, no-wrap
msgid ""
" part-get-parttype device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4304 ../src/guestfs-actions.pod:6824
msgid ""
"This command examines the partition table on C<device> and returns the "
"partition table type (format) being used."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4307
msgid ""
"Common return values include: C<msdos> (a DOS/Windows style MBR partition "
"table), C<gpt> (a GPT/EFI-style partition table).  Other values are "
"possible, although unusual.  See L</part-init> for a full list."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4312
msgid "part-init"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4314
#, no-wrap
msgid ""
" part-init device parttype\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4316 ../src/guestfs-actions.pod:6844
msgid ""
"This creates an empty partition table on C<device> of one of the partition "
"types listed below.  Usually C<parttype> should be either C<msdos> or C<gpt> "
"(for large disks)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4320
msgid ""
"Initially there are no partitions.  Following this, you should call "
"L</part-add> for each partition required."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4323 ../src/guestfs-actions.pod:6851
msgid "Possible values for C<parttype> are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4327 ../src/guestfs-actions.pod:6855
msgid "B<efi>"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4329 ../src/guestfs-actions.pod:6857
msgid "B<gpt>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4331 ../src/guestfs-actions.pod:6859
msgid "Intel EFI / GPT partition table."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4333 ../src/guestfs-actions.pod:6861
msgid ""
"This is recommended for >= 2 TB partitions that will be accessed from Linux "
"and Intel-based Mac OS X.  It also has limited backwards compatibility with "
"the C<mbr> format."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4337 ../src/guestfs-actions.pod:6865
msgid "B<mbr>"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4339 ../src/guestfs-actions.pod:6867
msgid "B<msdos>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4341 ../src/guestfs-actions.pod:6869
msgid ""
"The standard PC \"Master Boot Record\" (MBR) format used by MS-DOS and "
"Windows.  This partition type will B<only> work for device sizes up to 2 "
"TB.  For large disks we recommend using C<gpt>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4348 ../src/guestfs-actions.pod:6876
msgid "Other partition table types that may work but are not supported include:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4353 ../src/guestfs-actions.pod:6881
msgid "B<aix>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4355 ../src/guestfs-actions.pod:6883
msgid "AIX disk labels."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4357 ../src/guestfs-actions.pod:6885
msgid "B<amiga>"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4359 ../src/guestfs-actions.pod:6887
msgid "B<rdb>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4361 ../src/guestfs-actions.pod:6889
msgid "Amiga \"Rigid Disk Block\" format."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4363 ../src/guestfs-actions.pod:6891
msgid "B<bsd>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4365 ../src/guestfs-actions.pod:6893
msgid "BSD disk labels."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4367 ../src/guestfs-actions.pod:6895
msgid "B<dasd>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4369 ../src/guestfs-actions.pod:6897
msgid "DASD, used on IBM mainframes."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4371 ../src/guestfs-actions.pod:6899
msgid "B<dvh>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4373 ../src/guestfs-actions.pod:6901
msgid "MIPS/SGI volumes."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4375 ../src/guestfs-actions.pod:6903
msgid "B<mac>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4377 ../src/guestfs-actions.pod:6905
msgid "Old Mac partition format.  Modern Macs use C<gpt>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4379 ../src/guestfs-actions.pod:6907
msgid "B<pc98>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4381 ../src/guestfs-actions.pod:6909
msgid "NEC PC-98 format, common in Japan apparently."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4383 ../src/guestfs-actions.pod:6911
msgid "B<sun>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4385 ../src/guestfs-actions.pod:6913
msgid "Sun disk labels."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4389
msgid "part-list"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4391
#, no-wrap
msgid ""
" part-list device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4393 ../src/guestfs-actions.pod:6927
msgid ""
"This command parses the partition table on C<device> and returns the list of "
"partitions found."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4396 ../src/guestfs-actions.pod:6930
msgid "The fields in the returned structure are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4400 ../src/guestfs-actions.pod:6934
msgid "B<part_num>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4402 ../src/guestfs-actions.pod:6936
msgid "Partition number, counting from 1."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4404 ../src/guestfs-actions.pod:6938
msgid "B<part_start>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4406
msgid ""
"Start of the partition I<in bytes>.  To get sectors you have to divide by "
"the device's sector size, see L</blockdev-getss>."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4409 ../src/guestfs-actions.pod:6943
msgid "B<part_end>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4411 ../src/guestfs-actions.pod:6945
msgid "End of the partition in bytes."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4413 ../src/guestfs-actions.pod:6947
msgid "B<part_size>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4415 ../src/guestfs-actions.pod:6949
msgid "Size of the partition in bytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4419
msgid "part-set-bootable"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4421
#, no-wrap
msgid ""
" part-set-bootable device partnum true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4423 ../src/guestfs-actions.pod:6967
msgid ""
"This sets the bootable flag on partition numbered C<partnum> on device "
"C<device>.  Note that partitions are numbered from 1."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4426 ../src/guestfs-actions.pod:6970
msgid ""
"The bootable flag is used by some operating systems (notably Windows) to "
"determine which partition to boot from.  It is by no means universally "
"recognized."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4430
msgid "part-set-mbr-id"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4432
#, no-wrap
msgid ""
" part-set-mbr-id device partnum idbyte\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4434 ../src/guestfs-actions.pod:6986
msgid ""
"Sets the MBR type byte (also known as the ID byte) of the numbered partition "
"C<partnum> to C<idbyte>.  Note that the type bytes quoted in most "
"documentation are in fact hexadecimal numbers, but usually documented "
"without any leading \"0x\" which might be confusing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4444
msgid "part-set-name"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4446
#, no-wrap
msgid ""
" part-set-name device partnum name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4448 ../src/guestfs-actions.pod:7008
msgid ""
"This sets the partition name on partition numbered C<partnum> on device "
"C<device>.  Note that partitions are numbered from 1."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4451 ../src/guestfs-actions.pod:7011
msgid ""
"The partition name can only be set on certain types of partition table.  "
"This works on C<gpt> but not on C<mbr> partitions."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4454
msgid "part-to-dev"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4456
#, no-wrap
msgid ""
" part-to-dev partition\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4458 ../src/guestfs-actions.pod:7024
msgid ""
"This function takes a partition name (eg. \"/dev/sdb1\") and removes the "
"partition number, returning the device name (eg. \"/dev/sdb\")."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4462 ../fish/guestfish-actions.pod:4474
msgid ""
"The named partition must exist, for example as a string returned from "
"L</list-partitions>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4465
msgid "See also L</part-to-partnum>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4467
msgid "part-to-partnum"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4469
#, no-wrap
msgid ""
" part-to-partnum partition\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4471 ../src/guestfs-actions.pod:7044
msgid ""
"This function takes a partition name (eg. \"/dev/sdb1\") and returns the "
"partition number (eg. C<1>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4477
msgid "See also L</part-to-dev>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4479
msgid "ping-daemon"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4481
#, no-wrap
msgid ""
" ping-daemon\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4483 ../src/guestfs-actions.pod:7061
msgid ""
"This is a test probe into the guestfs daemon running inside the qemu "
"subprocess.  Calling this function checks that the daemon responds to the "
"ping message, without affecting the daemon or attached block device(s) in "
"any other way."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4488
msgid "pread"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4490
#, no-wrap
msgid ""
" pread path count offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4492 ../src/guestfs-actions.pod:7079
msgid ""
"This command lets you read part of a file.  It reads C<count> bytes of the "
"file, starting at C<offset>, from file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4495 ../fish/guestfish-actions.pod:4510 ../src/guestfs-actions.pod:7082 ../src/guestfs-actions.pod:7108
msgid ""
"This may read fewer bytes than requested.  For further details see the "
"L<pread(2)> system call."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4498
msgid "See also L</pwrite>, L</pread-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4503
msgid "pread-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4505
#, no-wrap
msgid ""
" pread-device device count offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4507 ../src/guestfs-actions.pod:7105
msgid ""
"This command lets you read part of a file.  It reads C<count> bytes of "
"C<device>, starting at C<offset>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4513
msgid "See also L</pread>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4518
msgid "pvcreate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4520
#, no-wrap
msgid ""
" pvcreate device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4522 ../src/guestfs-actions.pod:7128
msgid ""
"This creates an LVM physical volume on the named C<device>, where C<device> "
"should usually be a partition name such as C</dev/sda1>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4526
msgid "pvremove"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4528
#, no-wrap
msgid ""
" pvremove device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4530 ../src/guestfs-actions.pod:7142
msgid ""
"This wipes a physical volume C<device> so that LVM will no longer recognise "
"it."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4533 ../src/guestfs-actions.pod:7145
msgid ""
"The implementation uses the C<pvremove> command which refuses to wipe "
"physical volumes that contain any volume groups, so you have to remove those "
"first."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4537
msgid "pvresize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4539
#, no-wrap
msgid ""
" pvresize device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4541 ../src/guestfs-actions.pod:7159
msgid ""
"This resizes (expands or shrinks) an existing LVM physical volume to match "
"the new size of the underlying device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4544
msgid "pvresize-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4546
#, no-wrap
msgid ""
" pvresize-size device size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4548
msgid ""
"This command is the same as L</pvresize> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4551
msgid "pvs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4553
#, no-wrap
msgid ""
" pvs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4555 ../src/guestfs-actions.pod:7185
msgid ""
"List all the physical volumes detected.  This is the equivalent of the "
"L<pvs(8)> command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4558 ../src/guestfs-actions.pod:7188
msgid ""
"This returns a list of just the device names that contain PVs "
"(eg. C</dev/sda2>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4561
msgid "See also L</pvs-full>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4563
msgid "pvs-full"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4565
#, no-wrap
msgid ""
" pvs-full\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4567 ../src/guestfs-actions.pod:7204
msgid ""
"List all the physical volumes detected.  This is the equivalent of the "
"L<pvs(8)> command.  The \"full\" version includes all fields."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4570
msgid "pvuuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4572
#, no-wrap
msgid ""
" pvuuid device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4574 ../src/guestfs-actions.pod:7219
msgid "This command returns the UUID of the LVM PV C<device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4576
msgid "pwrite"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4578
#, no-wrap
msgid ""
" pwrite path content offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4580 ../src/guestfs-actions.pod:7235
msgid ""
"This command writes to part of a file.  It writes the data buffer C<content> "
"to the file C<path> starting at offset C<offset>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4583 ../src/guestfs-actions.pod:7238
msgid ""
"This command implements the L<pwrite(2)> system call, and like that system "
"call it may not write the full data requested.  The return value is the "
"number of bytes that were actually written to the file.  This could even be "
"0, although short writes are unlikely for regular files in ordinary "
"circumstances."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4589
msgid "See also L</pread>, L</pwrite-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4594
msgid "pwrite-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4596
#, no-wrap
msgid ""
" pwrite-device device content offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4598 ../src/guestfs-actions.pod:7262
msgid ""
"This command writes to part of a device.  It writes the data buffer "
"C<content> to C<device> starting at offset C<offset>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4601 ../src/guestfs-actions.pod:7265
msgid ""
"This command implements the L<pwrite(2)> system call, and like that system "
"call it may not write the full data requested (although short writes to disk "
"devices and partitions are probably impossible with standard Linux kernels)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4606
msgid "See also L</pwrite>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4611
msgid "read-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4613
#, no-wrap
msgid ""
" read-file path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4615 ../src/guestfs-actions.pod:7286
msgid "This calls returns the contents of the file C<path> as a buffer."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4618
msgid ""
"Unlike L</cat>, this function can correctly handle files that contain "
"embedded ASCII NUL characters.  However unlike L</download>, this function "
"is limited in the total size of file that can be handled."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4626
msgid "read-lines"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4628
#, no-wrap
msgid ""
" read-lines path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4632 ../src/guestfs-actions.pod:7311
msgid ""
"The file contents are returned as a list of lines.  Trailing C<LF> and "
"C<CRLF> character sequences are I<not> returned."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4635
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of line).  For "
"those you need to use the L</read-file> function which has a more complex "
"interface."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4640
msgid "readdir"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4642
#, no-wrap
msgid ""
" readdir dir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4644 ../src/guestfs-actions.pod:7331
msgid "This returns the list of directory entries in directory C<dir>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4646 ../src/guestfs-actions.pod:7333
msgid ""
"All entries in the directory are returned, including C<.> and C<..>.  The "
"entries are I<not> sorted, but returned in the same order as the underlying "
"filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4650 ../src/guestfs-actions.pod:7337
msgid ""
"Also this call returns basic file type information about each file.  The "
"C<ftyp> field will contain one of the following characters:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4655 ../src/guestfs-actions.pod:7342
msgid "'b'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4657 ../src/guestfs-actions.pod:7344
msgid "Block special"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4661 ../src/guestfs-actions.pod:7348
msgid "Char special"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4665 ../src/guestfs-actions.pod:7352
msgid "Directory"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4667 ../src/guestfs-actions.pod:7354
msgid "'f'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4669 ../src/guestfs-actions.pod:7356
msgid "FIFO (named pipe)"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4671 ../src/guestfs-actions.pod:7358
msgid "'l'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4673 ../src/guestfs-actions.pod:7360
msgid "Symbolic link"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4675 ../src/guestfs-actions.pod:7362
msgid "'r'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4677 ../src/guestfs-actions.pod:7364
msgid "Regular file"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4681 ../src/guestfs-actions.pod:7368
msgid "Socket"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4685 ../src/guestfs-actions.pod:7372
msgid "Unknown file type"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4687 ../src/guestfs-actions.pod:7374
msgid "'?'"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4689 ../src/guestfs-actions.pod:7376
msgid "The L<readdir(3)> call returned a C<d_type> field with an unexpected value"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4694
msgid ""
"This function is primarily intended for use by programs.  To get a simple "
"list of names, use L</ls>.  To get a printable directory for human "
"consumption, use L</ll>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4698
msgid "readlink"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4700
#, no-wrap
msgid ""
" readlink path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4702 ../src/guestfs-actions.pod:7397
msgid "This command reads the target of a symbolic link."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4704
msgid "readlinklist"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4706
#, no-wrap
msgid ""
" readlinklist path 'names ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4708 ../src/guestfs-actions.pod:7411
msgid ""
"This call allows you to do a C<readlink> operation on multiple files, where "
"all files are in the directory C<path>.  C<names> is the list of files from "
"this directory."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4712 ../src/guestfs-actions.pod:7415
msgid ""
"On return you get a list of strings, with a one-to-one correspondence to the "
"C<names> list.  Each string is the value of the symbolic link."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4716 ../src/guestfs-actions.pod:7419
msgid ""
"If the C<readlink(2)> operation fails on any name, then the corresponding "
"result string is the empty string C<\"\">.  However the whole operation is "
"completed even if there were C<readlink(2)> errors, and so you can call this "
"function with names where you don't know if they are symbolic links already "
"(albeit slightly less efficient)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4723 ../src/guestfs-actions.pod:7426
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  Very long directory listings "
"might cause the protocol message size to be exceeded, causing this call to "
"fail.  The caller must split up such requests into smaller groups of names."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4730
msgid "realpath"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4732
#, no-wrap
msgid ""
" realpath path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4734 ../src/guestfs-actions.pod:7445
msgid ""
"Return the canonicalized absolute pathname of C<path>.  The returned path "
"has no C<.>, C<..> or symbolic link path elements."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4737
msgid "removexattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4739
#, no-wrap
msgid ""
" removexattr xattr path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4741 ../src/guestfs-actions.pod:7460
msgid "This call removes the extended attribute named C<xattr> of the file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4744
msgid "See also: L</lremovexattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4746
msgid "resize2fs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4748
#, no-wrap
msgid ""
" resize2fs device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4750 ../src/guestfs-actions.pod:7475
msgid ""
"This resizes an ext2, ext3 or ext4 filesystem to match the size of the "
"underlying device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4753 ../fish/guestfish-actions.pod:4768 ../fish/guestfish-actions.pod:4777 ../src/guestfs-actions.pod:7478 ../src/guestfs-actions.pod:7499 ../src/guestfs-actions.pod:7515
msgid "See also L<guestfs(3)/RESIZE2FS ERRORS>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4755
msgid "resize2fs-M"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4757
#, no-wrap
msgid ""
" resize2fs-M device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4759
msgid ""
"This command is the same as L</resize2fs>, but the filesystem is resized to "
"its minimum size.  This works like the I<-M> option to the C<resize2fs> "
"command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4763
msgid ""
"To get the resulting size of the filesystem you should call L</tune2fs-l> "
"and read the C<Block size> and C<Block count> values.  These two numbers, "
"multiplied together, give the resulting size of the minimal filesystem in "
"bytes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4770
msgid "resize2fs-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4772
#, no-wrap
msgid ""
" resize2fs-size device size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4774
msgid ""
"This command is the same as L</resize2fs> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4779
msgid "rm"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4781
#, no-wrap
msgid ""
" rm path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4783 ../src/guestfs-actions.pod:7527
msgid "Remove the single file C<path>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4785
msgid "rm-rf"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4787
#, no-wrap
msgid ""
" rm-rf path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4789 ../src/guestfs-actions.pod:7539
msgid ""
"Remove the file or directory C<path>, recursively removing the contents if "
"its a directory.  This is like the C<rm -rf> shell command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4793
msgid "rmdir"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4795
#, no-wrap
msgid ""
" rmdir path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4797 ../src/guestfs-actions.pod:7553
msgid "Remove the single directory C<path>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4799
msgid "rmmountpoint"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4801
#, no-wrap
msgid ""
" rmmountpoint exemptpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4803
msgid ""
"This calls removes a mountpoint that was previously created with "
"L</mkmountpoint>.  See L</mkmountpoint> for full details."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4807
msgid "scrub-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4809
#, no-wrap
msgid ""
" scrub-device device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4811 ../src/guestfs-actions.pod:7579
msgid ""
"This command writes patterns over C<device> to make data retrieval more "
"difficult."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4814 ../fish/guestfish-actions.pod:4826 ../fish/guestfish-actions.pod:4839 ../src/guestfs-actions.pod:7582 ../src/guestfs-actions.pod:7600 ../src/guestfs-actions.pod:7619
msgid ""
"It is an interface to the L<scrub(1)> program.  See that manual page for "
"more details."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4817
msgid "scrub-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4819
#, no-wrap
msgid ""
" scrub-file file\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4821 ../src/guestfs-actions.pod:7595
msgid ""
"This command writes patterns over a file to make data retrieval more "
"difficult."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4824 ../src/guestfs-actions.pod:7598
msgid "The file is I<removed> after scrubbing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4829
msgid "scrub-freespace"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4831
#, no-wrap
msgid ""
" scrub-freespace dir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4833
msgid ""
"This command creates the directory C<dir> and then fills it with files until "
"the filesystem is full, and scrubs the files as for L</scrub-file>, and "
"deletes them.  The intention is to scrub any free space on the partition "
"containing C<dir>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4842
msgid "set-append"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4844
msgid "append"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4846
#, no-wrap
msgid ""
" set-append append\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4848 ../src/guestfs-actions.pod:7632
msgid ""
"This function is used to add additional options to the guest kernel command "
"line."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4851 ../src/guestfs-actions.pod:7635
msgid ""
"The default is C<NULL> unless overridden by setting C<LIBGUESTFS_APPEND> "
"environment variable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4854 ../src/guestfs-actions.pod:7638
msgid ""
"Setting C<append> to C<NULL> means I<no> additional options are passed "
"(libguestfs always adds a few of its own)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4857
msgid "set-attach-method"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4859
msgid "attach-method"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4861
#, no-wrap
msgid ""
" set-attach-method attachmethod\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4863 ../src/guestfs-actions.pod:7651
msgid ""
"Set the method that libguestfs uses to connect to the back end guestfsd "
"daemon.  Possible methods are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4868 ../src/guestfs-actions.pod:7656 ../src/guestfs.pod:2984
msgid "C<appliance>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4870 ../src/guestfs-actions.pod:7658
msgid ""
"Launch an appliance and connect to it.  This is the ordinary method and the "
"default."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:4873 ../src/guestfs-actions.pod:7661
msgid "C<unix:I<path>>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4875 ../src/guestfs-actions.pod:7663
msgid "Connect to the Unix domain socket I<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4877 ../src/guestfs-actions.pod:7665
msgid ""
"This method lets you connect to an existing daemon or (using virtio-serial) "
"to a live guest.  For more information, see L<guestfs(3)/ATTACHING TO "
"RUNNING DAEMONS>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4883
msgid "set-autosync"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4885
msgid "autosync"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4887
#, no-wrap
msgid ""
" set-autosync true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4889 ../src/guestfs-actions.pod:7681
msgid ""
"If C<autosync> is true, this enables autosync.  Libguestfs will make a best "
"effort attempt to make filesystems consistent and synchronized when the "
"handle is closed (also if the program exits without closing handles)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4894 ../src/guestfs-actions.pod:7686
msgid ""
"This is enabled by default (since libguestfs 1.5.24, previously it was "
"disabled by default)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4897
msgid "set-direct"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4899
msgid "direct"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4901
#, no-wrap
msgid ""
" set-direct true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4903 ../src/guestfs-actions.pod:7699
msgid ""
"If the direct appliance mode flag is enabled, then stdin and stdout are "
"passed directly through to the appliance once it is launched."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4907
msgid ""
"One consequence of this is that log messages aren't caught by the library "
"and handled by L</set-log-message-callback>, but go straight to stdout."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4911 ../src/guestfs-actions.pod:7707
msgid "You probably don't want to use this unless you know what you are doing."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4914 ../src/guestfs-actions.pod:7710
msgid "The default is disabled."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4916
msgid "set-e2attrs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4918
#, no-wrap
msgid ""
" set-e2attrs file attrs [clear:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4920 ../src/guestfs-actions.pod:7731
msgid ""
"This sets or clears the file attributes C<attrs> associated with the inode "
"C<file>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4923
msgid ""
"C<attrs> is a string of characters representing file attributes.  See "
"L</get-e2attrs> for a list of possible attributes.  Not all attributes can "
"be changed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4927 ../src/guestfs-actions.pod:7738
msgid ""
"If optional boolean C<clear> is not present or false, then the C<attrs> "
"listed are set in the inode."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4930 ../src/guestfs-actions.pod:7741
msgid "If C<clear> is true, then the C<attrs> listed are cleared in the inode."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4933 ../src/guestfs-actions.pod:7744
msgid ""
"In both cases, other attributes not present in the C<attrs> string are left "
"unchanged."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4942
msgid "set-e2generation"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4944
#, no-wrap
msgid ""
" set-e2generation file generation\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4946 ../src/guestfs-actions.pod:7786
msgid "This sets the ext2 file generation of a file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4948
msgid "See L</get-e2generation>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4950
msgid "set-e2label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4952
#, no-wrap
msgid ""
" set-e2label device label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4954 ../src/guestfs-actions.pod:7808
msgid ""
"This sets the ext2/3/4 filesystem label of the filesystem on C<device> to "
"C<label>.  Filesystem labels are limited to 16 characters."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4958
msgid ""
"You can use either L</tune2fs-l> or L</get-e2label> to return the existing "
"label on a filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4961
msgid ""
"I<This function is deprecated.> In new code, use the L</set_label> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4968
msgid "set-e2uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4970
#, no-wrap
msgid ""
" set-e2uuid device uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4972 ../src/guestfs-actions.pod:7826
msgid ""
"This sets the ext2/3/4 filesystem UUID of the filesystem on C<device> to "
"C<uuid>.  The format of the UUID and alternatives such as C<clear>, "
"C<random> and C<time> are described in the L<tune2fs(8)> manpage."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4977
msgid ""
"You can use either L</tune2fs-l> or L</get-e2uuid> to return the existing "
"UUID of a filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4980
msgid "set-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4982
#, no-wrap
msgid ""
" set-label device label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4984 ../src/guestfs-actions.pod:7845
msgid "Set the filesystem label on C<device> to C<label>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4986 ../src/guestfs-actions.pod:7847
msgid ""
"Only some filesystem types support labels, and libguestfs supports setting "
"labels on only a subset of these."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4989 ../src/guestfs-actions.pod:7850
msgid "On ext2/3/4 filesystems, labels are limited to 16 bytes."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4991 ../src/guestfs-actions.pod:7852
msgid "On NTFS filesystems, labels are limited to 128 unicode characters."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:4993
msgid "To read the label on a filesystem, call L</vfs-label>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4995
msgid "set-memsize"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:4997
msgid "memsize"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:4999
#, no-wrap
msgid ""
" set-memsize memsize\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5001
msgid ""
"This sets the memory size in megabytes allocated to the qemu subprocess.  "
"This only has any effect if called before L</launch>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5005 ../src/guestfs-actions.pod:7870
msgid ""
"You can also change this by setting the environment variable "
"C<LIBGUESTFS_MEMSIZE> before the handle is created."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5012
msgid "set-network"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5014
msgid "network"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5016
#, no-wrap
msgid ""
" set-network true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5018 ../src/guestfs-actions.pod:7887
msgid ""
"If C<network> is true, then the network is enabled in the libguestfs "
"appliance.  The default is false."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5021 ../src/guestfs-actions.pod:7890
msgid ""
"This affects whether commands are able to access the network (see "
"L<guestfs(3)/RUNNING COMMANDS>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5024
msgid "You must call this before calling L</launch>, otherwise it has no effect."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5027
msgid "set-path"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5031
#, no-wrap
msgid ""
" set-path searchpath\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5033 ../src/guestfs-actions.pod:7906
msgid "Set the path that libguestfs searches for kernel and initrd.img."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5035 ../src/guestfs-actions.pod:7908
msgid ""
"The default is C<$libdir/guestfs> unless overridden by setting "
"C<LIBGUESTFS_PATH> environment variable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5038 ../src/guestfs-actions.pod:7911
msgid "Setting C<path> to C<NULL> restores the default path."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5040
msgid "set-pgroup"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5042
msgid "pgroup"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5044
#, no-wrap
msgid ""
" set-pgroup true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5046 ../src/guestfs-actions.pod:7923
msgid ""
"If C<pgroup> is true, child processes are placed into their own process "
"group."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5049 ../src/guestfs-actions.pod:7926
msgid ""
"The practical upshot of this is that signals like C<SIGINT> (from users "
"pressing C<^C>) won't be received by the child process."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5052
msgid ""
"The default for this flag is false, because usually you want C<^C> to kill "
"the subprocess.  Guestfish sets this flag to true when used interactively, "
"so that C<^C> can cancel long-running commands gracefully (see "
"L</user-cancel>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5057
msgid "set-qemu"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5059
msgid "qemu"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5061
#, no-wrap
msgid ""
" set-qemu qemu\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5063 ../src/guestfs-actions.pod:7944
msgid "Set the qemu binary that we will use."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5065 ../src/guestfs-actions.pod:7946
msgid "The default is chosen when the library was compiled by the configure script."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5068 ../src/guestfs-actions.pod:7949
msgid ""
"You can also override this by setting the C<LIBGUESTFS_QEMU> environment "
"variable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5071 ../src/guestfs-actions.pod:7952
msgid "Setting C<qemu> to C<NULL> restores the default qemu binary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5073 ../src/guestfs-actions.pod:7954
msgid ""
"Note that you should call this function as early as possible after creating "
"the handle.  This is because some pre-launch operations depend on testing "
"qemu features (by running C<qemu -help>).  If the qemu binary changes, we "
"don't retest features, and so you might see inconsistent results.  Using the "
"environment variable C<LIBGUESTFS_QEMU> is safest of all since that picks "
"the qemu binary at the same time as the handle is created."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5081
msgid "set-recovery-proc"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5083
msgid "recovery-proc"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5085
#, no-wrap
msgid ""
" set-recovery-proc true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5087
msgid ""
"If this is called with the parameter C<false> then L</launch> does not "
"create a recovery process.  The purpose of the recovery process is to stop "
"runaway qemu processes in the case where the main program aborts abruptly."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5092
msgid ""
"This only has any effect if called before L</launch>, and the default is "
"true."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5095 ../src/guestfs-actions.pod:7980
msgid ""
"About the only time when you would want to disable this is if the main "
"process will fork itself into the background (\"daemonize\" itself).  In "
"this case the recovery process thinks that the main program has disappeared "
"and so kills qemu, which is not very helpful."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5101
msgid "set-selinux"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5103
msgid "selinux"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5105
#, no-wrap
msgid ""
" set-selinux true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5107 ../src/guestfs-actions.pod:7996
msgid ""
"This sets the selinux flag that is passed to the appliance at boot time.  "
"The default is C<selinux=0> (disabled)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5110 ../src/guestfs-actions.pod:7999
msgid ""
"Note that if SELinux is enabled, it is always in Permissive mode "
"(C<enforcing=0>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5116
msgid "set-smp"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5118
msgid "smp"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5120
#, no-wrap
msgid ""
" set-smp smp\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5122 ../src/guestfs-actions.pod:8015
msgid ""
"Change the number of virtual CPUs assigned to the appliance.  The default is "
"C<1>.  Increasing this may improve performance, though often it has no "
"effect."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5126
msgid "This function must be called before L</launch>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5128
msgid "set-trace"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5130
msgid "trace"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5132
#, no-wrap
msgid ""
" set-trace true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5134 ../src/guestfs-actions.pod:8031
msgid ""
"If the command trace flag is set to 1, then libguestfs calls, parameters and "
"return values are traced."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5137 ../src/guestfs-actions.pod:8034
msgid ""
"If you want to trace C API calls into libguestfs (and other libraries) then "
"possibly a better way is to use the external ltrace(1) command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5141 ../src/guestfs-actions.pod:8038
msgid ""
"Command traces are disabled unless the environment variable "
"C<LIBGUESTFS_TRACE> is defined and set to C<1>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5144
msgid ""
"Trace messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see L</set-event-callback>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5148
msgid "set-verbose"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5150
msgid "verbose"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5152
#, no-wrap
msgid ""
" set-verbose true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5154 ../src/guestfs-actions.pod:8055
msgid "If C<verbose> is true, this turns on verbose messages."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5156 ../src/guestfs-actions.pod:8057
msgid ""
"Verbose messages are disabled unless the environment variable "
"C<LIBGUESTFS_DEBUG> is defined and set to C<1>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5159
msgid ""
"Verbose messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see L</set-event-callback>)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5163
msgid "setcon"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5165
#, no-wrap
msgid ""
" setcon context\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5167 ../src/guestfs-actions.pod:8074
msgid ""
"This sets the SELinux security context of the daemon to the string "
"C<context>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5170 ../src/guestfs-actions.pod:8077
msgid "See the documentation about SELINUX in L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5172
msgid "setxattr"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5174
#, no-wrap
msgid ""
" setxattr xattr val vallen path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5176 ../src/guestfs-actions.pod:8092
msgid ""
"This call sets the extended attribute named C<xattr> of the file C<path> to "
"the value C<val> (of length C<vallen>).  The value is arbitrary 8 bit data."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5180
msgid "See also: L</lsetxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5182
msgid "sfdisk"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5184
#, no-wrap
msgid ""
" sfdisk device cyls heads sectors 'lines ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5186 ../src/guestfs-actions.pod:8119
msgid ""
"This is a direct interface to the L<sfdisk(8)> program for creating "
"partitions on block devices."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5189 ../src/guestfs-actions.pod:8122
msgid "C<device> should be a block device, for example C</dev/sda>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5191 ../src/guestfs-actions.pod:8124
msgid ""
"C<cyls>, C<heads> and C<sectors> are the number of cylinders, heads and "
"sectors on the device, which are passed directly to sfdisk as the I<-C>, "
"I<-H> and I<-S> parameters.  If you pass C<0> for any of these, then the "
"corresponding parameter is omitted.  Usually for 'large' disks, you can just "
"pass C<0> for these, but for small (floppy-sized) disks, sfdisk (or rather, "
"the kernel) cannot work out the right geometry and you will need to tell it."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5199 ../src/guestfs-actions.pod:8132
msgid ""
"C<lines> is a list of lines that we feed to C<sfdisk>.  For more information "
"refer to the L<sfdisk(8)> manpage."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5202 ../src/guestfs-actions.pod:8135
msgid ""
"To create a single partition occupying the whole disk, you would pass "
"C<lines> as a single element list, when the single element being the string "
"C<,> (comma)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5206
msgid "See also: L</sfdisk-l>, L</sfdisk-N>, L</part-init>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5209 ../fish/guestfish-actions.pod:5229 ../fish/guestfish-actions.pod:5248
msgid ""
"I<This function is deprecated.> In new code, use the L</part_add> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5216
msgid "sfdiskM"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5218
#, no-wrap
msgid ""
" sfdiskM device 'lines ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5220
msgid ""
"This is a simplified interface to the L</sfdisk> command, where partition "
"sizes are specified in megabytes only (rounded to the nearest cylinder) and "
"you don't need to specify the cyls, heads and sectors parameters which were "
"rarely if ever used anyway."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5226
msgid "See also: L</sfdisk>, the L<sfdisk(8)> manpage and L</part-disk>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5236
msgid "sfdisk-N"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5238
#, no-wrap
msgid ""
" sfdisk-N device partnum cyls heads sectors line\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5240 ../src/guestfs-actions.pod:8191
msgid ""
"This runs L<sfdisk(8)> option to modify just the single partition C<n> "
"(note: C<n> counts from 1)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5243
msgid ""
"For other parameters, see L</sfdisk>.  You should usually pass C<0> for the "
"cyls/heads/sectors parameters."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5246
msgid "See also: L</part-add>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5255
msgid "sfdisk-disk-geometry"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5257
#, no-wrap
msgid ""
" sfdisk-disk-geometry device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5259
msgid ""
"This displays the disk geometry of C<device> read from the partition table.  "
"Especially in the case where the underlying block device has been resized, "
"this can be different from the kernel's idea of the geometry (see "
"L</sfdisk-kernel-geometry>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5264 ../fish/guestfish-actions.pod:5273 ../src/guestfs-actions.pod:8214 ../src/guestfs-actions.pod:8230
msgid "The result is in human-readable format, and not designed to be parsed."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5267
msgid "sfdisk-kernel-geometry"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5269
#, no-wrap
msgid ""
" sfdisk-kernel-geometry device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5271 ../src/guestfs-actions.pod:8228
msgid "This displays the kernel's idea of the geometry of C<device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5276
msgid "sfdisk-l"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5278
#, no-wrap
msgid ""
" sfdisk-l device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5280 ../src/guestfs-actions.pod:8251
msgid ""
"This displays the partition table on C<device>, in the human-readable output "
"of the L<sfdisk(8)> command.  It is not intended to be parsed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5284
msgid "See also: L</part-list>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5286
msgid ""
"I<This function is deprecated.> In new code, use the L</part_list> call "
"instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5293
msgid "sh"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5295
#, no-wrap
msgid ""
" sh command\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5297 ../src/guestfs-actions.pod:8268
msgid ""
"This call runs a command from the guest filesystem via the guest's "
"C</bin/sh>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5300
msgid "This is like L</command>, but passes the command to:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5302 ../src/guestfs-actions.pod:8273
#, no-wrap
msgid ""
" /bin/sh -c \"command\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5304 ../src/guestfs-actions.pod:8275
msgid ""
"Depending on the guest's shell, this usually results in wildcards being "
"expanded, shell expressions being interpolated and so on."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5308
msgid "All the provisos about L</command> apply to this call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5310
msgid "sh-lines"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5312
#, no-wrap
msgid ""
" sh-lines command\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5314
msgid "This is the same as L</sh>, but splits the result into a list of lines."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5317
msgid "See also: L</command-lines>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5319
msgid "sleep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5321
#, no-wrap
msgid ""
" sleep secs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5323 ../src/guestfs-actions.pod:8309
msgid "Sleep for C<secs> seconds."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5325
msgid "stat"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5327
#, no-wrap
msgid ""
" stat path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5331 ../src/guestfs-actions.pod:8323
msgid "This is the same as the C<stat(2)> system call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5333
msgid "statvfs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5335
#, no-wrap
msgid ""
" statvfs path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5337 ../src/guestfs-actions.pod:8337
msgid ""
"Returns file system statistics for any mounted file system.  C<path> should "
"be a file or directory in the mounted file system (typically it is the mount "
"point itself, but it doesn't need to be)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5341 ../src/guestfs-actions.pod:8341
msgid "This is the same as the C<statvfs(2)> system call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5343
msgid "strings"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5345
#, no-wrap
msgid ""
" strings path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5347 ../src/guestfs-actions.pod:8355
msgid ""
"This runs the L<strings(1)> command on a file and returns the list of "
"printable strings found."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5353
msgid "strings-e"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5355
#, no-wrap
msgid ""
" strings-e encoding path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5357
msgid ""
"This is like the L</strings> command, but allows you to specify the encoding "
"of strings that are looked for in the source file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5361 ../src/guestfs-actions.pod:8378
msgid "Allowed encodings are:"
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5365 ../src/guestfs-actions.pod:8382
msgid "s"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5367
msgid ""
"Single 7-bit-byte characters like ASCII and the ASCII-compatible parts of "
"ISO-8859-X (this is what L</strings> uses)."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5370 ../src/guestfs-actions.pod:8387
msgid "S"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5372 ../src/guestfs-actions.pod:8389
msgid "Single 8-bit-byte characters."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5374 ../src/guestfs-actions.pod:8391
msgid "b"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5376 ../src/guestfs-actions.pod:8393
msgid "16-bit big endian strings such as those encoded in UTF-16BE or UCS-2BE."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5379 ../src/guestfs-actions.pod:8396
msgid "l (lower case letter L)"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5381 ../src/guestfs-actions.pod:8398
msgid ""
"16-bit little endian such as UTF-16LE and UCS-2LE.  This is useful for "
"examining binaries in Windows guests."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5384 ../src/guestfs-actions.pod:8401
msgid "B"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5386 ../src/guestfs-actions.pod:8403
msgid "32-bit big endian such as UCS-4BE."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5388 ../src/guestfs-actions.pod:8405
msgid "L"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5390 ../src/guestfs-actions.pod:8407
msgid "32-bit little endian such as UCS-4LE."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5394 ../src/guestfs-actions.pod:8411
msgid "The returned strings are transcoded to UTF-8."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5399
msgid "swapoff-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5401
#, no-wrap
msgid ""
" swapoff-device device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5403
msgid ""
"This command disables the libguestfs appliance swap device or partition "
"named C<device>.  See L</swapon-device>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5407
msgid "swapoff-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5409
#, no-wrap
msgid ""
" swapoff-file file\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5411 ../src/guestfs-actions.pod:8442
msgid "This command disables the libguestfs appliance swap on file."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5413
msgid "swapoff-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5415
#, no-wrap
msgid ""
" swapoff-label label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5417 ../src/guestfs-actions.pod:8454
msgid ""
"This command disables the libguestfs appliance swap on labeled swap "
"partition."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5420
msgid "swapoff-uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5422
#, no-wrap
msgid ""
" swapoff-uuid uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5424 ../src/guestfs-actions.pod:8467
msgid ""
"This command disables the libguestfs appliance swap partition with the given "
"UUID."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5427
msgid "swapon-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5429
#, no-wrap
msgid ""
" swapon-device device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5431
msgid ""
"This command enables the libguestfs appliance to use the swap device or "
"partition named C<device>.  The increased memory is made available for all "
"commands, for example those run using L</command> or L</sh>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5436 ../src/guestfs-actions.pod:8485
msgid ""
"Note that you should not swap to existing guest swap partitions unless you "
"know what you are doing.  They may contain hibernation information, or other "
"information that the guest doesn't want you to trash.  You also risk leaking "
"information about the host to the guest this way.  Instead, attach a new "
"host device to the guest and swap on that."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5443
msgid "swapon-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5445
#, no-wrap
msgid ""
" swapon-file file\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5447
msgid "This command enables swap to a file.  See L</swapon-device> for other notes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5450
msgid "swapon-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5452
#, no-wrap
msgid ""
" swapon-label label\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5454
msgid ""
"This command enables swap to a labeled swap partition.  See "
"L</swapon-device> for other notes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5457
msgid "swapon-uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5459
#, no-wrap
msgid ""
" swapon-uuid uuid\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5461
msgid ""
"This command enables swap to a swap partition with the given UUID.  See "
"L</swapon-device> for other notes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5464
msgid "sync"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5466
#, no-wrap
msgid ""
" sync\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5468 ../src/guestfs-actions.pod:8540
msgid ""
"This syncs the disk, so that any writes are flushed through to the "
"underlying disk image."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5471 ../src/guestfs-actions.pod:8543
msgid ""
"You should always call this if you have modified a disk image, before "
"closing the handle."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5474
msgid "tail"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5476
#, no-wrap
msgid ""
" tail path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5478 ../src/guestfs-actions.pod:8556
msgid "This command returns up to the last 10 lines of a file as a list of strings."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5484
msgid "tail-n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5486
#, no-wrap
msgid ""
" tail-n nrlines path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5488 ../src/guestfs-actions.pod:8575
msgid ""
"If the parameter C<nrlines> is a positive number, this returns the last "
"C<nrlines> lines of the file C<path>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5491 ../src/guestfs-actions.pod:8578
msgid ""
"If the parameter C<nrlines> is a negative number, this returns lines from "
"the file C<path>, starting with the C<-nrlines>th line."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5499
msgid "tar-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5501
#, no-wrap
msgid ""
" tar-in (tarfile|-) directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5503 ../src/guestfs-actions.pod:8599
msgid ""
"This command uploads and unpacks local file C<tarfile> (an I<uncompressed> "
"tar file) into C<directory>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5506
msgid "To upload a compressed tarball, use L</tgz-in> or L</txz-in>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5511
msgid "tar-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5513
#, no-wrap
msgid ""
" tar-out directory (tarfile|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5515 ../src/guestfs-actions.pod:8616
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<tarfile>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5518
msgid "To download a compressed tarball, use L</tgz-out> or L</txz-out>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5523
msgid "tgz-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5525
#, no-wrap
msgid ""
" tgz-in (tarball|-) directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5527 ../src/guestfs-actions.pod:8633
msgid ""
"This command uploads and unpacks local file C<tarball> (a I<gzip compressed> "
"tar file) into C<directory>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5530
msgid "To upload an uncompressed tarball, use L</tar-in>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5534
msgid "tgz-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5536
#, no-wrap
msgid ""
" tgz-out directory (tarball|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5538 ../src/guestfs-actions.pod:8649
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<tarball>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5541
msgid "To download an uncompressed tarball, use L</tar-out>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5545
msgid "touch"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5547
#, no-wrap
msgid ""
" touch path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5549 ../src/guestfs-actions.pod:8664
msgid ""
"Touch acts like the L<touch(1)> command.  It can be used to update the "
"timestamps on a file, or, if the file does not exist, to create a new "
"zero-length file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5553 ../src/guestfs-actions.pod:8668
msgid ""
"This command only works on regular files, and will fail on other file types "
"such as directories, symbolic links, block special etc."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5556
msgid "truncate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5558
#, no-wrap
msgid ""
" truncate path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5560 ../src/guestfs-actions.pod:8681
msgid ""
"This command truncates C<path> to a zero-length file.  The file must exist "
"already."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5563
msgid "truncate-size"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5565
#, no-wrap
msgid ""
" truncate-size path size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5567 ../src/guestfs-actions.pod:8695
msgid ""
"This command truncates C<path> to size C<size> bytes.  The file must exist "
"already."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5570
msgid ""
"If the current file size is less than C<size> then the file is extended to "
"the required size with zero bytes.  This creates a sparse file (ie. disk "
"blocks are not allocated for the file until you write to it).  To create a "
"non-sparse file of zeroes, use L</fallocate64> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5576
msgid "tune2fs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5578
#, no-wrap
msgid ""
" tune2fs device [force:true|false] [maxmountcount:N] [mountcount:N] "
"[errorbehavior:..] [group:N] [intervalbetweenchecks:N] "
"[reservedblockspercentage:N] [lastmounteddirectory:..] "
"[reservedblockscount:N] [user:N]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5580 ../src/guestfs-actions.pod:8731
msgid ""
"This call allows you to adjust various filesystem parameters of an "
"ext2/ext3/ext4 filesystem called C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5589 ../src/guestfs-actions.pod:8740
msgid ""
"Force tune2fs to complete the operation even in the face of errors.  This is "
"the same as the tune2fs C<-f> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5592 ../src/guestfs-actions.pod:8743
msgid "C<maxmountcount>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5594 ../src/guestfs-actions.pod:8745
msgid ""
"Set the number of mounts after which the filesystem is checked by "
"L<e2fsck(8)>.  If this is C<0> then the number of mounts is disregarded.  "
"This is the same as the tune2fs C<-c> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5598 ../src/guestfs-actions.pod:8749
msgid "C<mountcount>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5600 ../src/guestfs-actions.pod:8751
msgid ""
"Set the number of times the filesystem has been mounted.  This is the same "
"as the tune2fs C<-C> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5603 ../src/guestfs-actions.pod:8754
msgid "C<errorbehavior>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5605 ../src/guestfs-actions.pod:8756
msgid ""
"Change the behavior of the kernel code when errors are detected.  Possible "
"values currently are: C<continue>, C<remount-ro>, C<panic>.  In practice "
"these options don't really make any difference, particularly for write "
"errors."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5610 ../src/guestfs-actions.pod:8761
msgid "This is the same as the tune2fs C<-e> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5612 ../src/guestfs-actions.pod:8763
msgid "C<group>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5614 ../src/guestfs-actions.pod:8765
msgid ""
"Set the group which can use reserved filesystem blocks.  This is the same as "
"the tune2fs C<-g> option except that it can only be specified as a number."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5618 ../src/guestfs-actions.pod:8769
msgid "C<intervalbetweenchecks>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5620 ../src/guestfs-actions.pod:8771
msgid ""
"Adjust the maximal time between two filesystem checks (in seconds).  If the "
"option is passed as C<0> then time-dependent checking is disabled."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5624 ../src/guestfs-actions.pod:8775
msgid "This is the same as the tune2fs C<-i> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5626 ../src/guestfs-actions.pod:8777
msgid "C<reservedblockspercentage>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5628 ../src/guestfs-actions.pod:8779
msgid ""
"Set the percentage of the filesystem which may only be allocated by "
"privileged processes.  This is the same as the tune2fs C<-m> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5632 ../src/guestfs-actions.pod:8783
msgid "C<lastmounteddirectory>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5634 ../src/guestfs-actions.pod:8785
msgid ""
"Set the last mounted directory.  This is the same as the tune2fs C<-M> "
"option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5637 ../src/guestfs-actions.pod:8788
msgid ""
"C<reservedblockscount> Set the number of reserved filesystem blocks.  This "
"is the same as the tune2fs C<-r> option."
msgstr ""

#. type: =item
#: ../fish/guestfish-actions.pod:5641 ../src/guestfs-actions.pod:8792
msgid "C<user>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5643 ../src/guestfs-actions.pod:8794
msgid ""
"Set the user who can use the reserved filesystem blocks.  This is the same "
"as the tune2fs C<-u> option except that it can only be specified as a "
"number."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5649
msgid ""
"To get the current values of filesystem parameters, see L</tune2fs-l>.  For "
"precise details of how tune2fs works, see the L<tune2fs(8)> man page."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5655
msgid "tune2fs-l"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5657
#, no-wrap
msgid ""
" tune2fs-l device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5659 ../src/guestfs-actions.pod:8836
msgid ""
"This returns the contents of the ext2, ext3 or ext4 filesystem superblock on "
"C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5662 ../src/guestfs-actions.pod:8839
msgid ""
"It is the same as running C<tune2fs -l device>.  See L<tune2fs(8)> manpage "
"for more details.  The list of fields returned isn't clearly defined, and "
"depends on both the version of C<tune2fs> that libguestfs was built against, "
"and the filesystem itself."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5667
msgid "txz-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5669
#, no-wrap
msgid ""
" txz-in (tarball|-) directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5671 ../src/guestfs-actions.pod:8859
msgid ""
"This command uploads and unpacks local file C<tarball> (an I<xz compressed> "
"tar file) into C<directory>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5676
msgid "txz-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5678
#, no-wrap
msgid ""
" txz-out directory (tarball|-)\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5680 ../src/guestfs-actions.pod:8873
msgid ""
"This command packs the contents of C<directory> and downloads it to local "
"file C<tarball> (as an xz compressed tar archive)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5685
msgid "umask"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5687
#, no-wrap
msgid ""
" umask mask\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5689 ../src/guestfs-actions.pod:8886
msgid ""
"This function sets the mask used for creating new files and device nodes to "
"C<mask & 0777>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5692 ../src/guestfs-actions.pod:8889
msgid ""
"Typical umask values would be C<022> which creates new files with "
"permissions like \"-rw-r--r--\" or \"-rwxr-xr-x\", and C<002> which creates "
"new files with permissions like \"-rw-rw-r--\" or \"-rwxrwxr-x\"."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5697 ../src/guestfs-actions.pod:8894
msgid ""
"The default umask is C<022>.  This is important because it means that "
"directories and device nodes will be created with C<0644> or C<0755> mode "
"even if you specify C<0777>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5701
msgid "See also L</get-umask>, L<umask(2)>, L</mknod>, L</mkdir>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5704 ../src/guestfs-actions.pod:8901
msgid "This call returns the previous umask."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5706
msgid "umount"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5708
msgid "unmount"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5710
#, no-wrap
msgid ""
" umount pathordevice\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5712 ../src/guestfs-actions.pod:8913
msgid ""
"This unmounts the given filesystem.  The filesystem may be specified either "
"by its mountpoint (path) or the device which contains the filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5716
msgid "umount-all"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5718
msgid "unmount-all"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5720
#, no-wrap
msgid ""
" umount-all\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5722 ../src/guestfs-actions.pod:8926
msgid "This unmounts all mounted filesystems."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5724 ../src/guestfs-actions.pod:8928
msgid "Some internal mounts are not unmounted by this call."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5726
msgid "umount-local"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5728
#, no-wrap
msgid ""
" umount-local [retry:true|false]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5730 ../src/guestfs-actions.pod:8947
msgid ""
"If libguestfs is exporting the filesystem on a local mountpoint, then this "
"unmounts it."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5737
msgid "upload"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5739
#, no-wrap
msgid ""
" upload (filename|-) remotefilename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5741 ../fish/guestfish-actions.pod:5754 ../src/guestfs-actions.pod:8983 ../src/guestfs-actions.pod:9007
msgid "Upload local file C<filename> to C<remotefilename> on the filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5746
msgid "See also L</download>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5750
msgid "upload-offset"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5752
#, no-wrap
msgid ""
" upload-offset (filename|-) remotefilename offset\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5757 ../src/guestfs-actions.pod:9010
msgid ""
"C<remotefilename> is overwritten starting at the byte C<offset> specified.  "
"The intention is to overwrite parts of existing files or devices, although "
"if a non-existant file is specified then it is created with a \"hole\" "
"before C<offset>.  The size of the data written is implicit in the size of "
"the source C<filename>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5764
msgid ""
"Note that there is no limit on the amount of data that can be uploaded with "
"this call, unlike with L</pwrite>, and this call always writes the full "
"amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5769
msgid "See also L</upload>, L</pwrite>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5773
msgid "utimens"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5775
#, no-wrap
msgid ""
" utimens path atsecs atnsecs mtsecs mtnsecs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5777 ../src/guestfs-actions.pod:9043
msgid "This command sets the timestamps of a file with nanosecond precision."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5780 ../src/guestfs-actions.pod:9046
msgid ""
"C<atsecs, atnsecs> are the last access time (atime) in secs and nanoseconds "
"from the epoch."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5783 ../src/guestfs-actions.pod:9049
msgid ""
"C<mtsecs, mtnsecs> are the last modification time (mtime) in secs and "
"nanoseconds from the epoch."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5786 ../src/guestfs-actions.pod:9052
msgid ""
"If the C<*nsecs> field contains the special value C<-1> then the "
"corresponding timestamp is set to the current time.  (The C<*secs> field is "
"ignored in this case)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5790 ../src/guestfs-actions.pod:9056
msgid ""
"If the C<*nsecs> field contains the special value C<-2> then the "
"corresponding timestamp is left unchanged.  (The C<*secs> field is ignored "
"in this case)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5794
msgid "version"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5796
#, no-wrap
msgid ""
" version\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5798 ../src/guestfs-actions.pod:9069
msgid "Return the libguestfs version number that the program is linked against."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5801 ../src/guestfs-actions.pod:9072
msgid ""
"Note that because of dynamic linking this is not necessarily the version of "
"libguestfs that you compiled against.  You can compile the program, and then "
"at runtime dynamically link against a completely different C<libguestfs.so> "
"library."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5806 ../src/guestfs-actions.pod:9077
msgid ""
"This call was added in version C<1.0.58>.  In previous versions of "
"libguestfs there was no way to get the version number.  From C code you can "
"use dynamic linker functions to find out if this symbol exists (if it "
"doesn't, then it's an earlier version)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5812 ../src/guestfs-actions.pod:9083
msgid ""
"The call returns a structure with four elements.  The first three (C<major>, "
"C<minor> and C<release>) are numbers and correspond to the usual version "
"triplet.  The fourth element (C<extra>) is a string and is normally empty, "
"but may be used for distro-specific information."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5818 ../src/guestfs-actions.pod:9089
msgid "To construct the original version string: C<$major.$minor.$release$extra>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5821 ../src/guestfs-actions.pod:9092
msgid "See also: L<guestfs(3)/LIBGUESTFS VERSION NUMBERS>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5823
msgid ""
"I<Note:> Don't use this call to test for availability of features.  In "
"enterprise distributions we backport features from later versions into "
"earlier versions, making this an unreliable way to test for features.  Use "
"L</available> instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5829
msgid "vfs-label"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5831
#, no-wrap
msgid ""
" vfs-label device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5833 ../src/guestfs-actions.pod:9112
msgid "This returns the filesystem label of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5836 ../src/guestfs-actions.pod:9115
msgid "If the filesystem is unlabeled, this returns the empty string."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5838
msgid "To find a filesystem from the label, use L</findfs-label>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5840
msgid "vfs-type"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5842
#, no-wrap
msgid ""
" vfs-type device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5844 ../src/guestfs-actions.pod:9130
msgid ""
"This command gets the filesystem type corresponding to the filesystem on "
"C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5847 ../src/guestfs-actions.pod:9133
msgid ""
"For most filesystems, the result is the name of the Linux VFS module which "
"would be used to mount this filesystem if you mounted it without specifying "
"the filesystem type.  For example a string such as C<ext3> or C<ntfs>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5852
msgid "vfs-uuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5854
#, no-wrap
msgid ""
" vfs-uuid device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5856 ../src/guestfs-actions.pod:9149
msgid "This returns the filesystem UUID of the filesystem on C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5859 ../src/guestfs-actions.pod:9152
msgid "If the filesystem does not have a UUID, this returns the empty string."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5861
msgid "To find a filesystem from the UUID, use L</findfs-uuid>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5863
msgid "vg-activate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5865
#, no-wrap
msgid ""
" vg-activate true|false 'volgroups ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5867 ../src/guestfs-actions.pod:9168
msgid ""
"This command activates or (if C<activate> is false) deactivates all logical "
"volumes in the listed volume groups C<volgroups>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5870 ../src/guestfs-actions.pod:9171
msgid "This command is the same as running C<vgchange -a y|n volgroups...>"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5872 ../src/guestfs-actions.pod:9173
msgid ""
"Note that if C<volgroups> is an empty list then B<all> volume groups are "
"activated or deactivated."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5875
msgid "vg-activate-all"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5877
#, no-wrap
msgid ""
" vg-activate-all true|false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5879 ../src/guestfs-actions.pod:9186
msgid ""
"This command activates or (if C<activate> is false) deactivates all logical "
"volumes in all volume groups."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5882 ../src/guestfs-actions.pod:9189
msgid "This command is the same as running C<vgchange -a y|n>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5884
msgid "vgcreate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5886
#, no-wrap
msgid ""
" vgcreate volgroup 'physvols ...'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5888 ../src/guestfs-actions.pod:9202
msgid ""
"This creates an LVM volume group called C<volgroup> from the non-empty list "
"of physical volumes C<physvols>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5891
msgid "vglvuuids"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5893
#, no-wrap
msgid ""
" vglvuuids vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5895 ../src/guestfs-actions.pod:9215
msgid ""
"Given a VG called C<vgname>, this returns the UUIDs of all the logical "
"volumes created in this volume group."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5898
msgid ""
"You can use this along with L</lvs> and L</lvuuid> calls to associate "
"logical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5901
msgid "See also L</vgpvuuids>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5903
msgid "vgmeta"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5905
#, no-wrap
msgid ""
" vgmeta vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5907 ../src/guestfs-actions.pod:9236
msgid ""
"C<vgname> is an LVM volume group.  This command examines the volume group "
"and returns its metadata."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5910 ../src/guestfs-actions.pod:9239
msgid ""
"Note that the metadata is an internal structure used by LVM, subject to "
"change at any time, and is provided for information only."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5913
msgid "vgpvuuids"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5915
#, no-wrap
msgid ""
" vgpvuuids vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5917 ../src/guestfs-actions.pod:9254
msgid ""
"Given a VG called C<vgname>, this returns the UUIDs of all the physical "
"volumes that this volume group resides on."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5920
msgid ""
"You can use this along with L</pvs> and L</pvuuid> calls to associate "
"physical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5923
msgid "See also L</vglvuuids>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5925
msgid "vgremove"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5927
#, no-wrap
msgid ""
" vgremove vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5929 ../src/guestfs-actions.pod:9274
msgid "Remove an LVM volume group C<vgname>, (for example C<VG>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5931 ../src/guestfs-actions.pod:9276
msgid "This also forcibly removes all logical volumes in the volume group (if any)."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5934
msgid "vgrename"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5936
#, no-wrap
msgid ""
" vgrename volgroup newvolgroup\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5938 ../src/guestfs-actions.pod:9290
msgid "Rename a volume group C<volgroup> with the new name C<newvolgroup>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5940
msgid "vgs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5942
#, no-wrap
msgid ""
" vgs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5944 ../src/guestfs-actions.pod:9301
msgid ""
"List all the volumes groups detected.  This is the equivalent of the "
"L<vgs(8)> command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5947 ../src/guestfs-actions.pod:9304
msgid ""
"This returns a list of just the volume group names that were detected "
"(eg. C<VolGroup00>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5950
msgid "See also L</vgs-full>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5952
msgid "vgs-full"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5954
#, no-wrap
msgid ""
" vgs-full\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5956 ../src/guestfs-actions.pod:9320
msgid ""
"List all the volumes groups detected.  This is the equivalent of the "
"L<vgs(8)> command.  The \"full\" version includes all fields."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5959
msgid "vgscan"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5961
#, no-wrap
msgid ""
" vgscan\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5963 ../src/guestfs-actions.pod:9334
msgid ""
"This rescans all block devices and rebuilds the list of LVM physical "
"volumes, volume groups and logical volumes."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5966
msgid "vguuid"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5968
#, no-wrap
msgid ""
" vguuid vgname\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5970 ../src/guestfs-actions.pod:9347
msgid "This command returns the UUID of the LVM VG named C<vgname>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5972
msgid "wc-c"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5974
#, no-wrap
msgid ""
" wc-c path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5976 ../src/guestfs-actions.pod:9387
msgid ""
"This command counts the characters in a file, using the C<wc -c> external "
"command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5979
msgid "wc-l"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5981
#, no-wrap
msgid ""
" wc-l path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5983 ../src/guestfs-actions.pod:9400
msgid ""
"This command counts the lines in a file, using the C<wc -l> external "
"command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5986
msgid "wc-w"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5988
#, no-wrap
msgid ""
" wc-w path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5990 ../src/guestfs-actions.pod:9413
msgid ""
"This command counts the words in a file, using the C<wc -w> external "
"command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:5993
msgid "wipefs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:5995
#, no-wrap
msgid ""
" wipefs device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:5997 ../src/guestfs-actions.pod:9426
msgid ""
"This command erases filesystem or RAID signatures from the specified "
"C<device> to make the filesystem invisible to libblkid."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6000 ../src/guestfs-actions.pod:9429
msgid ""
"This does not erase the filesystem itself nor any other data from the "
"C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6003
msgid "Compare with L</zero> which zeroes the first few blocks of a device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6006
msgid "write"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6008
#, no-wrap
msgid ""
" write path content\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6010 ../src/guestfs-actions.pod:9447
msgid ""
"This call creates a file called C<path>.  The content of the file is the "
"string C<content> (which can contain any 8 bit data)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6013
msgid "See also L</write-append>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6018
msgid "write-append"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6020
#, no-wrap
msgid ""
" write-append path content\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6022 ../src/guestfs-actions.pod:9467
msgid ""
"This call appends C<content> to the end of file C<path>.  If C<path> does "
"not exist, then a new file is created."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6025
msgid "See also L</write>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6030
msgid "write-file"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6032
#, no-wrap
msgid ""
" write-file path content size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6034 ../src/guestfs-actions.pod:9494
msgid ""
"This call creates a file called C<path>.  The contents of the file is the "
"string C<content> (which can contain any 8 bit data), with length C<size>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6038 ../src/guestfs-actions.pod:9498
msgid ""
"As a special case, if C<size> is C<0> then the length is calculated using "
"C<strlen> (so in this case the content cannot contain embedded ASCII NULs)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6042 ../src/guestfs-actions.pod:9502
msgid ""
"I<NB.> Owing to a bug, writing content containing ASCII NUL characters does "
"I<not> work, even if the length is specified."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6048
msgid "I<This function is deprecated.> In new code, use the L</write> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6055
msgid "zegrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6057
#, no-wrap
msgid ""
" zegrep regex path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6059 ../src/guestfs-actions.pod:9519
msgid "This calls the external C<zegrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6065
msgid "zegrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6067
#, no-wrap
msgid ""
" zegrepi regex path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6069 ../src/guestfs-actions.pod:9538
msgid "This calls the external C<zegrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6075
msgid "zero"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6077
#, no-wrap
msgid ""
" zero device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6079 ../src/guestfs-actions.pod:9556
msgid "This command writes zeroes over the first few blocks of C<device>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6081 ../src/guestfs-actions.pod:9558
msgid ""
"How many blocks are zeroed isn't specified (but it's I<not> enough to "
"securely wipe the device).  It should be sufficient to remove any partition "
"tables, filesystem superblocks and so on."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6085 ../fish/guestfish-actions.pod:6100 ../src/guestfs-actions.pod:9562 ../src/guestfs-actions.pod:9588
msgid ""
"If blocks are already zero, then this command avoids writing zeroes.  This "
"prevents the underlying device from becoming non-sparse or growing "
"unnecessarily."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6089
msgid "See also: L</zero-device>, L</scrub-device>, L</is-zero-device>"
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6092
msgid "zero-device"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6094
#, no-wrap
msgid ""
" zero-device device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6096
msgid ""
"This command writes zeroes over the entire C<device>.  Compare with L</zero> "
"which just zeroes the first few blocks of a device."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6104
msgid "zero-free-space"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6106
#, no-wrap
msgid ""
" zero-free-space directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6108 ../src/guestfs-actions.pod:9607
msgid ""
"Zero the free space in the filesystem mounted on C<directory>.  The "
"filesystem must be mounted read-write."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6111 ../src/guestfs-actions.pod:9610
msgid ""
"The filesystem contents are not affected, but any free space in the "
"filesystem is freed."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6114 ../src/guestfs-actions.pod:9613
msgid ""
"In future (but not currently) these zeroed blocks will be \"sparsified\" - "
"that is, given back to the host."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6117
msgid "zerofree"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6119
#, no-wrap
msgid ""
" zerofree device\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6121 ../src/guestfs-actions.pod:9631
msgid ""
"This runs the I<zerofree> program on C<device>.  This program claims to zero "
"unused inodes and disk blocks on an ext2/3 filesystem, thus making it "
"possible to compress the filesystem more effectively."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6126 ../src/guestfs-actions.pod:9636
msgid "You should B<not> run this program if the filesystem is mounted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6129 ../src/guestfs-actions.pod:9639
msgid ""
"It is possible that using this program can damage the filesystem or data on "
"the filesystem."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6132
msgid "zfgrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6134
#, no-wrap
msgid ""
" zfgrep pattern path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6136 ../src/guestfs-actions.pod:9653
msgid "This calls the external C<zfgrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6142
msgid "zfgrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6144
#, no-wrap
msgid ""
" zfgrepi pattern path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6146 ../src/guestfs-actions.pod:9672
msgid "This calls the external C<zfgrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6152
msgid "zfile"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6154
#, no-wrap
msgid ""
" zfile meth path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6156 ../src/guestfs-actions.pod:9698
msgid "This command runs C<file> after first decompressing C<path> using C<method>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6159 ../src/guestfs-actions.pod:9701
msgid "C<method> must be one of C<gzip>, C<compress> or C<bzip2>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6161
msgid "Since 1.0.63, use L</file> instead which can now process compressed files."
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6164
msgid "I<This function is deprecated.> In new code, use the L</file> call instead."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6171
msgid "zgrep"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6173
#, no-wrap
msgid ""
" zgrep regex path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6175 ../src/guestfs-actions.pod:9718
msgid "This calls the external C<zgrep> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-actions.pod:6181
msgid "zgrepi"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-actions.pod:6183
#, no-wrap
msgid ""
" zgrepi regex path\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-actions.pod:6185 ../src/guestfs-actions.pod:9737
msgid "This calls the external C<zgrep -i> program and returns the matching lines."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:1
msgid "alloc"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:3
msgid "allocate"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:5
#, no-wrap
msgid ""
" alloc filename size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:7
msgid ""
"This creates an empty (zeroed) file of the given size, and then adds so it "
"can be further examined."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:10 ../fish/guestfish-commands.pod:243
msgid "For more advanced image creation, see L<qemu-img(1)> utility."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:12 ../fish/guestfish-commands.pod:245
msgid "Size can be specified using standard suffixes, eg. C<1M>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:14
msgid ""
"To create a sparse file, use L</sparse> instead.  To create a prepared disk "
"image, see L</PREPARED DISK IMAGES>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:17
msgid "copy-in"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:19
#, no-wrap
msgid ""
" copy-in local [local ...] /remotedir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:21
msgid ""
"C<copy-in> copies local files or directories recursively into the disk "
"image, placing them in the directory called C</remotedir> (which must "
"exist).  This guestfish meta-command turns into a sequence of L</tar-in> and "
"other commands as necessary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:26
msgid ""
"Multiple local files and directories can be specified, but the last "
"parameter must always be a remote directory.  Wildcards cannot be used."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:30
msgid "copy-out"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:32
#, no-wrap
msgid ""
" copy-out remote [remote ...] localdir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:34
msgid ""
"C<copy-out> copies remote files or directories recursively out of the disk "
"image, placing them on the host disk in a local directory called C<localdir> "
"(which must exist).  This guestfish meta-command turns into a sequence of "
"L</download>, L</tar-out> and other commands as necessary."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:40
msgid ""
"Multiple remote files and directories can be specified, but the last "
"parameter must always be a local directory.  To download to the current "
"directory, use C<.> as in:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:44
#, no-wrap
msgid ""
" copy-out /home .\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:46
msgid ""
"Wildcards cannot be used in the ordinary command, but you can use them with "
"the help of L</glob> like this:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:49
#, no-wrap
msgid ""
" glob copy-out /home/* .\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:51
msgid "delete-event"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:53
#, no-wrap
msgid ""
" delete-event name\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:55
msgid ""
"Delete the event handler which was previously registered as C<name>.  If "
"multiple event handlers were registered with the same name, they are all "
"deleted."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:59
msgid "See also the guestfish commands C<event> and C<list-events>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:61
msgid "display"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:63
#, no-wrap
msgid ""
" display filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:65
msgid ""
"Use C<display> (a graphical display program) to display an image file.  It "
"downloads the file, and runs C<display> on it."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:68
msgid ""
"To use an alternative program, set the C<GUESTFISH_DISPLAY_IMAGE> "
"environment variable.  For example to use the GNOME display program:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:71
#, no-wrap
msgid ""
" export GUESTFISH_DISPLAY_IMAGE=eog\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:73
msgid "See also L<display(1)>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:75
msgid "echo"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:77
#, no-wrap
msgid ""
" echo [params ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:79
msgid "This echos the parameters to the terminal."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:81
msgid "edit"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:83
msgid "vi"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:85
msgid "emacs"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:87
#, no-wrap
msgid ""
" edit filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:89
msgid ""
"This is used to edit a file.  It downloads the file, edits it locally using "
"your editor, then uploads the result."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:92
msgid ""
"The editor is C<$EDITOR>.  However if you use the alternate commands C<vi> "
"or C<emacs> you will get those corresponding editors."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:96
msgid "event"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:98
#, no-wrap
msgid ""
" event name eventset \"shell script ...\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:100
msgid ""
"Register a shell script fragment which is executed when an event is raised.  "
"See L<guestfs(3)/guestfs_set_event_callback> for a discussion of the event "
"API in libguestfs."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:104
msgid ""
"The C<name> parameter is a name that you give to this event handler.  It can "
"be any string (even the empty string) and is simply there so you can delete "
"the handler using the guestfish C<delete-event> command."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:109
msgid ""
"The C<eventset> parameter is a comma-separated list of one or more events, "
"for example C<close> or C<close,trace>.  The special value C<*> means all "
"events."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:113
msgid ""
"The third and final parameter is the shell script fragment (or any external "
"command) that is executed when any of the events in the eventset occurs.  It "
"is executed using C<$SHELL -c>, or if C<$SHELL> is not set then C</bin/sh "
"-c>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:118
msgid ""
"The shell script fragment receives callback parameters as arguments C<$1>, "
"C<$2> etc.  The actual event that was called is available in the environment "
"variable C<$EVENT>."
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:122
#, no-wrap
msgid ""
" event \"\" close \"echo closed\"\n"
" event messages appliance,library,trace \"echo $@\"\n"
" event \"\" progress \"echo progress: $3/$4\"\n"
" event \"\" * \"echo $EVENT $@\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:127
msgid "See also the guestfish commands C<delete-event> and C<list-events>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:129
msgid "glob"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:131
#, no-wrap
msgid ""
" glob command args...\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:133
msgid ""
"Expand wildcards in any paths in the args list, and run C<command> "
"repeatedly on each matching path."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:136
msgid "See L</WILDCARDS AND GLOBBING>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:138
msgid "hexedit"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:140
#, no-wrap
msgid ""
" hexedit <filename|device>\n"
" hexedit <filename|device> <max>\n"
" hexedit <filename|device> <start> <max>\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:144
msgid ""
"Use hexedit (a hex editor) to edit all or part of a binary file or block "
"device."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:147
msgid ""
"This command works by downloading potentially the whole file or device, "
"editing it locally, then uploading it.  If the file or device is large, you "
"have to specify which part you wish to edit by using C<max> and/or C<start> "
"C<max> parameters.  C<start> and C<max> are specified in bytes, with the "
"usual modifiers allowed such as C<1M> (1 megabyte)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:154
msgid "For example to edit the first few sectors of a disk you might do:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:157
#, no-wrap
msgid ""
" hexedit /dev/sda 1M\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:159
msgid ""
"which would allow you to edit anywhere within the first megabyte of the "
"disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:162
msgid "To edit the superblock of an ext2 filesystem on C</dev/sda1>, do:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:164
#, no-wrap
msgid ""
" hexedit /dev/sda1 0x400 0x400\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:166
msgid "(assuming the superblock is in the standard location)."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:168
msgid ""
"This command requires the external L<hexedit(1)> program.  You can specify "
"another program to use by setting the C<HEXEDITOR> environment variable."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:172
msgid "See also L</hexdump>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:174
msgid "lcd"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:176
#, no-wrap
msgid ""
" lcd directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:178
msgid "Change the local directory, ie. the current directory of guestfish itself."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:181
msgid "Note that C<!cd> won't do what you might expect."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:183
msgid "list-events"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:185
#, no-wrap
msgid ""
" list-events\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:187
msgid "List the event handlers registered using the guestfish C<event> command."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:190
msgid "man"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:192
msgid "manual"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:194
#, no-wrap
msgid ""
"  man\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:196
msgid "Opens the manual page for guestfish."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:198
msgid "more"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:200
msgid "less"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:202
#, no-wrap
msgid ""
" more filename\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:204
#, no-wrap
msgid ""
" less filename\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:206
msgid "This is used to view a file."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:208
msgid ""
"The default viewer is C<$PAGER>.  However if you use the alternate command "
"C<less> you will get the C<less> command specifically."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:211
msgid "reopen"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:213
#, no-wrap
msgid ""
"  reopen\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:215
msgid ""
"Close and reopen the libguestfs handle.  It is not necessary to use this "
"normally, because the handle is closed properly when guestfish exits.  "
"However this is occasionally useful for testing."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:219
msgid "setenv"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:221
#, no-wrap
msgid ""
"  setenv VAR value\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:223
msgid "Set the environment variable C<VAR> to the string C<value>."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:225
msgid "To print the value of an environment variable use a shell command such as:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:228
#, no-wrap
msgid ""
" !echo $VAR\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:230
msgid "sparse"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:232
#, no-wrap
msgid ""
" sparse filename size\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:234
msgid ""
"This creates an empty sparse file of the given size, and then adds so it can "
"be further examined."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:237
msgid ""
"In all respects it works the same as the L</alloc> command, except that the "
"image file is allocated sparsely, which means that disk blocks are not "
"assigned to the file until they are needed.  Sparse disk files only use "
"space when written to, but they are slower and there is a danger you could "
"run out of real disk space during a write operation."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:247
msgid "supported"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:249
#, no-wrap
msgid ""
" supported\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:251
msgid ""
"This command returns a list of the optional groups known to the daemon, and "
"indicates which ones are supported by this build of the libguestfs "
"appliance."
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:255
msgid "See also L<guestfs(3)/AVAILABILITY>."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:257
msgid "time"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:259
#, no-wrap
msgid ""
" time command args...\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:261
msgid ""
"Run the command as usual, but print the elapsed time afterwards.  This can "
"be useful for benchmarking operations."
msgstr ""

#. type: =head2
#: ../fish/guestfish-commands.pod:264
msgid "unsetenv"
msgstr ""

#. type: verbatim
#: ../fish/guestfish-commands.pod:266
#, no-wrap
msgid ""
"  unsetenv VAR\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish-commands.pod:268
msgid "Remove C<VAR> from the environment."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:5
msgid "guestfish - the libguestfs Filesystem Interactive SHell"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:9
#, no-wrap
msgid ""
" guestfish [--options] [commands]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:11
#, no-wrap
msgid ""
" guestfish\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:13
#, no-wrap
msgid ""
" guestfish [--ro|--rw] -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:15
#, no-wrap
msgid ""
" guestfish [--ro|--rw] -a disk.img -m dev[:mountpoint]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:17
#, no-wrap
msgid ""
" guestfish -d libvirt-domain\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:19
#, no-wrap
msgid ""
" guestfish [--ro|--rw] -a disk.img -i\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:21
#, no-wrap
msgid ""
" guestfish -d libvirt-domain -i\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:25
msgid ""
"Using guestfish in read/write mode on live virtual machines can be "
"dangerous, potentially causing disk corruption.  Use the I<--ro> (read-only) "
"option to use guestfish safely if the disk image or virtual machine might be "
"live."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:32
msgid ""
"Guestfish is a shell and command-line tool for examining and modifying "
"virtual machine filesystems.  It uses libguestfs and exposes all of the "
"functionality of the guestfs API, see L<guestfs(3)>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:36
msgid ""
"Guestfish gives you structured access to the libguestfs API, from shell "
"scripts or the command line or interactively.  If you want to rescue a "
"broken virtual machine image, you should look at the L<virt-rescue(1)> "
"command."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:43
msgid "As an interactive shell"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:45
#, no-wrap
msgid ""
" $ guestfish\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:47
#, no-wrap
msgid ""
" Welcome to guestfish, the libguestfs filesystem interactive shell for\n"
" editing virtual machine filesystems.\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:50
#, no-wrap
msgid ""
" Type: 'help' for a list of commands\n"
"       'man' to read the manual\n"
"       'quit' to quit the shell\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:54
#, no-wrap
msgid ""
" ><fs> add-ro disk.img\n"
" ><fs> run\n"
" ><fs> list-filesystems\n"
" /dev/sda1: ext4\n"
" /dev/vg_guest/lv_root: ext4\n"
" /dev/vg_guest/lv_swap: swap\n"
" ><fs> mount /dev/vg_guest/lv_root /\n"
" ><fs> cat /etc/fstab\n"
" # /etc/fstab\n"
" # Created by anaconda\n"
" [...]\n"
" ><fs> exit\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:67
msgid "From shell scripts"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:69
msgid "Create a new C</etc/motd> file in a guest or disk image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:71
#, no-wrap
msgid ""
" guestfish <<_EOF_\n"
" add disk.img\n"
" run\n"
" mount /dev/vg_guest/lv_root /\n"
" write /etc/motd \"Welcome, new users\"\n"
" _EOF_\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:78
msgid "List the LVM logical volumes in a disk image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:80
#, no-wrap
msgid ""
" guestfish -a disk.img --ro <<_EOF_\n"
" run\n"
" lvs\n"
" _EOF_\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:85
msgid "List all the filesystems in a disk image:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:87
#, no-wrap
msgid ""
" guestfish -a disk.img --ro <<_EOF_\n"
" run\n"
" list-filesystems\n"
" _EOF_\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:92
msgid "On one command line"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:94 ../fish/virt-copy-in.pod:31
msgid "Update C</etc/resolv.conf> in a guest:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:96
#, no-wrap
msgid ""
" guestfish \\\n"
"   add disk.img : run : mount /dev/vg_guest/lv_root / : \\\n"
"   write /etc/resolv.conf \"nameserver 1.2.3.4\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:100
msgid "Edit C</boot/grub/grub.conf> interactively:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:102
#, no-wrap
msgid ""
" guestfish --rw --add disk.img \\\n"
"   --mount /dev/vg_guest/lv_root \\\n"
"   --mount /dev/sda1:/boot \\\n"
"   edit /boot/grub/grub.conf\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:107
msgid "Mount disks automatically"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:109
msgid ""
"Use the I<-i> option to automatically mount the disks from a virtual "
"machine:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:112
#, no-wrap
msgid ""
" guestfish --ro -a disk.img -i cat /etc/group\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:114
#, no-wrap
msgid ""
" guestfish --ro -d libvirt-domain -i cat /etc/group\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:116
msgid "Another way to edit C</boot/grub/grub.conf> interactively is:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:118
#, no-wrap
msgid ""
" guestfish --rw -a disk.img -i edit /boot/grub/grub.conf\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:120
msgid "As a script interpreter"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:122
msgid "Create a 100MB disk containing an ext2-formatted partition:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:124
#, no-wrap
msgid ""
" #!/usr/bin/guestfish -f\n"
" sparse test1.img 100M\n"
" run\n"
" part-disk /dev/sda mbr\n"
" mkfs ext2 /dev/sda1\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:130
msgid "Start with a prepared disk"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:132
msgid ""
"An alternate way to create a 100MB disk called C<test1.img> containing a "
"single ext2-formatted partition:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:135 ../src/guestfs.pod:2311
#, no-wrap
msgid ""
" guestfish -N fs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:137
msgid "To list what is available do:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:139 ../fish/guestfish.pod:1054
#, no-wrap
msgid ""
" guestfish -N help | less\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:141
msgid "Remote control"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:143
#, no-wrap
msgid ""
" eval \"`guestfish --listen`\"\n"
" guestfish --remote add-ro disk.img\n"
" guestfish --remote run\n"
" guestfish --remote lvs\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:154
msgid "Displays general help on options."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:158
msgid "B<--cmd-help>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:160
msgid "Lists all available guestfish commands."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:162
msgid "B<-h cmd>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:164
msgid "B<--cmd-help cmd>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:166
msgid "Displays detailed help on a single command C<cmd>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:168 ../fuse/guestmount.pod:96
msgid "B<-a image>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:170 ../fuse/guestmount.pod:98
msgid "B<--add image>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:172
msgid "Add a block device or virtual machine image to the shell."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:177
msgid ""
"Using this flag is mostly equivalent to using the C<add> command, with "
"C<readonly:true> if the I<--ro> flag was given, and with C<format:...> if "
"the I<--format=...> flag was given."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:185 ../fuse/guestmount.pod:109
msgid ""
"When used in conjunction with the I<-d> option, this specifies the libvirt "
"URI to use.  The default is to use the default libvirt connection."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:189
msgid "B<--csh>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:191
msgid ""
"If using the I<--listen> option and a csh-like shell, use this option.  See "
"section L</REMOTE CONTROL AND CSH> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:194 ../fuse/guestmount.pod:113
msgid "B<-d libvirt-domain>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:196 ../fuse/guestmount.pod:115
msgid "B<--domain libvirt-domain>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:198 ../fuse/guestmount.pod:117
msgid ""
"Add disks from the named libvirt domain.  If the I<--ro> option is also "
"used, then any libvirt domain can be used.  However in write mode, only "
"libvirt domains which are shut down can be named here."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:202 ../fuse/guestmount.pod:121
msgid "Domain UUIDs can be used instead of names."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:204
msgid ""
"Using this flag is mostly equivalent to using the C<add-domain> command, "
"with C<readonly:true> if the I<--ro> flag was given, and with C<format:...> "
"if the I<--format=...> flag was given."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:208
msgid "B<-D>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:210
msgid "B<--no-dest-paths>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:212
msgid ""
"Don't tab-complete paths on the guest filesystem.  It is useful to be able "
"to hit the tab key to complete paths on the guest filesystem, but this "
"causes extra \"hidden\" guestfs calls to be made, so this option is here to "
"allow this feature to be disabled."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:219 ../fuse/guestmount.pod:137
msgid ""
"When prompting for keys and passphrases, guestfish normally turns echoing "
"off so you cannot see what you are typing.  If you are not worried about "
"Tempest attacks and there is no one else in the room you can specify this "
"flag to see what you are typing."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:224
msgid "B<-f file>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:226
msgid "B<--file file>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:228
msgid "Read commands from C<file>.  To write pure guestfish scripts, use:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:231
#, no-wrap
msgid ""
" #!/usr/bin/guestfish -f\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:244
#, no-wrap
msgid ""
" guestfish --format=raw -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:248
#, no-wrap
msgid ""
" guestfish --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:253
msgid ""
"If you have untrusted raw-format guest disk images, you should use this "
"option to specify the disk format.  This avoids a possible security problem "
"with malicious guests (CVE-2010-3851).  See also L</add-drive-opts>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:260 ../fuse/guestmount.pod:166
msgid "B<--inspector>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:262 ../fuse/guestmount.pod:168
msgid ""
"Using L<virt-inspector(1)> code, inspect the disks looking for an operating "
"system and mount filesystems as they would be mounted on the real virtual "
"machine."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:266
msgid "Typical usage is either:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:268
#, no-wrap
msgid ""
" guestfish -d myguest -i\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:270
msgid "(for an inactive libvirt domain called I<myguest>), or:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:272
#, no-wrap
msgid ""
" guestfish --ro -d myguest -i\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:274
msgid "(for active domains, readonly), or specify the block device directly:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:276
#, no-wrap
msgid ""
" guestfish --rw -a /dev/Guests/MyGuest -i\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:278
msgid ""
"Note that the command line syntax changed slightly over older versions of "
"guestfish.  You can still use the old syntax:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:281
#, no-wrap
msgid ""
" guestfish [--ro] -i disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:283
#, no-wrap
msgid ""
" guestfish [--ro] -i libvirt-domain\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:285
msgid ""
"Using this flag is mostly equivalent to using the C<inspect-os> command and "
"then using other commands to mount the filesystems that were found."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:294
msgid "B<--listen>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:296
msgid ""
"Fork into the background and listen for remote commands.  See section "
"L</REMOTE CONTROL GUESTFISH OVER A SOCKET> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:299 ../fuse/guestmount.pod:177
msgid "B<--live>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:301 ../fuse/guestmount.pod:179
msgid ""
"Connect to a live virtual machine.  (Experimental, see "
"L<guestfs(3)/ATTACHING TO RUNNING DAEMONS>)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:304 ../fuse/guestmount.pod:182
msgid "B<-m dev[:mountpoint[:options]]>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:306 ../fuse/guestmount.pod:184
msgid "B<--mount dev[:mountpoint[:options]]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:308
msgid "Mount the named partition or logical volume on the given mountpoint."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:310
msgid "If the mountpoint is omitted, it defaults to C</>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:312
msgid "You have to mount something on C</> before most commands will work."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:314
msgid ""
"If any I<-m> or I<--mount> options are given, the guest is automatically "
"launched."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:317
msgid ""
"If you don't know what filesystems a disk image contains, you can either run "
"guestfish without this option, then list the partitions, filesystems and LVs "
"available (see L</list-partitions>, L</list-filesystems> and L</lvs> "
"commands), or you can use the L<virt-filesystems(1)> program."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:323 ../fuse/guestmount.pod:192
msgid ""
"The third (and rarely used) part of the mount parameter is the list of mount "
"options used to mount the underlying filesystem.  If this is not given, then "
"the mount options are either the empty string or C<ro> (the latter if the "
"I<--ro> flag is used).  By specifying the mount options, you override this "
"default choice.  Probably the only time you would use this is to enable ACLs "
"and/or extended attributes if the filesystem can support them:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:331 ../fuse/guestmount.pod:200
#, no-wrap
msgid ""
" -m /dev/sda1:/:acl,user_xattr\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:333
msgid "Using this flag is equivalent to using the C<mount-options> command."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:335 ../fuse/guestmount.pod:202 ../resize/virt-resize.pod:441 ../sysprep/virt-sysprep.pod:73
msgid "B<-n>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:337 ../fuse/guestmount.pod:204
msgid "B<--no-sync>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:339
msgid ""
"Disable autosync.  This is enabled by default.  See the discussion of "
"autosync in the L<guestfs(3)> manpage."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:342
msgid "B<-N type>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:344
msgid "B<--new type>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:346
msgid "B<-N help>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:348
msgid ""
"Prepare a fresh disk image formatted as \"type\".  This is an alternative to "
"the I<-a> option: whereas I<-a> adds an existing disk, I<-N> creates a "
"preformatted disk with a filesystem and adds it.  See L</PREPARED DISK "
"IMAGES> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:353
msgid "B<--pipe-error>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:355
msgid ""
"If writes fail to pipe commands (see L</PIPES> below), then the command "
"returns an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:358
msgid "The default (also for historical reasons) is to ignore such errors so that:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:361
#, no-wrap
msgid ""
" ><fs> command_with_lots_of_output | head\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:363
msgid "doesn't give an error."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:365
msgid "B<--progress-bars>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:367
msgid "Enable progress bars, even when guestfish is used non-interactively."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:369
msgid ""
"Progress bars are enabled by default when guestfish is used as an "
"interactive shell."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:372
msgid "B<--no-progress-bars>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:374
msgid "Disable progress bars."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:376
msgid "B<--remote[=pid]>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:378
msgid ""
"Send remote commands to C<$GUESTFISH_PID> or C<pid>.  See section L</REMOTE "
"CONTROL GUESTFISH OVER A SOCKET> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:381 ../fuse/guestmount.pod:248 ../rescue/virt-rescue.pod:192
msgid "B<-r>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:383 ../fuse/guestmount.pod:250 ../rescue/virt-rescue.pod:194
msgid "B<--ro>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:385
msgid ""
"This changes the I<-a>, I<-d> and I<-m> options so that disks are added and "
"mounts are done read-only."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:388 ../rescue/virt-rescue.pod:198
msgid ""
"The option must always be used if the disk image or virtual machine might be "
"running, and is generally recommended in cases where you don't need write "
"access to the disk."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:392
msgid ""
"Note that prepared disk images created with I<-N> are not affected by this "
"option.  Also commands like C<add> are not affected - you have to specify "
"the C<readonly:true> option explicitly if you need it."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:396
msgid "See also L</OPENING DISKS FOR READ AND WRITE> below."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:398 ../fuse/guestmount.pod:262 ../rescue/virt-rescue.pod:216
msgid "B<--selinux>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:400
msgid "Enable SELinux support for the guest.  See L<guestfs(3)/SELINUX>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:406
msgid ""
"Enable very verbose messages.  This is particularly useful if you find a "
"bug."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:413
msgid "Display the guestfish / libguestfs version number and exit."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:415 ../fuse/guestmount.pod:278 ../rescue/virt-rescue.pod:246
msgid "B<-w>"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:417 ../fuse/guestmount.pod:280 ../rescue/virt-rescue.pod:248
msgid "B<--rw>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:419 ../fuse/guestmount.pod:282
msgid ""
"This changes the I<-a>, I<-d> and I<-m> options so that disks are added and "
"mounts are done read-write."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:422
msgid "See L</OPENING DISKS FOR READ AND WRITE> below."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:426
msgid "Echo each command before executing it."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:430
msgid "COMMANDS ON COMMAND LINE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:432
msgid "Any additional (non-option) arguments are treated as commands to execute."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:435
msgid ""
"Commands to execute should be separated by a colon (C<:>), where the colon "
"is a separate parameter.  Thus:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:438
#, no-wrap
msgid ""
" guestfish cmd [args...] : cmd [args...] : cmd [args...] ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:440
msgid ""
"If there are no additional arguments, then we enter a shell, either an "
"interactive shell with a prompt (if the input is a terminal) or a "
"non-interactive shell."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:444
msgid ""
"In either command line mode or non-interactive shell, the first command that "
"gives an error causes the whole shell to exit.  In interactive mode (with a "
"prompt) if a command fails, you can continue to enter commands."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:449
msgid "USING launch (OR run)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:451
msgid ""
"As with L<guestfs(3)>, you must first configure your guest by adding disks, "
"then launch it, then mount any disks you need, and finally issue "
"actions/commands.  So the general order of the day is:"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:459
msgid "add or -a/--add"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:463
msgid "launch (aka run)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:467
msgid "mount or -m/--mount"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:471
msgid "any other commands"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:475
msgid ""
"C<run> is a synonym for C<launch>.  You must C<launch> (or C<run>)  your "
"guest before mounting or performing any other commands."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:478
msgid ""
"The only exception is that if any of the I<-i>, I<-m>, I<--mount>, I<-N> or "
"I<--new> options were given then C<run> is done automatically, simply "
"because guestfish can't perform the action you asked for without doing this."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:483
msgid "OPENING DISKS FOR READ AND WRITE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:485
msgid ""
"The guestfish, L<guestmount(1)> and L<virt-rescue(1)> options I<--ro> and "
"I<--rw> affect whether the other command line options I<-a>, I<-c>, I<-d>, "
"I<-i> and I<-m> open disk images read-only or for writing."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:490
msgid ""
"In libguestfs E<le> 1.10, guestfish, guestmount and virt-rescue defaulted to "
"opening disk images supplied on the command line for write.  To open a disk "
"image read-only you have to do I<-a image --ro>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:494
msgid ""
"This matters: If you accidentally open a live VM disk image writable then "
"you will cause irreversible disk corruption."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:497
msgid ""
"In a future libguestfs we intend to change the default the other way.  Disk "
"images will be opened read-only.  You will have to either specify "
"I<guestfish --rw>, I<guestmount --rw>, I<virt-rescue --rw>, or change the "
"configuration file C</etc/libguestfs-tools.conf> in order to get write "
"access for disk images specified by those other command line options."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:504
msgid ""
"This version of guestfish, guestmount and virt-rescue has a I<--rw> option "
"which does nothing (it is already the default).  However it is highly "
"recommended that you use this option to indicate that you need write access, "
"and prepare your scripts for the day when this option will be required for "
"write access."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:510
msgid ""
"B<Note:> This does I<not> affect commands like L</add> and L</mount>, or any "
"other libguestfs program apart from guestfish and guestmount."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:513
msgid "QUOTING"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:515
msgid ""
"You can quote ordinary parameters using either single or double quotes.  For "
"example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:518
#, no-wrap
msgid ""
" add \"file with a space.img\"\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:520
#, no-wrap
msgid ""
" rm '/file name'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:522
#, no-wrap
msgid ""
" rm '/\"'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:524
msgid ""
"A few commands require a list of strings to be passed.  For these, use a "
"whitespace-separated list, enclosed in quotes.  Strings containing "
"whitespace to be passed through must be enclosed in single quotes.  A "
"literal single quote must be escaped with a backslash."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:529
#, no-wrap
msgid ""
" vgcreate VG \"/dev/sda1 /dev/sdb1\"\n"
" command \"/bin/echo 'foo      bar'\"\n"
" command \"/bin/echo \\'foo\\'\"\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:533
msgid "ESCAPE SEQUENCES IN DOUBLE QUOTED ARGUMENTS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:535
msgid ""
"In double-quoted arguments (only) use backslash to insert special "
"characters:"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:540
msgid "C<\\a>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:542
msgid "Alert (bell) character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:544
msgid "C<\\b>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:546
msgid "Backspace character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:548
msgid "C<\\f>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:550
msgid "Form feed character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:552
msgid "C<\\n>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:554
msgid "Newline character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:556
msgid "C<\\r>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:558
msgid "Carriage return character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:560
msgid "C<\\t>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:562
msgid "Horizontal tab character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:564
msgid "C<\\v>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:566
msgid "Vertical tab character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:568
msgid "C<\\\">"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:570
msgid "A literal double quote character."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:572
msgid "C<\\ooo>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:574
msgid ""
"A character with octal value I<ooo>.  There must be precisely 3 octal digits "
"(unlike C)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:577
msgid "C<\\xhh>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:579
msgid "A character with hex value I<hh>.  There must be precisely 2 hex digits."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:582
msgid ""
"In the current implementation C<\\000> and C<\\x00> cannot be used in "
"strings."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:585
msgid "C<\\\\>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:587
msgid "A literal backslash character."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:591
msgid "OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:593
msgid ""
"Some commands take optional arguments.  These arguments appear in this "
"documentation as C<[argname:..]>.  You can use them as in these examples:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:597
#, no-wrap
msgid ""
" add-drive-opts filename\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:599
#, no-wrap
msgid ""
" add-drive-opts filename readonly:true\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:601
#, no-wrap
msgid ""
" add-drive-opts filename format:qcow2 readonly:false\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:603
msgid ""
"Each optional argument can appear at most once.  All optional arguments must "
"appear after the required ones."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:606
msgid "NUMBERS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:608
msgid "This section applies to all commands which can take integers as parameters."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:611
msgid "SIZE SUFFIX"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:613
msgid ""
"When the command takes a parameter measured in bytes, you can use one of the "
"following suffixes to specify kilobytes, megabytes and larger sizes:"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:619
msgid "B<k> or B<K> or B<KiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:621
msgid "The size in kilobytes (multiplied by 1024)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:623
msgid "B<KB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:625
msgid "The size in SI 1000 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:627
msgid "B<M> or B<MiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:629
msgid "The size in megabytes (multiplied by 1048576)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:631
msgid "B<MB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:633
msgid "The size in SI 1000000 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:635
msgid "B<G> or B<GiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:637
msgid "The size in gigabytes (multiplied by 2**30)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:639
msgid "B<GB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:641
msgid "The size in SI 10**9 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:643
msgid "B<T> or B<TiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:645
msgid "The size in terabytes (multiplied by 2**40)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:647
msgid "B<TB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:649
msgid "The size in SI 10**12 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:651
msgid "B<P> or B<PiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:653
msgid "The size in petabytes (multiplied by 2**50)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:655
msgid "B<PB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:657
msgid "The size in SI 10**15 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:659
msgid "B<E> or B<EiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:661
msgid "The size in exabytes (multiplied by 2**60)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:663
msgid "B<EB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:665
msgid "The size in SI 10**18 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:667
msgid "B<Z> or B<ZiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:669
msgid "The size in zettabytes (multiplied by 2**70)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:671
msgid "B<ZB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:673
msgid "The size in SI 10**21 byte units."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:675
msgid "B<Y> or B<YiB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:677
msgid "The size in yottabytes (multiplied by 2**80)."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:679
msgid "B<YB>"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:681
msgid "The size in SI 10**24 byte units."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:687
#, no-wrap
msgid ""
" truncate-size /file 1G\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:689
msgid "would truncate the file to 1 gigabyte."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:691
msgid ""
"Be careful because a few commands take sizes in kilobytes or megabytes "
"(eg. the parameter to L</memsize> is specified in megabytes already).  "
"Adding a suffix will probably not do what you expect."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:695
msgid "OCTAL AND HEXADECIMAL NUMBERS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:697
msgid ""
"For specifying the radix (base) use the C convention: C<0> to prefix an "
"octal number or C<0x> to prefix a hexadecimal number.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:700
#, no-wrap
msgid ""
" 1234      decimal number 1234\n"
" 02322     octal number, equivalent to decimal 1234\n"
" 0x4d2     hexadecimal number, equivalent to decimal 1234\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:704
msgid ""
"When using the C<chmod> command, you almost always want to specify an octal "
"number for the mode, and you must prefix it with C<0> (unlike the Unix "
"L<chmod(1)> program):"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:708
#, no-wrap
msgid ""
" chmod 0777 /public  # OK\n"
" chmod 777 /public   # WRONG! This is mode 777 decimal = 01411 octal.\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:711
msgid ""
"Commands that return numbers usually print them in decimal, but some "
"commands print numbers in other radices (eg. C<umask> prints the mode in "
"octal, preceded by C<0>)."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:715
msgid "WILDCARDS AND GLOBBING"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:717
msgid ""
"Neither guestfish nor the underlying guestfs API performs wildcard expansion "
"(globbing) by default.  So for example the following will not do what you "
"expect:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:721
#, no-wrap
msgid ""
" rm-rf /home/*\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:723
msgid ""
"Assuming you don't have a directory called literally C</home/*> then the "
"above command will return an error."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:726
msgid "To perform wildcard expansion, use the C<glob> command."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:728
#, no-wrap
msgid ""
" glob rm-rf /home/*\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:730
msgid ""
"runs C<rm-rf> on each path that matches (ie. potentially running the command "
"many times), equivalent to:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:733
#, no-wrap
msgid ""
" rm-rf /home/jim\n"
" rm-rf /home/joe\n"
" rm-rf /home/mary\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:737
msgid "C<glob> only works on simple guest paths and not on device names."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:739
msgid ""
"If you have several parameters, each containing a wildcard, then glob will "
"perform a Cartesian product."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:742
msgid "COMMENTS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:744
msgid ""
"Any line which starts with a I<#> character is treated as a comment and "
"ignored.  The I<#> can optionally be preceded by whitespace, but B<not> by a "
"command.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:748
#, no-wrap
msgid ""
" # this is a comment\n"
"         # this is a comment\n"
" foo # NOT a comment\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:752
msgid "Blank lines are also ignored."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:754
msgid "RUNNING COMMANDS LOCALLY"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:756
msgid ""
"Any line which starts with a I<!> character is treated as a command sent to "
"the local shell (C</bin/sh> or whatever L<system(3)> uses).  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:760
#, no-wrap
msgid ""
" !mkdir local\n"
" tgz-out /remote local/remote-data.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:763
msgid ""
"will create a directory C<local> on the host, and then export the contents "
"of C</remote> on the mounted filesystem to C<local/remote-data.tar.gz>.  "
"(See C<tgz-out>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:767
msgid ""
"To change the local directory, use the C<lcd> command.  C<!cd> will have no "
"effect, due to the way that subprocesses work in Unix."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:770
msgid "LOCAL COMMANDS WITH INLINE EXECUTION"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:772
msgid ""
"If a line starts with I<E<lt>!> then the shell command is executed (as for "
"I<!>), but subsequently any output (stdout) of the shell command is parsed "
"and executed as guestfish commands."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:776
msgid ""
"Thus you can use shell script to construct arbitrary guestfish commands "
"which are then parsed by guestfish."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:779
msgid ""
"For example it is tedious to create a sequence of files (eg. C</foo.1> "
"through C</foo.100>) using guestfish commands alone.  However this is simple "
"if we use a shell script to create the guestfish commands for us:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:784
#, no-wrap
msgid ""
" <! for n in `seq 1 100`; do echo write /foo.$n $n; done\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:786
msgid "or with names like C</foo.001>:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:788
#, no-wrap
msgid ""
" <! for n in `seq 1 100`; do printf \"write /foo.%03d %d\\n\" $n $n; done\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:790
msgid ""
"When using guestfish interactively it can be helpful to just run the shell "
"script first (ie. remove the initial C<E<lt>> character so it is just an "
"ordinary I<!> local command), see what guestfish commands it would run, and "
"when you are happy with those prepend the C<E<lt>> character to run the "
"guestfish commands for real."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:796
msgid "PIPES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:798
msgid ""
"Use C<command E<lt>spaceE<gt> | command> to pipe the output of the first "
"command (a guestfish command) to the second command (any host command).  For "
"example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:802
#, no-wrap
msgid ""
" cat /etc/passwd | awk -F: '$3 == 0 { print }'\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:804
msgid ""
"(where C<cat> is the guestfish cat command, but C<awk> is the host awk "
"program).  The above command would list all accounts in the guest filesystem "
"which have UID 0, ie. root accounts including backdoors.  Other examples:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:809
#, no-wrap
msgid ""
" hexdump /bin/ls | head\n"
" list-devices | tail -1\n"
" tgz-out / - | tar ztf -\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:813
msgid ""
"The space before the pipe symbol is required, any space after the pipe "
"symbol is optional.  Everything after the pipe symbol is just passed "
"straight to the host shell, so it can contain redirections, globs and "
"anything else that makes sense on the host side."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:818
msgid ""
"To use a literal argument which begins with a pipe symbol, you have to quote "
"it, eg:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:821
#, no-wrap
msgid ""
" echo \"|\"\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:823
msgid "HOME DIRECTORIES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:825
msgid ""
"If a parameter starts with the character C<~> then the tilde may be expanded "
"as a home directory path (either C<~> for the current user's home directory, "
"or C<~user> for another user)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:829
msgid ""
"Note that home directory expansion happens for users known I<on the host>, "
"not in the guest filesystem."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:832
msgid ""
"To use a literal argument which begins with a tilde, you have to quote it, "
"eg:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:835
#, no-wrap
msgid ""
" echo \"~\"\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:837 ../src/guestfs.pod:521
msgid "ENCRYPTED DISKS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:839
msgid ""
"Libguestfs has some support for Linux guests encrypted according to the "
"Linux Unified Key Setup (LUKS) standard, which includes nearly all whole "
"disk encryption systems used by modern Linux guests.  Currently only "
"LVM-on-LUKS is supported."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:844
msgid "Identify encrypted block devices and partitions using L</vfs-type>:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:846
#, no-wrap
msgid ""
" ><fs> vfs-type /dev/sda2\n"
" crypto_LUKS\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:849
msgid ""
"Then open those devices using L</luks-open>.  This creates a device-mapper "
"device called C</dev/mapper/luksdev>."
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:852
#, no-wrap
msgid ""
" ><fs> luks-open /dev/sda2 luksdev\n"
" Enter key or passphrase (\"key\"): <enter the passphrase>\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:855
msgid ""
"Finally you have to tell LVM to scan for volume groups on the newly created "
"mapper device:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:858
#, no-wrap
msgid ""
" vgscan\n"
" vg-activate-all true\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:861
msgid "The logical volume(s) can now be mounted in the usual way."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:863
msgid ""
"Before closing a LUKS device you must unmount any logical volumes on it and "
"deactivate the volume groups by calling C<vg-activate false VG> on each "
"one.  Then you can close the mapper device:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:867
#, no-wrap
msgid ""
" vg-activate false /dev/VG\n"
" luks-close /dev/mapper/luksdev\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:872
msgid ""
"If a path is prefixed with C<win:> then you can use Windows-style drive "
"letters and paths (with some limitations).  The following commands are "
"equivalent:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:876
#, no-wrap
msgid ""
" file /WINDOWS/system32/config/system.LOG\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:878
#, no-wrap
msgid ""
" file win:\\windows\\system32\\config\\system.log\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:880
#, no-wrap
msgid ""
" file WIN:C:\\Windows\\SYSTEM32\\CONFIG\\SYSTEM.LOG\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:882
msgid ""
"The parameter is rewritten \"behind the scenes\" by looking up the position "
"where the drive is mounted, prepending that to the path, changing all "
"backslash characters to forward slash, then resolving the result using "
"L</case-sensitive-path>.  For example if the E: drive was mounted on C</e> "
"then the parameter might be rewritten like this:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:888
#, no-wrap
msgid ""
" win:e:\\foo\\bar => /e/FOO/bar\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:890
msgid "This only works in argument positions that expect a path."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:892
msgid "UPLOADING AND DOWNLOADING FILES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:894
msgid ""
"For commands such as C<upload>, C<download>, C<tar-in>, C<tar-out> and "
"others which upload from or download to a local file, you can use the "
"special filename C<-> to mean \"from stdin\" or \"to stdout\".  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:898
#, no-wrap
msgid ""
" upload - /foo\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:900
msgid "reads stdin and creates from that a file C</foo> in the disk image, and:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:903
#, no-wrap
msgid ""
" tar-out /etc - | tar tf -\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:905
msgid ""
"writes the tarball to stdout and then pipes that into the external \"tar\" "
"command (see L</PIPES>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:908
msgid ""
"When using C<-> to read from stdin, the input is read up to the end of "
"stdin.  You can also use a special \"heredoc\"-like syntax to read up to "
"some arbitrary end marker:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:912
#, no-wrap
msgid ""
" upload -<<END /foo\n"
" input line 1\n"
" input line 2\n"
" input line 3\n"
" END\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:918
msgid ""
"Any string of characters can be used instead of C<END>.  The end marker must "
"appear on a line of its own, without any preceding or following characters "
"(not even spaces)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:922
msgid ""
"Note that the C<-E<lt>E<lt>> syntax only applies to parameters used to "
"upload local files (so-called \"FileIn\" parameters in the generator)."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:925
msgid "EXIT ON ERROR BEHAVIOUR"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:927
msgid ""
"By default, guestfish will ignore any errors when in interactive mode "
"(ie. taking commands from a human over a tty), and will exit on the first "
"error in non-interactive mode (scripts, commands given on the command line)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:932
msgid ""
"If you prefix a command with a I<-> character, then that command will not "
"cause guestfish to exit, even if that (one) command returns an error."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:936
msgid "REMOTE CONTROL GUESTFISH OVER A SOCKET"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:938
msgid ""
"Guestfish can be remote-controlled over a socket.  This is useful "
"particularly in shell scripts where you want to make several different "
"changes to a filesystem, but you don't want the overhead of starting up a "
"guestfish process each time."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:943
msgid "Start a guestfish server process using:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:945
#, no-wrap
msgid ""
" eval \"`guestfish --listen`\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:947
msgid "and then send it commands by doing:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:949
#, no-wrap
msgid ""
" guestfish --remote cmd [...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:951
msgid "To cause the server to exit, send it the exit command:"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:955
msgid ""
"Note that the server will normally exit if there is an error in a command.  "
"You can change this in the usual way.  See section L</EXIT ON ERROR "
"BEHAVIOUR>."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:959
msgid "CONTROLLING MULTIPLE GUESTFISH PROCESSES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:961
msgid ""
"The C<eval> statement sets the environment variable C<$GUESTFISH_PID>, which "
"is how the I<--remote> option knows where to send the commands.  You can "
"have several guestfish listener processes running using:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:965
#, no-wrap
msgid ""
" eval \"`guestfish --listen`\"\n"
" pid1=$GUESTFISH_PID\n"
" eval \"`guestfish --listen`\"\n"
" pid2=$GUESTFISH_PID\n"
" ...\n"
" guestfish --remote=$pid1 cmd\n"
" guestfish --remote=$pid2 cmd\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:973
msgid "REMOTE CONTROL AND CSH"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:975
msgid ""
"When using csh-like shells (csh, tcsh etc) you have to add the I<--csh> "
"option:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:978
#, no-wrap
msgid ""
" eval \"`guestfish --listen --csh`\"\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:980
msgid "REMOTE CONTROL DETAILS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:982
msgid ""
"Remote control happens over a Unix domain socket called "
"C</tmp/.guestfish-$UID/socket-$PID>, where C<$UID> is the effective user ID "
"of the process, and C<$PID> is the process ID of the server."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:986
msgid "Guestfish client and server versions must match exactly."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:988
msgid "USING REMOTE CONTROL ROBUSTLY FROM SHELL SCRIPTS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:990
msgid ""
"From Bash, you can use the following code which creates a guestfish "
"instance, correctly quotes the command line, handles failure to start, and "
"cleans up guestfish when the script exits:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:994 ../src/guestfs.pod:1048
#, no-wrap
msgid ""
" #!/bin/bash -\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:998
#, no-wrap
msgid ""
" guestfish[0]=\"guestfish\"\n"
" guestfish[1]=\"--listen\"\n"
" guestfish[2]=\"--ro\"\n"
" guestfish[3]=\"-a\"\n"
" guestfish[4]=\"disk.img\"\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1004
#, no-wrap
msgid ""
" GUESTFISH_PID=\n"
" eval $(\"${guestfish[@]}\")\n"
" if [ -z \"$GUESTFISH_PID\" ]; then\n"
"     echo \"error: guestfish didn't start up, see error messages above\"\n"
"     exit 1\n"
" fi\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1011
#, no-wrap
msgid ""
" cleanup_guestfish ()\n"
" {\n"
"     guestfish --remote -- exit >/dev/null 2>&1 ||:\n"
" }\n"
" trap cleanup_guestfish EXIT ERR\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1017
#, no-wrap
msgid ""
" guestfish --remote -- run\n"
" \n"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1019
#, no-wrap
msgid ""
" # ...\n"
"\n"
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1021
msgid "REMOTE CONTROL RUN COMMAND HANGING"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1023
msgid ""
"Using the C<run> (or C<launch>) command remotely in a command substitution "
"context hangs, ie. don't do (note the backquotes):"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1026
#, no-wrap
msgid ""
" a=`guestfish --remote run`\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1028
msgid ""
"Since the C<run> command produces no output on stdout, this is not useful "
"anyway.  For further information see "
"L<https://bugzilla.redhat.com/show_bug.cgi?id=592910>."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1032
msgid "PREPARED DISK IMAGES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1034
msgid ""
"Use the I<-N type> or I<--new type> parameter to select one of a set of "
"preformatted disk images that guestfish can make for you to save typing.  "
"This is particularly useful for testing purposes.  This option is used "
"instead of the I<-a> option, and like I<-a> can appear multiple times (and "
"can be mixed with I<-a>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1040
msgid ""
"The new disk is called C<test1.img> for the first I<-N>, C<test2.img> for "
"the second and so on.  Existing files in the current directory are "
"I<overwritten>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1044
msgid ""
"The type briefly describes how the disk should be sized, partitioned, how "
"filesystem(s) should be created, and how content should be added.  "
"Optionally the type can be followed by extra parameters, separated by C<:> "
"(colon) characters.  For example, I<-N fs> creates a default 100MB, "
"sparsely-allocated disk, containing a single partition, with the partition "
"formatted as ext2.  I<-N fs:ext4:1G> is the same, but for an ext4 filesystem "
"on a 1GB disk instead."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1052
msgid "To list the available types and any extra parameters they take, run:"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1056
msgid ""
"Note that the prepared filesystem is not mounted.  You would usually have to "
"use the C<mount /dev/sda1 /> command or add the I<-m /dev/sda1> option."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1060
msgid ""
"If any I<-N> or I<--new> options are given, the guest is automatically "
"launched."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1065
msgid "Create a 100MB disk with an ext4-formatted partition:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1067
#, no-wrap
msgid ""
" guestfish -N fs:ext4\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1069
msgid "Create a 32MB disk with a VFAT-formatted partition, and mount it:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1071
#, no-wrap
msgid ""
" guestfish -N fs:vfat:32M -m /dev/sda1\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1073
msgid "Create a blank 200MB disk:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1075
#, no-wrap
msgid ""
" guestfish -N disk:200M\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1077
msgid "PROGRESS BARS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1079
msgid ""
"Some (not all) long-running commands send progress notification messages as "
"they are running.  Guestfish turns these messages into progress bars."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1083
msgid ""
"When a command that supports progress bars takes longer than two seconds to "
"run, and if progress bars are enabled, then you will see one appearing below "
"the command:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1087
#, no-wrap
msgid ""
" ><fs> copy-size /large-file /another-file 2048M\n"
" / 10% [#####-----------------------------------------] 00:30\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1090
msgid ""
"The spinner on the left hand side moves round once for every progress "
"notification received from the backend.  This is a (reasonably) golden "
"assurance that the command is \"doing something\" even if the progress bar "
"is not moving, because the command is able to send the progress "
"notifications.  When the bar reaches 100% and the command finishes, the "
"spinner disappears."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1097
msgid ""
"Progress bars are enabled by default when guestfish is used interactively.  "
"You can enable them even for non-interactive modes using I<--progress-bars>, "
"and you can disable them completely using I<--no-progress-bars>."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1102
msgid "GUESTFISH COMMANDS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1104
msgid ""
"The commands in this section are guestfish convenience commands, in other "
"words, they are not part of the L<guestfs(3)> API."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1107
msgid "help"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1109
#, no-wrap
msgid ""
" help\n"
" help cmd\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1112
msgid "Without any parameter, this provides general help."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1114
msgid "With a C<cmd> parameter, this displays detailed help for that command."
msgstr ""

#. type: =head2
#: ../fish/guestfish.pod:1116
msgid "quit | exit"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1118
msgid "This exits guestfish.  You can also use C<^D> key."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1120
msgid "@FISH_COMMANDS@"
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1122
msgid "COMMANDS"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1124 ../src/guestfs.pod:1588
msgid "@ACTIONS@"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1128
msgid ""
"guestfish returns 0 if the commands completed without error, or 1 if there "
"was an error."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1135
msgid "EDITOR"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1137
msgid ""
"The C<edit> command uses C<$EDITOR> as the editor.  If not set, it uses "
"C<vi>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1140 ../src/guestfs.pod:3271
msgid "FEBOOTSTRAP_KERNEL"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1142 ../src/guestfs.pod:3273
msgid "FEBOOTSTRAP_MODULES"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1144 ../src/guestfs.pod:3275
msgid ""
"These two environment variables allow the kernel that libguestfs uses in the "
"appliance to be selected.  If C<$FEBOOTSTRAP_KERNEL> is not set, then the "
"most recent host kernel is chosen.  For more information about kernel "
"selection, see L<febootstrap-supermin-helper(8)>.  This feature is only "
"available in febootstrap E<ge> 3.8."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1150
msgid "GUESTFISH_DISPLAY_IMAGE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1152
msgid ""
"The C<display> command uses C<$GUESTFISH_DISPLAY_IMAGE> to display images.  "
"If not set, it uses L<display(1)>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1155
msgid "GUESTFISH_PID"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1157
msgid ""
"Used with the I<--remote> option to specify the remote guestfish process to "
"control.  See section L</REMOTE CONTROL GUESTFISH OVER A SOCKET>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1161
msgid "HEXEDITOR"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1163
msgid ""
"The L</hexedit> command uses C<$HEXEDITOR> as the external hex editor.  If "
"not specified, the external L<hexedit(1)> program is used."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1167
msgid "HOME"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1169
msgid ""
"If compiled with GNU readline support, various files in the home directory "
"can be used.  See L</FILES>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1172 ../src/guestfs.pod:3281
msgid "LIBGUESTFS_APPEND"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1174 ../src/guestfs.pod:3283
msgid "Pass additional options to the guest kernel."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1176 ../src/guestfs.pod:3285
msgid "LIBGUESTFS_DEBUG"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1178
msgid ""
"Set C<LIBGUESTFS_DEBUG=1> to enable verbose messages.  This has the same "
"effect as using the B<-v> option."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1181 ../src/guestfs.pod:3290
msgid "LIBGUESTFS_MEMSIZE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1183 ../src/guestfs.pod:3292
msgid "Set the memory allocated to the qemu process, in megabytes.  For example:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1186 ../src/guestfs.pod:3295
#, no-wrap
msgid ""
" LIBGUESTFS_MEMSIZE=700\n"
"\n"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1188 ../src/guestfs.pod:3297
msgid "LIBGUESTFS_PATH"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1190
msgid ""
"Set the path that guestfish uses to search for kernel and initrd.img.  See "
"the discussion of paths in L<guestfs(3)>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1193 ../src/guestfs.pod:3302
msgid "LIBGUESTFS_QEMU"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1195 ../src/guestfs.pod:3304
msgid ""
"Set the default qemu binary that libguestfs uses.  If not set, then the qemu "
"which was found at compile time by the configure script is used."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1199 ../src/guestfs.pod:3310
msgid "LIBGUESTFS_TRACE"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1201
msgid "Set C<LIBGUESTFS_TRACE=1> to enable command traces."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1203
msgid "PAGER"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1205
msgid ""
"The C<more> command uses C<$PAGER> as the pager.  If not set, it uses "
"C<more>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1208 ../sparsify/virt-sparsify.pod:263 ../src/guestfs.pod:3315
msgid "TMPDIR"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1210 ../src/guestfs.pod:3317
msgid ""
"Location of temporary directory, defaults to C</tmp> except for the cached "
"supermin appliance which defaults to C</var/tmp>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1213 ../src/guestfs.pod:3320
msgid ""
"If libguestfs was compiled to use the supermin appliance then the real "
"appliance is cached in this directory, shared between all handles belonging "
"to the same EUID.  You can use C<$TMPDIR> to configure another directory to "
"use in case C</var/tmp> is not large enough."
msgstr ""

#. type: =head1
#: ../fish/guestfish.pod:1221 ../fuse/guestmount.pod:297 ../rescue/virt-rescue.pod:325
msgid "FILES"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1225 ../fuse/guestmount.pod:301 ../rescue/virt-rescue.pod:329
msgid "$HOME/.libguestfs-tools.rc"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1227 ../fuse/guestmount.pod:303 ../rescue/virt-rescue.pod:331
msgid "/etc/libguestfs-tools.conf"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1229 ../fuse/guestmount.pod:305 ../rescue/virt-rescue.pod:333
msgid ""
"This configuration file controls the default read-only or read-write mode "
"(I<--ro> or I<--rw>)."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1232
msgid "See L</OPENING DISKS FOR READ AND WRITE>."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1234
msgid "$HOME/.guestfish"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1236
msgid ""
"If compiled with GNU readline support, then the command history is saved in "
"this file."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1239
msgid "$HOME/.inputrc"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1241
msgid "/etc/inputrc"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1243
msgid ""
"If compiled with GNU readline support, then these files can be used to "
"configure readline.  For further information, please see "
"L<readline(3)/INITIALIZATION FILE>."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1247
msgid "To write rules which only apply to guestfish, use:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1249
#, no-wrap
msgid ""
" $if guestfish\n"
" ...\n"
" $endif\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1253
msgid ""
"Variables that you can set in inputrc that change the behaviour of guestfish "
"in useful ways include:"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1258
msgid "completion-ignore-case (default: on)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1260
msgid ""
"By default, guestfish will ignore case when tab-completing paths on the "
"disk.  Use:"
msgstr ""

#. type: verbatim
#: ../fish/guestfish.pod:1263
#, no-wrap
msgid ""
" set completion-ignore-case off\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1265
msgid "to make guestfish case sensitive."
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1269
msgid "test1.img"
msgstr ""

#. type: =item
#: ../fish/guestfish.pod:1271
msgid "test2.img (etc)"
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1273
msgid ""
"When using the I<-N> or I<--new> option, the prepared disk or filesystem "
"will be created in the file C<test1.img> in the current directory.  The "
"second use of I<-N> will use C<test2.img> and so on.  Any existing file with "
"the same name will be overwritten."
msgstr ""

#. type: textblock
#: ../fish/guestfish.pod:1282
msgid ""
"L<guestfs(3)>, L<http://libguestfs.org/>, L<virt-alignment-scan(1)>, "
"L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-df(1)>, "
"L<virt-edit(1)>, L<virt-filesystems(1)>, L<virt-inspector(1)>, "
"L<virt-list-filesystems(1)>, L<virt-list-partitions(1)>, L<virt-ls(1)>, "
"L<virt-make-fs(1)>, L<virt-rescue(1)>, L<virt-resize(1)>, "
"L<virt-sparsify(1)>, L<virt-sysprep(1)>, L<virt-tar(1)>, L<virt-tar-in(1)>, "
"L<virt-tar-out(1)>, L<virt-win-reg(1)>, L<display(1)>, L<hexedit(1)>, "
"L<febootstrap-supermin-helper(8)>."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:5
msgid "virt-copy-in - Copy files and directories into a virtual machine disk image."
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-in.pod:9
#, no-wrap
msgid ""
" virt-copy-in -a disk.img file|dir [file|dir ...] /destination\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-in.pod:11
#, no-wrap
msgid ""
" virt-copy-in -d domain file|dir [file|dir ...] /destination\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:15
msgid ""
"Using C<virt-copy-in> on live virtual machines can be dangerous, potentially "
"causing disk corruption.  The virtual machine must be shut down before you "
"use this command."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:21
msgid ""
"C<virt-copy-in> copies files and directories from the local disk into a "
"virtual machine disk image or named libvirt domain."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:24
msgid ""
"You can give one of more filenames and directories on the command line.  "
"Directories are copied in recursively.  The final parameter must be the "
"destination directory in the disk image which must be an absolute path "
"starting with a C</> character."
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-in.pod:33
#, no-wrap
msgid ""
" virt-copy-in -d MyGuest resolv.conf /etc\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:35 ../fish/virt-tar-in.pod:32
msgid "Upload a home directory to a guest:"
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-in.pod:37
#, no-wrap
msgid ""
" virt-copy-in -d MyGuest skel /home\n"
"\n"
msgstr ""

#. type: =head1
#: ../fish/virt-copy-in.pod:39 ../fish/virt-copy-out.pod:28 ../fish/virt-tar-in.pod:36 ../fish/virt-tar-out.pod:30
msgid "JUST A SHELL SCRIPT WRAPPER AROUND GUESTFISH"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:41
msgid ""
"This command is just a simple shell script wrapper around the "
"L<guestfish(1)> C<copy-in> command.  For anything more complex than a "
"trivial copy, you are probably better off using guestfish directly."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:47 ../fish/virt-copy-out.pod:36 ../fish/virt-tar-in.pod:44 ../fish/virt-tar-out.pod:38
msgid ""
"Since the shell script just passes options straight to guestfish, read "
"L<guestfish(1)> to see the full list of options."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:52
msgid ""
"L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>, L<virt-edit(1)>, "
"L<virt-tar-in(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-in.pod:66 ../fish/virt-copy-out.pod:55 ../fish/virt-tar-in.pod:64 ../fish/virt-tar-out.pod:57
msgid "Copyright (C) 2011 Red Hat Inc.  L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:5
msgid ""
"virt-copy-out - Copy files and directories out of a virtual machine disk "
"image."
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-out.pod:9
#, no-wrap
msgid ""
" virt-copy-out -a disk.img /file|dir [/file|dir ...] localdir\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-out.pod:11
#, no-wrap
msgid ""
" virt-copy-out -d domain /file|dir [/file|dir ...] localdir\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:15
msgid ""
"C<virt-copy-out> copies files and directories out of a virtual machine disk "
"image or named libvirt domain."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:18
msgid ""
"You can give one of more filenames and directories on the command line.  "
"Directories are copied out recursively."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:23
msgid "Download the home directories from a virtual machine:"
msgstr ""

#. type: verbatim
#: ../fish/virt-copy-out.pod:25
#, no-wrap
msgid ""
" mkdir homes\n"
" virt-copy-out -d MyGuest /home homes\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:30
msgid ""
"This command is just a simple shell script wrapper around the "
"L<guestfish(1)> C<copy-out> command.  For anything more complex than a "
"trivial copy, you are probably better off using guestfish directly."
msgstr ""

#. type: textblock
#: ../fish/virt-copy-out.pod:41
msgid ""
"L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-edit(1)>, "
"L<virt-tar-in(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:5
msgid "virt-tar-in - Unpack a tarball into a virtual machine disk image."
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-in.pod:9
#, no-wrap
msgid ""
" virt-tar-in -a disk.img data.tar /destination\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-in.pod:11
#, no-wrap
msgid ""
" virt-tar-in -d domain data.tar /destination\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-in.pod:13
#, no-wrap
msgid ""
" zcat data.tar.gz | virt-tar-in -d domain - /destination\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:17
msgid ""
"Using C<virt-tar-in> on live virtual machines can be dangerous, potentially "
"causing disk corruption.  The virtual machine must be shut down before you "
"use this command."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:23
msgid ""
"C<virt-tar-in> unpacks an uncompressed tarball into a virtual machine disk "
"image or named libvirt domain."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:26
msgid ""
"The first parameter is the tar file.  Use C<-> to read the tar file from "
"standard input.  The second parameter is the absolute target directory to "
"unpack into."
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-in.pod:34
#, no-wrap
msgid ""
" virt-tar-in -d MyGuest homes.tar /home\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:38
msgid ""
"This command is just a simple shell script wrapper around the "
"L<guestfish(1)> C<tar-in> command.  For anything more complex than a trivial "
"copy, you are probably better off using guestfish directly."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-in.pod:49
msgid ""
"L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
"L<virt-edit(1)>, L<virt-make-fs(1)>, L<virt-tar-out(1)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:5
msgid "virt-tar-out - Pack a virtual machine disk image directory into a tarball."
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-out.pod:9
#, no-wrap
msgid ""
" virt-tar-out -a disk.img /dir files.tar\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-out.pod:11
#, no-wrap
msgid ""
" virt-tar-out -d domain /dir files.tar\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-out.pod:13
#, no-wrap
msgid ""
" virt-tar-out -d domain /dir - | gzip --best > files.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:17
msgid "C<virt-tar-out> packs a virtual machine disk image directory into a tarball."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:20
msgid ""
"The first parameter is the absolute path of the virtual machine directory.  "
"The second parameter is the tar file to write.  Use C<-> to write to "
"standard output."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:26
msgid "Download the home directories from a guest:"
msgstr ""

#. type: verbatim
#: ../fish/virt-tar-out.pod:28
#, no-wrap
msgid ""
" virt-tar-out -d MyGuest /home - | gzip --best > homes.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:32
msgid ""
"This command is just a simple shell script wrapper around the "
"L<guestfish(1)> C<tar-out> command.  For anything more complex than a "
"trivial copy, you are probably better off using guestfish directly."
msgstr ""

#. type: textblock
#: ../fish/virt-tar-out.pod:43
msgid ""
"L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
"L<virt-edit(1)>, L<virt-tar-in(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:5
msgid "virt-format - Erase and make a blank disk"
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:9
#, no-wrap
msgid ""
" virt-format [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:13
msgid ""
"Virt-format takes an existing disk file (or it can be a host partition, LV "
"etc), B<erases all data on it>, and formats it as a blank disk.  It can "
"optionally create partition tables, empty filesystems, logical volumes and "
"more."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:18
msgid ""
"To create a disk containing data, you may be better to use "
"L<virt-make-fs(1)>.  If you are creating a blank disk to use in "
"L<guestfish(1)>, you should instead use the guestfish I<-N> option."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:22
msgid "Normal usage would be something like this:"
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:24
#, no-wrap
msgid ""
" virt-format -a disk.qcow\n"
"\n"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:26
msgid "or this:"
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:28
#, no-wrap
msgid ""
" virt-format -a /dev/VG/LV\n"
"\n"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:30
msgid ""
"C<disk.qcow> or C</dev/VG/LV> must exist already.  B<Any data on these disks "
"will be erased by these commands>.  These commands will create a single "
"empty partition covering the whole disk, with no filesystem inside it."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:35
msgid ""
"Additional parameters can be used to control the creation of partitions, "
"filesystems, etc.  The most commonly used options are:"
msgstr ""

#. type: =item
#: ../format/virt-format.pod:40
msgid "I<--filesystem=[ext3|ntfs|vfat|...]>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:42
msgid "Create an empty filesystem (C<ext3>, C<ntfs> etc) inside the partition."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:44
msgid "I<--lvm[=/dev/VG/LV]>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:46
msgid ""
"Create a Linux LVM2 logical volume on the disk.  When used with "
"I<--filesystem>, the filesystem is created inside the LV."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:51
msgid "For more information about these and other options, see L</OPTIONS> below."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:54
msgid ""
"The format of the disk is normally auto-detected, but you can also force it "
"by using the I<--format> option (q.v.).  In situations where you do not "
"trust the existing content of the disk, then it is advisable to use this "
"option to avoid possible exploits."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:71
msgid "Add I<file>, a disk image, host partition, LV, external USB disk, etc."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:76
msgid "B<Any existing data on the disk is erased.>"
msgstr ""

#. type: =item
#: ../format/virt-format.pod:78
msgid "B<--filesystem=ext3|ntfs|vfat|...>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:80
msgid ""
"Create an empty filesystem of the specified type.  Many filesystem types are "
"supported by libguestfs."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:83
msgid "B<--filesystem=none>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:85
msgid "Create no filesystem.  This is the default."
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:98
#, no-wrap
msgid ""
" virt-format --format=raw -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../format/virt-format.pod:102
#, no-wrap
msgid ""
" virt-format --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""

#. type: =item
#: ../format/virt-format.pod:111
msgid "B<--lvm=/dev/I<VG>/I<LV>>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:113
msgid ""
"Create a Linux LVM2 logical volume called C</dev/I<VG>/I<LV>>.  You can "
"change the name of the volume group and logical volume."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:116
msgid "B<--lvm>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:118
msgid "Create a Linux LVM2 logical volume with the default name (C</dev/VG/LV>)."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:121
msgid "B<--lvm=none>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:123
msgid "Create no logical volume.  This is the default."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:125 ../tools/virt-make-fs.pl:251
msgid "B<--partition>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:127
msgid ""
"Create either an MBR or GPT partition covering the whole disk.  MBR is "
"chosen if the disk size is E<lt> 2 TB, GPT if E<ge> 2 TB."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:130
msgid "This is the default."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:132
msgid "B<--partition=gpt>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:134
msgid "Create a GPT partition."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:136
msgid "B<--partition=mbr>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:138
msgid "Create an MBR partition."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:140
msgid "B<--partition=none>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:142
msgid ""
"Create no partition table.  Note that Windows may not be able to see these "
"disks."
msgstr ""

#. type: =item
#: ../format/virt-format.pod:157
msgid "B<--wipe>"
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:159
msgid ""
"Normally virt-format does not wipe data from the disk (because that takes a "
"long time).  Thus if there is data on the disk, it is only hidden and "
"partially overwritten by virt-format, and it might be recovered by disk "
"editing tools."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:164
msgid ""
"If you use this option, virt-format writes zeroes over the whole disk so "
"that previous data is not recoverable."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:175
msgid "This program returns C<0> on success, or C<1> on failure."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:179
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-make-fs(1)>, "
"L<virt-rescue(1)>, L<virt-resize(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../format/virt-format.pod:193
msgid "Copyright (C) 2012 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:5
msgid "guestmount - Mount a guest filesystem on the host using FUSE and libguestfs"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:9
#, no-wrap
msgid ""
" guestmount [--options] -a disk.img -m device [--ro] mountpoint\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:11
#, no-wrap
msgid ""
" guestmount [--options] -a disk.img -i [--ro] mountpoint\n"
"\n"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:13
#, no-wrap
msgid ""
" guestmount [--options] -d Guest -i [--ro] mountpoint\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:17
msgid ""
"You must I<not> use C<guestmount> in read-write mode on live virtual "
"machines.  If you do this, you risk disk corruption in the VM."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:22
msgid ""
"The guestmount program can be used to mount virtual machine filesystems and "
"other disk images on the host.  It uses libguestfs for access to the guest "
"filesystem, and FUSE (the \"filesystem in userspace\") to make it appear as "
"a mountable device."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:27
msgid ""
"Along with other options, you have to give at least one device (I<-a> "
"option) or libvirt domain (I<-d> option), and at least one mountpoint (I<-m> "
"option) or use the I<-i> inspection option or the I<--live> option.  How "
"this works is better explained in the L<guestfish(1)> manual page, or by "
"looking at the examples below."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:33
msgid ""
"FUSE lets you mount filesystems as non-root.  The mountpoint must be owned "
"by you, and the filesystem will not be visible to any other users unless you "
"make certain global configuration changes to C</etc/fuse.conf>.  To unmount "
"the filesystem, use the C<fusermount -u> command."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:41
msgid ""
"For a typical Windows guest which has its main filesystem on the first "
"partition:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:44
#, no-wrap
msgid ""
" guestmount -a windows.img -m /dev/sda1 --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:46
msgid ""
"For a typical Linux guest which has a /boot filesystem on the first "
"partition, and the root filesystem on a logical volume:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:49
#, no-wrap
msgid ""
" guestmount -a linux.img -m /dev/VG/LV -m /dev/sda1:/boot --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:51
msgid "To get libguestfs to detect guest mountpoints for you:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:53
#, no-wrap
msgid ""
" guestmount -a guest.img -i --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:55
msgid "For a libvirt guest called \"Guest\" you could do:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:57
#, no-wrap
msgid ""
" guestmount -d Guest -i --ro /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:59
msgid ""
"If you don't know what filesystems are contained in a guest or disk image, "
"use L<virt-filesystems(1)> first:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:62
#, no-wrap
msgid ""
" virt-filesystems -d MyGuest\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:64
msgid ""
"If you want to trace the libguestfs calls but without excessive debugging "
"information, we recommend:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:67
#, no-wrap
msgid ""
" guestmount [...] --trace /mnt\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:69
msgid "If you want to debug the program, we recommend:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:71
#, no-wrap
msgid ""
" guestmount [...] --trace --verbose /mnt\n"
"\n"
msgstr ""

#. type: =head1
#: ../fuse/guestmount.pod:73 ../rescue/virt-rescue.pod:96 ../resize/virt-resize.pod:627
msgid "NOTES"
msgstr ""

#. type: =head2
#: ../fuse/guestmount.pod:75
msgid "Other users cannot see the filesystem by default"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:77
msgid ""
"If you mount a filesystem as one user (eg. root), then other users will not "
"be able to see it by default.  The fix is to add the FUSE C<allow_other> "
"option when mounting:"
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:81
#, no-wrap
msgid ""
" sudo guestmount [...] -o allow_other /mnt\n"
"\n"
msgstr ""

#. type: =head2
#: ../fuse/guestmount.pod:83
msgid "Enabling FUSE"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:85
msgid ""
"On some distros, you may need to add yourself to a special group "
"(eg. C<fuse>) before you can use any FUSE filesystem.  This is necessary on "
"Debian and derivatives."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:89
msgid ""
"On other distros, no special group is required.  It is not necessary on "
"Fedora or Red Hat Enterprise Linux."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:100
msgid "Add a block device or virtual machine image."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:123
msgid "B<--dir-cache-timeout N>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:125
msgid ""
"Set the readdir cache timeout to I<N> seconds, the default being 60 "
"seconds.  The readdir cache [actually, there are several semi-independent "
"caches] is populated after a readdir(2) call with the stat and extended "
"attributes of the files in the directory, in anticipation that they will be "
"requested soon after."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:131
msgid ""
"There is also a different attribute cache implemented by FUSE (see the FUSE "
"option I<-o attr_timeout>), but the FUSE cache does not anticipate future "
"requests, only cache existing ones."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:151
msgid ""
"If you have untrusted raw-format guest disk images, you should use this "
"option to specify the disk format.  This avoids a possible security problem "
"with malicious guests (CVE-2010-3851).  See also "
"L<guestfs(3)/guestfs_add_drive_opts>."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:156
msgid "B<--fuse-help>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:158
msgid "Display help on special FUSE options (see I<-o> below)."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:162
msgid "Display brief help and exit."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:186
msgid ""
"Mount the named partition or logical volume on the given mountpoint B<in the "
"guest> (this has nothing to do with mountpoints in the host)."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:189
msgid ""
"If the mountpoint is omitted, it defaults to C</>.  You have to mount "
"something on C</>."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:206
msgid ""
"By default, we attempt to sync the guest disk when the FUSE mountpoint is "
"unmounted.  If you specify this option, then we don't attempt to sync the "
"disk.  See the discussion of autosync in the L<guestfs(3)> manpage."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:211
msgid "B<-o option>"
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:213
msgid "B<--option option>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:215
msgid "Pass extra options to FUSE."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:217
msgid ""
"To get a list of all the extra options supported by FUSE, use the command "
"below.  Note that only the FUSE I<-o> options can be passed, and only some "
"of them are a good idea."
msgstr ""

#. type: verbatim
#: ../fuse/guestmount.pod:221
#, no-wrap
msgid ""
" guestmount --fuse-help\n"
"\n"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:223
msgid "Some potentially useful FUSE options:"
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:227
msgid "B<-o allow_other>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:229
msgid "Allow other users to see the filesystem."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:231
msgid "B<-o attr_timeout=N>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:233
msgid "Enable attribute caching by FUSE, and set the timeout to I<N> seconds."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:235
msgid "B<-o kernel_cache>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:237
msgid ""
"Allow the kernel to cache files (reduces the number of reads that have to go "
"through the L<guestfs(3)> API).  This is generally a good idea if you can "
"afford the extra memory usage."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:241
msgid "B<-o uid=N> B<-o gid=N>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:243
msgid ""
"Use these options to map all UIDs and GIDs inside the guest filesystem to "
"the chosen values."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:252
msgid ""
"Add devices and mount everything read-only.  Also disallow writes and make "
"the disk appear read-only to FUSE."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:255
msgid ""
"This is highly recommended if you are not going to edit the guest disk.  If "
"the guest is running and this option is I<not> supplied, then there is a "
"strong risk of disk corruption in the guest.  We try to prevent this from "
"happening, but it is not always possible."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:260 ../rescue/virt-rescue.pod:202
msgid "See also L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:264
msgid "Enable SELinux support for the guest."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:270
msgid "Enable verbose messages from underlying libguestfs."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:276
msgid "Display the program version and exit."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:285 ../fuse/guestmount.pod:308 ../rescue/virt-rescue.pod:253 ../rescue/virt-rescue.pod:336
msgid "See L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."
msgstr ""

#. type: =item
#: ../fuse/guestmount.pod:289
msgid "B<--trace>"
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:291
msgid "Trace libguestfs calls and entry into each FUSE function."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:293
msgid "This also stops the daemon from forking into the background."
msgstr ""

#. type: textblock
#: ../fuse/guestmount.pod:319
msgid ""
"L<guestfish(1)>, L<virt-inspector(1)>, L<virt-cat(1)>, L<virt-edit(1)>, "
"L<virt-tar(1)>, L<guestfs(3)>, L<http://libguestfs.org/>, "
"L<http://fuse.sf.net/>."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:5
msgid ""
"virt-inspector - Display operating system version and other information "
"about a virtual machine"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:9
#, no-wrap
msgid ""
" virt-inspector [--options] -d domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:11
#, no-wrap
msgid ""
" virt-inspector [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:15
#, no-wrap
msgid ""
" virt-inspector domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:17 ../inspector/virt-inspector.pod:147
#, no-wrap
msgid ""
" virt-inspector disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:21
msgid ""
"B<virt-inspector> examines a virtual machine or disk image and tries to "
"determine the version of the operating system and other information about "
"the virtual machine."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:25
msgid "Virt-inspector produces XML output for feeding into other programs."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:27
msgid ""
"In the normal usage, use C<virt-inspector -d domname> where C<domname> is "
"the libvirt domain (see: C<virsh list --all>)."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:30
msgid ""
"You can also run virt-inspector directly on disk images from a single "
"virtual machine.  Use C<virt-inspector -a disk.img>.  In rare cases a domain "
"has several block devices, in which case you should list several I<-a> "
"options one after another, with the first corresponding to the guest's "
"C</dev/sda>, the second to the guest's C</dev/sdb> and so on."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:37
msgid ""
"You can also run virt-inspector on install disks, live CDs, bootable USB "
"keys and similar."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:40
msgid ""
"Virt-inspector can only inspect and report upon I<one domain at a time>.  To "
"inspect several virtual machines, you have to run virt-inspector several "
"times (for example, from a shell script for-loop)."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:45
msgid ""
"Because virt-inspector needs direct access to guest images, it won't "
"normally work over remote libvirt connections."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:48
msgid ""
"All of the information available from virt-inspector is also available "
"through the core libguestfs inspection API (see L<guestfs(3)/INSPECTION>).  "
"The same information can also be fetched using guestfish or via libguestfs "
"bindings in many programming languages (see L</GETTING INSPECTION DATA FROM "
"THE LIBGUESTFS API>)."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:80
msgid ""
"Libvirt is only used if you specify a C<domname> on the command line.  If "
"you specify guest block devices directly (I<-a>), then libvirt is not used "
"at all."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:93
msgid ""
"When prompting for keys and passphrases, virt-inspector normally turns "
"echoing off so you cannot see what you are typing.  If you are not worried "
"about Tempest attacks and there is no one else in the room you can specify "
"this flag to see what you are typing."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:102 ../tools/virt-list-filesystems.pl:95 ../tools/virt-list-partitions.pl:96 ../tools/virt-tar.pl:143 ../tools/virt-win-reg.pl:144
msgid ""
"Specify the format of disk images given on the command line.  If this is "
"omitted then the format is autodetected from the content of the disk image."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:106 ../tools/virt-list-filesystems.pl:99 ../tools/virt-list-partitions.pl:100 ../tools/virt-tar.pl:147 ../tools/virt-win-reg.pl:148
msgid ""
"If disk images are requested from libvirt, then this program asks libvirt "
"for this information.  In this case, the value of the format parameter is "
"ignored."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:110 ../resize/virt-resize.pod:397 ../resize/virt-resize.pod:489 ../sparsify/virt-sparsify.pod:139 ../tools/virt-list-filesystems.pl:103 ../tools/virt-list-partitions.pl:104 ../tools/virt-tar.pl:151 ../tools/virt-win-reg.pl:152
msgid ""
"If working with untrusted raw-format guest disk images, you should ensure "
"the format is always specified."
msgstr ""

#. type: =item
#: ../inspector/virt-inspector.pod:134
msgid "B<--xpath> query"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:136
msgid ""
"Perform an XPath query on the XML on stdin, and print the result on stdout.  "
"In this mode virt-inspector simply runs an XPath query; all other inspection "
"functions are disabled.  See L</XPATH QUERIES> below for some examples."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:145
msgid "Previous versions of virt-inspector allowed you to write either:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:151
#, no-wrap
msgid ""
" virt-inspector guestname\n"
"\n"
msgstr ""

#. type: =head1
#: ../inspector/virt-inspector.pod:159
msgid "XML FORMAT"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:161
msgid ""
"The virt-inspector XML is described precisely in a RELAX NG schema file "
"C<virt-inspector.rng> which is supplied with libguestfs.  This section is "
"just an overview."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:165
msgid ""
"The top-level element is E<lt>operatingsystemsE<gt>, and it contains one or "
"more E<lt>operatingsystemE<gt> elements.  You would only see more than one "
"E<lt>operatingsystemE<gt> element if the virtual machine is multi-boot, "
"which is vanishingly rare in real world VMs."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:170
msgid "E<lt>operatingsystemE<gt>"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:172
msgid ""
"In the E<lt>operatingsystemE<gt> tag are various optional fields that "
"describe the operating system, its architecture, the descriptive \"product "
"name\" string, the type of OS and so on, as in this example:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:176
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     <root>/dev/sda2</root>\n"
"     <name>windows</name>\n"
"     <arch>i386</arch>\n"
"     <distro>windows</distro>\n"
"     <product_name>Windows 7 Enterprise</product_name>\n"
"     <product_variant>Client</product_variant>\n"
"     <major_version>6</major_version>\n"
"     <minor_version>1</minor_version>\n"
"     <windows_systemroot>/Windows</windows_systemroot>\n"
"     <format>installed</format>\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:189
msgid ""
"In brief, E<lt>nameE<gt> is the class of operating system (something like "
"C<linux> or C<windows>), E<lt>distroE<gt> is the distribution (eg. C<fedora> "
"but many other distros are recognized) and E<lt>archE<gt> is the guest "
"architecture.  The other fields are fairly self-explanatory, but because "
"these fields are taken directly from the libguestfs inspection API you can "
"find precise information from L<guestfs(3)/INSPECTION>."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:197
msgid ""
"The E<lt>rootE<gt> element is the root filesystem device, but from the point "
"of view of libguestfs (block devices may have completely different names "
"inside the VM itself)."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:201
msgid "E<lt>mountpointsE<gt>"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:203
msgid ""
"Un*x-like guests typically have multiple filesystems which are mounted at "
"various mountpoints, and these are described in the E<lt>mountpointsE<gt> "
"element which looks like this:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:207
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <mountpoints>\n"
"       <mountpoint dev=\"/dev/vg_f13x64/lv_root\">/</mountpoint>\n"
"       <mountpoint dev=\"/dev/sda1\">/boot</mountpoint>\n"
"     </mountpoints>\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:215
msgid ""
"As with E<lt>rootE<gt>, devices are from the point of view of libguestfs, "
"and may have completely different names inside the guest.  Only mountable "
"filesystems appear in this list, not things like swap devices."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:220
msgid "E<lt>filesystemsE<gt>"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:222
msgid ""
"E<lt>filesystemsE<gt> is like E<lt>mountpointsE<gt> but covers I<all> "
"filesystems belonging to the guest, including swap and empty partitions.  "
"(In the rare case of a multi-boot guest, it covers filesystems belonging to "
"this OS or shared with this OS and other OSes)."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:228
msgid "You might see something like this:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:230
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <filesystems>\n"
"       <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
"         <type>ext4</type>\n"
"         <label>Fedora-13-x86_64</label>\n"
"         <uuid>e6a4db1e-15c2-477b-ac2a-699181c396aa</uuid>\n"
"       </filesystem>\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:240
msgid ""
"The optional elements within E<lt>filesystemE<gt> are the filesystem type, "
"the label, and the UUID."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:243
msgid "E<lt>applicationsE<gt>"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:245
msgid ""
"The related elements E<lt>package_formatE<gt>, E<lt>package_managementE<gt> "
"and E<lt>applicationsE<gt> describe applications installed in the virtual "
"machine."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:249
msgid ""
"E<lt>package_formatE<gt>, if present, describes the packaging system used.  "
"Typical values would be C<rpm> and C<deb>."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:252
msgid ""
"E<lt>package_managementE<gt>, if present, describes the package manager.  "
"Typical values include C<yum>, C<up2date> and C<apt>"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:255
msgid "E<lt>applicationsE<gt> lists the packages or applications installed."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:258
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <applications>\n"
"       <application>\n"
"         <name>coreutils</name>\n"
"         <version>8.5</version>\n"
"         <release>1</release>\n"
"       </application>\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:268
msgid ""
"The version and release fields may not be available for some types guests.  "
"Other fields are possible, see "
"L<guestfs(3)/guestfs_inspect_list_applications>."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:272
msgid "E<lt>drive_mappingsE<gt>"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:274
msgid ""
"For operating systems like Windows which use drive letters, virt-inspector "
"is able to find out how drive letters map to filesystems."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:278
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <drive_mappings>\n"
"       <drive_mapping name=\"C\">/dev/sda2</drive_mapping>\n"
"       <drive_mapping name=\"E\">/dev/sdb1</drive_mapping>\n"
"     </drive_mappings>\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:286
msgid ""
"In the example above, drive C maps to the filesystem on the second partition "
"on the first disk, and drive E maps to the filesystem on the first partition "
"on the second disk."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:290
msgid ""
"Note that this only covers permanent local filesystem mappings, not things "
"like network shares.  Furthermore NTFS volume mount points may not be listed "
"here."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:294
msgid "E<lt>iconE<gt>"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:296
msgid ""
"Virt-inspector is sometimes able to extract an icon or logo for the guest.  "
"The icon is returned as base64-encoded PNG data.  Note that the icon can be "
"very large and high quality."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:300
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     ...\n"
"     <icon>\n"
"       iVBORw0KGgoAAAANSUhEUgAAAGAAAABg[.......]\n"
"       [... many lines of base64 data ...]\n"
"     </icon>\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:308
msgid ""
"To display the icon, you have to extract it and convert the base64 data back "
"to a binary file.  Use an XPath query or simply an editor to extract the "
"data, then use the coreutils L<base64(1)> program to do the conversion back "
"to a PNG file:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:313
#, no-wrap
msgid ""
" base64 -i -d < icon.data > icon.png\n"
"\n"
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:315
msgid "INSPECTING INSTALL DISKS, LIVE CDs"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:317
msgid ""
"Virt-inspector can detect some operating system installers on install disks, "
"live CDs, bootable USB keys and more."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:320
msgid ""
"In this case the E<lt>formatE<gt> tag will contain C<installer> and other "
"fields may be present to indicate a live CD, network installer, or one part "
"of a multipart CD.  For example:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:324
#, no-wrap
msgid ""
" <operatingsystems>\n"
"   <operatingsystem>\n"
"     <root>/dev/sda</root>\n"
"     <name>linux</name>\n"
"     <arch>i386</arch>\n"
"     <distro>ubuntu</distro>\n"
"     <product_name>Ubuntu 10.10 &quot;Maverick "
"Meerkat&quot;</product_name>\n"
"     <major_version>10</major_version>\n"
"     <minor_version>10</minor_version>\n"
"     <format>installer</format>\n"
"     <live/>\n"
"\n"
msgstr ""

#. type: =head1
#: ../inspector/virt-inspector.pod:336
msgid "XPATH QUERIES"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:338
msgid ""
"Virt-inspector includes built in support for running XPath queries.  The "
"reason for including XPath support directly in virt-inspector is simply that "
"there are no good and widely available command line programs that can do "
"XPath queries.  The only good one is L<xmlstarlet(1)> and that is not "
"available on Red Hat Enterprise Linux."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:345
msgid ""
"To perform an XPath query, use the I<--xpath> option.  Note that in this "
"mode, virt-inspector simply reads XML from stdin and outputs the query "
"result on stdout.  All other inspection features are disabled in this mode."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:352
#, no-wrap
msgid ""
" $ virt-inspector -d Guest | virt-inspector --xpath '//filesystems'\n"
" <filesystems>\n"
"      <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
"        <type>ext4</type>\n"
" [...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:358
#, no-wrap
msgid ""
" $ virt-inspector -d Guest | \\\n"
"     virt-inspector --xpath "
"\"string(//filesystem[@dev='/dev/sda1']/type)\"\n"
" ext4\n"
"\n"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:362
#, no-wrap
msgid ""
" $ virt-inspector -d Guest | \\\n"
"     virt-inspector --xpath 'string(//icon)' | base64 -i -d | display -\n"
" [displays the guest icon, if there is one]\n"
"\n"
msgstr ""

#. type: =head1
#: ../inspector/virt-inspector.pod:373
msgid "GETTING INSPECTION DATA FROM THE LIBGUESTFS API"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:375
msgid ""
"In early versions of libguestfs, virt-inspector was a large Perl script that "
"contained many heuristics for inspecting guests.  This had several problems: "
"in order to do inspection from other tools (like guestfish) we had to call "
"out to this Perl script; and it privileged Perl over other languages that "
"libguestfs supports."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:381
msgid ""
"By libguestfs 1.8 we had rewritten the Perl code in C, and incorporated it "
"all into the core libguestfs API (L<guestfs(3)>).  Now virt-inspector is "
"simply a thin C program over the core C API.  All of the inspection "
"information is available from all programming languages that libguestfs "
"supports, and from guestfish."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:387
msgid "For a description of the C inspection API, read L<guestfs(3)/INSPECTION>."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:390
msgid ""
"For example code using the C inspection API, look for C<inspect_vm.c> which "
"ships with libguestfs."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:393
msgid ""
"C<inspect_vm.c> has also been translated into other languages.  For example, "
"C<inspect_vm.pl> is the Perl translation, and there are other translations "
"for OCaml, Python, etc.  See L<guestfs(3)/USING LIBGUESTFS WITH OTHER "
"PROGRAMMING LANGUAGES> for a list of man pages which contain this example "
"code."
msgstr ""

#. type: =head2
#: ../inspector/virt-inspector.pod:399
msgid "GETTING INSPECTION DATA FROM GUESTFISH"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:401
msgid ""
"If you use the guestfish I<-i> option, then the main C inspection API "
"L<guestfs(3)/guestfs_inspect_os> is called.  This is equivalent to the "
"guestfish command C<inspect-os>.  You can also call this guestfish command "
"by hand."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:406
msgid ""
"C<inspect-os> performs inspection on the current disk image, returning the "
"list of operating systems found.  Each OS is represented by its root "
"filesystem device.  In the majority of cases, this command prints nothing "
"(no OSes found), or a single root device, but beware that it can print "
"multiple lines if there are multiple OSes or if there is an install CD "
"attached to the guest."
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:413
#, no-wrap
msgid ""
" $ guestfish --ro -a F15x32.img\n"
" ><fs> run\n"
" ><fs> inspect-os\n"
" /dev/vg_f15x32/lv_root\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:418
msgid "Using the root device, you can fetch further information about the guest:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:421
#, no-wrap
msgid ""
" ><fs> inspect-get-type /dev/vg_f15x32/lv_root\n"
" linux\n"
" ><fs> inspect-get-distro /dev/vg_f15x32/lv_root\n"
" fedora\n"
" ><fs> inspect-get-major-version /dev/vg_f15x32/lv_root\n"
" 15\n"
" ><fs> inspect-get-product-name /dev/vg_f15x32/lv_root\n"
" Fedora release 15 (Lovelock)\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:430
msgid ""
"Limitations of guestfish make it hard to assign the root device to a "
"variable (since guestfish doesn't have variables), so if you want to do this "
"reproducibly you are better off writing a script using one of the other "
"languages that the libguestfs API supports."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:435
msgid "To list applications, you have to first mount up the disks:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:437
#, no-wrap
msgid ""
" ><fs> inspect-get-mountpoints /dev/vg_f15x32/lv_root\n"
" /: /dev/vg_f15x32/lv_root\n"
" /boot: /dev/vda1\n"
" ><fs> mount-ro /dev/vg_f15x32/lv_root /\n"
" ><fs> mount-ro /dev/vda1 /boot\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:443
msgid "and then call the inspect-list-applications API:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:445
#, no-wrap
msgid ""
" ><fs> inspect-list-applications /dev/vg_f15x32/lv_root | head -28\n"
" [0] = {\n"
"   app_name: ConsoleKit\n"
"   app_display_name:\n"
"   app_epoch: 0\n"
"   app_version: 0.4.5\n"
"   app_release: 1.fc15\n"
"   app_install_path:\n"
"   app_trans_path:\n"
"   app_publisher:\n"
"   app_url:\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description:\n"
" }\n"
" [1] = {\n"
"   app_name: ConsoleKit-libs\n"
"   app_display_name:\n"
"   app_epoch: 0\n"
"   app_version: 0.4.5\n"
"   app_release: 1.fc15\n"
"   app_install_path:\n"
"   app_trans_path:\n"
"   app_publisher:\n"
"   app_url:\n"
"   app_source_package:\n"
"   app_summary:\n"
"   app_description:\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:475
msgid ""
"To display an icon for the guest, note that filesystems must also be mounted "
"as above.  You can then do:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:478
#, no-wrap
msgid ""
" ><fs> inspect-get-icon /dev/vg_f15x32/lv_root | display -\n"
"\n"
msgstr ""

#. type: =head1
#: ../inspector/virt-inspector.pod:480
msgid "OLD VERSIONS OF VIRT-INSPECTOR"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:482
msgid ""
"As described above, early versions of libguestfs shipped with a different "
"virt-inspector program written in Perl (the current version is written in "
"C).  The XML output of the Perl virt-inspector was different and it could "
"also output in other formats like text."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:487
msgid "The old virt-inspector is no longer supported or shipped with libguestfs."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:490
msgid ""
"To confuse matters further, in Red Hat Enterprise Linux 6 we ship two "
"versions of virt-inspector with different names:"
msgstr ""

#. type: verbatim
#: ../inspector/virt-inspector.pod:493
#, no-wrap
msgid ""
" virt-inspector     Old Perl version.\n"
" virt-inspector2    New C version.\n"
"\n"
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:503
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<http://www.w3.org/TR/xpath/>, "
"L<base64(1)>, L<xmlstarlet(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../inspector/virt-inspector.pod:520
msgid "Matthew Booth L<mbooth@redhat.com>"
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:5
msgid "guestfs-java - How to use libguestfs from Java"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:9
#, no-wrap
msgid ""
" import com.redhat.et.libguestfs.*;\n"
" \n"
msgstr ""

#. type: verbatim
#: ../java/examples/guestfs-java.pod:11
#, no-wrap
msgid ""
" GuestFS g = new GuestFS ();\n"
" g.add_drive_opts (\"disk.img\", null);\n"
" g.launch ();\n"
"\n"
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:17
msgid ""
"This manual page documents how to call libguestfs from the Java programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../java/examples/guestfs-java.pod:22 ../ocaml/examples/guestfs-ocaml.pod:53
msgid "CLOSING THE HANDLE"
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:24
msgid ""
"The handle is closed when it is reaped by the garbage collector.  Because "
"libguestfs handles include a lot of state, it is also possible to close (and "
"hence free) them explicitly by calling the C<close> method."
msgstr ""

#. type: =head2
#: ../java/examples/guestfs-java.pod:29 ../ocaml/examples/guestfs-ocaml.pod:60 ../python/examples/guestfs-python.pod:21 ../ruby/examples/guestfs-ruby.pod:22
msgid "EXCEPTIONS"
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:31
msgid ""
"Errors from libguestfs functions are mapped into the C<LibGuestFSException> "
"exception.  This has a single parameter which is the error message (a "
"C<String>)."
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:35
msgid "Calling any method on a closed handle raises the same exception."
msgstr ""

#. type: textblock
#: ../java/examples/guestfs-java.pod:47
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, "
"L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, L<guestfs-python(3)>, "
"L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://libguestfs.org/>, "
"L<http://caml.inria.fr/>."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:5
msgid "guestfs-ocaml - How to use libguestfs from OCaml"
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:9
msgid "Module style:"
msgstr ""

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:11
#, no-wrap
msgid ""
" let g = Guestfs.create () in\n"
" Guestfs.add_drive_opts g ~format:\"raw\" ~readonly:true \"disk.img\";\n"
" Guestfs.launch g;\n"
"\n"
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:15
msgid "Object-oriented style:"
msgstr ""

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:17
#, no-wrap
msgid ""
" let g = new Guestfs.guestfs () in\n"
" g#add_drive_opts ~format:\"raw\" ~readonly:true \"disk.img\";\n"
" g#launch ();\n"
"\n"
msgstr ""

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:21
#, no-wrap
msgid ""
" ocamlfind opt prog.ml -package guestfs -linkpkg -o prog\n"
"or:\n"
" ocamlopt -I +guestfs mlguestfs.cmxa prog.ml -o prog\n"
"\n"
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:27
msgid ""
"This manual page documents how to call libguestfs from the OCaml programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>."
msgstr ""

#. type: =head2
#: ../ocaml/examples/guestfs-ocaml.pod:32
msgid "PROGRAMMING STYLES"
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:34
msgid ""
"There are two different programming styles supported by the OCaml bindings.  "
"You can use a module style, with each C function mapped to an OCaml "
"function:"
msgstr ""

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:38
#, no-wrap
msgid ""
" int guestfs_set_verbose (guestfs_h *g, int flag);\n"
"\n"
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:40
msgid "becomes:"
msgstr ""

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:42
#, no-wrap
msgid ""
" val Guestfs.set_verbose : Guestfs.t -> bool -> unit\n"
"\n"
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:44
msgid ""
"Alternately you can use an object-oriented style, calling methods on the "
"class C<Guestfs.guestfs>:"
msgstr ""

#. type: verbatim
#: ../ocaml/examples/guestfs-ocaml.pod:47
#, no-wrap
msgid ""
" method set_verbose : bool -> unit\n"
"\n"
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:49
msgid ""
"The object-oriented style is usually briefer, and the minor performance "
"penalty isn't noticeable in the general overhead of performing libguestfs "
"functions."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:55
msgid ""
"The handle is closed when it is reaped by the garbage collector.  Because "
"libguestfs handles include a lot of state, it is also possible to close (and "
"hence free) them explicitly by calling C<Guestfs.close> or the C<#close> "
"method."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:62
msgid ""
"Errors from libguestfs functions are mapped into the C<Guestfs.Error> "
"exception.  This has a single parameter which is the error message (a "
"string)."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:66
msgid ""
"Calling any function/method on a closed handle raises "
"C<Guestfs.Handle_closed>.  The single parameter is the name of the function "
"that you called."
msgstr ""

#. type: textblock
#: ../ocaml/examples/guestfs-ocaml.pod:80
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, "
"L<guestfs-java(3)>, L<guestfs-perl(3)>, L<guestfs-python(3)>, "
"L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://libguestfs.org/>, "
"L<http://caml.inria.fr/>."
msgstr ""

#. type: textblock
#: ../perl/examples/guestfs-perl.pod:5
msgid "guestfs-perl - How to use libguestfs from Perl"
msgstr ""

#. type: verbatim
#: ../perl/examples/guestfs-perl.pod:9
#, no-wrap
msgid ""
" use Sys::Guestfs;\n"
" \n"
msgstr ""

#. type: verbatim
#: ../perl/examples/guestfs-perl.pod:11
#, no-wrap
msgid ""
" my $h = Sys::Guestfs->new ();\n"
" $h->add_drive_opts ('guest.img', format => 'raw');\n"
" $h->launch ();\n"
" $h->mount_options ('', '/dev/sda1', '/');\n"
" $h->touch ('/hello');\n"
" $h->sync ();\n"
"\n"
msgstr ""

#. type: textblock
#: ../perl/examples/guestfs-perl.pod:20
msgid ""
"This manual page documents how to call libguestfs from the Perl programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>.  To read the full Perl API, see L<Sys::Guestfs(3)>."
msgstr ""

#. type: =head2
#: ../perl/examples/guestfs-perl.pod:26
msgid "ERRORS"
msgstr ""

#. type: textblock
#: ../perl/examples/guestfs-perl.pod:28
msgid ""
"Errors from libguestfs functions turn into calls to C<croak> (see "
"L<Carp(3)>)."
msgstr ""

#. type: textblock
#: ../perl/examples/guestfs-perl.pod:41
msgid ""
"L<Sys::Guestfs(3)>, L<guestfs(3)>, L<guestfs-examples(3)>, "
"L<guestfs-erlang(3)>, L<guestfs-java(3)>, L<guestfs-ocaml(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../python/examples/guestfs-python.pod:5
msgid "guestfs-python - How to use libguestfs from Python"
msgstr ""

#. type: verbatim
#: ../python/examples/guestfs-python.pod:9
#, no-wrap
msgid ""
" import guestfs\n"
" g = guestfs.GuestFS ()\n"
" g.add_drive_opts (\"disk.img\", format=\"raw\", readonly=1)\n"
" g.launch ()\n"
"\n"
msgstr ""

#. type: textblock
#: ../python/examples/guestfs-python.pod:16
msgid ""
"This manual page documents how to call libguestfs from the Python "
"programming language.  This page just documents the differences from the C "
"API and gives some examples.  If you are not familiar with using libguestfs, "
"you also need to read L<guestfs(3)>."
msgstr ""

#. type: textblock
#: ../python/examples/guestfs-python.pod:23
msgid ""
"Errors from libguestfs functions are mapped into C<RuntimeException> with a "
"single string argument which is the error message."
msgstr ""

#. type: =head2
#: ../python/examples/guestfs-python.pod:26
msgid "MORE DOCUMENTATION"
msgstr ""

#. type: textblock
#: ../python/examples/guestfs-python.pod:28
msgid "Type:"
msgstr ""

#. type: verbatim
#: ../python/examples/guestfs-python.pod:30
#, no-wrap
msgid ""
" $ python\n"
" >>> import guestfs\n"
" >>> help (guestfs)\n"
"\n"
msgstr ""

#. type: textblock
#: ../python/examples/guestfs-python.pod:44
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, "
"L<guestfs-java(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-recipes(1)>, L<guestfs-ruby(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:5
msgid "virt-rescue - Run a rescue shell on a virtual machine"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:9
#, no-wrap
msgid ""
" virt-rescue [--options] -d domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:11
#, no-wrap
msgid ""
" virt-rescue [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:13
#, no-wrap
msgid ""
" virt-rescue --suggest (-d domname | -a disk.img ...)\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:17
#, no-wrap
msgid ""
" virt-rescue [--options] domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:19
#, no-wrap
msgid ""
" virt-rescue [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:23
msgid ""
"You must I<not> use C<virt-rescue> on live virtual machines.  Doing so will "
"probably result in disk corruption in the VM.  C<virt-rescue> tries to stop "
"you from doing this, but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:27
msgid ""
"However if you use the I<--ro> (read only) option, then you can attach a "
"shell to a live virtual machine.  The results might be strange or "
"inconsistent at times but you won't get disk corruption."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:33
msgid ""
"virt-rescue is like a Rescue CD, but for virtual machines, and without the "
"need for a CD.  virt-rescue gives you a rescue shell and some simple "
"recovery tools which you can use to examine or rescue a virtual machine or "
"disk image."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:38
msgid ""
"You can run virt-rescue on any virtual machine known to libvirt, or directly "
"on disk image(s):"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:41
#, no-wrap
msgid ""
" virt-rescue -d GuestName\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:43
#, no-wrap
msgid ""
" virt-rescue --ro -a /path/to/disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:45
#, no-wrap
msgid ""
" virt-rescue -a /dev/sdc\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:47
msgid "For live VMs you I<must> use the --ro option."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:49
msgid ""
"When you run virt-rescue on a virtual machine or disk image, you are placed "
"in an interactive bash shell where you can use many ordinary Linux "
"commands.  What you see in C</> (C</bin>, C</lib> etc) is the rescue "
"appliance.  You must mount the virtual machine's filesystems by hand.  There "
"is an empty directory called C</sysroot> where you can mount filesystems."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:56
msgid ""
"You can get virt-rescue to suggest mount commands for you by using the "
"I<--suggest> option (in another terminal):"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:59
#, no-wrap
msgid ""
" $ virt-rescue --suggest -d Fedora15\n"
" Inspecting the virtual machine or disk image ...\n"
" \n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:62
#, no-wrap
msgid ""
" This disk contains one or more operating systems.  You can use these\n"
" mount commands in virt-rescue (at the ><rescue> prompt) to mount the\n"
" filesystems.\n"
" \n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:66
#, no-wrap
msgid ""
" # /dev/vg_f15x32/lv_root is the root of a linux operating system\n"
" # type: linux, distro: fedora, version: 15.0\n"
" # Fedora release 15 (Lovelock)\n"
" \n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:70
#, no-wrap
msgid ""
" mount /dev/vg_f15x32/lv_root /sysroot/\n"
" mount /dev/vda1 /sysroot/boot\n"
" mount --bind /dev /sysroot/dev\n"
" mount --bind /dev/pts /sysroot/dev/pts\n"
" mount --bind /proc /sysroot/proc\n"
" mount --bind /sys /sysroot/sys\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:77
msgid ""
"Another way is to list the logical volumes (with L<lvs(8)>) and partitions "
"(with L<parted(8)>) and mount them by hand:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:80
#, no-wrap
msgid ""
" ><rescue> lvs\n"
" LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert\n"
" lv_root vg_f15x32 -wi-a-   8.83G\n"
" lv_swap vg_f15x32 -wi-a- 992.00M\n"
" ><rescue> mount /dev/vg_f15x32/lv_root /sysroot\n"
" ><rescue> mount /dev/vda1 /sysroot/boot\n"
" ><rescue> ls /sysroot\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:88
msgid "Another command to list available filesystems is L<virt-filesystems(1)>."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:91
msgid ""
"To run commands in a Linux guest (for example, grub), you should chroot into "
"the /sysroot directory first:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:94
#, no-wrap
msgid ""
" ><rescue> chroot /sysroot\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:98
msgid ""
"Virt-rescue can be used on I<any> disk image file or device, not just a "
"virtual machine.  For example you can use it on a blank file if you want to "
"partition that file (although we would recommend using L<guestfish(1)> "
"instead as it is more suitable for this purpose).  You can even use "
"virt-rescue on things like SD cards."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:104
msgid ""
"You can get virt-rescue to give you scratch disk(s) to play with.  This is "
"useful for testing out Linux utilities (see I<--scratch>)."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:107
msgid ""
"Virt-rescue does not require root.  You only need to run it as root if you "
"need root to open the disk image."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:110
msgid ""
"This tool is just designed for quick interactive hacking on a virtual "
"machine.  For more structured access to a virtual machine disk image, you "
"should use L<guestfs(3)>.  To get a structured shell that you can use to "
"make scripted changes to guests, use L<guestfish(1)>."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:134
msgid "B<--append kernelopts>"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:136
msgid "Pass additional options to the rescue kernel."
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:166
#, no-wrap
msgid ""
" virt-rescue --format=raw -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:170
#, no-wrap
msgid ""
" virt-rescue --format=raw -a disk.img --format -a another.img\n"
"\n"
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:179
msgid "B<-m MB>"
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:181
msgid "B<--memsize MB>"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:183
msgid ""
"Change the amount of memory allocated to the rescue system.  The default is "
"set by libguestfs and is small but adequate for running system tools.  The "
"occasional program might need more memory.  The parameter is specified in "
"megabytes."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:188
msgid "B<--network>"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:190
msgid "Enable QEMU user networking in the guest.  See L</NETWORK>."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:196
msgid "Open the image read-only."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:204
msgid "B<--scratch>"
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:206
msgid "B<--scratch=N>"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:208
msgid ""
"The I<--scratch> option adds a large scratch disk to the rescue appliance.  "
"I<--scratch=N> adds C<N> scratch disks.  The scratch disk(s) are deleted "
"automatically when virt-rescue exits."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:212
msgid ""
"You can also mix I<-a>, I<-d> and I<--scratch> options.  The scratch disk(s) "
"are added to the appliance in the order they appear on the command line."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:218
msgid ""
"Enable SELinux in the rescue appliance.  You should read "
"L<guestfs(3)/SELINUX> before using this option."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:221
msgid "B<--smp> N"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:223
msgid "Enable N E<ge> 2 virtual CPUs in the rescue appliance."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:225
msgid "B<--suggest>"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:227
msgid ""
"Inspect the disk image and suggest what mount commands should be used to "
"mount the disks.  You should use the I<--suggest> option in a second "
"terminal, then paste the commands into another virt-rescue."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:231
msgid ""
"This option implies I<--ro> and is safe to use even if the guest is up or if "
"another virt-rescue is running."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:250
msgid ""
"This changes the I<-a> and I<-d> options so that disks are added and mounts "
"are done read-write."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:263
msgid "Previous versions of virt-rescue allowed you to write either:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:265
#, no-wrap
msgid ""
" virt-rescue disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:269
#, no-wrap
msgid ""
" virt-rescue guestname\n"
"\n"
msgstr ""

#. type: =head1
#: ../rescue/virt-rescue.pod:277
msgid "NETWORK"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:279
msgid ""
"Adding the I<--network> option enables QEMU user networking in the rescue "
"appliance.  There are some differences between user networking and ordinary "
"networking:"
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:285
msgid "ping does not work"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:287
msgid ""
"Because the ICMP ECHO_REQUEST protocol generally requires root in order to "
"send the ping packets, and because virt-rescue must be able to run as "
"non-root, QEMU user networking is not able to emulate the L<ping(8)> "
"command.  The ping command will appear to resolve addresses but will not be "
"able to send or receive any packets.  This does not mean that the network is "
"not working."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:294
msgid "cannot receive connections"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:296
msgid "QEMU user networking cannot receive incoming connections."
msgstr ""

#. type: =item
#: ../rescue/virt-rescue.pod:298
msgid "making TCP connections"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:300
msgid ""
"The virt-rescue appliance needs to be small and so does not include many "
"network tools.  In particular there is no L<telnet(1)> command.  You can "
"make TCP connections from the shell using the magical "
"C</dev/tcp/E<lt>hostnameE<gt>/E<lt>portE<gt>> syntax:"
msgstr ""

#. type: verbatim
#: ../rescue/virt-rescue.pod:305
#, no-wrap
msgid ""
" exec 3<>/dev/tcp/redhat.com/80\n"
" echo \"GET /\" >&3\n"
" cat <&3\n"
"\n"
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:309
msgid "See L<bash(1)> for more details."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:315
msgid ""
"Several environment variables affect virt-rescue.  See "
"L<guestfs(3)/ENVIRONMENT VARIABLES> for the complete list."
msgstr ""

#. type: textblock
#: ../rescue/virt-rescue.pod:342
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-edit(1)>, "
"L<virt-filesystems(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:5
msgid "virt-resize - Resize a virtual machine disk"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:9
#, no-wrap
msgid ""
" virt-resize [--resize /dev/sdaN=[+/-]<size>[%]]\n"
"   [--expand /dev/sdaN] [--shrink /dev/sdaN]\n"
"   [--ignore /dev/sdaN] [--delete /dev/sdaN] [...] indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:15
msgid ""
"Virt-resize is a tool which can resize a virtual machine disk, making it "
"larger or smaller overall, and resizing or deleting any partitions contained "
"within."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:19
msgid ""
"Virt-resize B<cannot> resize disk images in-place.  Virt-resize B<should "
"not> be used on live virtual machines - for consistent results, shut the "
"virtual machine down before resizing it."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:23
msgid ""
"If you are not familiar with the associated tools: L<virt-filesystems(1)> "
"and L<virt-df(1)>, we recommend you go and read those manual pages first."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:33
msgid ""
"Copy C<olddisk> to C<newdisk>, extending one of the guest's partitions to "
"fill the extra 5GB of space."
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:36
#, no-wrap
msgid ""
" virt-filesystems --long -h --all -a olddisk\n"
" \n"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:38
#, no-wrap
msgid ""
" truncate -r olddisk newdisk\n"
" truncate -s +5G newdisk\n"
" \n"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:41
#, no-wrap
msgid ""
" # Note \"/dev/sda2\" is a partition inside the \"olddisk\" file.\n"
" virt-resize --expand /dev/sda2 olddisk newdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:46
msgid ""
"As above, but make the /boot partition 200MB bigger, while giving the "
"remaining space to /dev/sda2:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:49
#, no-wrap
msgid ""
" virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
"   olddisk newdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:54
msgid ""
"As in the first example, but expand a logical volume as the final step.  "
"This is what you would typically use for Linux guests that use LVM:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:58
#, no-wrap
msgid ""
" virt-resize --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root \\\n"
"   olddisk newdisk\n"
"\n"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:61
msgid "4."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:63
msgid ""
"As in the first example, but the output format will be qcow2 instead of a "
"raw disk:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:66
#, no-wrap
msgid ""
" qemu-img create -f qcow2 newdisk.qcow2 15G\n"
" virt-resize --expand /dev/sda2 olddisk newdisk.qcow2\n"
"\n"
msgstr ""

#. type: =head1
#: ../resize/virt-resize.pod:71
msgid "DETAILED USAGE"
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:73
msgid "EXPANDING A VIRTUAL MACHINE DISK"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:77
msgid "1. Shut down the virtual machine"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:79
msgid "2. Locate input disk image"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:81
msgid ""
"Locate the input disk image (ie. the file or device on the host containing "
"the guest's disk).  If the guest is managed by libvirt, you can use C<virsh "
"dumpxml> like this to find the disk image name:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:85
#, no-wrap
msgid ""
" # virsh dumpxml guestname | xpath /domain/devices/disk/source\n"
" Found 1 nodes:\n"
" -- NODE --\n"
" <source dev=\"/dev/vg/lv_guest\" />\n"
"\n"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:90
msgid "3. Look at current sizing"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:92
msgid "Use L<virt-filesystems(1)> to display the current partitions and sizes:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:95
#, no-wrap
msgid ""
" # virt-filesystems --long --parts --blkdevs -h -a /dev/vg/lv_guest\n"
" Name       Type       Size  Parent\n"
" /dev/sda1  partition  101M  /dev/sda\n"
" /dev/sda2  partition  7.9G  /dev/sda\n"
" /dev/sda   device     8.0G  -\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:101
msgid ""
"(This example is a virtual machine with an 8 GB disk which we would like to "
"expand up to 10 GB)."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:104
msgid "4. Create output disk"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:106
msgid ""
"Virt-resize cannot do in-place disk modifications.  You have to have space "
"to store the resized output disk."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:109
msgid "To store the resized disk image in a file, create a file of a suitable size:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:112
#, no-wrap
msgid ""
" # rm -f outdisk\n"
" # truncate -s 10G outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:115
msgid "Or use L<lvcreate(1)> to create a logical volume:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:117
#, no-wrap
msgid ""
" # lvcreate -L 10G -n lv_name vg_name\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:119
msgid "Or use L<virsh(1)> vol-create-as to create a libvirt storage volume:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:121
#, no-wrap
msgid ""
" # virsh pool-list\n"
" # virsh vol-create-as poolname newvol 10G\n"
"\n"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:124
msgid "5. Resize"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:126
msgid ""
"virt-resize takes two mandatory parameters, the input disk (eg. device or "
"file) and the output disk.  The output disk is the one created in the "
"previous step."
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:130
#, no-wrap
msgid ""
" # virt-resize indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:132
msgid ""
"This command just copies disk image C<indisk> to disk image C<outdisk> "
"I<without> resizing or changing any existing partitions.  If C<outdisk> is "
"larger, then an extra, empty partition is created at the end of the disk "
"covering the extra space.  If C<outdisk> is smaller, then it will give an "
"error."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:138
msgid ""
"More realistically you'd want to expand existing partitions in the disk "
"image by passing extra options (for the full list see the L</OPTIONS> "
"section below)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:142
msgid ""
"L</--expand> is the most useful option.  It expands the named partition "
"within the disk to fill any extra space:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:145
#, no-wrap
msgid ""
" # virt-resize --expand /dev/sda2 indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:147
msgid ""
"(In this case, an extra partition is I<not> created at the end of the disk, "
"because there will be no unused space)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:150
msgid ""
"L</--resize> is the other commonly used option.  The following would "
"increase the size of /dev/sda1 by 200M, and expand /dev/sda2 to fill the "
"rest of the available space:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:154
#, no-wrap
msgid ""
" # virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
"     indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:157
msgid ""
"If the expanded partition in the image contains a filesystem or LVM PV, then "
"if virt-resize knows how, it will resize the contents, the equivalent of "
"calling a command such as L<pvresize(8)>, L<resize2fs(8)>, L<ntfsresize(8)> "
"or L<btrfs(8)>.  However virt-resize does not know how to resize some "
"filesystems, so you would have to online resize them after booting the "
"guest."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:164
msgid "Other options are covered below."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:166
msgid "6. Test"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:168
msgid "Thoroughly test the new disk image I<before> discarding the old one."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:170
msgid "If you are using libvirt, edit the XML to point at the new disk:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:172
#, no-wrap
msgid ""
" # virsh edit guestname\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:174
msgid ""
"Change E<lt>source ...E<gt>, see "
"L<http://libvirt.org/formatdomain.html#elementsDisks>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:177
msgid "Then start up the domain with the new, resized disk:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:179
#, no-wrap
msgid ""
" # virsh start guestname\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:181
msgid ""
"and check that it still works.  See also the L</NOTES> section below for "
"additional information."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:184
msgid "7. Resize LVs etc inside the guest"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:186
msgid "(This can also be done offline using L<guestfish(1)>)"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:188
msgid ""
"Once the guest has booted you should see the new space available, at least "
"for filesystems that virt-resize knows how to resize, and for PVs.  The user "
"may need to resize LVs inside PVs, and also resize filesystem types that "
"virt-resize does not know how to expand."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:195
msgid "SHRINKING A VIRTUAL MACHINE DISK"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:197
msgid ""
"Shrinking is somewhat more complex than expanding, and only an overview is "
"given here."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:200
msgid ""
"Firstly virt-resize will not attempt to shrink any partition content (PVs, "
"filesystems).  The user has to shrink content before passing the disk image "
"to virt-resize, and virt-resize will check that the content has been shrunk "
"properly."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:205
msgid "(Shrinking can also be done offline using L<guestfish(1)>)"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:207
msgid ""
"After shrinking PVs and filesystems, shut down the guest, and proceed with "
"steps 3 and 4 above to allocate a new disk image."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:210
msgid "Then run virt-resize with any of the I<--shrink> and/or I<--resize> options."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:213
msgid "IGNORING OR DELETING PARTITIONS"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:215
msgid ""
"virt-resize also gives a convenient way to ignore or delete partitions when "
"copying from the input disk to the output disk.  Ignoring a partition speeds "
"up the copy where you don't care about the existing contents of a "
"partition.  Deleting a partition removes it completely, but note that it "
"also renumbers any partitions after the one which is deleted, which can "
"leave some guests unbootable."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:222
msgid "QCOW2 AND NON-SPARSE RAW FORMATS"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:224
msgid ""
"If the input disk is in qcow2 format, then you may prefer that the output is "
"in qcow2 format as well.  Alternately, virt-resize can convert the format on "
"the fly.  The output format is simply determined by the format of the empty "
"output container that you provide.  Thus to create qcow2 output, use:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:230
#, no-wrap
msgid ""
" qemu-img create [-c] -f qcow2 outdisk [size]\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:232
msgid "instead of the truncate command (use I<-c> for a compressed disk)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:234
msgid "Similarly, to get non-sparse raw output use:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:236
#, no-wrap
msgid ""
" fallocate -l size outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:238
msgid ""
"(on older systems that don't have the L<fallocate(1)> command use C<dd "
"if=/dev/zero of=outdisk bs=1M count=..>)"
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:241
msgid "LOGICAL PARTITIONS"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:243
msgid ""
"Logical partitions (a.k.a. C</dev/sda5+> on disks using DOS partition "
"tables) cannot be resized."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:246
msgid ""
"To understand what is going on, firstly one of the four partitions "
"C</dev/sda1-4> will have MBR partition type C<05> or C<0f>.  This is called "
"the B<extended partition>.  Use L<virt-filesystems(1)> to see the MBR "
"partition type."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:251
msgid "Logical partitions live inside the extended partition."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:253
msgid ""
"The extended partition can be expanded, but not shrunk (unless you force it, "
"which is not advisable).  When the extended partition is copied across, all "
"the logical partitions contained inside are copied over implicitly.  "
"Virt-resize does not look inside the extended partition, so it copies the "
"logical partitions blindly."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:259
msgid ""
"You cannot specify a logical partition (C</dev/sda5+>) at all on the command "
"line.  Doing so will give an error."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:268 ../sparsify/virt-sparsify.pod:100
msgid "Display help."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:270
msgid "B<--align-first auto>"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:272
msgid "B<--align-first never>"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:274
msgid "B<--align-first always>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:276
msgid ""
"Align the first partition for improved performance (see also the "
"I<--alignment> option)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:279
msgid ""
"The default is I<--align-first auto> which only aligns the first partition "
"if it is safe to do so.  That is, only when we know how to fix the "
"bootloader automatically, and at the moment that can only be done for "
"Windows guests."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:284
msgid ""
"I<--align-first never> means we never move the first partition.  This is the "
"safest option.  Try this if the guest does not boot after resizing."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:288
msgid ""
"I<--align-first always> means we always align the first partition (if it "
"needs to be aligned).  For some guests this will break the bootloader, "
"making the guest unbootable."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:292
msgid "B<--alignment N>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:294
msgid ""
"Set the alignment of partitions to C<N> sectors.  The default in virt-resize "
"E<lt> 1.13.19 was 64 sectors, and after that is 128 sectors."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:298
msgid ""
"Assuming 512 byte sector size inside the guest, here are some suitable "
"values for this:"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:303
msgid "I<--alignment 1> (512 bytes)"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:305
msgid ""
"The partitions would be packed together as closely as possible, but would be "
"completely unaligned.  In some cases this can cause very poor performance.  "
"See L<virt-alignment-scan(1)> for further details."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:309
msgid "I<--alignment 8> (4K)"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:311
msgid ""
"This would be the minimum acceptable alignment for reasonable performance on "
"modern hosts."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:314
msgid "I<--alignment 128> (64K)"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:316
msgid ""
"This alignment provides good performance when the host is using high end "
"network storage."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:319
msgid "I<--alignment 2048> (1M)"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:321
msgid ""
"This is the standard alignment used by all newly installed guests since "
"around 2008."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:326
msgid "B<-d>"
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:328 ../tools/virt-make-fs.pl:179 ../tools/virt-win-reg.pl:120
msgid "B<--debug>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:330 ../tools/virt-win-reg.pl:122
msgid "Enable debugging messages."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:332 ../sparsify/virt-sparsify.pod:126
msgid "B<--debug-gc>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:334
msgid ""
"Debug garbage collection and memory allocation.  This is only useful when "
"debugging memory problems in virt-resize or the OCaml libguestfs bindings."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:338
msgid "B<--delete part>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:340
msgid ""
"Delete the named partition.  It would be more accurate to describe this as "
"\"don't copy it over\", since virt-resize doesn't do in-place changes and "
"the original disk image is left intact."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:344
msgid ""
"Note that when you delete a partition, then anything contained in the "
"partition is also deleted.  Furthermore, this causes any partitions that "
"come after to be I<renumbered>, which can easily make your guest unbootable."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:349 ../resize/virt-resize.pod:410 ../resize/virt-resize.pod:537 ../sparsify/virt-sparsify.pod:152
msgid "You can give this option multiple times."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:351
msgid "B<--expand part>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:353
msgid ""
"Expand the named partition so it uses up all extra space (space left over "
"after any other resize changes that you request have been done)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:356
msgid ""
"If virt-resize knows how, it will expand the direct content of the "
"partition.  For example, if the partition is an LVM PV, it will expand the "
"PV to fit (like calling L<pvresize(8)>).  Virt-resize leaves any other "
"content it doesn't know about alone."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:361
msgid "Currently virt-resize can resize:"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:367
msgid "ext2, ext3 and ext4 filesystems."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:371
msgid "NTFS filesystems, if libguestfs was compiled with support for NTFS."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:373
msgid ""
"The filesystem must have been shut down consistently last time it was used.  "
"Additionally, L<ntfsresize(8)> marks the resized filesystem as requiring a "
"consistency check, so at the first boot after resizing Windows will check "
"the disk."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:380
msgid ""
"LVM PVs (physical volumes).  virt-resize does not usually resize anything "
"inside the PV, but see the I<--LV-expand> option.  The user could also "
"resize LVs as desired after boot."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:386
msgid "Btrfs filesystems, if libguestfs was compiled with support for btrfs."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:390 ../resize/virt-resize.pod:565
msgid "Note that you cannot use I<--expand> and I<--shrink> together."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:392 ../sparsify/virt-sparsify.pod:132 ../tools/virt-list-filesystems.pl:93 ../tools/virt-list-partitions.pl:94 ../tools/virt-tar.pl:141 ../tools/virt-win-reg.pl:142
msgid "B<--format> raw"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:394 ../sparsify/virt-sparsify.pod:136
msgid ""
"Specify the format of the input disk image.  If this flag is not given then "
"it is auto-detected from the image itself."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:400
msgid ""
"Note that this option I<does not> affect the output format.  See L</QCOW2 "
"AND NON-SPARSE RAW FORMATS>."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:403
msgid "B<--ignore part>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:405
msgid ""
"Ignore the named partition.  Effectively this means the partition is "
"allocated on the destination disk, but the content is not copied across from "
"the source disk.  The content of the partition will be blank (all zero "
"bytes)."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:412
msgid "B<--LV-expand logvol>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:414
msgid ""
"This takes the logical volume and, as a final step, expands it to fill all "
"the space available in its volume group.  A typical usage, assuming a Linux "
"guest with a single PV C</dev/sda2> and a root device called "
"C</dev/vg_guest/lv_root> would be:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:419
#, no-wrap
msgid ""
" virt-resize indisk outdisk \\\n"
"   --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:422
msgid ""
"This would first expand the partition (and PV), and then expand the root "
"device to fill the extra space in the PV."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:425
msgid ""
"The contents of the LV are also resized if virt-resize knows how to do "
"that.  You can stop virt-resize from trying to expand the content by using "
"the option I<--no-expand-content>."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:429
msgid "Use L<virt-filesystems(1)> to list the filesystems in the guest."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:431
msgid ""
"You can give this option multiple times, I<but> it doesn't make sense to do "
"this unless the logical volumes you specify are all in different volume "
"groups."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:435 ../sparsify/virt-sparsify.pod:154
msgid "B<--machine-readable>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:437 ../sparsify/virt-sparsify.pod:156
msgid ""
"This option is used to make the output more machine friendly when being "
"parsed by other programs.  See L</MACHINE READABLE OUTPUT> below."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:443
msgid "B<--dryrun>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:445
msgid "Print a summary of what would be done, but don't do anything."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:447
msgid "B<--no-copy-boot-loader>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:449
msgid ""
"By default, virt-resize copies over some sectors at the start of the disk "
"(up to the beginning of the first partition).  Commonly these sectors "
"contain the Master Boot Record (MBR) and the boot loader, and are required "
"in order for the guest to boot correctly."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:454
msgid ""
"If you specify this flag, then this initial copy is not done.  You may need "
"to reinstall the boot loader in this case."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:457
msgid "B<--no-extra-partition>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:459
msgid ""
"By default, virt-resize creates an extra partition if there is any extra, "
"unused space after all resizing has happened.  Use this option to prevent "
"the extra partition from being created.  If you do this then the extra space "
"will be inaccessible until you run fdisk, parted, or some other partitioning "
"tool in the guest."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:465
msgid ""
"Note that if the surplus space is smaller than 10 MB, no extra partition "
"will be created."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:468
msgid "B<--no-expand-content>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:470
msgid ""
"By default, virt-resize will try to expand the direct contents of "
"partitions, if it knows how (see I<--expand> option above)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:473
msgid ""
"If you give the I<--no-expand-content> option then virt-resize will not "
"attempt this."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:476
msgid "B<--ntfsresize-force>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:478
msgid ""
"Pass the I<--force> option to L<ntfsresize(8)>, allowing resizing even if "
"the NTFS disk is marked as needing a consistency check.  You have to use "
"this option if you want to resize a Windows guest multiple times without "
"booting into Windows between each resize."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:484
msgid "B<--output-format> raw"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:486
msgid ""
"Specify the format of the output disk image.  If this flag is not given then "
"it is auto-detected from the image itself."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:492
msgid ""
"Note that this option I<does not create> the output format.  This option "
"just tells libguestfs what it is so it doesn't try to guess it.  You still "
"need to create the output disk with the right format.  See L</QCOW2 AND "
"NON-SPARSE RAW FORMATS>."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:501
msgid "Don't print the summary."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:503
msgid "B<--resize part=size>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:505
msgid ""
"Resize the named partition (expanding or shrinking it) so that it has the "
"given size."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:508
msgid ""
"C<size> can be expressed as an absolute number followed by b/K/M/G to mean "
"bytes, Kilobytes, Megabytes, or Gigabytes; or as a percentage of the current "
"size; or as a relative number or percentage.  For example:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:514
#, no-wrap
msgid ""
" --resize /dev/sda2=10G\n"
"\n"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:516
#, no-wrap
msgid ""
" --resize /dev/sda4=90%\n"
"\n"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:518
#, no-wrap
msgid ""
" --resize /dev/sda2=+1G\n"
"\n"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:520
#, no-wrap
msgid ""
" --resize /dev/sda2=-200M\n"
"\n"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:522
#, no-wrap
msgid ""
" --resize /dev/sda1=+128K\n"
"\n"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:524
#, no-wrap
msgid ""
" --resize /dev/sda1=+10%\n"
"\n"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:526
#, no-wrap
msgid ""
" --resize /dev/sda1=-10%\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:528
msgid ""
"You can increase the size of any partition.  Virt-resize will expand the "
"direct content of the partition if it knows how (see I<--expand> below)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:532
msgid ""
"You can only I<decrease> the size of partitions that contain filesystems or "
"PVs which have already been shrunk.  Virt-resize will check this has been "
"done before proceeding, or else will print an error (see also "
"I<--resize-force>)."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:539
msgid "B<--resize-force part=size>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:541
msgid ""
"This is the same as I<--resize> except that it will let you decrease the "
"size of any partition.  Generally this means you will lose any data which "
"was at the end of the partition you shrink, but you may not care about that "
"(eg. if shrinking an unused partition, or if you can easily recreate it such "
"as a swap partition)."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:547
msgid "See also the I<--ignore> option."
msgstr ""

#. type: =item
#: ../resize/virt-resize.pod:549
msgid "B<--shrink part>"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:551
msgid ""
"Shrink the named partition until the overall disk image fits in the "
"destination.  The named partition B<must> contain a filesystem or PV which "
"has already been shrunk using another tool (eg. L<guestfish(1)> or other "
"online tools).  Virt-resize will check this and give an error if it has not "
"been done."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:557
msgid ""
"The amount by which the overall disk must be shrunk (after carrying out all "
"other operations requested by the user) is called the \"deficit\".  For "
"example, a straight copy (assume no other operations)  from a 5GB disk image "
"to a 4GB disk image results in a 1GB deficit.  In this case, virt-resize "
"would give an error unless the user specified a partition to shrink and that "
"partition had more than a gigabyte of free space."
msgstr ""

#. type: =head1
#: ../resize/virt-resize.pod:575 ../sparsify/virt-sparsify.pod:204
msgid "MACHINE READABLE OUTPUT"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:577
msgid ""
"The I<--machine-readable> option can be used to make the output more machine "
"friendly, which is useful when calling virt-resize from other programs, GUIs "
"etc."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:581 ../sparsify/virt-sparsify.pod:210
msgid "There are two ways to use this option."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:583
msgid ""
"Firstly use the option on its own to query the capabilities of the "
"virt-resize binary.  Typical output looks like this:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:586
#, no-wrap
msgid ""
" $ virt-resize --machine-readable\n"
" virt-resize\n"
" ntfsresize-force\n"
" 32bitok\n"
" ntfs\n"
" btrfs\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:593 ../sparsify/virt-sparsify.pod:220
msgid ""
"A list of features is printed, one per line, and the program exits with "
"status 0."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:596 ../sparsify/virt-sparsify.pod:223
msgid ""
"Secondly use the option in conjunction with other options to make the "
"regular program output more machine friendly."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:599 ../sparsify/virt-sparsify.pod:226
msgid "At the moment this means:"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:605 ../sparsify/virt-sparsify.pod:232
msgid ""
"Progress bar messages can be parsed from stdout by looking for this regular "
"expression:"
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:608 ../sparsify/virt-sparsify.pod:235
#, no-wrap
msgid ""
" ^[0-9]+/[0-9]+$\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:612 ../sparsify/virt-sparsify.pod:239
msgid ""
"The calling program should treat messages sent to stdout (except for "
"progress bar messages) as status messages.  They can be logged and/or "
"displayed to the user."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:618
msgid ""
"The calling program should treat messages sent to stderr as error messages.  "
"In addition, virt-resize exits with a non-zero status code if there was a "
"fatal error."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:624
msgid ""
"Versions of the program prior to 1.13.9 did not support the "
"I<--machine-readable> option and will return an error."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:629
msgid "\"Partition 1 does not end on cylinder boundary.\""
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:631
msgid ""
"Virt-resize aligns partitions to multiples of 128 sectors (see the "
"I<--alignment> parameter).  Usually this means the partitions will not be "
"aligned to the ancient CHS geometry.  However CHS geometry is meaningless "
"for disks manufactured since the early 1990s, and doubly so for virtual hard "
"drives.  Alignment of partitions to cylinders is not required by any modern "
"operating system."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:638
msgid "RESIZING WINDOWS VIRTUAL MACHINES"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:640
msgid ""
"In Windows Vista and later versions, Microsoft switched to using a separate "
"boot partition.  In these VMs, typically C</dev/sda1> is the boot partition "
"and C</dev/sda2> is the main (C:) drive.  Resizing the first (boot) "
"partition causes the bootloader to fail with C<0xC0000225> error.  Resizing "
"the second partition (ie. C: drive)  should work."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:647
msgid ""
"Windows may initiate a lengthy \"chkdsk\" on first boot after a resize, if "
"NTFS partitions have been expanded.  This is just a safety check and (unless "
"it find errors) is nothing to worry about."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:651
msgid "GUEST BOOT STUCK AT \"GRUB\""
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:653
msgid ""
"If a Linux guest does not boot after resizing, and the boot is stuck after "
"printing C<GRUB> on the console, try reinstalling grub."
msgstr ""

#. type: verbatim
#: ../resize/virt-resize.pod:656
#, no-wrap
msgid ""
" guestfish -i -a newdisk\n"
" ><fs> cat /boot/grub/device.map\n"
" # check the contents of this file are sensible or\n"
" # edit the file if necessary\n"
" ><fs> grub-install / /dev/vda\n"
" ><fs> exit\n"
"\n"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:663
msgid ""
"For more flexible guest reconfiguration, including if you need to specify "
"other parameters to grub-install, use L<virt-rescue(1)>."
msgstr ""

#. type: =head2
#: ../resize/virt-resize.pod:666
msgid "WINDOWS UNMOUNTABLE_BOOT_VOLUME BSOD"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:668
msgid ""
"After sysprepping a Windows guest and then resizing it with virt-resize, you "
"may see the guest fail to boot with an C<UNMOUNTABLE_BOOT_VOLUME> BSOD.  "
"This error is caused by having C<ExtendOemPartition=1> in the sysprep.inf "
"file.  Removing this line before sysprepping should fix the problem."
msgstr ""

#. type: =head1
#: ../resize/virt-resize.pod:674
msgid "ALTERNATIVE TOOLS"
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:676
msgid ""
"There are several proprietary tools for resizing partitions.  We won't "
"mention any here."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:679
msgid ""
"L<parted(8)> and its graphical shell gparted can do some types of resizing "
"operations on disk images.  They can resize and move partitions, but I don't "
"think they can do anything with the contents, and they certainly don't "
"understand LVM."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:684
msgid ""
"L<guestfish(1)> can do everything that virt-resize can do and a lot more, "
"but at a much lower level.  You will probably end up hand-calculating sector "
"offsets, which is something that virt-resize was designed to avoid.  If you "
"want to see the guestfish-equivalent commands that virt-resize runs, use the "
"I<--debug> flag."
msgstr ""

#. type: textblock
#: ../resize/virt-resize.pod:704
msgid ""
"L<virt-filesystems(1)>, L<virt-df(1)>, L<guestfs(3)>, L<guestfish(1)>, "
"L<lvm(8)>, L<pvresize(8)>, L<lvresize(8)>, L<resize2fs(8)>, "
"L<ntfsresize(8)>, L<btrfs(8)>, L<virsh(1)>, L<parted(8)>, L<truncate(1)>, "
"L<fallocate(1)>, L<grub(8)>, L<grub-install(8)>, L<virt-rescue(1)>, "
"L<virt-sparsify(1)>, L<virt-alignment-scan(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../ruby/examples/guestfs-ruby.pod:5
msgid "guestfs-ruby - How to use libguestfs from Ruby"
msgstr ""

#. type: verbatim
#: ../ruby/examples/guestfs-ruby.pod:9
#, no-wrap
msgid ""
" require 'guestfs'\n"
" g = Guestfs::Guestfs.new()\n"
" g.add_drive_opts(\"disk.img\",\n"
"                  :readonly => 1, :format => \"raw\")\n"
" g.launch()\n"
"\n"
msgstr ""

#. type: textblock
#: ../ruby/examples/guestfs-ruby.pod:17
msgid ""
"This manual page documents how to call libguestfs from the Ruby programming "
"language.  This page just documents the differences from the C API and gives "
"some examples.  If you are not familiar with using libguestfs, you also need "
"to read L<guestfs(3)>."
msgstr ""

#. type: textblock
#: ../ruby/examples/guestfs-ruby.pod:24
msgid ""
"Errors from libguestfs functions are mapped into the C<Error> exception.  "
"This has a single parameter which is the error message (a string)."
msgstr ""

#. type: textblock
#: ../ruby/examples/guestfs-ruby.pod:38
msgid ""
"L<guestfs(3)>, L<guestfs-examples(3)>, L<guestfs-erlang(3)>, "
"L<guestfs-java(3)>, L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, "
"L<guestfs-python(3)>, L<guestfs-recipes(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:5
msgid "virt-sparsify - Make a virtual machine disk sparse"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:9
#, no-wrap
msgid ""
" virt-sparsify [--options] indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:13
msgid ""
"Virt-sparsify is a tool which can make a virtual machine disk (or any disk "
"image) sparse a.k.a. thin-provisioned.  This means that free space within "
"the disk image can be converted back to free space on the host."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:18
msgid ""
"Virt-sparsify can locate and sparsify free space in most filesystems "
"(eg. ext2/3/4, btrfs, NTFS, etc.), and also in LVM physical volumes."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:21
msgid ""
"Virt-sparsify can also convert between some disk formats, for example "
"converting a raw disk image to a thin-provisioned qcow2 image."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:24
msgid ""
"Virt-sparsify can operate on any disk image, not just ones from virtual "
"machines.  If a virtual machine has more than one attached disk, you must "
"sparsify each one separately."
msgstr ""

#. type: =head2
#: ../sparsify/virt-sparsify.pod:28
msgid "IMPORTANT LIMITATIONS"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:34
msgid ""
"Virt-sparsify does not do in-place modifications.  It copies from a source "
"image to a destination image, leaving the source unchanged.  I<Check that "
"the sparsification was successful before deleting the source image>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:41
msgid "The virtual machine I<must be shut down> before using this tool."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:45
msgid ""
"Virt-sparsify may require up to 2x the virtual size of the source disk image "
"(1 temporary copy + 1 destination image).  This is in the worst case and "
"usually much less space is required."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:51
msgid "Virt-sparsify cannot resize disk images.  To do that, use L<virt-resize(1)>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:56
msgid ""
"Virt-sparsify cannot handle encrypted disks.  Libguestfs supports encrypted "
"disks, but encrypted disks themselves cannot be sparsified."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:61
msgid ""
"Virt-sparsify cannot yet sparsify the space between partitions.  Note that "
"this space is often used for critical items like bootloaders so it's not "
"really unused."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:67
msgid ""
"You may also want to read the manual pages for the associated tools "
"L<virt-filesystems(1)> and L<virt-df(1)> before starting."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:72
msgid "Typical usage is:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:74
#, no-wrap
msgid ""
" virt-sparsify indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:76
msgid ""
"which copies C<indisk> to C<outdisk>, making the output sparse.  C<outdisk> "
"is created, or overwritten if it already exists.  The format of the input "
"disk is detected (eg. qcow2) and the same format is used for the output "
"disk."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:81
msgid "To convert between formats, use the I<--convert> option:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:83
#, no-wrap
msgid ""
" virt-sparsify disk.raw --convert qcow2 disk.qcow2\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:85
msgid ""
"Virt-sparsify tries to zero and sparsify free space on every filesystem it "
"can find within the source disk image.  You can get it to ignore (don't zero "
"free space on) certain filesystems by doing:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:89
#, no-wrap
msgid ""
" virt-sparsify --ignore /dev/sda1 indisk outdisk\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:91
msgid "See L<virt-filesystems(1)> to get a list of filesystems within a disk image."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:102
msgid "B<--compress>"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:104
msgid ""
"Compress the output file.  This I<only> works if the output format is "
"C<qcow2>."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:107
msgid "B<--convert> raw"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:109
msgid "B<--convert> qcow2"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:111
msgid "B<--convert> [other formats]"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:113
msgid ""
"Use C<output-format> as the format for the destination image.  If this is "
"not specified, then the input format is used."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:116
msgid "Supported and known-working output formats are: C<raw>, C<qcow2>, C<vdi>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:118
msgid ""
"You can also use any format supported by the L<qemu-img(1)> program, "
"eg. C<vmdk>, but support for other formats is reliant on qemu."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:121
msgid ""
"Specifying the I<--convert> option is usually a good idea, because then "
"virt-sparsify doesn't need to try to guess the input format."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:124
msgid "For fine-tuning the output format, see: I<--compress>, I<-o>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:128
msgid ""
"Debug garbage collection and memory allocation.  This is only useful when "
"debugging memory problems in virt-sparsify or the OCaml libguestfs bindings."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:134
msgid "B<--format> qcow2"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:142
msgid "B<--ignore> filesystem"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:144
msgid "B<--ignore> volgroup"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:146
msgid ""
"Ignore the named filesystem.  Free space on the filesystem will not be "
"zeroed, but existing blocks of zeroes will still be sparsified."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:149
msgid ""
"In the second form, this ignores the named volume group.  Use the volume "
"group name without the C</dev/> prefix, eg. I<--ignore vg_foo>"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:160
msgid "B<-o> option[,option,...]"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:162
msgid ""
"Pass I<-o> option(s) to the L<qemu-img(1)> command to fine-tune the output "
"format.  Options available depend on the output format (see I<--convert>) "
"and the installed version of the qemu-img program."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:166
msgid ""
"You should use I<-o> at most once.  To pass multiple options, separate them "
"with commas, eg:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:169
#, no-wrap
msgid ""
" virt-sparsify --convert qcow2 \\\n"
"   -o cluster_size=512,preallocation=metadata ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:176
msgid "This disables progress bars and other unnecessary output."
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:194
msgid "B<--zero> partition"
msgstr ""

#. type: =item
#: ../sparsify/virt-sparsify.pod:196
msgid "B<--zero> logvol"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:198
msgid ""
"Zero the contents of the named partition or logical volume in the guest.  "
"All data on the device is lost, but sparsification is excellent! You can "
"give this option multiple times."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:206
msgid ""
"The I<--machine-readable> option can be used to make the output more machine "
"friendly, which is useful when calling virt-sparsify from other programs, "
"GUIs etc."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:212
msgid ""
"Firstly use the option on its own to query the capabilities of the "
"virt-sparsify binary.  Typical output looks like this:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:215
#, no-wrap
msgid ""
" $ virt-sparsify --machine-readable\n"
" virt-sparsify\n"
" ntfs\n"
" btrfs\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:245
msgid ""
"The calling program should treat messages sent to stderr as error messages.  "
"In addition, virt-sparsify exits with a non-zero status code if there was a "
"fatal error."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:251
msgid ""
"All versions of virt-sparsify have supported the I<--machine-readable> "
"option."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:265
msgid ""
"Location of the temporary directory used for the potentially large temporary "
"overlay file."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:268
msgid ""
"You should ensure there is enough free space in the worst case for a full "
"copy of the source disk (I<virtual> size), or else set C<$TMPDIR> to point "
"to another directory that has enough space."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:272
msgid "This defaults to C</tmp>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:274
msgid ""
"Note that if C<$TMPDIR> is a tmpfs (eg. if C</tmp> is on tmpfs, or if you "
"use C<TMPDIR=/dev/shm>), tmpfs defaults to a maximum size of I<half> of "
"physical RAM.  If virt-sparsify exceeds this, it will hang.  The solution is "
"either to use a real disk, or to increase the maximum size of the tmpfs "
"mountpoint, eg:"
msgstr ""

#. type: verbatim
#: ../sparsify/virt-sparsify.pod:280
#, no-wrap
msgid ""
" mount -o remount,size=10G /tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:284
msgid "For other environment variables, see L<guestfs(3)/ENVIRONMENT VARIABLES>."
msgstr ""

#. type: textblock
#: ../sparsify/virt-sparsify.pod:288
msgid ""
"L<virt-filesystems(1)>, L<virt-df(1)>, L<virt-resize(1)>, L<virt-rescue(1)>, "
"L<guestfs(3)>, L<guestfish(1)>, L<truncate(1)>, L<fallocate(1)>, "
"L<qemu-img(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1
msgid "guestfs_add_cdrom"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3
#, no-wrap
msgid ""
" int\n"
" guestfs_add_cdrom (guestfs_h *g,\n"
"                    const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7 ../src/guestfs-actions.pod:302 ../src/guestfs-actions.pod:323
msgid ""
"I<This function is deprecated.> In new code, use the "
"L</guestfs_add_drive_opts> call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:24
msgid ""
"This call checks for the existence of C<filename>.  This stops you from "
"specifying other types of drive which are supported by qemu such as C<nbd:> "
"and C<http:> URLs.  To specify those, use the general C<guestfs_config> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:31
msgid ""
"If you just want to add an ISO file (often you use this as an efficient way "
"to transfer large files into the guest), then you should probably use "
"C<guestfs_add_drive_ro> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:37 ../src/guestfs-actions.pod:187 ../src/guestfs-actions.pod:254 ../src/guestfs-actions.pod:291 ../src/guestfs-actions.pod:312 ../src/guestfs-actions.pod:333 ../src/guestfs-actions.pod:346 ../src/guestfs-actions.pod:360 ../src/guestfs-actions.pod:480 ../src/guestfs-actions.pod:500 ../src/guestfs-actions.pod:514 ../src/guestfs-actions.pod:559 ../src/guestfs-actions.pod:587 ../src/guestfs-actions.pod:605 ../src/guestfs-actions.pod:672 ../src/guestfs-actions.pod:705 ../src/guestfs-actions.pod:719 ../src/guestfs-actions.pod:775 ../src/guestfs-actions.pod:874 ../src/guestfs-actions.pod:892 ../src/guestfs-actions.pod:906 ../src/guestfs-actions.pod:920 ../src/guestfs-actions.pod:934 ../src/guestfs-actions.pod:948 ../src/guestfs-actions.pod:961 ../src/guestfs-actions.pod:998 ../src/guestfs-actions.pod:1032 ../src/guestfs-actions.pod:1054 ../src/guestfs-actions.pod:1090 ../src/guestfs-actions.pod:1103 ../src/guestfs-actions.pod:1115 ../src/guestfs-actions.pod:1145 ../src/guestfs-actions.pod:1160 ../src/guestfs-actions.pod:1321 ../src/guestfs-actions.pod:1341 ../src/guestfs-actions.pod:1359 ../src/guestfs-actions.pod:1449 ../src/guestfs-actions.pod:1508 ../src/guestfs-actions.pod:1554 ../src/guestfs-actions.pod:1594 ../src/guestfs-actions.pod:1647 ../src/guestfs-actions.pod:1700 ../src/guestfs-actions.pod:1758 ../src/guestfs-actions.pod:1812 ../src/guestfs-actions.pod:1831 ../src/guestfs-actions.pod:1845 ../src/guestfs-actions.pod:1873 ../src/guestfs-actions.pod:1943 ../src/guestfs-actions.pod:1974 ../src/guestfs-actions.pod:1999 ../src/guestfs-actions.pod:2065 ../src/guestfs-actions.pod:2108 ../src/guestfs-actions.pod:2221 ../src/guestfs-actions.pod:2248 ../src/guestfs-actions.pod:2463 ../src/guestfs-actions.pod:2485 ../src/guestfs-actions.pod:2572 ../src/guestfs-actions.pod:3223 ../src/guestfs-actions.pod:3367 ../src/guestfs-actions.pod:3426 ../src/guestfs-actions.pod:3461 ../src/guestfs-actions.pod:4565 ../src/guestfs-actions.pod:4580 ../src/guestfs-actions.pod:4605 ../src/guestfs-actions.pod:4823 ../src/guestfs-actions.pod:4837 ../src/guestfs-actions.pod:4850 ../src/guestfs-actions.pod:4864 ../src/guestfs-actions.pod:4879 ../src/guestfs-actions.pod:4915 ../src/guestfs-actions.pod:4987 ../src/guestfs-actions.pod:5007 ../src/guestfs-actions.pod:5024 ../src/guestfs-actions.pod:5044 ../src/guestfs-actions.pod:5064 ../src/guestfs-actions.pod:5099 ../src/guestfs-actions.pod:5118 ../src/guestfs-actions.pod:5137 ../src/guestfs-actions.pod:5154 ../src/guestfs-actions.pod:5189 ../src/guestfs-actions.pod:5201 ../src/guestfs-actions.pod:5234 ../src/guestfs-actions.pod:5250 ../src/guestfs-actions.pod:5263 ../src/guestfs-actions.pod:5278 ../src/guestfs-actions.pod:5295 ../src/guestfs-actions.pod:5453 ../src/guestfs-actions.pod:5589 ../src/guestfs-actions.pod:5601 ../src/guestfs-actions.pod:5621 ../src/guestfs-actions.pod:5634 ../src/guestfs-actions.pod:5685 ../src/guestfs-actions.pod:5703 ../src/guestfs-actions.pod:5721 ../src/guestfs-actions.pod:5737 ../src/guestfs-actions.pod:5751 ../src/guestfs-actions.pod:5765 ../src/guestfs-actions.pod:5782 ../src/guestfs-actions.pod:5797 ../src/guestfs-actions.pod:5824 ../src/guestfs-actions.pod:5857 ../src/guestfs-actions.pod:5942 ../src/guestfs-actions.pod:6015 ../src/guestfs-actions.pod:6046 ../src/guestfs-actions.pod:6065 ../src/guestfs-actions.pod:6084 ../src/guestfs-actions.pod:6096 ../src/guestfs-actions.pod:6113 ../src/guestfs-actions.pod:6126 ../src/guestfs-actions.pod:6141 ../src/guestfs-actions.pod:6156 ../src/guestfs-actions.pod:6188 ../src/guestfs-actions.pod:6214 ../src/guestfs-actions.pod:6283 ../src/guestfs-actions.pod:6332 ../src/guestfs-actions.pod:6347 ../src/guestfs-actions.pod:6367 ../src/guestfs-actions.pod:6381 ../src/guestfs-actions.pod:6398 ../src/guestfs-actions.pod:6447 ../src/guestfs-actions.pod:6485 ../src/guestfs-actions.pod:6523 ../src/guestfs-actions.pod:6575 ../src/guestfs-actions.pod:6627 ../src/guestfs-actions.pod:6674 ../src/guestfs-actions.pod:6717 ../src/guestfs-actions.pod:6745 ../src/guestfs-actions.pod:6762 ../src/guestfs-actions.pod:6780 ../src/guestfs-actions.pod:6917 ../src/guestfs-actions.pod:6974 ../src/guestfs-actions.pod:6996 ../src/guestfs-actions.pod:7014 ../src/guestfs-actions.pod:7066 ../src/guestfs-actions.pod:7132 ../src/guestfs-actions.pod:7149 ../src/guestfs-actions.pod:7162 ../src/guestfs-actions.pod:7176 ../src/guestfs-actions.pod:7465 ../src/guestfs-actions.pod:7480 ../src/guestfs-actions.pod:7501 ../src/guestfs-actions.pod:7517 ../src/guestfs-actions.pod:7529 ../src/guestfs-actions.pod:7543 ../src/guestfs-actions.pod:7555 ../src/guestfs-actions.pod:7569 ../src/guestfs-actions.pod:7585 ../src/guestfs-actions.pod:7603 ../src/guestfs-actions.pod:7622 ../src/guestfs-actions.pod:7641 ../src/guestfs-actions.pod:7671 ../src/guestfs-actions.pod:7689 ../src/guestfs-actions.pod:7712 ../src/guestfs-actions.pod:7751 ../src/guestfs-actions.pod:7790 ../src/guestfs-actions.pod:7815 ../src/guestfs-actions.pod:7834 ../src/guestfs-actions.pod:7856 ../src/guestfs-actions.pod:7877 ../src/guestfs-actions.pod:7896 ../src/guestfs-actions.pod:7913 ../src/guestfs-actions.pod:7934 ../src/guestfs-actions.pod:7962 ../src/guestfs-actions.pod:7986 ../src/guestfs-actions.pod:8005 ../src/guestfs-actions.pod:8021 ../src/guestfs-actions.pod:8045 ../src/guestfs-actions.pod:8064 ../src/guestfs-actions.pod:8079 ../src/guestfs-actions.pod:8098 ../src/guestfs-actions.pod:8142 ../src/guestfs-actions.pod:8169 ../src/guestfs-actions.pod:8199 ../src/guestfs-actions.pod:8311 ../src/guestfs-actions.pod:8432 ../src/guestfs-actions.pod:8444 ../src/guestfs-actions.pod:8457 ../src/guestfs-actions.pod:8470 ../src/guestfs-actions.pod:8492 ../src/guestfs-actions.pod:8505 ../src/guestfs-actions.pod:8518 ../src/guestfs-actions.pod:8531 ../src/guestfs-actions.pod:8546 ../src/guestfs-actions.pod:8605 ../src/guestfs-actions.pod:8622 ../src/guestfs-actions.pod:8638 ../src/guestfs-actions.pod:8654 ../src/guestfs-actions.pod:8671 ../src/guestfs-actions.pod:8684 ../src/guestfs-actions.pod:8704 ../src/guestfs-actions.pod:8804 ../src/guestfs-actions.pod:8862 ../src/guestfs-actions.pod:8876 ../src/guestfs-actions.pod:8917 ../src/guestfs-actions.pod:8930 ../src/guestfs-actions.pod:8952 ../src/guestfs-actions.pod:8990 ../src/guestfs-actions.pod:9024 ../src/guestfs-actions.pod:9060 ../src/guestfs-actions.pod:9176 ../src/guestfs-actions.pod:9191 ../src/guestfs-actions.pod:9205 ../src/guestfs-actions.pod:9279 ../src/guestfs-actions.pod:9292 ../src/guestfs-actions.pod:9337 ../src/guestfs-actions.pod:9377 ../src/guestfs-actions.pod:9435 ../src/guestfs-actions.pod:9452 ../src/guestfs-actions.pod:9472 ../src/guestfs-actions.pod:9505 ../src/guestfs-actions.pod:9569 ../src/guestfs-actions.pod:9592 ../src/guestfs-actions.pod:9616 ../src/guestfs-actions.pod:9642
msgid "This function returns 0 on success or -1 on error."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:39 ../src/guestfs-actions.pod:189 ../src/guestfs-actions.pod:1556 ../src/guestfs-actions.pod:2686 ../src/guestfs-actions.pod:2923 ../src/guestfs-actions.pod:3048 ../src/guestfs-actions.pod:4567 ../src/guestfs-actions.pod:4587 ../src/guestfs-actions.pod:6190 ../src/guestfs-actions.pod:7691 ../src/guestfs-actions.pod:7915 ../src/guestfs-actions.pod:8066 ../src/guestfs-actions.pod:8548 ../src/guestfs-actions.pod:8673 ../src/guestfs-actions.pod:9379
msgid "(Added in 0.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:41
msgid "guestfs_add_domain"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:43
#, no-wrap
msgid ""
" int\n"
" guestfs_add_domain (guestfs_h *g,\n"
"                     const char *dom,\n"
"                     ...);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:48 ../src/guestfs-actions.pod:198 ../src/guestfs-actions.pod:972 ../src/guestfs-actions.pod:1043 ../src/guestfs-actions.pod:1436 ../src/guestfs-actions.pod:1488 ../src/guestfs-actions.pod:1566 ../src/guestfs-actions.pod:1635 ../src/guestfs-actions.pod:1688 ../src/guestfs-actions.pod:1741 ../src/guestfs-actions.pod:2035 ../src/guestfs-actions.pod:3730 ../src/guestfs-actions.pod:5388 ../src/guestfs-actions.pod:5835 ../src/guestfs-actions.pod:5891 ../src/guestfs-actions.pod:6200 ../src/guestfs-actions.pod:6249 ../src/guestfs-actions.pod:6497 ../src/guestfs-actions.pod:6558 ../src/guestfs-actions.pod:6638 ../src/guestfs-actions.pod:7724 ../src/guestfs-actions.pod:8715 ../src/guestfs-actions.pod:8940
msgid ""
"You may supply a list of optional arguments to this call.  Use zero or more "
"of the following pairs of parameters, and terminate the list with C<-1> on "
"its own.  See L</CALLS WITH OPTIONAL ARGUMENTS>."
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:53
#, no-wrap
msgid ""
" GUESTFS_ADD_DOMAIN_LIBVIRTURI, const char *libvirturi,\n"
" GUESTFS_ADD_DOMAIN_READONLY, int readonly,\n"
" GUESTFS_ADD_DOMAIN_IFACE, const char *iface,\n"
" GUESTFS_ADD_DOMAIN_LIVE, int live,\n"
" GUESTFS_ADD_DOMAIN_ALLOWUUID, int allowuuid,\n"
" GUESTFS_ADD_DOMAIN_READONLYDISK, const char *readonlydisk,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:60
msgid ""
"This function adds the disk(s) attached to the named libvirt domain C<dom>.  "
"It works by connecting to libvirt, requesting the domain and domain XML from "
"libvirt, parsing it for disks, and calling C<guestfs_add_drive_opts> on each "
"one."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:141
msgid ""
"The other optional parameters are passed directly through to "
"C<guestfs_add_drive_opts>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:144 ../src/guestfs-actions.pod:403 ../src/guestfs-actions.pod:573 ../src/guestfs-actions.pod:792 ../src/guestfs-actions.pod:823 ../src/guestfs-actions.pod:841 ../src/guestfs-actions.pod:860 ../src/guestfs-actions.pod:2019 ../src/guestfs-actions.pod:2442 ../src/guestfs-actions.pod:2645 ../src/guestfs-actions.pod:2834 ../src/guestfs-actions.pod:2895 ../src/guestfs-actions.pod:2946 ../src/guestfs-actions.pod:2998 ../src/guestfs-actions.pod:3012 ../src/guestfs-actions.pod:3035 ../src/guestfs-actions.pod:3354 ../src/guestfs-actions.pod:3848 ../src/guestfs-actions.pod:3866 ../src/guestfs-actions.pod:6470 ../src/guestfs-actions.pod:6814 ../src/guestfs-actions.pod:7052 ../src/guestfs-actions.pod:7246 ../src/guestfs-actions.pod:7272 ../src/guestfs-actions.pod:8903 ../src/guestfs-actions.pod:9390 ../src/guestfs-actions.pod:9403 ../src/guestfs-actions.pod:9416
msgid "On error this function returns -1."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:146
msgid "(Added in 1.7.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:148
msgid "guestfs_add_domain_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:150
#, no-wrap
msgid ""
" int\n"
" guestfs_add_domain_va (guestfs_h *g,\n"
"                        const char *dom,\n"
"                        va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:155
msgid "This is the \"va_list variant\" of L</guestfs_add_domain>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:157 ../src/guestfs-actions.pod:168 ../src/guestfs-actions.pod:267 ../src/guestfs-actions.pod:278 ../src/guestfs-actions.pod:1011 ../src/guestfs-actions.pod:1022 ../src/guestfs-actions.pod:1067 ../src/guestfs-actions.pod:1078 ../src/guestfs-actions.pod:1464 ../src/guestfs-actions.pod:1477 ../src/guestfs-actions.pod:1523 ../src/guestfs-actions.pod:1536 ../src/guestfs-actions.pod:1613 ../src/guestfs-actions.pod:1625 ../src/guestfs-actions.pod:1666 ../src/guestfs-actions.pod:1678 ../src/guestfs-actions.pod:1719 ../src/guestfs-actions.pod:1731 ../src/guestfs-actions.pod:1777 ../src/guestfs-actions.pod:1789 ../src/guestfs-actions.pod:2078 ../src/guestfs-actions.pod:2089 ../src/guestfs-actions.pod:3814 ../src/guestfs-actions.pod:3826 ../src/guestfs-actions.pod:5467 ../src/guestfs-actions.pod:5479 ../src/guestfs-actions.pod:5870 ../src/guestfs-actions.pod:5881 ../src/guestfs-actions.pod:5956 ../src/guestfs-actions.pod:5968 ../src/guestfs-actions.pod:6228 ../src/guestfs-actions.pod:6240 ../src/guestfs-actions.pod:6296 ../src/guestfs-actions.pod:6307 ../src/guestfs-actions.pod:6537 ../src/guestfs-actions.pod:6549 ../src/guestfs-actions.pod:6588 ../src/guestfs-actions.pod:6599 ../src/guestfs-actions.pod:6687 ../src/guestfs-actions.pod:6698 ../src/guestfs-actions.pod:7765 ../src/guestfs-actions.pod:7777 ../src/guestfs-actions.pod:8817 ../src/guestfs-actions.pod:8828 ../src/guestfs-actions.pod:8964 ../src/guestfs-actions.pod:8974
msgid "See L</CALLS WITH OPTIONAL ARGUMENTS>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:159
msgid "guestfs_add_domain_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:161
#, no-wrap
msgid ""
" int\n"
" guestfs_add_domain_argv (guestfs_h *g,\n"
"                          const char *dom,\n"
"                          const struct guestfs_add_domain_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:166
msgid "This is the \"argv variant\" of L</guestfs_add_domain>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:170
msgid "guestfs_add_drive"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:172
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive (guestfs_h *g,\n"
"                    const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:176
msgid ""
"This function is the equivalent of calling C<guestfs_add_drive_opts> with no "
"optional parameters, so the disk is added writable, with the format being "
"detected automatically."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:180
msgid ""
"Automatic detection of the format opens you up to a potential security hole "
"when dealing with untrusted raw-format images.  See CVE-2010-3851 and "
"RHBZ#642934.  Specifying the format closes this security hole.  Therefore "
"you should think about replacing calls to this function with calls to "
"C<guestfs_add_drive_opts>, and specifying the format."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:191
msgid "guestfs_add_drive_opts"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:193
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_opts (guestfs_h *g,\n"
"                         const char *filename,\n"
"                         ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:203
#, no-wrap
msgid ""
" GUESTFS_ADD_DRIVE_OPTS_READONLY, int readonly,\n"
" GUESTFS_ADD_DRIVE_OPTS_FORMAT, const char *format,\n"
" GUESTFS_ADD_DRIVE_OPTS_IFACE, const char *iface,\n"
" GUESTFS_ADD_DRIVE_OPTS_NAME, const char *name,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:233
msgid ""
"This forces the image format.  If you omit this (or use C<guestfs_add_drive> "
"or C<guestfs_add_drive_ro>) then the format is automatically detected.  "
"Possible formats include C<raw> and C<qcow2>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:244
msgid ""
"This rarely-used option lets you emulate the behaviour of the deprecated "
"C<guestfs_add_drive_with_if> call (q.v.)"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:256
msgid "(Added in 1.5.23)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:258
msgid "guestfs_add_drive_opts_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:260
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_opts_va (guestfs_h *g,\n"
"                            const char *filename,\n"
"                            va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:265
msgid "This is the \"va_list variant\" of L</guestfs_add_drive_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:269
msgid "guestfs_add_drive_opts_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:271
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_opts_argv (guestfs_h *g,\n"
"                              const char *filename,\n"
"                              const struct guestfs_add_drive_opts_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:276
msgid "This is the \"argv variant\" of L</guestfs_add_drive_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:280
msgid "guestfs_add_drive_ro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:282
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_ro (guestfs_h *g,\n"
"                       const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:286
msgid ""
"This function is the equivalent of calling C<guestfs_add_drive_opts> with "
"the optional parameter C<GUESTFS_ADD_DRIVE_OPTS_READONLY> set to 1, so the "
"disk is added read-only, with the format being detected automatically."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:293
msgid "(Added in 1.0.38)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:295
msgid "guestfs_add_drive_ro_with_if"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:297
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_ro_with_if (guestfs_h *g,\n"
"                               const char *filename,\n"
"                               const char *iface);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:309
msgid ""
"This is the same as C<guestfs_add_drive_ro> but it allows you to specify the "
"QEMU interface emulation to use at run time."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:314 ../src/guestfs-actions.pod:335 ../src/guestfs-actions.pod:3313
msgid "(Added in 1.0.84)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:316
msgid "guestfs_add_drive_with_if"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:318
#, no-wrap
msgid ""
" int\n"
" guestfs_add_drive_with_if (guestfs_h *g,\n"
"                            const char *filename,\n"
"                            const char *iface);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:330
msgid ""
"This is the same as C<guestfs_add_drive> but it allows you to specify the "
"QEMU interface emulation to use at run time."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:337
msgid "guestfs_aug_clear"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:339
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_clear (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:348 ../src/guestfs-actions.pod:3037
msgid "(Added in 1.3.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:350
msgid "guestfs_aug_close"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:352
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_close (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:355
msgid ""
"Close the current Augeas handle and free up any resources used by it.  After "
"calling this, you have to call C<guestfs_aug_init> again before you can use "
"any other Augeas functions."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:362 ../src/guestfs-actions.pod:387 ../src/guestfs-actions.pod:405 ../src/guestfs-actions.pod:419 ../src/guestfs-actions.pod:482 ../src/guestfs-actions.pod:502 ../src/guestfs-actions.pod:516 ../src/guestfs-actions.pod:547 ../src/guestfs-actions.pod:561 ../src/guestfs-actions.pod:575 ../src/guestfs-actions.pod:589 ../src/guestfs-actions.pod:607 ../src/guestfs-actions.pod:7323
msgid "(Added in 0.7)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:364
msgid "guestfs_aug_defnode"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:366
#, no-wrap
msgid ""
" struct guestfs_int_bool *\n"
" guestfs_aug_defnode (guestfs_h *g,\n"
"                      const char *name,\n"
"                      const char *expr,\n"
"                      const char *val);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:375
msgid ""
"If C<expr> evaluates to an empty nodeset, a node is created, equivalent to "
"calling C<guestfs_aug_set> C<expr>, C<value>.  C<name> will be the nodeset "
"containing that single node."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:383
msgid ""
"This function returns a C<struct guestfs_int_bool *>, or NULL if there was "
"an error.  I<The caller must call C<guestfs_free_int_bool> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:389
msgid "guestfs_aug_defvar"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:391
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_defvar (guestfs_h *g,\n"
"                     const char *name,\n"
"                     const char *expr);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:407
msgid "guestfs_aug_get"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:409
#, no-wrap
msgid ""
" char *\n"
" guestfs_aug_get (guestfs_h *g,\n"
"                  const char *augpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:416 ../src/guestfs-actions.pod:1202 ../src/guestfs-actions.pod:1220 ../src/guestfs-actions.pod:1280 ../src/guestfs-actions.pod:1296 ../src/guestfs-actions.pod:1399 ../src/guestfs-actions.pod:1888 ../src/guestfs-actions.pod:1905 ../src/guestfs-actions.pod:1924 ../src/guestfs-actions.pod:2125 ../src/guestfs-actions.pod:2313 ../src/guestfs-actions.pod:2425 ../src/guestfs-actions.pod:2588 ../src/guestfs-actions.pod:2605 ../src/guestfs-actions.pod:2672 ../src/guestfs-actions.pod:2813 ../src/guestfs-actions.pod:2854 ../src/guestfs-actions.pod:2875 ../src/guestfs-actions.pod:3060 ../src/guestfs-actions.pod:3278 ../src/guestfs-actions.pod:3480 ../src/guestfs-actions.pod:3594 ../src/guestfs-actions.pod:3698 ../src/guestfs-actions.pod:3717 ../src/guestfs-actions.pod:3932 ../src/guestfs-actions.pod:3960 ../src/guestfs-actions.pod:3981 ../src/guestfs-actions.pod:4015 ../src/guestfs-actions.pod:4086 ../src/guestfs-actions.pod:4106 ../src/guestfs-actions.pod:4126 ../src/guestfs-actions.pod:4793 ../src/guestfs-actions.pod:4809 ../src/guestfs-actions.pod:5173 ../src/guestfs-actions.pod:5340 ../src/guestfs-actions.pod:5663 ../src/guestfs-actions.pod:6832 ../src/guestfs-actions.pod:7033 ../src/guestfs-actions.pod:7221 ../src/guestfs-actions.pod:7399 ../src/guestfs-actions.pod:7448 ../src/guestfs-actions.pod:8217 ../src/guestfs-actions.pod:8233 ../src/guestfs-actions.pod:8257 ../src/guestfs-actions.pod:8281 ../src/guestfs-actions.pod:9119 ../src/guestfs-actions.pod:9138 ../src/guestfs-actions.pod:9156 ../src/guestfs-actions.pod:9349 ../src/guestfs-actions.pod:9706
msgid ""
"This function returns a string, or NULL on error.  I<The caller must free "
"the returned string after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:421
msgid "guestfs_aug_init"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:423
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_init (guestfs_h *g,\n"
"                   const char *root,\n"
"                   int flags);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:432
msgid "You must call this before using any other C<guestfs_aug_*> commands."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:457
msgid ""
"This option is only useful when debugging Augeas lenses.  Use of this option "
"may require additional memory for the libguestfs appliance.  You may need to "
"set the C<LIBGUESTFS_MEMSIZE> environment variable or call "
"C<guestfs_set_memsize>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:472
msgid "Do not load the tree in C<guestfs_aug_init>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:476
msgid "To close the handle, you can call C<guestfs_aug_close>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:484
msgid "guestfs_aug_insert"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:486
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_insert (guestfs_h *g,\n"
"                     const char *augpath,\n"
"                     const char *label,\n"
"                     int before);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:504
msgid "guestfs_aug_load"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:506
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_load (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:518
msgid "guestfs_aug_ls"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:520
#, no-wrap
msgid ""
" char **\n"
" guestfs_aug_ls (guestfs_h *g,\n"
"                 const char *augpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:524
msgid ""
"This is just a shortcut for listing C<guestfs_aug_match> C<path/*> and "
"sorting the resulting nodes into alphabetical order."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:527 ../src/guestfs-actions.pod:543 ../src/guestfs-actions.pod:689 ../src/guestfs-actions.pod:1418 ../src/guestfs-actions.pod:2140 ../src/guestfs-actions.pod:2159 ../src/guestfs-actions.pod:2262 ../src/guestfs-actions.pod:2281 ../src/guestfs-actions.pod:2527 ../src/guestfs-actions.pod:3136 ../src/guestfs-actions.pod:3152 ../src/guestfs-actions.pod:3171 ../src/guestfs-actions.pod:3236 ../src/guestfs-actions.pod:3260 ../src/guestfs-actions.pod:3331 ../src/guestfs-actions.pod:3380 ../src/guestfs-actions.pod:3659 ../src/guestfs-actions.pod:4034 ../src/guestfs-actions.pod:4322 ../src/guestfs-actions.pod:4663 ../src/guestfs-actions.pod:4680 ../src/guestfs-actions.pod:4700 ../src/guestfs-actions.pod:4755 ../src/guestfs-actions.pod:4775 ../src/guestfs-actions.pod:4896 ../src/guestfs-actions.pod:5312 ../src/guestfs-actions.pod:6431 ../src/guestfs-actions.pod:7193 ../src/guestfs-actions.pod:7319 ../src/guestfs-actions.pod:7433 ../src/guestfs-actions.pod:8297 ../src/guestfs-actions.pod:8358 ../src/guestfs-actions.pod:8413 ../src/guestfs-actions.pod:8559 ../src/guestfs-actions.pod:8583 ../src/guestfs-actions.pod:9223 ../src/guestfs-actions.pod:9262 ../src/guestfs-actions.pod:9309 ../src/guestfs-actions.pod:9522 ../src/guestfs-actions.pod:9541 ../src/guestfs-actions.pod:9656 ../src/guestfs-actions.pod:9675 ../src/guestfs-actions.pod:9721 ../src/guestfs-actions.pod:9740
msgid ""
"This function returns a NULL-terminated array of strings (like "
"L<environ(3)>), or NULL if there was an error.  I<The caller must free the "
"strings and the array after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:531 ../src/guestfs-actions.pod:1343 ../src/guestfs-actions.pod:1361 ../src/guestfs-actions.pod:2197 ../src/guestfs-actions.pod:4386 ../src/guestfs-actions.pod:4417 ../src/guestfs-actions.pod:5139 ../src/guestfs-actions.pod:5203 ../src/guestfs-actions.pod:5603 ../src/guestfs-actions.pod:5636 ../src/guestfs-actions.pod:5799 ../src/guestfs-actions.pod:6435 ../src/guestfs-actions.pod:7134 ../src/guestfs-actions.pod:7531 ../src/guestfs-actions.pod:7545 ../src/guestfs-actions.pod:7557 ../src/guestfs-actions.pod:8144 ../src/guestfs-actions.pod:8919 ../src/guestfs-actions.pod:8932 ../src/guestfs-actions.pod:9207 ../src/guestfs-actions.pod:9510
msgid "(Added in 0.8)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:533
msgid "guestfs_aug_match"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:535
#, no-wrap
msgid ""
" char **\n"
" guestfs_aug_match (guestfs_h *g,\n"
"                    const char *augpath);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:549
msgid "guestfs_aug_mv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:551
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_mv (guestfs_h *g,\n"
"                 const char *src,\n"
"                 const char *dest);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:563
msgid "guestfs_aug_rm"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:565
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_rm (guestfs_h *g,\n"
"                 const char *augpath);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:577
msgid "guestfs_aug_save"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:579
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_save (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:584
msgid ""
"The flags which were passed to C<guestfs_aug_init> affect exactly how files "
"are saved."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:591
msgid "guestfs_aug_set"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:593
#, no-wrap
msgid ""
" int\n"
" guestfs_aug_set (guestfs_h *g,\n"
"                  const char *augpath,\n"
"                  const char *val);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:600
msgid ""
"In the Augeas API, it is possible to clear a node by setting the value to "
"NULL.  Due to an oversight in the libguestfs API you cannot do that with "
"this call.  Instead you must use the C<guestfs_aug_clear> call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:609
msgid "guestfs_available"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:611
#, no-wrap
msgid ""
" int\n"
" guestfs_available (guestfs_h *g,\n"
"                    char *const *groups);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:619
msgid ""
"The libguestfs groups, and the functions that those groups correspond to, "
"are listed in L<guestfs(3)/AVAILABILITY>.  You can also fetch this list at "
"runtime by calling C<guestfs_available_all_groups>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:643
msgid "You must call C<guestfs_launch> before calling this function."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:665
msgid ""
"This call was added in version C<1.0.80>.  In previous versions of "
"libguestfs all you could do would be to speculatively execute a command to "
"find out if the daemon implemented it.  See also C<guestfs_version>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:674 ../src/guestfs-actions.pod:1875
msgid "(Added in 1.0.80)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:676
msgid "guestfs_available_all_groups"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:678
#, no-wrap
msgid ""
" char **\n"
" guestfs_available_all_groups (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:681
msgid ""
"This command returns a list of all optional groups that this daemon knows "
"about.  Note this returns both supported and unsupported groups.  To find "
"out which ones the daemon can actually support you have to call "
"C<guestfs_available> on each member of the returned list."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:687
msgid "See also C<guestfs_available> and L<guestfs(3)/AVAILABILITY>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:693
msgid "(Added in 1.3.15)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:695
msgid "guestfs_base64_in"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:697
#, no-wrap
msgid ""
" int\n"
" guestfs_base64_in (guestfs_h *g,\n"
"                    const char *base64file,\n"
"                    const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:707 ../src/guestfs-actions.pod:721
msgid "(Added in 1.3.5)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:709
msgid "guestfs_base64_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:711
#, no-wrap
msgid ""
" int\n"
" guestfs_base64_out (guestfs_h *g,\n"
"                     const char *filename,\n"
"                     const char *base64file);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:723
msgid "guestfs_blkid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:725
#, no-wrap
msgid ""
" char **\n"
" guestfs_blkid (guestfs_h *g,\n"
"                const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:756 ../src/guestfs-actions.pod:3634 ../src/guestfs-actions.pod:3902 ../src/guestfs-actions.pod:4740 ../src/guestfs-actions.pod:5515 ../src/guestfs-actions.pod:6411 ../src/guestfs-actions.pod:8844
msgid ""
"This function returns a NULL-terminated array of strings, or NULL if there "
"was an error.  The array of strings will always have length C<2n+1>, where "
"C<n> keys and values alternate, followed by the trailing NULL entry.  I<The "
"caller must free the strings and the array after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:762
msgid "(Added in 1.15.9)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:764
msgid "guestfs_blockdev_flushbufs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:766
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_flushbufs (guestfs_h *g,\n"
"                             const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:777 ../src/guestfs-actions.pod:794 ../src/guestfs-actions.pod:809 ../src/guestfs-actions.pod:825 ../src/guestfs-actions.pod:843 ../src/guestfs-actions.pod:862 ../src/guestfs-actions.pod:876 ../src/guestfs-actions.pod:894 ../src/guestfs-actions.pod:908 ../src/guestfs-actions.pod:922
msgid "(Added in 0.9.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:779
msgid "guestfs_blockdev_getbsz"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:781
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_getbsz (guestfs_h *g,\n"
"                          const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:796
msgid "guestfs_blockdev_getro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:798
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_getro (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:807 ../src/guestfs-actions.pod:2180 ../src/guestfs-actions.pod:2195 ../src/guestfs-actions.pod:2684 ../src/guestfs-actions.pod:2695 ../src/guestfs-actions.pod:2906 ../src/guestfs-actions.pod:2932 ../src/guestfs-actions.pod:2972 ../src/guestfs-actions.pod:2987 ../src/guestfs-actions.pod:3023 ../src/guestfs-actions.pod:3046 ../src/guestfs-actions.pod:4143 ../src/guestfs-actions.pod:4159 ../src/guestfs-actions.pod:4177 ../src/guestfs-actions.pod:4339 ../src/guestfs-actions.pod:4354 ../src/guestfs-actions.pod:4368 ../src/guestfs-actions.pod:4384 ../src/guestfs-actions.pod:4399 ../src/guestfs-actions.pod:4415 ../src/guestfs-actions.pod:4429 ../src/guestfs-actions.pod:4442 ../src/guestfs-actions.pod:4456 ../src/guestfs-actions.pod:4471 ../src/guestfs-actions.pod:4486 ../src/guestfs-actions.pod:4499 ../src/guestfs-actions.pod:4513 ../src/guestfs-actions.pod:6796
msgid "This function returns a C truth value on success or -1 on error."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:811
msgid "guestfs_blockdev_getsize64"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:813
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_blockdev_getsize64 (guestfs_h *g,\n"
"                             const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:819
msgid "See also C<guestfs_blockdev_getsz>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:827
msgid "guestfs_blockdev_getss"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:829
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_getss (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:836
msgid ""
"(Note, this is not the size in sectors, use C<guestfs_blockdev_getsz> for "
"that)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:845
msgid "guestfs_blockdev_getsz"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:847
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_blockdev_getsz (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:854
msgid ""
"See also C<guestfs_blockdev_getss> for the real sector size of the device, "
"and C<guestfs_blockdev_getsize64> for the more useful I<size in bytes>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:864
msgid "guestfs_blockdev_rereadpt"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:866
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_rereadpt (guestfs_h *g,\n"
"                            const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:878
msgid "guestfs_blockdev_setbsz"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:880
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_setbsz (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int blocksize);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:896
msgid "guestfs_blockdev_setro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:898
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_setro (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:910
msgid "guestfs_blockdev_setrw"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:912
#, no-wrap
msgid ""
" int\n"
" guestfs_blockdev_setrw (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:924
msgid "guestfs_btrfs_device_add"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:926
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_device_add (guestfs_h *g,\n"
"                           char *const *devices,\n"
"                           const char *fs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:936 ../src/guestfs-actions.pod:950 ../src/guestfs-actions.pod:963 ../src/guestfs-actions.pod:1034 ../src/guestfs-actions.pod:1105 ../src/guestfs-actions.pod:1117 ../src/guestfs-actions.pod:1132 ../src/guestfs-actions.pod:1147 ../src/guestfs-actions.pod:1162
msgid "(Added in 1.17.35)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:938
msgid "guestfs_btrfs_device_delete"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:940
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_device_delete (guestfs_h *g,\n"
"                              char *const *devices,\n"
"                              const char *fs);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:952
msgid "guestfs_btrfs_filesystem_balance"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:954
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_balance (guestfs_h *g,\n"
"                                   const char *fs);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:965
msgid "guestfs_btrfs_filesystem_resize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:967
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_resize (guestfs_h *g,\n"
"                                  const char *mountpoint,\n"
"                                  ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:977
#, no-wrap
msgid ""
" GUESTFS_BTRFS_FILESYSTEM_RESIZE_SIZE, int64_t size,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1000
msgid "(Added in 1.11.17)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1002
msgid "guestfs_btrfs_filesystem_resize_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1004
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_resize_va (guestfs_h *g,\n"
"                                     const char *mountpoint,\n"
"                                     va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1009
msgid "This is the \"va_list variant\" of L</guestfs_btrfs_filesystem_resize>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1013
msgid "guestfs_btrfs_filesystem_resize_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1015
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_resize_argv (guestfs_h *g,\n"
"                                       const char *mountpoint,\n"
"                                       const struct "
"guestfs_btrfs_filesystem_resize_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1020
msgid "This is the \"argv variant\" of L</guestfs_btrfs_filesystem_resize>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1024
msgid "guestfs_btrfs_filesystem_sync"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1026
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
"                                const char *fs);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1036
msgid "guestfs_btrfs_fsck"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1038
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_fsck (guestfs_h *g,\n"
"                     const char *device,\n"
"                     ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1048
#, no-wrap
msgid ""
" GUESTFS_BTRFS_FSCK_SUPERBLOCK, int64_t superblock,\n"
" GUESTFS_BTRFS_FSCK_REPAIR, int repair,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1056 ../src/guestfs-actions.pod:1092
msgid "(Added in 1.17.43)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1058
msgid "guestfs_btrfs_fsck_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1060
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_fsck_va (guestfs_h *g,\n"
"                        const char *device,\n"
"                        va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1065
msgid "This is the \"va_list variant\" of L</guestfs_btrfs_fsck>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1069
msgid "guestfs_btrfs_fsck_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1071
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_fsck_argv (guestfs_h *g,\n"
"                          const char *device,\n"
"                          const struct guestfs_btrfs_fsck_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1076
msgid "This is the \"argv variant\" of L</guestfs_btrfs_fsck>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1080
msgid "guestfs_btrfs_set_seeding"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1082
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_set_seeding (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int seeding);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1094
msgid "guestfs_btrfs_subvolume_create"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1096
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
"                                 const char *dest);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1107
msgid "guestfs_btrfs_subvolume_delete"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1109
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_subvolume_delete (guestfs_h *g,\n"
"                                 const char *subvolume);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1119
msgid "guestfs_btrfs_subvolume_list"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1121
#, no-wrap
msgid ""
" struct guestfs_btrfssubvolume_list *\n"
" guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
"                               const char *fs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1128
msgid ""
"This function returns a C<struct guestfs_btrfssubvolume_list *>, or NULL if "
"there was an error.  I<The caller must call "
"C<guestfs_free_btrfssubvolume_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1134
msgid "guestfs_btrfs_subvolume_set_default"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1136
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_subvolume_set_default (guestfs_h *g,\n"
"                                      int64_t id,\n"
"                                      const char *fs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1141
msgid ""
"Set the subvolume of the btrfs filesystem C<fs> which will be mounted by "
"default.  See C<guestfs_btrfs_subvolume_list> to get a list of subvolumes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1149
msgid "guestfs_btrfs_subvolume_snapshot"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1151
#, no-wrap
msgid ""
" int\n"
" guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
"                                   const char *source,\n"
"                                   const char *dest);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1164
msgid "guestfs_case_sensitive_path"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1166
#, no-wrap
msgid ""
" char *\n"
" guestfs_case_sensitive_path (guestfs_h *g,\n"
"                              const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1192
msgid ""
"Thus C<guestfs_case_sensitive_path> (\"/Windows/System32\")  might return "
"C<\"/WINDOWS/system32\"> (the exact return value would depend on details of "
"how the directories were originally created under Windows)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1200
msgid "See also C<guestfs_realpath>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1205 ../src/guestfs-actions.pod:9141
msgid "(Added in 1.0.75)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1207
msgid "guestfs_cat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1209
#, no-wrap
msgid ""
" char *\n"
" guestfs_cat (guestfs_h *g,\n"
"              const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1215
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of string).  For "
"those you need to use the C<guestfs_read_file> or C<guestfs_download> "
"functions which have a more complex interface."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1226 ../src/guestfs-actions.pod:4684 ../src/guestfs-actions.pod:4779 ../src/guestfs-actions.pod:4796 ../src/guestfs-actions.pod:4900 ../src/guestfs-actions.pod:5316 ../src/guestfs-actions.pod:5330 ../src/guestfs-actions.pod:7197 ../src/guestfs-actions.pod:7211 ../src/guestfs-actions.pod:9313 ../src/guestfs-actions.pod:9327
msgid "(Added in 0.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1228
msgid "guestfs_checksum"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1230
#, no-wrap
msgid ""
" char *\n"
" guestfs_checksum (guestfs_h *g,\n"
"                   const char *csumtype,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1276
msgid "To get the checksum for a device, use C<guestfs_checksum_device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1278
msgid "To get the checksums for many files, use C<guestfs_checksums_out>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1283 ../src/guestfs-actions.pod:1950 ../src/guestfs-actions.pod:3014 ../src/guestfs-actions.pod:4370 ../src/guestfs-actions.pod:4431 ../src/guestfs-actions.pod:4458 ../src/guestfs-actions.pod:8997
msgid "(Added in 1.0.2)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1285
msgid "guestfs_checksum_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1287
#, no-wrap
msgid ""
" char *\n"
" guestfs_checksum_device (guestfs_h *g,\n"
"                          const char *csumtype,\n"
"                          const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1292
msgid ""
"This call computes the MD5, SHAx or CRC checksum of the contents of the "
"device named C<device>.  For the types of checksums supported see the "
"C<guestfs_checksum> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1299 ../src/guestfs-actions.pod:6629 ../src/guestfs-actions.pod:6764 ../src/guestfs-actions.pod:6798 ../src/guestfs-actions.pod:6816 ../src/guestfs-actions.pod:6998 ../src/guestfs-actions.pod:8864 ../src/guestfs-actions.pod:8878 ../src/guestfs-actions.pod:9339
msgid "(Added in 1.3.2)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1301
msgid "guestfs_checksums_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1303
#, no-wrap
msgid ""
" int\n"
" guestfs_checksums_out (guestfs_h *g,\n"
"                        const char *csumtype,\n"
"                        const char *directory,\n"
"                        const char *sumsfile);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1323
msgid "(Added in 1.3.7)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1325
msgid "guestfs_chmod"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1327
#, no-wrap
msgid ""
" int\n"
" guestfs_chmod (guestfs_h *g,\n"
"                int mode,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1345
msgid "guestfs_chown"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1347
#, no-wrap
msgid ""
" int\n"
" guestfs_chown (guestfs_h *g,\n"
"                int owner,\n"
"                int group,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1363
msgid "guestfs_command"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1365
#, no-wrap
msgid ""
" char *\n"
" guestfs_command (guestfs_h *g,\n"
"                  char *const *arguments);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1374
msgid ""
"The single parameter is an argv-style list of arguments.  The first element "
"is the name of the program to run.  Subsequent elements are parameters.  The "
"list must be non-empty (ie. must contain a program name).  Note that the "
"command runs directly, and is I<not> invoked via the shell (see "
"C<guestfs_sh>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1405 ../src/guestfs-actions.pod:1425 ../src/guestfs-actions.pod:2316
msgid "(Added in 0.9.1)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1407
msgid "guestfs_command_lines"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1409
#, no-wrap
msgid ""
" char **\n"
" guestfs_command_lines (guestfs_h *g,\n"
"                        char *const *arguments);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1413
msgid ""
"This is the same as C<guestfs_command>, but splits the result into a list of "
"lines."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1416
msgid "See also: C<guestfs_sh_lines>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1427
msgid "guestfs_compress_device_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1429
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_device_out (guestfs_h *g,\n"
"                              const char *ctype,\n"
"                              const char *device,\n"
"                              const char *zdevice,\n"
"                              ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1441
#, no-wrap
msgid ""
" GUESTFS_COMPRESS_DEVICE_OUT_LEVEL, int level,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1446
msgid ""
"The C<ctype> and optional C<level> parameters have the same meaning as in "
"C<guestfs_compress_out>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1451 ../src/guestfs-actions.pod:1510 ../src/guestfs-actions.pod:3000 ../src/guestfs-actions.pod:8023
msgid "(Added in 1.13.15)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1453
msgid "guestfs_compress_device_out_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1455
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_device_out_va (guestfs_h *g,\n"
"                                 const char *ctype,\n"
"                                 const char *device,\n"
"                                 const char *zdevice,\n"
"                                 va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1462
msgid "This is the \"va_list variant\" of L</guestfs_compress_device_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1466
msgid "guestfs_compress_device_out_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1468
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_device_out_argv (guestfs_h *g,\n"
"                                   const char *ctype,\n"
"                                   const char *device,\n"
"                                   const char *zdevice,\n"
"                                   const struct "
"guestfs_compress_device_out_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1475
msgid "This is the \"argv variant\" of L</guestfs_compress_device_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1479
msgid "guestfs_compress_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1481
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_out (guestfs_h *g,\n"
"                       const char *ctype,\n"
"                       const char *file,\n"
"                       const char *zfile,\n"
"                       ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1493
#, no-wrap
msgid ""
" GUESTFS_COMPRESS_OUT_LEVEL, int level,\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1512
msgid "guestfs_compress_out_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1514
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_out_va (guestfs_h *g,\n"
"                          const char *ctype,\n"
"                          const char *file,\n"
"                          const char *zfile,\n"
"                          va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1521
msgid "This is the \"va_list variant\" of L</guestfs_compress_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1525
msgid "guestfs_compress_out_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1527
#, no-wrap
msgid ""
" int\n"
" guestfs_compress_out_argv (guestfs_h *g,\n"
"                            const char *ctype,\n"
"                            const char *file,\n"
"                            const char *zfile,\n"
"                            const struct guestfs_compress_out_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1534
msgid "This is the \"argv variant\" of L</guestfs_compress_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1538
msgid "guestfs_config"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1540
#, no-wrap
msgid ""
" int\n"
" guestfs_config (guestfs_h *g,\n"
"                 const char *qemuparam,\n"
"                 const char *qemuvalue);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1558
msgid "guestfs_copy_device_to_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1560
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_device (guestfs_h *g,\n"
"                                const char *src,\n"
"                                const char *dest,\n"
"                                ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1571
#, no-wrap
msgid ""
" GUESTFS_COPY_DEVICE_TO_DEVICE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_DEVICE_TO_DEVICE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, int64_t size,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1575
msgid ""
"The four calls C<guestfs_copy_device_to_device>, "
"C<guestfs_copy_device_to_file>, C<guestfs_copy_file_to_device>, and "
"C<guestfs_copy_file_to_file> let you copy from a source (device|file) to a "
"destination (device|file)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1596 ../src/guestfs-actions.pod:1649 ../src/guestfs-actions.pod:1702 ../src/guestfs-actions.pod:1760 ../src/guestfs-actions.pod:1814 ../src/guestfs-actions.pod:1945 ../src/guestfs-actions.pod:1976 ../src/guestfs-actions.pod:2021 ../src/guestfs-actions.pod:2465 ../src/guestfs-actions.pod:2487 ../src/guestfs-actions.pod:4582 ../src/guestfs-actions.pod:8992 ../src/guestfs-actions.pod:9026 ../src/guestfs-actions.pod:9571 ../src/guestfs-actions.pod:9594 ../src/guestfs-actions.pod:9618
msgid ""
"This long-running command can generate progress notification messages so "
"that the caller can display a progress bar or indicator.  To receive these "
"messages, the caller must register a progress event callback.  See "
"L<guestfs(3)/GUESTFS_EVENT_PROGRESS>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1601 ../src/guestfs-actions.pod:1654 ../src/guestfs-actions.pod:1707 ../src/guestfs-actions.pod:1765 ../src/guestfs-actions.pod:7054
msgid "(Added in 1.13.25)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1603
msgid "guestfs_copy_device_to_device_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1605
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_device_va (guestfs_h *g,\n"
"                                   const char *src,\n"
"                                   const char *dest,\n"
"                                   va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1611
msgid "This is the \"va_list variant\" of L</guestfs_copy_device_to_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1615
msgid "guestfs_copy_device_to_device_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1617
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_device_argv (guestfs_h *g,\n"
"                                     const char *src,\n"
"                                     const char *dest,\n"
"                                     const struct "
"guestfs_copy_device_to_device_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1623
msgid "This is the \"argv variant\" of L</guestfs_copy_device_to_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1627
msgid "guestfs_copy_device_to_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1629
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_file (guestfs_h *g,\n"
"                              const char *src,\n"
"                              const char *dest,\n"
"                              ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1640
#, no-wrap
msgid ""
" GUESTFS_COPY_DEVICE_TO_FILE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_DEVICE_TO_FILE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_DEVICE_TO_FILE_SIZE, int64_t size,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1644 ../src/guestfs-actions.pod:1697 ../src/guestfs-actions.pod:1750
msgid "See C<guestfs_copy_device_to_device> for a general overview of this call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1656
msgid "guestfs_copy_device_to_file_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1658
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_file_va (guestfs_h *g,\n"
"                                 const char *src,\n"
"                                 const char *dest,\n"
"                                 va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1664
msgid "This is the \"va_list variant\" of L</guestfs_copy_device_to_file>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1668
msgid "guestfs_copy_device_to_file_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1670
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_device_to_file_argv (guestfs_h *g,\n"
"                                   const char *src,\n"
"                                   const char *dest,\n"
"                                   const struct "
"guestfs_copy_device_to_file_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1676
msgid "This is the \"argv variant\" of L</guestfs_copy_device_to_file>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1680
msgid "guestfs_copy_file_to_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1682
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_device (guestfs_h *g,\n"
"                              const char *src,\n"
"                              const char *dest,\n"
"                              ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1693
#, no-wrap
msgid ""
" GUESTFS_COPY_FILE_TO_DEVICE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_FILE_TO_DEVICE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_FILE_TO_DEVICE_SIZE, int64_t size,\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1709
msgid "guestfs_copy_file_to_device_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1711
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_device_va (guestfs_h *g,\n"
"                                 const char *src,\n"
"                                 const char *dest,\n"
"                                 va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1717
msgid "This is the \"va_list variant\" of L</guestfs_copy_file_to_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1721
msgid "guestfs_copy_file_to_device_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1723
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_device_argv (guestfs_h *g,\n"
"                                   const char *src,\n"
"                                   const char *dest,\n"
"                                   const struct "
"guestfs_copy_file_to_device_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1729
msgid "This is the \"argv variant\" of L</guestfs_copy_file_to_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1733
msgid "guestfs_copy_file_to_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1735
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_file (guestfs_h *g,\n"
"                            const char *src,\n"
"                            const char *dest,\n"
"                            ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1746
#, no-wrap
msgid ""
" GUESTFS_COPY_FILE_TO_FILE_SRCOFFSET, int64_t srcoffset,\n"
" GUESTFS_COPY_FILE_TO_FILE_DESTOFFSET, int64_t destoffset,\n"
" GUESTFS_COPY_FILE_TO_FILE_SIZE, int64_t size,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1753
msgid ""
"This is B<not> the function you want for copying files.  This is for copying "
"blocks within existing files.  See C<guestfs_cp>, C<guestfs_cp_a> and "
"C<guestfs_mv> for general file copying and moving functions."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1767
msgid "guestfs_copy_file_to_file_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1769
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_file_va (guestfs_h *g,\n"
"                               const char *src,\n"
"                               const char *dest,\n"
"                               va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1775
msgid "This is the \"va_list variant\" of L</guestfs_copy_file_to_file>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1779
msgid "guestfs_copy_file_to_file_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1781
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_file_to_file_argv (guestfs_h *g,\n"
"                                 const char *src,\n"
"                                 const char *dest,\n"
"                                 const struct guestfs_copy_file_to_file_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1787
msgid "This is the \"argv variant\" of L</guestfs_copy_file_to_file>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1791
msgid "guestfs_copy_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1793
#, no-wrap
msgid ""
" int\n"
" guestfs_copy_size (guestfs_h *g,\n"
"                    const char *src,\n"
"                    const char *dest,\n"
"                    int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1799 ../src/guestfs-actions.pod:1856
msgid ""
"I<This function is deprecated.> In new code, use the "
"L</guestfs_copy_device_to_device> call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1819 ../src/guestfs-actions.pod:5343 ../src/guestfs-actions.pod:7224 ../src/guestfs-actions.pod:9227 ../src/guestfs-actions.pod:9266 ../src/guestfs-actions.pod:9352
msgid "(Added in 1.0.87)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1821
msgid "guestfs_cp"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1823
#, no-wrap
msgid ""
" int\n"
" guestfs_cp (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1833 ../src/guestfs-actions.pod:1847 ../src/guestfs-actions.pod:1927 ../src/guestfs-actions.pod:2001 ../src/guestfs-actions.pod:2182 ../src/guestfs-actions.pod:6449 ../src/guestfs-actions.pod:7068
msgid "(Added in 1.0.18)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1835
msgid "guestfs_cp_a"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1837
#, no-wrap
msgid ""
" int\n"
" guestfs_cp_a (guestfs_h *g,\n"
"               const char *src,\n"
"               const char *dest);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1849
msgid "guestfs_dd"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1851
#, no-wrap
msgid ""
" int\n"
" guestfs_dd (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1868
msgid ""
"If the destination is a device, it must be as large or larger than the "
"source file or device, otherwise the copy will fail.  This command cannot do "
"partial copies (see C<guestfs_copy_device_to_device>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1877
msgid "guestfs_df"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1879
#, no-wrap
msgid ""
" char *\n"
" guestfs_df (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1884 ../src/guestfs-actions.pod:1901
msgid ""
"This command is mostly useful for interactive sessions.  It is I<not> "
"intended that you try to parse the output string.  Use C<guestfs_statvfs> "
"from programs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1891 ../src/guestfs-actions.pod:1908 ../src/guestfs-actions.pod:2026 ../src/guestfs-actions.pod:3243 ../src/guestfs-actions.pod:3267 ../src/guestfs-actions.pod:3335 ../src/guestfs-actions.pod:5666 ../src/guestfs-actions.pod:6349 ../src/guestfs-actions.pod:8566 ../src/guestfs-actions.pod:8590 ../src/guestfs-actions.pod:9392 ../src/guestfs-actions.pod:9405 ../src/guestfs-actions.pod:9418
msgid "(Added in 1.0.54)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1893
msgid "guestfs_df_h"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1895
#, no-wrap
msgid ""
" char *\n"
" guestfs_df_h (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1910
msgid "guestfs_dmesg"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1912
#, no-wrap
msgid ""
" char *\n"
" guestfs_dmesg (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1919
msgid ""
"Another way to get the same information is to enable verbose messages with "
"C<guestfs_set_verbose> or by setting the environment variable "
"C<LIBGUESTFS_DEBUG=1> before running the program."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1929
msgid "guestfs_download"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1931
#, no-wrap
msgid ""
" int\n"
" guestfs_download (guestfs_h *g,\n"
"                   const char *remotefilename,\n"
"                   const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1941
msgid "See also C<guestfs_upload>, C<guestfs_cat>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1952
msgid "guestfs_download_offset"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1954
#, no-wrap
msgid ""
" int\n"
" guestfs_download_offset (guestfs_h *g,\n"
"                          const char *remotefilename,\n"
"                          const char *filename,\n"
"                          int64_t offset,\n"
"                          int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1967
msgid ""
"Note that there is no limit on the amount of data that can be downloaded "
"with this call, unlike with C<guestfs_pread>, and this call always reads the "
"full amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1972
msgid "See also C<guestfs_download>, C<guestfs_pread>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:1981 ../src/guestfs-actions.pod:9031
msgid "(Added in 1.5.17)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:1983
msgid "guestfs_drop_caches"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:1985
#, no-wrap
msgid ""
" int\n"
" guestfs_drop_caches (guestfs_h *g,\n"
"                      int whattodrop);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2003
msgid "guestfs_du"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2005
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_du (guestfs_h *g,\n"
"             const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2028
msgid "guestfs_e2fsck"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2030
#, no-wrap
msgid ""
" int\n"
" guestfs_e2fsck (guestfs_h *g,\n"
"                 const char *device,\n"
"                 ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2040
#, no-wrap
msgid ""
" GUESTFS_E2FSCK_CORRECT, int correct,\n"
" GUESTFS_E2FSCK_FORCEALL, int forceall,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2067
msgid "(Added in 1.15.17)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2069
msgid "guestfs_e2fsck_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2071
#, no-wrap
msgid ""
" int\n"
" guestfs_e2fsck_va (guestfs_h *g,\n"
"                    const char *device,\n"
"                    va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2076
msgid "This is the \"va_list variant\" of L</guestfs_e2fsck>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2080
msgid "guestfs_e2fsck_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2082
#, no-wrap
msgid ""
" int\n"
" guestfs_e2fsck_argv (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const struct guestfs_e2fsck_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2087
msgid "This is the \"argv variant\" of L</guestfs_e2fsck>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2091
msgid "guestfs_e2fsck_f"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2093
#, no-wrap
msgid ""
" int\n"
" guestfs_e2fsck_f (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2097
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_e2fsck> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2110
msgid "(Added in 1.0.29)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2112
msgid "guestfs_echo_daemon"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2114
#, no-wrap
msgid ""
" char *\n"
" guestfs_echo_daemon (guestfs_h *g,\n"
"                      char *const *words);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2123
msgid "See also C<guestfs_ping_daemon>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2128 ../src/guestfs-actions.pod:3025 ../src/guestfs-actions.pod:8047
msgid "(Added in 1.0.69)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2130
msgid "guestfs_egrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2132
#, no-wrap
msgid ""
" char **\n"
" guestfs_egrep (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2147 ../src/guestfs-actions.pod:2166 ../src/guestfs-actions.pod:2223 ../src/guestfs-actions.pod:2269 ../src/guestfs-actions.pod:2288 ../src/guestfs-actions.pod:3159 ../src/guestfs-actions.pod:3178 ../src/guestfs-actions.pod:3356 ../src/guestfs-actions.pod:3369 ../src/guestfs-actions.pod:3384 ../src/guestfs-actions.pod:3428 ../src/guestfs-actions.pod:3450 ../src/guestfs-actions.pod:3463 ../src/guestfs-actions.pod:4825 ../src/guestfs-actions.pod:4839 ../src/guestfs-actions.pod:4852 ../src/guestfs-actions.pod:4866 ../src/guestfs-actions.pod:6143 ../src/guestfs-actions.pod:7402 ../src/guestfs-actions.pod:7451 ../src/guestfs-actions.pod:8434 ../src/guestfs-actions.pod:8446 ../src/guestfs-actions.pod:8459 ../src/guestfs-actions.pod:8472 ../src/guestfs-actions.pod:8494 ../src/guestfs-actions.pod:8507 ../src/guestfs-actions.pod:8520 ../src/guestfs-actions.pod:8533 ../src/guestfs-actions.pod:9529 ../src/guestfs-actions.pod:9548 ../src/guestfs-actions.pod:9663 ../src/guestfs-actions.pod:9682 ../src/guestfs-actions.pod:9728 ../src/guestfs-actions.pod:9747
msgid "(Added in 1.0.66)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2149
msgid "guestfs_egrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2151
#, no-wrap
msgid ""
" char **\n"
" guestfs_egrepi (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2168
msgid "guestfs_equal"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2170
#, no-wrap
msgid ""
" int\n"
" guestfs_equal (guestfs_h *g,\n"
"                const char *file1,\n"
"                const char *file2);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2184
msgid "guestfs_exists"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2186
#, no-wrap
msgid ""
" int\n"
" guestfs_exists (guestfs_h *g,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2193
msgid "See also C<guestfs_is_file>, C<guestfs_is_dir>, C<guestfs_stat>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2199
msgid "guestfs_fallocate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2201
#, no-wrap
msgid ""
" int\n"
" guestfs_fallocate (guestfs_h *g,\n"
"                    const char *path,\n"
"                    int len);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2206
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_fallocate64> "
"call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2225
msgid "guestfs_fallocate64"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2227
#, no-wrap
msgid ""
" int\n"
" guestfs_fallocate64 (guestfs_h *g,\n"
"                      const char *path,\n"
"                      int64_t len);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2236
msgid ""
"Note that this call allocates disk blocks for the file.  To create a sparse "
"file use C<guestfs_truncate_size> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2239
msgid ""
"The deprecated call C<guestfs_fallocate> does the same, but owing to an "
"oversight it only allowed 30 bit lengths to be specified, effectively "
"limiting the maximum size of files created through that call to 1GB."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2250
msgid "(Added in 1.3.17)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2252
msgid "guestfs_fgrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2254
#, no-wrap
msgid ""
" char **\n"
" guestfs_fgrep (guestfs_h *g,\n"
"                const char *pattern,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2271
msgid "guestfs_fgrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2273
#, no-wrap
msgid ""
" char **\n"
" guestfs_fgrepi (guestfs_h *g,\n"
"                 const char *pattern,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2290
msgid "guestfs_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2292
#, no-wrap
msgid ""
" char *\n"
" guestfs_file (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2310
msgid ""
"See also: L<file(1)>, C<guestfs_vfs_type>, C<guestfs_lstat>, "
"C<guestfs_is_file>, C<guestfs_is_blockdev> (etc), C<guestfs_is_zero>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2318
msgid "guestfs_file_architecture"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2320
#, no-wrap
msgid ""
" char *\n"
" guestfs_file_architecture (guestfs_h *g,\n"
"                            const char *filename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2428 ../src/guestfs-actions.pod:2591 ../src/guestfs-actions.pod:2608 ../src/guestfs-actions.pod:3483 ../src/guestfs-actions.pod:3597 ../src/guestfs-actions.pod:3663 ../src/guestfs-actions.pod:3850 ../src/guestfs-actions.pod:3868 ../src/guestfs-actions.pod:3908 ../src/guestfs-actions.pod:3984 ../src/guestfs-actions.pod:4089 ../src/guestfs-actions.pod:4326 ../src/guestfs-actions.pod:4444
msgid "(Added in 1.5.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2430
msgid "guestfs_filesize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2432
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_filesize (guestfs_h *g,\n"
"                   const char *file);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2438
msgid ""
"To get other stats about a file, use C<guestfs_stat>, C<guestfs_lstat>, "
"C<guestfs_is_dir>, C<guestfs_is_file> etc.  To get the size of block "
"devices, use C<guestfs_blockdev_getsize64>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2444
msgid "(Added in 1.0.82)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2446
msgid "guestfs_fill"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2448
#, no-wrap
msgid ""
" int\n"
" guestfs_fill (guestfs_h *g,\n"
"               int c,\n"
"               int len,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2458
msgid ""
"To fill a file with zero bytes (sparsely), it is much more efficient to use "
"C<guestfs_truncate_size>.  To create a file with a pattern of repeating "
"bytes use C<guestfs_fill_pattern>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2470
msgid "(Added in 1.0.79)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2472
msgid "guestfs_fill_pattern"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2474
#, no-wrap
msgid ""
" int\n"
" guestfs_fill_pattern (guestfs_h *g,\n"
"                       const char *pattern,\n"
"                       int len,\n"
"                       const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2480
msgid ""
"This function is like C<guestfs_fill> except that it creates a new file of "
"length C<len> containing the repeating pattern of bytes in C<pattern>.  The "
"pattern is truncated if necessary to ensure the length of the file is "
"exactly C<len> bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2492
msgid "(Added in 1.3.12)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2494
msgid "guestfs_find"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2496
#, no-wrap
msgid ""
" char **\n"
" guestfs_find (guestfs_h *g,\n"
"               const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2512
msgid "then the returned list from C<guestfs_find> C</tmp> would be 4 elements:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2525
msgid "See also C<guestfs_find0>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2534 ../src/guestfs-actions.pod:5280 ../src/guestfs-actions.pod:7482
msgid "(Added in 1.0.27)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2536
msgid "guestfs_find0"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2538
#, no-wrap
msgid ""
" int\n"
" guestfs_find0 (guestfs_h *g,\n"
"                const char *directory,\n"
"                const char *files);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2547
msgid ""
"This command works the same way as C<guestfs_find> with the following "
"exceptions:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2574
msgid "(Added in 1.0.74)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2576
msgid "guestfs_findfs_label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2578
#, no-wrap
msgid ""
" char *\n"
" guestfs_findfs_label (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2586
msgid "To find the label of a filesystem, use C<guestfs_vfs_label>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2593
msgid "guestfs_findfs_uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2595
#, no-wrap
msgid ""
" char *\n"
" guestfs_findfs_uuid (guestfs_h *g,\n"
"                      const char *uuid);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2603
msgid "To find the UUID of a filesystem, use C<guestfs_vfs_uuid>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2610
msgid "guestfs_fsck"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2612
#, no-wrap
msgid ""
" int\n"
" guestfs_fsck (guestfs_h *g,\n"
"               const char *fstype,\n"
"               const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2647 ../src/guestfs-actions.pod:9576
msgid "(Added in 1.0.16)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2649
msgid "guestfs_get_append"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2651
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_append (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2659
msgid ""
"This function returns a string which may be NULL.  There is no way to return "
"an error from this function.  The string is owned by the guest handle and "
"must I<not> be freed."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2663 ../src/guestfs-actions.pod:7164 ../src/guestfs-actions.pod:7643 ../src/guestfs-actions.pod:8201 ../src/guestfs-actions.pod:8220 ../src/guestfs-actions.pod:8236 ../src/guestfs-actions.pod:8260 ../src/guestfs-actions.pod:9178 ../src/guestfs-actions.pod:9193 ../src/guestfs-actions.pod:9644
msgid "(Added in 1.0.26)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2665
msgid "guestfs_get_attach_method"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2667
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_attach_method (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2670
msgid "Return the current attach method.  See C<guestfs_set_attach_method>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2675 ../src/guestfs-actions.pod:7673
msgid "(Added in 1.9.8)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2677
msgid "guestfs_get_autosync"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2679
#, no-wrap
msgid ""
" int\n"
" guestfs_get_autosync (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2688
msgid "guestfs_get_direct"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2690
#, no-wrap
msgid ""
" int\n"
" guestfs_get_direct (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2697 ../src/guestfs-actions.pod:7714
msgid "(Added in 1.0.72)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2699
msgid "guestfs_get_e2attrs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2701
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_e2attrs (guestfs_h *g,\n"
"                      const char *file);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2808
msgid "See also C<guestfs_set_e2attrs>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2810
msgid ""
"Don't confuse these attributes with extended attributes (see "
"C<guestfs_getxattr>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2816 ../src/guestfs-actions.pod:2836 ../src/guestfs-actions.pod:7753 ../src/guestfs-actions.pod:7792
msgid "(Added in 1.17.31)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2818
msgid "guestfs_get_e2generation"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2820
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_get_e2generation (guestfs_h *g,\n"
"                           const char *file);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2832
msgid "See C<guestfs_set_e2generation>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2838
msgid "guestfs_get_e2label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2840
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_e2label (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2844
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_vfs_label> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2857 ../src/guestfs-actions.pod:2878 ../src/guestfs-actions.pod:7817 ../src/guestfs-actions.pod:7836
msgid "(Added in 1.0.15)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2859
msgid "guestfs_get_e2uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2861
#, no-wrap
msgid ""
" char *\n"
" guestfs_get_e2uuid (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2865
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_vfs_uuid> "
"call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2880
msgid "guestfs_get_memsize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2882
#, no-wrap
msgid ""
" int\n"
" guestfs_get_memsize (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2888
msgid ""
"If C<guestfs_set_memsize> was not called on this handle, and if "
"C<LIBGUESTFS_MEMSIZE> was not set, then this returns the compiled-in default "
"value for memsize."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2897 ../src/guestfs-actions.pod:5784 ../src/guestfs-actions.pod:6048 ../src/guestfs-actions.pod:6067 ../src/guestfs-actions.pod:6086 ../src/guestfs-actions.pod:6098 ../src/guestfs-actions.pod:6115 ../src/guestfs-actions.pod:6128 ../src/guestfs-actions.pod:7389 ../src/guestfs-actions.pod:7879 ../src/guestfs-actions.pod:8171 ../src/guestfs-actions.pod:8905
msgid "(Added in 1.0.55)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2899
msgid "guestfs_get_network"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2901
#, no-wrap
msgid ""
" int\n"
" guestfs_get_network (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2908 ../src/guestfs-actions.pod:7898
msgid "(Added in 1.5.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2910
msgid "guestfs_get_path"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2912
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_path (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2920 ../src/guestfs-actions.pod:2960
msgid ""
"This function returns a string, or NULL on error.  The string is owned by "
"the guest handle and must I<not> be freed."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2925
msgid "guestfs_get_pgroup"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2927
#, no-wrap
msgid ""
" int\n"
" guestfs_get_pgroup (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2934 ../src/guestfs-actions.pod:7936 ../src/guestfs-actions.pod:9477
msgid "(Added in 1.11.18)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2936
msgid "guestfs_get_pid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2938
#, no-wrap
msgid ""
" int\n"
" guestfs_get_pid (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2948
msgid "(Added in 1.0.56)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2950
msgid "guestfs_get_qemu"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2952
#, no-wrap
msgid ""
" const char *\n"
" guestfs_get_qemu (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2963 ../src/guestfs-actions.pod:7964
msgid "(Added in 1.0.6)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2965
msgid "guestfs_get_recovery_proc"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2967
#, no-wrap
msgid ""
" int\n"
" guestfs_get_recovery_proc (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2974 ../src/guestfs-actions.pod:4607 ../src/guestfs-actions.pod:4967 ../src/guestfs-actions.pod:5378 ../src/guestfs-actions.pod:5623 ../src/guestfs-actions.pod:7094 ../src/guestfs-actions.pod:7437 ../src/guestfs-actions.pod:7988 ../src/guestfs-actions.pod:8686 ../src/guestfs-actions.pod:8706 ../src/guestfs-actions.pod:9062
msgid "(Added in 1.0.77)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2976
msgid "guestfs_get_selinux"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2978
#, no-wrap
msgid ""
" int\n"
" guestfs_get_selinux (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2981
msgid ""
"This returns the current setting of the selinux flag which is passed to the "
"appliance at boot time.  See C<guestfs_set_selinux>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:2989 ../src/guestfs-actions.pod:3063 ../src/guestfs-actions.pod:8007 ../src/guestfs-actions.pod:8081
msgid "(Added in 1.0.67)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:2991
msgid "guestfs_get_smp"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:2993
#, no-wrap
msgid ""
" int\n"
" guestfs_get_smp (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3002
msgid "guestfs_get_state"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3004
#, no-wrap
msgid ""
" int\n"
" guestfs_get_state (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3016
msgid "guestfs_get_trace"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3018
#, no-wrap
msgid ""
" int\n"
" guestfs_get_trace (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3027
msgid "guestfs_get_umask"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3029
#, no-wrap
msgid ""
" int\n"
" guestfs_get_umask (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3032
msgid ""
"Return the current umask.  By default the umask is C<022> unless it has been "
"set by calling C<guestfs_umask>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3039
msgid "guestfs_get_verbose"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3041
#, no-wrap
msgid ""
" int\n"
" guestfs_get_verbose (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3050
msgid "guestfs_getcon"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3052
#, no-wrap
msgid ""
" char *\n"
" guestfs_getcon (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3057
msgid "See the documentation about SELINUX in L<guestfs(3)>, and C<guestfs_setcon>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3065
msgid "guestfs_getxattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3067
#, no-wrap
msgid ""
" char *\n"
" guestfs_getxattr (guestfs_h *g,\n"
"                   const char *path,\n"
"                   const char *name,\n"
"                   size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3073
msgid ""
"Get a single extended attribute from file C<path> named C<name>.  This call "
"follows symlinks.  If you want to lookup an extended attribute for the "
"symlink itself, use C<guestfs_lgetxattr>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3077 ../src/guestfs-actions.pod:4621
msgid ""
"Normally it is better to get all extended attributes from a file in one go "
"by calling C<guestfs_getxattrs>.  However some Linux filesystem "
"implementations are buggy and do not provide a way to list out attributes.  "
"For these filesystems (notably ntfs-3g)  you have to know the names of the "
"extended attributes you want in advance and call this function."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3087
msgid "See also: C<guestfs_getxattrs>, C<guestfs_lgetxattr>, L<attr(5)>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3089 ../src/guestfs-actions.pod:3306 ../src/guestfs-actions.pod:3798 ../src/guestfs-actions.pod:4633 ../src/guestfs-actions.pod:7087 ../src/guestfs-actions.pod:7113 ../src/guestfs-actions.pod:7294 ../src/guestfs-actions.pod:9242
msgid ""
"This function returns a buffer, or NULL on error.  The size of the returned "
"buffer is written to C<*size_r>.  I<The caller must free the returned buffer "
"after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3093 ../src/guestfs-actions.pod:4637
msgid "(Added in 1.7.24)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3095
msgid "guestfs_getxattrs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3097
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_getxattrs (guestfs_h *g,\n"
"                    const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3107
msgid "See also: C<guestfs_lgetxattrs>, L<attr(5)>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3109 ../src/guestfs-actions.pod:4649 ../src/guestfs-actions.pod:5374
msgid ""
"This function returns a C<struct guestfs_xattr_list *>, or NULL if there was "
"an error.  I<The caller must call C<guestfs_free_xattr_list> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3113 ../src/guestfs-actions.pod:4653 ../src/guestfs-actions.pod:4881 ../src/guestfs-actions.pod:4917 ../src/guestfs-actions.pod:7467 ../src/guestfs-actions.pod:8100 ../src/guestfs-actions.pod:9709
msgid "(Added in 1.0.59)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3115
msgid "guestfs_glob_expand"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3117
#, no-wrap
msgid ""
" char **\n"
" guestfs_glob_expand (guestfs_h *g,\n"
"                      const char *pattern);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3132
msgid ""
"Notice that there is no equivalent command for expanding a device name "
"(eg. C</dev/sd*>).  Use C<guestfs_list_devices>, C<guestfs_list_partitions> "
"etc functions instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3140 ../src/guestfs-actions.pod:8284 ../src/guestfs-actions.pod:8301
msgid "(Added in 1.0.50)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3142
msgid "guestfs_grep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3144
#, no-wrap
msgid ""
" char **\n"
" guestfs_grep (guestfs_h *g,\n"
"               const char *regex,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3161
msgid "guestfs_grepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3163
#, no-wrap
msgid ""
" char **\n"
" guestfs_grepi (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3180
msgid "guestfs_grub_install"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3182
#, no-wrap
msgid ""
" int\n"
" guestfs_grub_install (guestfs_h *g,\n"
"                       const char *root,\n"
"                       const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3225
msgid "(Added in 1.0.17)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3227
msgid "guestfs_head"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3229
#, no-wrap
msgid ""
" char **\n"
" guestfs_head (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3245
msgid "guestfs_head_n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3247
#, no-wrap
msgid ""
" char **\n"
" guestfs_head_n (guestfs_h *g,\n"
"                 int nrlines,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3269
msgid "guestfs_hexdump"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3271
#, no-wrap
msgid ""
" char *\n"
" guestfs_hexdump (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3284 ../src/guestfs-actions.pod:8365 ../src/guestfs-actions.pod:8420
msgid "(Added in 1.0.22)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3286
msgid "guestfs_initrd_cat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3288
#, no-wrap
msgid ""
" char *\n"
" guestfs_initrd_cat (guestfs_h *g,\n"
"                     const char *initrdpath,\n"
"                     const char *filename,\n"
"                     size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3304
msgid "See also C<guestfs_initrd_list>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3315
msgid "guestfs_initrd_list"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3317
#, no-wrap
msgid ""
" char **\n"
" guestfs_initrd_list (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3337
msgid "guestfs_inotify_add_watch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3339
#, no-wrap
msgid ""
" int64_t\n"
" guestfs_inotify_add_watch (guestfs_h *g,\n"
"                            const char *path,\n"
"                            int mask);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3358
msgid "guestfs_inotify_close"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3360
#, no-wrap
msgid ""
" int\n"
" guestfs_inotify_close (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3371
msgid "guestfs_inotify_files"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3373
#, no-wrap
msgid ""
" char **\n"
" guestfs_inotify_files (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3376
msgid ""
"This function is a helpful wrapper around C<guestfs_inotify_read> which just "
"returns a list of pathnames of objects that were touched.  The returned "
"pathnames are sorted and deduplicated."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3386
msgid "guestfs_inotify_init"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3388
#, no-wrap
msgid ""
" int\n"
" guestfs_inotify_init (guestfs_h *g,\n"
"                       int maxevents);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3396
msgid ""
"C<maxevents> is the maximum number of events which will be queued up between "
"calls to C<guestfs_inotify_read> or C<guestfs_inotify_files>.  If this is "
"passed as C<0>, then the kernel (or previously set)  default is used.  For "
"Linux 2.6.29 the default was 16384 events.  Beyond this limit, the kernel "
"throws away events, but records the fact that it threw them away by setting "
"a flag C<IN_Q_OVERFLOW> in the returned structure list (see "
"C<guestfs_inotify_read>)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3406
msgid ""
"Before any events are generated, you have to add some watches to the "
"internal watch list.  See: C<guestfs_inotify_add_watch> and "
"C<guestfs_inotify_rm_watch>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3410
msgid ""
"Queued up events should be read periodically by calling "
"C<guestfs_inotify_read> (or C<guestfs_inotify_files> which is just a helpful "
"wrapper around C<guestfs_inotify_read>).  If you don't read the events out "
"often enough then you risk the internal queue overflowing."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3417
msgid ""
"The handle should be closed after use by calling C<guestfs_inotify_close>.  "
"This also removes any watches automatically."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3430
msgid "guestfs_inotify_read"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3432
#, no-wrap
msgid ""
" struct guestfs_inotify_event_list *\n"
" guestfs_inotify_read (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3446
msgid ""
"This function returns a C<struct guestfs_inotify_event_list *>, or NULL if "
"there was an error.  I<The caller must call "
"C<guestfs_free_inotify_event_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3452
msgid "guestfs_inotify_rm_watch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3454
#, no-wrap
msgid ""
" int\n"
" guestfs_inotify_rm_watch (guestfs_h *g,\n"
"                           int wd);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3458
msgid ""
"Remove a previously defined inotify watch.  See "
"C<guestfs_inotify_add_watch>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3465
msgid "guestfs_inspect_get_arch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3467
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_arch (guestfs_h *g,\n"
"                           const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3471
msgid ""
"This returns the architecture of the inspected operating system.  The "
"possible return values are listed under C<guestfs_file_architecture>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3485
msgid "guestfs_inspect_get_distro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3487
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_distro (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3599
msgid "guestfs_inspect_get_drive_mappings"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3601
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_drive_mappings (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3630
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_mountpoints>, C<guestfs_inspect_get_filesystems>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3640 ../src/guestfs-actions.pod:4109
msgid "(Added in 1.9.17)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3642
msgid "guestfs_inspect_get_filesystems"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3644
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_filesystems (guestfs_h *g,\n"
"                                  const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3656
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_mountpoints>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3665
msgid "guestfs_inspect_get_format"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3667
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_format (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3701 ../src/guestfs-actions.pod:4145 ../src/guestfs-actions.pod:4161 ../src/guestfs-actions.pod:4179 ../src/guestfs-actions.pod:7503
msgid "(Added in 1.9.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3703
msgid "guestfs_inspect_get_hostname"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3705
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_hostname (guestfs_h *g,\n"
"                               const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3720
msgid "(Added in 1.7.9)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3722
msgid "guestfs_inspect_get_icon"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3724
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_icon (guestfs_h *g,\n"
"                           const char *root,\n"
"                           size_t *size_r,\n"
"                           ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3735
#, no-wrap
msgid ""
" GUESTFS_INSPECT_GET_ICON_FAVICON, int favicon,\n"
" GUESTFS_INSPECT_GET_ICON_HIGHQUALITY, int highquality,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3802 ../src/guestfs-actions.pod:4667 ../src/guestfs-actions.pod:6216
msgid "(Added in 1.11.12)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3804
msgid "guestfs_inspect_get_icon_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3806
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_icon_va (guestfs_h *g,\n"
"                              const char *root,\n"
"                              size_t *size_r,\n"
"                              va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3812
msgid "This is the \"va_list variant\" of L</guestfs_inspect_get_icon>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3816
msgid "guestfs_inspect_get_icon_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3818
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_icon_argv (guestfs_h *g,\n"
"                                const char *root,\n"
"                                size_t *size_r,\n"
"                                const struct guestfs_inspect_get_icon_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3824
msgid "This is the \"argv variant\" of L</guestfs_inspect_get_icon>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3828
msgid "guestfs_inspect_get_major_version"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3830
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_get_major_version (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3852
msgid "guestfs_inspect_get_minor_version"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3854
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_get_minor_version (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3863
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_major_version>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3870
msgid "guestfs_inspect_get_mountpoints"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3872
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_mountpoints (guestfs_h *g,\n"
"                                  const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3893
msgid ""
"For operating systems like Windows which still use drive letters, this call "
"will only return an entry for the first drive \"mounted on\" C</>.  For "
"information about the mapping of drive letters to partitions, see "
"C<guestfs_inspect_get_drive_mappings>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3899
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_filesystems>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3910
msgid "guestfs_inspect_get_package_format"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3912
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_package_format (guestfs_h *g,\n"
"                                     const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3916
msgid ""
"This function and C<guestfs_inspect_get_package_management> return the "
"package format and package management tool used by the inspected operating "
"system.  For example for Fedora these functions would return C<rpm> (package "
"format) and C<yum> (package management)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3935 ../src/guestfs-actions.pod:3963
msgid "(Added in 1.7.5)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3937
msgid "guestfs_inspect_get_package_management"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3939
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_package_management (guestfs_h *g,\n"
"                                         const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:3943
msgid ""
"C<guestfs_inspect_get_package_format> and this function return the package "
"format and package management tool used by the inspected operating system.  "
"For example for Fedora these functions would return C<rpm> (package format) "
"and C<yum> (package management)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3965
msgid "guestfs_inspect_get_product_name"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3967
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_product_name (guestfs_h *g,\n"
"                                   const char *root);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:3986
msgid "guestfs_inspect_get_product_variant"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:3988
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_product_variant (guestfs_h *g,\n"
"                                      const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4011
msgid ""
"Please read L<guestfs(3)/INSPECTION> for more details.  See also "
"C<guestfs_inspect_get_product_name>, C<guestfs_inspect_get_major_version>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4018
msgid "(Added in 1.9.13)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4020
msgid "guestfs_inspect_get_roots"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4022
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_get_roots (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4025
msgid ""
"This function is a convenient way to get the list of root devices, as "
"returned from a previous call to C<guestfs_inspect_os>, but without redoing "
"the whole inspection process."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4029
msgid ""
"This returns an empty list if either no root devices were found or the "
"caller has not called C<guestfs_inspect_os>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4038
msgid "(Added in 1.7.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4040
msgid "guestfs_inspect_get_type"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4042
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_type (guestfs_h *g,\n"
"                           const char *root);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4091
msgid "guestfs_inspect_get_windows_current_control_set"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4093
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_windows_current_control_set (guestfs_h *g,\n"
"                                                  const char *root);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4111
msgid "guestfs_inspect_get_windows_systemroot"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4113
#, no-wrap
msgid ""
" char *\n"
" guestfs_inspect_get_windows_systemroot (guestfs_h *g,\n"
"                                         const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4129
msgid "(Added in 1.5.25)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4131
msgid "guestfs_inspect_is_live"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4133
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_is_live (guestfs_h *g,\n"
"                          const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4137
msgid ""
"If C<guestfs_inspect_get_format> returns C<installer> (this is an install "
"disk), then this returns true if a live image was detected on the disk."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4147
msgid "guestfs_inspect_is_multipart"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4149
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_is_multipart (guestfs_h *g,\n"
"                               const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4153
msgid ""
"If C<guestfs_inspect_get_format> returns C<installer> (this is an install "
"disk), then this returns true if the disk is part of a set."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4163
msgid "guestfs_inspect_is_netinst"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4165
#, no-wrap
msgid ""
" int\n"
" guestfs_inspect_is_netinst (guestfs_h *g,\n"
"                             const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4169
msgid ""
"If C<guestfs_inspect_get_format> returns C<installer> (this is an install "
"disk), then this returns true if the disk is a network installer, ie. not a "
"self-contained install CD but one which is likely to require network access "
"to complete the install."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4181
msgid "guestfs_inspect_list_applications"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4183
#, no-wrap
msgid ""
" struct guestfs_application_list *\n"
" guestfs_inspect_list_applications (guestfs_h *g,\n"
"                                    const char *root);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4189
msgid ""
"I<Note:> This call works differently from other parts of the inspection "
"API.  You have to call C<guestfs_inspect_os>, then "
"C<guestfs_inspect_get_mountpoints>, then mount up the disks, before calling "
"this.  Listing applications is a significantly more difficult operation "
"which requires access to the full filesystem.  Also note that unlike the "
"other C<guestfs_inspect_get_*> calls which are just returning data cached in "
"the libguestfs handle, this call actually reads parts of the mounted "
"filesystems during the call."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4279
msgid ""
"This function returns a C<struct guestfs_application_list *>, or NULL if "
"there was an error.  I<The caller must call C<guestfs_free_application_list> "
"after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4283
msgid "(Added in 1.7.8)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4285
msgid "guestfs_inspect_os"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4287
#, no-wrap
msgid ""
" char **\n"
" guestfs_inspect_os (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4303
msgid ""
"You can pass the root string(s) returned to other C<guestfs_inspect_get_*> "
"functions in order to query further information about each operating system, "
"such as the name and version."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4308
msgid ""
"This function uses other libguestfs features such as C<guestfs_mount_ro> and "
"C<guestfs_umount_all> in order to mount and unmount filesystems and look at "
"the contents.  This should be called with no disks currently mounted.  The "
"function may also use Augeas, so any existing Augeas handle will be closed."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4320 ../src/guestfs-actions.pod:4678 ../src/guestfs-actions.pod:4773
msgid "See also C<guestfs_list_filesystems>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4328
msgid "guestfs_is_blockdev"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4330
#, no-wrap
msgid ""
" int\n"
" guestfs_is_blockdev (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4337 ../src/guestfs-actions.pod:4352 ../src/guestfs-actions.pod:4382 ../src/guestfs-actions.pod:4397 ../src/guestfs-actions.pod:4413 ../src/guestfs-actions.pod:4469 ../src/guestfs-actions.pod:4484
msgid "See also C<guestfs_stat>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4341 ../src/guestfs-actions.pod:4356 ../src/guestfs-actions.pod:4401 ../src/guestfs-actions.pod:4473 ../src/guestfs-actions.pod:4488
msgid "(Added in 1.5.10)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4343
msgid "guestfs_is_chardev"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4345
#, no-wrap
msgid ""
" int\n"
" guestfs_is_chardev (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4358
msgid "guestfs_is_config"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4360
#, no-wrap
msgid ""
" int\n"
" guestfs_is_config (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4372
msgid "guestfs_is_dir"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4374
#, no-wrap
msgid ""
" int\n"
" guestfs_is_dir (guestfs_h *g,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4388
msgid "guestfs_is_fifo"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4390
#, no-wrap
msgid ""
" int\n"
" guestfs_is_fifo (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4403
msgid "guestfs_is_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4405
#, no-wrap
msgid ""
" int\n"
" guestfs_is_file (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4419
msgid "guestfs_is_launching"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4421
#, no-wrap
msgid ""
" int\n"
" guestfs_is_launching (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4433
msgid "guestfs_is_lv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4435
#, no-wrap
msgid ""
" int\n"
" guestfs_is_lv (guestfs_h *g,\n"
"                const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4446
msgid "guestfs_is_ready"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4448
#, no-wrap
msgid ""
" int\n"
" guestfs_is_ready (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4460
msgid "guestfs_is_socket"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4462
#, no-wrap
msgid ""
" int\n"
" guestfs_is_socket (guestfs_h *g,\n"
"                    const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4475
msgid "guestfs_is_symlink"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4477
#, no-wrap
msgid ""
" int\n"
" guestfs_is_symlink (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4490
msgid "guestfs_is_zero"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4492
#, no-wrap
msgid ""
" int\n"
" guestfs_is_zero (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4501 ../src/guestfs-actions.pod:4515
msgid "(Added in 1.11.8)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4503
msgid "guestfs_is_zero_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4505
#, no-wrap
msgid ""
" int\n"
" guestfs_is_zero_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4517 ../src/guestfs-structs.pod:268
msgid "guestfs_isoinfo"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4519
#, no-wrap
msgid ""
" struct guestfs_isoinfo *\n"
" guestfs_isoinfo (guestfs_h *g,\n"
"                  const char *isofile);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4523
msgid ""
"This is the same as C<guestfs_isoinfo_device> except that it works for an "
"ISO file located inside some other mounted filesystem.  Note that in the "
"common case where you have added an ISO file as a libguestfs device, you "
"would I<not> call this.  Instead you would call C<guestfs_isoinfo_device>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4529 ../src/guestfs-actions.pod:4552
msgid ""
"This function returns a C<struct guestfs_isoinfo *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_isoinfo> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4533 ../src/guestfs-actions.pod:4556
msgid "(Added in 1.17.19)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4535
msgid "guestfs_isoinfo_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4537
#, no-wrap
msgid ""
" struct guestfs_isoinfo *\n"
" guestfs_isoinfo_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4558
msgid "guestfs_kill_subprocess"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4560
#, no-wrap
msgid ""
" int\n"
" guestfs_kill_subprocess (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4569
msgid "guestfs_launch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4571
#, no-wrap
msgid ""
" int\n"
" guestfs_launch (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4589
msgid "guestfs_lchown"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4591
#, no-wrap
msgid ""
" int\n"
" guestfs_lchown (guestfs_h *g,\n"
"                 int owner,\n"
"                 int group,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4597
msgid ""
"Change the file owner to C<owner> and group to C<group>.  This is like "
"C<guestfs_chown> but if C<path> is a symlink then the link itself is "
"changed, not the target."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4609
msgid "guestfs_lgetxattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4611
#, no-wrap
msgid ""
" char *\n"
" guestfs_lgetxattr (guestfs_h *g,\n"
"                    const char *path,\n"
"                    const char *name,\n"
"                    size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4631
msgid "See also: C<guestfs_lgetxattrs>, C<guestfs_getxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4639
msgid "guestfs_lgetxattrs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4641
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_lgetxattrs (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4645
msgid ""
"This is the same as C<guestfs_getxattrs>, but if C<path> is a symbolic link, "
"then it returns the extended attributes of the link itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4655
msgid "guestfs_list_9p"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4657
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_9p (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4669
msgid "guestfs_list_devices"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4671
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_devices (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4686
msgid "guestfs_list_dm_devices"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4688
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_dm_devices (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4693
msgid ""
"The returned list contains C</dev/mapper/*> devices, eg. ones created by a "
"previous call to C<guestfs_luks_open>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4696
msgid ""
"Device mapper devices which correspond to logical volumes are I<not> "
"returned in this list.  Call C<guestfs_lvs> if you want to list logical "
"volumes."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4704 ../src/guestfs-actions.pod:6676
msgid "(Added in 1.11.15)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4706
msgid "guestfs_list_filesystems"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4708
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_filesystems (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4728
msgid ""
"This command runs other libguestfs commands, which might include "
"C<guestfs_mount> and C<guestfs_umount>, and therefore you should use this "
"soon after launch and only when nothing is mounted."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4732
msgid ""
"Not all of the filesystems returned will be mountable.  In particular, swap "
"partitions are returned in the list.  Also this command does not check that "
"each filesystem found is valid and mountable, and some filesystems might be "
"mountable but require special options.  Filesystems may not all belong to a "
"single logical operating system (use C<guestfs_inspect_os> to look for "
"OSes)."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4746 ../src/guestfs-actions.pod:7036
msgid "(Added in 1.5.15)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4748
msgid "guestfs_list_md_devices"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4750
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_md_devices (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4759 ../src/guestfs-actions.pod:8806
msgid "(Added in 1.15.4)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4761
msgid "guestfs_list_partitions"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4763
#, no-wrap
msgid ""
" char **\n"
" guestfs_list_partitions (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4770
msgid ""
"This does not return logical volumes.  For that you will need to call "
"C<guestfs_lvs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4781
msgid "guestfs_ll"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4783
#, no-wrap
msgid ""
" char *\n"
" guestfs_ll (guestfs_h *g,\n"
"             const char *directory);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4798
msgid "guestfs_llz"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4800
#, no-wrap
msgid ""
" char *\n"
" guestfs_llz (guestfs_h *g,\n"
"              const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4812 ../src/guestfs-actions.pod:9437
msgid "(Added in 1.17.6)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4814
msgid "guestfs_ln"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4816
#, no-wrap
msgid ""
" int\n"
" guestfs_ln (guestfs_h *g,\n"
"             const char *target,\n"
"             const char *linkname);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4827
msgid "guestfs_ln_f"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4829
#, no-wrap
msgid ""
" int\n"
" guestfs_ln_f (guestfs_h *g,\n"
"               const char *target,\n"
"               const char *linkname);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4841
msgid "guestfs_ln_s"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4843
#, no-wrap
msgid ""
" int\n"
" guestfs_ln_s (guestfs_h *g,\n"
"               const char *target,\n"
"               const char *linkname);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4854
msgid "guestfs_ln_sf"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4856
#, no-wrap
msgid ""
" int\n"
" guestfs_ln_sf (guestfs_h *g,\n"
"                const char *target,\n"
"                const char *linkname);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4868
msgid "guestfs_lremovexattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4870
#, no-wrap
msgid ""
" int\n"
" guestfs_lremovexattr (guestfs_h *g,\n"
"                       const char *xattr,\n"
"                       const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4875
msgid ""
"This is the same as C<guestfs_removexattr>, but if C<path> is a symbolic "
"link, then it removes an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4883
msgid "guestfs_ls"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4885
#, no-wrap
msgid ""
" char **\n"
" guestfs_ls (guestfs_h *g,\n"
"             const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4893
msgid ""
"This command is mostly useful for interactive sessions.  Programs should "
"probably use C<guestfs_readdir> instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4902
msgid "guestfs_lsetxattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4904
#, no-wrap
msgid ""
" int\n"
" guestfs_lsetxattr (guestfs_h *g,\n"
"                    const char *xattr,\n"
"                    const char *val,\n"
"                    int vallen,\n"
"                    const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4911
msgid ""
"This is the same as C<guestfs_setxattr>, but if C<path> is a symbolic link, "
"then it sets an extended attribute of the link itself."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4919
msgid "guestfs_lstat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4921
#, no-wrap
msgid ""
" struct guestfs_stat *\n"
" guestfs_lstat (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4927
msgid ""
"This is the same as C<guestfs_stat> except that if C<path> is a symbolic "
"link, then the link is stat-ed, not the file it refers to."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4933 ../src/guestfs-actions.pod:8325
msgid ""
"This function returns a C<struct guestfs_stat *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_stat> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4937 ../src/guestfs-actions.pod:8329 ../src/guestfs-actions.pod:8347 ../src/guestfs-actions.pod:8850
msgid "(Added in 0.9.2)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4939
msgid "guestfs_lstatlist"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4941
#, no-wrap
msgid ""
" struct guestfs_stat_list *\n"
" guestfs_lstatlist (guestfs_h *g,\n"
"                    const char *path,\n"
"                    char *const *names);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4946
msgid ""
"This call allows you to perform the C<guestfs_lstat> operation on multiple "
"files, where all files are in the directory C<path>.  C<names> is the list "
"of files from this directory."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4955
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also C<guestfs_lxattrlist> "
"for a similarly efficient call for getting extended attributes.  Very long "
"directory listings might cause the protocol message size to be exceeded, "
"causing this call to fail.  The caller must split up such requests into "
"smaller groups of names."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4963
msgid ""
"This function returns a C<struct guestfs_stat_list *>, or NULL if there was "
"an error.  I<The caller must call C<guestfs_free_stat_list> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4969
msgid "guestfs_luks_add_key"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4971
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_add_key (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const char *key,\n"
"                       const char *newkey,\n"
"                       int keyslot);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4983
msgid ""
"Note that if C<keyslot> already contains a key, then this command will "
"fail.  You have to use C<guestfs_luks_kill_slot> first to remove that key."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4989 ../src/guestfs-actions.pod:5026 ../src/guestfs-actions.pod:5046 ../src/guestfs-actions.pod:5066 ../src/guestfs-actions.pod:5101 ../src/guestfs-actions.pod:5120
msgid ""
"This function takes a key or passphrase parameter which could contain "
"sensitive material.  Read the section L</KEYS AND PASSPHRASES> for more "
"information."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:4993 ../src/guestfs-actions.pod:5030 ../src/guestfs-actions.pod:5050 ../src/guestfs-actions.pod:5070
msgid "(Added in 1.5.2)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:4995
msgid "guestfs_luks_close"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:4997
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_close (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5001
msgid ""
"This closes a LUKS device that was created earlier by C<guestfs_luks_open> "
"or C<guestfs_luks_open_ro>.  The C<device> parameter must be the name of the "
"LUKS mapping device (ie. C</dev/mapper/mapname>) and I<not> the name of the "
"underlying block device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5009 ../src/guestfs-actions.pod:5105 ../src/guestfs-actions.pod:5124 ../src/guestfs-actions.pod:5191 ../src/guestfs-actions.pod:5236
msgid "(Added in 1.5.1)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5011
msgid "guestfs_luks_format"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5013
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_format (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const char *key,\n"
"                      int keyslot);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5032
msgid "guestfs_luks_format_cipher"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5034
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_format_cipher (guestfs_h *g,\n"
"                             const char *device,\n"
"                             const char *key,\n"
"                             int keyslot,\n"
"                             const char *cipher);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5041
msgid ""
"This command is the same as C<guestfs_luks_format> but it also allows you to "
"set the C<cipher> used."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5052
msgid "guestfs_luks_kill_slot"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5054
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_kill_slot (guestfs_h *g,\n"
"                         const char *device,\n"
"                         const char *key,\n"
"                         int keyslot);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5072
msgid "guestfs_luks_open"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5074
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_open (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *key,\n"
"                    const char *mapname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5092
msgid ""
"If this block device contains LVM volume groups, then calling "
"C<guestfs_vgscan> followed by C<guestfs_vg_activate_all> will make them "
"visible."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5096
msgid "Use C<guestfs_list_dm_devices> to list all device mapper devices."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5107
msgid "guestfs_luks_open_ro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5109
#, no-wrap
msgid ""
" int\n"
" guestfs_luks_open_ro (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const char *key,\n"
"                       const char *mapname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5115
msgid ""
"This is the same as C<guestfs_luks_open> except that a read-only mapping is "
"created."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5126
msgid "guestfs_lvcreate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5128
#, no-wrap
msgid ""
" int\n"
" guestfs_lvcreate (guestfs_h *g,\n"
"                   const char *logvol,\n"
"                   const char *volgroup,\n"
"                   int mbytes);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5141
msgid "guestfs_lvcreate_free"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5143
#, no-wrap
msgid ""
" int\n"
" guestfs_lvcreate_free (guestfs_h *g,\n"
"                        const char *logvol,\n"
"                        const char *volgroup,\n"
"                        int percent);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5156 ../src/guestfs-actions.pod:9623
msgid "(Added in 1.17.18)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5158
msgid "guestfs_lvm_canonical_lv_name"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5160
#, no-wrap
msgid ""
" char *\n"
" guestfs_lvm_canonical_lv_name (guestfs_h *g,\n"
"                                const char *lvname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5171
msgid "See also C<guestfs_is_lv>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5176
msgid "(Added in 1.5.24)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5178
msgid "guestfs_lvm_clear_filter"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5180
#, no-wrap
msgid ""
" int\n"
" guestfs_lvm_clear_filter (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5183
msgid ""
"This undoes the effect of C<guestfs_lvm_set_filter>.  LVM will be able to "
"see every block device."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5193
msgid "guestfs_lvm_remove_all"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5195
#, no-wrap
msgid ""
" int\n"
" guestfs_lvm_remove_all (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5205
msgid "guestfs_lvm_set_filter"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5207
#, no-wrap
msgid ""
" int\n"
" guestfs_lvm_set_filter (guestfs_h *g,\n"
"                         char *const *devices);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5238
msgid "guestfs_lvremove"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5240
#, no-wrap
msgid ""
" int\n"
" guestfs_lvremove (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5252 ../src/guestfs-actions.pod:7151 ../src/guestfs-actions.pod:9281
msgid "(Added in 1.0.13)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5254
msgid "guestfs_lvrename"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5256
#, no-wrap
msgid ""
" int\n"
" guestfs_lvrename (guestfs_h *g,\n"
"                   const char *logvol,\n"
"                   const char *newlogvol);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5265 ../src/guestfs-actions.pod:9294
msgid "(Added in 1.0.83)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5267
msgid "guestfs_lvresize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5269
#, no-wrap
msgid ""
" int\n"
" guestfs_lvresize (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int mbytes);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5282
msgid "guestfs_lvresize_free"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5284
#, no-wrap
msgid ""
" int\n"
" guestfs_lvresize_free (guestfs_h *g,\n"
"                        const char *lv,\n"
"                        int percent);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5297
msgid "(Added in 1.3.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5299
msgid "guestfs_lvs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5301
#, no-wrap
msgid ""
" char **\n"
" guestfs_lvs (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5310
msgid "See also C<guestfs_lvs_full>, C<guestfs_list_filesystems>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5318
msgid "guestfs_lvs_full"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5320
#, no-wrap
msgid ""
" struct guestfs_lvm_lv_list *\n"
" guestfs_lvs_full (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5326
msgid ""
"This function returns a C<struct guestfs_lvm_lv_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_lvm_lv_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5332
msgid "guestfs_lvuuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5334
#, no-wrap
msgid ""
" char *\n"
" guestfs_lvuuid (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5345
msgid "guestfs_lxattrlist"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5347
#, no-wrap
msgid ""
" struct guestfs_xattr_list *\n"
" guestfs_lxattrlist (guestfs_h *g,\n"
"                     const char *path,\n"
"                     char *const *names);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5366
msgid ""
"This call is intended for programs that want to efficiently list a directory "
"contents without making many round-trips.  See also C<guestfs_lstatlist> for "
"a similarly efficient call for getting standard stats.  Very long directory "
"listings might cause the protocol message size to be exceeded, causing this "
"call to fail.  The caller must split up such requests into smaller groups of "
"names."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5380
msgid "guestfs_md_create"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5382
#, no-wrap
msgid ""
" int\n"
" guestfs_md_create (guestfs_h *g,\n"
"                    const char *name,\n"
"                    char *const *devices,\n"
"                    ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5393
#, no-wrap
msgid ""
" GUESTFS_MD_CREATE_MISSINGBITMAP, int64_t missingbitmap,\n"
" GUESTFS_MD_CREATE_NRDEVICES, int nrdevices,\n"
" GUESTFS_MD_CREATE_SPARE, int spare,\n"
" GUESTFS_MD_CREATE_CHUNK, int64_t chunk,\n"
" GUESTFS_MD_CREATE_LEVEL, const char *level,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5455 ../src/guestfs-actions.pod:5521 ../src/guestfs-actions.pod:5591
msgid "(Added in 1.15.6)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5457
msgid "guestfs_md_create_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5459
#, no-wrap
msgid ""
" int\n"
" guestfs_md_create_va (guestfs_h *g,\n"
"                       const char *name,\n"
"                       char *const *devices,\n"
"                       va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5465
msgid "This is the \"va_list variant\" of L</guestfs_md_create>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5469
msgid "guestfs_md_create_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5471
#, no-wrap
msgid ""
" int\n"
" guestfs_md_create_argv (guestfs_h *g,\n"
"                         const char *name,\n"
"                         char *const *devices,\n"
"                         const struct guestfs_md_create_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5477
msgid "This is the \"argv variant\" of L</guestfs_md_create>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5481
msgid "guestfs_md_detail"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5483
#, no-wrap
msgid ""
" char **\n"
" guestfs_md_detail (guestfs_h *g,\n"
"                    const char *md);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5523
msgid "guestfs_md_stat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5525
#, no-wrap
msgid ""
" struct guestfs_mdstat_list *\n"
" guestfs_md_stat (guestfs_h *g,\n"
"                  const char *md);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5532
msgid "To get a list of software RAID devices, call C<guestfs_list_md_devices>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5574
msgid ""
"This function returns a C<struct guestfs_mdstat_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_mdstat_list> after "
"use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5578
msgid "(Added in 1.17.21)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5580
msgid "guestfs_md_stop"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5582
#, no-wrap
msgid ""
" int\n"
" guestfs_md_stop (guestfs_h *g,\n"
"                  const char *md);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5593
msgid "guestfs_mkdir"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5595
#, no-wrap
msgid ""
" int\n"
" guestfs_mkdir (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5605
msgid "guestfs_mkdir_mode"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5607
#, no-wrap
msgid ""
" int\n"
" guestfs_mkdir_mode (guestfs_h *g,\n"
"                     const char *path,\n"
"                     int mode);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5619
msgid "See also C<guestfs_mkdir>, C<guestfs_umask>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5625
msgid "guestfs_mkdir_p"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5627
#, no-wrap
msgid ""
" int\n"
" guestfs_mkdir_p (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5638
msgid "guestfs_mkdtemp"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5640
#, no-wrap
msgid ""
" char *\n"
" guestfs_mkdtemp (guestfs_h *g,\n"
"                  const char *tmpl);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5668
msgid "guestfs_mke2fs_J"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5670
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_J (guestfs_h *g,\n"
"                   const char *fstype,\n"
"                   int blocksize,\n"
"                   const char *device,\n"
"                   const char *journal);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5683
msgid "See also C<guestfs_mke2journal>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5687 ../src/guestfs-actions.pod:5705 ../src/guestfs-actions.pod:5723 ../src/guestfs-actions.pod:5739 ../src/guestfs-actions.pod:5753 ../src/guestfs-actions.pod:5767 ../src/guestfs-actions.pod:5826 ../src/guestfs-actions.pod:6158
msgid "(Added in 1.0.68)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5689
msgid "guestfs_mke2fs_JL"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5691
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_JL (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    int blocksize,\n"
"                    const char *device,\n"
"                    const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5701
msgid "See also C<guestfs_mke2journal_L>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5707
msgid "guestfs_mke2fs_JU"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5709
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2fs_JU (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    int blocksize,\n"
"                    const char *device,\n"
"                    const char *uuid);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5719
msgid "See also C<guestfs_mke2journal_U>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5725
msgid "guestfs_mke2journal"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5727
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2journal (guestfs_h *g,\n"
"                      int blocksize,\n"
"                      const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5741
msgid "guestfs_mke2journal_L"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5743
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2journal_L (guestfs_h *g,\n"
"                        int blocksize,\n"
"                        const char *label,\n"
"                        const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5755
msgid "guestfs_mke2journal_U"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5757
#, no-wrap
msgid ""
" int\n"
" guestfs_mke2journal_U (guestfs_h *g,\n"
"                        int blocksize,\n"
"                        const char *uuid,\n"
"                        const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5769
msgid "guestfs_mkfifo"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5771
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfifo (guestfs_h *g,\n"
"                 int mode,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5776
msgid ""
"This call creates a FIFO (named pipe) called C<path> with mode C<mode>.  It "
"is just a convenient wrapper around C<guestfs_mknod>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5786
msgid "guestfs_mkfs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5788
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs (guestfs_h *g,\n"
"               const char *fstype,\n"
"               const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5801
msgid "guestfs_mkfs_b"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5803
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_b (guestfs_h *g,\n"
"                 const char *fstype,\n"
"                 int blocksize,\n"
"                 const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5809
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_mkfs_opts> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5816
msgid ""
"This call is similar to C<guestfs_mkfs>, but it allows you to control the "
"block size of the resulting filesystem.  Supported block sizes depend on the "
"filesystem type, but typically they are C<1024>, C<2048> or C<4096> only."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5828
msgid "guestfs_mkfs_btrfs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5830
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_btrfs (guestfs_h *g,\n"
"                     char *const *devices,\n"
"                     ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5840
#, no-wrap
msgid ""
" GUESTFS_MKFS_BTRFS_ALLOCSTART, int64_t allocstart,\n"
" GUESTFS_MKFS_BTRFS_BYTECOUNT, int64_t bytecount,\n"
" GUESTFS_MKFS_BTRFS_DATATYPE, const char *datatype,\n"
" GUESTFS_MKFS_BTRFS_LEAFSIZE, int leafsize,\n"
" GUESTFS_MKFS_BTRFS_LABEL, const char *label,\n"
" GUESTFS_MKFS_BTRFS_METADATA, const char *metadata,\n"
" GUESTFS_MKFS_BTRFS_NODESIZE, int nodesize,\n"
" GUESTFS_MKFS_BTRFS_SECTORSIZE, int sectorsize,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5855
msgid "To create general filesystems, use C<guestfs_mkfs_opts>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5859
msgid "(Added in 1.17.25)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5861
msgid "guestfs_mkfs_btrfs_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5863
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_btrfs_va (guestfs_h *g,\n"
"                        char *const *devices,\n"
"                        va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5868
msgid "This is the \"va_list variant\" of L</guestfs_mkfs_btrfs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5872
msgid "guestfs_mkfs_btrfs_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5874
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_btrfs_argv (guestfs_h *g,\n"
"                          char *const *devices,\n"
"                          const struct guestfs_mkfs_btrfs_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5879
msgid "This is the \"argv variant\" of L</guestfs_mkfs_btrfs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5883
msgid "guestfs_mkfs_opts"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5885
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_opts (guestfs_h *g,\n"
"                    const char *fstype,\n"
"                    const char *device,\n"
"                    ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5896
#, no-wrap
msgid ""
" GUESTFS_MKFS_OPTS_BLOCKSIZE, int blocksize,\n"
" GUESTFS_MKFS_OPTS_FEATURES, const char *features,\n"
" GUESTFS_MKFS_OPTS_INODE, int inode,\n"
" GUESTFS_MKFS_OPTS_SECTORSIZE, int sectorsize,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5944
msgid "(Added in 1.7.19)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5946
msgid "guestfs_mkfs_opts_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5948
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_opts_va (guestfs_h *g,\n"
"                       const char *fstype,\n"
"                       const char *device,\n"
"                       va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5954
msgid "This is the \"va_list variant\" of L</guestfs_mkfs_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5958
msgid "guestfs_mkfs_opts_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5960
#, no-wrap
msgid ""
" int\n"
" guestfs_mkfs_opts_argv (guestfs_h *g,\n"
"                         const char *fstype,\n"
"                         const char *device,\n"
"                         const struct guestfs_mkfs_opts_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5966
msgid "This is the \"argv variant\" of L</guestfs_mkfs_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:5970
msgid "guestfs_mkmountpoint"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:5972
#, no-wrap
msgid ""
" int\n"
" guestfs_mkmountpoint (guestfs_h *g,\n"
"                       const char *exemptpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:5976
msgid ""
"C<guestfs_mkmountpoint> and C<guestfs_rmmountpoint> are specialized calls "
"that can be used to create extra mountpoints before mounting the first "
"filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6000
msgid ""
"C<guestfs_mkmountpoint> is not compatible with C<guestfs_umount_all>.  You "
"may get unexpected errors if you try to mix these calls.  It is safest to "
"manually unmount filesystems and remove mountpoints after use."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6004
msgid ""
"C<guestfs_umount_all> unmounts filesystems by sorting the paths longest "
"first, so for this to work for manual mountpoints, you must ensure that the "
"innermost mountpoints have the longest pathnames, as in the example code "
"above."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6011
msgid ""
"Autosync [see C<guestfs_set_autosync>, this is set by default on handles] "
"can cause C<guestfs_umount_all> to be called when the handle is closed which "
"can also trigger these issues."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6017 ../src/guestfs-actions.pod:6417 ../src/guestfs-actions.pod:7571
msgid "(Added in 1.0.62)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6019
msgid "guestfs_mknod"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6021
#, no-wrap
msgid ""
" int\n"
" guestfs_mknod (guestfs_h *g,\n"
"                int mode,\n"
"                int devmajor,\n"
"                int devminor,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6036
msgid ""
"Note that, just like L<mknod(2)>, the mode must be bitwise OR'd with "
"S_IFBLK, S_IFCHR, S_IFIFO or S_IFSOCK (otherwise this call just creates a "
"regular file).  These constants are available in the standard Linux header "
"files, or you can use C<guestfs_mknod_b>, C<guestfs_mknod_c> or "
"C<guestfs_mkfifo> which are wrappers around this command which bitwise OR in "
"the appropriate constant for you."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6050
msgid "guestfs_mknod_b"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6052
#, no-wrap
msgid ""
" int\n"
" guestfs_mknod_b (guestfs_h *g,\n"
"                  int mode,\n"
"                  int devmajor,\n"
"                  int devminor,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6059
msgid ""
"This call creates a block device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around C<guestfs_mknod>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6069
msgid "guestfs_mknod_c"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6071
#, no-wrap
msgid ""
" int\n"
" guestfs_mknod_c (guestfs_h *g,\n"
"                  int mode,\n"
"                  int devmajor,\n"
"                  int devminor,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6078
msgid ""
"This call creates a char device node called C<path> with mode C<mode> and "
"device major/minor C<devmajor> and C<devminor>.  It is just a convenient "
"wrapper around C<guestfs_mknod>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6088
msgid "guestfs_mkswap"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6090
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6100
msgid "guestfs_mkswap_L"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6102
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_L (guestfs_h *g,\n"
"                   const char *label,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6117
msgid "guestfs_mkswap_U"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6119
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_U (guestfs_h *g,\n"
"                   const char *uuid,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6130
msgid "guestfs_mkswap_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6132
#, no-wrap
msgid ""
" int\n"
" guestfs_mkswap_file (guestfs_h *g,\n"
"                      const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6138
msgid ""
"This command just writes a swap file signature to an existing file.  To "
"create the file itself, use something like C<guestfs_fallocate>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6145
msgid "guestfs_modprobe"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6147
#, no-wrap
msgid ""
" int\n"
" guestfs_modprobe (guestfs_h *g,\n"
"                   const char *modulename);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6160
msgid "guestfs_mount"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6162
#, no-wrap
msgid ""
" int\n"
" guestfs_mount (guestfs_h *g,\n"
"                const char *device,\n"
"                const char *mountpoint);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6181
msgid ""
"Before libguestfs 1.13.16, this call implicitly added the options C<sync> "
"and C<noatime>.  The C<sync> option greatly slowed writes and caused many "
"problems for users.  If your program might need to work with older versions "
"of libguestfs, use C<guestfs_mount_options> instead (using an empty string "
"for the first parameter if you don't want any options)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6192
msgid "guestfs_mount_9p"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6194
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_9p (guestfs_h *g,\n"
"                   const char *mounttag,\n"
"                   const char *mountpoint,\n"
"                   ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6205
#, no-wrap
msgid ""
" GUESTFS_MOUNT_9P_OPTIONS, const char *options,\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6218
msgid "guestfs_mount_9p_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6220
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_9p_va (guestfs_h *g,\n"
"                      const char *mounttag,\n"
"                      const char *mountpoint,\n"
"                      va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6226
msgid "This is the \"va_list variant\" of L</guestfs_mount_9p>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6230
msgid "guestfs_mount_9p_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6232
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_9p_argv (guestfs_h *g,\n"
"                        const char *mounttag,\n"
"                        const char *mountpoint,\n"
"                        const struct guestfs_mount_9p_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6238
msgid "This is the \"argv variant\" of L</guestfs_mount_9p>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6242
msgid "guestfs_mount_local"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6244
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_local (guestfs_h *g,\n"
"                      const char *localmountpoint,\n"
"                      ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6254
#, no-wrap
msgid ""
" GUESTFS_MOUNT_LOCAL_READONLY, int readonly,\n"
" GUESTFS_MOUNT_LOCAL_OPTIONS, const char *options,\n"
" GUESTFS_MOUNT_LOCAL_CACHETIMEOUT, int cachetimeout,\n"
" GUESTFS_MOUNT_LOCAL_DEBUGCALLS, int debugcalls,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6277
msgid ""
"When C<guestfs_mount_local> returns, the filesystem is ready, but is not "
"processing requests (access to it will block).  You have to call "
"C<guestfs_mount_local_run> to run the main loop."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6285 ../src/guestfs-actions.pod:6334 ../src/guestfs-actions.pod:8954
msgid "(Added in 1.17.22)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6287
msgid "guestfs_mount_local_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6289
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_local_va (guestfs_h *g,\n"
"                         const char *localmountpoint,\n"
"                         va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6294
msgid "This is the \"va_list variant\" of L</guestfs_mount_local>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6298
msgid "guestfs_mount_local_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6300
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_local_argv (guestfs_h *g,\n"
"                           const char *localmountpoint,\n"
"                           const struct guestfs_mount_local_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6305
msgid "This is the \"argv variant\" of L</guestfs_mount_local>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6309
msgid "guestfs_mount_local_run"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6311
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_local_run (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6317
msgid ""
"This should only be called after C<guestfs_mount_local> returns "
"successfully.  The call will not return until the filesystem is unmounted."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6321
msgid ""
"B<Note> you must I<not> make concurrent libguestfs calls on the same handle "
"from another thread, with the exception of C<guestfs_umount_local>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6325
msgid ""
"You may call this from a different thread than the one which called "
"C<guestfs_mount_local>, subject to the usual rules for threads and "
"libguestfs (see L<guestfs(3)/MULTIPLE HANDLES AND MULTIPLE THREADS>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6336
msgid "guestfs_mount_loop"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6338
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_loop (guestfs_h *g,\n"
"                     const char *file,\n"
"                     const char *mountpoint);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6351
msgid "guestfs_mount_options"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6353
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_options (guestfs_h *g,\n"
"                        const char *options,\n"
"                        const char *device,\n"
"                        const char *mountpoint);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6359
msgid ""
"This is the same as the C<guestfs_mount> command, but it allows you to set "
"the mount options as for the L<mount(8)> I<-o> flag."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6369 ../src/guestfs-actions.pod:6383 ../src/guestfs-actions.pod:6400
msgid "(Added in 1.0.10)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6371
msgid "guestfs_mount_ro"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6373
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_ro (guestfs_h *g,\n"
"                   const char *device,\n"
"                   const char *mountpoint);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6378
msgid ""
"This is the same as the C<guestfs_mount> command, but it mounts the "
"filesystem with the read-only (I<-o ro>) flag."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6385
msgid "guestfs_mount_vfs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6387
#, no-wrap
msgid ""
" int\n"
" guestfs_mount_vfs (guestfs_h *g,\n"
"                    const char *options,\n"
"                    const char *vfstype,\n"
"                    const char *device,\n"
"                    const char *mountpoint);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6394
msgid ""
"This is the same as the C<guestfs_mount> command, but it allows you to set "
"both the mount options and the vfstype as for the L<mount(8)> I<-o> and "
"I<-t> flags."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6402
msgid "guestfs_mountpoints"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6404
#, no-wrap
msgid ""
" char **\n"
" guestfs_mountpoints (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6407
msgid ""
"This call is similar to C<guestfs_mounts>.  That call returns a list of "
"devices.  This one returns a hash table (map) of device name to directory "
"where the device is mounted."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6419
msgid "guestfs_mounts"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6421
#, no-wrap
msgid ""
" char **\n"
" guestfs_mounts (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6429
msgid "See also: C<guestfs_mountpoints>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6437
msgid "guestfs_mv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6439
#, no-wrap
msgid ""
" int\n"
" guestfs_mv (guestfs_h *g,\n"
"             const char *src,\n"
"             const char *dest);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6451
msgid "guestfs_ntfs_3g_probe"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6453
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfs_3g_probe (guestfs_h *g,\n"
"                        int rw,\n"
"                        const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6472
msgid "(Added in 1.0.43)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6474
msgid "guestfs_ntfsclone_in"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6476
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsclone_in (guestfs_h *g,\n"
"                       const char *backupfile,\n"
"                       const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6481
msgid ""
"Restore the C<backupfile> (from a previous call to C<guestfs_ntfsclone_out>) "
"to C<device>, overwriting any existing contents of this device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6487 ../src/guestfs-actions.pod:6525 ../src/guestfs-actions.pod:6577 ../src/guestfs-actions.pod:7858
msgid "(Added in 1.17.9)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6489
msgid "guestfs_ntfsclone_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6491
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsclone_out (guestfs_h *g,\n"
"                        const char *device,\n"
"                        const char *backupfile,\n"
"                        ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6502
#, no-wrap
msgid ""
" GUESTFS_NTFSCLONE_OUT_METADATAONLY, int metadataonly,\n"
" GUESTFS_NTFSCLONE_OUT_RESCUE, int rescue,\n"
" GUESTFS_NTFSCLONE_OUT_IGNOREFSCHECK, int ignorefscheck,\n"
" GUESTFS_NTFSCLONE_OUT_PRESERVETIMESTAMPS, int preservetimestamps,\n"
" GUESTFS_NTFSCLONE_OUT_FORCE, int force,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6520
msgid "Use C<guestfs_ntfsclone_in> to restore the file back to a libguestfs device."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6527
msgid "guestfs_ntfsclone_out_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6529
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsclone_out_va (guestfs_h *g,\n"
"                           const char *device,\n"
"                           const char *backupfile,\n"
"                           va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6535
msgid "This is the \"va_list variant\" of L</guestfs_ntfsclone_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6539
msgid "guestfs_ntfsclone_out_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6541
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsclone_out_argv (guestfs_h *g,\n"
"                             const char *device,\n"
"                             const char *backupfile,\n"
"                             const struct guestfs_ntfsclone_out_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6547
msgid "This is the \"argv variant\" of L</guestfs_ntfsclone_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6551
msgid "guestfs_ntfsfix"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6553
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsfix (guestfs_h *g,\n"
"                  const char *device,\n"
"                  ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6563
#, no-wrap
msgid ""
" GUESTFS_NTFSFIX_CLEARBADSECTORS, int clearbadsectors,\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6579
msgid "guestfs_ntfsfix_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6581
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsfix_va (guestfs_h *g,\n"
"                     const char *device,\n"
"                     va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6586
msgid "This is the \"va_list variant\" of L</guestfs_ntfsfix>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6590
msgid "guestfs_ntfsfix_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6592
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsfix_argv (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const struct guestfs_ntfsfix_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6597
msgid "This is the \"argv variant\" of L</guestfs_ntfsfix>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6601
msgid "guestfs_ntfsresize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6603
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize (guestfs_h *g,\n"
"                     const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6607 ../src/guestfs-actions.pod:6707
msgid ""
"I<This function is deprecated.> In new code, use the "
"L</guestfs_ntfsresize_opts> call instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6631
msgid "guestfs_ntfsresize_opts"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6633
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize_opts (guestfs_h *g,\n"
"                          const char *device,\n"
"                          ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6643
#, no-wrap
msgid ""
" GUESTFS_NTFSRESIZE_OPTS_SIZE, int64_t size,\n"
" GUESTFS_NTFSRESIZE_OPTS_FORCE, int force,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6663
msgid ""
"After the resize operation, the filesystem is always marked as requiring a "
"consistency check (for safety).  You have to boot into Windows to perform "
"this check and clear this condition.  If you I<don't> set the C<force> "
"option then it is not possible to call C<guestfs_ntfsresize_opts> multiple "
"times on a single filesystem without booting into Windows between each "
"resize."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6678
msgid "guestfs_ntfsresize_opts_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6680
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize_opts_va (guestfs_h *g,\n"
"                             const char *device,\n"
"                             va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6685
msgid "This is the \"va_list variant\" of L</guestfs_ntfsresize_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6689
msgid "guestfs_ntfsresize_opts_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6691
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize_opts_argv (guestfs_h *g,\n"
"                               const char *device,\n"
"                               const struct guestfs_ntfsresize_opts_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6696
msgid "This is the \"argv variant\" of L</guestfs_ntfsresize_opts>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6700
msgid "guestfs_ntfsresize_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6702
#, no-wrap
msgid ""
" int\n"
" guestfs_ntfsresize_size (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6714
msgid ""
"This command is the same as C<guestfs_ntfsresize> except that it allows you "
"to specify the new size (in bytes) explicitly."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6719 ../src/guestfs-actions.pod:7178 ../src/guestfs-actions.pod:7251 ../src/guestfs-actions.pod:7519 ../src/guestfs-actions.pod:9457
msgid "(Added in 1.3.14)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6721
msgid "guestfs_part_add"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6723
#, no-wrap
msgid ""
" int\n"
" guestfs_part_add (guestfs_h *g,\n"
"                   const char *device,\n"
"                   const char *prlogex,\n"
"                   int64_t startsect,\n"
"                   int64_t endsect);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6730
msgid ""
"This command adds a partition to C<device>.  If there is no partition table "
"on the device, call C<guestfs_part_init> first."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6742
msgid ""
"Creating a partition which covers the whole disk is not so easy.  Use "
"C<guestfs_part_disk> to do that."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6747 ../src/guestfs-actions.pod:6782 ../src/guestfs-actions.pod:6835 ../src/guestfs-actions.pod:6919 ../src/guestfs-actions.pod:6957 ../src/guestfs-actions.pod:6976 ../src/guestfs-actions.pod:7016
msgid "(Added in 1.0.78)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6749
msgid "guestfs_part_del"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6751
#, no-wrap
msgid ""
" int\n"
" guestfs_part_del (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int partnum);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6766
msgid "guestfs_part_disk"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6768
#, no-wrap
msgid ""
" int\n"
" guestfs_part_disk (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *parttype);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6773
msgid ""
"This command is simply a combination of C<guestfs_part_init> followed by "
"C<guestfs_part_add> to create a single primary partition covering the whole "
"disk."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6777
msgid ""
"C<parttype> is the partition table type, usually C<mbr> or C<gpt>, but other "
"possible values are described in C<guestfs_part_init>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6784
msgid "guestfs_part_get_bootable"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6786
#, no-wrap
msgid ""
" int\n"
" guestfs_part_get_bootable (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6794
msgid "See also C<guestfs_part_set_bootable>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6800
msgid "guestfs_part_get_mbr_id"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6802
#, no-wrap
msgid ""
" int\n"
" guestfs_part_get_mbr_id (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int partnum);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6810 ../src/guestfs-actions.pod:6992
msgid ""
"Note that only MBR (old DOS-style) partitions have type bytes.  You will get "
"undefined results for other partition table types (see "
"C<guestfs_part_get_parttype>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6818
msgid "guestfs_part_get_parttype"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6820
#, no-wrap
msgid ""
" char *\n"
" guestfs_part_get_parttype (guestfs_h *g,\n"
"                            const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6827
msgid ""
"Common return values include: C<msdos> (a DOS/Windows style MBR partition "
"table), C<gpt> (a GPT/EFI-style partition table).  Other values are "
"possible, although unusual.  See C<guestfs_part_init> for a full list."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6837
msgid "guestfs_part_init"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6839
#, no-wrap
msgid ""
" int\n"
" guestfs_part_init (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *parttype);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6848
msgid ""
"Initially there are no partitions.  Following this, you should call "
"C<guestfs_part_add> for each partition required."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6921
msgid "guestfs_part_list"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6923
#, no-wrap
msgid ""
" struct guestfs_partition_list *\n"
" guestfs_part_list (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6940
msgid ""
"Start of the partition I<in bytes>.  To get sectors you have to divide by "
"the device's sector size, see C<guestfs_blockdev_getss>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:6953
msgid ""
"This function returns a C<struct guestfs_partition_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_partition_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6959
msgid "guestfs_part_set_bootable"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6961
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_bootable (guestfs_h *g,\n"
"                            const char *device,\n"
"                            int partnum,\n"
"                            int bootable);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:6978
msgid "guestfs_part_set_mbr_id"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:6980
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_mbr_id (guestfs_h *g,\n"
"                          const char *device,\n"
"                          int partnum,\n"
"                          int idbyte);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7000
msgid "guestfs_part_set_name"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7002
#, no-wrap
msgid ""
" int\n"
" guestfs_part_set_name (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int partnum,\n"
"                        const char *name);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7018
msgid "guestfs_part_to_dev"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7020
#, no-wrap
msgid ""
" char *\n"
" guestfs_part_to_dev (guestfs_h *g,\n"
"                      const char *partition);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7028 ../src/guestfs-actions.pod:7047
msgid ""
"The named partition must exist, for example as a string returned from "
"C<guestfs_list_partitions>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7031
msgid "See also C<guestfs_part_to_partnum>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7038
msgid "guestfs_part_to_partnum"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7040
#, no-wrap
msgid ""
" int\n"
" guestfs_part_to_partnum (guestfs_h *g,\n"
"                          const char *partition);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7050
msgid "See also C<guestfs_part_to_dev>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7056
msgid "guestfs_ping_daemon"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7058
#, no-wrap
msgid ""
" int\n"
" guestfs_ping_daemon (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7070
msgid "guestfs_pread"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7072
#, no-wrap
msgid ""
" char *\n"
" guestfs_pread (guestfs_h *g,\n"
"                const char *path,\n"
"                int count,\n"
"                int64_t offset,\n"
"                size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7085
msgid "See also C<guestfs_pwrite>, C<guestfs_pread_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7096
msgid "guestfs_pread_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7098
#, no-wrap
msgid ""
" char *\n"
" guestfs_pread_device (guestfs_h *g,\n"
"                       const char *device,\n"
"                       int count,\n"
"                       int64_t offset,\n"
"                       size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7111
msgid "See also C<guestfs_pread>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7120
msgid "(Added in 1.5.21)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7122
msgid "guestfs_pvcreate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7124
#, no-wrap
msgid ""
" int\n"
" guestfs_pvcreate (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7136
msgid "guestfs_pvremove"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7138
#, no-wrap
msgid ""
" int\n"
" guestfs_pvremove (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7153
msgid "guestfs_pvresize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7155
#, no-wrap
msgid ""
" int\n"
" guestfs_pvresize (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7166
msgid "guestfs_pvresize_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7168
#, no-wrap
msgid ""
" int\n"
" guestfs_pvresize_size (guestfs_h *g,\n"
"                        const char *device,\n"
"                        int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7173
msgid ""
"This command is the same as C<guestfs_pvresize> except that it allows you to "
"specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7180
msgid "guestfs_pvs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7182
#, no-wrap
msgid ""
" char **\n"
" guestfs_pvs (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7191
msgid "See also C<guestfs_pvs_full>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7199
msgid "guestfs_pvs_full"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7201
#, no-wrap
msgid ""
" struct guestfs_lvm_pv_list *\n"
" guestfs_pvs_full (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7207
msgid ""
"This function returns a C<struct guestfs_lvm_pv_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_lvm_pv_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7213
msgid "guestfs_pvuuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7215
#, no-wrap
msgid ""
" char *\n"
" guestfs_pvuuid (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7226
msgid "guestfs_pwrite"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7228
#, no-wrap
msgid ""
" int\n"
" guestfs_pwrite (guestfs_h *g,\n"
"                 const char *path,\n"
"                 const char *content,\n"
"                 size_t content_size,\n"
"                 int64_t offset);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7244
msgid "See also C<guestfs_pread>, C<guestfs_pwrite_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7253
msgid "guestfs_pwrite_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7255
#, no-wrap
msgid ""
" int\n"
" guestfs_pwrite_device (guestfs_h *g,\n"
"                        const char *device,\n"
"                        const char *content,\n"
"                        size_t content_size,\n"
"                        int64_t offset);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7270
msgid "See also C<guestfs_pwrite>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7277
msgid "(Added in 1.5.20)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7279
msgid "guestfs_read_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7281
#, no-wrap
msgid ""
" char *\n"
" guestfs_read_file (guestfs_h *g,\n"
"                    const char *path,\n"
"                    size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7289
msgid ""
"Unlike C<guestfs_cat>, this function can correctly handle files that contain "
"embedded ASCII NUL characters.  However unlike C<guestfs_download>, this "
"function is limited in the total size of file that can be handled."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7301
msgid "(Added in 1.0.63)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7303
msgid "guestfs_read_lines"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7305
#, no-wrap
msgid ""
" char **\n"
" guestfs_read_lines (guestfs_h *g,\n"
"                     const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7314
msgid ""
"Note that this function cannot correctly handle binary files (specifically, "
"files containing C<\\0> character which is treated as end of line).  For "
"those you need to use the C<guestfs_read_file> function which has a more "
"complex interface."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7325
msgid "guestfs_readdir"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7327
#, no-wrap
msgid ""
" struct guestfs_dirent_list *\n"
" guestfs_readdir (guestfs_h *g,\n"
"                  const char *dir);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7381
msgid ""
"This function is primarily intended for use by programs.  To get a simple "
"list of names, use C<guestfs_ls>.  To get a printable directory for human "
"consumption, use C<guestfs_ll>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7385
msgid ""
"This function returns a C<struct guestfs_dirent_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_dirent_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7391
msgid "guestfs_readlink"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7393
#, no-wrap
msgid ""
" char *\n"
" guestfs_readlink (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7404
msgid "guestfs_readlinklist"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7406
#, no-wrap
msgid ""
" char **\n"
" guestfs_readlinklist (guestfs_h *g,\n"
"                       const char *path,\n"
"                       char *const *names);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7439
msgid "guestfs_realpath"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7441
#, no-wrap
msgid ""
" char *\n"
" guestfs_realpath (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7453
msgid "guestfs_removexattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7455
#, no-wrap
msgid ""
" int\n"
" guestfs_removexattr (guestfs_h *g,\n"
"                      const char *xattr,\n"
"                      const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7463
msgid "See also: C<guestfs_lremovexattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7469
msgid "guestfs_resize2fs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7471
#, no-wrap
msgid ""
" int\n"
" guestfs_resize2fs (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7484
msgid "guestfs_resize2fs_M"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7486
#, no-wrap
msgid ""
" int\n"
" guestfs_resize2fs_M (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7490
msgid ""
"This command is the same as C<guestfs_resize2fs>, but the filesystem is "
"resized to its minimum size.  This works like the I<-M> option to the "
"C<resize2fs> command."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7494
msgid ""
"To get the resulting size of the filesystem you should call "
"C<guestfs_tune2fs_l> and read the C<Block size> and C<Block count> values.  "
"These two numbers, multiplied together, give the resulting size of the "
"minimal filesystem in bytes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7505
msgid "guestfs_resize2fs_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7507
#, no-wrap
msgid ""
" int\n"
" guestfs_resize2fs_size (guestfs_h *g,\n"
"                         const char *device,\n"
"                         int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7512
msgid ""
"This command is the same as C<guestfs_resize2fs> except that it allows you "
"to specify the new size (in bytes) explicitly."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7521
msgid "guestfs_rm"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7523
#, no-wrap
msgid ""
" int\n"
" guestfs_rm (guestfs_h *g,\n"
"             const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7533
msgid "guestfs_rm_rf"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7535
#, no-wrap
msgid ""
" int\n"
" guestfs_rm_rf (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7547
msgid "guestfs_rmdir"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7549
#, no-wrap
msgid ""
" int\n"
" guestfs_rmdir (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7559
msgid "guestfs_rmmountpoint"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7561
#, no-wrap
msgid ""
" int\n"
" guestfs_rmmountpoint (guestfs_h *g,\n"
"                       const char *exemptpath);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7565
msgid ""
"This calls removes a mountpoint that was previously created with "
"C<guestfs_mkmountpoint>.  See C<guestfs_mkmountpoint> for full details."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7573
msgid "guestfs_scrub_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7575
#, no-wrap
msgid ""
" int\n"
" guestfs_scrub_device (guestfs_h *g,\n"
"                       const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7587 ../src/guestfs-actions.pod:7605 ../src/guestfs-actions.pod:7624
msgid "(Added in 1.0.52)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7589
msgid "guestfs_scrub_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7591
#, no-wrap
msgid ""
" int\n"
" guestfs_scrub_file (guestfs_h *g,\n"
"                     const char *file);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7607
msgid "guestfs_scrub_freespace"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7609
#, no-wrap
msgid ""
" int\n"
" guestfs_scrub_freespace (guestfs_h *g,\n"
"                          const char *dir);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7613
msgid ""
"This command creates the directory C<dir> and then fills it with files until "
"the filesystem is full, and scrubs the files as for C<guestfs_scrub_file>, "
"and deletes them.  The intention is to scrub any free space on the partition "
"containing C<dir>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7626
msgid "guestfs_set_append"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7628
#, no-wrap
msgid ""
" int\n"
" guestfs_set_append (guestfs_h *g,\n"
"                     const char *append);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7645
msgid "guestfs_set_attach_method"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7647
#, no-wrap
msgid ""
" int\n"
" guestfs_set_attach_method (guestfs_h *g,\n"
"                            const char *attachmethod);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7675
msgid "guestfs_set_autosync"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7677
#, no-wrap
msgid ""
" int\n"
" guestfs_set_autosync (guestfs_h *g,\n"
"                       int autosync);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7693
msgid "guestfs_set_direct"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7695
#, no-wrap
msgid ""
" int\n"
" guestfs_set_direct (guestfs_h *g,\n"
"                     int direct);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7703
msgid ""
"One consequence of this is that log messages aren't caught by the library "
"and handled by C<guestfs_set_log_message_callback>, but go straight to "
"stdout."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7716
msgid "guestfs_set_e2attrs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7718
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2attrs (guestfs_h *g,\n"
"                      const char *file,\n"
"                      const char *attrs,\n"
"                      ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7729
#, no-wrap
msgid ""
" GUESTFS_SET_E2ATTRS_CLEAR, int clear,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7734
msgid ""
"C<attrs> is a string of characters representing file attributes.  See "
"C<guestfs_get_e2attrs> for a list of possible attributes.  Not all "
"attributes can be changed."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7755
msgid "guestfs_set_e2attrs_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7757
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2attrs_va (guestfs_h *g,\n"
"                         const char *file,\n"
"                         const char *attrs,\n"
"                         va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7763
msgid "This is the \"va_list variant\" of L</guestfs_set_e2attrs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7767
msgid "guestfs_set_e2attrs_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7769
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2attrs_argv (guestfs_h *g,\n"
"                           const char *file,\n"
"                           const char *attrs,\n"
"                           const struct guestfs_set_e2attrs_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7775
msgid "This is the \"argv variant\" of L</guestfs_set_e2attrs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7779
msgid "guestfs_set_e2generation"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7781
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2generation (guestfs_h *g,\n"
"                           const char *file,\n"
"                           int64_t generation);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7788
msgid "See C<guestfs_get_e2generation>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7794
msgid "guestfs_set_e2label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7796
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2label (guestfs_h *g,\n"
"                      const char *device,\n"
"                      const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7801
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_set_label> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7812
msgid ""
"You can use either C<guestfs_tune2fs_l> or C<guestfs_get_e2label> to return "
"the existing label on a filesystem."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7819
msgid "guestfs_set_e2uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7821
#, no-wrap
msgid ""
" int\n"
" guestfs_set_e2uuid (guestfs_h *g,\n"
"                     const char *device,\n"
"                     const char *uuid);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7831
msgid ""
"You can use either C<guestfs_tune2fs_l> or C<guestfs_get_e2uuid> to return "
"the existing UUID of a filesystem."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7838
msgid "guestfs_set_label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7840
#, no-wrap
msgid ""
" int\n"
" guestfs_set_label (guestfs_h *g,\n"
"                    const char *device,\n"
"                    const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7854
msgid "To read the label on a filesystem, call C<guestfs_vfs_label>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7860
msgid "guestfs_set_memsize"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7862
#, no-wrap
msgid ""
" int\n"
" guestfs_set_memsize (guestfs_h *g,\n"
"                      int memsize);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7866
msgid ""
"This sets the memory size in megabytes allocated to the qemu subprocess.  "
"This only has any effect if called before C<guestfs_launch>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7881
msgid "guestfs_set_network"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7883
#, no-wrap
msgid ""
" int\n"
" guestfs_set_network (guestfs_h *g,\n"
"                      int network);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7893
msgid ""
"You must call this before calling C<guestfs_launch>, otherwise it has no "
"effect."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7900
msgid "guestfs_set_path"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7902
#, no-wrap
msgid ""
" int\n"
" guestfs_set_path (guestfs_h *g,\n"
"                   const char *searchpath);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7917
msgid "guestfs_set_pgroup"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7919
#, no-wrap
msgid ""
" int\n"
" guestfs_set_pgroup (guestfs_h *g,\n"
"                     int pgroup);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7929
msgid ""
"The default for this flag is false, because usually you want C<^C> to kill "
"the subprocess.  Guestfish sets this flag to true when used interactively, "
"so that C<^C> can cancel long-running commands gracefully (see "
"C<guestfs_user_cancel>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7938
msgid "guestfs_set_qemu"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7940
#, no-wrap
msgid ""
" int\n"
" guestfs_set_qemu (guestfs_h *g,\n"
"                   const char *qemu);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7966
msgid "guestfs_set_recovery_proc"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7968
#, no-wrap
msgid ""
" int\n"
" guestfs_set_recovery_proc (guestfs_h *g,\n"
"                            int recoveryproc);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7972
msgid ""
"If this is called with the parameter C<false> then C<guestfs_launch> does "
"not create a recovery process.  The purpose of the recovery process is to "
"stop runaway qemu processes in the case where the main program aborts "
"abruptly."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:7977
msgid ""
"This only has any effect if called before C<guestfs_launch>, and the default "
"is true."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:7990
msgid "guestfs_set_selinux"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:7992
#, no-wrap
msgid ""
" int\n"
" guestfs_set_selinux (guestfs_h *g,\n"
"                      int selinux);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8009
msgid "guestfs_set_smp"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8011
#, no-wrap
msgid ""
" int\n"
" guestfs_set_smp (guestfs_h *g,\n"
"                  int smp);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8019
msgid "This function must be called before C<guestfs_launch>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8025
msgid "guestfs_set_trace"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8027
#, no-wrap
msgid ""
" int\n"
" guestfs_set_trace (guestfs_h *g,\n"
"                    int trace);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8041
msgid ""
"Trace messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see C<guestfs_set_event_callback>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8049
msgid "guestfs_set_verbose"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8051
#, no-wrap
msgid ""
" int\n"
" guestfs_set_verbose (guestfs_h *g,\n"
"                      int verbose);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8060
msgid ""
"Verbose messages are normally sent to C<stderr>, unless you register a "
"callback to send them somewhere else (see C<guestfs_set_event_callback>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8068
msgid "guestfs_setcon"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8070
#, no-wrap
msgid ""
" int\n"
" guestfs_setcon (guestfs_h *g,\n"
"                 const char *context);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8083
msgid "guestfs_setxattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8085
#, no-wrap
msgid ""
" int\n"
" guestfs_setxattr (guestfs_h *g,\n"
"                   const char *xattr,\n"
"                   const char *val,\n"
"                   int vallen,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8096
msgid "See also: C<guestfs_lsetxattr>, L<attr(5)>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8102
msgid "guestfs_sfdisk"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8104
#, no-wrap
msgid ""
" int\n"
" guestfs_sfdisk (guestfs_h *g,\n"
"                 const char *device,\n"
"                 int cyls,\n"
"                 int heads,\n"
"                 int sectors,\n"
"                 char *const *lines);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8112 ../src/guestfs-actions.pod:8153 ../src/guestfs-actions.pod:8184
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_part_add> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8139
msgid "See also: C<guestfs_sfdisk_l>, C<guestfs_sfdisk_N>, C<guestfs_part_init>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8146
msgid "guestfs_sfdiskM"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8148
#, no-wrap
msgid ""
" int\n"
" guestfs_sfdiskM (guestfs_h *g,\n"
"                  const char *device,\n"
"                  char *const *lines);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8160
msgid ""
"This is a simplified interface to the C<guestfs_sfdisk> command, where "
"partition sizes are specified in megabytes only (rounded to the nearest "
"cylinder) and you don't need to specify the cyls, heads and sectors "
"parameters which were rarely if ever used anyway."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8166
msgid ""
"See also: C<guestfs_sfdisk>, the L<sfdisk(8)> manpage and "
"C<guestfs_part_disk>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8173
msgid "guestfs_sfdisk_N"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8175
#, no-wrap
msgid ""
" int\n"
" guestfs_sfdisk_N (guestfs_h *g,\n"
"                   const char *device,\n"
"                   int partnum,\n"
"                   int cyls,\n"
"                   int heads,\n"
"                   int sectors,\n"
"                   const char *line);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8194
msgid ""
"For other parameters, see C<guestfs_sfdisk>.  You should usually pass C<0> "
"for the cyls/heads/sectors parameters."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8197
msgid "See also: C<guestfs_part_add>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8203
msgid "guestfs_sfdisk_disk_geometry"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8205
#, no-wrap
msgid ""
" char *\n"
" guestfs_sfdisk_disk_geometry (guestfs_h *g,\n"
"                               const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8209
msgid ""
"This displays the disk geometry of C<device> read from the partition table.  "
"Especially in the case where the underlying block device has been resized, "
"this can be different from the kernel's idea of the geometry (see "
"C<guestfs_sfdisk_kernel_geometry>)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8222
msgid "guestfs_sfdisk_kernel_geometry"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8224
#, no-wrap
msgid ""
" char *\n"
" guestfs_sfdisk_kernel_geometry (guestfs_h *g,\n"
"                                 const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8238
msgid "guestfs_sfdisk_l"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8240
#, no-wrap
msgid ""
" char *\n"
" guestfs_sfdisk_l (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8244
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_part_list> "
"call instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8255
msgid "See also: C<guestfs_part_list>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8262
msgid "guestfs_sh"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8264
#, no-wrap
msgid ""
" char *\n"
" guestfs_sh (guestfs_h *g,\n"
"             const char *command);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8271
msgid "This is like C<guestfs_command>, but passes the command to:"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8279
msgid "All the provisos about C<guestfs_command> apply to this call."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8286
msgid "guestfs_sh_lines"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8288
#, no-wrap
msgid ""
" char **\n"
" guestfs_sh_lines (guestfs_h *g,\n"
"                   const char *command);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8292
msgid ""
"This is the same as C<guestfs_sh>, but splits the result into a list of "
"lines."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8295
msgid "See also: C<guestfs_command_lines>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8303
msgid "guestfs_sleep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8305
#, no-wrap
msgid ""
" int\n"
" guestfs_sleep (guestfs_h *g,\n"
"                int secs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8313
msgid "(Added in 1.0.41)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8315 ../src/guestfs-structs.pod:109
msgid "guestfs_stat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8317
#, no-wrap
msgid ""
" struct guestfs_stat *\n"
" guestfs_stat (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8331 ../src/guestfs-structs.pod:135
msgid "guestfs_statvfs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8333
#, no-wrap
msgid ""
" struct guestfs_statvfs *\n"
" guestfs_statvfs (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8343
msgid ""
"This function returns a C<struct guestfs_statvfs *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_statvfs> after use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8349
msgid "guestfs_strings"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8351
#, no-wrap
msgid ""
" char **\n"
" guestfs_strings (guestfs_h *g,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8367
msgid "guestfs_strings_e"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8369
#, no-wrap
msgid ""
" char **\n"
" guestfs_strings_e (guestfs_h *g,\n"
"                    const char *encoding,\n"
"                    const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8374
msgid ""
"This is like the C<guestfs_strings> command, but allows you to specify the "
"encoding of strings that are looked for in the source file C<path>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8384
msgid ""
"Single 7-bit-byte characters like ASCII and the ASCII-compatible parts of "
"ISO-8859-X (this is what C<guestfs_strings> uses)."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8422
msgid "guestfs_swapoff_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8424
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_device (guestfs_h *g,\n"
"                         const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8428
msgid ""
"This command disables the libguestfs appliance swap device or partition "
"named C<device>.  See C<guestfs_swapon_device>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8436
msgid "guestfs_swapoff_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8438
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_file (guestfs_h *g,\n"
"                       const char *file);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8448
msgid "guestfs_swapoff_label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8450
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_label (guestfs_h *g,\n"
"                        const char *label);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8461
msgid "guestfs_swapoff_uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8463
#, no-wrap
msgid ""
" int\n"
" guestfs_swapoff_uuid (guestfs_h *g,\n"
"                       const char *uuid);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8474
msgid "guestfs_swapon_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8476
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_device (guestfs_h *g,\n"
"                        const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8480
msgid ""
"This command enables the libguestfs appliance to use the swap device or "
"partition named C<device>.  The increased memory is made available for all "
"commands, for example those run using C<guestfs_command> or C<guestfs_sh>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8496
msgid "guestfs_swapon_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8498
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_file (guestfs_h *g,\n"
"                      const char *file);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8502
msgid ""
"This command enables swap to a file.  See C<guestfs_swapon_device> for other "
"notes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8509
msgid "guestfs_swapon_label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8511
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_label (guestfs_h *g,\n"
"                       const char *label);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8515
msgid ""
"This command enables swap to a labeled swap partition.  See "
"C<guestfs_swapon_device> for other notes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8522
msgid "guestfs_swapon_uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8524
#, no-wrap
msgid ""
" int\n"
" guestfs_swapon_uuid (guestfs_h *g,\n"
"                      const char *uuid);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8528
msgid ""
"This command enables swap to a swap partition with the given UUID.  See "
"C<guestfs_swapon_device> for other notes."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8535
msgid "guestfs_sync"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8537
#, no-wrap
msgid ""
" int\n"
" guestfs_sync (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8550
msgid "guestfs_tail"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8552
#, no-wrap
msgid ""
" char **\n"
" guestfs_tail (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8568
msgid "guestfs_tail_n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8570
#, no-wrap
msgid ""
" char **\n"
" guestfs_tail_n (guestfs_h *g,\n"
"                 int nrlines,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8592
msgid "guestfs_tar_in"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8594
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_in (guestfs_h *g,\n"
"                 const char *tarfile,\n"
"                 const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8602
msgid "To upload a compressed tarball, use C<guestfs_tgz_in> or C<guestfs_txz_in>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8607 ../src/guestfs-actions.pod:8624 ../src/guestfs-actions.pod:8640 ../src/guestfs-actions.pod:8656
msgid "(Added in 1.0.3)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8609
msgid "guestfs_tar_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8611
#, no-wrap
msgid ""
" int\n"
" guestfs_tar_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarfile);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8619
msgid ""
"To download a compressed tarball, use C<guestfs_tgz_out> or "
"C<guestfs_txz_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8626
msgid "guestfs_tgz_in"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8628
#, no-wrap
msgid ""
" int\n"
" guestfs_tgz_in (guestfs_h *g,\n"
"                 const char *tarball,\n"
"                 const char *directory);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8636
msgid "To upload an uncompressed tarball, use C<guestfs_tar_in>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8642
msgid "guestfs_tgz_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8644
#, no-wrap
msgid ""
" int\n"
" guestfs_tgz_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarball);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8652
msgid "To download an uncompressed tarball, use C<guestfs_tar_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8658
msgid "guestfs_touch"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8660
#, no-wrap
msgid ""
" int\n"
" guestfs_touch (guestfs_h *g,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8675
msgid "guestfs_truncate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8677
#, no-wrap
msgid ""
" int\n"
" guestfs_truncate (guestfs_h *g,\n"
"                   const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8688
msgid "guestfs_truncate_size"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8690
#, no-wrap
msgid ""
" int\n"
" guestfs_truncate_size (guestfs_h *g,\n"
"                        const char *path,\n"
"                        int64_t size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8698
msgid ""
"If the current file size is less than C<size> then the file is extended to "
"the required size with zero bytes.  This creates a sparse file (ie. disk "
"blocks are not allocated for the file until you write to it).  To create a "
"non-sparse file of zeroes, use C<guestfs_fallocate64> instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8708
msgid "guestfs_tune2fs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8710
#, no-wrap
msgid ""
" int\n"
" guestfs_tune2fs (guestfs_h *g,\n"
"                  const char *device,\n"
"                  ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8720
#, no-wrap
msgid ""
" GUESTFS_TUNE2FS_FORCE, int force,\n"
" GUESTFS_TUNE2FS_MAXMOUNTCOUNT, int maxmountcount,\n"
" GUESTFS_TUNE2FS_MOUNTCOUNT, int mountcount,\n"
" GUESTFS_TUNE2FS_ERRORBEHAVIOR, const char *errorbehavior,\n"
" GUESTFS_TUNE2FS_GROUP, int64_t group,\n"
" GUESTFS_TUNE2FS_INTERVALBETWEENCHECKS, int intervalbetweenchecks,\n"
" GUESTFS_TUNE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
" GUESTFS_TUNE2FS_LASTMOUNTEDDIRECTORY, const char *lastmounteddirectory,\n"
" GUESTFS_TUNE2FS_RESERVEDBLOCKSCOUNT, int64_t reservedblockscount,\n"
" GUESTFS_TUNE2FS_USER, int64_t user,\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8800
msgid ""
"To get the current values of filesystem parameters, see "
"C<guestfs_tune2fs_l>.  For precise details of how tune2fs works, see the "
"L<tune2fs(8)> man page."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8808
msgid "guestfs_tune2fs_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8810
#, no-wrap
msgid ""
" int\n"
" guestfs_tune2fs_va (guestfs_h *g,\n"
"                     const char *device,\n"
"                     va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8815
msgid "This is the \"va_list variant\" of L</guestfs_tune2fs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8819
msgid "guestfs_tune2fs_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8821
#, no-wrap
msgid ""
" int\n"
" guestfs_tune2fs_argv (guestfs_h *g,\n"
"                       const char *device,\n"
"                       const struct guestfs_tune2fs_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8826
msgid "This is the \"argv variant\" of L</guestfs_tune2fs>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8830
msgid "guestfs_tune2fs_l"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8832
#, no-wrap
msgid ""
" char **\n"
" guestfs_tune2fs_l (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8852
msgid "guestfs_txz_in"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8854
#, no-wrap
msgid ""
" int\n"
" guestfs_txz_in (guestfs_h *g,\n"
"                 const char *tarball,\n"
"                 const char *directory);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8866
msgid "guestfs_txz_out"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8868
#, no-wrap
msgid ""
" int\n"
" guestfs_txz_out (guestfs_h *g,\n"
"                  const char *directory,\n"
"                  const char *tarball);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8880
msgid "guestfs_umask"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8882
#, no-wrap
msgid ""
" int\n"
" guestfs_umask (guestfs_h *g,\n"
"                int mask);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8898
msgid ""
"See also C<guestfs_get_umask>, L<umask(2)>, C<guestfs_mknod>, "
"C<guestfs_mkdir>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8907
msgid "guestfs_umount"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8909
#, no-wrap
msgid ""
" int\n"
" guestfs_umount (guestfs_h *g,\n"
"                 const char *pathordevice);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8921
msgid "guestfs_umount_all"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8923
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_all (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8934
msgid "guestfs_umount_local"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8936
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_local (guestfs_h *g,\n"
"                       ...);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8945
#, no-wrap
msgid ""
" GUESTFS_UMOUNT_LOCAL_RETRY, int retry,\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8956
msgid "guestfs_umount_local_va"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8958
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_local_va (guestfs_h *g,\n"
"                          va_list args);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8962
msgid "This is the \"va_list variant\" of L</guestfs_umount_local>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8966
msgid "guestfs_umount_local_argv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8968
#, no-wrap
msgid ""
" int\n"
" guestfs_umount_local_argv (guestfs_h *g,\n"
"                            const struct guestfs_umount_local_argv "
"*optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8972
msgid "This is the \"argv variant\" of L</guestfs_umount_local>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8976
msgid "guestfs_upload"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:8978
#, no-wrap
msgid ""
" int\n"
" guestfs_upload (guestfs_h *g,\n"
"                 const char *filename,\n"
"                 const char *remotefilename);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:8988
msgid "See also C<guestfs_download>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:8999
msgid "guestfs_upload_offset"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9001
#, no-wrap
msgid ""
" int\n"
" guestfs_upload_offset (guestfs_h *g,\n"
"                        const char *filename,\n"
"                        const char *remotefilename,\n"
"                        int64_t offset);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9017
msgid ""
"Note that there is no limit on the amount of data that can be uploaded with "
"this call, unlike with C<guestfs_pwrite>, and this call always writes the "
"full amount unless an error occurs."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9022
msgid "See also C<guestfs_upload>, C<guestfs_pwrite>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9033
msgid "guestfs_utimens"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9035
#, no-wrap
msgid ""
" int\n"
" guestfs_utimens (guestfs_h *g,\n"
"                  const char *path,\n"
"                  int64_t atsecs,\n"
"                  int64_t atnsecs,\n"
"                  int64_t mtsecs,\n"
"                  int64_t mtnsecs);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9064 ../src/guestfs-structs.pod:175
msgid "guestfs_version"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9066
#, no-wrap
msgid ""
" struct guestfs_version *\n"
" guestfs_version (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9094
msgid ""
"I<Note:> Don't use this call to test for availability of features.  In "
"enterprise distributions we backport features from later versions into "
"earlier versions, making this an unreliable way to test for features.  Use "
"C<guestfs_available> instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9100
msgid ""
"This function returns a C<struct guestfs_version *>, or NULL if there was an "
"error.  I<The caller must call C<guestfs_free_version> after use>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9104
msgid "(Added in 1.0.58)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9106
msgid "guestfs_vfs_label"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9108
#, no-wrap
msgid ""
" char *\n"
" guestfs_vfs_label (guestfs_h *g,\n"
"                    const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9117
msgid "To find a filesystem from the label, use C<guestfs_findfs_label>."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9122 ../src/guestfs-actions.pod:9159
msgid "(Added in 1.3.18)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9124
msgid "guestfs_vfs_type"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9126
#, no-wrap
msgid ""
" char *\n"
" guestfs_vfs_type (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9143
msgid "guestfs_vfs_uuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9145
#, no-wrap
msgid ""
" char *\n"
" guestfs_vfs_uuid (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9154
msgid "To find a filesystem from the UUID, use C<guestfs_findfs_uuid>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9161
msgid "guestfs_vg_activate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9163
#, no-wrap
msgid ""
" int\n"
" guestfs_vg_activate (guestfs_h *g,\n"
"                      int activate,\n"
"                      char *const *volgroups);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9180
msgid "guestfs_vg_activate_all"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9182
#, no-wrap
msgid ""
" int\n"
" guestfs_vg_activate_all (guestfs_h *g,\n"
"                          int activate);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9195
msgid "guestfs_vgcreate"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9197
#, no-wrap
msgid ""
" int\n"
" guestfs_vgcreate (guestfs_h *g,\n"
"                   const char *volgroup,\n"
"                   char *const *physvols);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9209
msgid "guestfs_vglvuuids"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9211
#, no-wrap
msgid ""
" char **\n"
" guestfs_vglvuuids (guestfs_h *g,\n"
"                    const char *vgname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9218
msgid ""
"You can use this along with C<guestfs_lvs> and C<guestfs_lvuuid> calls to "
"associate logical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9221
msgid "See also C<guestfs_vgpvuuids>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9229
msgid "guestfs_vgmeta"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9231
#, no-wrap
msgid ""
" char *\n"
" guestfs_vgmeta (guestfs_h *g,\n"
"                 const char *vgname,\n"
"                 size_t *size_r);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9246
msgid "(Added in 1.17.20)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9248
msgid "guestfs_vgpvuuids"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9250
#, no-wrap
msgid ""
" char **\n"
" guestfs_vgpvuuids (guestfs_h *g,\n"
"                    const char *vgname);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9257
msgid ""
"You can use this along with C<guestfs_pvs> and C<guestfs_pvuuid> calls to "
"associate physical volumes and volume groups."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9260
msgid "See also C<guestfs_vglvuuids>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9268
msgid "guestfs_vgremove"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9270
#, no-wrap
msgid ""
" int\n"
" guestfs_vgremove (guestfs_h *g,\n"
"                   const char *vgname);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9283
msgid "guestfs_vgrename"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9285
#, no-wrap
msgid ""
" int\n"
" guestfs_vgrename (guestfs_h *g,\n"
"                   const char *volgroup,\n"
"                   const char *newvolgroup);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9296
msgid "guestfs_vgs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9298
#, no-wrap
msgid ""
" char **\n"
" guestfs_vgs (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9307
msgid "See also C<guestfs_vgs_full>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9315
msgid "guestfs_vgs_full"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9317
#, no-wrap
msgid ""
" struct guestfs_lvm_vg_list *\n"
" guestfs_vgs_full (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9323
msgid ""
"This function returns a C<struct guestfs_lvm_vg_list *>, or NULL if there "
"was an error.  I<The caller must call C<guestfs_free_lvm_vg_list> after "
"use>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9329
msgid "guestfs_vgscan"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9331
#, no-wrap
msgid ""
" int\n"
" guestfs_vgscan (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9341
msgid "guestfs_vguuid"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9343
#, no-wrap
msgid ""
" char *\n"
" guestfs_vguuid (guestfs_h *g,\n"
"                 const char *vgname);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9354
msgid "guestfs_wait_ready"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9356
#, no-wrap
msgid ""
" int\n"
" guestfs_wait_ready (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9359
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_launch> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9366
msgid "This function is a no op."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9368
msgid ""
"In versions of the API E<lt> 1.0.71 you had to call this function just after "
"calling C<guestfs_launch> to wait for the launch to complete.  However this "
"is no longer necessary because C<guestfs_launch> now does the waiting."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9373
msgid ""
"If you see any calls to this function in code then you can just remove them, "
"unless you want to retain compatibility with older versions of the API."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9381
msgid "guestfs_wc_c"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9383
#, no-wrap
msgid ""
" int\n"
" guestfs_wc_c (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9394
msgid "guestfs_wc_l"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9396
#, no-wrap
msgid ""
" int\n"
" guestfs_wc_l (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9407
msgid "guestfs_wc_w"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9409
#, no-wrap
msgid ""
" int\n"
" guestfs_wc_w (guestfs_h *g,\n"
"               const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9420
msgid "guestfs_wipefs"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9422
#, no-wrap
msgid ""
" int\n"
" guestfs_wipefs (guestfs_h *g,\n"
"                 const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9432
msgid "Compare with C<guestfs_zero> which zeroes the first few blocks of a device."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9439
msgid "guestfs_write"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9441
#, no-wrap
msgid ""
" int\n"
" guestfs_write (guestfs_h *g,\n"
"                const char *path,\n"
"                const char *content,\n"
"                size_t content_size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9450
msgid "See also C<guestfs_write_append>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9459
msgid "guestfs_write_append"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9461
#, no-wrap
msgid ""
" int\n"
" guestfs_write_append (guestfs_h *g,\n"
"                       const char *path,\n"
"                       const char *content,\n"
"                       size_t content_size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9470
msgid "See also C<guestfs_write>."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9479
msgid "guestfs_write_file"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9481
#, no-wrap
msgid ""
" int\n"
" guestfs_write_file (guestfs_h *g,\n"
"                     const char *path,\n"
"                     const char *content,\n"
"                     int size);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9487
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_write> call "
"instead."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9512
msgid "guestfs_zegrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9514
#, no-wrap
msgid ""
" char **\n"
" guestfs_zegrep (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9531
msgid "guestfs_zegrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9533
#, no-wrap
msgid ""
" char **\n"
" guestfs_zegrepi (guestfs_h *g,\n"
"                  const char *regex,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9550
msgid "guestfs_zero"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9552
#, no-wrap
msgid ""
" int\n"
" guestfs_zero (guestfs_h *g,\n"
"               const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9566
msgid ""
"See also: C<guestfs_zero_device>, C<guestfs_scrub_device>, "
"C<guestfs_is_zero_device>"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9578
msgid "guestfs_zero_device"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9580
#, no-wrap
msgid ""
" int\n"
" guestfs_zero_device (guestfs_h *g,\n"
"                      const char *device);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9584
msgid ""
"This command writes zeroes over the entire C<device>.  Compare with "
"C<guestfs_zero> which just zeroes the first few blocks of a device."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9599
msgid "(Added in 1.3.1)"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9601
msgid "guestfs_zero_free_space"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9603
#, no-wrap
msgid ""
" int\n"
" guestfs_zero_free_space (guestfs_h *g,\n"
"                          const char *directory);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9625
msgid "guestfs_zerofree"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9627
#, no-wrap
msgid ""
" int\n"
" guestfs_zerofree (guestfs_h *g,\n"
"                   const char *device);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9646
msgid "guestfs_zfgrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9648
#, no-wrap
msgid ""
" char **\n"
" guestfs_zfgrep (guestfs_h *g,\n"
"                 const char *pattern,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9665
msgid "guestfs_zfgrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9667
#, no-wrap
msgid ""
" char **\n"
" guestfs_zfgrepi (guestfs_h *g,\n"
"                  const char *pattern,\n"
"                  const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9684
msgid "guestfs_zfile"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9686
#, no-wrap
msgid ""
" char *\n"
" guestfs_zfile (guestfs_h *g,\n"
"                const char *meth,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9691
msgid ""
"I<This function is deprecated.> In new code, use the L</guestfs_file> call "
"instead."
msgstr ""

#. type: textblock
#: ../src/guestfs-actions.pod:9703
msgid ""
"Since 1.0.63, use C<guestfs_file> instead which can now process compressed "
"files."
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9711
msgid "guestfs_zgrep"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9713
#, no-wrap
msgid ""
" char **\n"
" guestfs_zgrep (guestfs_h *g,\n"
"                const char *regex,\n"
"                const char *path);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-actions.pod:9730
msgid "guestfs_zgrepi"
msgstr ""

#. type: verbatim
#: ../src/guestfs-actions.pod:9732
#, no-wrap
msgid ""
" char **\n"
" guestfs_zgrepi (guestfs_h *g,\n"
"                 const char *regex,\n"
"                 const char *path);\n"
"\n"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:3
msgid "B<augeas>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:5
msgid ""
"The following functions: L</guestfs_aug_clear> L</guestfs_aug_close> "
"L</guestfs_aug_defnode> L</guestfs_aug_defvar> L</guestfs_aug_get> "
"L</guestfs_aug_init> L</guestfs_aug_insert> L</guestfs_aug_load> "
"L</guestfs_aug_ls> L</guestfs_aug_match> L</guestfs_aug_mv> "
"L</guestfs_aug_rm> L</guestfs_aug_save> L</guestfs_aug_set>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:21
msgid "B<btrfs>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:23
msgid ""
"The following functions: L</guestfs_btrfs_device_add> "
"L</guestfs_btrfs_device_delete> L</guestfs_btrfs_filesystem_balance> "
"L</guestfs_btrfs_filesystem_resize> L</guestfs_btrfs_filesystem_sync> "
"L</guestfs_btrfs_fsck> L</guestfs_btrfs_set_seeding> "
"L</guestfs_btrfs_subvolume_create> L</guestfs_btrfs_subvolume_delete> "
"L</guestfs_btrfs_subvolume_list> L</guestfs_btrfs_subvolume_set_default> "
"L</guestfs_btrfs_subvolume_snapshot> L</guestfs_mkfs_btrfs>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:38
msgid "B<grub>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:40
msgid "The following functions: L</guestfs_grub_install>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:43
msgid "B<inotify>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:45
msgid ""
"The following functions: L</guestfs_inotify_add_watch> "
"L</guestfs_inotify_close> L</guestfs_inotify_files> L</guestfs_inotify_init> "
"L</guestfs_inotify_read> L</guestfs_inotify_rm_watch>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:53
msgid "B<linuxfsuuid>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:55
msgid ""
"The following functions: L</guestfs_mke2fs_JU> L</guestfs_mke2journal_U> "
"L</guestfs_mkswap_U> L</guestfs_swapoff_uuid> L</guestfs_swapon_uuid>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:62
msgid "B<linuxmodules>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:64
msgid "The following functions: L</guestfs_modprobe>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:67
msgid "B<linuxxattrs>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:69
msgid ""
"The following functions: L</guestfs_getxattr> L</guestfs_getxattrs> "
"L</guestfs_lgetxattr> L</guestfs_lgetxattrs> L</guestfs_lremovexattr> "
"L</guestfs_lsetxattr> L</guestfs_lxattrlist> L</guestfs_removexattr> "
"L</guestfs_setxattr>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:80
msgid "B<luks>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:82
msgid ""
"The following functions: L</guestfs_luks_add_key> L</guestfs_luks_close> "
"L</guestfs_luks_format> L</guestfs_luks_format_cipher> "
"L</guestfs_luks_kill_slot> L</guestfs_luks_open> L</guestfs_luks_open_ro>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:91
msgid "B<lvm2>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:93
msgid ""
"The following functions: L</guestfs_is_lv> L</guestfs_lvcreate> "
"L</guestfs_lvcreate_free> L</guestfs_lvm_remove_all> "
"L</guestfs_lvm_set_filter> L</guestfs_lvremove> L</guestfs_lvresize> "
"L</guestfs_lvresize_free> L</guestfs_lvs> L</guestfs_lvs_full> "
"L</guestfs_pvcreate> L</guestfs_pvremove> L</guestfs_pvresize> "
"L</guestfs_pvresize_size> L</guestfs_pvs> L</guestfs_pvs_full> "
"L</guestfs_vg_activate> L</guestfs_vg_activate_all> L</guestfs_vgcreate> "
"L</guestfs_vgmeta> L</guestfs_vgremove> L</guestfs_vgs> L</guestfs_vgs_full>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:118
msgid "B<mdadm>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:120
msgid ""
"The following functions: L</guestfs_md_create> L</guestfs_md_detail> "
"L</guestfs_md_stat> L</guestfs_md_stop>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:126
msgid "B<mknod>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:128
msgid ""
"The following functions: L</guestfs_mkfifo> L</guestfs_mknod> "
"L</guestfs_mknod_b> L</guestfs_mknod_c>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:134
msgid "B<ntfs3g>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:136
msgid ""
"The following functions: L</guestfs_ntfs_3g_probe> L</guestfs_ntfsclone_in> "
"L</guestfs_ntfsclone_out> L</guestfs_ntfsfix>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:142
msgid "B<ntfsprogs>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:144
msgid ""
"The following functions: L</guestfs_ntfsresize> L</guestfs_ntfsresize_opts> "
"L</guestfs_ntfsresize_size>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:149
msgid "B<realpath>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:151
msgid "The following functions: L</guestfs_realpath>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:154
msgid "B<scrub>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:156
msgid ""
"The following functions: L</guestfs_scrub_device> L</guestfs_scrub_file> "
"L</guestfs_scrub_freespace>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:161
msgid "B<selinux>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:163
msgid "The following functions: L</guestfs_getcon> L</guestfs_setcon>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:167
msgid "B<wipefs>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:169
msgid "The following functions: L</guestfs_wipefs>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:172
msgid "B<xz>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:174
msgid "The following functions: L</guestfs_txz_in> L</guestfs_txz_out>"
msgstr ""

#. type: =item
#: ../src/guestfs-availability.pod:178
msgid "B<zerofree>"
msgstr ""

#. type: textblock
#: ../src/guestfs-availability.pod:180
msgid "The following functions: L</guestfs_zerofree>"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:1
msgid "guestfs_int_bool"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:3
#, no-wrap
msgid ""
" struct guestfs_int_bool {\n"
"   int32_t i;\n"
"   int32_t b;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:8
#, no-wrap
msgid ""
" struct guestfs_int_bool_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_int_bool *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:13
#, no-wrap
msgid ""
" void guestfs_free_int_bool (struct guestfs_free_int_bool *);\n"
" void guestfs_free_int_bool_list (struct guestfs_free_int_bool_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:16
msgid "guestfs_lvm_pv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:18
#, no-wrap
msgid ""
" struct guestfs_lvm_pv {\n"
"   char *pv_name;\n"
"   /* The next field is NOT nul-terminated, be careful when printing it: "
"*/\n"
"   char pv_uuid[32];\n"
"   char *pv_fmt;\n"
"   uint64_t pv_size;\n"
"   uint64_t dev_size;\n"
"   uint64_t pv_free;\n"
"   uint64_t pv_used;\n"
"   char *pv_attr;\n"
"   int64_t pv_pe_count;\n"
"   int64_t pv_pe_alloc_count;\n"
"   char *pv_tags;\n"
"   uint64_t pe_start;\n"
"   int64_t pv_mda_count;\n"
"   uint64_t pv_mda_free;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:36
#, no-wrap
msgid ""
" struct guestfs_lvm_pv_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_lvm_pv *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:41
#, no-wrap
msgid ""
" void guestfs_free_lvm_pv (struct guestfs_free_lvm_pv *);\n"
" void guestfs_free_lvm_pv_list (struct guestfs_free_lvm_pv_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:44
msgid "guestfs_lvm_vg"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:46
#, no-wrap
msgid ""
" struct guestfs_lvm_vg {\n"
"   char *vg_name;\n"
"   /* The next field is NOT nul-terminated, be careful when printing it: "
"*/\n"
"   char vg_uuid[32];\n"
"   char *vg_fmt;\n"
"   char *vg_attr;\n"
"   uint64_t vg_size;\n"
"   uint64_t vg_free;\n"
"   char *vg_sysid;\n"
"   uint64_t vg_extent_size;\n"
"   int64_t vg_extent_count;\n"
"   int64_t vg_free_count;\n"
"   int64_t max_lv;\n"
"   int64_t max_pv;\n"
"   int64_t pv_count;\n"
"   int64_t lv_count;\n"
"   int64_t snap_count;\n"
"   int64_t vg_seqno;\n"
"   char *vg_tags;\n"
"   int64_t vg_mda_count;\n"
"   uint64_t vg_mda_free;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:69
#, no-wrap
msgid ""
" struct guestfs_lvm_vg_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_lvm_vg *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:74
#, no-wrap
msgid ""
" void guestfs_free_lvm_vg (struct guestfs_free_lvm_vg *);\n"
" void guestfs_free_lvm_vg_list (struct guestfs_free_lvm_vg_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:77
msgid "guestfs_lvm_lv"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:79
#, no-wrap
msgid ""
" struct guestfs_lvm_lv {\n"
"   char *lv_name;\n"
"   /* The next field is NOT nul-terminated, be careful when printing it: "
"*/\n"
"   char lv_uuid[32];\n"
"   char *lv_attr;\n"
"   int64_t lv_major;\n"
"   int64_t lv_minor;\n"
"   int64_t lv_kernel_major;\n"
"   int64_t lv_kernel_minor;\n"
"   uint64_t lv_size;\n"
"   int64_t seg_count;\n"
"   char *origin;\n"
"   /* The next field is [0..100] or -1 meaning 'not present': */\n"
"   float snap_percent;\n"
"   /* The next field is [0..100] or -1 meaning 'not present': */\n"
"   float copy_percent;\n"
"   char *move_pv;\n"
"   char *lv_tags;\n"
"   char *mirror_log;\n"
"   char *modules;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:101
#, no-wrap
msgid ""
" struct guestfs_lvm_lv_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_lvm_lv *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:106
#, no-wrap
msgid ""
" void guestfs_free_lvm_lv (struct guestfs_free_lvm_lv *);\n"
" void guestfs_free_lvm_lv_list (struct guestfs_free_lvm_lv_list *);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:111
#, no-wrap
msgid ""
" struct guestfs_stat {\n"
"   int64_t dev;\n"
"   int64_t ino;\n"
"   int64_t mode;\n"
"   int64_t nlink;\n"
"   int64_t uid;\n"
"   int64_t gid;\n"
"   int64_t rdev;\n"
"   int64_t size;\n"
"   int64_t blksize;\n"
"   int64_t blocks;\n"
"   int64_t atime;\n"
"   int64_t mtime;\n"
"   int64_t ctime;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:127
#, no-wrap
msgid ""
" struct guestfs_stat_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_stat *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:132
#, no-wrap
msgid ""
" void guestfs_free_stat (struct guestfs_free_stat *);\n"
" void guestfs_free_stat_list (struct guestfs_free_stat_list *);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:137
#, no-wrap
msgid ""
" struct guestfs_statvfs {\n"
"   int64_t bsize;\n"
"   int64_t frsize;\n"
"   int64_t blocks;\n"
"   int64_t bfree;\n"
"   int64_t bavail;\n"
"   int64_t files;\n"
"   int64_t ffree;\n"
"   int64_t favail;\n"
"   int64_t fsid;\n"
"   int64_t flag;\n"
"   int64_t namemax;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:151
#, no-wrap
msgid ""
" struct guestfs_statvfs_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_statvfs *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:156
#, no-wrap
msgid ""
" void guestfs_free_statvfs (struct guestfs_free_statvfs *);\n"
" void guestfs_free_statvfs_list (struct guestfs_free_statvfs_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:159
msgid "guestfs_dirent"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:161
#, no-wrap
msgid ""
" struct guestfs_dirent {\n"
"   int64_t ino;\n"
"   char ftyp;\n"
"   char *name;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:167
#, no-wrap
msgid ""
" struct guestfs_dirent_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_dirent *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:172
#, no-wrap
msgid ""
" void guestfs_free_dirent (struct guestfs_free_dirent *);\n"
" void guestfs_free_dirent_list (struct guestfs_free_dirent_list *);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:177
#, no-wrap
msgid ""
" struct guestfs_version {\n"
"   int64_t major;\n"
"   int64_t minor;\n"
"   int64_t release;\n"
"   char *extra;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:184
#, no-wrap
msgid ""
" struct guestfs_version_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_version *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:189
#, no-wrap
msgid ""
" void guestfs_free_version (struct guestfs_free_version *);\n"
" void guestfs_free_version_list (struct guestfs_free_version_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:192
msgid "guestfs_xattr"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:194
#, no-wrap
msgid ""
" struct guestfs_xattr {\n"
"   char *attrname;\n"
"   /* The next two fields describe a byte array. */\n"
"   uint32_t attrval_len;\n"
"   char *attrval;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:201
#, no-wrap
msgid ""
" struct guestfs_xattr_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_xattr *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:206
#, no-wrap
msgid ""
" void guestfs_free_xattr (struct guestfs_free_xattr *);\n"
" void guestfs_free_xattr_list (struct guestfs_free_xattr_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:209
msgid "guestfs_inotify_event"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:211
#, no-wrap
msgid ""
" struct guestfs_inotify_event {\n"
"   int64_t in_wd;\n"
"   uint32_t in_mask;\n"
"   uint32_t in_cookie;\n"
"   char *in_name;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:218
#, no-wrap
msgid ""
" struct guestfs_inotify_event_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_inotify_event *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:223
#, no-wrap
msgid ""
" void guestfs_free_inotify_event (struct guestfs_free_inotify_event *);\n"
" void guestfs_free_inotify_event_list (struct "
"guestfs_free_inotify_event_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:226
msgid "guestfs_partition"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:228
#, no-wrap
msgid ""
" struct guestfs_partition {\n"
"   int32_t part_num;\n"
"   uint64_t part_start;\n"
"   uint64_t part_end;\n"
"   uint64_t part_size;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:235
#, no-wrap
msgid ""
" struct guestfs_partition_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_partition *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:240
#, no-wrap
msgid ""
" void guestfs_free_partition (struct guestfs_free_partition *);\n"
" void guestfs_free_partition_list (struct guestfs_free_partition_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:243
msgid "guestfs_application"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:245
#, no-wrap
msgid ""
" struct guestfs_application {\n"
"   char *app_name;\n"
"   char *app_display_name;\n"
"   int32_t app_epoch;\n"
"   char *app_version;\n"
"   char *app_release;\n"
"   char *app_install_path;\n"
"   char *app_trans_path;\n"
"   char *app_publisher;\n"
"   char *app_url;\n"
"   char *app_source_package;\n"
"   char *app_summary;\n"
"   char *app_description;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:260
#, no-wrap
msgid ""
" struct guestfs_application_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_application *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:265
#, no-wrap
msgid ""
" void guestfs_free_application (struct guestfs_free_application *);\n"
" void guestfs_free_application_list (struct guestfs_free_application_list "
"*);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:270
#, no-wrap
msgid ""
" struct guestfs_isoinfo {\n"
"   char *iso_system_id;\n"
"   char *iso_volume_id;\n"
"   uint32_t iso_volume_space_size;\n"
"   uint32_t iso_volume_set_size;\n"
"   uint32_t iso_volume_sequence_number;\n"
"   uint32_t iso_logical_block_size;\n"
"   char *iso_volume_set_id;\n"
"   char *iso_publisher_id;\n"
"   char *iso_data_preparer_id;\n"
"   char *iso_application_id;\n"
"   char *iso_copyright_file_id;\n"
"   char *iso_abstract_file_id;\n"
"   char *iso_bibliographic_file_id;\n"
"   int64_t iso_volume_creation_t;\n"
"   int64_t iso_volume_modification_t;\n"
"   int64_t iso_volume_expiration_t;\n"
"   int64_t iso_volume_effective_t;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:290
#, no-wrap
msgid ""
" struct guestfs_isoinfo_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_isoinfo *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:295
#, no-wrap
msgid ""
" void guestfs_free_isoinfo (struct guestfs_free_isoinfo *);\n"
" void guestfs_free_isoinfo_list (struct guestfs_free_isoinfo_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:298
msgid "guestfs_mdstat"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:300
#, no-wrap
msgid ""
" struct guestfs_mdstat {\n"
"   char *mdstat_device;\n"
"   int32_t mdstat_index;\n"
"   char *mdstat_flags;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:306
#, no-wrap
msgid ""
" struct guestfs_mdstat_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_mdstat *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:311
#, no-wrap
msgid ""
" void guestfs_free_mdstat (struct guestfs_free_mdstat *);\n"
" void guestfs_free_mdstat_list (struct guestfs_free_mdstat_list *);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs-structs.pod:314
msgid "guestfs_btrfssubvolume"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:316
#, no-wrap
msgid ""
" struct guestfs_btrfssubvolume {\n"
"   uint64_t btrfssubvolume_id;\n"
"   uint64_t btrfssubvolume_top_level_id;\n"
"   char *btrfssubvolume_path;\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:322
#, no-wrap
msgid ""
" struct guestfs_btrfssubvolume_list {\n"
"   uint32_t len; /* Number of elements in list. */\n"
"   struct guestfs_btrfssubvolume *val; /* Elements. */\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs-structs.pod:327
#, no-wrap
msgid ""
" void guestfs_free_btrfssubvolume (struct guestfs_free_btrfssubvolume *);\n"
" void guestfs_free_btrfssubvolume_list (struct "
"guestfs_free_btrfssubvolume_list *);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:5
msgid "guestfs - Library for accessing and modifying virtual machine images"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:11
#, no-wrap
msgid ""
" guestfs_h *g = guestfs_create ();\n"
" guestfs_add_drive (g, \"guest.img\");\n"
" guestfs_launch (g);\n"
" guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
" guestfs_touch (g, \"/hello\");\n"
" guestfs_umount (g, \"/\");\n"
" guestfs_close (g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:25
msgid ""
"Libguestfs is a library for accessing and modifying disk images and virtual "
"machines.  This manual page documents the C API."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:28
msgid ""
"If you are looking for an introduction to libguestfs, see the web site: "
"L<http://libguestfs.org/>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:31
msgid ""
"Each virt tool has its own man page (for a full list, go to L</SEE ALSO> at "
"the end of this file)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:34
msgid "The libguestfs FAQ contains many useful answers: L<guestfs-faq(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:36
msgid ""
"For examples of using the API from C, see L<guestfs-examples(3)>.  For "
"examples in other languages, see L</USING LIBGUESTFS WITH OTHER PROGRAMMING "
"LANGUAGES> below."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:40
msgid "API OVERVIEW"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:42
msgid ""
"This section provides a gentler overview of the libguestfs API.  We also try "
"to group API calls together, where that may not be obvious from reading "
"about the individual calls in the main section of this manual."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:47
msgid "HANDLES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:49
msgid ""
"Before you can use libguestfs calls, you have to create a handle.  Then you "
"must add at least one disk image to the handle, followed by launching the "
"handle, then performing whatever operations you want, and finally closing "
"the handle.  By convention we use the single letter C<g> for the name of the "
"handle variable, although of course you can use any name you want."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:56
msgid "The general structure of all libguestfs-using programs looks like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:59
#, no-wrap
msgid ""
" guestfs_h *g = guestfs_create ();\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:61
#, no-wrap
msgid ""
" /* Call guestfs_add_drive additional times if there are\n"
"  * multiple disk images.\n"
"  */\n"
" guestfs_add_drive (g, \"guest.img\");\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:66
#, no-wrap
msgid ""
" /* Most manipulation calls won't work until you've launched\n"
"  * the handle 'g'.  You have to do this _after_ adding drives\n"
"  * and _before_ other commands.\n"
"  */\n"
" guestfs_launch (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:72
#, no-wrap
msgid ""
" /* Now you can examine what partitions, LVs etc are available.\n"
"  */\n"
" char **partitions = guestfs_list_partitions (g);\n"
" char **logvols = guestfs_lvs (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:77
#, no-wrap
msgid ""
" /* To access a filesystem in the image, you must mount it.\n"
"  */\n"
" guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:81
#, no-wrap
msgid ""
" /* Now you can perform filesystem actions on the guest\n"
"  * disk image.\n"
"  */\n"
" guestfs_touch (g, \"/hello\");\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:86
#, no-wrap
msgid ""
" /* This is only needed for libguestfs < 1.5.24.  Since then\n"
"  * it is done automatically when you close the handle.  See\n"
"  * discussion of autosync in this page.\n"
"  */\n"
" guestfs_sync (g);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:92
#, no-wrap
msgid ""
" /* Close the handle 'g'. */\n"
" guestfs_close (g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:95
msgid ""
"The code above doesn't include any error checking.  In real code you should "
"check return values carefully for errors.  In general all functions that "
"return integers return C<-1> on error, and all functions that return "
"pointers return C<NULL> on error.  See section L</ERROR HANDLING> below for "
"how to handle errors, and consult the documentation for each function call "
"below to see precisely how they return error indications.  See "
"L<guestfs-examples(3)> for fully worked examples."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:104
msgid "DISK IMAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:106
msgid ""
"The image filename (C<\"guest.img\"> in the example above) could be a disk "
"image from a virtual machine, a L<dd(1)> copy of a physical hard disk, an "
"actual block device, or simply an empty file of zeroes that you have created "
"through L<posix_fallocate(3)>.  Libguestfs lets you do useful things to all "
"of these."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:112
msgid ""
"The call you should use in modern code for adding drives is "
"L</guestfs_add_drive_opts>.  To add a disk image, allowing writes, and "
"specifying that the format is raw, do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:116
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:120
msgid "You can add a disk read-only using:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:122
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
"                         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:127
msgid ""
"or by calling the older function L</guestfs_add_drive_ro>.  In either case "
"libguestfs won't modify the file."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:130
msgid ""
"Be extremely cautious if the disk image is in use, eg. if it is being used "
"by a virtual machine.  Adding it read-write will almost certainly cause disk "
"corruption, but adding it read-only is safe."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:134
msgid ""
"You must add at least one disk image, and you may add multiple disk images.  "
"In the API, the disk images are usually referred to as C</dev/sda> (for the "
"first one you added), C</dev/sdb> (for the second one you added), etc."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:139
msgid ""
"Once L</guestfs_launch> has been called you cannot add any more images.  You "
"can call L</guestfs_list_devices> to get a list of the device names, in the "
"order that you added them.  See also L</BLOCK DEVICE NAMING> below."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:144
msgid "MOUNTING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:146
msgid ""
"Before you can read or write files, create directories and so on in a disk "
"image that contains filesystems, you have to mount those filesystems using "
"L</guestfs_mount_options> or L</guestfs_mount_ro>.  If you already know that "
"a disk image contains (for example) one partition with a filesystem on that "
"partition, then you can mount it directly:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:153
#, no-wrap
msgid ""
" guestfs_mount_options (g, \"\", \"/dev/sda1\", \"/\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:155
msgid ""
"where C</dev/sda1> means literally the first partition (C<1>) of the first "
"disk image that we added (C</dev/sda>).  If the disk contains Linux LVM2 "
"logical volumes you could refer to those instead (eg. C</dev/VG/LV>).  Note "
"that these are libguestfs virtual devices, and are nothing to do with host "
"devices."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:161
msgid ""
"If you are given a disk image and you don't know what it contains then you "
"have to find out.  Libguestfs can do that too: use "
"L</guestfs_list_partitions> and L</guestfs_lvs> to list possible partitions "
"and LVs, and either try mounting each to see what is mountable, or else "
"examine them with L</guestfs_vfs_type> or L</guestfs_file>.  To list just "
"filesystems, use L</guestfs_list_filesystems>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:169
msgid ""
"Libguestfs also has a set of APIs for inspection of unknown disk images (see "
"L</INSPECTION> below).  But you might find it easier to look at higher level "
"programs built on top of libguestfs, in particular L<virt-inspector(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:174
msgid ""
"To mount a filesystem read-only, use L</guestfs_mount_ro>.  There are "
"several other variations of the C<guestfs_mount_*> call."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:177
msgid "FILESYSTEM ACCESS AND MODIFICATION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:179
msgid ""
"The majority of the libguestfs API consists of fairly low-level calls for "
"accessing and modifying the files, directories, symlinks etc on mounted "
"filesystems.  There are over a hundred such calls which you can find listed "
"in detail below in this man page, and we don't even pretend to cover them "
"all in this overview."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:185
msgid ""
"Specify filenames as full paths, starting with C<\"/\"> and including the "
"mount point."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:188
msgid ""
"For example, if you mounted a filesystem at C<\"/\"> and you want to read "
"the file called C<\"etc/passwd\"> then you could do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:191
#, no-wrap
msgid ""
" char *data = guestfs_cat (g, \"/etc/passwd\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:193
msgid ""
"This would return C<data> as a newly allocated buffer containing the full "
"content of that file (with some conditions: see also L</DOWNLOADING> below), "
"or C<NULL> if there was an error."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:197
msgid ""
"As another example, to create a top-level directory on that filesystem "
"called C<\"var\"> you would do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:200
#, no-wrap
msgid ""
" guestfs_mkdir (g, \"/var\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:202
msgid "To create a symlink you could do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:204
#, no-wrap
msgid ""
" guestfs_ln_s (g, \"/etc/init.d/portmap\",\n"
"               \"/etc/rc3.d/S30portmap\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:207
msgid ""
"Libguestfs will reject attempts to use relative paths and there is no "
"concept of a current working directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:210
msgid ""
"Libguestfs can return errors in many situations: for example if the "
"filesystem isn't writable, or if a file or directory that you requested "
"doesn't exist.  If you are using the C API (documented here)  you have to "
"check for those error conditions after each call.  (Other language bindings "
"turn these errors into exceptions)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:216
msgid ""
"File writes are affected by the per-handle umask, set by calling "
"L</guestfs_umask> and defaulting to 022.  See L</UMASK>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:219
msgid ""
"Since libguestfs 1.18, it is possible to mount the libguestfs filesystem on "
"a local directory, subject to some restrictions.  See L</MOUNT LOCAL> below."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:223
msgid "PARTITIONING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:225
msgid ""
"Libguestfs contains API calls to read, create and modify partition tables on "
"disk images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:228
msgid ""
"In the common case where you want to create a single partition covering the "
"whole disk, you should use the L</guestfs_part_disk> call:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:232
#, no-wrap
msgid ""
" const char *parttype = \"mbr\";\n"
" if (disk_is_larger_than_2TB)\n"
"   parttype = \"gpt\";\n"
" guestfs_part_disk (g, \"/dev/sda\", parttype);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:237
msgid ""
"Obviously this effectively wipes anything that was on that disk image "
"before."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:240
msgid "LVM2"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:242
msgid ""
"Libguestfs provides access to a large part of the LVM2 API, such as "
"L</guestfs_lvcreate> and L</guestfs_vgremove>.  It won't make much sense "
"unless you familiarize yourself with the concepts of physical volumes, "
"volume groups and logical volumes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:247
msgid ""
"This author strongly recommends reading the LVM HOWTO, online at "
"L<http://tldp.org/HOWTO/LVM-HOWTO/>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:250
msgid "DOWNLOADING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:252
msgid ""
"Use L</guestfs_cat> to download small, text only files.  This call is "
"limited to files which are less than 2 MB and which cannot contain any ASCII "
"NUL (C<\\0>) characters.  However the API is very simple to use."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:256
msgid ""
"L</guestfs_read_file> can be used to read files which contain arbitrary 8 "
"bit data, since it returns a (pointer, size) pair.  However it is still "
"limited to \"small\" files, less than 2 MB."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:260
msgid ""
"L</guestfs_download> can be used to download any file, with no limits on "
"content or size (even files larger than 4 GB)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:263
msgid "To download multiple files, see L</guestfs_tar_out> and L</guestfs_tgz_out>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:266
msgid "UPLOADING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:268
msgid ""
"It's often the case that you want to write a file or files to the disk "
"image."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:271
msgid ""
"To write a small file with fixed content, use L</guestfs_write>.  To create "
"a file of all zeroes, use L</guestfs_truncate_size> (sparse) or "
"L</guestfs_fallocate64> (with all disk blocks allocated).  There are a "
"variety of other functions for creating test files, for example "
"L</guestfs_fill> and L</guestfs_fill_pattern>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:277
msgid ""
"To upload a single file, use L</guestfs_upload>.  This call has no limits on "
"file content or size (even files larger than 4 GB)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:280
msgid "To upload multiple files, see L</guestfs_tar_in> and L</guestfs_tgz_in>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:282
msgid ""
"However the fastest way to upload I<large numbers of arbitrary files> is to "
"turn them into a squashfs or CD ISO (see L<mksquashfs(8)> and "
"L<mkisofs(8)>), then attach this using L</guestfs_add_drive_ro>.  If you add "
"the drive in a predictable way (eg. adding it last after all other drives) "
"then you can get the device name from L</guestfs_list_devices> and mount it "
"directly using L</guestfs_mount_ro>.  Note that squashfs images are "
"sometimes non-portable between kernel versions, and they don't support "
"labels or UUIDs.  If you want to pre-build an image or you need to mount it "
"using a label or UUID, use an ISO image instead."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:293
msgid "COPYING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:295
msgid ""
"There are various different commands for copying between files and devices "
"and in and out of the guest filesystem.  These are summarised in the table "
"below."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:301
msgid "B<file> to B<file>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:303
msgid ""
"Use L</guestfs_cp> to copy a single file, or L</guestfs_cp_a> to copy "
"directories recursively."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:306
msgid "To copy part of a file (offset and size) use L</guestfs_copy_file_to_file>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:309
msgid "B<file> to B<device>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:311
msgid "B<device> to B<file>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:313
msgid "B<device> to B<device>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:315
msgid ""
"Use L</guestfs_copy_file_to_device>, L</guestfs_copy_device_to_file>, or "
"L</guestfs_copy_device_to_device>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:318
msgid "Example: duplicate the contents of an LV:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:320
#, no-wrap
msgid ""
" guestfs_copy_device_to_device (g,\n"
"         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
"         /* -1 marks the end of the list of optional parameters */\n"
"         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:325
msgid ""
"The destination (C</dev/VG/Copy>) must be at least as large as the source "
"(C</dev/VG/Original>).  To copy less than the whole source device, use the "
"optional C<size> parameter:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:329
#, no-wrap
msgid ""
" guestfs_copy_device_to_device (g,\n"
"         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
"         GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, 10000,\n"
"         -1);\n"
"\n"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:334
msgid "B<file on the host> to B<file or device>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:336
msgid "Use L</guestfs_upload>.  See L</UPLOADING> above."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:338
msgid "B<file or device> to B<file on the host>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:340
msgid "Use L</guestfs_download>.  See L</DOWNLOADING> above."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:344
msgid "UPLOADING AND DOWNLOADING TO PIPES AND FILE DESCRIPTORS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:346
msgid ""
"Calls like L</guestfs_upload>, L</guestfs_download>, L</guestfs_tar_in>, "
"L</guestfs_tar_out> etc appear to only take filenames as arguments, so it "
"appears you can only upload and download to files.  However many Un*x-like "
"hosts let you use the special device files C</dev/stdin>, C</dev/stdout>, "
"C</dev/stderr> and C</dev/fd/N> to read and write from stdin, stdout, "
"stderr, and arbitrary file descriptor N."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:354
msgid "For example, L<virt-cat(1)> writes its output to stdout by doing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:357
#, no-wrap
msgid ""
" guestfs_download (g, filename, \"/dev/stdout\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:359
msgid "and you can write tar output to a file descriptor C<fd> by doing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:361
#, no-wrap
msgid ""
" char devfd[64];\n"
" snprintf (devfd, sizeof devfd, \"/dev/fd/%d\", fd);\n"
" guestfs_tar_out (g, \"/\", devfd);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:365
msgid "LISTING FILES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:367
msgid ""
"L</guestfs_ll> is just designed for humans to read (mainly when using the "
"L<guestfish(1)>-equivalent command C<ll>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:370
msgid ""
"L</guestfs_ls> is a quick way to get a list of files in a directory from "
"programs, as a flat list of strings."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:373
msgid ""
"L</guestfs_readdir> is a programmatic way to get a list of files in a "
"directory, plus additional information about each one.  It is more "
"equivalent to using the L<readdir(3)> call on a local filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:377
msgid ""
"L</guestfs_find> and L</guestfs_find0> can be used to recursively list "
"files."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:380
msgid "RUNNING COMMANDS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:382
msgid ""
"Although libguestfs is primarily an API for manipulating files inside guest "
"images, we also provide some limited facilities for running commands inside "
"guests."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:386
msgid "There are many limitations to this:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:392
msgid ""
"The kernel version that the command runs under will be different from what "
"it expects."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:397
msgid ""
"If the command needs to communicate with daemons, then most likely they "
"won't be running."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:402
msgid "The command will be running in limited memory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:406
msgid ""
"The network may not be available unless you enable it (see "
"L</guestfs_set_network>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:411
msgid "Only supports Linux guests (not Windows, BSD, etc)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:415
msgid "Architecture limitations (eg. won't work for a PPC guest on an X86 host)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:420
msgid ""
"For SELinux guests, you may need to enable SELinux and load policy first.  "
"See L</SELINUX> in this manpage."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:425
msgid ""
"I<Security:> It is not safe to run commands from untrusted, possibly "
"malicious guests.  These commands may attempt to exploit your program by "
"sending unexpected output.  They could also try to exploit the Linux kernel "
"or qemu provided by the libguestfs appliance.  They could use the network "
"provided by the libguestfs appliance to bypass ordinary network partitions "
"and firewalls.  They could use the elevated privileges or different SELinux "
"context of your program to their advantage."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:434
msgid ""
"A secure alternative is to use libguestfs to install a \"firstboot\" script "
"(a script which runs when the guest next boots normally), and to have this "
"script run the commands you want in the normal context of the running guest, "
"network security and so on.  For information about other security issues, "
"see L</SECURITY>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:442
msgid ""
"The two main API calls to run commands are L</guestfs_command> and "
"L</guestfs_sh> (there are also variations)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:445
msgid ""
"The difference is that L</guestfs_sh> runs commands using the shell, so any "
"shell globs, redirections, etc will work."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:448
msgid "CONFIGURATION FILES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:450
msgid ""
"To read and write configuration files in Linux guest filesystems, we "
"strongly recommend using Augeas.  For example, Augeas understands how to "
"read and write, say, a Linux shadow password file or X.org configuration "
"file, and so avoids you having to write that code."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:455
msgid ""
"The main Augeas calls are bound through the C<guestfs_aug_*> APIs.  We don't "
"document Augeas itself here because there is excellent documentation on the "
"L<http://augeas.net/> website."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:459
msgid ""
"If you don't want to use Augeas (you fool!) then try calling "
"L</guestfs_read_lines> to get the file as a list of lines which you can "
"iterate over."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:463
msgid "SELINUX"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:465
msgid ""
"We support SELinux guests.  To ensure that labeling happens correctly in "
"SELinux guests, you need to enable SELinux and load the guest's policy:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:473
msgid "Before launching, do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:475
#, no-wrap
msgid ""
" guestfs_set_selinux (g, 1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:479
msgid ""
"After mounting the guest's filesystem(s), load the policy.  This is best "
"done by running the L<load_policy(8)> command in the guest itself:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:483
#, no-wrap
msgid ""
" guestfs_sh (g, \"/usr/sbin/load_policy\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:485
msgid ""
"(Older versions of C<load_policy> require you to specify the name of the "
"policy file)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:490
msgid ""
"Optionally, set the security context for the API.  The correct security "
"context to use can only be known by inspecting the guest.  As an example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:494
#, no-wrap
msgid ""
" guestfs_setcon (g, \"unconfined_u:unconfined_r:unconfined_t:s0\");\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:498
msgid "This will work for running commands and editing existing files."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:500
msgid ""
"When new files are created, you may need to label them explicitly, for "
"example by running the external command C<restorecon pathname>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:504
msgid "UMASK"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:506
msgid ""
"Certain calls are affected by the current file mode creation mask (the "
"\"umask\").  In particular ones which create files or directories, such as "
"L</guestfs_touch>, L</guestfs_mknod> or L</guestfs_mkdir>.  This affects "
"either the default mode that the file is created with or modifies the mode "
"that you supply."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:512
msgid ""
"The default umask is C<022>, so files are created with modes such as C<0644> "
"and directories with C<0755>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:515
msgid ""
"There are two ways to avoid being affected by umask.  Either set umask to 0 "
"(call C<guestfs_umask (g, 0)> early after launching).  Or call "
"L</guestfs_chmod> after creating each file or directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:519
msgid "For more information about umask, see L<umask(2)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:523
msgid ""
"Libguestfs allows you to access Linux guests which have been encrypted using "
"whole disk encryption that conforms to the Linux Unified Key Setup (LUKS) "
"standard.  This includes nearly all whole disk encryption systems used by "
"modern Linux guests."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:529
msgid ""
"Use L</guestfs_vfs_type> to identify LUKS-encrypted block devices (it "
"returns the string C<crypto_LUKS>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:532
msgid ""
"Then open these devices by calling L</guestfs_luks_open>.  Obviously you "
"will require the passphrase!"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:535
msgid ""
"Opening a LUKS device creates a new device mapper device called "
"C</dev/mapper/mapname> (where C<mapname> is the string you supply to "
"L</guestfs_luks_open>).  Reads and writes to this mapper device are "
"decrypted from and encrypted to the underlying block device respectively."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:541
msgid ""
"LVM volume groups on the device can be made visible by calling "
"L</guestfs_vgscan> followed by L</guestfs_vg_activate_all>.  The logical "
"volume(s) can now be mounted in the usual way."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:545
msgid ""
"Use the reverse process to close a LUKS device.  Unmount any logical volumes "
"on it, deactivate the volume groups by caling C<guestfs_vg_activate (g, 0, "
"[\"/dev/VG\"])>.  Then close the mapper device by calling "
"L</guestfs_luks_close> on the C</dev/mapper/mapname> device (I<not> the "
"underlying encrypted block device)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:552
msgid "MOUNT LOCAL"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:554
msgid ""
"In libguestfs E<ge> 1.18, it is possible to mount the libguestfs filesystem "
"on a local directory and access it using ordinary POSIX calls and programs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:558
msgid ""
"Availability of this is subject to a number of restrictions: it requires "
"FUSE (the Filesystem in USErspace), and libfuse must also have been "
"available when libguestfs was compiled.  FUSE may require that a kernel "
"module is loaded, and it may be necessary to add the current user to a "
"special C<fuse> group.  See the documentation for your distribution and "
"L<http://fuse.sf.net> for further information."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:565
msgid ""
"The call to mount the libguestfs filesystem on a local directory is "
"L</guestfs_mount_local> (q.v.) followed by L</guestfs_mount_local_run>.  The "
"latter does not return until you unmount the filesystem.  The reason is that "
"the call enters the FUSE main loop and processes kernel requests, turning "
"them into libguestfs calls.  An alternative design would have been to create "
"a background thread to do this, but libguestfs doesn't require pthreads.  "
"This way is also more flexible: for example the user can create another "
"thread for L</guestfs_mount_local_run>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:575
msgid ""
"L</guestfs_mount_local> needs a certain amount of time to set up the "
"mountpoint.  The mountpoint is not ready to use until the call returns.  At "
"this point, accesses to the filesystem will block until the main loop is "
"entered (ie. L</guestfs_mount_local_run>).  So if you need to start another "
"process to access the filesystem, put the fork between "
"L</guestfs_mount_local> and L</guestfs_mount_local_run>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:583
msgid "MOUNT LOCAL COMPATIBILITY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:585
msgid ""
"Since local mounting was only added in libguestfs 1.18, and may not be "
"available even in these builds, you should consider writing code so that it "
"doesn't depend on this feature, and can fall back to using libguestfs file "
"system calls."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:590
msgid ""
"If libguestfs was compiled without support for L</guestfs_mount_local> then "
"calling it will return an error with errno set to C<ENOTSUP> (see "
"L</guestfs_last_errno>)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:594
msgid "MOUNT LOCAL PERFORMANCE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:596
msgid ""
"Libguestfs on top of FUSE performs quite poorly.  For best performance do "
"not use it.  Use ordinary libguestfs filesystem calls, upload, download "
"etc. instead."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:600
msgid "INSPECTION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:602
msgid ""
"Libguestfs has APIs for inspecting an unknown disk image to find out if it "
"contains operating systems, an install CD or a live CD.  (These APIs used to "
"be in a separate Perl-only library called L<Sys::Guestfs::Lib(3)> but since "
"version 1.5.3 the most frequently used part of this library has been "
"rewritten in C and moved into the core code)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:609
msgid ""
"Add all disks belonging to the unknown virtual machine and call "
"L</guestfs_launch> in the usual way."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:612
msgid ""
"Then call L</guestfs_inspect_os>.  This function uses other libguestfs calls "
"and certain heuristics, and returns a list of operating systems that were "
"found.  An empty list means none were found.  A single element is the root "
"filesystem of the operating system.  For dual- or multi-boot guests, "
"multiple roots can be returned, each one corresponding to a separate "
"operating system.  (Multi-boot virtual machines are extremely rare in the "
"world of virtualization, but since this scenario can happen, we have built "
"libguestfs to deal with it.)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:621
msgid ""
"For each root, you can then call various C<guestfs_inspect_get_*> functions "
"to get additional details about that operating system.  For example, call "
"L</guestfs_inspect_get_type> to return the string C<windows> or C<linux> for "
"Windows and Linux-based operating systems respectively."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:627
msgid ""
"Un*x-like and Linux-based operating systems usually consist of several "
"filesystems which are mounted at boot time (for example, a separate boot "
"partition mounted on C</boot>).  The inspection rules are able to detect how "
"filesystems correspond to mount points.  Call "
"C<guestfs_inspect_get_mountpoints> to get this mapping.  It might return a "
"hash table like this example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:634
#, no-wrap
msgid ""
" /boot => /dev/sda1\n"
" /     => /dev/vg_guest/lv_root\n"
" /usr  => /dev/vg_guest/lv_usr\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:638
msgid ""
"The caller can then make calls to L</guestfs_mount_options> to mount the "
"filesystems as suggested."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:641
msgid ""
"Be careful to mount filesystems in the right order (eg. C</> before "
"C</usr>).  Sorting the keys of the hash by length, shortest first, should "
"work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:645
msgid ""
"Inspection currently only works for some common operating systems.  "
"Contributors are welcome to send patches for other operating systems that we "
"currently cannot detect."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:649
msgid ""
"Encrypted disks must be opened before inspection.  See L</ENCRYPTED DISKS> "
"for more details.  The L</guestfs_inspect_os> function just ignores any "
"encrypted devices."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:653
msgid ""
"A note on the implementation: The call L</guestfs_inspect_os> performs "
"inspection and caches the results in the guest handle.  Subsequent calls to "
"C<guestfs_inspect_get_*> return this cached information, but I<do not> "
"re-read the disks.  If you change the content of the guest disks, you can "
"redo inspection by calling L</guestfs_inspect_os> again.  "
"(L</guestfs_inspect_list_applications> works a little differently from the "
"other calls and does read the disks.  See documentation for that function "
"for details)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:662
msgid "INSPECTING INSTALL DISKS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:664
msgid ""
"Libguestfs (since 1.9.4) can detect some install disks, install CDs, live "
"CDs and more."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:667
msgid ""
"Call L</guestfs_inspect_get_format> to return the format of the operating "
"system, which currently can be C<installed> (a regular operating system) or "
"C<installer> (some sort of install disk)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:671
msgid ""
"Further information is available about the operating system that can be "
"installed using the regular inspection APIs like "
"L</guestfs_inspect_get_product_name>, L</guestfs_inspect_get_major_version> "
"etc."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:676
msgid ""
"Some additional information specific to installer disks is also available "
"from the L</guestfs_inspect_is_live>, L</guestfs_inspect_is_netinst> and "
"L</guestfs_inspect_is_multipart> calls."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:681
msgid "SPECIAL CONSIDERATIONS FOR WINDOWS GUESTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:683
msgid ""
"Libguestfs can mount NTFS partitions.  It does this using the "
"L<http://www.ntfs-3g.org/> driver."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:686
msgid "DRIVE LETTERS AND PATHS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:688
msgid ""
"DOS and Windows still use drive letters, and the filesystems are always "
"treated as case insensitive by Windows itself, and therefore you might find "
"a Windows configuration file referring to a path like "
"C<c:\\windows\\system32>.  When the filesystem is mounted in libguestfs, "
"that directory might be referred to as C</WINDOWS/System32>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:694
msgid ""
"Drive letter mappings can be found using inspection (see L</INSPECTION> and "
"L</guestfs_inspect_get_drive_mappings>)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:697
msgid ""
"Dealing with separator characters (backslash vs forward slash) is outside "
"the scope of libguestfs, but usually a simple character replacement will "
"work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:701
msgid ""
"To resolve the case insensitivity of paths, call "
"L</guestfs_case_sensitive_path>."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:704
msgid "ACCESSING THE WINDOWS REGISTRY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:706
msgid ""
"Libguestfs also provides some help for decoding Windows Registry \"hive\" "
"files, through the library C<hivex> which is part of the libguestfs project "
"although ships as a separate tarball.  You have to locate and download the "
"hive file(s) yourself, and then pass them to C<hivex> functions.  See also "
"the programs L<hivexml(1)>, L<hivexsh(1)>, L<hivexregedit(1)> and "
"L<virt-win-reg(1)> for more help on this issue."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:714
msgid "SYMLINKS ON NTFS-3G FILESYSTEMS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:716
msgid ""
"Ntfs-3g tries to rewrite \"Junction Points\" and NTFS \"symbolic links\" to "
"provide something which looks like a Linux symlink.  The way it tries to do "
"the rewriting is described here:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:720
msgid "L<http://www.tuxera.com/community/ntfs-3g-advanced/junction-points-and-symbolic-links/>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:722
msgid ""
"The essential problem is that ntfs-3g simply does not have enough "
"information to do a correct job.  NTFS links can contain drive letters and "
"references to external device GUIDs that ntfs-3g has no way of resolving.  "
"It is almost certainly the case that libguestfs callers should ignore what "
"ntfs-3g does (ie. don't use L</guestfs_readlink> on NTFS volumes)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:729
msgid ""
"Instead if you encounter a symbolic link on an ntfs-3g filesystem, use "
"L</guestfs_lgetxattr> to read the C<system.ntfs_reparse_data> extended "
"attribute, and read the raw reparse data from that (you can find the format "
"documented in various places around the web)."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:734
msgid "EXTENDED ATTRIBUTES ON NTFS-3G FILESYSTEMS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:736
msgid ""
"There are other useful extended attributes that can be read from ntfs-3g "
"filesystems (using L</guestfs_getxattr>).  See:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:739
msgid "L<http://www.tuxera.com/community/ntfs-3g-advanced/extended-attributes/>"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:741
msgid "RESIZE2FS ERRORS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:743
msgid ""
"The L</guestfs_resize2fs>, L</guestfs_resize2fs_size> and "
"L</guestfs_resize2fs_M> calls are used to resize ext2/3/4 filesystems."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:746
msgid ""
"The underlying program (L<resize2fs(8)>) requires that the filesystem is "
"clean and recently fsck'd before you can resize it.  Also, if the resize "
"operation fails for some reason, then you had to call fsck the filesystem "
"again to fix it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:751
msgid ""
"In libguestfs C<lt> 1.17.14, you usually had to call L</guestfs_e2fsck_f> "
"before the resize.  However, in C<ge> 1.17.14, L<e2fsck(8)> is called "
"automatically before the resize, so you no longer need to do this."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:756
msgid ""
"The L<resize2fs(8)> program can still fail, in which case it prints an error "
"message similar to:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:759
#, no-wrap
msgid ""
" Please run 'e2fsck -fy <device>' to fix the filesystem\n"
" after the aborted resize operation.\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:762
msgid ""
"You can do this by calling L</guestfs_e2fsck> with the C<forceall> option.  "
"However in the context of disk images, it is usually better to avoid this "
"situation, eg. by rolling back to an earlier snapshot, or by copying and "
"resizing and on failure going back to the original."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:767
msgid "USING LIBGUESTFS WITH OTHER PROGRAMMING LANGUAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:769
msgid ""
"Although we don't want to discourage you from using the C API, we will "
"mention here that the same API is also available in other languages."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:772
msgid ""
"The API is broadly identical in all supported languages.  This means that "
"the C call C<guestfs_add_drive_ro(g,file)> is C<$g-E<gt>add_drive_ro($file)> "
"in Perl, C<g.add_drive_ro(file)> in Python, and C<g#add_drive_ro file> in "
"OCaml.  In other words, a straightforward, predictable isomorphism between "
"each language."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:778
msgid ""
"Error messages are automatically transformed into exceptions if the language "
"supports it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:781
msgid ""
"We don't try to \"object orientify\" parts of the API in OO languages, "
"although contributors are welcome to write higher level APIs above what we "
"provide in their favourite languages if they wish."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:787
msgid "B<C++>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:789
msgid ""
"You can use the I<guestfs.h> header file from C++ programs.  The C++ API is "
"identical to the C API.  C++ classes and exceptions are not used."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:793
msgid "B<C#>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:795
msgid ""
"The C# bindings are highly experimental.  Please read the warnings at the "
"top of C<csharp/Libguestfs.cs>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:798
msgid "B<Erlang>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:800
msgid "See L<guestfs-erlang(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:802
msgid "B<GObject>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:804
msgid ""
"Experimental GObject bindings (with GObject Introspection support) are "
"available.  See the C<gobject> directory in the source."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:807
msgid "B<Haskell>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:809
msgid ""
"This is the only language binding that is working but incomplete.  Only "
"calls which return simple integers have been bound in Haskell, and we are "
"looking for help to complete this binding."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:813
msgid "B<Java>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:815
msgid ""
"Full documentation is contained in the Javadoc which is distributed with "
"libguestfs.  For examples, see L<guestfs-java(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:818
msgid "B<OCaml>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:820
msgid "See L<guestfs-ocaml(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:822
msgid "B<Perl>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:824
msgid "See L<guestfs-perl(3)> and L<Sys::Guestfs(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:826
msgid "B<PHP>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:828
msgid ""
"For documentation see C<README-PHP> supplied with libguestfs sources or in "
"the php-libguestfs package for your distribution."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:831
msgid "The PHP binding only works correctly on 64 bit machines."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:833
msgid "B<Python>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:835
msgid "See L<guestfs-python(3)>."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:837
msgid "B<Ruby>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:839
msgid "See L<guestfs-ruby(3)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:841
msgid "For JRuby, use the Java bindings."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:843
msgid "B<shell scripts>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:845
msgid "See L<guestfish(1)>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:849
msgid "LIBGUESTFS GOTCHAS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:851
msgid ""
"L<http://en.wikipedia.org/wiki/Gotcha_(programming)>: \"A feature of a "
"system [...] that works in the way it is documented but is counterintuitive "
"and almost invites mistakes.\""
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:855
msgid ""
"Since we developed libguestfs and the associated tools, there are several "
"things we would have designed differently, but are now stuck with for "
"backwards compatibility or other reasons.  If there is ever a libguestfs 2.0 "
"release, you can expect these to change.  Beware of them."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:863
msgid "Autosync / forgetting to sync."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:865
msgid ""
"I<Update:> Autosync is enabled by default for all API users starting from "
"libguestfs 1.5.24.  This section only applies to older versions."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:868
msgid ""
"When modifying a filesystem from C or another language, you B<must> unmount "
"all filesystems and call L</guestfs_sync> explicitly before you close the "
"libguestfs handle.  You can also call:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:872
#, no-wrap
msgid ""
" guestfs_set_autosync (g, 1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:874
msgid ""
"to have the unmount/sync done automatically for you when the handle 'g' is "
"closed.  (This feature is called \"autosync\", L</guestfs_set_autosync> "
"q.v.)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:878
msgid ""
"If you forget to do this, then it is entirely possible that your changes "
"won't be written out, or will be partially written, or (very rarely) that "
"you'll get disk corruption."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:882
msgid ""
"Note that in L<guestfish(3)> autosync is the default.  So quick and dirty "
"guestfish scripts that forget to sync will work just fine, which can make "
"this very puzzling if you are trying to debug a problem."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:886
msgid "Mount option C<-o sync> should not be the default."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:888
msgid ""
"I<Update:> L</guestfs_mount> no longer adds any options starting from "
"libguestfs 1.13.16.  This section only applies to older versions."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:891
msgid ""
"If you use L</guestfs_mount>, then C<-o sync,noatime> are added implicitly.  "
"However C<-o sync> does not add any reliability benefit, but does have a "
"very large performance impact."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:895
msgid ""
"The work around is to use L</guestfs_mount_options> and set the mount "
"options that you actually want to use."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:898
msgid "Read-only should be the default."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:900
msgid ""
"In L<guestfish(3)>, I<--ro> should be the default, and you should have to "
"specify I<--rw> if you want to make changes to the image."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:903
msgid "This would reduce the potential to corrupt live VM images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:905
msgid ""
"Note that many filesystems change the disk when you just mount and unmount, "
"even if you didn't perform any writes.  You need to use "
"L</guestfs_add_drive_ro> to guarantee that the disk is not changed."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:909
msgid "guestfish command line is hard to use."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:911
msgid ""
"C<guestfish disk.img> doesn't do what people expect (open C<disk.img> for "
"examination).  It tries to run a guestfish command C<disk.img> which doesn't "
"exist, so it fails.  In earlier versions of guestfish the error message was "
"also unintuitive, but we have corrected this since.  Like the Bourne shell, "
"we should have used C<guestfish -c command> to run commands."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:918
msgid "guestfish megabyte modifiers don't work right on all commands"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:920
msgid ""
"In recent guestfish you can use C<1M> to mean 1 megabyte (and similarly for "
"other modifiers).  What guestfish actually does is to multiply the number "
"part by the modifier part and pass the result to the C API.  However this "
"doesn't work for a few APIs which aren't expecting bytes, but are already "
"expecting some other unit (eg. megabytes)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:927
msgid "The most common is L</guestfs_lvcreate>.  The guestfish command:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:929
#, no-wrap
msgid ""
" lvcreate LV VG 100M\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:931
msgid ""
"does not do what you might expect.  Instead because L</guestfs_lvcreate> is "
"already expecting megabytes, this tries to create a 100 I<terabyte> (100 "
"megabytes * megabytes) logical volume.  The error message you get from this "
"is also a little obscure."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:936
msgid ""
"This could be fixed in the generator by specially marking parameters and "
"return values which take bytes or other units."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:939
msgid "Ambiguity between devices and paths"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:941
msgid ""
"There is a subtle ambiguity in the API between a device name "
"(eg. C</dev/sdb2>) and a similar pathname.  A file might just happen to be "
"called C<sdb2> in the directory C</dev> (consider some non-Unix VM image)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:946
msgid ""
"In the current API we usually resolve this ambiguity by having two separate "
"calls, for example L</guestfs_checksum> and L</guestfs_checksum_device>.  "
"Some API calls are ambiguous and (incorrectly) resolve the problem by "
"detecting if the path supplied begins with C</dev/>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:952
msgid ""
"To avoid both the ambiguity and the need to duplicate some calls, we could "
"make paths/devices into structured names.  One way to do this would be to "
"use a notation like grub (C<hd(0,0)>), although nobody really likes this "
"aspect of grub.  Another way would be to use a structured type, equivalent "
"to this OCaml type:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:958
#, no-wrap
msgid ""
" type path = Path of string | Device of int | Partition of int * int\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:960
msgid "which would allow you to pass arguments like:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:962
#, no-wrap
msgid ""
" Path \"/foo/bar\"\n"
" Device 1            (* /dev/sdb, or perhaps /dev/sda *)\n"
" Partition (1, 2)    (* /dev/sdb2 (or is it /dev/sda2 or /dev/sdb3?) *)\n"
" Path \"/dev/sdb2\"    (* not a device *)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:967
msgid ""
"As you can see there are still problems to resolve even with this "
"representation.  Also consider how it might work in guestfish."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:972
msgid "KEYS AND PASSPHRASES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:974
msgid ""
"Certain libguestfs calls take a parameter that contains sensitive key "
"material, passed in as a C string."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:977
msgid ""
"In the future we would hope to change the libguestfs implementation so that "
"keys are L<mlock(2)>-ed into physical RAM, and thus can never end up in "
"swap.  However this is I<not> done at the moment, because of the complexity "
"of such an implementation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:982
msgid ""
"Therefore you should be aware that any key parameter you pass to libguestfs "
"might end up being written out to the swap partition.  If this is a concern, "
"scrub the swap partition or don't use libguestfs on encrypted devices."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:987
msgid "MULTIPLE HANDLES AND MULTIPLE THREADS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:989
msgid ""
"All high-level libguestfs actions are synchronous.  If you want to use "
"libguestfs asynchronously then you must create a thread."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:992
msgid ""
"Only use the handle from a single thread.  Either use the handle exclusively "
"from one thread, or provide your own mutex so that two threads cannot issue "
"calls on the same handle at the same time."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:996
msgid ""
"See the graphical program guestfs-browser for one possible architecture for "
"multithreaded programs using libvirt and libguestfs."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:999
msgid "PATH"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1001
msgid ""
"Libguestfs needs a supermin appliance, which it finds by looking along an "
"internal path."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1004
msgid ""
"By default it looks for these in the directory C<$libdir/guestfs> "
"(eg. C</usr/local/lib/guestfs> or C</usr/lib64/guestfs>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1007
msgid ""
"Use L</guestfs_set_path> or set the environment variable L</LIBGUESTFS_PATH> "
"to change the directories that libguestfs will search in.  The value is a "
"colon-separated list of paths.  The current directory is I<not> searched "
"unless the path contains an empty element or C<.>.  For example "
"C<LIBGUESTFS_PATH=:/usr/lib/guestfs> would search the current directory and "
"then C</usr/lib/guestfs>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1014
msgid "QEMU WRAPPERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1016
msgid ""
"If you want to compile your own qemu, run qemu from a non-standard location, "
"or pass extra arguments to qemu, then you can write a shell-script wrapper "
"around qemu."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1020
msgid ""
"There is one important rule to remember: you I<must C<exec qemu>> as the "
"last command in the shell script (so that qemu replaces the shell and "
"becomes the direct child of the libguestfs-using program).  If you don't do "
"this, then the qemu process won't be cleaned up correctly."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1025
msgid ""
"Here is an example of a wrapper, where I have built my own copy of qemu from "
"source:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1028
#, no-wrap
msgid ""
" #!/bin/sh -\n"
" qemudir=/home/rjones/d/qemu\n"
" exec $qemudir/x86_64-softmmu/qemu-system-x86_64 -L $qemudir/pc-bios "
"\"$@\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1032
msgid ""
"Save this script as C</tmp/qemu.wrapper> (or wherever), C<chmod +x>, and "
"then use it by setting the LIBGUESTFS_QEMU environment variable.  For "
"example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1036
#, no-wrap
msgid ""
" LIBGUESTFS_QEMU=/tmp/qemu.wrapper guestfish\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1038
msgid ""
"Note that libguestfs also calls qemu with the -help and -version options in "
"order to determine features."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1041
msgid ""
"Wrappers can also be used to edit the options passed to qemu.  In the "
"following example, the C<-machine ...> option (C<-machine> and the following "
"argument) are removed from the command line and replaced with C<-machine "
"pc,accel=tcg>.  The while loop iterates over the options until it finds the "
"right one to remove, putting the remaining options into the C<args> array."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1050
#, no-wrap
msgid ""
" i=0\n"
" while [ $# -gt 0 ]; do\n"
"     case \"$1\" in\n"
"     -machine)\n"
"         shift 2;;\n"
"     *)\n"
"         args[i]=\"$1\"\n"
"         (( i++ ))\n"
"         shift ;;\n"
"     esac\n"
" done\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1062
#, no-wrap
msgid ""
" exec qemu-kvm -machine pc,accel=tcg \"${args[@]}\"\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1064
msgid "ATTACHING TO RUNNING DAEMONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1066
msgid ""
"I<Note (1):> This is B<highly experimental> and has a tendency to eat "
"babies.  Use with caution."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1069
msgid ""
"I<Note (2):> This section explains how to attach to a running daemon from a "
"low level perspective.  For most users, simply using virt tools such as "
"L<guestfish(1)> with the I<--live> option will \"just work\"."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1073
msgid "Using guestfs_set_attach_method"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1075
msgid ""
"By calling L</guestfs_set_attach_method> you can change how the library "
"connects to the C<guestfsd> daemon in L</guestfs_launch> (read "
"L</ARCHITECTURE> for some background)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1079
msgid ""
"The normal attach method is C<appliance>, where a small appliance is created "
"containing the daemon, and then the library connects to this."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1082
msgid ""
"Setting attach method to C<unix:I<path>> (where I<path> is the path of a "
"Unix domain socket) causes L</guestfs_launch> to connect to an existing "
"daemon over the Unix domain socket."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1086
msgid ""
"The normal use for this is to connect to a running virtual machine that "
"contains a C<guestfsd> daemon, and send commands so you can read and write "
"files inside the live virtual machine."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1090
msgid "Using guestfs_add_domain with live flag"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1092
msgid ""
"L</guestfs_add_domain> provides some help for getting the correct attach "
"method.  If you pass the C<live> option to this function, then (if the "
"virtual machine is running) it will examine the libvirt XML looking for a "
"virtio-serial channel to connect to:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1098
#, no-wrap
msgid ""
" <domain>\n"
"   ...\n"
"   <devices>\n"
"     ...\n"
"     <channel type='unix'>\n"
"       <source mode='bind' path='/path/to/socket'/>\n"
"       <target type='virtio' name='org.libguestfs.channel.0'/>\n"
"     </channel>\n"
"     ...\n"
"   </devices>\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1110
msgid ""
"L</guestfs_add_domain> extracts C</path/to/socket> and sets the attach "
"method to C<unix:/path/to/socket>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1113
msgid ""
"Some of the libguestfs tools (including guestfish) support a I<--live> "
"option which is passed through to L</guestfs_add_domain> thus allowing you "
"to attach to and modify live virtual machines."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1117
msgid ""
"The virtual machine needs to have been set up beforehand so that it has the "
"virtio-serial channel and so that guestfsd is running inside it."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1121
msgid "ABI GUARANTEE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1123
msgid ""
"We guarantee the libguestfs ABI (binary interface), for public, high-level "
"actions as outlined in this section.  Although we will deprecate some "
"actions, for example if they get replaced by newer calls, we will keep the "
"old actions forever.  This allows you the developer to program in confidence "
"against the libguestfs API."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1129
msgid "BLOCK DEVICE NAMING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1131
msgid ""
"In the kernel there is now quite a profusion of schemata for naming block "
"devices (in this context, by I<block device> I mean a physical or virtual "
"hard drive).  The original Linux IDE driver used names starting with "
"C</dev/hd*>.  SCSI devices have historically used a different naming scheme, "
"C</dev/sd*>.  When the Linux kernel I<libata> driver became a popular "
"replacement for the old IDE driver (particularly for SATA devices) those "
"devices also used the C</dev/sd*> scheme.  Additionally we now have virtual "
"machines with paravirtualized drivers.  This has created several different "
"naming systems, such as C</dev/vd*> for virtio disks and C</dev/xvd*> for "
"Xen PV disks."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1143
msgid ""
"As discussed above, libguestfs uses a qemu appliance running an embedded "
"Linux kernel to access block devices.  We can run a variety of appliances "
"based on a variety of Linux kernels."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1147
msgid ""
"This causes a problem for libguestfs because many API calls use device or "
"partition names.  Working scripts and the recipe (example) scripts that we "
"make available over the internet could fail if the naming scheme changes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1152
msgid ""
"Therefore libguestfs defines C</dev/sd*> as the I<standard naming scheme>.  "
"Internally C</dev/sd*> names are translated, if necessary, to other names as "
"required.  For example, under RHEL 5 which uses the C</dev/hd*> scheme, any "
"device parameter C</dev/sda2> is translated to C</dev/hda2> transparently."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1158
msgid ""
"Note that this I<only> applies to parameters.  The L</guestfs_list_devices>, "
"L</guestfs_list_partitions> and similar calls return the true names of the "
"devices and partitions as known to the appliance."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1163
msgid "ALGORITHM FOR BLOCK DEVICE NAME TRANSLATION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1165
msgid ""
"Usually this translation is transparent.  However in some (very rare)  cases "
"you may need to know the exact algorithm.  Such cases include where you use "
"L</guestfs_config> to add a mixture of virtio and IDE devices to the "
"qemu-based appliance, so have a mixture of C</dev/sd*> and C</dev/vd*> "
"devices."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1171
msgid ""
"The algorithm is applied only to I<parameters> which are known to be either "
"device or partition names.  Return values from functions such as "
"L</guestfs_list_devices> are never changed."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1179
msgid "Is the string a parameter which is a device or partition name?"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1183
msgid "Does the string begin with C</dev/sd>?"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1187
msgid ""
"Does the named device exist? If so, we use that device.  However if I<not> "
"then we continue with this algorithm."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1192
msgid "Replace initial C</dev/sd> string with C</dev/hd>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1194
msgid "For example, change C</dev/sda2> to C</dev/hda2>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1196
msgid "If that named device exists, use it.  If not, continue."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1200
msgid "Replace initial C</dev/sd> string with C</dev/vd>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1202
msgid "If that named device exists, use it.  If not, return an error."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1206
msgid "PORTABILITY CONCERNS WITH BLOCK DEVICE NAMING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1208
msgid ""
"Although the standard naming scheme and automatic translation is useful for "
"simple programs and guestfish scripts, for larger programs it is best not to "
"rely on this mechanism."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1212
msgid ""
"Where possible for maximum future portability programs using libguestfs "
"should use these future-proof techniques:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1219
msgid ""
"Use L</guestfs_list_devices> or L</guestfs_list_partitions> to list actual "
"device names, and then use those names directly."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1222
msgid "Since those device names exist by definition, they will never be translated."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1227
msgid ""
"Use higher level ways to identify filesystems, such as LVM names, UUIDs and "
"filesystem labels."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1232 ../sysprep/virt-sysprep.pod:376
msgid "SECURITY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1234
msgid ""
"This section discusses security implications of using libguestfs, "
"particularly with untrusted or malicious guests or disk images."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1237
msgid "GENERAL SECURITY CONSIDERATIONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1239
msgid ""
"Be careful with any files or data that you download from a guest (by "
"\"download\" we mean not just the L</guestfs_download> command but any "
"command that reads files, filenames, directories or anything else from a "
"disk image).  An attacker could manipulate the data to fool your program "
"into doing the wrong thing.  Consider cases such as:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1249
msgid "the data (file etc) not being present"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1253
msgid "being present but empty"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1257
msgid "being much larger than normal"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1261
msgid "containing arbitrary 8 bit data"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1265
msgid "being in an unexpected character encoding"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1269
msgid "containing homoglyphs."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1273
msgid "SECURITY OF MOUNTING FILESYSTEMS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1275
msgid ""
"When you mount a filesystem under Linux, mistakes in the kernel filesystem "
"(VFS) module can sometimes be escalated into exploits by deliberately "
"creating a malicious, malformed filesystem.  These exploits are very severe "
"for two reasons.  Firstly there are very many filesystem drivers in the "
"kernel, and many of them are infrequently used and not much developer "
"attention has been paid to the code.  Linux userspace helps potential "
"crackers by detecting the filesystem type and automatically choosing the "
"right VFS driver, even if that filesystem type is obscure or unexpected for "
"the administrator.  Secondly, a kernel-level exploit is like a local root "
"exploit (worse in some ways), giving immediate and total access to the "
"system right down to the hardware level."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1288
msgid ""
"That explains why you should never mount a filesystem from an untrusted "
"guest on your host kernel.  How about libguestfs? We run a Linux kernel "
"inside a qemu virtual machine, usually running as a non-root user.  The "
"attacker would need to write a filesystem which first exploited the kernel, "
"and then exploited either qemu virtualization (eg. a faulty qemu driver) or "
"the libguestfs protocol, and finally to be as serious as the host kernel "
"exploit it would need to escalate its privileges to root.  This multi-step "
"escalation, performed by a static piece of data, is thought to be extremely "
"hard to do, although we never say 'never' about security issues."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1299
msgid ""
"In any case callers can reduce the attack surface by forcing the filesystem "
"type when mounting (use L</guestfs_mount_vfs>)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1302
msgid "PROTOCOL SECURITY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1304
msgid ""
"The protocol is designed to be secure, being based on RFC 4506 (XDR)  with a "
"defined upper message size.  However a program that uses libguestfs must "
"also take care - for example you can write a program that downloads a binary "
"from a disk image and executes it locally, and no amount of protocol "
"security will save you from the consequences."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1310
msgid "INSPECTION SECURITY"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1312
msgid ""
"Parts of the inspection API (see L</INSPECTION>) return untrusted strings "
"directly from the guest, and these could contain any 8 bit data.  Callers "
"should be careful to escape these before printing them to a structured file "
"(for example, use HTML escaping if creating a web page)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1318
msgid ""
"Guest configuration may be altered in unusual ways by the administrator of "
"the virtual machine, and may not reflect reality (particularly for untrusted "
"or actively malicious guests).  For example we parse the hostname from "
"configuration files like C</etc/sysconfig/network> that we find in the "
"guest, but the guest administrator can easily manipulate these files to "
"provide the wrong hostname."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1326
msgid ""
"The inspection API parses guest configuration using two external libraries: "
"Augeas (Linux configuration) and hivex (Windows Registry).  Both are "
"designed to be robust in the face of malicious data, although denial of "
"service attacks are still possible, for example with oversized configuration "
"files."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1332
msgid "RUNNING UNTRUSTED GUEST COMMANDS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1334
msgid ""
"Be very cautious about running commands from the guest.  By running a "
"command in the guest, you are giving CPU time to a binary that you do not "
"control, under the same user account as the library, albeit wrapped in qemu "
"virtualization.  More information and alternatives can be found in the "
"section L</RUNNING COMMANDS>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1340
msgid "CVE-2010-3851"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1342
msgid "https://bugzilla.redhat.com/642934"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1344
msgid ""
"This security bug concerns the automatic disk format detection that qemu "
"does on disk images."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1347
msgid ""
"A raw disk image is just the raw bytes, there is no header.  Other disk "
"images like qcow2 contain a special header.  Qemu deals with this by looking "
"for one of the known headers, and if none is found then assuming the disk "
"image must be raw."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1352
msgid ""
"This allows a guest which has been given a raw disk image to write some "
"other header.  At next boot (or when the disk image is accessed by "
"libguestfs) qemu would do autodetection and think the disk image format was, "
"say, qcow2 based on the header written by the guest."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1357
msgid ""
"This in itself would not be a problem, but qcow2 offers many features, one "
"of which is to allow a disk image to refer to another image (called the "
"\"backing disk\").  It does this by placing the path to the backing disk "
"into the qcow2 header.  This path is not validated and could point to any "
"host file (eg. \"/etc/passwd\").  The backing disk is then exposed through "
"\"holes\" in the qcow2 disk image, which of course is completely under the "
"control of the attacker."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1365
msgid "In libguestfs this is rather hard to exploit except under two circumstances:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1372
msgid "You have enabled the network or have opened the disk in write mode."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1376
msgid ""
"You are also running untrusted code from the guest (see L</RUNNING "
"COMMANDS>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1381
msgid ""
"The way to avoid this is to specify the expected disk format when adding "
"disks (the optional C<format> option to L</guestfs_add_drive_opts>).  You "
"should always do this if the disk is raw format, and it's a good idea for "
"other cases too."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1386
msgid ""
"For disks added from libvirt using calls like L</guestfs_add_domain>, the "
"format is fetched from libvirt and passed through."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1389
msgid ""
"For libguestfs tools, use the I<--format> command line parameter as "
"appropriate."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1392
msgid "CONNECTION MANAGEMENT"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1394
msgid "guestfs_h *"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1396
msgid ""
"C<guestfs_h> is the opaque type representing a connection handle.  Create a "
"handle by calling L</guestfs_create>.  Call L</guestfs_close> to free the "
"handle and release all resources used."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1400
msgid ""
"For information on using multiple handles and threads, see the section "
"L</MULTIPLE HANDLES AND MULTIPLE THREADS> above."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1403
msgid "guestfs_create"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1405
#, no-wrap
msgid ""
" guestfs_h *guestfs_create (void);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1407
msgid "Create a connection handle."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1409
msgid ""
"On success this returns a non-NULL pointer to a handle.  On error it returns "
"NULL."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1412
msgid ""
"You have to \"configure\" the handle after creating it.  This includes "
"calling L</guestfs_add_drive_opts> (or one of the equivalent calls) on the "
"handle at least once."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1416
msgid "After configuring the handle, you have to call L</guestfs_launch>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1418
msgid ""
"You may also want to configure error handling for the handle.  See the "
"L</ERROR HANDLING> section below."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1421
msgid "guestfs_close"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1423
#, no-wrap
msgid ""
" void guestfs_close (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1425
msgid "This closes the connection handle and frees up all resources used."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1427
msgid ""
"If autosync was set on the handle and the handle was launched, then this "
"implicitly calls various functions to unmount filesystems and sync the "
"disk.  See L</guestfs_set_autosync> for more details."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1431
msgid "If a close callback was set on the handle, then it is called."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1433
msgid "ERROR HANDLING"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1435
msgid ""
"API functions can return errors.  For example, almost all functions that "
"return C<int> will return C<-1> to indicate an error."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1438
msgid ""
"Additional information is available for errors: an error message string and "
"optionally an error number (errno) if the thing that failed was a system "
"call."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1442
msgid ""
"You can get at the additional information about the last error on the handle "
"by calling L</guestfs_last_error>, L</guestfs_last_errno>, and/or by setting "
"up an error handler with L</guestfs_set_error_handler>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1447
msgid ""
"When the handle is created, a default error handler is installed which "
"prints the error message string to C<stderr>.  For small short-running "
"command line programs it is sufficient to do:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1451
#, no-wrap
msgid ""
" if (guestfs_launch (g) == -1)\n"
"   exit (EXIT_FAILURE);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1454
msgid ""
"since the default error handler will ensure that an error message has been "
"printed to C<stderr> before the program exits."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1457
msgid ""
"For other programs the caller will almost certainly want to install an "
"alternate error handler or do error handling in-line like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1460
#, no-wrap
msgid ""
" /* This disables the default behaviour of printing errors\n"
"    on stderr. */\n"
" guestfs_set_error_handler (g, NULL, NULL);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1464
#, no-wrap
msgid ""
" if (guestfs_launch (g) == -1) {\n"
"   /* Examine the error message and print it etc. */\n"
"   char *msg = guestfs_last_error (g);\n"
"   int errnum = guestfs_last_errno (g);\n"
"   fprintf (stderr, \"%s\", msg);\n"
"   if (errnum != 0)\n"
"     fprintf (stderr, \": %s\", strerror (errnum));\n"
"   fprintf (stderr, \"\\n\");\n"
"   /* ... */\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1475
msgid ""
"Out of memory errors are handled differently.  The default action is to call "
"L<abort(3)>.  If this is undesirable, then you can set a handler using "
"L</guestfs_set_out_of_memory_handler>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1479
msgid ""
"L</guestfs_create> returns C<NULL> if the handle cannot be created, and "
"because there is no handle if this happens there is no way to get additional "
"error information.  However L</guestfs_create> is supposed to be a "
"lightweight operation which can only fail because of insufficient memory (it "
"returns NULL in this case)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1485
msgid "guestfs_last_error"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1487
#, no-wrap
msgid ""
" const char *guestfs_last_error (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1489
msgid ""
"This returns the last error message that happened on C<g>.  If there has not "
"been an error since the handle was created, then this returns C<NULL>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1493
msgid ""
"The lifetime of the returned string is until the next error occurs, or "
"L</guestfs_close> is called."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1496
msgid "guestfs_last_errno"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1498
#, no-wrap
msgid ""
" int guestfs_last_errno (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1500
msgid "This returns the last error number (errno) that happened on C<g>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1502
msgid "If successful, an errno integer not equal to zero is returned."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1504
msgid "If no error, this returns 0.  This call can return 0 in three situations:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1511
msgid "There has not been any error on the handle."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1515
msgid ""
"There has been an error but the errno was meaningless.  This corresponds to "
"the case where the error did not come from a failed system call, but for "
"some other reason."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1521
msgid ""
"There was an error from a failed system call, but for some reason the errno "
"was not captured and returned.  This usually indicates a bug in libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1527
msgid ""
"Libguestfs tries to convert the errno from inside the applicance into a "
"corresponding errno for the caller (not entirely trivial: the appliance "
"might be running a completely different operating system from the library "
"and error numbers are not standardized across Un*xen).  If this could not be "
"done, then the error is translated to C<EINVAL>.  In practice this should "
"only happen in very rare circumstances."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1535
msgid "guestfs_set_error_handler"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1537
#, no-wrap
msgid ""
" typedef void (*guestfs_error_handler_cb) (guestfs_h *g,\n"
"                                           void *opaque,\n"
"                                           const char *msg);\n"
" void guestfs_set_error_handler (guestfs_h *g,\n"
"                                 guestfs_error_handler_cb cb,\n"
"                                 void *opaque);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1544
msgid ""
"The callback C<cb> will be called if there is an error.  The parameters "
"passed to the callback are an opaque data pointer and the error message "
"string."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1548
msgid ""
"C<errno> is not passed to the callback.  To get that the callback must call "
"L</guestfs_last_errno>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1551
msgid ""
"Note that the message string C<msg> is freed as soon as the callback "
"function returns, so if you want to stash it somewhere you must make your "
"own copy."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1555
msgid "The default handler prints messages on C<stderr>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1557
msgid "If you set C<cb> to C<NULL> then I<no> handler is called."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1559
msgid "guestfs_get_error_handler"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1561
#, no-wrap
msgid ""
" guestfs_error_handler_cb guestfs_get_error_handler (guestfs_h *g,\n"
"                                                     void **opaque_rtn);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1564
msgid "Returns the current error handler callback."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1566
msgid "guestfs_set_out_of_memory_handler"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1568
#, no-wrap
msgid ""
" typedef void (*guestfs_abort_cb) (void);\n"
" void guestfs_set_out_of_memory_handler (guestfs_h *g,\n"
"                                         guestfs_abort_cb);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1572
msgid ""
"The callback C<cb> will be called if there is an out of memory situation.  "
"I<Note this callback must not return>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1575
msgid "The default is to call L<abort(3)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1577
msgid "You cannot set C<cb> to C<NULL>.  You can't ignore out of memory situations."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1580
msgid "guestfs_get_out_of_memory_handler"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1582
#, no-wrap
msgid ""
" guestfs_abort_fn guestfs_get_out_of_memory_handler (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1584
msgid "This returns the current out of memory handler."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1586
msgid "API CALLS"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1590
msgid "STRUCTURES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1592
msgid "@STRUCTS@"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1594
msgid "AVAILABILITY"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1596
msgid "GROUPS OF FUNCTIONALITY IN THE APPLIANCE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1598
msgid ""
"Using L</guestfs_available> you can test availability of the following "
"groups of functions.  This test queries the appliance to see if the "
"appliance you are currently using supports the functionality."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1603
msgid "@AVAILABILITY@"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1605
msgid "GUESTFISH supported COMMAND"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1607
msgid ""
"In L<guestfish(3)> there is a handy interactive command C<supported> which "
"prints out the available groups and whether they are supported by this build "
"of libguestfs.  Note however that you have to do C<run> first."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1612
msgid "SINGLE CALLS AT COMPILE TIME"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1614
msgid ""
"Since version 1.5.8, C<E<lt>guestfs.hE<gt>> defines symbols for each C API "
"function, such as:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1617
#, no-wrap
msgid ""
" #define LIBGUESTFS_HAVE_DD 1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1619
msgid "if L</guestfs_dd> is available."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1621
msgid ""
"Before version 1.5.8, if you needed to test whether a single libguestfs "
"function is available at compile time, we recommended using build tools such "
"as autoconf or cmake.  For example in autotools you could use:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1626
#, no-wrap
msgid ""
" AC_CHECK_LIB([guestfs],[guestfs_create])\n"
" AC_CHECK_FUNCS([guestfs_dd])\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1629
msgid ""
"which would result in C<HAVE_GUESTFS_DD> being either defined or not defined "
"in your program."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1632
msgid "SINGLE CALLS AT RUN TIME"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1634
msgid ""
"Testing at compile time doesn't guarantee that a function really exists in "
"the library.  The reason is that you might be dynamically linked against a "
"previous I<libguestfs.so> (dynamic library)  which doesn't have the call.  "
"This situation unfortunately results in a segmentation fault, which is a "
"shortcoming of the C dynamic linking system itself."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1641
msgid ""
"You can use L<dlopen(3)> to test if a function is available at run time, as "
"in this example program (note that you still need the compile time check as "
"well):"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1645
#, no-wrap
msgid ""
" #include <stdio.h>\n"
" #include <stdlib.h>\n"
" #include <unistd.h>\n"
" #include <dlfcn.h>\n"
" #include <guestfs.h>\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1651
#, no-wrap
msgid ""
" main ()\n"
" {\n"
" #ifdef LIBGUESTFS_HAVE_DD\n"
"   void *dl;\n"
"   int has_function;\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1657
#, no-wrap
msgid ""
"   /* Test if the function guestfs_dd is really available. */\n"
"   dl = dlopen (NULL, RTLD_LAZY);\n"
"   if (!dl) {\n"
"     fprintf (stderr, \"dlopen: %s\\n\", dlerror ());\n"
"     exit (EXIT_FAILURE);\n"
"   }\n"
"   has_function = dlsym (dl, \"guestfs_dd\") != NULL;\n"
"   dlclose (dl);\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1666
#, no-wrap
msgid ""
"   if (!has_function)\n"
"     printf (\"this libguestfs.so does NOT have guestfs_dd function\\n\");\n"
"   else {\n"
"     printf (\"this libguestfs.so has guestfs_dd function\\n\");\n"
"     /* Now it's safe to call\n"
"     guestfs_dd (g, \"foo\", \"bar\");\n"
"     */\n"
"   }\n"
" #else\n"
"   printf (\"guestfs_dd function was not found at compile time\\n\");\n"
" #endif\n"
"  }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1679
msgid ""
"You may think the above is an awful lot of hassle, and it is.  There are "
"other ways outside of the C linking system to ensure that this kind of "
"incompatibility never arises, such as using package versioning:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1684
#, no-wrap
msgid ""
" Requires: libguestfs >= 1.0.80\n"
"\n"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:1686
msgid "CALLS WITH OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1688
msgid ""
"A recent feature of the API is the introduction of calls which take optional "
"arguments.  In C these are declared 3 ways.  The main way is as a call which "
"takes variable arguments (ie. C<...>), as in this example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1693
#, no-wrap
msgid ""
" int guestfs_add_drive_opts (guestfs_h *g, const char *filename, ...);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1695
msgid ""
"Call this with a list of optional arguments, terminated by C<-1>.  So to "
"call with no optional arguments specified:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1698
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename, -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1700
msgid "With a single optional argument:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1702
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
"                         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1706
msgid "With two:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1708
#, no-wrap
msgid ""
" guestfs_add_drive_opts (g, filename,\n"
"                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
"                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
"                         -1);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1713
msgid ""
"and so forth.  Don't forget the terminating C<-1> otherwise Bad Things will "
"happen!"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1716
msgid "USING va_list FOR OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1718
msgid ""
"The second variant has the same name with the suffix C<_va>, which works the "
"same way but takes a C<va_list>.  See the C manual for details.  For the "
"example function, this is declared:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1722
#, no-wrap
msgid ""
" int guestfs_add_drive_opts_va (guestfs_h *g, const char *filename,\n"
"                                va_list args);\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1725
msgid "CONSTRUCTING OPTIONAL ARGUMENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1727
msgid ""
"The third variant is useful where you need to construct these calls.  You "
"pass in a structure where you fill in the optional fields.  The structure "
"has a bitmask as the first element which you must set to indicate which "
"fields you have filled in.  For our example function the structure and call "
"are declared:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1733
#, no-wrap
msgid ""
" struct guestfs_add_drive_opts_argv {\n"
"   uint64_t bitmask;\n"
"   int readonly;\n"
"   const char *format;\n"
"   /* ... */\n"
" };\n"
" int guestfs_add_drive_opts_argv (guestfs_h *g, const char *filename,\n"
"              const struct guestfs_add_drive_opts_argv *optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1742
msgid "You could call it like this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1744
#, no-wrap
msgid ""
" struct guestfs_add_drive_opts_argv optargs = {\n"
"   .bitmask = GUESTFS_ADD_DRIVE_OPTS_READONLY_BITMASK |\n"
"              GUESTFS_ADD_DRIVE_OPTS_FORMAT_BITMASK,\n"
"   .readonly = 1,\n"
"   .format = \"qcow2\"\n"
" };\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1751
#, no-wrap
msgid ""
" guestfs_add_drive_opts_argv (g, filename, &optargs);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1759
msgid "The C<_BITMASK> suffix on each option name when specifying the bitmask."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1764
msgid "You do not need to fill in all fields of the structure."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1768
msgid ""
"There must be a one-to-one correspondence between fields of the structure "
"that are filled in, and bits set in the bitmask."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1773
msgid "OPTIONAL ARGUMENTS IN OTHER LANGUAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1775
msgid ""
"In other languages, optional arguments are expressed in the way that is "
"natural for that language.  We refer you to the language-specific "
"documentation for more details on that."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1779
msgid "For guestfish, see L<guestfish(1)/OPTIONAL ARGUMENTS>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:1781
msgid "SETTING CALLBACKS TO HANDLE EVENTS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1783
msgid ""
"B<Note:> This section documents the generic event mechanism introduced in "
"libguestfs 1.10, which you should use in new code if possible.  The old "
"functions C<guestfs_set_log_message_callback>, "
"C<guestfs_set_subprocess_quit_callback>, "
"C<guestfs_set_launch_done_callback>, C<guestfs_set_close_callback> and "
"C<guestfs_set_progress_callback> are no longer documented in this manual "
"page.  Because of the ABI guarantee, the old functions continue to work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1792
msgid ""
"Handles generate events when certain things happen, such as log messages "
"being generated, progress messages during long-running operations, or the "
"handle being closed.  The API calls described below let you register a "
"callback to be called when events happen.  You can register multiple "
"callbacks (for the same, different or overlapping sets of events), and "
"individually remove callbacks.  If callbacks are not removed, then they "
"remain in force until the handle is closed."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1800
msgid ""
"In the current implementation, events are only generated synchronously: that "
"means that events (and hence callbacks) can only happen while you are in the "
"middle of making another libguestfs call.  The callback is called in the "
"same thread."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1805
msgid ""
"Events may contain a payload, usually nothing (void), an array of 64 bit "
"unsigned integers, or a message buffer.  Payloads are discussed later on."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1809
msgid "CLASSES OF EVENTS"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1813
msgid "GUESTFS_EVENT_CLOSE (payload type: void)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1816
msgid ""
"The callback function will be called while the handle is being closed "
"(synchronously from L</guestfs_close>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1819
msgid ""
"Note that libguestfs installs an L<atexit(3)> handler to try to clean up "
"handles that are open when the program exits.  This means that this callback "
"might be called indirectly from L<exit(3)>, which can cause unexpected "
"problems in higher-level languages (eg. if your HLL interpreter has already "
"been cleaned up by the time this is called, and if your callback then jumps "
"into some HLL function)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1826
msgid ""
"If no callback is registered: the handle is closed without any callback "
"being invoked."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1829
msgid "GUESTFS_EVENT_SUBPROCESS_QUIT (payload type: void)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1832
msgid ""
"The callback function will be called when the child process quits, either "
"asynchronously or if killed by L</guestfs_kill_subprocess>.  (This "
"corresponds to a transition from any state to the CONFIG state)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1836 ../src/guestfs.pod:1845 ../src/guestfs.pod:1962
msgid "If no callback is registered: the event is ignored."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1838
msgid "GUESTFS_EVENT_LAUNCH_DONE (payload type: void)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1841
msgid ""
"The callback function will be called when the child process becomes ready "
"first time after it has been launched.  (This corresponds to a transition "
"from LAUNCHING to the READY state)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1847
msgid "GUESTFS_EVENT_PROGRESS (payload type: array of 4 x uint64_t)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1850
msgid ""
"Some long-running operations can generate progress messages.  If this "
"callback is registered, then it will be called each time a progress message "
"is generated (usually two seconds after the operation started, and three "
"times per second thereafter until it completes, although the frequency may "
"change in future versions)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1856
msgid ""
"The callback receives in the payload four unsigned 64 bit numbers which are "
"(in order): C<proc_nr>, C<serial>, C<position>, C<total>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1859
msgid ""
"The units of C<total> are not defined, although for some operations C<total> "
"may relate in some way to the amount of data to be transferred (eg. in bytes "
"or megabytes), and C<position> may be the portion which has been "
"transferred."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1864
msgid "The only defined and stable parts of the API are:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1870
msgid ""
"The callback can display to the user some type of progress bar or indicator "
"which shows the ratio of C<position>:C<total>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1875
msgid "0 E<lt>= C<position> E<lt>= C<total>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1879
msgid ""
"If any progress notification is sent during a call, then a final progress "
"notification is always sent when C<position> = C<total> (I<unless> the call "
"fails with an error)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1883
msgid ""
"This is to simplify caller code, so callers can easily set the progress "
"indicator to \"100%\" at the end of the operation, without requiring special "
"code to detect this case."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1889
msgid ""
"For some calls we are unable to estimate the progress of the call, but we "
"can still generate progress messages to indicate activity.  This is known as "
"\"pulse mode\", and is directly supported by certain progress bar "
"implementations (eg. GtkProgressBar)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1894
msgid ""
"For these calls, zero or more progress messages are generated with "
"C<position = 0> and C<total = 1>, followed by a final message with "
"C<position = total = 1>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1898
msgid ""
"As noted above, if the call fails with an error then the final message may "
"not be generated."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1903
msgid ""
"The callback also receives the procedure number (C<proc_nr>) and serial "
"number (C<serial>) of the call.  These are only useful for debugging "
"protocol issues, and the callback can normally ignore them.  The callback "
"may want to print these numbers in error messages or debugging messages."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1909
msgid "If no callback is registered: progress messages are discarded."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1911
msgid "GUESTFS_EVENT_APPLIANCE (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1914
msgid ""
"The callback function is called whenever a log message is generated by qemu, "
"the appliance kernel, guestfsd (daemon), or utility programs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1917
msgid ""
"If the verbose flag (L</guestfs_set_verbose>) is set before launch "
"(L</guestfs_launch>) then additional debug messages are generated."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1920 ../src/guestfs.pod:1934
msgid ""
"If no callback is registered: the messages are discarded unless the verbose "
"flag is set in which case they are sent to stderr.  You can override the "
"printing of verbose messages to stderr by setting up a callback."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1925
msgid "GUESTFS_EVENT_LIBRARY (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1928
msgid ""
"The callback function is called whenever a log message is generated by the "
"library part of libguestfs."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1931
msgid ""
"If the verbose flag (L</guestfs_set_verbose>) is set then additional debug "
"messages are generated."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1939
msgid "GUESTFS_EVENT_TRACE (payload type: message buffer)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1942
msgid ""
"The callback function is called whenever a trace message is generated.  This "
"only applies if the trace flag (L</guestfs_set_trace>) is set."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1945
msgid ""
"If no callback is registered: the messages are sent to stderr.  You can "
"override the printing of trace messages to stderr by setting up a callback."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:1949
msgid "GUESTFS_EVENT_ENTER (payload type: function name)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1952
msgid "The callback function is called whenever a libguestfs function is entered."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1955
msgid ""
"The payload is a string which contains the name of the function that we are "
"entering (not including C<guestfs_> prefix)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1958
msgid ""
"Note that libguestfs functions can call themselves, so you may see many "
"events from a single call.  A few libguestfs functions do not generate this "
"event."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:1966
msgid "guestfs_set_event_callback"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:1968
#, no-wrap
msgid ""
" int guestfs_set_event_callback (guestfs_h *g,\n"
"                                 guestfs_event_callback cb,\n"
"                                 uint64_t event_bitmask,\n"
"                                 int flags,\n"
"                                 void *opaque);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1974
msgid ""
"This function registers a callback (C<cb>) for all event classes in the "
"C<event_bitmask>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1977
msgid ""
"For example, to register for all log message events, you could call this "
"function with the bitmask C<GUESTFS_EVENT_APPLIANCE|GUESTFS_EVENT_LIBRARY>.  "
"To register a single callback for all possible classes of events, use "
"C<GUESTFS_EVENT_ALL>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1983
msgid "C<flags> should always be passed as 0."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1985
msgid ""
"C<opaque> is an opaque pointer which is passed to the callback.  You can use "
"it for any purpose."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1988
msgid ""
"The return value is the event handle (an integer) which you can use to "
"delete the callback (see below)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1991
msgid ""
"If there is an error, this function returns C<-1>, and sets the error in the "
"handle in the usual way (see L</guestfs_last_error> etc.)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1994
msgid ""
"Callbacks remain in effect until they are deleted, or until the handle is "
"closed."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:1997
msgid ""
"In the case where multiple callbacks are registered for a particular event "
"class, all of the callbacks are called.  The order in which multiple "
"callbacks are called is not defined."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2001
msgid "guestfs_delete_event_callback"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2003
#, no-wrap
msgid ""
" void guestfs_delete_event_callback (guestfs_h *g, int event_handle);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2005
msgid ""
"Delete a callback that was previously registered.  C<event_handle> should be "
"the integer that was returned by a previous call to "
"C<guestfs_set_event_callback> on the same handle."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2009
msgid "guestfs_event_callback"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2011
#, no-wrap
msgid ""
" typedef void (*guestfs_event_callback) (\n"
"                  guestfs_h *g,\n"
"                  void *opaque,\n"
"                  uint64_t event,\n"
"                  int event_handle,\n"
"                  int flags,\n"
"                  const char *buf, size_t buf_len,\n"
"                  const uint64_t *array, size_t array_len);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2020
msgid "This is the type of the event callback function that you have to provide."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2023
msgid ""
"The basic parameters are: the handle (C<g>), the opaque user pointer "
"(C<opaque>), the event class (eg. C<GUESTFS_EVENT_PROGRESS>), the event "
"handle, and C<flags> which in the current API you should ignore."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2027
msgid ""
"The remaining parameters contain the event payload (if any).  Each event may "
"contain a payload, which usually relates to the event class, but for future "
"proofing your code should be written to handle any payload for any event "
"class."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2032
msgid ""
"C<buf> and C<buf_len> contain a message buffer (if C<buf_len == 0>, then "
"there is no message buffer).  Note that this message buffer can contain "
"arbitrary 8 bit data, including NUL bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2036
msgid ""
"C<array> and C<array_len> is an array of 64 bit unsigned integers.  At the "
"moment this is only used for progress messages."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2039
msgid "EXAMPLE: CAPTURING LOG MESSAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2041
msgid ""
"One motivation for the generic event API was to allow GUI programs to "
"capture debug and other messages.  In libguestfs E<le> 1.8 these were sent "
"unconditionally to C<stderr>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2045
msgid ""
"Events associated with log messages are: C<GUESTFS_EVENT_LIBRARY>, "
"C<GUESTFS_EVENT_APPLIANCE> and C<GUESTFS_EVENT_TRACE>.  (Note that error "
"messages are not events; you must capture error messages separately)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2050
msgid ""
"Programs have to set up a callback to capture the classes of events of "
"interest:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2053
#, no-wrap
msgid ""
" int eh =\n"
"   guestfs_set_event_callback\n"
"     (g, message_callback,\n"
"      GUESTFS_EVENT_LIBRARY|GUESTFS_EVENT_APPLIANCE|\n"
"      GUESTFS_EVENT_TRACE,\n"
"      0, NULL) == -1)\n"
" if (eh == -1) {\n"
"   // handle error in the usual way\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2063
msgid ""
"The callback can then direct messages to the appropriate place.  In this "
"example, messages are directed to syslog:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2066
#, no-wrap
msgid ""
" static void\n"
" message_callback (\n"
"         guestfs_h *g,\n"
"         void *opaque,\n"
"         uint64_t event,\n"
"         int event_handle,\n"
"         int flags,\n"
"         const char *buf, size_t buf_len,\n"
"         const uint64_t *array, size_t array_len)\n"
" {\n"
"   const int priority = LOG_USER|LOG_INFO;\n"
"   if (buf_len > 0)\n"
"     syslog (priority, \"event 0x%lx: %s\", event, buf);\n"
" }\n"
"\n"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2081
msgid "CANCELLING LONG TRANSFERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2083
msgid ""
"Some operations can be cancelled by the caller while they are in progress.  "
"Currently only operations that involve uploading or downloading data can be "
"cancelled (technically: operations that have C<FileIn> or C<FileOut> "
"parameters in the generator)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2088
msgid "guestfs_user_cancel"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2090
#, no-wrap
msgid ""
" void guestfs_user_cancel (guestfs_h *g);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2092
msgid "C<guestfs_user_cancel> cancels the current upload or download operation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2095
msgid ""
"Unlike most other libguestfs calls, this function is signal safe and thread "
"safe.  You can call it from a signal handler or from another thread, without "
"needing to do any locking."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2099
msgid ""
"The transfer that was in progress (if there is one) will stop shortly "
"afterwards, and will return an error.  The errno (see "
"L</guestfs_last_errno>) is set to C<EINTR>, so you can test for this to find "
"out if the operation was cancelled or failed because of another error."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2105
msgid ""
"No cleanup is performed: for example, if a file was being uploaded then "
"after cancellation there may be a partially uploaded file.  It is the "
"caller's responsibility to clean up if necessary."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2109
msgid "There are two common places that you might call C<guestfs_user_cancel>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2111
msgid ""
"In an interactive text-based program, you might call it from a C<SIGINT> "
"signal handler so that pressing C<^C> cancels the current operation.  (You "
"also need to call L</guestfs_set_pgroup> so that child processes don't "
"receive the C<^C> signal)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2116
msgid ""
"In a graphical program, when the main thread is displaying a progress bar "
"with a cancel button, wire up the cancel button to call this function."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2120
msgid "PRIVATE DATA AREA"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2122
msgid ""
"You can attach named pieces of private data to the libguestfs handle, fetch "
"them by name, and walk over them, for the lifetime of the handle.  This is "
"called the private data area and is only available from the C API."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2127
msgid "To attach a named piece of data, use the following call:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2129
#, no-wrap
msgid ""
" void guestfs_set_private (guestfs_h *g, const char *key, void *data);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2131
msgid ""
"C<key> is the name to associate with this data, and C<data> is an arbitrary "
"pointer (which can be C<NULL>).  Any previous item with the same key is "
"overwritten."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2135
msgid ""
"You can use any C<key> you want, but your key should I<not> start with an "
"underscore character.  Keys beginning with an underscore character are "
"reserved for internal libguestfs purposes (eg. for implementing language "
"bindings).  It is recommended that you prefix the key with some unique "
"string to avoid collisions with other users."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2141
msgid "To retrieve the pointer, use:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2143
#, no-wrap
msgid ""
" void *guestfs_get_private (guestfs_h *g, const char *key);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2145
msgid ""
"This function returns C<NULL> if either no data is found associated with "
"C<key>, or if the user previously set the C<key>'s C<data> pointer to "
"C<NULL>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2149
msgid ""
"Libguestfs does not try to look at or interpret the C<data> pointer in any "
"way.  As far as libguestfs is concerned, it need not be a valid pointer at "
"all.  In particular, libguestfs does I<not> try to free the data when the "
"handle is closed.  If the data must be freed, then the caller must either "
"free it before calling L</guestfs_close> or must set up a close callback to "
"do it (see L</GUESTFS_EVENT_CLOSE>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2156
msgid "To walk over all entries, use these two functions:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2158
#, no-wrap
msgid ""
" void *guestfs_first_private (guestfs_h *g, const char **key_rtn);\n"
"\n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2160
#, no-wrap
msgid ""
" void *guestfs_next_private (guestfs_h *g, const char **key_rtn);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2162
msgid ""
"C<guestfs_first_private> returns the first key, pointer pair (\"first\" does "
"not have any particular meaning -- keys are not returned in any defined "
"order).  A pointer to the key is returned in C<*key_rtn> and the "
"corresponding data pointer is returned from the function.  C<NULL> is "
"returned if there are no keys stored in the handle."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2168
msgid ""
"C<guestfs_next_private> returns the next key, pointer pair.  The return "
"value of this function is also C<NULL> is there are no further entries to "
"return."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2172
msgid "Notes about walking over entries:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2178
msgid "You must not call C<guestfs_set_private> while walking over the entries."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2183
msgid ""
"The handle maintains an internal iterator which is reset when you call "
"C<guestfs_first_private>.  This internal iterator is invalidated when you "
"call C<guestfs_set_private>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2189
msgid "If you have set the data pointer associated with a key to C<NULL>, ie:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2191
#, no-wrap
msgid ""
" guestfs_set_private (g, key, NULL);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2193
msgid "then that C<key> is not returned when walking."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2197
msgid ""
"C<*key_rtn> is only valid until the next call to C<guestfs_first_private>, "
"C<guestfs_next_private> or C<guestfs_set_private>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2203
msgid ""
"The following example code shows how to print all keys and data pointers "
"that are associated with the handle C<g>:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2206
#, no-wrap
msgid ""
" const char *key;\n"
" void *data = guestfs_first_private (g, &key);\n"
" while (data != NULL)\n"
"   {\n"
"     printf (\"key = %s, data = %p\\n\", key, data);\n"
"     data = guestfs_next_private (g, &key);\n"
"   }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2214
msgid ""
"More commonly you are only interested in keys that begin with an "
"application-specific prefix C<foo_>.  Modify the loop like so:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2217
#, no-wrap
msgid ""
" const char *key;\n"
" void *data = guestfs_first_private (g, &key);\n"
" while (data != NULL)\n"
"   {\n"
"     if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
"       printf (\"key = %s, data = %p\\n\", key, data);\n"
"     data = guestfs_next_private (g, &key);\n"
"   }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2226
msgid ""
"If you need to modify keys while walking, then you have to jump back to the "
"beginning of the loop.  For example, to delete all keys prefixed with "
"C<foo_>:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2230
#, no-wrap
msgid ""
"  const char *key;\n"
"  void *data;\n"
" again:\n"
"  data = guestfs_first_private (g, &key);\n"
"  while (data != NULL)\n"
"    {\n"
"      if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
"        {\n"
"          guestfs_set_private (g, key, NULL);\n"
"          /* note that 'key' pointer is now invalid, and so is\n"
"             the internal iterator */\n"
"          goto again;\n"
"        }\n"
"      data = guestfs_next_private (g, &key);\n"
"    }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2246
msgid ""
"Note that the above loop is guaranteed to terminate because the keys are "
"being deleted, but other manipulations of keys within the loop might not "
"terminate unless you also maintain an indication of which keys have been "
"visited."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2251
msgid "SYSTEMTAP"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2253
msgid ""
"The libguestfs C library can be probed using systemtap or DTrace.  This is "
"true of any library, not just libguestfs.  However libguestfs also contains "
"static markers to help in probing internal operations."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2257
msgid "You can list all the static markers by doing:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2259
#, no-wrap
msgid ""
" stap -l 'process(\"/usr/lib*/libguestfs.so.0\")\n"
"              .provider(\"guestfs\").mark(\"*\")'\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2262
msgid ""
"B<Note:> These static markers are I<not> part of the stable API and may "
"change in future versions."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2265
msgid "SYSTEMTAP SCRIPT EXAMPLE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2267
msgid ""
"This script contains examples of displaying both the static markers and some "
"ordinary C entry points:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2294
#, no-wrap
msgid ""
" /* Display all calls to guestfs_mkfs* functions. */\n"
" probe process(\"/usr/lib*/libguestfs.so.0\")\n"
"           .function(\"guestfs_mkfs*\") ? {\n"
"       display_time();\n"
"       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2301
msgid ""
"The script above can be saved to C<test.stap> and run using the L<stap(1)> "
"program.  Note that you either have to be root, or you have to add yourself "
"to several special stap groups.  Consult the systemtap documentation for "
"more information."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2306
#, no-wrap
msgid ""
" # stap /tmp/test.stap\n"
" ready\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2309
msgid "In another terminal, run a guestfish command such as this:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2313
msgid "In the first terminal, stap trace output similar to this is shown:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2315
#, no-wrap
msgid ""
" 1318248056692655 (+0):\tlaunch_start\n"
" 1318248056692850 (+195):       launch_build_appliance_start\n"
" 1318248056818285 (+125435):    launch_build_appliance_end\n"
" 1318248056838059 (+19774):     launch_run_qemu\n"
" 1318248061071167 (+4233108):   launch_end\n"
" 1318248061280324 (+209157):    guestfs_mkfs g=0x1024ab0 fstype=0x46116f "
"device=0x1024e60\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2324
msgid ""
"<!-- old anchor for the next section --> <a "
"name=\"state_machine_and_low_level_event_api\"/>"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2329
msgid "ARCHITECTURE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2331
msgid ""
"Internally, libguestfs is implemented by running an appliance (a special "
"type of small virtual machine) using L<qemu(1)>.  Qemu runs as a child "
"process of the main program."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2335
#, no-wrap
msgid ""
"  ___________________\n"
" /                   \\\n"
" | main program      |\n"
" |                   |\n"
" |                   |           child process / appliance\n"
" |                   |           __________________________\n"
" |                   |          / qemu                     \\\n"
" +-------------------+   RPC    |      +-----------------+ |\n"
" | libguestfs     <--------------------> guestfsd        | |\n"
" |                   |          |      +-----------------+ |\n"
" \\___________________/          |      | Linux kernel    | |\n"
"                                |      +--^--------------+ |\n"
"                                \\_________|________________/\n"
"                                          |\n"
"                                   _______v______\n"
"                                  /              \\\n"
"                                  | Device or    |\n"
"                                  | disk image   |\n"
"                                  \\______________/\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2355
msgid ""
"The library, linked to the main program, creates the child process and hence "
"the appliance in the L</guestfs_launch> function."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2358
msgid ""
"Inside the appliance is a Linux kernel and a complete stack of userspace "
"tools (such as LVM and ext2 programs) and a small controlling daemon called "
"L</guestfsd>.  The library talks to L</guestfsd> using remote procedure "
"calls (RPC).  There is a mostly one-to-one correspondence between libguestfs "
"API calls and RPC calls to the daemon.  Lastly the disk image(s) are "
"attached to the qemu process which translates device access by the "
"appliance's Linux kernel into accesses to the image."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2367
msgid ""
"A common misunderstanding is that the appliance \"is\" the virtual machine.  "
"Although the disk image you are attached to might also be used by some "
"virtual machine, libguestfs doesn't know or care about this.  (But you will "
"care if both libguestfs's qemu process and your virtual machine are trying "
"to update the disk image at the same time, since these usually results in "
"massive disk corruption)."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2374
msgid "STATE MACHINE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2376
msgid "libguestfs uses a state machine to model the child process:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2378
#, no-wrap
msgid ""
"                         |\n"
"                    guestfs_create\n"
"                         |\n"
"                         |\n"
"                     ____V_____\n"
"                    /          \\\n"
"                    |  CONFIG  |\n"
"                    \\__________/\n"
"                       ^   ^  \\\n"
"                       |    \\  \\ guestfs_launch\n"
"                       |    _\\__V______\n"
"                       |   /           \\\n"
"                       |   | LAUNCHING |\n"
"                       |   \\___________/\n"
"                       |       /\n"
"                       |  guestfs_launch\n"
"                       |     /\n"
"                     __|____V\n"
"                    /        \\\n"
"                    | READY  |\n"
"                    \\________/\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2400
msgid ""
"The normal transitions are (1) CONFIG (when the handle is created, but there "
"is no child process), (2) LAUNCHING (when the child process is booting up), "
"(3) READY meaning the appliance is up, actions can be issued to, and carried "
"out by, the child process."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2405
msgid ""
"The guest may be killed by L</guestfs_kill_subprocess>, or may die "
"asynchronously at any time (eg. due to some internal error), and that causes "
"the state to transition back to CONFIG."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2409
msgid ""
"Configuration commands for qemu such as L</guestfs_add_drive> can only be "
"issued when in the CONFIG state."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2412
msgid ""
"The API offers one call that goes from CONFIG through LAUNCHING to READY.  "
"L</guestfs_launch> blocks until the child process is READY to accept "
"commands (or until some failure or timeout).  L</guestfs_launch> internally "
"moves the state from CONFIG to LAUNCHING while it is running."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2418
msgid ""
"API actions such as L</guestfs_mount> can only be issued when in the READY "
"state.  These API calls block waiting for the command to be carried out.  "
"There are no non-blocking versions, and no way to issue more than one "
"command per handle at the same time."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2423
msgid ""
"Finally, the child process sends asynchronous messages back to the main "
"program, such as kernel log messages.  You can register a callback to "
"receive these messages."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2427
msgid "INTERNALS"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2429
msgid "APPLIANCE BOOT PROCESS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2431
msgid ""
"This process has evolved and continues to evolve.  The description here "
"corresponds only to the current version of libguestfs and is provided for "
"information only."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2435
msgid ""
"In order to follow the stages involved below, enable libguestfs debugging "
"(set the environment variable C<LIBGUESTFS_DEBUG=1>)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2440
msgid "Create the appliance"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2442
msgid ""
"C<febootstrap-supermin-helper> is invoked to create the kernel, a small "
"initrd and the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2445
msgid ""
"The appliance is cached in C</var/tmp/.guestfs-E<lt>UIDE<gt>> (or in another "
"directory if C<TMPDIR> is set)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2448
msgid ""
"For a complete description of how the appliance is created and cached, read "
"the L<febootstrap(8)> and L<febootstrap-supermin-helper(8)> man pages."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2452
msgid "Start qemu and boot the kernel"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2454
msgid "qemu is invoked to boot the kernel."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2456
msgid "Run the initrd"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2458
msgid ""
"C<febootstrap-supermin-helper> builds a small initrd.  The initrd is not the "
"appliance.  The purpose of the initrd is to load enough kernel modules in "
"order that the appliance itself can be mounted and started."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2462
msgid ""
"The initrd is a cpio archive called "
"C</var/tmp/.guestfs-E<lt>UIDE<gt>/initrd>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2465
msgid ""
"When the initrd has started you will see messages showing that kernel "
"modules are being loaded, similar to this:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2468
#, no-wrap
msgid ""
" febootstrap: ext2 mini initrd starting up\n"
" febootstrap: mounting /sys\n"
" febootstrap: internal insmod libcrc32c.ko\n"
" febootstrap: internal insmod crc32c-intel.ko\n"
"\n"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2473
msgid "Find and mount the appliance device"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2475
msgid ""
"The appliance is a sparse file containing an ext2 filesystem which contains "
"a familiar (although reduced in size) Linux operating system.  It would "
"normally be called C</var/tmp/.guestfs-E<lt>UIDE<gt>/root>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2479
msgid ""
"The regular disks being inspected by libguestfs are the first devices "
"exposed by qemu (eg. as C</dev/vda>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2482
msgid ""
"The last disk added to qemu is the appliance itself (eg. C</dev/vdb> if "
"there was only one regular disk)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2485
msgid ""
"Thus the final job of the initrd is to locate the appliance disk, mount it, "
"and switch root into the appliance, and run C</init> from the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2489
msgid "If this works successfully you will see messages such as:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2491
#, no-wrap
msgid ""
" febootstrap: picked /sys/block/vdb/dev as root device\n"
" febootstrap: creating /dev/root as block special 252:16\n"
" febootstrap: mounting new root on /root\n"
" febootstrap: chroot\n"
" Starting /init script ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2497
msgid ""
"Note that C<Starting /init script ...> indicates that the appliance's init "
"script is now running."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2500
msgid "Initialize the appliance"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2502
msgid ""
"The appliance itself now initializes itself.  This involves starting certain "
"processes like C<udev>, possibly printing some debug information, and "
"finally running the daemon (C<guestfsd>)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2506
msgid "The daemon"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2508
msgid ""
"Finally the daemon (C<guestfsd>) runs inside the appliance.  If it runs you "
"should see:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2511
#, no-wrap
msgid ""
" verbose daemon enabled\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2513
msgid ""
"The daemon expects to see a named virtio-serial port exposed by qemu and "
"connected on the other end to the library."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2516
msgid ""
"The daemon connects to this port (and hence to the library) and sends a four "
"byte message C<GUESTFS_LAUNCH_FLAG>, which initiates the communication "
"protocol (see below)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2522
msgid "COMMUNICATION PROTOCOL"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2524
msgid ""
"Don't rely on using this protocol directly.  This section documents how it "
"currently works, but it may change at any time."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2527
msgid ""
"The protocol used to talk between the library and the daemon running inside "
"the qemu virtual machine is a simple RPC mechanism built on top of XDR (RFC "
"1014, RFC 1832, RFC 4506)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2531
msgid ""
"The detailed format of structures is in C<src/guestfs_protocol.x> (note: "
"this file is automatically generated)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2534
msgid ""
"There are two broad cases, ordinary functions that don't have any C<FileIn> "
"and C<FileOut> parameters, which are handled with very simple request/reply "
"messages.  Then there are functions that have any C<FileIn> or C<FileOut> "
"parameters, which use the same request and reply messages, but they may also "
"be followed by files sent using a chunked encoding."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2541
msgid "ORDINARY FUNCTIONS (NO FILEIN/FILEOUT PARAMS)"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2543
msgid "For ordinary functions, the request message is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2545
#, no-wrap
msgid ""
" total length (header + arguments,\n"
"      but not including the length word itself)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_args (encoded as XDR)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2550
msgid ""
"The total length field allows the daemon to allocate a fixed size buffer "
"into which it slurps the rest of the message.  As a result, the total length "
"is limited to C<GUESTFS_MESSAGE_MAX> bytes (currently 4MB), which means the "
"effective size of any request is limited to somewhere under this size."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2556
msgid ""
"Note also that many functions don't take any arguments, in which case the "
"C<guestfs_I<foo>_args> is completely omitted."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2559
msgid ""
"The header contains the procedure number (C<guestfs_proc>) which is how the "
"receiver knows what type of args structure to expect, or none at all."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2563
msgid ""
"For functions that take optional arguments, the optional arguments are "
"encoded in the C<guestfs_I<foo>_args> structure in the same way as ordinary "
"arguments.  A bitmask in the header indicates which optional arguments are "
"meaningful.  The bitmask is also checked to see if it contains bits set "
"which the daemon does not know about (eg. if more optional arguments were "
"added in a later version of the library), and this causes the call to be "
"rejected."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2571
msgid "The reply message for ordinary functions is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2573
#, no-wrap
msgid ""
" total length (header + ret,\n"
"      but not including the length word itself)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_ret (encoded as XDR)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2578
msgid ""
"As above the C<guestfs_I<foo>_ret> structure may be completely omitted for "
"functions that return no formal return values."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2581
msgid "As above the total length of the reply is limited to C<GUESTFS_MESSAGE_MAX>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2584
msgid ""
"In the case of an error, a flag is set in the header, and the reply message "
"is slightly changed:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2587
#, no-wrap
msgid ""
" total length (header + error,\n"
"      but not including the length word itself)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_message_error (encoded as XDR)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2592
msgid ""
"The C<guestfs_message_error> structure contains the error message as a "
"string."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2595
msgid "FUNCTIONS THAT HAVE FILEIN PARAMETERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2597
msgid ""
"A C<FileIn> parameter indicates that we transfer a file I<into> the guest.  "
"The normal request message is sent (see above).  However this is followed by "
"a sequence of file chunks."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2601
#, no-wrap
msgid ""
" total length (header + arguments,\n"
"      but not including the length word itself,\n"
"      and not including the chunks)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_args (encoded as XDR)\n"
" sequence of chunks for FileIn param #0\n"
" sequence of chunks for FileIn param #1 etc.\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2609
msgid "The \"sequence of chunks\" is:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2611
#, no-wrap
msgid ""
" length of chunk (not including length word itself)\n"
" struct guestfs_chunk (encoded as XDR)\n"
" length of chunk\n"
" struct guestfs_chunk (encoded as XDR)\n"
"   ...\n"
" length of chunk\n"
" struct guestfs_chunk (with data.data_len == 0)\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2619
msgid ""
"The final chunk has the C<data_len> field set to zero.  Additionally a flag "
"is set in the final chunk to indicate either successful completion or early "
"cancellation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2623
msgid ""
"At time of writing there are no functions that have more than one FileIn "
"parameter.  However this is (theoretically) supported, by sending the "
"sequence of chunks for each FileIn parameter one after another (from left to "
"right)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2628
msgid ""
"Both the library (sender) I<and> the daemon (receiver) may cancel the "
"transfer.  The library does this by sending a chunk with a special flag set "
"to indicate cancellation.  When the daemon sees this, it cancels the whole "
"RPC, does I<not> send any reply, and goes back to reading the next request."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2634
msgid ""
"The daemon may also cancel.  It does this by writing a special word "
"C<GUESTFS_CANCEL_FLAG> to the socket.  The library listens for this during "
"the transfer, and if it gets it, it will cancel the transfer (it sends a "
"cancel chunk).  The special word is chosen so that even if cancellation "
"happens right at the end of the transfer (after the library has finished "
"writing and has started listening for the reply), the \"spurious\" cancel "
"flag will not be confused with the reply message."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2643
msgid ""
"This protocol allows the transfer of arbitrary sized files (no 32 bit "
"limit), and also files where the size is not known in advance (eg. from "
"pipes or sockets).  However the chunks are rather small "
"(C<GUESTFS_MAX_CHUNK_SIZE>), so that neither the library nor the daemon need "
"to keep much in memory."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2649
msgid "FUNCTIONS THAT HAVE FILEOUT PARAMETERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2651
msgid ""
"The protocol for FileOut parameters is exactly the same as for FileIn "
"parameters, but with the roles of daemon and library reversed."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2654
#, no-wrap
msgid ""
" total length (header + ret,\n"
"      but not including the length word itself,\n"
"      and not including the chunks)\n"
" struct guestfs_message_header (encoded as XDR)\n"
" struct guestfs_<foo>_ret (encoded as XDR)\n"
" sequence of chunks for FileOut param #0\n"
" sequence of chunks for FileOut param #1 etc.\n"
"\n"
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2662
msgid "INITIAL MESSAGE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2664
msgid ""
"When the daemon launches it sends an initial word (C<GUESTFS_LAUNCH_FLAG>) "
"which indicates that the guest and daemon is alive.  This is what "
"L</guestfs_launch> waits for."
msgstr ""

#. type: =head3
#: ../src/guestfs.pod:2668
msgid "PROGRESS NOTIFICATION MESSAGES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2670
msgid ""
"The daemon may send progress notification messages at any time.  These are "
"distinguished by the normal length word being replaced by "
"C<GUESTFS_PROGRESS_FLAG>, followed by a fixed size progress message."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2674
msgid ""
"The library turns them into progress callbacks (see "
"L</GUESTFS_EVENT_PROGRESS>) if there is a callback registered, or discards "
"them if not."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2678
msgid ""
"The daemon self-limits the frequency of progress messages it sends (see "
"C<daemon/proto.c:notify_progress>).  Not all calls generate progress "
"messages."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2682
msgid "LIBGUESTFS VERSION NUMBERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2684
msgid ""
"Since April 2010, libguestfs has started to make separate development and "
"stable releases, along with corresponding branches in our git repository.  "
"These separate releases can be identified by version number:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2689
#, no-wrap
msgid ""
"                 even numbers for stable: 1.2.x, 1.4.x, ...\n"
"       .-------- odd numbers for development: 1.3.x, 1.5.x, ...\n"
"       |\n"
"       v\n"
" 1  .  3  .  5\n"
" ^           ^\n"
" |           |\n"
" |           `-------- sub-version\n"
" |\n"
" `------ always '1' because we don't change the ABI\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2700
msgid "Thus \"1.3.5\" is the 5th update to the development branch \"1.3\"."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2702
msgid ""
"As time passes we cherry pick fixes from the development branch and backport "
"those into the stable branch, the effect being that the stable branch should "
"get more stable and less buggy over time.  So the stable releases are ideal "
"for people who don't need new features but would just like the software to "
"work."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2708
msgid "Our criteria for backporting changes are:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2714
msgid ""
"Documentation changes which don't affect any code are backported unless the "
"documentation refers to a future feature which is not in stable."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2720
msgid ""
"Bug fixes which are not controversial, fix obvious problems, and have been "
"well tested are backported."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2725
msgid ""
"Simple rearrangements of code which shouldn't affect how it works get "
"backported.  This is so that the code in the two branches doesn't get too "
"far out of step, allowing us to backport future fixes more easily."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2731
msgid ""
"We I<don't> backport new features, new APIs, new tools etc, except in one "
"exceptional case: the new feature is required in order to implement an "
"important bug fix."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2737
msgid ""
"A new stable branch starts when we think the new features in development are "
"substantial and compelling enough over the current stable branch to warrant "
"it.  When that happens we create new stable and development versions 1.N.0 "
"and 1.(N+1).0 [N is even].  The new dot-oh release won't necessarily be so "
"stable at this point, but by backporting fixes from development, that branch "
"will stabilize over time."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:2745
msgid "EXTENDING LIBGUESTFS"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2747
msgid "ADDING A NEW API ACTION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2749
msgid ""
"Large amounts of boilerplate code in libguestfs (RPC, bindings, "
"documentation) are generated, and this makes it easy to extend the "
"libguestfs API."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2753
msgid "To add a new API action there are two changes:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2759
msgid ""
"You need to add a description of the call (name, parameters, return type, "
"tests, documentation) to C<generator/generator_actions.ml>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2762
msgid ""
"There are two sorts of API action, depending on whether the call goes "
"through to the daemon in the appliance, or is serviced entirely by the "
"library (see L</ARCHITECTURE> above).  L</guestfs_sync> is an example of the "
"former, since the sync is done in the appliance.  L</guestfs_set_trace> is "
"an example of the latter, since a trace flag is maintained in the handle and "
"all tracing is done on the library side."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2770
msgid ""
"Most new actions are of the first type, and get added to the "
"C<daemon_functions> list.  Each function has a unique procedure number used "
"in the RPC protocol which is assigned to that action when we publish "
"libguestfs and cannot be reused.  Take the latest procedure number and "
"increment it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2776
msgid ""
"For library-only actions of the second type, add to the "
"C<non_daemon_functions> list.  Since these functions are serviced by the "
"library and do not travel over the RPC mechanism to the daemon, these "
"functions do not need a procedure number, and so the procedure number is set "
"to C<-1>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2784
msgid "Implement the action (in C):"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2786
msgid ""
"For daemon actions, implement the function C<do_E<lt>nameE<gt>> in the "
"C<daemon/> directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2789
msgid ""
"For library actions, implement the function C<guestfs__E<lt>nameE<gt>> "
"(note: double underscore) in the C<src/> directory."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2792
msgid "In either case, use another function as an example of what to do."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2796
msgid "After making these changes, use C<make> to compile."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2798
msgid ""
"Note that you don't need to implement the RPC, language bindings, manual "
"pages or anything else.  It's all automatically generated from the OCaml "
"description."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2802
msgid "ADDING TESTS FOR AN API ACTION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2804
msgid ""
"You can supply zero or as many tests as you want per API call.  The tests "
"can either be added as part of the API description "
"(C<generator/generator_actions.ml>), or in some rarer cases you may want to "
"drop a script into C<tests/*/>.  Note that adding a script to C<tests/*/> is "
"slower, so if possible use the first method."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2811
msgid ""
"The following describes the test environment used when you add an API test "
"in C<generator_actions.ml>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2814
msgid "The test environment has 4 block devices:"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2818
msgid "C</dev/sda> 500MB"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2820
msgid "General block device for testing."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2822
msgid "C</dev/sdb> 50MB"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2824
msgid ""
"C</dev/sdb1> is an ext2 filesystem used for testing filesystem write "
"operations."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2827
msgid "C</dev/sdc> 10MB"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2829
msgid "Used in a few tests where two block devices are needed."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2831
msgid "C</dev/sdd>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2833
msgid "ISO with fixed content (see C<images/test.iso>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2837
msgid ""
"To be able to run the tests in a reasonable amount of time, the libguestfs "
"appliance and block devices are reused between tests.  So don't try testing "
"L</guestfs_kill_subprocess> :-x"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2841
msgid ""
"Each test starts with an initial scenario, selected using one of the "
"C<Init*> expressions, described in C<generator/generator_types.ml>.  These "
"initialize the disks mentioned above in a particular way as documented in "
"C<generator_types.ml>.  You should not assume anything about the previous "
"contents of other disks that are not initialized."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2847
msgid ""
"You can add a prerequisite clause to any individual test.  This is a "
"run-time check, which, if it fails, causes the test to be skipped.  Useful "
"if testing a command which might not work on all variations of libguestfs "
"builds.  A test that has prerequisite of C<Always> means to run "
"unconditionally."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2853
msgid ""
"In addition, packagers can skip individual tests by setting environment "
"variables before running C<make check>."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2856
#, no-wrap
msgid ""
" SKIP_TEST_<CMD>_<NUM>=1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2858
msgid "eg: C<SKIP_TEST_COMMAND_3=1> skips test #3 of L</guestfs_command>."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2862
#, no-wrap
msgid ""
" SKIP_TEST_<CMD>=1\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2864
msgid "eg: C<SKIP_TEST_ZEROFREE=1> skips all L</guestfs_zerofree> tests."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2866
msgid "Packagers can run only certain tests by setting for example:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2868
#, no-wrap
msgid ""
" TEST_ONLY=\"vfs_type zerofree\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2870
msgid ""
"See C<tests/c-api/tests.c> for more details of how these environment "
"variables work."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2873
msgid "DEBUGGING NEW API ACTIONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2875
msgid "Test new actions work before submitting them."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2877
msgid "You can use guestfish to try out new commands."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2879
msgid ""
"Debugging the daemon is a problem because it runs inside a minimal "
"environment.  However you can fprintf messages in the daemon to stderr, and "
"they will show up if you use C<guestfish -v>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2883
msgid "FORMATTING CODE AND OTHER CONVENTIONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2885
msgid ""
"Our C source code generally adheres to some basic code-formatting "
"conventions.  The existing code base is not totally consistent on this "
"front, but we do prefer that contributed code be formatted similarly.  In "
"short, use spaces-not-TABs for indentation, use 2 spaces for each "
"indentation level, and other than that, follow the K&R style."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2891
msgid ""
"If you use Emacs, add the following to one of one of your start-up files "
"(e.g., ~/.emacs), to help ensure that you get indentation right:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2894
#, no-wrap
msgid ""
" ;;; In libguestfs, indent with spaces everywhere (not TABs).\n"
" ;;; Exceptions: Makefile and ChangeLog modes.\n"
" (add-hook 'find-file-hook\n"
"     '(lambda () (if (and buffer-file-name\n"
"                          (string-match \"/libguestfs\\\\>\"\n"
"                              (buffer-file-name))\n"
"                          (not (string-equal mode-name \"Change Log\"))\n"
"                          (not (string-equal mode-name \"Makefile\")))\n"
"                     (setq indent-tabs-mode nil))))\n"
" \n"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2904
#, no-wrap
msgid ""
" ;;; When editing C sources in libguestfs, use this style.\n"
" (defun libguestfs-c-mode ()\n"
"   \"C mode with adjusted defaults for use with libguestfs.\"\n"
"   (interactive)\n"
"   (c-set-style \"K&R\")\n"
"   (setq c-indent-level 2)\n"
"   (setq c-basic-offset 2))\n"
" (add-hook 'c-mode-hook\n"
"           '(lambda () (if (string-match \"/libguestfs\\\\>\"\n"
"                               (buffer-file-name))\n"
"                           (libguestfs-c-mode))))\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2916
msgid "Enable warnings when compiling (and fix any problems this finds):"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2919
#, no-wrap
msgid ""
" ./configure --enable-gcc-warnings\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2921
msgid "Useful targets are:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2923
#, no-wrap
msgid ""
" make syntax-check  # checks the syntax of the C code\n"
" make check         # runs the test suite\n"
"\n"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2926
msgid "DAEMON CUSTOM PRINTF FORMATTERS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2928
msgid ""
"In the daemon code we have created custom printf formatters C<%Q> and C<%R>, "
"which are used to do shell quoting."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2933
msgid "%Q"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2935
msgid ""
"Simple shell quoted string.  Any spaces or other shell characters are "
"escaped for you."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2938
msgid "%R"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2940
msgid ""
"Same as C<%Q> except the string is treated as a path which is prefixed by "
"the sysroot."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:2947
#, no-wrap
msgid ""
" asprintf (&cmd, \"cat %R\", path);\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2949
msgid "would produce C<cat /sysroot/some\\ path\\ with\\ spaces>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2951
msgid ""
"I<Note:> Do I<not> use these when you are passing parameters to the "
"C<command{,r,v,rv}()> functions.  These parameters do NOT need to be quoted "
"because they are not passed via the shell (instead, straight to exec).  You "
"probably want to use the C<sysroot_path()> function however."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2957
msgid "SUBMITTING YOUR NEW API ACTIONS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2959
msgid ""
"Submit patches to the mailing list: "
"L<http://www.redhat.com/mailman/listinfo/libguestfs> and CC to "
"L<rjones@redhat.com>."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2963
msgid "INTERNATIONALIZATION (I18N) SUPPORT"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2965
msgid "We support i18n (gettext anyhow) in the library."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2967
msgid ""
"However many messages come from the daemon, and we don't translate those at "
"the moment.  One reason is that the appliance generally has all locale files "
"removed from it, because they take up a lot of space.  So we'd have to readd "
"some of those, as well as copying our PO files into the appliance."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2973
msgid ""
"Debugging messages are never translated, since they are intended for the "
"programmers."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:2976
msgid "SOURCE CODE SUBDIRECTORIES"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2980
msgid "C<align>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2982
msgid "L<virt-alignment-scan(1)> command and documentation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2986
msgid "The libguestfs appliance, build scripts and so on."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2988
msgid "C<cat>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2990
msgid ""
"The L<virt-cat(1)>, L<virt-filesystems(1)> and L<virt-ls(1)> commands and "
"documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2993
msgid "C<contrib>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2995
msgid "Outside contributions, experimental parts."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:2997
msgid "C<daemon>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:2999
msgid ""
"The daemon that runs inside the libguestfs appliance and carries out "
"actions."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3002
msgid "C<df>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3004
msgid "L<virt-df(1)> command and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3006
msgid "C<edit>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3008
msgid "L<virt-edit(1)> command and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3010
msgid "C<examples>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3012
msgid "C API example code."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3014
msgid "C<fish>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3016
msgid ""
"L<guestfish(1)>, the command-line shell, and various shell scripts built on "
"top such as L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-tar-in(1)>, "
"L<virt-tar-out(1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3022
msgid "L<virt-format(1)> command and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3024
msgid "C<fuse>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3026
msgid "L<guestmount(1)>, FUSE (userspace filesystem) built on top of libguestfs."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3028
msgid "C<generator>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3030
msgid ""
"The crucially important generator, used to automatically generate large "
"amounts of boilerplate C code for things like RPC and bindings."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3033
msgid "C<inspector>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3035
msgid "L<virt-inspector(1)>, the virtual machine image inspector."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3037
msgid "C<logo>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3039
msgid "Logo used on the website.  The fish is called Arthur by the way."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3041
msgid "C<m4>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3043
msgid "M4 macros used by autoconf."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3045
msgid "C<po>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3047
msgid "Translations of simple gettext strings."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3049
msgid "C<po-docs>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3051
msgid ""
"The build infrastructure and PO files for translations of manpages and POD "
"files.  Eventually this will be combined with the C<po> directory, but that "
"is rather complicated."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3055
msgid "C<rescue>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3057
msgid "L<virt-rescue(1)> command and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3059
msgid "C<resize>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3061
msgid "L<virt-resize(1)> command and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3063
msgid "C<sparsify>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3065
msgid "L<virt-sparsify(1)> command and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3067
msgid "C<src>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3069
msgid "Source code to the C library."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3071
msgid "C<sysprep>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3073
msgid "L<virt-sysprep(1)> command and documentation."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3075
msgid "C<test-tool>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3077
msgid ""
"Test tool for end users to test if their qemu/kernel combination will work "
"with libguestfs."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3080
msgid "C<tests>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3082
msgid "Tests."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3084
msgid "C<tools>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3086
msgid "Command line tools written in Perl (L<virt-win-reg(1)> and many others)."
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3088
msgid "C<csharp>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3090
msgid "C<erlang>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3092
msgid "C<gobject>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3094
msgid "C<haskell>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3096
msgid "C<java>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3098
msgid "C<ocaml>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3100
msgid "C<php>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3102
msgid "C<perl>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3104
msgid "C<python>"
msgstr ""

#. type: =item
#: ../src/guestfs.pod:3106
msgid "C<ruby>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3108
msgid "Language bindings."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3112
msgid "MAKING A STABLE RELEASE"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3114
msgid ""
"When we make a stable release, there are several steps documented here.  See "
"L</LIBGUESTFS VERSION NUMBERS> for general information about the stable "
"branch policy."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3122
msgid "Check C<make && make check> works on at least Fedora, Debian and Ubuntu."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3127
msgid "Finalize RELEASE-NOTES."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3131
msgid "Update ROADMAP."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3135
msgid "Run C<src/api-support/update-from-tarballs.sh>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3139
msgid "Push and pull from Transifex."
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3143
#, no-wrap
msgid ""
" tx push -s\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3145
msgid "to push the latest POT files to Transifex.  Then run:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3147
#, no-wrap
msgid ""
" ./tx-pull.sh\n"
"\n"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3149
msgid "which is a wrapper to pull the latest translated C<*.po> files."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3153
msgid ""
"Create new stable and development directories under "
"L<http://libguestfs.org/download>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3158
msgid "Create the branch in git:"
msgstr ""

#. type: verbatim
#: ../src/guestfs.pod:3160
#, no-wrap
msgid ""
" git tag -a 1.XX.0 -m \"Version 1.XX.0 (stable)\"\n"
" git tag -a 1.YY.0 -m \"Version 1.YY.0 (development)\"\n"
" git branch stable-1.XX\n"
" git push origin tag 1.XX.0 1.YY.0 stable-1.XX\n"
"\n"
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:3167
msgid "LIMITS"
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3169
msgid "PROTOCOL LIMITS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3171
msgid ""
"Internally libguestfs uses a message-based protocol to pass API calls and "
"their responses to and from a small \"appliance\" (see L</INTERNALS> for "
"plenty more detail about this).  The maximum message size used by the "
"protocol is slightly less than 4 MB.  For some API calls you may need to be "
"aware of this limit.  The API calls which may be affected are individually "
"documented, with a link back to this section of the documentation."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3179
msgid ""
"A simple call such as L</guestfs_cat> returns its result (the file data) in "
"a simple string.  Because this string is at some point internally encoded as "
"a message, the maximum size that it can return is slightly under 4 MB.  If "
"the requested file is larger than this then you will get an error."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3185
msgid ""
"In order to transfer large files into and out of the guest filesystem, you "
"need to use particular calls that support this.  The sections L</UPLOADING> "
"and L</DOWNLOADING> document how to do this."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3189
msgid ""
"You might also consider mounting the disk image using our FUSE filesystem "
"support (L<guestmount(1)>)."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3192
msgid "MAXIMUM NUMBER OF DISKS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3194
msgid "When using virtio disks (the default) the current limit is B<25> disks."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3197
msgid ""
"Virtio itself consumes 1 virtual PCI slot per disk, and PCI is limited to 31 "
"slots.  However febootstrap only understands disks with names C</dev/vda> "
"through C</dev/vdz> (26 letters) and it reserves one disk for its own "
"purposes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3202
msgid ""
"We are working to substantially raise this limit in future versions but it "
"requires complex changes to qemu."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3205
msgid ""
"In future versions of libguestfs it should also be possible to \"hot plug\" "
"disks (add and remove disks after calling L</guestfs_launch>).  This also "
"requires changes to qemu."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3209
msgid "MAXIMUM NUMBER OF PARTITIONS PER DISK"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3211
msgid "Virtio limits the maximum number of partitions per disk to B<15>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3213
msgid ""
"This is because it reserves 4 bits for the minor device number (thus "
"C</dev/vda>, and C</dev/vda1> through C</dev/vda15>)."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3216
msgid ""
"If you attach a disk with more than 15 partitions, the extra partitions are "
"ignored by libguestfs."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3219
msgid "MAXIMUM SIZE OF A DISK"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3221
msgid "Probably the limit is between 2**63-1 and 2**64-1 bytes."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3223
msgid ""
"We have tested block devices up to 1 exabyte (2**60 or "
"1,152,921,504,606,846,976 bytes) using sparse files backed by an XFS host "
"filesystem."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3227
msgid ""
"Although libguestfs probably does not impose any limit, the underlying host "
"storage will.  If you store disk images on a host ext4 filesystem, then the "
"maximum size will be limited by the maximum ext4 file size (currently 16 "
"TB).  If you store disk images as host logical volumes then you are limited "
"by the maximum size of an LV."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3233
msgid ""
"For the hugest disk image files, we recommend using XFS on the host for "
"storage."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3236
msgid "MAXIMUM SIZE OF A PARTITION"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3238
msgid ""
"The MBR (ie. classic MS-DOS) partitioning scheme uses 32 bit sector "
"numbers.  Assuming a 512 byte sector size, this means that MBR cannot "
"address a partition located beyond 2 TB on the disk."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3242
msgid ""
"It is recommended that you use GPT partitions on disks which are larger than "
"this size.  GPT uses 64 bit sector numbers and so can address partitions "
"which are theoretically larger than the largest disk we could support."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3247
msgid "MAXIMUM SIZE OF A FILESYSTEM, FILES, DIRECTORIES"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3249
msgid ""
"This depends on the filesystem type.  libguestfs itself does not impose any "
"known limit.  Consult Wikipedia or the filesystem documentation to find out "
"what these limits are."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3253
msgid "MAXIMUM UPLOAD AND DOWNLOAD"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3255
msgid ""
"The API functions L</guestfs_upload>, L</guestfs_download>, "
"L</guestfs_tar_in>, L</guestfs_tar_out> and the like allow unlimited sized "
"uploads and downloads."
msgstr ""

#. type: =head2
#: ../src/guestfs.pod:3259
msgid "INSPECTION LIMITS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3261
msgid ""
"The inspection code has several arbitrary limits on things like the size of "
"Windows Registry hive it will read, and the length of product name.  These "
"are intended to stop a malicious guest from consuming arbitrary amounts of "
"memory and disk space on the host, and should not be reached in practice.  "
"See the source code for more information."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3287
msgid ""
"Set C<LIBGUESTFS_DEBUG=1> to enable verbose messages.  This has the same "
"effect as calling C<guestfs_set_verbose (g, 1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3299
msgid ""
"Set the path that libguestfs uses to search for a supermin appliance.  See "
"the discussion of paths in section L</PATH> above."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3308
msgid "See also L</QEMU WRAPPERS> above."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3312
msgid ""
"Set C<LIBGUESTFS_TRACE=1> to enable command traces.  This has the same "
"effect as calling C<guestfs_set_trace (g, 1)>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3330
msgid ""
"L<guestfs-examples(3)>, L<guestfs-erlang(3)>, L<guestfs-java(3)>, "
"L<guestfs-ocaml(3)>, L<guestfs-perl(3)>, L<guestfs-python(3)>, "
"L<guestfs-ruby(3)>, L<guestfish(1)>, L<guestmount(1)>, "
"L<virt-alignment-scan(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, "
"L<virt-copy-out(1)>, L<virt-df(1)>, L<virt-edit(1)>, L<virt-filesystems(1)>, "
"L<virt-format(1)>, L<virt-inspector(1)>, L<virt-list-filesystems(1)>, "
"L<virt-list-partitions(1)>, L<virt-ls(1)>, L<virt-make-fs(1)>, "
"L<virt-rescue(1)>, L<virt-resize(1)>, L<virt-sparsify(1)>, "
"L<virt-sysprep(1)>, L<virt-tar(1)>, L<virt-tar-in(1)>, L<virt-tar-out(1)>, "
"L<virt-win-reg(1)>, L<guestfs-faq(1)>, L<guestfs-performance(1)>, "
"L<guestfs-testing(1)>, L<libguestfs-test-tool(1)>, "
"L<libguestfs-make-fixed-appliance(1)>, L<febootstrap(1)>, "
"L<febootstrap-supermin-helper(8)>, L<qemu(1)>, L<hivex(3)>, L<stap(1)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3372
msgid ""
"Tools with a similar purpose: L<fdisk(8)>, L<parted(8)>, L<kpartx(8)>, "
"L<lvm(8)>, L<disktype(1)>."
msgstr ""

#. type: =head1
#: ../src/guestfs.pod:3379 ../tools/virt-make-fs.pl:585 ../tools/virt-win-reg.pl:772
msgid "BUGS"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3381
msgid "To get a list of bugs against libguestfs use this link:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3383
msgid "L<https://bugzilla.redhat.com/buglist.cgi?component=libguestfs&product=Virtualization+Tools>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3385
msgid "To report a new bug against libguestfs use this link:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3387
msgid "L<https://bugzilla.redhat.com/enter_bug.cgi?component=libguestfs&product=Virtualization+Tools>"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3389
msgid "When reporting a bug, please check:"
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3395
msgid "That the bug hasn't been reported already."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3399
msgid "That you are testing a recent version."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3403
msgid "Describe the bug accurately, and give a way to reproduce it."
msgstr ""

#. type: textblock
#: ../src/guestfs.pod:3407
msgid ""
"Run libguestfs-test-tool and paste the B<complete, unedited> output into the "
"bug report."
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:1
msgid "B<--hostname> hostname (see C<hostname> below)"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:4
msgid "Change the hostname.  If not given, defaults to C<localhost.localdomain>."
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:6
msgid "B<--script> script (see C<script> below)"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:9
msgid ""
"Run the named C<script> (a shell script or program) against the guest.  The "
"script can be any program on the host.  The script's current directory will "
"be the guest's root directory."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:13
msgid ""
"B<Note:> If the script is not on the $PATH, then you must give the full "
"absolute path to the script."
msgstr ""

#. type: =item
#: ../sysprep/sysprep-extra-options.pod:16
msgid "B<--scriptdir> scriptdir (see C<script> below)"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:19
msgid ""
"The mount point (an empty directory on the host) used when the C<script> "
"operation is enabled and one or more scripts are specified using I<--script> "
"parameter(s)."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:23
msgid "B<Note:> C<scriptdir> B<must> be an absolute path."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-extra-options.pod:25
msgid ""
"If I<--scriptdir> is not specified then a temporary mountpoint will be "
"created."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:1
msgid "B<bash-history> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:4
msgid "Remove the bash history in the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:6
msgid ""
"Remove the bash history of user \"root\" and any other users who have a "
"C<.bash_history> file in their home directory."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:9
msgid "B<blkid-tab> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:12
msgid "Remove blkid tab in the guest."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:14
msgid "B<ca-certificates>"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:16
msgid "Remove CA certificates in the guest."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:18
msgid "B<cron-spool> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:21
msgid "Remove user at-jobs and cron-jobs."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:23
msgid "B<dhcp-client-state> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:26
msgid "Remove DHCP client leases."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:28
msgid "B<dhcp-server-state> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:31
msgid "Remove DHCP server leases."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:33
msgid "B<dovecot-data> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:36
msgid "Remove Dovecot (mail server) data."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:38
msgid "B<flag-reconfiguration>"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:40
msgid "Flag the system for reconfiguration."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:42
msgid "Note that this may require user intervention when the guest is booted."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:45
msgid "B<hostname> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:48
msgid "Change the hostname of the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:50
msgid ""
"This operation changes the hostname of the guest to the value given in the "
"I<--hostname> parameter."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:53
msgid ""
"If the I<--hostname> parameter is not given, then the hostname is changed to "
"C<localhost.localdomain>."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:56
msgid "B<kerberos-data>"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:58
msgid "Remove Kerberos data in the guest."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:60
msgid "B<logfiles> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:63
msgid "Remove many log files from the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:65
msgid "On Linux the following files are removed:"
msgstr ""

#. type: verbatim
#: ../sysprep/sysprep-operations.pod:67
#, no-wrap
msgid ""
" /root/anaconda-ks.cfg\n"
" /root/install.log\n"
" /root/install.log.syslog\n"
" /var/account/pacct\n"
" /var/cache/gdm/*\n"
" /var/lib/AccountService/users/*\n"
" /var/lib/fprint/*\n"
" /var/lib/logrotate.status\n"
" /var/log/*.log*\n"
" /var/log/BackupPC/LOG\n"
" /var/log/audit/*\n"
" /var/log/btmp*\n"
" /var/log/ceph/*.log\n"
" /var/log/chrony/*.log\n"
" /var/log/cron*\n"
" /var/log/cups/*_log\n"
" /var/log/dmesg*\n"
" /var/log/glusterfs/*glusterd.vol.log\n"
" /var/log/glusterfs/glusterfs.log\n"
" /var/log/httpd/*log\n"
" /var/log/jetty/jetty-console.log\n"
" /var/log/lastlog*\n"
" /var/log/libvirt/libvirtd.log\n"
" /var/log/libvirt/lxc/*.log\n"
" /var/log/libvirt/qemu/*.log\n"
" /var/log/libvirt/uml/*.log\n"
" /var/log/mail/*\n"
" /var/log/maillog*\n"
" /var/log/messages*\n"
" /var/log/ppp/connect-errors\n"
" /var/log/secure*\n"
" /var/log/setroubleshoot/*.log\n"
" /var/log/spooler*\n"
" /var/log/squid/*.log\n"
" /var/log/tallylog*\n"
" /var/log/wtmp*\n"
" /var/named/data/named.run\n"
"\n"
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:105
msgid "B<mail-spool> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:108
msgid "Remove email from the local mail spool directory."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:110
msgid "B<net-hwaddr> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:113
msgid "Remove HWADDR (hard-coded MAC address) configuration."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:115
msgid ""
"For Fedora and Red Hat Enterprise Linux, this is removed from C<ifcfg-*> "
"files."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:118
msgid "B<package-manager-cache> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:121
msgid "Remove package manager cache."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:123
msgid "B<pam-data> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:126
msgid "Remove the PAM data in the guest."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:128
msgid "B<random-seed> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:131
msgid "Generate random seed for guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:133
msgid ""
"Write some random bytes from the host into the random seed file of the "
"guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:136
msgid "See L</RANDOM SEED> below."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:138
msgid "B<rhn-systemid> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:141
msgid "Remove the RHN system ID."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:143
msgid "B<samba-db-log> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:146
msgid "Remove the database and log files of Samba."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:148
msgid "B<script> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:151
msgid "Run arbitrary scripts against the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:153
msgid ""
"The C<script> module lets you run arbitrary shell scripts or programs "
"against the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:156
msgid ""
"Note this feature requires FUSE support.  You may have to enable this in "
"your host, for example by adding the current user to the C<fuse> group, or "
"by loading a kernel module."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:160
msgid ""
"Use one or more I<--script> parameters to specify scripts or programs that "
"will be run against the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:163
msgid ""
"The script or program is run with its current directory being the guest's "
"root directory, so relative paths should be used.  For example: C<rm "
"etc/resolv.conf> in the script would remove a Linux guest's DNS "
"configuration file, but C<rm /etc/resolv.conf> would (try to) remove the "
"host's file."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:169
msgid ""
"Normally a temporary mount point for the guest is used, but you can choose a "
"specific one by using the I<--scriptdir> parameter."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:172
msgid "B<smolt-uuid> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:175
msgid "Remove the Smolt hardware UUID."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:177
msgid "B<ssh-hostkeys> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:180
msgid "Remove the SSH host keys in the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:182
msgid ""
"The SSH host keys are regenerated (differently) next time the guest is "
"booted."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:185
msgid ""
"If, after cloning, the guest gets the same IP address, ssh will give you a "
"stark warning about the host key changing:"
msgstr ""

#. type: verbatim
#: ../sysprep/sysprep-operations.pod:188
#, no-wrap
msgid ""
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
" @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
" @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
" IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
"\n"
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:193
msgid "B<ssh-userdir> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:196
msgid "Remove \".ssh\" directories in the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:198
msgid ""
"Remove the C<.ssh> directory of user \"root\" and any other users who have a "
"C<.ssh> directory in their home directory."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:201
msgid "B<sssd-db-log> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:204
msgid "Remove the database and log files of sssd."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:206
msgid "B<udev-persistent-net> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:209
msgid "Remove udev persistent net rules."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:211
msgid ""
"Remove udev persistent net rules which map the guest's existing MAC address "
"to a fixed ethernet device (eg. eth0)."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:214
msgid ""
"After a guest is cloned, the MAC address usually changes.  Since the old MAC "
"address occupies the old name (eg. eth0), this means the fresh MAC address "
"is assigned to a new name (eg. eth1) and this is usually undesirable.  "
"Erasing the udev persistent net rules avoids this."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:219
msgid "B<user-account>"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:221
msgid "Remove the user accounts in the guest."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:223
msgid ""
"Remove all the user accounts and their home directories.  The \"root\" "
"account is not removed."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:226
msgid "B<utmp> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:229
msgid "Remove the utmp file."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:231
msgid ""
"This file records who is currently logged in on a machine.  In modern Linux "
"distros it is stored in a ramdisk and hence not part of the virtual "
"machine's disk, but it was stored on disk in older distros."
msgstr ""

#. type: =head2
#: ../sysprep/sysprep-operations.pod:235
msgid "B<yum-uuid> *"
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:238
msgid "Remove the yum UUID."
msgstr ""

#. type: textblock
#: ../sysprep/sysprep-operations.pod:240
msgid ""
"Yum creates a fresh UUID the next time it runs when it notices that the "
"original UUID has been erased."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:5
msgid "virt-sysprep - Reset or unconfigure a virtual machine so clones can be made"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:9
#, no-wrap
msgid ""
" virt-sysprep [--options] -d domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:11
#, no-wrap
msgid ""
" virt-sysprep [--options] -a disk.img [-a disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:15
msgid ""
"Virt-sysprep \"resets\" or \"unconfigures\" a virtual machine so that clones "
"can be made from it.  Steps in this process include removing SSH host keys, "
"removing persistent network MAC configuration, and removing user accounts.  "
"Each step can be enabled or disabled as required."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:21
msgid ""
"Virt-sysprep modifies the guest or disk image I<in place>.  The guest must "
"be shut down.  If you want to preserve the existing contents of the guest, "
"you I<must copy or clone the disk first>.  See L</COPYING AND CLONING> "
"below."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:26
msgid ""
"You do I<not> need to run virt-sysprep as root.  In fact we'd generally "
"recommend that you don't.  The time you might want to run it as root is when "
"you need root in order to access the disk image, but even in this case it "
"would be better to change the permissions on the disk image to be writable "
"as the non-root user running virt-sysprep."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:32
msgid ""
"\"Sysprep\" stands for \"system preparation\" tool.  The name comes from the "
"Microsoft program C<sysprep.exe> which is used to unconfigure Windows "
"machines in preparation for cloning them.  Having said that, virt-sysprep "
"does I<not> currently work on Microsoft Windows guests.  We plan to support "
"Windows sysprepping in a future version, and we already have code to do it."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:53
msgid ""
"The format of the disk image is auto-detected.  To override this and force a "
"particular format use the I<--format> option."
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:75
msgid "B<--dry-run>"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:77
msgid ""
"Perform a read-only \"dry run\" on the guest.  This runs the sysprep "
"operation, but throws away any changes to the disk at the end."
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:80
msgid "B<--enable> operations"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:82
msgid ""
"Choose which sysprep operations to perform.  Give a comma-separated list of "
"operations, for example:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:85
#, no-wrap
msgid ""
" --enable ssh-hostkeys,udev-persistent-net\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:87
msgid "would enable ONLY C<ssh-hostkeys> and C<udev-persistent-net> operations."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:89
msgid ""
"If the I<--enable> option is not given, then we default to trying most "
"sysprep operations (see I<--list-operations> to show which are enabled)."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:93
msgid ""
"Regardless of the I<--enable> option, sysprep operations are skipped for "
"some guest types."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:96
msgid ""
"Use I<--list-operations> to list operations supported by a particular "
"version of virt-sysprep."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:99
msgid "See L</OPERATIONS> below for a list and an explanation of each operation."
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:102
msgid "B<--format> raw|qcow2|.."
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:104
msgid "B<--format> auto"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:106
msgid ""
"The default for the I<-a> option is to auto-detect the format of the disk "
"image.  Using this forces the disk format for I<-a> options which follow on "
"the command line.  Using I<--format auto> switches back to auto-detection "
"for subsequent I<-a> options."
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:113
#, no-wrap
msgid ""
" virt-sysprep --format raw -a disk.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:117
#, no-wrap
msgid ""
" virt-sysprep --format raw -a disk.img --format auto -a another.img\n"
"\n"
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:126
msgid "B<--list-operations>"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:128
msgid "List the operations supported by the virt-sysprep program."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:130
msgid ""
"These are listed one per line, with one or more single-space-separated "
"fields, eg:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:133
#, no-wrap
msgid ""
" $ virt-sysprep --list-operations\n"
" bash-history * Remove the bash history in the guest\n"
" cron-spool * Remove user at-jobs and cron-jobs\n"
" dhcp-client-state * Remove DHCP client leases\n"
" dhcp-server-state * Remove DHCP server leases\n"
" [etc]\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:140
msgid ""
"The first field is the operation name, which can be supplied to "
"I<--enable>.  The second field is a C<*> character if the operation is "
"enabled by default or blank if not.  Subsequent fields on the same line are "
"the description of the operation."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:145
msgid ""
"Before libguestfs 1.17.33 only the first (operation name) field was shown "
"and all operations were enabled by default."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:152
msgid "Don't print log messages."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:154
msgid "To enable detailed logging of individual file operations, use I<-x>."
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:156
msgid "B<--selinux-relabel>"
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:158
msgid "B<--no-selinux-relabel>"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:160
msgid ""
"I<--selinux-relabel> forces SELinux relabelling next time the guest boots.  "
"I<--no-selinux-relabel> disables relabelling."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:163
msgid ""
"The default is to try to detect if SELinux relabelling is required.  See "
"L</SELINUX RELABELLING> below for more details."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:182
msgid "@EXTRA_OPTIONS@"
msgstr ""

#. type: =head1
#: ../sysprep/virt-sysprep.pod:186
msgid "OPERATIONS"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:188
msgid ""
"If the I<--enable> option is I<not> given, then most sysprep operations are "
"enabled."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:191
msgid ""
"Use C<virt-sysprep --list-operations> to list all operations for your "
"virt-sysprep binary.  The ones which are enabled by default are marked with "
"a C<*> character.  Regardless of the I<--enable> option, sysprep operations "
"are skipped for some guest types."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:196
msgid ""
"Operations can be individually enabled using the I<--enable> option.  Use a "
"comma-separated list, for example:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:199
#, no-wrap
msgid ""
" virt-sysprep --enable=ssh-hostkeys,udev-persistent-net [etc..]\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:201
msgid ""
"Future versions of virt-sysprep may add more operations.  If you are using "
"virt-sysprep and want predictable behaviour, specify only the operations "
"that you want to have enabled."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:205
msgid "C<*> = enabled by default when no I<--enable> option is given."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:207
msgid "@OPERATIONS@"
msgstr ""

#. type: =head1
#: ../sysprep/virt-sysprep.pod:209
msgid "COPYING AND CLONING"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:211
msgid ""
"Virt-sysprep can be used as part of a process of cloning guests, or to "
"prepare a template from which guests can be cloned.  There are many "
"different ways to achieve this using the virt tools, and this section is "
"just an introduction."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:216
msgid "A virtual machine (when switched off) consists of two parts:"
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:220
msgid "I<configuration>"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:222
msgid ""
"The configuration or description of the guest.  eg. The libvirt XML (see "
"C<virsh dumpxml>), the running configuration of the guest, or another "
"external format like OVF."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:226
msgid "Some configuration items that might need to be changed:"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:232
msgid "name"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:236 ../sysprep/virt-sysprep.pod:263
msgid "UUID"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:240
msgid "path to block device(s)"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:244
msgid "network card MAC address"
msgstr ""

#. type: =item
#: ../sysprep/virt-sysprep.pod:248
msgid "I<block device(s)>"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:250
msgid ""
"One or more hard disk images, themselves containing files, directories, "
"applications, kernels, configuration, etc."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:253
msgid "Some things inside the block devices that might need to be changed:"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:259
msgid "hostname and other net configuration"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:267
msgid "SSH host keys"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:271
msgid "Windows unique security ID (SID)"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:275
msgid "Puppet registration"
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:281
msgid "COPYING THE BLOCK DEVICE"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:283
msgid ""
"Starting with an original guest, you probably wish to copy the guest block "
"device and its configuration to make a template.  Then once you are happy "
"with the template, you will want to make many clones from it."
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:288
#, no-wrap
msgid ""
"                        virt-sysprep\n"
"                             |\n"
"                             v\n"
" original guest --------> template ---------->\n"
"                                      \\------> cloned\n"
"                                       \\-----> guests\n"
"                                        \\---->\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:296
msgid ""
"You can, of course, just copy the block device on the host using L<cp(1)> or "
"L<dd(1)>."
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:299
#, no-wrap
msgid ""
"                   dd                 dd\n"
" original guest --------> template ---------->\n"
"                                      \\------> cloned\n"
"                                       \\-----> guests\n"
"                                        \\---->\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:305
msgid "There are some smarter (and faster) ways too:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:311
#, no-wrap
msgid ""
"                          snapshot\n"
"                template ---------->\n"
"                            \\------> cloned\n"
"                             \\-----> guests\n"
"                              \\---->\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:317
msgid ""
"Use the block device as a backing file and create a snapshot on top for each "
"guest.  The advantage is that you don't need to copy the block device (very "
"fast) and only changes are stored (less storage required)."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:322
msgid ""
"Note that writing to the backing file once you have created guests on top of "
"it is not possible: you will corrupt the guests."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:325
msgid ""
"Tools that can do this include: L<qemu-img(1)> (with the I<create -f qcow2 "
"-o backing_file> option), L<lvcreate(8)> (I<--snapshot> option).  Some "
"filesystems (such as btrfs) and most Network Attached Storage devices can "
"also create cheap snapshots from files or LUNs."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:333
msgid "Get your NAS to snapshot and/or duplicate the LUN."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:337
msgid "Prepare your template using L<virt-sparsify(1)>.  See below."
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:341
msgid "VIRT-CLONE"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:343
msgid ""
"A separate tool, L<virt-clone(1)>, can be used to duplicate the block device "
"and/or modify the external libvirt configuration of a guest.  It will reset "
"the name, UUID and MAC address of the guest in the libvirt XML."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:348
msgid ""
"L<virt-clone(1)> does not use libguestfs and cannot look inside the disk "
"image.  This was the original motivation to write virt-sysprep."
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:351
msgid "SPARSIFY"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:353
#, no-wrap
msgid ""
"              virt-sparsify\n"
" original guest --------> template\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:356
msgid ""
"L<virt-sparsify(1)> can be used to make the cloning template smaller, making "
"it easier to compress and/or faster to copy."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:359
msgid ""
"Notice that since virt-sparsify also copies the image, you can use it to "
"make the initial copy (instead of C<dd>)."
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:362
msgid "RESIZE"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:364
#, no-wrap
msgid ""
"                         virt-resize\n"
"                template ---------->\n"
"                            \\------> cloned\n"
"                             \\-----> guests\n"
"                              \\---->\n"
"\n"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:370
msgid ""
"If you want to give people cloned guests, but let them pick the size of the "
"guest themselves (eg. depending on how much they are prepared to pay for "
"disk space), then instead of copying the template, you can run "
"L<virt-resize(1)>.  Virt-resize performs a copy and resize, and thus is "
"ideal for cloning guests from a template."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:378
msgid ""
"Although virt-sysprep removes some sensitive information from the guest, it "
"does not pretend to remove all of it.  You should examine the L</OPERATIONS> "
"above and the guest afterwards."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:382
msgid ""
"Sensitive files are simply removed.  The data they contained may still exist "
"on the disk, easily recovered with a hex editor or undelete tool.  Use "
"L<virt-sparsify(1)> as one way to remove this content.  See also the "
"L<scrub(1)> command to get rid of deleted content in directory entries and "
"inodes."
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:388
msgid "RANDOM SEED"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:390
msgid "I<(This section applies to Linux guests only)>"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:392
msgid ""
"The virt-sysprep C<random-seed> operation writes a few bytes of randomness "
"from the host into the guest's random seed file."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:395
msgid ""
"If this is just done once and the guest is cloned from the same template, "
"then each guest will start with the same entropy, and things like SSH host "
"keys and TCP sequence numbers may be predictable."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:399
msgid ""
"Therefore you should arrange to add more randomness I<after> cloning from a "
"template too, which can be done by just enabling the C<random-seed> "
"operation:"
msgstr ""

#. type: verbatim
#: ../sysprep/virt-sysprep.pod:403
#, no-wrap
msgid ""
" cp template.img newguest.img\n"
" virt-sysprep --enable random-seed -a newguest.img\n"
"\n"
msgstr ""

#. type: =head2
#: ../sysprep/virt-sysprep.pod:406
msgid "SELINUX RELABELLING"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:408
msgid "I<(This section applies to Linux guests using SELinux only)>"
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:410
msgid ""
"If any new files are created by virt-sysprep, then virt-sysprep touches "
"C</.autorelabel> so that these will be correctly labelled by SELinux the "
"next time the guest is booted.  This process interrupts boot and can take "
"some time."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:415
msgid ""
"You can force relabelling for all guests by supplying the "
"I<--selinux-relabel> option."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:418
msgid ""
"You can disable relabelling entirely by supplying the "
"I<--no-selinux-relabel> option."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:430
msgid "This program returns 0 on success, or 1 if there was an error."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:434
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-clone(1)>, L<virt-rescue(1)>, "
"L<virt-resize(1)>, L<virt-sparsify(1)>, L<virsh(1)>, L<lvcreate(8)>, "
"L<qemu-img(1)>, L<scrub(1)>, L<http://libguestfs.org/>, "
"L<http://libvirt.org/>."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:451
msgid "Wanlong Gao, Fujitsu Ltd."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:455
msgid "Copyright (C) 2011-2012 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../sysprep/virt-sysprep.pod:457
msgid "Copyright (C) 2012 Fujitsu Ltd."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:5
msgid "libguestfs-test-tool - Diagnostics for libguestfs"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:9
#, no-wrap
msgid ""
" libguestfs-test-tool [--options]\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:13
msgid ""
"libguestfs-test-tool is a test program shipped with libguestfs to allow you "
"to check basic libguestfs functionality is working.  This is needed because "
"libguestfs occasionally breaks for reasons beyond our control: usually "
"because of changes in the underlying qemu or kernel packages, or the host "
"environment."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:19
msgid "If you suspect a problem in libguestfs, then just run:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:21
#, no-wrap
msgid ""
" libguestfs-test-tool\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:23
msgid "It will print lots of diagnostic messages."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:25
msgid "If it runs to completion successfully, you will see this near the end:"
msgstr ""

#. type: verbatim
#: ../test-tool/libguestfs-test-tool.pod:27
#, no-wrap
msgid ""
" ===== TEST FINISHED OK =====\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:29
msgid "and the test tool will exit with code 0."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:31
msgid ""
"If it fails (and/or exits with non-zero error code), please paste the "
"I<complete, unedited> output of the test tool into a bug report.  More "
"information about reporting bugs can be found on the "
"L<http://libguestfs.org/> website."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:44
msgid "B<--qemu qemu_binary>"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:46
msgid ""
"If you have downloaded another qemu binary, point this option at the full "
"path of the binary to try it."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:49
msgid "B<--qemudir qemu_source_dir>"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:51
msgid ""
"If you have compiled qemu from source, point this option at the source "
"directory to try it."
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:54
msgid "B<-t N>"
msgstr ""

#. type: =item
#: ../test-tool/libguestfs-test-tool.pod:56
msgid "B<--timeout N>"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:58
msgid ""
"Set the launch timeout to C<N> seconds.  The default is 600 seconds (10 "
"minutes) which does not usually need to be adjusted."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:65
msgid "Display the libguestfs version number and exit."
msgstr ""

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:69
msgid "TRYING OUT A DIFFERENT VERSION OF QEMU"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:71
msgid ""
"If you have compiled another version of qemu from source and would like to "
"try that, then you can use the I<--qemudir> option to point to the qemu "
"source directory."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:75
msgid ""
"If you have downloaded a qemu binary from somewhere, use the I<--qemu> "
"option to point to the binary."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:78
msgid ""
"Note when using these options, you can ignore the business of qemu wrapper "
"scripts (L<guestfs(3)/QEMU WRAPPERS>), since libguestfs-test-tool writes a "
"wrapper script for you if one is needed."
msgstr ""

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:82
msgid "TRYING OUT A DIFFERENT KERNEL"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:84
msgid ""
"If you are using febootstrap E<ge> 3.8 then you can select which kernel "
"libguestfs tries.  You do this by setting the environment variables "
"C<FEBOOTSTRAP_KERNEL> and/or C<FEBOOTSTRAP_MODULES>."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:88
msgid ""
"Refer to L<febootstrap-supermin-helper(8)/ENVIRONMENT VARIABLES> for further "
"information."
msgstr ""

#. type: =head1
#: ../test-tool/libguestfs-test-tool.pod:91
msgid "SELF-DIAGNOSIS"
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:93
msgid ""
"Refer to L<guestfs(3)/APPLIANCE BOOT PROCESS> to understand the messages "
"produced by libguestfs-test-tool and/or possible errors."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:98
msgid ""
"libguestfs-test-tool returns I<0> if the tests completed without error, or "
"I<1> if there was an error."
msgstr ""

#. type: textblock
#: ../test-tool/libguestfs-test-tool.pod:108
msgid "L<guestfs(3)>, L<http://libguestfs.org/>, L<http://qemu.org/>."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:32
msgid "virt-list-filesystems - List filesystems in a virtual machine or disk image"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-filesystems.pl:36
#, no-wrap
msgid ""
" virt-list-filesystems [--options] domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-filesystems.pl:38
#, no-wrap
msgid ""
" virt-list-filesystems [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: =head1
#: ../tools/virt-list-filesystems.pl:40 ../tools/virt-list-partitions.pl:40 ../tools/virt-tar.pl:45
msgid "OBSOLETE"
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:42 ../tools/virt-list-partitions.pl:42
msgid ""
"This tool is obsolete.  Use L<virt-filesystems(1)> as a more flexible "
"replacement."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:47
msgid ""
"C<virt-list-filesystems> is a command line tool to list the filesystems that "
"are contained in a virtual machine or disk image."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:51
msgid ""
"C<virt-list-filesystems> is just a simple wrapper around L<libguestfs(3)> "
"functionality.  For more complex cases you should look at the "
"L<guestfish(1)> tool."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:114
msgid ""
"With this option, C<virt-list-filesystems> displays the type of each "
"filesystem too (where \"type\" means C<ext3>, C<xfs> etc.)"
msgstr ""

#. type: =item
#: ../tools/virt-list-filesystems.pl:121
msgid "B<-a>"
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:125
msgid ""
"Normally we only show mountable filesystems.  If this option is given then "
"swap devices are shown too."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:199
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-tar(1)>, "
"L<virt-filesystems(1)>, L<virt-list-partitions(1)>, L<Sys::Guestfs(3)>, "
"L<Sys::Guestfs::Lib(3)>, L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../tools/virt-list-filesystems.pl:216 ../tools/virt-tar.pl:317
msgid "Copyright (C) 2009 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:32
msgid "virt-list-partitions - List partitions in a virtual machine or disk image"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-partitions.pl:36
#, no-wrap
msgid ""
" virt-list-partitions [--options] domname\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-list-partitions.pl:38
#, no-wrap
msgid ""
" virt-list-partitions [--options] disk.img [disk.img ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:47
msgid ""
"C<virt-list-partitions> is a command line tool to list the partitions that "
"are contained in a virtual machine or disk image.  It is mainly useful as a "
"first step to using L<virt-resize(1)>."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:52
msgid ""
"C<virt-list-partitions> is just a simple wrapper around L<libguestfs(3)> "
"functionality.  For more complex cases you should look at the "
"L<guestfish(1)> tool."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:115
msgid "Show sizes in human-readable form (eg. \"1G\")."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:125
msgid ""
"With this option, C<virt-list-partitions> displays the type and size of each "
"partition too (where \"type\" means C<ext3>, C<pv> etc.)"
msgstr ""

#. type: =item
#: ../tools/virt-list-partitions.pl:132
msgid "B<-t>"
msgstr ""

#. type: =item
#: ../tools/virt-list-partitions.pl:134
msgid "B<--total>"
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:136
msgid "Display the total size of each block device (as a separate row or rows)."
msgstr ""

#. type: textblock
#: ../tools/virt-list-partitions.pl:269
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, "
"L<virt-list-filesystems(1)>, L<virt-resize(1)>, L<Sys::Guestfs(3)>, "
"L<Sys::Guestfs::Lib(3)>, L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:37
msgid "virt-make-fs - Make a filesystem from a tar archive or files"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:41
#, no-wrap
msgid ""
" virt-make-fs [--options] input.tar output.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:43
#, no-wrap
msgid ""
" virt-make-fs [--options] input.tar.gz output.img\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:45
#, no-wrap
msgid ""
" virt-make-fs [--options] directory output.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:49
msgid ""
"Virt-make-fs is a command line tool for creating a filesystem from a tar "
"archive or some files in a directory.  It is similar to tools like "
"L<mkisofs(1)>, L<genisoimage(1)> and L<mksquashfs(1)>.  Unlike those tools, "
"it can create common filesystem types like ext2/3 or NTFS, which can be "
"useful if you want to attach these filesystems to existing virtual machines "
"(eg. to import large amounts of read-only data to a VM)."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:57
msgid "To create blank disks, use L<virt-format(1)>."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:59
msgid "Basic usage is:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:61
#, no-wrap
msgid ""
" virt-make-fs input output.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:63
msgid ""
"where C<input> is either a directory containing files that you want to add, "
"or a tar archive (either uncompressed tar or gzip-compressed tar); and "
"C<output.img> is a disk image.  The input type is detected automatically.  "
"The output disk image defaults to a raw ext2 sparse image unless you specify "
"extra flags (see L</OPTIONS> below)."
msgstr ""

#. type: =head2
#: ../tools/virt-make-fs.pl:69
msgid "FILESYSTEM TYPE"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:71
msgid ""
"The default filesystem type is C<ext2>.  Just about any filesystem type that "
"libguestfs supports can be used (but I<not> read-only formats like "
"ISO9660).  Here are some of the more common choices:"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:77
msgid "I<ext3>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:79
msgid ""
"Note that ext3 filesystems contain a journal, typically 1-32 MB in size.  If "
"you are not going to use the filesystem in a way that requires the journal, "
"then this is just wasted overhead."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:83
msgid "I<ntfs> or I<vfat>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:85
msgid "Useful if exporting data to a Windows guest."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:87
msgid ""
"I<Note for vfat>: The tar archive or local directory must only contain files "
"which are owned by root (ie. UID:GID = 0:0).  The reason is that the tar "
"program running within libguestfs is unable to change the ownership of "
"non-root files, since vfat itself does not support this."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:92
msgid "I<minix>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:94
msgid ""
"Lower overhead than C<ext2>, but certain limitations on filename length and "
"total filesystem size."
msgstr ""

#. type: =head3
#: ../tools/virt-make-fs.pl:99 ../tools/virt-make-fs.pl:118 ../tools/virt-make-fs.pl:151
msgid "EXAMPLE"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:101
#, no-wrap
msgid ""
" virt-make-fs --type=minix input minixfs.img\n"
"\n"
msgstr ""

#. type: =head2
#: ../tools/virt-make-fs.pl:103
msgid "TO PARTITION OR NOT TO PARTITION"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:105
msgid "Optionally virt-make-fs can add a partition table to the output disk."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:107
msgid ""
"Adding a partition can make the disk image more compatible with certain "
"virtualized operating systems which don't expect to see a filesystem "
"directly located on a block device (Linux doesn't care and will happily "
"handle both types)."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:112
msgid ""
"On the other hand, if you have a partition table then the output image is no "
"longer a straight filesystem.  For example you cannot run L<fsck(8)> "
"directly on a partitioned disk image.  (However libguestfs tools such as "
"L<guestfish(1)> and L<virt-resize(1)> can still be used)."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:120
msgid "Add an MBR partition:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:122
#, no-wrap
msgid ""
" virt-make-fs --partition -- input disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:124
msgid ""
"If the output disk image could be terabyte-sized or larger, it's better to "
"use an EFI/GPT-compatible partition table:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:127
#, no-wrap
msgid ""
" virt-make-fs --partition=gpt --size=+4T --format=qcow2 input disk.img\n"
"\n"
msgstr ""

#. type: =head2
#: ../tools/virt-make-fs.pl:129
msgid "EXTRA SPACE"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:131
msgid ""
"Unlike formats such as tar and squashfs, a filesystem does not \"just fit\" "
"the files that it contains, but might have extra space.  Depending on how "
"you are going to use the output, you might think this extra space is wasted "
"and want to minimize it, or you might want to leave space so that more files "
"can be added later.  Virt-make-fs defaults to minimizing the extra space, "
"but you can use the I<--size> flag to leave space in the filesystem if you "
"want it."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:139
msgid ""
"An alternative way to leave extra space but not make the output image any "
"bigger is to use an alternative disk image format (instead of the default "
"\"raw\" format).  Using I<--format=qcow2> will use the native QEmu/KVM qcow2 "
"image format (check your hypervisor supports this before using it).  This "
"allows you to choose a large I<--size> but the extra space won't actually be "
"allocated in the image until you try to store something in it."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:147
msgid ""
"Don't forget that you can also use local commands including L<resize2fs(8)> "
"and L<virt-resize(1)> to resize existing filesystems, or rerun virt-make-fs "
"to build another image from scratch."
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:153
#, no-wrap
msgid ""
" virt-make-fs --format=qcow2 --size=+200M input output.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:181
msgid "Enable debugging information."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:187
msgid "B<--size=E<lt>NE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:189
msgid "B<--size=+E<lt>NE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:191
msgid "B<-s E<lt>NE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:193
msgid "B<-s +E<lt>NE<gt>>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:195
msgid "Use the I<--size> (or I<-s>) option to choose the size of the output image."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:198
msgid ""
"If this option is I<not> given, then the output image will be just large "
"enough to contain all the files, with not much wasted space."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:201
msgid ""
"To choose a fixed size output disk, specify an absolute number followed by "
"b/K/M/G/T/P/E to mean bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, "
"Petabytes or Exabytes.  This must be large enough to contain all the input "
"files, else you will get an error."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:206
msgid ""
"To leave extra space, specify C<+> (plus sign) and a number followed by "
"b/K/M/G/T/P/E to mean bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, "
"Petabytes or Exabytes.  For example: I<--size=+200M> means enough space for "
"the input files, and (approximately) an extra 200 MB free space."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:212
msgid ""
"Note that virt-make-fs estimates free space, and therefore will not produce "
"filesystems containing precisely the free space requested.  (It is much more "
"expensive and time-consuming to produce a filesystem which has precisely the "
"desired free space)."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:221
msgid "B<--format=E<lt>fmtE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:223
msgid "B<-F E<lt>fmtE<gt>>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:225
msgid "Choose the output disk image format."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:227
msgid "The default is C<raw> (raw sparse disk image)."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:229
msgid ""
"For other choices, see the L<qemu-img(1)> manpage.  The only other choice "
"that would really make sense here is C<qcow2>."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:236
msgid "B<--type=E<lt>fsE<gt>>"
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:238
msgid "B<-t E<lt>fsE<gt>>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:240
msgid "Choose the output filesystem type."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:242
msgid "The default is C<ext2>."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:244
msgid "Any filesystem which is supported read-write by libguestfs can be used here."
msgstr ""

#. type: =item
#: ../tools/virt-make-fs.pl:253
msgid "B<--partition=E<lt>parttypeE<gt>>"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:255
msgid ""
"If specified, this flag adds an MBR partition table to the output disk "
"image."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:258
msgid ""
"You can change the partition table type, eg. I<--partition=gpt> for large "
"disks."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:261
msgid ""
"Note that if you just use a lonesome I<--partition>, the Perl option parser "
"might consider the next parameter to be the partition type.  For example:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:265
#, no-wrap
msgid ""
" virt-make-fs --partition input.tar output.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:267
msgid ""
"would cause virt-make-fs to think you wanted to use a partition type of "
"C<input.tar> which is completely wrong.  To avoid this, use I<--> (a double "
"dash) between options and the input and output arguments:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:271
#, no-wrap
msgid ""
" virt-make-fs --partition -- input.tar output.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:273
msgid "For MBR, virt-make-fs sets the partition type byte automatically."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:572
msgid ""
"L<guestfish(1)>, L<virt-format(1)>, L<virt-resize(1)>, L<virt-tar-in(1)>, "
"L<mkisofs(1)>, L<genisoimage(1)>, L<mksquashfs(1)>, L<mke2fs(8)>, "
"L<resize2fs(8)>, L<guestfs(3)>, L<Sys::Guestfs(3)>, "
"L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:587 ../tools/virt-win-reg.pl:774
msgid ""
"When reporting bugs, please enable debugging and capture the I<complete> "
"output:"
msgstr ""

#. type: verbatim
#: ../tools/virt-make-fs.pl:590
#, no-wrap
msgid ""
" export LIBGUESTFS_DEBUG=1\n"
" virt-make-fs --debug [...] > /tmp/virt-make-fs.log 2>&1\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-make-fs.pl:593
msgid ""
"Attach /tmp/virt-make-fs.log to a new bug report at "
"L<https://bugzilla.redhat.com/>"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:33
msgid "virt-tar - Extract or upload files to a virtual machine"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:37
#, no-wrap
msgid ""
" virt-tar [--options] -x domname directory tarball\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:39
#, no-wrap
msgid ""
" virt-tar [--options] -u domname tarball directory\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:41
#, no-wrap
msgid ""
" virt-tar [--options] disk.img [disk.img ...] -x directory tarball\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:43
#, no-wrap
msgid ""
" virt-tar [--options] disk.img [disk.img ...] -u tarball directory\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:47
msgid ""
"This tool is obsolete.  Use L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
"L<virt-tar-in(1)>, L<virt-tar-out(1)> as replacements."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:52
msgid "Download C</home> from the VM into a local tarball:"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:54
#, no-wrap
msgid ""
" virt-tar -x domname /home home.tar\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:56
#, no-wrap
msgid ""
" virt-tar -zx domname /home home.tar.gz\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:58
msgid "Upload a local tarball and unpack it inside C</tmp> in the VM:"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:60
#, no-wrap
msgid ""
" virt-tar -u domname uploadstuff.tar /tmp\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-tar.pl:62
#, no-wrap
msgid ""
" virt-tar -zu domname uploadstuff.tar.gz /tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:66
msgid ""
"You must I<not> use C<virt-tar> with the I<-u> option (upload) on live "
"virtual machines.  If you do this, you risk disk corruption in the VM.  "
"C<virt-tar> tries to stop you from doing this, but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:71
msgid ""
"You can use I<-x> (extract) on live virtual machines, but you might get "
"inconsistent results or errors if there is filesystem activity inside the "
"VM.  If the live VM is synched and quiescent, then C<virt-tar> will usually "
"work, but the only way to guarantee consistent results is if the virtual "
"machine is shut down."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:79
msgid ""
"C<virt-tar> is a general purpose archive tool for downloading and uploading "
"parts of a guest filesystem.  There are many possibilities: making backups, "
"uploading data files, snooping on guest activity, fixing or customizing "
"guests, etc."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:84
msgid ""
"If you want to just view a single file, use L<virt-cat(1)>.  If you just "
"want to edit a single file, use L<virt-edit(1)>.  For more complex cases you "
"should look at the L<guestfish(1)> tool."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:88
msgid ""
"There are two modes of operation: I<-x> (eXtract) downloads a directory and "
"its contents (recursively) from the virtual machine into a local tarball.  "
"I<-u> uploads from a local tarball, unpacking it into a directory inside the "
"virtual machine.  You cannot use these two options together."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:94
msgid ""
"In addition, you may need to use the I<-z> (gZip) option to enable "
"compression.  When uploading, you have to specify I<-z> if the upload file "
"is compressed because virt-tar won't detect this on its own."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:98
msgid ""
"C<virt-tar> can only handle tar (optionally gzipped) format tarballs.  For "
"example it cannot do PKZip files or bzip2 compression.  If you want that "
"then you'll have to rebuild the tarballs yourself.  (This is a limitation of "
"the L<libguestfs(3)> API)."
msgstr ""

#. type: =item
#: ../tools/virt-tar.pl:160
msgid "B<--extract>"
msgstr ""

#. type: =item
#: ../tools/virt-tar.pl:162
msgid "B<--download>"
msgstr ""

#. type: =item
#: ../tools/virt-tar.pl:164
msgid "B<-u>"
msgstr ""

#. type: =item
#: ../tools/virt-tar.pl:166
msgid "B<--upload>"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:168
msgid ""
"Use I<-x> to extract (download) a directory from a virtual machine to a "
"local tarball."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:171
msgid ""
"Use I<-u> to upload and unpack from a local tarball into a virtual machine.  "
"Please read the L</WARNING> section above before using this option."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:175
msgid "You must specify exactly one of these options."
msgstr ""

#. type: =item
#: ../tools/virt-tar.pl:181
msgid "B<-z>"
msgstr ""

#. type: =item
#: ../tools/virt-tar.pl:183
msgid "B<--gzip>"
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:185
msgid "Specify that the input or output tarball is gzip-compressed."
msgstr ""

#. type: textblock
#: ../tools/virt-tar.pl:298
msgid ""
"L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-edit(1)>, "
"L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-tar-in(1)>, "
"L<virt-tar-out(1)>, L<Sys::Guestfs(3)>, L<Sys::Guestfs::Lib(3)>, "
"L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:37
msgid ""
"virt-win-reg - Export and merge Windows Registry entries from a Windows "
"guest"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:41
#, no-wrap
msgid ""
" virt-win-reg domname 'HKLM\\Path\\To\\Subkey'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:43
#, no-wrap
msgid ""
" virt-win-reg domname 'HKLM\\Path\\To\\Subkey' name\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:45
#, no-wrap
msgid ""
" virt-win-reg domname 'HKLM\\Path\\To\\Subkey' @\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:47
#, no-wrap
msgid ""
" virt-win-reg --merge domname [input.reg ...]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:49
#, no-wrap
msgid ""
" virt-win-reg [--options] disk.img ... # instead of domname\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:53
msgid ""
"You must I<not> use C<virt-win-reg> with the I<--merge> option on live "
"virtual machines.  If you do this, you I<will> get irreversible disk "
"corruption in the VM.  C<virt-win-reg> tries to stop you from doing this, "
"but doesn't catch all cases."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:58
msgid ""
"Modifying the Windows Registry is an inherently risky operation.  The format "
"is deliberately obscure and undocumented, and Registry changes can leave the "
"system unbootable.  Therefore when using the I<--merge> option, make sure "
"you have a reliable backup first."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:65
msgid ""
"This program can export and merge Windows Registry entries from a Windows "
"guest."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:68
msgid ""
"The first parameter is the libvirt guest name or the raw disk image of a "
"Windows guest."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:71
msgid ""
"If I<--merge> is I<not> specified, then the chosen registry key is "
"displayed/exported (recursively).  For example:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:74
#, no-wrap
msgid ""
" $ virt-win-reg Windows7 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft'\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:76
msgid "You can also display single values from within registry keys, for example:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:79
#, no-wrap
msgid ""
" $ cvkey='HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'\n"
" $ virt-win-reg Windows7 $cvkey ProductName\n"
" Windows 7 Enterprise\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:83
msgid ""
"With I<--merge>, you can merge a textual regedit file into the Windows "
"Registry:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:86
#, no-wrap
msgid ""
" $ virt-win-reg --merge Windows7 changes.reg\n"
"\n"
msgstr ""

#. type: =head2
#: ../tools/virt-win-reg.pl:88
msgid "NOTE"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:90
msgid ""
"This program is only meant for simple access to the registry.  If you want "
"to do complicated things with the registry, we suggest you download the "
"Registry hive files from the guest using L<libguestfs(3)> or L<guestfish(1)> "
"and access them locally, eg. using L<hivex(3)>, L<hivexsh(1)> or "
"L<hivexregedit(1)>."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:159
msgid "B<--merge>"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:161
msgid ""
"In merge mode, this merges a textual regedit file into the Windows Registry "
"of the virtual machine.  If this flag is I<not> given then virt-win-reg "
"displays or exports Registry entries instead."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:165
msgid ""
"Note that I<--merge> is I<unsafe> to use on live virtual machines, and will "
"result in disk corruption.  However exporting (without this flag)  is always "
"safe."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:173
msgid "B<--encoding> UTF-16LE|ASCII"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:175
msgid ""
"When merging (only), you may need to specify the encoding for strings to be "
"used in the hive file.  This is explained in detail in "
"L<Win::Hivex::Regedit(3)/ENCODING STRINGS>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:179
msgid ""
"The default is to use UTF-16LE, which should work with recent versions of "
"Windows."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:186
msgid "B<--unsafe-printable-strings>"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:188
msgid ""
"When exporting (only), assume strings are UTF-16LE and print them as strings "
"instead of hex sequences.  Remove the final zero codepoint from strings if "
"present."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:192
msgid ""
"This is unsafe and does not preserve the fidelity of strings in the original "
"Registry for various reasons:"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:199
msgid ""
"Assumes the original encoding is UTF-16LE.  ASCII strings and strings in "
"other encodings will be corrupted by this transformation."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:204
msgid ""
"Assumes that everything which has type 1 or 2 is really a string and that "
"everything else is not a string, but the type field in real Registries is "
"not reliable."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:210
msgid ""
"Loses information about whether a zero codepoint followed the string in the "
"Registry or not."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:215
msgid ""
"This all happens because the Registry itself contains no information about "
"how strings are encoded (see L<Win::Hivex::Regedit(3)/ENCODING STRINGS>)."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:219
msgid ""
"You should only use this option for quick hacking and debugging of the "
"Registry contents, and I<never> use it if the output is going to be passed "
"into another program or stored in another Registry."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:556
msgid "SUPPORTED SYSTEMS"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:558
msgid ""
"The program currently supports Windows NT-derived guests starting with "
"Windows XP through to at least Windows 7."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:561
msgid "The following Registry keys are supported:"
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:565
msgid "C<HKEY_LOCAL_MACHINE\\SAM>"
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:567
msgid "C<HKEY_LOCAL_MACHINE\\SECURITY>"
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:569
msgid "C<HKEY_LOCAL_MACHINE\\SOFTWARE>"
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:571
msgid "C<HKEY_LOCAL_MACHINE\\SYSTEM>"
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:573
msgid "C<HKEY_USERS\\.DEFAULT>"
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:575
msgid "C<HKEY_USERS\\I<SID>>"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:577
msgid "where I<SID> is a Windows User SID (eg. C<S-1-5-18>)."
msgstr ""

#. type: =item
#: ../tools/virt-win-reg.pl:579
msgid "C<HKEY_USERS\\I<username>>"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:581
msgid "where I<username> is a local user name (this is a libguestfs extension)."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:585
msgid ""
"You can use C<HKLM> as a shorthand for C<HKEY_LOCAL_MACHINE>, and C<HKU> for "
"C<HKEY_USERS>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:588
msgid ""
"The literal keys C<HKEY_USERS\\$SID> and C<HKEY_CURRENT_USER> are not "
"supported (there is no \"current user\")."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:591
msgid "ENCODING"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:593
msgid ""
"C<virt-win-reg> expects that regedit files have already been reencoded in "
"the local encoding.  Usually on Linux hosts, this means UTF-8 with "
"Unix-style line endings.  Since Windows regedit files are often in UTF-16LE "
"with Windows-style line endings, you may need to reencode the whole file "
"before or after processing."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:599
msgid ""
"To reencode a file from Windows format to Linux (before processing it with "
"the I<--merge> option), you would do something like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:602
#, no-wrap
msgid ""
" iconv -f utf-16le -t utf-8 < win.reg | dos2unix > linux.reg\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:604
msgid ""
"To go in the opposite direction, after exporting and before sending the file "
"to a Windows user, do something like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:607
#, no-wrap
msgid ""
" unix2dos linux.reg | iconv -f utf-8 -t utf-16le > win.reg\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:609
msgid "For more information about encoding, see L<Win::Hivex::Regedit(3)>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:611
msgid ""
"If you are unsure about the current encoding, use the L<file(1)> command.  "
"Recent versions of Windows regedit.exe produce a UTF-16LE file with "
"Windows-style (CRLF) line endings, like this:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:615
#, no-wrap
msgid ""
" $ file software.reg\n"
" software.reg: Little-endian UTF-16 Unicode text, with very long lines,\n"
" with CRLF line terminators\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:619
msgid "This file would need conversion before you could I<--merge> it."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:621
msgid "CurrentControlSet etc."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:623
msgid ""
"Registry keys like C<CurrentControlSet> don't really exist in the Windows "
"Registry at the level of the hive file, and therefore you cannot modify "
"these."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:627
msgid ""
"C<CurrentControlSet> is usually an alias for C<ControlSet001>.  In some "
"circumstances it might refer to another control set.  The way to find out is "
"to look at the C<HKLM\\SYSTEM\\Select> key:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:631
#, no-wrap
msgid ""
" # virt-win-reg WindowsGuest 'HKLM\\SYSTEM\\Select'\n"
" [HKEY_LOCAL_MACHINE\\SYSTEM\\Select]\n"
" \"Current\"=dword:00000001\n"
" \"Default\"=dword:00000001\n"
" \"Failed\"=dword:00000000\n"
" \"LastKnownGood\"=dword:00000002\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:638
msgid "\"Current\" is the one which Windows will choose when it boots."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:640
msgid "Similarly, other C<Current...> keys in the path may need to be replaced."
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:643
msgid "DELETING REGISTRY KEYS AND VALUES"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:645
msgid "To delete a whole registry key, use the syntax:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:647
#, no-wrap
msgid ""
" [-HKEY_LOCAL_MACHINE\\Foo]\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:649
msgid "To delete a single value within a key, use the syntax:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:651
#, no-wrap
msgid ""
" [HKEY_LOCAL_MACHINE\\Foo]\n"
" \"Value\"=-\n"
"\n"
msgstr ""

#. type: =head1
#: ../tools/virt-win-reg.pl:654
msgid "WINDOWS TIPS"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:656
msgid ""
"Note that some of these tips modify the guest disk image.  The guest I<must> "
"be shut off, else you will get disk corruption."
msgstr ""

#. type: =head2
#: ../tools/virt-win-reg.pl:659
msgid "RUNNING A BATCH SCRIPT WHEN A USER LOGS IN"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:661
msgid ""
"Prepare a DOS batch script, VBScript or executable.  Upload this using "
"L<guestfish(1)>.  For this example the script is called C<test.bat> and it "
"is uploaded into C<C:\\>:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:665
#, no-wrap
msgid ""
" guestfish -i -d WindowsGuest upload test.bat /test.bat\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:667
msgid "Prepare a regedit file containing the registry change:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:669
#, no-wrap
msgid ""
" cat > test.reg <<'EOF'\n"
" [HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce]\n"
" \"Test\"=\"c:\\\\test.bat\"\n"
" EOF\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:674
msgid ""
"In this example we use the key C<RunOnce> which means that the script will "
"run precisely once when the first user logs in.  If you want it to run every "
"time a user logs in, replace C<RunOnce> with C<Run>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:678
msgid "Now update the registry:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:680
#, no-wrap
msgid ""
" virt-win-reg --merge WindowsGuest test.reg\n"
"\n"
msgstr ""

#. type: =head2
#: ../tools/virt-win-reg.pl:682
msgid "INSTALLING A SERVICE"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:684
msgid ""
"This section assumes you are familiar with Windows services, and you either "
"have a program which handles the Windows Service Control Protocol directly "
"or you want to run any program using a service wrapper like SrvAny or the "
"free RHSrvAny."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:689
msgid ""
"First upload the program and optionally the service wrapper.  In this case "
"the test program is called C<test.exe> and we are using the RHSrvAny "
"wrapper:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:693
#, no-wrap
msgid ""
" guestfish -i -d WindowsGuest <<EOF\n"
"   upload rhsrvany.exe /rhsrvany.exe\n"
"   upload test.exe /test.exe\n"
" EOF\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:698
msgid ""
"Prepare a regedit file containing the registry changes.  In this example, "
"the first registry change is needed for the service itself or the service "
"wrapper (if used).  The second registry change is only needed because I am "
"using the RHSrvAny service wrapper."
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:703
#, no-wrap
msgid ""
" cat > service.reg <<'EOF'\n"
" [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny]\n"
" \"Type\"=dword:00000010\n"
" \"Start\"=dword:00000002\n"
" \"ErrorControl\"=dword:00000001\n"
" \"ImagePath\"=\"c:\\\\rhsrvany.exe\"\n"
" \"DisplayName\"=\"RHSrvAny\"\n"
" \"ObjectName\"=\"NetworkService\"\n"
" \n"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:712
#, no-wrap
msgid ""
" [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny\\Parameters]\n"
" \"CommandLine\"=\"c:\\\\test.exe\"\n"
" \"PWD\"=\"c:\\\\Temp\"\n"
" EOF\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:723
msgid ""
"For use of C<ControlSet001> see the section above in this manual page.  You "
"may need to adjust this according to the control set that is in use by the "
"guest."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:729
msgid ""
"C<\"ObjectName\"> controls the privileges that the service will have.  An "
"alternative is C<\"ObjectName\"=\"LocalSystem\"> which would be the most "
"privileged account."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:735
msgid ""
"For the meaning of the magic numbers, see this Microsoft KB article: "
"L<http://support.microsoft.com/kb/103000>."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:740
msgid "Update the registry:"
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:742
#, no-wrap
msgid ""
" virt-win-reg --merge WindowsGuest service.reg\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:746
msgid ""
"Be careful when passing parameters containing C<\\> (backslash) in the "
"shell.  Usually you will have to use 'single quotes' or double backslashes "
"(but not both) to protect them from the shell."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:750
msgid "Paths and value names are case-insensitive."
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:759
msgid ""
"L<hivex(3)>, L<hivexsh(1)>, L<hivexregedit(1)>, L<guestfs(3)>, "
"L<guestfish(1)>, L<virt-cat(1)>, L<Sys::Guestfs(3)>, "
"L<Sys::Guestfs::Lib(3)>, L<Win::Hivex(3)>, L<Win::Hivex::Regedit(3)>, "
"L<Sys::Virt(3)>, L<http://libguestfs.org/>."
msgstr ""

#. type: verbatim
#: ../tools/virt-win-reg.pl:777
#, no-wrap
msgid ""
" export LIBGUESTFS_DEBUG=1\n"
" virt-win-reg --debug [... rest ...] > /tmp/virt-win-reg.log 2>&1\n"
"\n"
msgstr ""

#. type: textblock
#: ../tools/virt-win-reg.pl:780
msgid ""
"Attach /tmp/virt-win-reg.log to a new bug report at "
"L<https://bugzilla.redhat.com/>"
msgstr ""
