From: "Richard W.M. Jones" <rjones@redhat.com>
Date: Sun, 14 Sep 2014 19:03:28 +0100
Subject: v2v: Add stringMap.mli (interface).

Hopefully this should fix the incorrect build problem.  See discussion
here:

https://www.redhat.com/archives/libguestfs/2014-September/msg00071.html

The interface was generated using 'ocamlc -i'.
---
 v2v/Makefile.am   |  3 ++-
 v2v/stringMap.mli | 46 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 48 insertions(+), 1 deletion(-)
 create mode 100644 v2v/stringMap.mli

diff --git a/v2v/Makefile.am b/v2v/Makefile.am
index 2a540f1..553b93c 100644
--- a/v2v/Makefile.am
+++ b/v2v/Makefile.am
@@ -35,6 +35,7 @@ SOURCES_MLI = \
 	input_disk.mli \
 	input_libvirt.mli \
 	input_libvirtxml.mli \
+	input_ova.mli \
 	JSON.mli \
 	lib_esx.mli \
 	lib_linux.mli \
@@ -42,12 +43,12 @@ SOURCES_MLI = \
 	lib_xen.mli \
 	modules_list.mli \
 	output_glance.mli \
-	input_ova.mli \
 	output_libvirt.mli \
 	output_local.mli \
 	output_null.mli \
 	output_rhev.mli \
 	output_vdsm.mli \
+	stringMap.mli \
 	types.mli \
 	xml.mli
 
diff --git a/v2v/stringMap.mli b/v2v/stringMap.mli
new file mode 100644
index 0000000..d70af98
--- /dev/null
+++ b/v2v/stringMap.mli
@@ -0,0 +1,46 @@
+(* virt-v2v
+ * Copyright (C) 2009-2014 Red Hat Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *)
+
+type key = String.t
+type 'a t = 'a Map.Make(String).t
+
+val empty : 'a t
+val is_empty : 'a t -> bool
+val mem : key -> 'a t -> bool
+val add : key -> 'a -> 'a t -> 'a t
+val singleton : key -> 'a -> 'a t
+val remove : key -> 'a t -> 'a t
+val merge : (key -> 'a option -> 'b option -> 'c option) -> 'a t -> 'b t -> 'c t
+val compare : ('a -> 'a -> int) -> 'a t -> 'a t -> int
+val equal : ('a -> 'a -> bool) -> 'a t -> 'a t -> bool
+val iter : (key -> 'a -> unit) -> 'a t -> unit
+val fold : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
+val for_all : (key -> 'a -> bool) -> 'a t -> bool
+val exists : (key -> 'a -> bool) -> 'a t -> bool
+val filter : (key -> 'a -> bool) -> 'a t -> 'a t
+val partition : (key -> 'a -> bool) -> 'a t -> 'a t * 'a t
+val cardinal : 'a t -> int
+val bindings : 'a t -> (key * 'a) list
+val min_binding : 'a t -> key * 'a
+val max_binding : 'a t -> key * 'a
+val choose : 'a t -> key * 'a
+val split : key -> 'a t -> 'a t * 'a option * 'a t
+val find : key -> 'a t -> 'a
+val map : ('a -> 'b) -> 'a t -> 'b t
+val mapi : (key -> 'a -> 'b) -> 'a t -> 'b t
+val keys : 'a t -> key list
